double sub_1B6A81DC4()
{
  uint64_t v0;
  float32x4_t v1;
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float32x4_t v8;
  double result;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  void v14[2];
  unsigned char v15[80];

  if (sub_1B62E9F00((uint64_t (*)(void, void, uint64_t))sub_1B62EA0CC))
  {
    *(double *)v1.i64 = sub_1B6A81A4C();
    v10 = v1;
    v11 = v2;
    v12 = v3;
    v13 = v4;
    v5 = *(void *)(*(void *)v0 + 176);
    swift_retain();
    swift_retain();
    sub_1B6346CF0(v5, (uint64_t)v14);
    v7 = v14[0];
    v6 = v14[1];
    swift_release();
    swift_release();
    sub_1B633C598((uint64_t)v14, (uint64_t)v15);
    if (v15[64])
    {
      v8 = (float32x4_t)xmmword_1B6E4F300;
    }
    else
    {
      v8.i64[0] = v7;
      v8.i64[1] = v6;
    }
    *(void *)&result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v10, v8.f32[0]), v11, *(float32x2_t *)v8.f32, 1), v12, v8, 2), v13, v8, 3).u64[0];
  }
  else
  {
    *(void *)&result = 1065353216;
  }
  return result;
}

void sub_1B6A81F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6, float a7)
{
  v8 = v7;
  long long v11 = *(_OWORD *)(a2 + 104);
  v57[0] = *(_OWORD *)(a2 + 88);
  v57[1] = v11;
  uint64_t v58 = *(void *)(a2 + 120);
  uint64_t v12 = swift_retain();
  sub_1B62C9DA8(v12, (uint64_t)v57, 0x200000000, v42);
  swift_release();
  sub_1B62E9D68((uint64_t)v42, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v43[0])
  {
    long long v50 = v43[0];
    long long v51 = v43[1];
    uint64_t v52 = v44;
    uint64_t v33 = v49;
    if (v49 >= 1 && (uint64_t v13 = v46) != 0)
    {
      uint64_t v14 = v48[4];
      uint64_t v32 = v47;
      int v15 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v29 = v48 + 8;
      uint64_t v30 = (uint64_t)(v48 + 6);
      v16 = (uint64_t *)(v45 + 24);
      int v31 = v15;
      v17 = v48;
      while (1)
      {
        uint64_t v19 = *((unsigned int *)v16 - 6);
        uint64_t v18 = *((unsigned int *)v16 - 5);
        uint64_t v20 = *((unsigned int *)v16 - 4);
        uint64_t v21 = *(v16 - 1);
        uint64_t v22 = *v16;
        uint64_t v23 = v16[1];
        uint64_t v24 = v16[2];
        v65 = v8;
        uint64_t v40 = v22;
        uint64_t v41 = v21;
        uint64_t v38 = v18;
        uint64_t v39 = v23;
        if (v15)
        {
          v25 = *(os_unfair_lock_s **)(v24 + 376);
          swift_retain();
          os_unfair_lock_lock(v25);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v14);
        sub_1B62E9D68(v30, (uint64_t)v59, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v26 = v17[4];
        uint64_t v27 = *(void *)(*(void *)(*(void *)(*(void *)(v24 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v17[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
        v17[7] = v27;
        v29[1] = 0;
        v29[2] = 0;
        void *v29 = 0;
        swift_release();
        v60[0] = v32;
        v60[1] = v24;
        v60[2] = v17;
        v60[3] = v20;
        v60[4] = (v38 - v19 + v20);
        v60[5] = v33;
        v60[6] = v19;
        v60[7] = v38;
        v60[8] = 0;
        v60[9] = 0;
        char v61 = 1;
        uint64_t v62 = v41;
        uint64_t v63 = v40;
        uint64_t v64 = v39;
        v28 = v65;
        sub_1B6A82268((uint64_t)v60, a3, a1, a4, a5, a6, a7);
        if (v28) {
          break;
        }
        v55[0] = v50;
        v55[1] = v51;
        uint64_t v56 = v52;
        sub_1B6345178(v17, (unsigned __int16 **)v55, (uint64_t)v59);
        v8 = 0;
        sub_1B634507C((char *)v24);
        ecs_stack_allocator_pop_snapshot(v14);
        int v15 = v31;
        if (v31)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
        }
        swift_release();
        v16 += 6;
        if (!--v13) {
          goto LABEL_12;
        }
      }

      v53[0] = v50;
      v53[1] = v51;
      uint64_t v54 = v52;
      sub_1B6345178(v17, (unsigned __int16 **)v53, (uint64_t)v59);
      sub_1B634507C((char *)v24);
      ecs_stack_allocator_pop_snapshot(v14);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
      __break(1u);
    }
    else
    {
LABEL_12:
      sub_1B632F170(v42);
    }
  }
}

uint64_t sub_1B6A82268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6, float a7)
{
  uint64_t v12 = sub_1B682C69C(a2, a4, a5);
  float v17 = a6;
  float v18 = a7;
  uint64_t v19 = a1;
  uint64_t v20 = a3;
  return sub_1B6A810F4(MEMORY[0x1E4FBB470], (uint64_t)sub_1B6A824B4, (uint64_t)v16, v12, v13, a4, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC278], v15);
}

uint64_t sub_1B6A82324(uint64_t result, double a2, float a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = *(void *)(a5 + 48);
  uint64_t v6 = *(void *)(a5 + 56);
  if (*(float *)&a2 == a3)
  {
    unint64_t v8 = v6 - v7;
    if (v6 != v7)
    {
      uint64_t v9 = *(void *)(a5 + 48);
      if (v8 < 8) {
        goto LABEL_7;
      }
      uint64_t v9 = v7 + (v8 & 0xFFFFFFFFFFFFFFF8);
      int32x4_t v10 = vdupq_lane_s32(*(int32x2_t *)&a2, 0);
      long long v11 = (int32x4_t *)(result + 4 * v7 + 16);
      unint64_t v12 = v8 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v11[-1] = v10;
        *long long v11 = v10;
        v11 += 2;
        v12 -= 8;
      }
      while (v12);
      if (v8 != (v8 & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_7:
        uint64_t v13 = v6 - v9;
        uint64_t v14 = (_DWORD *)(result + 4 * v9);
        do
        {
          *v14++ = LODWORD(a2);
          --v13;
        }
        while (v13);
      }
    }
  }
  else
  {
    uint64_t v15 = v6 - v7;
    if (v15)
    {
      uint64_t v16 = a6[3];
      uint64_t v17 = a6[4];
      float v18 = a3 - *(float *)&a2;
      uint64_t v19 = (float *)(result + 4 * v7);
      uint64_t v20 = a6[1];
      uint64_t v21 = a6[2];
      do
      {
        int v22 = 9 * ((((unint64_t)(5 * v21) >> 32) >> 25) | (640 * v21));
        uint64_t v23 = v20 ^ v16;
        uint64_t v24 = v21 ^ v17;
        v16 ^= v20 ^ (v21 << 17);
        v21 ^= v23;
        v20 ^= v24;
        uint64_t v17 = __ROR8__(v24, 19);
        *v19++ = (float)(v18 * (float)((float)(*(void *)&v22 & 0xFFFFFFLL) * 0.000000059605)) + *(float *)&a2;
        --v15;
      }
      while (v15);
      a6[1] = v20;
      a6[2] = v21;
      a6[3] = v16;
      a6[4] = v17;
    }
  }
  return result;
}

uint64_t sub_1B6A82404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int v12 = a5;
  unint64_t v14 = HIDWORD(a5);
  uint64_t result = sub_1B62C8668((char *)(a1 + 32), *(void *)(a1 + 16), (char *)(a2 + 32), *(void *)(a2 + 16), (char *)(a3 + 32), *(void *)(a3 + 16), (char *)(a4 + 32), *(void *)(a4 + 16));
  *(void *)a9 = result;
  *(_DWORD *)(a9 + 8) = v12;
  *(unsigned char *)(a9 + 12) = v14;
  *(void *)(a9 + 16) = a7;
  *(unsigned char *)(a9 + 24) = a8;
  *(void *)(a9 + 32) = a6;
  return result;
}

void sub_1B6A82490(uint64_t a1)
{
  sub_1B6A81F3C(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), *(float *)(v1 + 48), *(float *)(v1 + 52));
}

uint64_t sub_1B6A824B4(uint64_t a1, uint64_t a2, double a3)
{
  LODWORD(a3) = *(_DWORD *)(v3 + 16);
  return sub_1B6A82324(a1, a3, *(float *)(v3 + 20), a2, *(void *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_1B6A824D8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 168, 7);
}

unint64_t sub_1B6A82538(uint64_t a1)
{
  uint64_t v1 = HIDWORD(a1) & 0x7FFFFFFF;
  if (a1 < 0)
  {
    char v2 = 0;
  }
  else
  {
    uint64_t v1 = 0;
    char v2 = 1;
  }
  if (a1 == -1) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = v1;
  }
  if (a1 == -1) {
    unsigned __int8 v4 = 1;
  }
  else {
    unsigned __int8 v4 = v2;
  }
  return v3 | ((unint64_t)v4 << 32);
}

ValueMetadata *type metadata accessor for IsSubEntityOf()
{
  return &type metadata for IsSubEntityOf;
}

ValueMetadata *type metadata accessor for WorldFromScene()
{
  return &type metadata for WorldFromScene;
}

ValueMetadata *type metadata accessor for ParticleIDToIndexTable()
{
  return &type metadata for ParticleIDToIndexTable;
}

uint64_t sub_1B6A825AC(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6A83920(0, &qword_1E9DD4800, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  int32x4_t v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A838CC();
  sub_1B6E33A88();
  v13[0] = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    sub_1B6A83984(v3 + 8, (uint64_t)v14);
    sub_1B6A83984((uint64_t)v14, (uint64_t)v13);
    v12[15] = 1;
    sub_1B665D590();
    sub_1B681F0D8((unint64_t *)&qword_1E9DD85D0);
    sub_1B6E32F38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6A8276C(char *a1, char *a2)
{
  return sub_1B6BB6AD4(*a1, *a2);
}

uint64_t sub_1B6A82778()
{
  if (*v0) {
    return 0x6576727563;
  }
  else {
    return 0x797469636F6C6576;
  }
}

uint64_t sub_1B6A827B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6A829C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6A827D8(uint64_t a1)
{
  unint64_t v2 = sub_1B6A838CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6A82814(uint64_t a1)
{
  unint64_t v2 = sub_1B6A838CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6A82850@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6A836B0(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B6A82898(void *a1)
{
  return sub_1B6A825AC(a1);
}

uint64_t sub_1B6A828D4()
{
  return type metadata accessor for ParticleAngleEvolutionSystem();
}

double sub_1B6A828F4()
{
  sub_1B6A83A18(0, (unint64_t *)&qword_1EB980BA0, (uint64_t (*)(uint64_t))sub_1B663C11C, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for ParticleAngle;
  *(void *)(v0 + 40) = &off_1F0F608D0;
  return result;
}

void sub_1B6A8296C(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1036831949;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 32) = 0;
}

uint64_t type metadata accessor for ParticleAngleEvolutionSystem()
{
  return self;
}

const char *sub_1B6A829B0()
{
  return "ParticleAngleEvolution";
}

uint64_t sub_1B6A829C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576727563 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *sub_1B6A82AB0(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t v4 = *(void *)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  swift_retain_n();
  sub_1B6960260(v3, (uint64_t)v88);
  float v5 = *(float *)v88;
  uint64_t v6 = v88[1];
  uint64_t v8 = v88[2];
  uint64_t v7 = v88[3];
  char v9 = v89;
  swift_release();
  sub_1B62CA210((uint64_t)v88, (uint64_t)v102, &qword_1E9DD47E8);
  if (v103 != 1)
  {
    if (!v6)
    {
      float v10 = v5;
      goto LABEL_24;
    }
    long long v11 = *(_OWORD *)(a1 + 104);
    long long v110 = *(_OWORD *)(a1 + 88);
    long long v111 = v11;
    uint64_t v112 = *(void *)(a1 + 120);
    sub_1B663F758((uint64_t)&v90);
    long long v107 = v90;
    long long v108 = v91;
    uint64_t v109 = v92;
    sub_1B62C9DA8(v4, (uint64_t)&v107, 0x200000000, v93);
    sub_1B62CA210((uint64_t)v93, (uint64_t)&v94, (unint64_t *)&qword_1EB97DC50);
    if (!(void)v94)
    {
      sub_1B62CA064((uint64_t)&v90);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    if (v101 <= 0 || (uint64_t v75 = v98) == 0)
    {
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_60:
      sub_1B62CA064((uint64_t)&v90);
      swift_release();
      sub_1B632F170(v93);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1B632F170(v93);
    }
    uint64_t v12 = v100[4];
    char v13 = *(unsigned char *)(v99 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    long long v104 = v94;
    long long v105 = v95;
    uint64_t v71 = v97;
    uint64_t v106 = v96;
    v85 = v100;
    v68 = v100 + 8;
    uint64_t v69 = (uint64_t)(v100 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v14 = 0;
    char v73 = v13;
    uint64_t v66 = v7;
    uint64_t v67 = v12;
    while (1)
    {
      uint64_t v83 = v14;
      uint64_t v15 = (unsigned int *)(v71 + 48 * v14);
      uint64_t v79 = *v15;
      uint64_t v77 = v15[1];
      uint64_t v16 = *((void *)v15 + 3);
      v81 = (uint64_t *)*((void *)v15 + 2);
      uint64_t v17 = *((void *)v15 + 4);
      uint64_t v18 = *((void *)v15 + 5);
      if (v13)
      {
        uint64_t v19 = *(os_unfair_lock_s **)(v18 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v19);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v12);
      sub_1B62CA210(v69, (uint64_t)v113, &qword_1EB97DE20);
      uint64_t v20 = v85[4];
      uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v18 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v85[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
      v85[7] = v21;
      v68[1] = 0;
      v68[2] = 0;
      void *v68 = 0;
      swift_release();
      int v22 = (_DWORD *)sub_1B62C9024((uint64_t)&type metadata for ParticleAngle, (uint64_t)&off_1F0F608D0, v81, v16, v17, (uint64_t)v85);
      uint64_t v23 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v81, v16, v17, (uint64_t)v85);
      uint64_t v24 = (float *)v23;
      if (v81)
      {
        if (v17)
        {
          uint64_t v12 = v67;
          do
          {
            float v25 = *v24++;
            sub_1B631A2E0(v6, v8, v66, v9, v25);
            *v22++ = v26;
            --v17;
          }
          while (v17);
          goto LABEL_21;
        }
      }
      else if (v79 != v77)
      {
        uint64_t v27 = v77 - v79;
        v28 = (float *)(v23 + 4 * v79);
        v29 = &v22[v79];
        uint64_t v12 = v67;
        do
        {
          float v30 = *v28++;
          sub_1B631A2E0(v6, v8, v66, v9, v30);
          *v29++ = v31;
          --v27;
        }
        while (v27);
        goto LABEL_21;
      }
      uint64_t v12 = v67;
LABEL_21:
      sub_1B6345178(v85, (unsigned __int16 **)&v104, (uint64_t)v113);
      sub_1B634507C((char *)v18);
      ecs_stack_allocator_pop_snapshot(v12);
      char v13 = v73;
      if (v73)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
      }
      swift_release();
      uint64_t v14 = v83 + 1;
      if (v83 + 1 == v75) {
        goto LABEL_60;
      }
    }
  }
  float v10 = 0.1;
LABEL_24:
  sub_1B62F46E8();
  float v33 = v32;
  long long v34 = *(_OWORD *)(a1 + 104);
  long long v110 = *(_OWORD *)(a1 + 88);
  long long v111 = v34;
  uint64_t v112 = *(void *)(a1 + 120);
  sub_1B67CFCB0((uint64_t)&v90);
  long long v107 = v90;
  long long v108 = v91;
  uint64_t v109 = v92;
  sub_1B62C9DA8(v4, (uint64_t)&v107, 0x200000000, v93);
  sub_1B62CA210((uint64_t)v93, (uint64_t)&v94, (unint64_t *)&qword_1EB97DC50);
  if (!(void)v94)
  {
    sub_1B62CA064((uint64_t)&v90);
    return (uint64_t *)swift_release();
  }
  if (v101 <= 0 || (uint64_t v84 = v98) == 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B62CA064((uint64_t)&v90);
    goto LABEL_57;
  }
  *(float *)v35.i32 = v10 * v33;
  int32x2_t v72 = v35;
  v36 = v100;
  uint64_t v37 = v100[4];
  char v38 = *(unsigned char *)(v99 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  long long v104 = v94;
  long long v105 = v95;
  uint64_t v106 = v96;
  uint64_t v80 = (uint64_t)(v100 + 6);
  uint64_t v82 = v97;
  v78 = v100 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v39 = 0;
  float32x4_t v70 = (float32x4_t)vdupq_lane_s32(v72, 0);
  char v76 = v38;
  uint64_t v74 = v37;
  do
  {
    uint64_t v40 = (unsigned int *)(v82 + 48 * v39);
    uint64_t v41 = *v40;
    uint64_t v86 = v40[1];
    uint64_t v87 = v2;
    v43 = (uint64_t *)*((void *)v40 + 2);
    uint64_t v42 = *((void *)v40 + 3);
    unint64_t v45 = *((void *)v40 + 4);
    uint64_t v44 = *((void *)v40 + 5);
    if (v38)
    {
      uint64_t v46 = *(os_unfair_lock_s **)(v44 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v46);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v44 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v37);
    sub_1B62CA210(v80, (uint64_t)v113, &qword_1EB97DE20);
    uint64_t v47 = v36[4];
    uint64_t v48 = *(void *)(*(void *)(*(void *)(*(void *)(v44 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v36[6] = ecs_stack_allocator_allocate(v47, 48 * v48, 8);
    v36[7] = v48;
    v78[1] = 0;
    v78[2] = 0;
    void *v78 = 0;
    swift_release();
    uint64_t v49 = sub_1B62C9024((uint64_t)&type metadata for ParticleAngle, (uint64_t)&off_1F0F608D0, v43, v42, v45, (uint64_t)v36);
    if (v43)
    {
      char v38 = v76;
      if (v45)
      {
        if (v45 >= 8)
        {
          unint64_t v50 = v45 & 0xFFFFFFFFFFFFFFF8;
          uint64_t v52 = (float32x4_t *)(v49 + 16);
          unint64_t v53 = v45 & 0xFFFFFFFFFFFFFFF8;
          uint64_t v2 = v87;
          uint64_t v37 = v74;
          do
          {
            float32x4_t v54 = vaddq_f32(v70, *v52);
            v52[-1] = vaddq_f32(v70, v52[-1]);
            *uint64_t v52 = v54;
            v52 += 2;
            v53 -= 8;
          }
          while (v53);
          float v51 = *(float *)v72.i32;
          if (v45 == v50) {
            goto LABEL_52;
          }
        }
        else
        {
          unint64_t v50 = 0;
          uint64_t v2 = v87;
          float v51 = *(float *)v72.i32;
          uint64_t v37 = v74;
        }
        unint64_t v55 = v45 - v50;
        uint64_t v56 = (float *)(v49 + 4 * v50);
        do
        {
          *uint64_t v56 = v51 + *v56;
          ++v56;
          --v55;
        }
        while (v55);
      }
      else
      {
        uint64_t v2 = v87;
        uint64_t v37 = v74;
      }
    }
    else if (v41 == v86)
    {
      uint64_t v2 = v87;
      uint64_t v37 = v74;
      char v38 = v76;
    }
    else
    {
      uint64_t v57 = v86 - v41;
      if ((unint64_t)(v86 - v41) >= 8)
      {
        uint64_t v58 = (v57 & 0xFFFFFFFFFFFFFFF8) + v41;
        v60 = (float32x4_t *)(v49 + 4 * v41 + 16);
        unint64_t v61 = v57 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          float32x4_t v62 = vaddq_f32(v70, *v60);
          v60[-1] = vaddq_f32(v70, v60[-1]);
          float32x4_t *v60 = v62;
          v60 += 2;
          v61 -= 8;
        }
        while (v61);
        uint64_t v2 = v87;
        float v59 = *(float *)v72.i32;
        uint64_t v37 = v74;
        char v38 = v76;
        if (v57 == (v57 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_52;
        }
      }
      else
      {
        uint64_t v58 = v41;
        uint64_t v2 = v87;
        float v59 = *(float *)v72.i32;
        uint64_t v37 = v74;
        char v38 = v76;
      }
      uint64_t v63 = v86 - v58;
      uint64_t v64 = (float *)(v49 + 4 * v58);
      do
      {
        *uint64_t v64 = v59 + *v64;
        ++v64;
        --v63;
      }
      while (v63);
    }
LABEL_52:
    sub_1B6345178(v36, (unsigned __int16 **)&v104, (uint64_t)v113);
    sub_1B634507C((char *)v44);
    ecs_stack_allocator_pop_snapshot(v37);
    if (v38)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v44 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v44 + 376));
    }
    swift_release();
    ++v39;
  }
  while (v39 != v84);
  sub_1B62CA064((uint64_t)&v90);
LABEL_57:
  swift_release();
  sub_1B632F170(v93);
  return sub_1B632F170(v93);
}

uint64_t destroy for ParticleAngleEvolution(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ParticleAngleEvolution(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = (_OWORD *)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v3 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)((char *)v3 + 9) = *(_OWORD *)(a2 + 17);
  }
  return a1;
}

uint64_t assignWithCopy for ParticleAngleEvolution(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v7 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 8);
  if (v5)
  {
    if (v6)
    {
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    }
    else
    {
      sub_1B6A834F4((uint64_t)v4);
      long long v8 = *(_OWORD *)((char *)v7 + 9);
      *uint64_t v4 = *v7;
      *(_OWORD *)((char *)v4 + 9) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v7;
    *(_OWORD *)((char *)v4 + 9) = *(_OWORD *)(a2 + 17);
    *uint64_t v4 = v9;
  }
  return a1;
}

uint64_t sub_1B6A834F4(uint64_t a1)
{
  sub_1B665D590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for ParticleAngleEvolution(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_1B6A834F4((uint64_t)v3);
LABEL_5:
    *uint64_t v3 = *v5;
    *(_OWORD *)((char *)v3 + 9) = *(_OWORD *)((char *)v5 + 9);
    return a1;
  }
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticleAngleEvolution(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleAngleEvolution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleAngleEvolution()
{
  return &type metadata for ParticleAngleEvolution;
}

uint64_t sub_1B6A836B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6A83920(0, &qword_1E9DD47F0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  float v10 = (char *)&v16 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A838CC();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v18) = 0;
  sub_1B6E32DC8();
  int v12 = v11;
  sub_1B665D590();
  char v17 = 1;
  sub_1B681F0D8((unint64_t *)&qword_1EB97FD90);
  sub_1B6E32D78();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  long long v16 = v18;
  uint64_t v13 = v19;
  char v14 = v20;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(_DWORD *)a2 = v12;
  *(_OWORD *)(a2 + 8) = v16;
  *(void *)(a2 + 24) = v13;
  *(unsigned char *)(a2 + 32) = v14;
  return result;
}

unint64_t sub_1B6A838CC()
{
  unint64_t result = qword_1E9DD47F8;
  if (!qword_1E9DD47F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD47F8);
  }
  return result;
}

void sub_1B6A83920(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6A838CC();
    unint64_t v7 = a3(a1, &type metadata for ParticleAngleEvolution.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B6A83984(uint64_t a1, uint64_t a2)
{
  sub_1B6A83A18(0, (unint64_t *)&qword_1E9DD53B0, (uint64_t (*)(uint64_t))sub_1B665D590, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B6A83A18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleAngleEvolution.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6A83B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleAngleEvolution.CodingKeys()
{
  return &type metadata for ParticleAngleEvolution.CodingKeys;
}

unint64_t sub_1B6A83B84()
{
  unint64_t result = qword_1E9DD4808;
  if (!qword_1E9DD4808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4808);
  }
  return result;
}

unint64_t sub_1B6A83BDC()
{
  unint64_t result = qword_1E9DD4810;
  if (!qword_1E9DD4810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4810);
  }
  return result;
}

unint64_t sub_1B6A83C34()
{
  unint64_t result = qword_1E9DD4818;
  if (!qword_1E9DD4818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4818);
  }
  return result;
}

void sub_1B6A83C88()
{
}

uint64_t sub_1B6A83CD4()
{
  return type metadata accessor for EasingNode(0);
}

uint64_t type metadata accessor for EasingNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4820);
}

uint64_t sub_1B6A83CFC(char a1)
{
  return (*(uint64_t (**)(void))(*(void *)v1 + 248))(a1 & 1);
}

uint64_t sub_1B6A83D24@<X0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000050;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000050;
  *(void *)(v4 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v4;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F68568;
  a1[3] = v6;
  a1[4] = v6;
  a1[5] = v6;
  return result;
}

uint64_t sub_1B6A83E08()
{
  return type metadata accessor for EasingFloatNode(0);
}

uint64_t type metadata accessor for EasingFloatNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4830);
}

uint64_t sub_1B6A83E30()
{
  return 0x7361456369627543;
}

unint64_t sub_1B6A83E50()
{
  return 0xD000000000000013;
}

uint64_t sub_1B6A83E6C()
{
  return type metadata accessor for CubicEaseInNode(0);
}

uint64_t type metadata accessor for CubicEaseInNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4840);
}

uint64_t sub_1B6A83E94()
{
  return 0x7361456369627543;
}

unint64_t sub_1B6A83EB4()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6A83ED0()
{
  return type metadata accessor for CubicEaseOutNode(0);
}

uint64_t type metadata accessor for CubicEaseOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4850);
}

uint64_t sub_1B6A83EF8()
{
  return 0x7361456369627543;
}

unint64_t sub_1B6A83F1C()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6A83F38()
{
  return type metadata accessor for CubicEaseInOutNode(0);
}

uint64_t type metadata accessor for CubicEaseInOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4860);
}

uint64_t sub_1B6A83F60()
{
  return 0x6974617264617551;
}

unint64_t sub_1B6A83F84()
{
  return 0xD000000000000017;
}

uint64_t sub_1B6A83FA0()
{
  return type metadata accessor for QuadraticEaseInNode(0);
}

uint64_t type metadata accessor for QuadraticEaseInNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4870);
}

unint64_t sub_1B6A83FC8()
{
  return 0xD000000000000010;
}

unint64_t sub_1B6A83FE4()
{
  return 0xD000000000000018;
}

uint64_t sub_1B6A84000()
{
  return type metadata accessor for QuadraticEaseOutNode(0);
}

uint64_t type metadata accessor for QuadraticEaseOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4880);
}

unint64_t sub_1B6A84028()
{
  return 0xD000000000000012;
}

unint64_t sub_1B6A84044()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B6A84060()
{
  return type metadata accessor for QuadraticEaseInOutNode(0);
}

uint64_t type metadata accessor for QuadraticEaseInOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4890);
}

uint64_t sub_1B6A84088()
{
  return 0x4563697472617551;
}

unint64_t sub_1B6A840AC()
{
  return 0xD000000000000015;
}

uint64_t sub_1B6A840C8()
{
  return type metadata accessor for QuarticEaseInNode(0);
}

uint64_t type metadata accessor for QuarticEaseInNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD48A0);
}

uint64_t sub_1B6A840F0()
{
  return 0x4563697472617551;
}

unint64_t sub_1B6A84114()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6A84130()
{
  return type metadata accessor for QuarticEaseOutNode(0);
}

uint64_t type metadata accessor for QuarticEaseOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD48B0);
}

unint64_t sub_1B6A84158()
{
  return 0xD000000000000010;
}

unint64_t sub_1B6A84174()
{
  return 0xD000000000000018;
}

uint64_t sub_1B6A84190()
{
  return type metadata accessor for QuarticEaseInOutNode(0);
}

uint64_t type metadata accessor for QuarticEaseInOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD48C0);
}

uint64_t sub_1B6A841B8()
{
  return 0x456369746E697551;
}

unint64_t sub_1B6A841DC()
{
  return 0xD000000000000015;
}

uint64_t sub_1B6A841F8()
{
  return type metadata accessor for QuinticEaseInNode(0);
}

uint64_t type metadata accessor for QuinticEaseInNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD48D0);
}

uint64_t sub_1B6A84220()
{
  return 0x456369746E697551;
}

unint64_t sub_1B6A84244()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6A84260()
{
  return type metadata accessor for QuinticEaseOutNode(0);
}

uint64_t type metadata accessor for QuinticEaseOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD48E0);
}

unint64_t sub_1B6A84288()
{
  return 0xD000000000000010;
}

unint64_t sub_1B6A842A4()
{
  return 0xD000000000000018;
}

uint64_t sub_1B6A842C0()
{
  return type metadata accessor for QuinticEaseInOutNode(0);
}

uint64_t type metadata accessor for QuinticEaseInOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD48F0);
}

uint64_t sub_1B6A842E8()
{
  return 0x657361456E6953;
}

unint64_t sub_1B6A84300(char a1)
{
  if (a1) {
    return 0xD00000000000001ELL;
  }
  else {
    return 0xD000000000000022;
  }
}

uint64_t sub_1B6A8433C()
{
  return type metadata accessor for SinEaseInNode(0);
}

uint64_t type metadata accessor for SinEaseInNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4900);
}

uint64_t sub_1B6A84364()
{
  return 0x4F657361456E6953;
}

unint64_t sub_1B6A84380(char a1)
{
  if (a1) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

uint64_t sub_1B6A843BC()
{
  return type metadata accessor for SinEaseOutNode(0);
}

uint64_t type metadata accessor for SinEaseOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4910);
}

uint64_t sub_1B6A843E4()
{
  return 0x49657361456E6953;
}

unint64_t sub_1B6A84404(char a1)
{
  if (a1) {
    return 0xD00000000000001FLL;
  }
  else {
    return 0xD000000000000023;
  }
}

uint64_t sub_1B6A84440()
{
  return type metadata accessor for SinEaseInOutNode(0);
}

uint64_t type metadata accessor for SinEaseInOutNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4920);
}

uint64_t sub_1B6A84468()
{
  return 0x746E656E6F707845;
}

uint64_t sub_1B6A8448C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6A845B4((uint64_t)&unk_1F0F7C848, (uint64_t)&unk_1F0F7C808, a1);
}

unint64_t sub_1B6A844A0(char a1)
{
  if (a1) {
    return 0xD000000000000034;
  }
  else {
    return 0xD000000000000036;
  }
}

uint64_t sub_1B6A844DC()
{
  return type metadata accessor for ExponentialEaseNode(0);
}

uint64_t type metadata accessor for ExponentialEaseNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4930);
}

uint64_t sub_1B6A84504()
{
  return 0x6C61636973796850;
}

uint64_t sub_1B6A84524@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6A84730(0x8000000000000030, (uint64_t)&unk_1F0F6ECB8, (uint64_t)&unk_1F0F6EC58, a1);
}

unint64_t sub_1B6A84540()
{
  return 0xD000000000000036;
}

uint64_t sub_1B6A8455C()
{
  return type metadata accessor for PhysicalEaseNode(0);
}

uint64_t type metadata accessor for PhysicalEaseNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4940);
}

uint64_t sub_1B6A84584()
{
  return 0x7361457265776F50;
}

uint64_t sub_1B6A845A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6A845B4((uint64_t)&unk_1F0F615E8, (uint64_t)&unk_1F0F615A8, a1);
}

uint64_t sub_1B6A845B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B6A848B0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E76B30;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000050;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0x8000000000000050;
  *(void *)(v6 + 40) = v8 | 0x6000000000000000;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000050;
  *(void *)(v9 + 32) = result | 0x6000000000000000;
  *a3 = v6;
  a3[1] = v9;
  a3[2] = a1;
  a3[3] = a2;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a3[4] = MEMORY[0x1E4FBC860];
  a3[5] = v11;
  return result;
}

unint64_t sub_1B6A846B4()
{
  return 0xD000000000000013;
}

uint64_t sub_1B6A846D0()
{
  return type metadata accessor for PowerEaseNode(0);
}

uint64_t type metadata accessor for PowerEaseNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4950);
}

uint64_t sub_1B6A846F8()
{
  return 0x614565636E756F42;
}

uint64_t sub_1B6A84714@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6A84730(0x8000000000000050, (uint64_t)&unk_1F0F62EC8, (uint64_t)&unk_1F0F62E68, a1);
}

uint64_t sub_1B6A84730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1B6A848B0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E85730;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x8000000000000050;
  *(void *)(v8 + 32) = v9 | 0x6000000000000000;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0x8000000000000050;
  *(void *)(v8 + 40) = v10 | 0x6000000000000000;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0x8000000000000050;
  *(void *)(v8 + 48) = v11 | 0x6000000000000000;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v8 + 56) = v12 | 0x6000000000000000;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000050;
  *(void *)(v13 + 32) = result | 0x6000000000000000;
  *a4 = v8;
  a4[1] = v13;
  a4[2] = a2;
  a4[3] = a3;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  a4[4] = MEMORY[0x1E4FBC860];
  a4[5] = v15;
  return result;
}

unint64_t sub_1B6A8486C()
{
  return 0xD000000000000031;
}

uint64_t sub_1B6A84888()
{
  return type metadata accessor for BounceEaseNode(0);
}

uint64_t type metadata accessor for BounceEaseNode(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1E9DD4960);
}

void sub_1B6A848B0()
{
  if (!qword_1E9DD1D50)
  {
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1D50);
    }
  }
}

uint64_t sub_1B6A84908()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6A84940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1B6A84948()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1B6A84A04(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((((((v6 + ((v5 + 24) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
    uint64_t v10 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    uint64_t v12 = ((unint64_t)v10 + v5 + 8) & ~v5;
    uint64_t v13 = ((unint64_t)v11 + v5 + 8) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v12, v13);
    char v14 = (void *)((v6 + v12) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)((v6 + v13) & 0xFFFFFFFFFFFFFFF8);
    *char v14 = *v15;
    long long v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v16 = *v17;
    *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  return v3;
}

uint64_t sub_1B6A84B7C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))(((((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
}

unint64_t sub_1B6A84BC4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  char v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v14 = *v15;
  *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unint64_t sub_1B6A84CAC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  char v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v14 = *v15;
  *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unint64_t sub_1B6A84D94(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  char v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v14 = *v15;
  *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unint64_t sub_1B6A84E7C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  char v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v14 = *v15;
  *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B6A84F64(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + ((v6 + 24) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B6A850E0);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 > 0xFE) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
  }
                                                                  + v6
                                                                  + 8) & ~v6);
  unsigned int v17 = *(unsigned __int8 *)a1;
  BOOL v18 = v17 >= 2;
  int v19 = (v17 + 2147483646) & 0x7FFFFFFF;
  if (v18) {
    return (v19 + 1);
  }
  else {
    return 0;
  }
}

void sub_1B6A850F4(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((((*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 24) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          *(unsigned char *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_39;
        case 4:
          *(_DWORD *)(a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 > 0xFE)
            {
              unint64_t v18 = ((((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
              int v19 = *(void (**)(unint64_t))(v6 + 56);
              v19(v18);
            }
            else
            {
              *(unsigned char *)a1 = a2 + 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 24) & ~v9) + 7) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 24) & ~v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 24) & ~v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero((void *)a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      *(unsigned char *)(a1 + v10) = v16;
      break;
    case 2:
      *(_WORD *)(a1 + v10) = v16;
      break;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1B6A852FCLL);
    case 4:
      *(_DWORD *)(a1 + v10) = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for UnsafeHashTable()
{
  return sub_1B62C36EC();
}

uint64_t type metadata accessor for HandleTable()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6A85358()
{
  swift_release();

  return swift_release();
}

void *sub_1B6A85394(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1B6A853CC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1B6A8542C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for HandleArray()
{
  return sub_1B62C36EC();
}

uint64_t getEnumTagSinglePayload for MeshRenderSystemState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for MeshRenderSystemState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UnsafeArray()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6A85520()
{
  return swift_getWitnessTable();
}

void (*sub_1B6A8553C(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  sub_1B6A86A00(a2);
  v4[4] = sub_1B6E324F8();
  return sub_1B638329C;
}

uint64_t sub_1B6A855D8(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 40))(*v3 + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 72) * *a2, a1);
}

double (*sub_1B6A8561C())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6A8565C()
{
  return sub_1B6D7A388();
}

void (*sub_1B6A856A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(void *)
{
  unsigned int v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_1B6D67480(v8, a2, a3, a4);
  return sub_1B6A85718;
}

uint64_t sub_1B6A8571C()
{
  return sub_1B6E316D8();
}

uint64_t sub_1B6A857A0()
{
  swift_getWitnessTable();

  return sub_1B6E31F58();
}

uint64_t sub_1B6A85810(void *a1)
{
  swift_getWitnessTable();
  uint64_t result = sub_1B6E31F58();
  *a1 = v3;
  return result;
}

uint64_t sub_1B6A85880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B6A85904()
{
  swift_getWitnessTable();

  return sub_1B6E31F38();
}

uint64_t sub_1B6A85988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

void sub_1B6A859FC(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

double (*sub_1B6A85A08())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6A85A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1B6D677F4(a1, a2, WitnessTable, a3);
}

uint64_t sub_1B6A85AB0()
{
  swift_getWitnessTable();

  return sub_1B6E31F78();
}

__n128 sub_1B6A85B24@<Q0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)v1;
  __n128 result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_1B6A85B3C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1B6A85B90()
{
  return sub_1B6E32018();
}

uint64_t sub_1B6A85BF4()
{
  return MEMORY[0x1BA9B36F0]();
}

uint64_t sub_1B6A85C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2[3];
  if (v4 == v2[2])
  {
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56);
    uint64_t v6 = a2;
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v9 = *(void *)(*(void *)(a1 + 16) - 8);
    (*(void (**)(uint64_t, uint64_t, void))(v9 + 16))(a2, *v2 + *(void *)(v9 + 72) * v4, *(void *)(a1 + 16));
    v2[3] = v4 + 1;
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v6 = a2;
    uint64_t v7 = 0;
  }

  return v5(v6, v7, 1);
}

uint64_t sub_1B6A85D50()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A85D6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A85D88()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A85DEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A85E50()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A85E6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A85ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UnsafeArray();
  swift_getWitnessTable();
  sub_1B6E32068();
  long long v13 = v16;
  uint64_t v14 = v17;
  long long v15 = v18;
  v12[2] = a4;
  uint64_t v7 = sub_1B6E338D8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_1B699C9EC((void (*)(char *, char *))sub_1B6A8728C, (uint64_t)v12, v7, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v9);
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  *(void *)&long long v16 = 0x3A63287961727241;
  *((void *)&v16 + 1) = 0xE800000000000000;
  *(void *)&long long v13 = a3;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  *(void *)&long long v13 = a2;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  *(void *)&long long v13 = v10;
  sub_1B6646CE4();
  sub_1B6646D3C();
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return v16;
}

uint64_t sub_1B6A86114@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v3 = MEMORY[0x1F4188790](a1, a1);
  (*(void (**)(char *, double))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t result = sub_1B6E31818();
  *a2 = result;
  a2[1] = v7;
  return result;
}

uint64_t sub_1B6A861E4(uint64_t a1)
{
  return sub_1B6A85ED0(*v1, v1[1], v1[2], *(void *)(a1 + 16));
}

uint64_t sub_1B6A861F8(uint64_t a1)
{
  sub_1B6D7A388();
  swift_getWitnessTable();
  uint64_t v2 = sub_1B6E338D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1B6A86298()
{
  return sub_1B6E316D8();
}

uint64_t sub_1B6A86318()
{
  swift_getWitnessTable();

  return sub_1B6E31F58();
}

uint64_t sub_1B6A86388(void *a1)
{
  swift_getWitnessTable();
  uint64_t result = sub_1B6E31F58();
  *a1 = v3;
  return result;
}

uint64_t sub_1B6A863F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B6A8647C()
{
  swift_getWitnessTable();

  return sub_1B6E31F38();
}

uint64_t sub_1B6A86500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B6A86574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B631A6A4();
  *a1 = result;
  return result;
}

uint64_t (*sub_1B6A8659C(void *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1B6A8660C(v6, *a2, a3);
  return sub_1B68C8C94;
}

uint64_t (*sub_1B6A8660C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v3 = *(void *)(a3 + 16);
  *a1 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  a1[1] = v4;
  a1[2] = malloc(*(void *)(v4 + 64));
  (*(void (**)(void))(v5 + 16))();
  return sub_1B6A866D8;
}

uint64_t sub_1B6A866DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1B6D677F4(a1, a2, WitnessTable, a3);
}

uint64_t sub_1B6A86744()
{
  swift_getWitnessTable();

  return sub_1B6E31F78();
}

uint64_t sub_1B6A867B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32))(a2, v3, a1);
  swift_getWitnessTable();
  uint64_t result = sub_1B6E32B28();
  *(void *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_1B6A86840(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1B6A86894()
{
  swift_getWitnessTable();

  return sub_1B6E32018();
}

BOOL sub_1B6A868EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a3 < a6;
}

BOOL sub_1B6A868F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a3 == a6;
}

BOOL sub_1B6A86904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6A868EC(a1, a2, *(void *)(a1 + 16), a4, a5, *(void *)(a2 + 16));
}

BOOL sub_1B6A8691C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6A868F8(a1, a2, *(void *)(a1 + 16), a4, a5, *(void *)(a2 + 16));
}

uint64_t sub_1B6A86928(uint64_t a1)
{
  type metadata accessor for UnsafeSparseMutableBufferPointer.BufferAndStart();
  uint64_t v2 = sub_1B6E32A88();
  if (v2 < 1) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = 0;
  while (1)
  {
    while (1)
    {
      uint64_t v5 = v4 + (v3 - v4) / 2;
      sub_1B6E32AC8();
      if (v8 <= a1) {
        break;
      }
      uint64_t v3 = v4 + (v3 - v4) / 2;
      if (v4 >= v5) {
        return 0;
      }
    }
    if (v8 + v7 > a1) {
      break;
    }
    uint64_t v4 = v5 + 1;
    if (v5 + 1 >= v3) {
      return 0;
    }
  }
  return v5;
}

uint64_t sub_1B6A86A00(uint64_t a1)
{
  sub_1B6A86928(a1);
  type metadata accessor for UnsafeSparseMutableBufferPointer.BufferAndStart();
  sub_1B6E32AC8();
  return v2;
}

uint64_t (*sub_1B6A86A64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v8 = *(void *)(a5 - 8);
  uint64_t v9 = v8;
  *a1 = a5;
  a1[1] = v8;
  uint64_t v10 = malloc(*(void *)(v8 + 64));
  a1[2] = v10;
  uint64_t v11 = sub_1B6A86A00(a2);
  (*(void (**)(void *, uint64_t, uint64_t))(v9 + 16))(v10, v11 + (a2 - v12) * *(void *)(v9 + 72), a5);
  return sub_1B6A866D8;
}

void sub_1B6A86B44(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_1B6A86B90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = sub_1B6A8553C(v9, *a2);
  uint64_t v6 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v7, a1, v4);
  ((void (*)(void *, void))v5)(v9, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
}

void (*sub_1B6A86C64(void *a1, uint64_t *a2))(void *)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B6A8553C(v4, *a2);
  return sub_1B6A85718;
}

uint64_t sub_1B6A86CD8()
{
  return swift_release();
}

uint64_t sub_1B6A86D18()
{
  return sub_1B6E316D8();
}

uint64_t (*sub_1B6A86D98(void *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_1B6A86A64(v7, *a2, *v3, v8, *(void *)(a3 + 16));
  return sub_1B68C8C94;
}

uint64_t sub_1B6A86E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1B6D677F4(a1, a2, WitnessTable, a3);
}

uint64_t sub_1B6A86E74()
{
  swift_getWitnessTable();

  return sub_1B6E31F78();
}

uint64_t sub_1B6A86EE0()
{
  swift_getWitnessTable();

  return sub_1B6E31F48();
}

void *sub_1B6A86F50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A86FF0(a1, a2, a3, MEMORY[0x1E4FBB610]);
}

uint64_t sub_1B6A86F68()
{
  swift_getWitnessTable();

  return sub_1B6E31F58();
}

void *sub_1B6A86FD8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A86FF0(a1, a2, a3, MEMORY[0x1E4FBB618]);
}

void *sub_1B6A86FF0(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x1E4FBB590]);
  *a1 = v9;
  return result;
}

uint64_t sub_1B6A87068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B6A870EC()
{
  swift_getWitnessTable();

  return sub_1B6E31F38();
}

uint64_t sub_1B6A87170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B6A871E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1B6A87238()
{
  swift_getWitnessTable();

  return sub_1B6E32018();
}

uint64_t sub_1B6A8728C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6A86114(a1, a2);
}

uint64_t type metadata accessor for UnsafeSparseMutableBufferPointer.BufferAndStart()
{
  return sub_1B62C36EC();
}

uint64_t type metadata accessor for UnsafeArray.UnsafeArrayIterator()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6A872DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B6A8738C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 24) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v10 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v9 = *v10;
    uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v11 = *v12;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)v11 + v5 + 8) & ~v5, ((unint64_t)v12 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_1B6A8749C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((((((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
}

void *sub_1B6A874E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

void *sub_1B6A8757C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

void *sub_1B6A87610(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

void *sub_1B6A876A4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1B6A87738(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 1) {
    unsigned int v7 = 1;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 24) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 1) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v6
                                                                      + 8) & ~v6);
      else {
        return *(void *)a1 == 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1B6A878E0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 1) {
    unsigned int v8 = 1;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 24) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1B6A87B50);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 1)
        {
          unint64_t v18 = (((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          int v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if (a2 > 1)
        {
          *(void *)a1 = a2 - 2;
        }
        else
        {
          *(void *)a1 = 0;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for UnsafeDynamicArray()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6A87B90()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87BAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87BC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87C2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87C90()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87CAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87D10()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for UnsafeSparseMutableBufferPointer()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6A87D44()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87D60()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87DC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87DE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87DFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87E60()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6A87EE8(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB1810(*a1, *a2);
}

uint64_t sub_1B6A87EF4()
{
  return sub_1B6BCF330();
}

uint64_t sub_1B6A87EFC()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6A87FCC()
{
  return sub_1B69EB9F8();
}

uint64_t sub_1B6A87FD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6A88504();
  *a1 = result;
  return result;
}

void sub_1B6A88004(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xED00007265747469;
  uint64_t v3 = 0x6D45656372756F73;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x6144656372756F73;
      unint64_t v2 = 0xEA00000000006174;
      goto LABEL_3;
    case 2:
      *a1 = 0x6144746567726174;
      a1[1] = 0xEA00000000006174;
      break;
    case 3:
      *a1 = 0xD000000000000011;
      a1[1] = 0x80000001B6F2E760;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B6A880B8()
{
  uint64_t result = 0x6D45656372756F73;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x656372756F73;
      goto LABEL_4;
    case 2:
      uint64_t v2 = 0x746567726174;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6A88154@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6A88504();
  *a1 = result;
  return result;
}

uint64_t sub_1B6A8817C(uint64_t a1)
{
  unint64_t v2 = sub_1B6A89D34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6A881B8(uint64_t a1)
{
  unint64_t v2 = sub_1B6A89D34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6A881F4(void *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v16 = a5;
  int v17 = a3;
  sub_1B6A89E30(0, &qword_1E9DD4D10, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  int v13 = (char *)&v16 - v12;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A89D34();
  sub_1B6E33A88();
  uint64_t v24 = a2;
  char v23 = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v5)
  {
    char v14 = BYTE1(v17);
    char v22 = v17;
    char v21 = 1;
    sub_1B6A89E94();
    sub_1B6E32FA8();
    char v20 = v14;
    char v19 = 2;
    sub_1B6A89EE8();
    sub_1B6E32FA8();
    char v18 = 3;
    sub_1B6E32F28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B6A88410()
{
  return type metadata accessor for ParticleCopyDataSystem();
}

uint64_t sub_1B6A88430@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6A89ACC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(_WORD *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_1B6A88478(void *a1)
{
  return sub_1B6A881F4(a1, *(void *)v1, *(unsigned __int16 *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

double sub_1B6A884A8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)a1 = 0xFFFFFFFFLL;
  *(_WORD *)(a1 + 8) = 3;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  return result;
}

uint64_t type metadata accessor for ParticleCopyDataSystem()
{
  return self;
}

const char *sub_1B6A884F0()
{
  return "ParticleCopyData";
}

uint64_t sub_1B6A88504()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t *sub_1B6A88550(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Color;
  *(void *)(inited + 40) = &off_1F0F9ED50;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B684A8E4((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t *sub_1B6A88784(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Orientation;
  *(void *)(inited + 40) = &off_1F0F56120;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B6849B58((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t *sub_1B6A889B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Position;
  *(void *)(inited + 40) = &off_1F0FA6F58;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B68471B8((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t *sub_1B6A88BEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for UserData1;
  *(void *)(inited + 40) = &off_1F0FAA3D0;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B684946C((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t *sub_1B6A88E20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for UserData2;
  *(void *)(inited + 40) = &off_1F0FAA5C8;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B6848D80((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t *sub_1B6A89054(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for UserData3;
  *(void *)(inited + 40) = &off_1F0FAA7C0;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B6848694((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t *sub_1B6A89288(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for UserData4;
  *(void *)(inited + 40) = &off_1F0FAA9B8;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B6847FA8((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t *sub_1B6A894BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v10 = a3;
  unint64_t v13 = HIDWORD(a3);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Velocity;
  *(void *)(inited + 40) = &off_1F0FA7C80;
  uint64_t v15 = sub_1B6E31C98();
  *(void *)(v15 + 16) = 1;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1B6A82404(inited, v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B62F6E08();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = &type metadata for EmitterReference;
  *(void *)(v16 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v16 + 32) = v10;
  *(_DWORD *)(v16 + 36) = v13;
  sub_1B62F7044(v16, (uint64_t)v20);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  sub_1B62C9DA8(a6, (uint64_t)v20, 0x200000000, v21);
  sub_1B6309B40((uint64_t)v21, (uint64_t)v22);
  if (!*(void *)&v22[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v20);
  }
  v23[2] = v22[2];
  v23[3] = v22[3];
  v23[4] = v22[4];
  v23[5] = v22[5];
  v23[0] = v22[0];
  v23[1] = v22[1];
  sub_1B62F6B80(a7);
  swift_retain();
  sub_1B68478BC((unsigned __int16 **)v23, a7, a1, a2, a6, a4, a5 & 1, (uint64_t)v23);
  swift_release();
  sub_1B62F648C(a7);
  sub_1B62CA064((uint64_t)v20);
  return sub_1B632F170(v21);
}

uint64_t sub_1B6A896F0(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(_DWORD *)(a1 + 12);
  uint64_t v4 = *(int *)(a1 + 8);
  swift_retain_n();
  BOOL v5 = v4 == -1 && v3 == 0;
  if (v5
    || (v4 & 0x80000000) != 0
    || *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v4
    || (uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v3 != -1)
    && *(_DWORD *)(v6 + 12 * (int)v4 + 8) != v3)
  {
    swift_release();
LABEL_10:
    unint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    char v10 = 1;
    LOBYTE(v11) = 3;
    LODWORD(v12) = -1;
    goto LABEL_11;
  }
  unint64_t v12 = sub_1B6966638(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)v4) + 32), *(_DWORD *)(v6 + 12 * (int)v4), *(_WORD *)(v6 + 12 * (int)v4 + 4), 32, v2);
  __int16 v11 = v14;
  uint64_t v9 = v15;
  char v17 = v16;
  swift_release();
  if ((v11 & 0xFF00) == 0x400) {
    goto LABEL_10;
  }
  unint64_t v7 = HIDWORD(v12);
  char v10 = v17 & 1;
  uint64_t v8 = (uint64_t)v11 >> 8;
  if (v12 == -1)
  {
LABEL_11:
    if (!v7) {
      goto LABEL_12;
    }
  }
  switch((char)v11)
  {
    case 1:
      sub_1B6A88784((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
    case 2:
      sub_1B6A889B8((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
    case 3:
      sub_1B6A88BEC((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
    case 4:
      sub_1B6A88E20((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
    case 5:
      sub_1B6A89054((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
    case 6:
      sub_1B6A89288((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
    case 7:
      sub_1B6A894BC((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
    default:
      sub_1B6A88550((uint64_t)off_1E6146370[v8], (uint64_t)off_1E6146390[v8], v12 | (v7 << 32), v9, v10, v2, a1);
      break;
  }
LABEL_12:

  return swift_release();
}

uint64_t getEnumTagSinglePayload for ParticleCopyData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleCopyData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)double result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleCopyData()
{
  return &type metadata for ParticleCopyData;
}

uint64_t sub_1B6A89ACC(void *a1)
{
  sub_1B6A89E30(0, &qword_1E9DD4CF0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6A89D34();
  sub_1B6E33A48();
  if (!v1)
  {
    char v16 = 0;
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    uint64_t v9 = v17;
    char v15 = 1;
    sub_1B6A89D88();
    sub_1B6E32DF8();
    char v13 = 2;
    sub_1B6A89DDC();
    sub_1B6E32DF8();
    v11[1] = v14;
    char v12 = 3;
    sub_1B6E32D68();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

unint64_t sub_1B6A89D34()
{
  unint64_t result = qword_1E9DD4CF8;
  if (!qword_1E9DD4CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4CF8);
  }
  return result;
}

unint64_t sub_1B6A89D88()
{
  unint64_t result = qword_1E9DD4D00;
  if (!qword_1E9DD4D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D00);
  }
  return result;
}

unint64_t sub_1B6A89DDC()
{
  unint64_t result = qword_1E9DD4D08;
  if (!qword_1E9DD4D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D08);
  }
  return result;
}

void sub_1B6A89E30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6A89D34();
    unint64_t v7 = a3(a1, &type metadata for ParticleCopyData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1B6A89E94()
{
  unint64_t result = qword_1E9DD4D18;
  if (!qword_1E9DD4D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D18);
  }
  return result;
}

unint64_t sub_1B6A89EE8()
{
  unint64_t result = qword_1E9DD4D20;
  if (!qword_1E9DD4D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticleCopyData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6A8A008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleCopyData.CodingKeys()
{
  return &type metadata for ParticleCopyData.CodingKeys;
}

unint64_t sub_1B6A8A044()
{
  unint64_t result = qword_1E9DD4D28;
  if (!qword_1E9DD4D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D28);
  }
  return result;
}

unint64_t sub_1B6A8A09C()
{
  unint64_t result = qword_1E9DD4D30;
  if (!qword_1E9DD4D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D30);
  }
  return result;
}

unint64_t sub_1B6A8A0F4()
{
  unint64_t result = qword_1E9DD4D38;
  if (!qword_1E9DD4D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D38);
  }
  return result;
}

uint64_t sub_1B6A8A148@<X0>(uint64_t a1@<X8>)
{
  v3[0] = 0xD000000000000015;
  v3[1] = 0x80000001B6F3EF10;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = MEMORY[0x1E4FBC860];
  v3[5] = 0xD000000000000018;
  v3[6] = 0x80000001B6F45430;
  v3[7] = 0;
  v3[8] = 0;
  v3[9] = MEMORY[0x1E4FBC860];
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  nullsub_1(v3);
  return sub_1B62CA210((uint64_t)v3, a1, &qword_1EB97EB68);
}

id sub_1B6A8A1EC(float a1, float a2, float a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *(void *)a6;
  int v10 = *(_DWORD *)(a6 + 36);
  uint64_t v11 = *(int *)(a6 + 32);
  swift_retain();
  BOOL v12 = v11 == -1 && v10 == 0;
  if (v12
    || (v11 & 0x80000000) != 0
    || *(void *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v11
    || (uint64_t v13 = *(void *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v10 != -1)
    && *(_DWORD *)(v13 + 12 * (int)v11 + 8) != v10
    || (sub_1B69653E4(*(void *)(*(void *)(v9 + 136) + 8 * *(int *)(v13 + 12 * (int)v11) + 32), *(_DWORD *)(v13 + 12 * (int)v11), *(_WORD *)(v13 + 12 * (int)v11 + 4), 32, v9, (uint64_t)v24), sub_1B62CA210((uint64_t)v24, (uint64_t)v25, &qword_1EB980080), (v26 & 1) != 0))
  {
    swift_release();
    return 0;
  }
  else
  {
    long long v21 = v25[1];
    long long v22 = v25[0];
    swift_retain();
    id v14 = (id)sub_1B62F1868(0, 64);
    uint64_t v17 = v16;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v23[0] = 0;
      v23[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      int v18 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v23[0] = 0;
      swift_retain();
      sub_1B6B33E34(v18, v23, 0xD000000000000049, 0x80000001B6F3EEC0);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      char v19 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v14 = v14;
      char v20 = &v19[v17];
      *(_OWORD *)char v20 = v22;
      *((_OWORD *)v20 + 1) = v21;
      *((float *)v20 + 8) = a1;
      *((void *)v20 + 5) = 0;
      *((_DWORD *)v20 + 9) = 0;
      *((float *)v20 + 12) = a2;
      *((float *)v20 + 13) = a3;
      swift_release();
    }
    swift_release();
  }
  return v14;
}

uint64_t sub_1B6A8A4E0(void *a1)
{
  sub_1B6A8AC48(0, &qword_1E9DD4D50, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = &v10[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A8ABF4();
  sub_1B6E33A88();
  v10[15] = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    v10[14] = 1;
    sub_1B6E32F78();
    v10[13] = 2;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B6A8A694(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB84FC(*a1, *a2);
}

uint64_t sub_1B6A8A6A0()
{
  unint64_t v1 = 0xD000000000000015;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656E68746F6F6D73;
  }
}

uint64_t sub_1B6A8A70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6A8A8B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6A8A734(uint64_t a1)
{
  unint64_t v2 = sub_1B6A8ABF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6A8A770(uint64_t a1)
{
  unint64_t v2 = sub_1B6A8ABF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6A8A7AC()
{
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v0 = sub_1B62FFCAC(7);
  *(void *)(v0 + 88) = sub_1B6A8A148;
  *(void *)(v0 + 96) = 0;
  swift_release();
  return v0;
}

double sub_1B6A8A80C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 4;
  *(void *)(a2 + 32) = 14;
  *(void *)&double result = 1;
  *(_OWORD *)(a2 + 16) = xmmword_1B6E50D30;
  return result;
}

id sub_1B6A8A82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A8A1EC(*v3, v3[1], v3[2], a1, a2, a3);
}

void sub_1B6A8A838(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B6A8AA08(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
    *(_DWORD *)(a2 + 8) = v6;
  }
}

uint64_t sub_1B6A8A868(void *a1)
{
  return sub_1B6A8A4E0(a1);
}

double sub_1B6A8A888@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1036831949;
  *(void *)a1 = 1036831949;
  *(_DWORD *)(a1 + 8) = 1092616192;
  return result;
}

ValueMetadata *type metadata accessor for ParticleVolumetricRenderer()
{
  return &type metadata for ParticleVolumetricRenderer;
}

uint64_t sub_1B6A8A8B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E68746F6F6D73 && a2 == 0xEA00000000007373;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001B6F340B0 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B6F340D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

float sub_1B6A8AA08(void *a1)
{
  sub_1B6A8AC48(0, &qword_1E9DD4D40, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A8ABF4();
  sub_1B6E33A48();
  if (!v1)
  {
    char v15 = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    char v14 = 1;
    sub_1B6E32DC8();
    char v13 = 2;
    sub_1B6E32DC8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B6A8ABF4()
{
  unint64_t result = qword_1E9DD4D48;
  if (!qword_1E9DD4D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D48);
  }
  return result;
}

void sub_1B6A8AC48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6A8ABF4();
    unint64_t v7 = a3(a1, &type metadata for ParticleVolumetricRenderer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleVolumetricRenderer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6A8AD78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleVolumetricRenderer.CodingKeys()
{
  return &type metadata for ParticleVolumetricRenderer.CodingKeys;
}

unint64_t sub_1B6A8ADB4()
{
  unint64_t result = qword_1E9DD4D58;
  if (!qword_1E9DD4D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D58);
  }
  return result;
}

unint64_t sub_1B6A8AE0C()
{
  unint64_t result = qword_1E9DD4D60;
  if (!qword_1E9DD4D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D60);
  }
  return result;
}

unint64_t sub_1B6A8AE64()
{
  unint64_t result = qword_1E9DD4D68;
  if (!qword_1E9DD4D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D68);
  }
  return result;
}

uint64_t sub_1B6A8AEB8(void *a1, float a2, float a3)
{
  sub_1B6A8B4BC(0, &qword_1E9DD4D70, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)&v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A8B468();
  sub_1B6E33A88();
  float v14 = a2;
  float v15 = a3;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6A8B044(uint64_t a1)
{
  unint64_t v2 = sub_1B6A8B468();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6A8B080(uint64_t a1)
{
  unint64_t v2 = sub_1B6A8B468();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6A8B0BC(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B6A8B298(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B6A8B0E8(void *a1)
{
  return sub_1B6A8AEB8(a1, *v1, v1[1]);
}

uint64_t type metadata accessor for ParticleAngleInit.GPUSystem()
{
  return self;
}

const char *sub_1B6A8B12C()
{
  return "SetAngle.GPU";
}

uint64_t sub_1B6A8B140()
{
  return type metadata accessor for ParticleAngleInit.GPUSystem();
}

uint64_t sub_1B6A8B160(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  swift_retain();
  uint64_t v5 = sub_1B62FE6F8(v3);
  char v7 = v6;
  swift_release();
  float v9 = *((float *)&v5 + 1);
  float v8 = *(float *)&v5;
  if (v7)
  {
    float v8 = -3.1416;
    float v9 = 3.1416;
  }
  *(float *)int v18 = v8;
  *(float *)&v18[1] = v9;
  uint64_t v10 = *a1;
  if (*a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_angle_uniforms(0);
    sub_1B6B594A8((uint64_t)v18, 1, ObjectType, v12, v13, v14, v15, v16);
  }
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v2, v10 == 0, 0, (uint64_t)a1, 0xD000000000000012, 0x80000001B6F454C0, 0);
  sub_1B6786A7C((uint64_t)a1);
  return swift_release();
}

ValueMetadata *type metadata accessor for ParticleAngleInit()
{
  return &type metadata for ParticleAngleInit;
}

float sub_1B6A8B298(void *a1)
{
  sub_1B6A8B4BC(0, &qword_1EB980998, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  float v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A8B468();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62AA858();
    sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    float v2 = *(float *)&v11[2];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B6A8B468()
{
  unint64_t result = qword_1EB97EF18;
  if (!qword_1EB97EF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF18);
  }
  return result;
}

void sub_1B6A8B4BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6A8B468();
    unint64_t v7 = a3(a1, &type metadata for ParticleAngleInit.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleAngleInit.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6A8B5BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleAngleInit.CodingKeys()
{
  return &type metadata for ParticleAngleInit.CodingKeys;
}

unint64_t sub_1B6A8B5F8()
{
  unint64_t result = qword_1E9DD4D78;
  if (!qword_1E9DD4D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D78);
  }
  return result;
}

unint64_t sub_1B6A8B650()
{
  unint64_t result = qword_1EB97EF28;
  if (!qword_1EB97EF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF28);
  }
  return result;
}

unint64_t sub_1B6A8B6A8()
{
  unint64_t result = qword_1EB97EF20;
  if (!qword_1EB97EF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF20);
  }
  return result;
}

double sub_1B6A8B6FC(uint16x4_t *a1, uint64_t a2, float32x4_t a3, float a4, float a5)
{
  switch(a2)
  {
    case 9:
      unsigned int v6 = a1->i32[0];
      *(double *)a3.i64 = sub_1B6748838(v6);
      return *(double *)a3.i64;
    case 12:
      *(uint32x2_t *)v10.i8 = vshl_u32((uint32x2_t)vdup_n_s32(a1->i32[0]), (uint32x2_t)0x1000000018);
      v10.i32[2] = a1->i32[0] << 8;
      v10.i32[3] = a1->i32[0];
      __asm { FMOV            V1.4S, #-1.0 }
      a3 = vmaxnmq_f32(vmulq_f32(vcvtq_f32_s32(vshrq_n_s32(v10, 0x18uLL)), (float32x4_t)vdupq_n_s32(0x3C010204u)), _Q1);
      __asm { FMOV            V1.4S, #1.0 }
      a3.i64[0] = vminnmq_f32(a3, _Q1).u64[0];
      return *(double *)a3.i64;
    case 19:
      a3.i16[0] = a1->i16[0];
      v29.f32[0] = (float)a3.u32[0];
      LOWORD(a4) = a1->i16[1];
      v29.f32[1] = (float)LODWORD(a4);
      *(float32x2_t *)a3.f32 = vmul_f32(v29, (float32x2_t)vdup_n_s32(0x37800080u));
      return *(double *)a3.i64;
    case 20:
      a3.i16[0] = a1->i16[0];
      LOWORD(a4) = a1->i16[1];
      LOWORD(a5) = a1->i16[2];
      v17.f32[0] = (float)a3.u32[0];
      v17.f32[1] = (float)LODWORD(a4);
      v17.i64[1] = COERCE_UNSIGNED_INT((float)LODWORD(a5));
      a3.i64[0] = vmulq_f32(v17, (float32x4_t)vdupq_n_s32(0x37800080u)).u64[0];
      return *(double *)a3.i64;
    case 21:
      a3 = vcvtq_f32_u32(vmovl_u16(*a1));
      unsigned int v18 = 931135616;
      goto LABEL_15;
    case 22:
      v19.i32[0] = a1->i16[0];
      v19.i32[1] = a1->i16[1];
      *(float32x2_t *)a3.f32 = vmul_f32(vadd_f32((float32x2_t)vadd_s32(v19, vdup_n_s32(0x4B400000u)), (float32x2_t)vdup_n_s32(0xCB400000)), (float32x2_t)vdup_n_s32(0x38000100u));
      return *(double *)a3.i64;
    case 23:
      v20.i32[0] = a1->i32[0];
      v20.i32[1] = a1->u16[2];
      float32x4_t v21 = (float32x4_t)vdupq_n_s32(0xCB400000);
      float32x4_t v22 = (float32x4_t)vaddw_s16(vdupq_n_s32(0x4B400000u), v20);
      goto LABEL_14;
    case 24:
      float32x4_t v21 = (float32x4_t)vdupq_n_s32(0xCB400000);
      float32x4_t v22 = (float32x4_t)vaddw_s16(vdupq_n_s32(0x4B400000u), (int16x4_t)*a1);
LABEL_14:
      a3 = vaddq_f32(v22, v21);
      unsigned int v18 = 939524352;
LABEL_15:
      float32x4_t v23 = (float32x4_t)vdupq_n_s32(v18);
      goto LABEL_28;
    case 25:
      float v32 = sub_1B64D90E0(a1->u16[0]);
      a3.i64[0] = __PAIR64__(COERCE_UNSIGNED_INT(sub_1B64D90E0(a1->u16[1])), LODWORD(v32));
      return *(double *)a3.i64;
    case 26:
      v7.i32[0] = a1->u16[0];
      v7.i32[1] = a1->u16[1];
      v7.i64[1] = a1->u16[2];
      v8.i64[0] = 0x8000000080000000;
      v8.i64[1] = 0x8000000080000000;
      int8x16_t v9 = vandq_s8((int8x16_t)vshlq_n_s32(v7, 0x10uLL), v8);
      a3 = (float32x4_t)vshlq_n_s32(v7, 0xDuLL);
      v8.i64[0] = 0x3800000038000000;
      v8.i64[1] = 0x3800000038000000;
      a3.i64[0] = vorrq_s8(vorrq_s8(v9, vandq_s8((int8x16_t)a3, (int8x16_t)vdupq_n_s32(0x7FE000u))), (int8x16_t)vaddq_s32((int32x4_t)vandq_s8((int8x16_t)a3, (int8x16_t)vdupq_n_s32(0xF800000u)), (int32x4_t)v8)).u64[0];
      return *(double *)a3.i64;
    case 27:
      v24.i64[0] = 0x8000000080000000;
      v24.i64[1] = 0x8000000080000000;
      a3 = (float32x4_t)vshll_n_u16(*a1, 0xDuLL);
      v25.i64[0] = 0x3800000038000000;
      v25.i64[1] = 0x3800000038000000;
      a3.i64[0] = vaddq_s32((int32x4_t)vorrq_s8(vandq_s8((int8x16_t)a3, (int8x16_t)vdupq_n_s32(0xF800000u)), vorrq_s8(vandq_s8((int8x16_t)vmovl_s16((int16x4_t)*a1), v24), vandq_s8((int8x16_t)a3, (int8x16_t)vdupq_n_s32(0x7FE000u)))), v25).u64[0];
      return *(double *)a3.i64;
    case 28:
      a3.i32[0] = a1->i32[0];
      return *(double *)a3.i64;
    case 29:
      *(uint16x4_t *)a3.f32 = *a1;
      return *(double *)a3.i64;
    case 30:
      *(uint16x4_t *)a3.f32 = *a1;
      return *(double *)a3.i64;
    case 31:
      a3 = *(float32x4_t *)a1->i8;
      return *(double *)a3.i64;
    case 40:
      uint32x4_t v26 = (uint32x4_t)vld1q_dup_f32((const float *)a1);
      a3 = vcvtq_f32_s32(vshlq_s32((int32x4_t)vshlq_u32(v26, (uint32x4_t)xmmword_1B6E729E0), (int32x4_t)xmmword_1B6E729F0));
      float32x4_t v23 = (float32x4_t)xmmword_1B6E72A20;
      goto LABEL_28;
    case 41:
      uint32x4_t v30 = (uint32x4_t)vld1q_dup_f32((const float *)a1);
      a3 = vcvtq_f32_u32((uint32x4_t)vandq_s8((int8x16_t)vshlq_u32(v30, (uint32x4_t)xmmword_1B6E72A00), (int8x16_t)xmmword_1B6E729C0));
      float32x4_t v23 = (float32x4_t)xmmword_1B6E72A10;
LABEL_28:
      a3.i64[0] = vmulq_f32(a3, v23).u64[0];
      return *(double *)a3.i64;
    case 51:
      a3.i16[0] = a1->i16[0];
      a3.f32[0] = (float)a3.u32[0];
      float v27 = 0.000015259;
      goto LABEL_22;
    case 52:
      a3.i16[0] = a1->i16[0];
      a3.f32[0] = (float)vmovl_s16(*(int16x4_t *)a3.f32).i32[0];
      float v27 = 0.000030519;
LABEL_22:
      float v28 = a3.f32[0] * v27;
      break;
    case 53:
      float v28 = sub_1B64D90E0(a1->u16[0]);
      break;
    default:
      sub_1B6E328C8();
      sub_1B6E31948();
      type metadata accessor for MTLVertexFormat(0);
      sub_1B6E32B18();
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B6A8BB08);
  }
  a3.i64[0] = LODWORD(v28);
  return *(double *)a3.i64;
}

uint64_t type metadata accessor for ParticleOpacityOverLife.System()
{
  return self;
}

uint64_t sub_1B6A8BBE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v17 = a5;
  sub_1B6A8C64C(0, &qword_1E9DD4D80, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A8C5F8();
  sub_1B6E33A88();
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  char v21 = v17;
  sub_1B665D590();
  sub_1B681F0D8((unint64_t *)&qword_1E9DD85D0);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

const char *sub_1B6A8BD7C()
{
  return "OpacityOverLife";
}

uint64_t sub_1B6A8BD90()
{
  return 0x6576727563;
}

uint64_t sub_1B6A8BDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6576727563 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6A8BE34(uint64_t a1)
{
  unint64_t v2 = sub_1B6A8C5F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6A8BE70(uint64_t a1)
{
  unint64_t v2 = sub_1B6A8C5F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6A8BEAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6A8C428(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1B6A8BEE0(void *a1)
{
  return sub_1B6A8BBE0(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1B6A8BF04()
{
  return type metadata accessor for ParticleOpacityOverLife.System();
}

double sub_1B6A8BF24()
{
  sub_1B62D2B64();
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E76B30;
  *(void *)(v0 + 32) = &type metadata for TransientOriginColor;
  *(void *)(v0 + 40) = &off_1F0F842D0;
  *(void *)(v0 + 48) = &type metadata for Color;
  *(void *)(v0 + 56) = &off_1F0F9ECD8;
  return result;
}

char *sub_1B6A8BF80@<X0>(uint64_t a1@<X8>)
{
  double result = sub_1B6D3EC54((uint64_t)&unk_1F0F90630);
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  return result;
}

uint64_t type metadata accessor for ParticleOpacityOverLife.GPUSystem()
{
  return self;
}

const char *sub_1B6A8BFE4()
{
  return "ParticleOpacityOverLife.GPU";
}

uint64_t sub_1B6A8BFF8()
{
  return type metadata accessor for ParticleOpacityOverLife.GPUSystem();
}

uint64_t sub_1B6A8C018(uint64_t a1)
{
  long long v14 = *(_OWORD *)(a1 + 16);
  long long v15 = *(_OWORD *)(a1 + 48);
  uint64_t v2 = sub_1B63058E4();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  sub_1B62EBAB4();
  BOOL v9 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAge);
  swift_release();
  if (v9 && (sub_1B62EBAB4(), BOOL v10 = sub_1B62FACF8((uint64_t)&type metadata for ParticleLifetime), swift_release(), v10))
  {
    swift_retain();
    uint64_t v11 = sub_1B6CE1610((uint64_t)v2, v4, v6, v8);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v12 = *(id *)a1;
    if (*(void *)a1) {
      objc_msgSend(*(id *)a1, sel_setTexture_atIndex_, v11, 0);
    }
    swift_retain();
    sub_1B6786A24(a1);
    sub_1B6BFF388(v15, v14, v12 == 0, 0, a1, 0xD00000000000001ALL, 0x80000001B6F455A0, 0);
    sub_1B6786A7C(a1);
    swift_unknownObjectRelease();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t destroy for KeyframeTimeline()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KeyframeTimeline(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KeyframeTimeline(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for KeyframeTimeline(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyframeTimeline(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyframeTimeline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleOpacityOverLife()
{
  return &type metadata for ParticleOpacityOverLife;
}

void *sub_1B6A8C428(void *a1)
{
  sub_1B6A8C64C(0, &qword_1EB980A38, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  char v8 = (char *)&v11 - v7;
  BOOL v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6A8C5F8();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B665D590();
    sub_1B681F0D8((unint64_t *)&qword_1EB97FD90);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    BOOL v9 = v11;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

unint64_t sub_1B6A8C5F8()
{
  unint64_t result = qword_1EB97F840;
  if (!qword_1EB97F840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F840);
  }
  return result;
}

void sub_1B6A8C64C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6A8C5F8();
    unint64_t v7 = a3(a1, &type metadata for ParticleOpacityOverLife.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleOpacityOverLife.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6A8C74CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleOpacityOverLife.CodingKeys()
{
  return &type metadata for ParticleOpacityOverLife.CodingKeys;
}

unint64_t sub_1B6A8C788()
{
  unint64_t result = qword_1E9DD4D88;
  if (!qword_1E9DD4D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D88);
  }
  return result;
}

unint64_t sub_1B6A8C7E0()
{
  unint64_t result = qword_1EB97F850;
  if (!qword_1EB97F850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F850);
  }
  return result;
}

unint64_t sub_1B6A8C838()
{
  unint64_t result = qword_1EB97F848;
  if (!qword_1EB97F848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F848);
  }
  return result;
}

uint64_t sub_1B6A8C88C(void *a1, uint64_t a2)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  if ((a2 & 0x100000000) != 0)
  {
    sub_1B62C550C((uint64_t)v5, v6);
    sub_1B6E332A8();
  }
  else
  {
    sub_1B62C550C((uint64_t)v5, v6);
    sub_1B6E332A8();
    if (!v2)
    {
      sub_1B62C550C((uint64_t)v5, v6);
      sub_1B6E33298();
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
}

uint64_t sub_1B6A8C9D0(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x100000000) != 0) {
    return sub_1B6E33928();
  }
  sub_1B6E33928();
  return sub_1B6E33958();
}

BOOL sub_1B6A8CA3C(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)a1;
  float v3 = *(float *)a2;
  if (*(unsigned char *)(a1 + 4) == 1)
  {
    if (v2 == 0.0)
    {
      if (v3 == 0.0) {
        int v6 = *(unsigned __int8 *)(a2 + 4);
      }
      else {
        LOBYTE(v6) = 0;
      }
      if (v6) {
        return 1;
      }
    }
    else if (LODWORD(v2) == 1)
    {
      if (LODWORD(v3) == 1) {
        char v4 = *(unsigned char *)(a2 + 4);
      }
      else {
        char v4 = 0;
      }
      if (v4) {
        return 1;
      }
    }
    else
    {
      if (LODWORD(v3) > 1) {
        char v7 = *(unsigned char *)(a2 + 4);
      }
      else {
        char v7 = 0;
      }
      if (v7) {
        return 1;
      }
    }
  }
  else if ((*(unsigned char *)(a2 + 4) & 1) == 0)
  {
    return v2 == v3;
  }
  return 0;
}

uint64_t sub_1B6A8CAC0()
{
  uint64_t v1 = *v0;
  unsigned __int8 v2 = *((unsigned char *)v0 + 4);
  sub_1B6E33918();
  sub_1B6A8C9D0((uint64_t)v4, v1 | ((unint64_t)v2 << 32));
  return sub_1B6E33988();
}

uint64_t sub_1B6A8CB14(uint64_t a1)
{
  return sub_1B6A8C9D0(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

uint64_t sub_1B6A8CB34()
{
  uint64_t v1 = *v0;
  unsigned __int8 v2 = *((unsigned char *)v0 + 4);
  sub_1B6E33918();
  sub_1B6A8C9D0((uint64_t)v4, v1 | ((unint64_t)v2 << 32));
  return sub_1B6E33988();
}

uint64_t sub_1B6A8CB84(void *a1)
{
  return sub_1B6A8C88C(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

ValueMetadata *type metadata accessor for BlendMode()
{
  return &type metadata for BlendMode;
}

unint64_t sub_1B6A8CBCC()
{
  unint64_t result = qword_1E9DD4D90;
  if (!qword_1E9DD4D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4D90);
  }
  return result;
}

uint64_t sub_1B6A8CC20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StringDumper()
{
  return self;
}

id sub_1B6A8CC84(uint64_t a1, uint64_t a2)
{
  os_unfair_recursive_lock_lock_with_options();
  if (*(unsigned char *)(v2 + 120) == 1)
  {
    return (id)os_unfair_recursive_lock_unlock();
  }
  else
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    char v7 = *(void **)(v2 + 72);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 72) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v7 = sub_1B62CACA8(0, v7[2] + 1, 1, v7);
      *(void *)(v2 + 72) = v7;
    }
    unint64_t v10 = v7[2];
    unint64_t v9 = v7[3];
    if (v10 >= v9 >> 1) {
      char v7 = sub_1B62CACA8(v9 > 1, v10 + 1, 1, v7);
    }
    v7[2] = v10 + 1;
    uint64_t v11 = &v7[2 * v10];
    v11[4] = sub_1B69E90EC;
    v11[5] = v6;
    *(void *)(v2 + 72) = v7;
    os_unfair_recursive_lock_unlock();
    return sub_1B6378988();
  }
}

uint64_t sub_1B6A8CDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  unint64_t v10 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked();
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6A64960(a3, a4, a5, a6);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  id v12 = (_DWORD *)((uint64_t (*)(uint64_t (**)(void)))v10)(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1B6A8CED8(uint64_t a1, uint64_t a2, void *a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6637650(a2);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8CFC8(uint64_t a1, unint64_t a2, char *a3, void *a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6637E38(a2, a3, (uint64_t)a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v10 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8D0C4(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, float a6)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  long long v14 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B66384C8(a2, (uint64_t)a3, a4 & 1, a5, a6);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v13 = (_DWORD *)v14(&runtime_thread_is_locked);
  --*v13;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8D1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  id v12 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B663877C(a2, a3, a4, (uint64_t)a5);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v11 = (_DWORD *)v12(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8D2F8(uint64_t a1, void *a2)
{
}

uint64_t sub_1B6A8D324(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6961468(a2, (uint64_t)a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v10 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_release();

  return swift_release();
}

void sub_1B6A8D42C(uint64_t a1, void *a2, double a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B69DEEC4(0, 1, a3);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8D520(uint64_t a1, void *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6A98A14(0x200000000);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v6 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v6;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8D600(uint64_t a1, unsigned char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B68831E4();
  sub_1B6A99274();
  if (*(unsigned char *)(*(void *)&a2[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions]
                + OBJC_IVAR___VFXSceneLoadOptions_setupAsTemplate) == 1)
  {
    a2[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 1;
    sub_1B6A99714();
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v6 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v6;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8D724(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B63BADF0();
    uint64_t Strong = swift_release();
  }
  uint64_t v8 = (void *)MEMORY[0x1BA9B6EE0](Strong);
  sub_1B6A9A6A4(a2);
  if (v2)
  {
    __break(1u);
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    unint64_t v9 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    swift_release();
  }
}

void sub_1B6A8D828(uint64_t a1, void *a2)
{
}

uint64_t sub_1B6A8D854(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  unint64_t v9 = *(pthread_mutex_t **)(a1 + 64);
  swift_retain();
  swift_retain();
  pthread_mutex_lock(v9);
  unint64_t v10 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B68845AC(a2, a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  id v12 = (_DWORD *)v10(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B6A8D984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v11 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v13 = sub_1B6C0A538(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = v13;
    if (a6) {
      sub_1B62E280C((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F516E0, v13, 0);
    }
    else {
      sub_1B62E364C((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F516E0, v13);
    }
    sub_1B69E0450(v15, a6 & 1);
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v16 = (_DWORD *)v11(&runtime_thread_is_locked);
  --*v16;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1B6A8DAD0(uint64_t a1, id *a2, void *a3, int a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B688649C(a2, a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v10 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8DBC8(uint64_t a1, void *a2, char *a3, id *a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B688664C((uint64_t)a2, a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v10 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8DCC4(uint64_t a1, char *a2, char *a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  id v12 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B67CAB18(*(unsigned int *)&a3[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)a3[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] << 32), 0, 1);
  char v7 = (uint64_t *)&a2[OBJC_IVAR____TtC3VFX8VFXScene_effects];
  uint64_t v8 = a3;
  uint64_t v9 = sub_1B69E3138(v7, (uint64_t)v8);

  if ((unint64_t)*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1B68E9B58(v9, v10);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v11 = (_DWORD *)v12(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8DE6C(uint64_t a1, void *a2)
{
}

void sub_1B6A8DE98(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v10 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  *a2 = sub_1B6C10DBC(a4, a5);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  id v12 = (_DWORD *)v10(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
}

void sub_1B6A8DF9C(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B696088C((uint64_t)a2, a3, a4 & 1);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v10 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_release();
}

uint64_t sub_1B6A8E09C(uint64_t a1, uint64_t *a2, uint64_t a3, char *a4, uint64_t a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v10 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  *a2 = sub_1B6B1BFA4(*(void *)&a4[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity], a5, 1, **(void **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues));
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  id v12 = (_DWORD *)v10(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_release();

  return swift_release();
}

uint64_t sub_1B6A8E1BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6A8FB4C(a1, a2, a3, a4, (void (*)(void *, uint64_t, uint64_t))sub_1B69626E8, MEMORY[0x1E4FBC898]);
}

void sub_1B6A8E1FC(uint64_t a1, void *a2, uint64_t a3)
{
}

uint64_t sub_1B6A8E23C(uint64_t a1, void (*a2)(uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B63BADF0();
    uint64_t Strong = swift_release();
  }
  a2(Strong);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  char v7 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v7;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return swift_release();
}

void sub_1B6A8E318(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, id *a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  id v12 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B69F1D60((uint64_t)a2, a3, a4, a5);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v11 = (_DWORD *)v12(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
}

void sub_1B6A8E42C(uint64_t a1, char *a2, uint64_t a3, double a4, double a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v11 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B63BADF0();
    uint64_t Strong = swift_release();
  }
  uint64_t v14 = *(void *)&a2[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  uint64_t v15 = (void *)MEMORY[0x1BA9B6EE0](Strong);
  sub_1B6A9A564(v14, a3, a5, a4);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v16 = (_DWORD *)v11(&runtime_thread_is_locked);
    --*v16;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
}

uint64_t sub_1B6A8E55C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v11 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B66F8C(a2, (uint64_t)a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v9 = (_DWORD *)v11(&runtime_thread_is_locked);
  --*v9;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));

  return swift_release();
}

void sub_1B6A8E670(uint64_t a1, char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(void *)&a2[OBJC_IVAR____TtC3VFX8VFXScene_entityManager] + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  uint64_t v7 = type metadata accessor for ScriptingConfiguration();
  ++*(void *)(v6 + *(int *)(v7 + 36));
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8E770(uint64_t a1, void *a2, char a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B69F8348((uint64_t)a2, a3 & 1);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8E860(uint64_t a1, void *a2)
{
}

void sub_1B6A8E88C(uint64_t a1, void *a2)
{
}

void sub_1B6A8E8B8(uint64_t a1, void *a2)
{
}

void sub_1B6A8E8E4(uint64_t a1, void *a2)
{
}

void sub_1B6A8E910(uint64_t a1, void *a2, void (*a3)(void *))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a3(a2);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8EA00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v16 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6A77370((uint64_t)a2, a3, a4, a5, a6, a7, a8, a9);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v15 = (_DWORD *)v16(&runtime_thread_is_locked);
  --*v15;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1B6A8EB44(uint64_t a1, char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v7 = *(void *)(*(void *)&a2[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v8 = swift_retain();
  uint64_t v9 = (void *)MEMORY[0x1BA9B6EE0](v8);
  sub_1B6377B14(v7);
  if (v2)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v10 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v10;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
}

void sub_1B6A8EC6C(uint64_t a1, void *a2, uint64_t a3)
{
}

void sub_1B6A8ECAC(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t), void (*a5)(uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v9 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a4(a2, a3);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v11 = (_DWORD *)v9(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  a5(a3);
}

void sub_1B6A8EDB8(uint64_t a1, void *a2, uint64_t a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6A77CA4((uint64_t)a2, a3);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_unknownObjectRelease();
}

void sub_1B6A8EEC0(uint64_t a1, char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B63BADF0();
    uint64_t Strong = swift_release();
  }
  uint64_t v8 = *(void *)(*(void *)&a2[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  MEMORY[0x1F4188790](Strong, v7);
  uint64_t v9 = *(void **)(v8 + 176);
  swift_retain();
  swift_retain();
  sub_1B636E6E4((uint64_t)&type metadata for WorldFromScene, (uint64_t)&off_1F0F675A0, v9, (void (*)(uint64_t))sub_1B69E8EA8);
  swift_release();
  swift_release();
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v10 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8F044(uint64_t a1, unsigned char *a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, __n128 a6)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  float32x4_t v11 = vmulq_f32(a3, a3);
  float v12 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v11, 2), vaddq_f32(v11, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v11.f32, 1))).f32[0]);
  float32x4_t v13 = vmulq_f32(a4, a4);
  float32x4_t v14 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2);
  float v15 = sqrtf(vaddq_f32(v14, vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]);
  float32x4_t v16 = vmulq_f32(a5, a5);
  LODWORD(v17) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).u32[0];
  v18.n128_u32[3] = 0;
  int32x4_t v19 = vzip2q_s32((int32x4_t)v11, (int32x4_t)v16);
  float32x4_t v20 = (float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)v11, (int32x4_t)v16), (int32x4_t)v13);
  float32x4_t v21 = (float32x4_t)vtrn2q_s32((int32x4_t)v11, (int32x4_t)v13);
  v21.i32[2] = v16.i32[1];
  float32x4_t v22 = vaddq_f32((float32x4_t)vzip1q_s32(v19, (int32x4_t)v14), vaddq_f32(v20, v21));
  v13.i64[0] = 0x80000000800000;
  v13.i64[1] = 0x80000000800000;
  int32x4_t v23 = vcgeq_f32(v13, v22);
  v22.i32[3] = 0;
  float32x4_t v24 = vrsqrteq_f32(v22);
  float32x4_t v25 = vmulq_f32(v24, vrsqrtsq_f32(v22, vmulq_f32(v24, v24)));
  int32x4_t v26 = v23;
  v26.i32[3] = 0;
  float32x4_t v27 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v26), (int8x16_t)v22, (int8x16_t)vmulq_f32(v25, vrsqrtsq_f32(v22, vmulq_f32(v25, v25))));
  float32x4_t v28 = vmulq_n_f32(a3, v27.f32[0]);
  float32x4_t v29 = vmulq_lane_f32(a4, *(float32x2_t *)v27.f32, 1);
  float32x4_t v30 = vmulq_laneq_f32(a5, v27, 2);
  int8x16_t v31 = (int8x16_t)vuzp1q_s32((int32x4_t)v30, (int32x4_t)v30);
  int8x16_t v32 = (int8x16_t)vuzp1q_s32((int32x4_t)v29, (int32x4_t)v29);
  int32x4_t v33 = (int32x4_t)v28;
  if (v23.i32[0])
  {
    int8x16_t v34 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v31, (int8x16_t)v30, 0xCuLL), vnegq_f32(v29)), v30, (float32x4_t)vextq_s8(v32, (int8x16_t)v29, 0xCuLL));
    int32x4_t v33 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v34, (int32x4_t)v34), v34, 0xCuLL);
  }
  v18.n128_f32[0] = v12;
  int8x16_t v35 = (int8x16_t)vuzp1q_s32((int32x4_t)v28, (int32x4_t)v28);
  float32x4_t v36 = v29;
  float v37 = sqrtf(v17);
  if (v23.i32[1])
  {
    int8x16_t v38 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v35, (int8x16_t)v28, 0xCuLL), vnegq_f32(v30)), v28, (float32x4_t)vextq_s8(v31, (int8x16_t)v30, 0xCuLL));
    float32x4_t v36 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v38, (int32x4_t)v38), v38, 0xCuLL);
  }
  v18.n128_f32[1] = v15;
  if (v23.i32[2])
  {
    int8x16_t v10 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v32, (int8x16_t)v29, 0xCuLL), vnegq_f32(v28)), v29, (float32x4_t)vextq_s8(v35, (int8x16_t)v28, 0xCuLL));
    float32x4_t v30 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v10, (int32x4_t)v10), v10, 0xCuLL);
  }
  v18.n128_f32[2] = v37;
  float v39 = (float)(*(float *)v33.i32 + v36.f32[1]) + v30.f32[2];
  if (v39 <= 0.0)
  {
    if (*(float *)v33.i32 < v36.f32[1] || *(float *)v33.i32 < v30.f32[2])
    {
      __n128 v46 = a6;
      if (v36.f32[1] <= v30.f32[2])
      {
        *(float32x2_t *)v44.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v33, (int32x4_t)v36), *(float32x2_t *)v30.f32);
        float32x2_t v58 = (float32x2_t)__PAIR64__(v33.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v30.f32[2] + 1.0) - *(float *)v33.i32) - v36.f32[1])));
        float32x2_t v59 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v36.f32, 0);
        int32x2_t v60 = (int32x2_t)vsub_f32(*(float32x2_t *)v33.i8, v59);
        v59.i32[0] = v58.i32[0];
        v59.i32[0] = vmul_f32(v58, v59).u32[0];
        v59.i32[1] = v60.i32[1];
        *(float32x2_t *)&v44.u32[2] = v59;
        *(float *)v60.i32 = 0.5 / v58.f32[0];
        float32x4_t v45 = (float32x4_t)vdupq_lane_s32(v60, 0);
      }
      else
      {
        float v48 = sqrtf((float)((float)(v36.f32[1] + 1.0) - *(float *)v33.i32) - v30.f32[2]);
        *(int32x2_t *)v10.i8 = vdup_laneq_s32((int32x4_t)v36, 2);
        int8x16_t v49 = v10;
        *(float *)v49.i32 = v48;
        v49.i32[0] = vmul_f32(*(float32x2_t *)v49.i8, (float32x2_t)__PAIR64__(v30.u32[1], LODWORD(v48))).u32[0];
        v49.i32[1] = vadd_f32(*(float32x2_t *)&v10, *(float32x2_t *)&v30).i32[1];
        int8x16_t v50 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v33.i8, 1), v36);
        int32x2_t v51 = (int32x2_t)vsubq_f32(v30, (float32x4_t)vdupq_laneq_s32(v33, 2)).u64[0];
        float32x4_t v45 = (float32x4_t)vextq_s8(vextq_s8(v50, v50, 4uLL), v49, 0xCuLL);
        v45.i32[3] = v51.i32[0];
        *(float *)v51.i32 = 0.5 / v48;
        float32x4_t v44 = (float32x4_t)vdupq_lane_s32(v51, 0);
      }
    }
    else
    {
      float v52 = sqrtf((float)((float)(*(float *)v33.i32 + 1.0) - v36.f32[1]) - v30.f32[2]);
      float32x2_t v53 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v36.f32, 0);
      float32x2_t v54 = vadd_f32(*(float32x2_t *)v33.i8, v53);
      v53.f32[0] = v52;
      v45.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v33.u32[1], LODWORD(v52)), v53).u32[0];
      v45.i32[1] = v54.i32[1];
      float32x2_t v55 = (float32x2_t)vzip2q_s32(v33, (int32x4_t)v36).u64[0];
      LODWORD(v56) = vadd_f32(v55, *(float32x2_t *)v30.f32).u32[0];
      int32x2_t v57 = (int32x2_t)vsub_f32(v55, *(float32x2_t *)v30.f32);
      HIDWORD(v56) = v57.i32[1];
      v45.i64[1] = v56;
      *(float *)v57.i32 = 0.5 / v52;
      float32x4_t v44 = (float32x4_t)vdupq_lane_s32(v57, 0);
      __n128 v46 = a6;
    }
  }
  else
  {
    float32x4_t v40 = (float32x4_t)vzip2q_s32((int32x4_t)v36, vuzp1q_s32((int32x4_t)v36, (int32x4_t)v30));
    v40.i32[2] = v33.i32[1];
    float v41 = sqrtf(v39 + 1.0);
    float32x4_t v42 = (float32x4_t)vtrn2q_s32((int32x4_t)v30, vzip2q_s32((int32x4_t)v30, v33));
    v42.i32[2] = v36.i32[0];
    float32x4_t v44 = vsubq_f32(v40, v42);
    v40.f32[3] = v41;
    v42.f32[3] = v41;
    float32x4_t v43 = vmulq_f32(v40, v42);
    v44.i32[3] = v43.i32[3];
    v43.f32[0] = 0.5 / v41;
    float32x4_t v45 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v43.f32, 0);
    __n128 v46 = a6;
  }
  sub_1B6A78230(*(void *)&a2[OBJC_IVAR___VFXREScene_rootEntity], a2[OBJC_IVAR___VFXREScene_rootEntity + 8], v18, (__n128)vmulq_f32(v44, v45), v46);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v61 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v61;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8F3FC(uint64_t a1, void *a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  float32x4_t v13 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6A78B50((uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float v15 = (_DWORD *)v13(&runtime_thread_is_locked);
  --*v15;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8F514(uint64_t a1, char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B63BADF0();
    uint64_t Strong = swift_release();
  }
  uint64_t v8 = *(void *)(*(void *)&a2[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  MEMORY[0x1F4188790](Strong, v7);
  uint64_t v9 = *(void **)(v8 + 176);
  swift_retain();
  swift_retain();
  sub_1B636E6E4((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v9, (void (*)(uint64_t))sub_1B69E8E74);
  swift_release();
  swift_release();
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  int8x16_t v10 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

uint64_t sub_1B6A8F6AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B69E1754(a2, a3);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return swift_release();
}

void sub_1B6A8F7A0(uint64_t a1, unsigned char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B639D66C();
  if (a2[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4]) {
    unint64_t v6 = 0x200000000;
  }
  else {
    unint64_t v6 = *(unsigned int *)&a2[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)(*(_DWORD *)&a2[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] == 0) << 33);
  }
  sub_1B6A98A14(v6);
  swift_release();
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v7 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v7;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

uint64_t sub_1B6A8F8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t), uint64_t a8)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  float v17 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B63C00(a2, a3, a4, a5, a6, a7, a8);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float v15 = (_DWORD *)v17(&runtime_thread_is_locked);
  --*v15;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6A8F9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t), uint64_t a9)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  float v17 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B63D3C(a2, a3, a4, a5, a6, a7, a8, a9);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float v15 = (_DWORD *)v17(&runtime_thread_is_locked);
  --*v15;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6A8FB0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6A8FB4C(a1, a2, a3, a4, (void (*)(void *, uint64_t, uint64_t))sub_1B6B5F4D0, MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1B6A8FB4C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t, uint64_t), uint64_t (*a6)(uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  int8x16_t v10 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a5(a2, a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float v12 = (_DWORD *)v10(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));

  return a6(a4);
}

void sub_1B6A8FC68(uint64_t a1, unsigned char *a2, char a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  unint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  unint64_t v8 = sub_1B6B5BB30();
  if (v9)
  {
    sub_1B6D14B94((a3 & 1) == 0, v8, v9);
  }
  else
  {
    char v10 = a3 & 1;
    a2[OBJC_IVAR____TtC3VFX9VFXEffect__enabled] = v10;
    if (a2[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] != 1)
    {
      unint64_t v11 = *(unsigned int *)&a2[OBJC_IVAR____TtC3VFX9VFXEffect_effectID];
      sub_1B639D66C();
      uint64_t v12 = swift_retain();
      sub_1B69DCB84(v12, v10, v12, v11);
      swift_release();
    }
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float32x4_t v13 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v13;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

uint64_t sub_1B6A8FDCC(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  unint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B63E74(a2 & 1, a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  char v10 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v10;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return swift_release();
}

void sub_1B6A8FEC8(uint64_t a1, unsigned char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B639D66C();
  sub_1B67CA2E4(*(unsigned int *)&a2[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)a2[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] << 32), *(void *)&a2[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity], a2[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity + 8], a2[OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned]);
  swift_release();
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v6 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v6;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A8FFF0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v12 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6CC9870((uint64_t)a2, (uint64_t)a3, a4, a5);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v11 = (_DWORD *)v12(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_unknownObjectRelease();
  swift_release();
}

void sub_1B6A90118(uint64_t a1, void *a2)
{
}

void sub_1B6A90144(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  unint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B63BADF0();
    uint64_t Strong = swift_release();
  }
  a3(Strong);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v9 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v9;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

void sub_1B6A90228(uint64_t a1, void *a2, void *a3, void *a4, double a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v10 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6CCA278((uint64_t)a2, (uint64_t)a3, a4, a5);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v12 = (_DWORD *)v10(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_unknownObjectRelease();
}

void sub_1B6A9033C(uint64_t a1, char a2, void *a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  unint64_t v6 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6D62284(a2 & 1, (uint64_t)a3);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v8 = (_DWORD *)v6(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
}

uint64_t sub_1B6A9042C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  unint64_t v11 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6659358(a2, a3, a4);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v9 = (_DWORD *)v11(&runtime_thread_is_locked);
  --*v9;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_release();
  return swift_release();
}

uint64_t sub_1B6A90544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  float32x4_t v14 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v16 = sub_1B6C0A538(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
  if (v17)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t v18 = v16;
    swift_bridgeObjectRetain();
    sub_1B6BF96F4(v18, a2, a6, a7, v23);
    sub_1B6B630D4((uint64_t)v23, (void *)a8);
    sub_1B62B32CC((uint64_t)v23);
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  int32x4_t v19 = (_DWORD *)v14(&runtime_thread_is_locked);
  --*v19;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1B6A906BC(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  char v10 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B688576C((uint64_t)a2, a3, a4, a5, v12);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float32x4_t v13 = (_DWORD *)v10(&runtime_thread_is_locked);
  --*v13;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
}

uint64_t sub_1B6A907BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  float v15 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B63A78(a2, a3, a4, a5, a6);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float32x4_t v13 = (_DWORD *)v15(&runtime_thread_is_locked);
  --*v13;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  swift_bridgeObjectRelease();
  return swift_release();
}

id sub_1B6A908D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  os_unfair_recursive_lock_lock_with_options();
  if (*(unsigned char *)(v4 + 120) == 1)
  {
    return (id)os_unfair_recursive_lock_unlock();
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *(void *)(v4 + 40);
    *(void *)(v4 + 40) = 0x8000000000000000;
    sub_1B6378B40((uint64_t)sub_1B69E90EC, v9, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 40) = v11;
    swift_bridgeObjectRelease();
    os_unfair_recursive_lock_unlock();
    return sub_1B6378988();
  }
}

uint64_t sub_1B6A909E8(uint64_t a1)
{
  pthread_setname_np("com.apple.vfx.runtime-thread");
  *(void *)(a1 + 144) = pthread_self();
  uint64_t v2 = (void *)MEMORY[0x1BA9B6EE0]();
  sub_1B63765E4(a1);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void **)(v3 + 16);
  swift_retain();
  objc_msgSend(v4, sel_lock);
  *(unsigned char *)(v3 + 24) = 1;
  objc_msgSend(*(id *)(v3 + 16), sel_signal);
  objc_msgSend(*(id *)(v3 + 16), sel_unlock);
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_1B6A90AA8()
{
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 112), -1, -1);
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    uint64_t v1 = *(pthread_mutex_t **)(v0 + 64);
    pthread_mutex_destroy(v1);
    MEMORY[0x1BA9B84C0](v1, -1, -1);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_1B6A90B40()
{
  sub_1B6A90AA8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RuntimeThread()
{
  return self;
}

uint64_t sub_1B6A90B98()
{
  pthread_mutex_lock(*(pthread_mutex_t **)(v0 + 64));
  uint64_t v1 = *(void *)(v0 + 24);
  objc_msgSend(*(id *)(v1 + 16), sel_lock);
  *(unsigned char *)(v1 + 24) = 0;
  objc_msgSend(*(id *)(v1 + 16), sel_unlock);
  uint64_t v2 = *(void *)(v0 + 16);
  objc_msgSend(*(id *)(v2 + 16), sel_lock);
  *(unsigned char *)(v2 + 24) = 1;
  objc_msgSend(*(id *)(v2 + 16), sel_signal);
  objc_msgSend(*(id *)(v2 + 16), sel_unlock);
  pthread_mutex_unlock(*(pthread_mutex_t **)(v0 + 64));
  objc_msgSend(*(id *)(v1 + 16), sel_lock);
  while ((*(unsigned char *)(v1 + 24) & 1) == 0)
    objc_msgSend(*(id *)(v1 + 16), sel_wait);
  *(unsigned char *)(v1 + 24) = 0;
  objc_msgSend(*(id *)(v1 + 16), sel_unlock);
  pthread_mutex_lock(*(pthread_mutex_t **)(v0 + 64));
  uint64_t v3 = *(pthread_mutex_t **)(v0 + 64);

  return pthread_mutex_unlock(v3);
}

uint64_t sub_1B6A90C88(char a1)
{
  os_unfair_recursive_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 152) == 1)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    objc_msgSend(*(id *)(v3 + 16), sel_lock);
    *(unsigned char *)(v3 + 24) = 0;
    objc_msgSend(*(id *)(v3 + 16), sel_unlock);
    return os_unfair_recursive_lock_unlock();
  }
  else
  {
    *(unsigned char *)(v1 + 152) = 1;
    uint64_t v5 = *(void *)(v1 + 16);
    objc_msgSend(*(id *)(v5 + 16), sel_lock);
    *(unsigned char *)(v5 + 24) = 0;
    objc_msgSend(*(id *)(v5 + 16), sel_unlock);
    uint64_t result = os_unfair_recursive_lock_unlock();
    if (a1)
    {
      return sub_1B6A90B98();
    }
  }
  return result;
}

uint64_t sub_1B6A90D70()
{
  os_unfair_recursive_lock_lock_with_options();
  *(unsigned char *)(v0 + 152) = 0;
  os_unfair_recursive_lock_lock_with_options();
  char v1 = *(unsigned char *)(v0 + 152);
  os_unfair_recursive_lock_unlock();
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    objc_msgSend(*(id *)(v2 + 16), sel_lock);
    *(unsigned char *)(v2 + 24) = 1;
    objc_msgSend(*(id *)(v2 + 16), sel_signal);
    objc_msgSend(*(id *)(v2 + 16), sel_unlock);
  }

  return os_unfair_recursive_lock_unlock();
}

uint64_t sub_1B6A90E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A90F70(a1, a2, a3, (uint64_t)&unk_1F0FCAB08, (uint64_t)sub_1B6A910A0);
}

uint64_t sub_1B6A90E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A90E58(a1, a2, a3, MEMORY[0x1E4FBCF70]);
}

uint64_t sub_1B6A90E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A90E58(a1, a2, a3, MEMORY[0x1E4FBCF68]);
}

uint64_t sub_1B6A90E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1B6A910A4(&qword_1E9DD4D98);

  return a4(a1, v6, v7);
}

uint64_t sub_1B6A90EF8(uint64_t a1)
{
  return MEMORY[0x1F4187E18](a1, *v1);
}

void sub_1B6A90F24()
{
}

uint64_t sub_1B6A90F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A90F70(a1, a2, a3, (uint64_t)&unk_1F0FCAB30, (uint64_t)sub_1B6A910A0);
}

uint64_t sub_1B6A90F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v5;
  swift_retain();
  sub_1B6A8CC84(a5, v8);

  return swift_release();
}

uint64_t sub_1B6A90FDC(uint64_t a1)
{
  return MEMORY[0x1F4187C30](a1, *v1);
}

uint64_t sub_1B6A91008(uint64_t a1)
{
  return MEMORY[0x1F4187C28](a1, *v1);
}

uint64_t sub_1B6A91034()
{
  return sub_1B6A910A4(&qword_1E9DD4D98);
}

uint64_t sub_1B6A91068()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6A910A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RuntimeThread();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6A910E4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = sub_1B6A910A4(&qword_1E9DD39A8);

  return MEMORY[0x1F4188238](v1, v2, v3);
}

uint64_t sub_1B6A91140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A91198(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B6637420);
}

uint64_t sub_1B6A9116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6A91198(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B66388CC);
}

uint64_t sub_1B6A91198(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v9 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a4(&v14, a2, a3);
  if (v4)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v11 = (_DWORD *)v9(&runtime_thread_is_locked);
    --*v11;
    return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    float32x4_t v13 = (_DWORD *)v9(&runtime_thread_is_locked);
    --*v13;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return v14;
  }
}

uint64_t sub_1B6A912C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v8 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B639D66C();
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v10 = 0x200000000;
  }
  else {
    unint64_t v10 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(a2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  uint64_t v11 = sub_1B677E954(a3, a4, v10);
  swift_release();
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  if (v11 == 0xFFFFFFFFLL) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v11;
  }
  float32x4_t v13 = (_DWORD *)v8(&runtime_thread_is_locked);
  --*v13;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v12;
}

BOOL sub_1B6A91400(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v6)
  {
    swift_retain();
    sub_1B67FF5E4();
    swift_release();
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v7 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v7;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v6 == 0;
}

uint64_t sub_1B6A914FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v11 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B6156C(a2, a3, a4 & 0xFFFFFFFFFFLL, a5, &v16);
  if (v5)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    float32x4_t v13 = (_DWORD *)v11(&runtime_thread_is_locked);
    --*v13;
    return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    float v15 = (_DWORD *)v11(&runtime_thread_is_locked);
    --*v15;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return v16;
  }
}

uint64_t sub_1B6A91638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v9 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  unint64_t v11 = sub_1B6C0A538(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
  if (v12) {
    char v13 = 0;
  }
  else {
    char v13 = sub_1B69DE438(v11);
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v14 = (_DWORD *)v9(&runtime_thread_is_locked);
  --*v14;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v13 & 1;
}

BOOL sub_1B6A91744(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  if (!swift_weakLoadStrong())
  {
    if (*(void *)(a2 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  swift_retain();
  BOOL v7 = sub_1B62EC0CC((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FDE0, v6);
  swift_release();
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v8 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v8;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return !v7;
}

uint64_t sub_1B6A918CC(uint64_t a1, uint64_t a2)
{
  return sub_1B6A91CA4(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B69F8814) & 1;
}

uint64_t sub_1B6A918FC(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = sub_1B6B5BB30();
  if (v7)
  {
    uint64_t v8 = v6;
    swift_retain();
    BOOL v9 = sub_1B62EC0CC((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FDE0, v8);
    swift_release();
    char v10 = !v9;
  }
  else
  {
    char v10 = *(unsigned char *)(a2 + OBJC_IVAR____TtC3VFX9VFXEffect__enabled);
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v11 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v10 & 1;
}

uint64_t sub_1B6A91A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v7 = *(void *)(a3 + OBJC_IVAR____TtC3VFX17VFXRendererLegacy_effect);
  if (!v7) {
    goto LABEL_6;
  }
  uint64_t v8 = (unsigned int *)(v7 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
  if (*((unsigned char *)v8 + 4) == 1)
  {
    uint64_t v7 = 0;
LABEL_6:
    unint64_t v9 = 0x200000000;
    goto LABEL_8;
  }
  uint64_t v7 = *v8;
  unint64_t v9 = (unint64_t)(v7 == 0) << 33;
LABEL_8:
  char v10 = sub_1B6A9A2C0(v9 | v7);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v11 = (_DWORD *)v5(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v10 & 1;
}

BOOL sub_1B6A91B50(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  if (v6 == -1 && v7 == 0)
  {
    BOOL v10 = 0;
  }
  else
  {
    uint64_t v9 = v6 | (v7 << 32);
    swift_retain();
    BOOL v10 = sub_1B62EC0CC((uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1F0F78798, v9);
    swift_release();
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  unint64_t v11 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v10;
}

uint64_t sub_1B6A91C74(uint64_t a1, uint64_t a2)
{
  return sub_1B6A91CA4(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B6D6506C) & 1;
}

uint64_t sub_1B6A91CA4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v7 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a3(&v13, a2);
  if (v3)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    unint64_t v11 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v11;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    char v10 = v13;
  }
  return v10 & 1;
}

uint64_t (*sub_1B6A91DD0(uint64_t a1, uint64_t a2))()
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  if (*(void *)(*(void *)(a2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    swift_retain();
    swift_retain();
    uint64_t v16 = sub_1B637A5C0();
    uint64_t v15 = v6;
    swift_release();
    swift_retain();
    uint64_t v7 = sub_1B637A5C0();
    uint64_t v9 = v8;
    swift_release();
    swift_release();
    char v10 = (void *)swift_allocObject();
    v10[2] = v16;
    v10[3] = v15;
    v10[4] = v7;
    v10[5] = v9;
    unint64_t v11 = sub_1B69E90C4;
  }
  else
  {
    unint64_t v11 = (uint64_t (*)())nullsub_1;
    char v10 = 0;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v10;
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v13 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v13;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return sub_1B69E90EC;
}

uint64_t (*sub_1B6A91FB4(uint64_t a1, uint64_t a2))()
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  if (*(void *)(*(void *)(*(void *)(a2 + OBJC_IVAR___VFXREScene_scene)
                             + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = sub_1B637A5C0();
    uint64_t v7 = v6;
    swift_release();
    swift_retain();
    uint64_t v8 = sub_1B637A5C0();
    uint64_t v10 = v9;
    swift_release();
    swift_release();
    unint64_t v11 = (void *)swift_allocObject();
    _DWORD v11[2] = v16;
    _DWORD v11[3] = v7;
    v11[4] = v8;
    v11[5] = v10;
    swift_release();
    uint64_t v12 = sub_1B69E8F00;
  }
  else
  {
    uint64_t v12 = (uint64_t (*)())nullsub_1;
    unint64_t v11 = 0;
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v11;
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v14 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v14;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return sub_1B69E90EC;
}

uint64_t sub_1B6A921C4(uint64_t a1, uint64_t a2)
{
  return sub_1B6A9221C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B69F857C);
}

uint64_t sub_1B6A921F0(uint64_t a1, uint64_t a2)
{
  return sub_1B6A9221C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B6D61F60);
}

uint64_t sub_1B6A9221C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v7 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a3(&v12, a2);
  if (v3)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v9;
    return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    unint64_t v11 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v11;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return v12;
  }
}

uint64_t sub_1B6A92344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  char v7 = *(unsigned char *)(a3 + OBJC_IVAR___VFXREScene_isPrepared);
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1B6914964(v8, v7 ^ 1u, v7);
  swift_release();
  swift_retain();
  uint64_t v10 = sub_1B6852104();
  swift_release();
  if (v10)
  {
    *(unsigned char *)(v10 + 16) = 1;
    swift_release();
  }
  uint64_t Strong = swift_weakLoadStrong();
  swift_retain();
  if (Strong)
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v12 = (_DWORD *)v5(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v9;
}

uint64_t sub_1B6A924C8(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(void *)(*(void *)(a2 + OBJC_IVAR___VFXREScene_scene) + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v7 = qword_1E9DCC560;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  v13[0] = xmmword_1E9DD4660;
  v13[1] = *(_OWORD *)algn_1E9DD4670;
  uint64_t v14 = qword_1E9DD4680;
  sub_1B62C9DA8(v6, (uint64_t)v13, 0x200000000, v11);
  sub_1B62CA210((uint64_t)v11, (uint64_t)v12, (unint64_t *)&qword_1EB97DC50);
  if (v12[0])
  {
    uint64_t v8 = v12[10];
    swift_release();
    sub_1B632F170(v11);
  }
  else
  {
    swift_release();
    uint64_t v8 = 0;
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v9 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v9;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v8;
}

float32x4_t sub_1B6A9267C(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  id v7 = *(id *)(a2 + OBJC_IVAR___VFXREScene_scene);
  uint64_t v8 = swift_retain();
  sub_1B6B39F10(v8, (uint64_t)v19);
  uint64_t v21 = v2;
  uint64_t v9 = v19[0];
  uint64_t v10 = v19[1];
  uint64_t v11 = v19[2];
  uint64_t v12 = v19[3];
  swift_release();
  sub_1B62CA210((uint64_t)v19, (uint64_t)v20, &qword_1E9DCE168);
  char v13 = v20[32];

  if (v13)
  {
    float32x4_t v17 = (float32x4_t)xmmword_1B6E77AF0;
    float32x4_t v18 = (float32x4_t)xmmword_1B6E4F370;
  }
  else
  {
    v14.i64[0] = v9;
    v14.i64[1] = v10;
    float32x4_t v18 = v14;
    v14.i64[0] = v11;
    v14.i64[1] = v12;
    float32x4_t v17 = v14;
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v15 = (_DWORD *)v5(&runtime_thread_is_locked);
  --*v15;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return vsubq_f32(v18, v17);
}

uint64_t sub_1B6A92824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  float32x4_t v17 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B5D6C0(a2, a3, a4, a5, a6, &v18);
  if (v6)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    float32x4_t v14 = (_DWORD *)v17(&runtime_thread_is_locked);
    --*v14;
    return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v16 = (_DWORD *)v17(&runtime_thread_is_locked);
    --*v16;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return v18;
  }
}

uint64_t sub_1B6A9297C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v9 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B639D66C();
  uint64_t v11 = sub_1B6B64914(a3, 0, 0, a4, a5);
  swift_release();
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v12 = (_DWORD *)v9(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v11;
}

uint64_t sub_1B6A92A88(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B5FD80(a2, &v10);
  if (v2)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    id v7 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v7;
    return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return v10;
  }
}

uint64_t sub_1B6A92BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v9 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6B606C8(a2, a3, a4, &v14);
  if (v4)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v11 = (_DWORD *)v9(&runtime_thread_is_locked);
    --*v11;
    return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    char v13 = (_DWORD *)v9(&runtime_thread_is_locked);
    --*v13;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return v14;
  }
}

double sub_1B6A92CD0(uint64_t a1, uint64_t a2)
{
  return sub_1B6A92D54(a1, a2, (void (*)(long long *__return_ptr, uint64_t))sub_1B6D62938);
}

double sub_1B6A92CFC(uint64_t a1, uint64_t a2)
{
  return sub_1B6A92D54(a1, a2, (void (*)(long long *__return_ptr, uint64_t))sub_1B6D63030);
}

double sub_1B6A92D28(uint64_t a1, uint64_t a2)
{
  return sub_1B6A92D54(a1, a2, (void (*)(long long *__return_ptr, uint64_t))sub_1B6D64578);
}

double sub_1B6A92D54(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  id v7 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a3(&v12, a2);
  if (v3)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v11 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v11;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return *(double *)&v12;
  }
  return result;
}

double sub_1B6A92E80(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6D63550(a2, &v10);
  if (v2)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    id v7 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v7;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return *(double *)&v10;
  }
  return result;
}

double sub_1B6A92FA0(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6D63CE4(a2, &v10);
  if (v2)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    id v7 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v7;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return *(double *)&v10;
  }
  return result;
}

float sub_1B6A930C0(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  float v8 = 0.0;
  if (v6 != -1 || v7 != 0)
  {
    uint64_t v10 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v10, v13);
    swift_release();
    if (v14 != 2) {
      float v8 = (float)(v13[0] * 180.0) / 3.1416;
    }
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v11 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v8;
}

float sub_1B6A9320C(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  if (v6 == -1 && v7 == 0)
  {
    float v11 = 0.0;
    uint64_t v10 = 2;
  }
  else
  {
    uint64_t v9 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v9, &v14);
    swift_release();
    uint64_t v10 = v15;
    float v11 = *((float *)&v14 + 1);
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  if (v10 == 2) {
    float v11 = 0.0;
  }
  long long v12 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v11;
}

float sub_1B6A93348(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  if (v6 == -1 && v7 == 0)
  {
    float v11 = 0.0;
    uint64_t v10 = 2;
  }
  else
  {
    uint64_t v9 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v9, &v14);
    swift_release();
    uint64_t v10 = v15;
    float v11 = *((float *)&v14 + 2);
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  if (v10 == 2) {
    float v11 = 0.0;
  }
  long long v12 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v11;
}

float sub_1B6A93484(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  if (v6 == -1 && v7 == 0)
  {
    float v11 = 0.0;
    uint64_t v10 = 2;
  }
  else
  {
    uint64_t v9 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v9, &v14);
    swift_release();
    uint64_t v10 = v15;
    float v11 = *((float *)&v14 + 3);
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  if (v10 == 2) {
    float v11 = 0.0;
  }
  long long v12 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v11;
}

float sub_1B6A935C0(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  if (v6 == -1 && v7 == 0)
  {
    float v11 = 0.0;
    uint64_t v10 = 2;
  }
  else
  {
    uint64_t v9 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v9, &v14);
    swift_release();
    uint64_t v10 = v16;
    float v11 = v15;
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  if (v10 == 2) {
    float v11 = 0.0;
  }
  long long v12 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v11;
}

float sub_1B6A936FC(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  if (v6 == -1 && v7 == 0)
  {
    float v11 = 0.0;
    uint64_t v10 = 2;
  }
  else
  {
    uint64_t v9 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v9, &v14);
    swift_release();
    uint64_t v10 = v16;
    float v11 = v15;
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  if (v10 == 2) {
    float v11 = 0.0;
  }
  long long v12 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v11;
}

float sub_1B6A93838(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  float v8 = 0.0;
  if (v6 != -1 || v7 != 0)
  {
    uint64_t v10 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v10, &v13);
    swift_release();
    if (v15 != 2) {
      float v8 = *((float *)&v13 + 3) / v14;
    }
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  float v11 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v11;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return v8;
}

float sub_1B6A9396C(uint64_t a1, uint64_t a2)
{
  return sub_1B6A939F0(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B6D64A90);
}

float sub_1B6A93998(uint64_t a1, uint64_t a2)
{
  return sub_1B6A939F0(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B6D64BC8);
}

float sub_1B6A939C4(uint64_t a1, uint64_t a2)
{
  return sub_1B6A939F0(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B6D64E20);
}

float sub_1B6A939F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v7 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  a3(&v12, a2);
  if (v3)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    float v11 = (_DWORD *)v7(&runtime_thread_is_locked);
    --*v11;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return *(float *)&v12;
  }
  return result;
}

int8x8_t sub_1B6A93B18(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v4 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  uint64_t v6 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  uint64_t v7 = *(unsigned int *)(a2 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4);
  if (v6 == -1 && v7 == 0)
  {
    int8x8_t v11 = 0;
    uint64_t v10 = 2;
  }
  else
  {
    uint64_t v9 = v6 | (v7 << 32);
    swift_retain();
    sub_1B695EBC4(v9, &v14);
    swift_release();
    uint64_t v10 = v15;
    int8x8_t v11 = v16;
  }
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v12 = (_DWORD *)v4(&runtime_thread_is_locked);
  --*v12;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  return vbic_s8(v11, (int8x8_t)vceqd_s64(v10, 2));
}

uint64_t sub_1B6A93C5C(uint64_t a1, char *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 64));
  uint64_t v5 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  if (swift_weakLoadStrong())
  {
    sub_1B63BADF0();
    swift_release();
  }
  sub_1B6D65278(a2, &v10);
  if (v2)
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v7 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v7;
    return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
  }
  else
  {
    if (swift_weakLoadStrong())
    {
      sub_1B69E090C();
      swift_release();
    }
    uint64_t v9 = (_DWORD *)v5(&runtime_thread_is_locked);
    --*v9;
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 64));
    return v10;
  }
}

uint64_t sub_1B6A93D78(uint64_t a1, pthread_mutex_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  type metadata accessor for WakeUpEvent();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 24) = 0;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28BB0]), sel_init);
  *(void *)(v7 + 16) = v8;
  id v9 = v8;
  unsigned __int8 v10 = (void *)sub_1B6E31768();
  objc_msgSend(v9, sel_setName_, v10);

  *(void *)(v4 + 16) = v7;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 24) = 0;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28BB0]), sel_init);
  *(void *)(v11 + 16) = v12;
  id v13 = v12;
  long long v14 = (void *)sub_1B6E31768();
  objc_msgSend(v13, sel_setName_, v14);

  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 24) = v11;
  *(void *)(v4 + 40) = MEMORY[0x1E4FBC868];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 24) = 0;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28BB0]), sel_init);
  *(void *)(v15 + 16) = v16;
  id v17 = v16;
  uint64_t v18 = (void *)sub_1B6E31768();
  objc_msgSend(v17, sel_setName_, v18);

  *(void *)(v4 + 48) = v15;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 72) = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 80) = v19;
  float32x4_t v20 = (void *)swift_slowAlloc();
  *float32x4_t v20 = 0;
  *(void *)(v4 + 88) = "RuntimeThread work queue lock";
  *(void *)(v4 + 96) = 29;
  *(unsigned char *)(v4 + 104) = 2;
  *(void *)(v4 + 112) = v20;
  *(unsigned char *)(v4 + 120) = 0;
  swift_weakInit();
  *(void *)(v4 + 136) = 0;
  *(void *)(v4 + 144) = 0;
  *(unsigned char *)(v4 + 152) = 0;
  swift_weakAssign();
  *(void *)(v4 + 136) = a3;
  swift_retain();
  swift_release();
  if (a2)
  {
    *(unsigned char *)(v4 + 56) = 0;
  }
  else
  {
    *(unsigned char *)(v4 + 56) = 1;
    v30.__sig = 0;
    *(void *)v30.__opaque = 0;
    pthread_mutexattr_init((pthread_mutexattr_t *)&v30);
    pthread_mutexattr_settype((pthread_mutexattr_t *)&v30, 2);
    pthread_mutexattr_setpolicy_np((pthread_mutexattr_t *)&v30, 1);
    a2 = (pthread_mutex_t *)swift_slowAlloc();
    pthread_mutex_init(a2, (const pthread_mutexattr_t *)&v30);
  }
  *(void *)(v4 + 64) = a2;
  memset(&v30, 0, sizeof(v30));
  pthread_attr_init(&v30);
  pthread_attr_setdetachstate(&v30, 2);
  pthread_attr_setschedpolicy(&v30, 2);
  sched_param v29 = (sched_param)45;
  pthread_attr_setschedparam(&v30, &v29);
  swift_retain();
  switch(pthread_create((pthread_t *)(v4 + 32), &v30, (void *(__cdecl *)(void *))sub_1B6A90AA4, (void *)v4))
  {
    case 0:
      goto LABEL_27;
    case 1:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v21 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v28[0] = 0;
      swift_retain();
      uint64_t v22 = 0xD00000000000008ELL;
      int32x4_t v23 = "Runtime thread creation failed: the caller does not have appropriate permission to set the required scheduli"
            "ng parameters or scheduling policy";
      goto LABEL_25;
    case 22:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v21 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v28[0] = 0;
      swift_retain();
      uint64_t v22 = 0xD000000000000049;
      int32x4_t v23 = "Runtime thread creation failed: the attributes value specified is invalid";
      goto LABEL_25;
    case 35:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v21 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v28[0] = 0;
      swift_retain();
      uint64_t v22 = 0xD0000000000000ABLL;
      int32x4_t v23 = "Runtime thread creation failed: the system lacked the necessary resources to create another thread, or the s"
            "ystem imposed limit on the total number of threads in a process";
LABEL_25:
      sub_1B6B33E34(v21, v28, v22, (unint64_t)(v23 - 32) | 0x8000000000000000);
      swift_release();
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      v28[1] = 0x80000001B6F457D0;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      int v24 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v28[0] = 0;
      swift_retain();
      sub_1B6B33E34(v24, v28, 0xD00000000000002ELL, 0x80000001B6F457D0);
      swift_release();
      swift_bridgeObjectRelease();
      break;
  }
  swift_release();
LABEL_27:
  uint64_t v25 = *(void *)(v4 + 48);
  int32x4_t v26 = *(void **)(v25 + 16);
  swift_retain();
  objc_msgSend(v26, sel_lock);
  while ((*(unsigned char *)(v25 + 24) & 1) == 0)
    objc_msgSend(*(id *)(v25 + 16), sel_wait);
  *(unsigned char *)(v25 + 24) = 0;
  objc_msgSend(*(id *)(v25 + 16), sel_unlock);
  swift_release();
  pthread_attr_destroy(&v30);
  return v4;
}

void sub_1B6A944EC()
{
  if (!qword_1EB980E18)
  {
    sub_1B62CB664();
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980E18);
    }
  }
}

uint64_t sub_1B6A94548()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1B6A945A0(float32x4_t *a1, _OWORD *a2)
{
  *(double *)&long long v3 = sub_1B638DF64(*a1, 2.0);
  *a2 = v3;
}

uint64_t sub_1B6A945D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(*(void *)v0 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v2 = 0;
  }
  sub_1B68E95BC(0, v1 != 0);
  return v2;
}

uint64_t sub_1B6A94630(uint64_t a1, unsigned __int8 a2)
{
  if (swift_dynamicCastMetatype()) {
    goto LABEL_2;
  }
  type metadata accessor for frame_constants(0);
  if (swift_dynamicCastMetatype()) {
    goto LABEL_4;
  }
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype())
  {
    char v4 = 0;
    return v4 & 1;
  }
  if (swift_dynamicCastMetatype()) {
    goto LABEL_2;
  }
  if (swift_dynamicCastMetatype()) {
    goto LABEL_2;
  }
  sub_1B665D590();
  if (swift_dynamicCastMetatype()) {
    goto LABEL_2;
  }
  if (swift_dynamicCastMetatype())
  {
    if (a2 > 1u)
    {
      swift_bridgeObjectRelease();
      char v4 = 0;
    }
    else
    {
      char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      char v4 = v7 ^ 1;
    }
  }
  else
  {
    if (a1 == MEMORY[0x1E4FBC840] + 8)
    {
LABEL_2:
      char v4 = 1;
      return v4 & 1;
    }
    if (swift_dynamicCastMetatype()
      || (type metadata accessor for __vfx_sampler1d(0), swift_dynamicCastMetatype())
      || (type metadata accessor for __vfx_sampler2d(0), swift_dynamicCastMetatype())
      || (type metadata accessor for __vfx_sampler3d(0), swift_dynamicCastMetatype()))
    {
LABEL_4:
      char v4 = (a2 & 1) == 0;
      return v4 & 1;
    }
    if (swift_conformsToProtocol2()) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = 0;
    }
    char v4 = v6 != 0;
  }
  return v4 & 1;
}

uint64_t sub_1B6A94848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62CAAD8(a1, (uint64_t)&v28);
  sub_1B63989B8(0, &qword_1E9DD4DA8);
  uint64_t v4 = MEMORY[0x1E4FBC840];
  if (!swift_dynamicCast()) {
    return sub_1B62CAAD8(a1, a2);
  }
  sub_1B6395ED8(0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
  uint64_t v6 = v5;
  if (swift_dynamicCastMetatype())
  {
    objc_msgSend(v27, sel_VFXFloat2Value);
    uint64_t v8 = v7;
    *((void *)&v29 + 1) = v6;

    *(void *)&long long v28 = v8;
  }
  else
  {
    sub_1B6395ED8(0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
    uint64_t v11 = v10;
    if (swift_dynamicCastMetatype())
    {
      objc_msgSend(v27, sel_VFXFloat3Value);
    }
    else
    {
      sub_1B6395ED8(0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
      uint64_t v11 = v13;
      if (!swift_dynamicCastMetatype())
      {
        type metadata accessor for simd_float4x4(0);
        uint64_t v16 = v15;
        if (swift_dynamicCastMetatype())
        {
          objc_msgSend(v27, sel_VFXMatrix4Value);
          long long v24 = v18;
          long long v26 = v17;
          long long v22 = v20;
          long long v23 = v19;
          *((void *)&v29 + 1) = v16;
          int v21 = (_OWORD *)swift_allocObject();
          *(void *)&long long v28 = v21;

          v21[1] = v26;
          v21[2] = v24;
          v21[3] = v23;
          v21[4] = v22;
        }
        else
        {

          long long v28 = 0u;
          long long v29 = 0u;
        }
        return sub_1B6381688((uint64_t)&v28, a2, (unint64_t *)&qword_1EB980F60, v4 + 8);
      }
      objc_msgSend(v27, sel_VFXFloat4Value);
    }
    long long v25 = v12;
    *((void *)&v29 + 1) = v11;
    uint64_t v14 = swift_allocObject();
    *(void *)&long long v28 = v14;

    *(_OWORD *)(v14 + 16) = v25;
  }
  return sub_1B6381688((uint64_t)&v28, a2, (unint64_t *)&qword_1EB980F60, v4 + 8);
}

uint64_t sub_1B6A94A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B633D260(a3, a2, v16);
  v13[3] = swift_getObjectType();
  uint64_t v11 = &type metadata for Extensions;
  long long v12 = &off_1F0F59030;
  v13[0] = a4;
  swift_unknownObjectRetain();
  sub_1B67DCBF4((uint64_t *)&v10, v13);
  sub_1B62C15C4(&v10, (uint64_t)v14);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v13);
  uint64_t v8 = v15;
  sub_1B62C14BC(v14, v15);
  sub_1B6B193C8((uint64_t)v16, a6, v8);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
  sub_1B633D2CC();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
}

uint64_t sub_1B6A94B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  sub_1B6BFBA8C(a2, a3, a4, a1);

  return swift_release();
}

uint64_t sub_1B6A94C38(unint64_t a1, uint64_t a2)
{
  int v3 = a1;
  v19[12] = *MEMORY[0x1E4F143B8];
  unint64_t v4 = HIDWORD(a1);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB997A18;
  sub_1B62D04E8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Particle;
  *(void *)(inited + 40) = &off_1F0FA6CF0;
  uint64_t v12 = v5;
  int v13 = 0;
  char v14 = 2;
  uint64_t v15 = 0;
  char v16 = 2;
  uint64_t v17 = 0;
  swift_retain();
  sub_1B62F776C(inited, 1, (uint64_t)v10);
  swift_setDeallocating();
  swift_release();
  sub_1B6A95BF8(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 56) = &type metadata for EmitterReference;
  *(void *)(v7 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v7 + 32) = v3;
  *(_DWORD *)(v7 + 36) = v4;
  sub_1B62F7044(v7, (uint64_t)v11);
  swift_setDeallocating();
  sub_1B62C55B0(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v10);
  sub_1B62C9DA8(a2, (uint64_t)v11, 0x200000000, v18);
  sub_1B62CA064((uint64_t)v11);
  sub_1B6381688((uint64_t)v18, (uint64_t)v19, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v19[0]) {
    return 0;
  }
  uint64_t v8 = v19[10];
  sub_1B632F170(v18);
  return v8;
}

uint64_t sub_1B6A94EB8(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, void **a10, void *a11, uint64_t *a12, uint64_t a13)
{
  uint64_t v13 = a5;
  uint64_t v17 = (void *)(*a4 + 40 * a1);
  uint64_t v18 = v17[7];
  if ((~*((_DWORD *)v17 + 14) & 0xFCLL) != 0)
  {
    long long v19 = (uint64_t (*)(uint64_t))v17[4];
    uint64_t v20 = v17[5];
    uint64_t v21 = v17[6];
    uint64_t v22 = v17[8];
    char v23 = v18 & 0x3F;
    if (v18 >> 6 != 1) {
      char v23 = v21;
    }
    char v24 = v18 >> 6 ? v23 : v18;
    if (v24 && (v24 == 1 || v22 >= a5))
    {
      sub_1B62C7CB8((uint64_t)v19, v20, v21, v18);
      goto LABEL_27;
    }
  }
  long long v25 = sub_1B62C7CFC(a2, a3, 1, a7, a8 & 1, a9);
  if (v28 > 0xFBu) {
    return 0;
  }
  long long v19 = v25;
  uint64_t v20 = v26;
  uint64_t v21 = v27;
  LOBYTE(v18) = v28;
  if (!(v28 >> 6))
  {
    char v30 = v28;
    if (!v28)
    {
      int32x2_t v57 = a3;
      LOBYTE(v18) = 0;
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  if (v28 >> 6 == 1)
  {
    int32x2_t v57 = a3;
    goto LABEL_29;
  }
  if ((_BYTE)v27)
  {
    char v30 = v27;
LABEL_20:
    if (v30)
    {
      if (v30 == 1) {
        uint64_t v13 = 0;
      }
    }
    else
    {
      uint64_t v13 = -1;
    }
    uint64_t v31 = (void *)*a4;
    sub_1B6A97BC0((uint64_t)v25, v26, v27, v28);
    sub_1B62C7CB8((uint64_t)v19, v20, v21, v18);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v31 = sub_1B62CADAC(v31);
      *a4 = v31;
    }
    int32x4_t v33 = &v31[5 * a1];
    uint64_t v34 = v33[4];
    uint64_t v35 = v33[5];
    uint64_t v36 = v33[6];
    uint64_t v37 = v33[7];
    v33[4] = v19;
    v33[5] = v20;
    v33[6] = v21;
    v33[7] = v18;
    v33[8] = v13;
    sub_1B66456E4(v34, v35, v36, v37);
    sub_1B62CCEE8((uint64_t)v19, v20, v21, v18);
  }
LABEL_27:
  int32x2_t v57 = a3;
  if (v18 >> 6 && v18 >> 6 != 1)
  {
    swift_retain();
    __src = (uint64_t (*)(uint64_t))v19(a9);
    uint64_t v38 = v40;
    uint64_t v39 = v41;
    sub_1B62C6AE0((uint64_t)v19, v20, v21, v18);
    goto LABEL_31;
  }
LABEL_29:
  sub_1B62C6A60(v20);
  __src = v19;
  uint64_t v38 = v20;
  uint64_t v39 = v21;
LABEL_31:
  uint64_t v58 = v20;
  if (v38)
  {
    uint64_t v42 = swift_allocObject();
    uint64_t v55 = v38;
    *(void *)(v42 + 16) = v38;
    *(void *)(v42 + 24) = v39;
    float32x4_t v43 = *a10;
    swift_retain();
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    *a10 = v43;
    float32x4_t v45 = v19;
    if ((v44 & 1) == 0)
    {
      float32x4_t v43 = sub_1B62CACA8(0, v43[2] + 1, 1, v43);
      *a10 = v43;
    }
    unint64_t v47 = v43[2];
    unint64_t v46 = v43[3];
    if (v47 >= v46 >> 1) {
      float32x4_t v43 = sub_1B62CACA8(v46 > 1, v47 + 1, 1, v43);
    }
    _OWORD v43[2] = v47 + 1;
    float v48 = &v43[2 * v47];
    v48[4] = sub_1B69E90EC;
    v48[5] = v42;
    *a10 = v43;
    long long v19 = v45;
    uint64_t v38 = v55;
  }
  size_t v49 = sub_1B62CB508(v57[3], v57[3]);
  id v50 = objc_msgSend(a11, sel_members);
  sub_1B63989B8(0, (unint64_t *)&qword_1EB97D840);
  uint64_t v51 = sub_1B6E31C28();

  uint64_t v52 = *a12;
  if ((v51 & 0xC000000000000001) != 0) {
    id v53 = (id)MEMORY[0x1BA9B4580](v52, v51);
  }
  else {
    id v53 = *(id *)(v51 + 8 * v52 + 32);
  }
  float32x2_t v54 = v53;
  swift_bridgeObjectRelease();
  memcpy((char *)objc_msgSend(v54, sel_offset) + a13, __src, v49);
  sub_1B62C6AE0((uint64_t)v19, v58, v21, v18);

  sub_1B62C6A50(v38);
  ++*a12;
  return 1;
}

uint64_t sub_1B6A952D0(unint64_t a1)
{
  if (a1 == 0xFFFFFFFF)
  {
    uint64_t v2 = MEMORY[0x1E4FBC860];
    uint64_t v3 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    return swift_bridgeObjectRelease();
  }
  swift_retain();
  uint64_t v2 = sub_1B6BFADC0(a1);
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    goto LABEL_8;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  for (uint64_t i = v2 + 40; ((*(uint64_t (**)(void))(*(void *)i + 24))() & 1) == 0; i += 16)
  {
    if (!--v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v7 = v1 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  uint64_t result = type metadata accessor for ScriptingConfiguration();
  ++*(void *)(v7 + *(int *)(result + 36));
  return result;
}

uint64_t sub_1B6A953EC(unint64_t a1)
{
  if (a1 == 0xFFFFFFFF)
  {
    uint64_t v2 = MEMORY[0x1E4FBC860];
    uint64_t v3 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v3) {
      goto LABEL_8;
    }
  }
  else
  {
    swift_retain();
    uint64_t v2 = sub_1B6BFADC0(a1);
    swift_release();
    uint64_t v3 = *(void *)(v2 + 16);
    if (!v3)
    {
LABEL_8:
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v5 = v2 + 40;
  while (((*(uint64_t (**)(void))(*(void *)v5 + 24))() & 1) == 0)
  {
    v5 += 16;
    if (!--v3) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v1 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  uint64_t result = type metadata accessor for ScriptingConfiguration();
  ++*(void *)(v7 + *(int *)(result + 36));
  return result;
}

float sub_1B6A954F0@<S0>(float *a1@<X0>, float *a2@<X8>)
{
  float result = *a1 * 0.5;
  *a2 = result;
  return result;
}

float sub_1B6A95504(float *a1, float *a2)
{
  float result = *a1 + *a1;
  *a2 = result;
  return result;
}

void sub_1B6A95514(float32x2_t *a1@<X0>, float32x2_t *a2@<X8>)
{
  *a2 = sub_1B6A95D94(*a1, 0.5);
}

void sub_1B6A95544(float32x2_t *a1, float32x2_t *a2)
{
  *a2 = sub_1B6A95D94(*a1, 2.0);
}

uint64_t *sub_1B6A95574(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (result)
  {
    if (a4) {
      return (uint64_t *)sub_1B665FEF4(a6, a7, a8, a9, result, a2, a3, a4, a5);
    }
    else {
      return (uint64_t *)sub_1B665FDE8(a6, a7, a8, a9, result, a2, a3, a10);
    }
  }
  else if (a4)
  {
    uint64_t v15 = swift_unownedRetainStrong();
    uint64_t v16 = *(void *)(v15 + 232);
    uint64_t v17 = *(void *)(v15 + 240);
    swift_release();
    return (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 32))(a6, a7, v16, a8, a9, v16, v17 - v16, a4, a5);
  }
  return result;
}

unsigned char *sub_1B6A9566C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2);
  uint64_t v13 = sub_1B6E32738();
  uint64_t v14 = swift_conformsToProtocol2();
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (!v14) {
    uint64_t v13 = 0;
  }
  if (!v13 || (swift_unknownObjectRetain(), uint64_t v16 = sub_1B67CBAE0(a3, v12, v13, v15), swift_unknownObjectRelease(), !v16))
  {
    swift_unknownObjectRelease();
    return 0;
  }
  sub_1B6E32738();
  if ((a5 & 1) == 0)
  {
    unint64_t v18 = sub_1B69B1CC4(v17);
    if ((~v18 & 0xF000000000000007) != 0)
    {
      unint64_t v21 = v18;
      sub_1B69AFB0C(v18, (uint64_t)&v33, 0.0);
      sub_1B6827B68(v21);
    }
    else
    {
      long long v33 = 0u;
      long long v34 = 0u;
    }
    sub_1B6381688((uint64_t)&v33, (uint64_t)&v35, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    if (v36) {
      goto LABEL_24;
    }
    sub_1B62B32CC((uint64_t)&v35);
  }
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    char v23 = (void *)v22;
    swift_unknownObjectRetain();
    sub_1B6E32728();
    if (v24)
    {
      long long v25 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v26 = objc_msgSend(v23, sel_valueForKeyPath_, v25);

      if (v26)
      {
        sub_1B6E32718();
        swift_unknownObjectRelease();
        sub_1B62B57A8(&v33, &v35);
        sub_1B6A94848((uint64_t)&v35, (uint64_t)&v33);
        swift_unknownObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v35);
        if (*((void *)&v34 + 1))
        {
          uint64_t v27 = &v33;
          goto LABEL_25;
        }
        swift_unknownObjectRelease();
        swift_release();
        sub_1B62B32CC((uint64_t)&v33);
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease_n();
      }
      return 0;
    }
    swift_unknownObjectRelease();
  }
  *(void *)&long long v33 = v12;
  *((void *)&v33 + 1) = a2;
  sub_1B62C55B0(0, (unint64_t *)&unk_1E9DD2B30);
  swift_unknownObjectRetain();
  swift_getAtAnyKeyPath();
  swift_unknownObjectRelease();
  if (!v36)
  {
    swift_unknownObjectRelease();
    swift_release();
    sub_1B62B32CC((uint64_t)&v35);
    return 0;
  }
LABEL_24:
  uint64_t v27 = &v35;
LABEL_25:
  sub_1B62B57A8(v27, v37);
  uint64_t v28 = sub_1B62CB508(a4, a4);
  long long v19 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), v28, v29);
  sub_1B62CAAD8((uint64_t)v37, (uint64_t)&v35);
  sub_1B62C14BC(&v35, v36);
  uint64_t DynamicType = swift_getDynamicType();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v35);
  sub_1B62CA888((uint64_t)v37, v19, DynamicType);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v37);
  if ((a5 & 2) != 0)
  {
    uint64_t v32 = swift_allocObject();
    *(unsigned char *)(v32 + 16) = a5;
    *(void *)(v32 + 24) = DynamicType;
    *(void *)(v32 + 32) = v19;
    *(void *)(v32 + 40) = v12;
    *(void *)(v32 + 48) = a2;
    *(void *)(v32 + 56) = v16;
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = DynamicType;
    *(void *)(v31 + 24) = v19;
  }
  return v19;
}

uint64_t sub_1B6A95AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a15)
  {
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1B6A95B10(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B6A95B74()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6A95B84()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B6A95BC4()
{
  return sub_1B6A94A90(*(unsigned __int8 *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1B6A95BD8()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6A95BE8()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

void sub_1B6A95BF8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62C55B0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1B6A95C64()
{
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_unownedRelease();

  return MEMORY[0x1F4186498](v0, 152, 7);
}

void sub_1B6A95CB0(float32x4_t *a1@<X0>, _OWORD *a2@<X8>)
{
  *(double *)&long long v3 = sub_1B638DF64(*a1, 0.5);
  *a2 = v3;
}

void sub_1B6A95CE0(float32x4_t *a1, _OWORD *a2)
{
  *(double *)&long long v3 = sub_1B638DF64(*a1, 2.0);
  *a2 = v3;
}

void sub_1B6A95D10(float32x2_t *a1@<X0>, float32x2_t *a2@<X8>)
{
  *a2 = sub_1B6A95D94(*a1, 0.5);
}

void sub_1B6A95D40(float32x2_t *a1, float32x2_t *a2)
{
  *a2 = sub_1B6A95D94(*a1, 2.0);
}

float sub_1B6A95D70@<S0>(float *a1@<X0>, float *a2@<X8>)
{
  float result = *a1 * 0.5;
  *a2 = result;
  return result;
}

float sub_1B6A95D84(float *a1, float *a2)
{
  float result = *a1 + *a1;
  *a2 = result;
  return result;
}

float32x2_t sub_1B6A95D94(float32x2_t a1, float a2)
{
  return vmul_n_f32(a1, a2);
}

uint64_t sub_1B6A95D9C()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B6A95DAC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B6A95DE4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6A95DF4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1B6A95E3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6A95BF8(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B6A95EAC()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B6A95EBC()
{
  return sub_1B6A94B8C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1B6A95EC8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6A95ED8()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B6A95EE8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6A95F20(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15 = a13;
  uint64_t v14 = a14;
  uint64_t v16 = a9;
  uint64_t v249 = 0;
  if (!a9)
  {
    sub_1B6784224(a11, a12, a13, a14);
    return 0;
  }
  v248[1] = &unk_1F108F780;
  uint64_t v19 = swift_dynamicCastObjCProtocolConditional();
  if (!v19)
  {
    swift_unknownObjectRetain();
    sub_1B6784224(a11, a12, a13, a14);
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v20 = (void *)v19;
  uint64_t v233 = a1;
  v248[0] = (void *)MEMORY[0x1E4FBC860];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v242 = objc_msgSend(v20, sel_bufferStructType);
  sub_1B62F1868(0, (uint64_t)objc_msgSend(v20, sel_bufferDataSize));
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  v232 = (void *)swift_unknownObjectRetain();
  uint64_t v240 = 0;
  if (objc_msgSend(v232, sel_storageMode) != (id)2)
  {
    id v25 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v26 = v232;
    uint64_t v240 = (uint64_t)v25 + v22;
  }
  if (!*a2)
  {
    memset(v252, 0, sizeof(v252));
    long long v253 = xmmword_1B6E8DCB0;
    *a2 = sub_1B6640B40(v252, *(void *)(v233 + 16));
  }
  uint64_t v27 = OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  uint64_t v28 = type metadata accessor for ScriptingConfiguration();
  uint64_t v236 = *(void *)(v233 + 16);
  if (!v236) {
    goto LABEL_166;
  }
  uint64_t v220 = v24;
  uint64_t v221 = v22;
  uint64_t v29 = a10;
  char v224 = a6 & 1;
  uint64_t v223 = *(void *)(a10 + v27 + *(int *)(v28 + 36));
  v235 = (void *)(a10 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v222 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  uint64_t v30 = v233 + 32;
  swift_bridgeObjectRetain();
  uint64_t v227 = 0;
  uint64_t v31 = 0;
  uint64_t v230 = 7;
  uint64_t v32 = v236;
  while (2)
  {
    uint64_t v36 = v31;
    unint64_t v37 = *(void *)(v30 + 32 * v31++);
    switch(v37 >> 60)
    {
      case 1uLL:
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v164 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        swift_retain();
        uint64_t v165 = sub_1B6E32148();
        uint64_t v243 = 0;
        (*(void (**)(uint64_t, uint64_t *, unint64_t, unint64_t))(*(void *)v164 + 88))(v165, &v243, 0xD000000000000028, 0x80000001B6F45BF0);
        sub_1B62C6A70(v37);
        swift_release();

        swift_unknownObjectRelease();
        swift_release();
        v166 = v248[0];
        uint64_t v167 = v248[0][2];
        if (!v167) {
          goto LABEL_212;
        }
        swift_bridgeObjectRetain();
        v168 = v166 + 5;
        do
        {
          v169 = (void (*)(uint64_t))*(v168 - 1);
          uint64_t v170 = swift_retain();
          v169(v170);
          swift_release();
          v168 += 2;
          --v167;
        }
        while (v167);
        goto LABEL_202;
      case 2uLL:
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v171 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        swift_retain();
        uint64_t v172 = sub_1B6E32148();
        uint64_t v243 = 0;
        (*(void (**)(uint64_t, uint64_t *, unint64_t, unint64_t))(*(void *)v171 + 88))(v172, &v243, 0xD00000000000002ALL, 0x80000001B6F45BC0);
        sub_1B62C6A70(v37);
        swift_release();
        swift_release();

        swift_unknownObjectRelease();
        v173 = v248[0];
        uint64_t v174 = v248[0][2];
        if (!v174) {
          goto LABEL_212;
        }
        swift_bridgeObjectRetain();
        v175 = v173 + 5;
        do
        {
          v176 = (void (*)(uint64_t))*(v175 - 1);
          uint64_t v177 = swift_retain();
          v176(v177);
          swift_release();
          v175 += 2;
          --v174;
        }
        while (v174);
        goto LABEL_202;
      case 3uLL:
        unint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        long long v39 = *(_OWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        long long v250 = *(_OWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        v251[0] = v39;
        *(_OWORD *)((char *)v251 + 12) = *(_OWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x34);
        v254[0] = v250;
        sub_1B62C6AA8(v37);
        sub_1B62C6AA8(v37);
        sub_1B62C7C20((uint64_t)v254);
        swift_retain();
        char v40 = sub_1B6A94EB8(v36, v38, &v250, a2, v223, v29, a5, v224, a7, v248, v242, &v249, v240);
        sub_1B62C6A70(v37);
        sub_1B62C7BF4((uint64_t)v254);
        swift_release();
        if ((v40 & 1) == 0)
        {
          swift_release();

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B62C6A70(v37);
          v185 = v248[0];
          uint64_t v186 = v248[0][2];
          if (v186)
          {
            swift_bridgeObjectRetain();
            v187 = v185 + 5;
            do
            {
              v188 = (void (*)(uint64_t))*(v187 - 1);
              uint64_t v189 = swift_retain();
              v188(v189);
              swift_release();
              v187 += 2;
              --v186;
            }
            while (v186);
            goto LABEL_202;
          }
          goto LABEL_212;
        }
        sub_1B62C6A70(v37);
        goto LABEL_16;
      case 4uLL:
        uint64_t v238 = v31;
        int32x2_t v60 = *(void **)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v61 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v62 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
        char v63 = *(unsigned char *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x44);
        sub_1B62C6AA8(v37);
        unint64_t v226 = v37;
        sub_1B62C6AA8(v37);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v64 = sub_1B62CF8B4(v60, v61, v63, a4, 0, a7);
        if (v67 > 0xFBu)
        {
          swift_bridgeObjectRelease();
          sub_1B62C6A70(v37);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();

          swift_unknownObjectRelease();
          sub_1B62C6A70(v37);
          v190 = v248[0];
          uint64_t v191 = v248[0][2];
          if (v191)
          {
            swift_bridgeObjectRetain();
            v192 = v190 + 5;
            do
            {
              v193 = (void (*)(uint64_t))*(v192 - 1);
              uint64_t v194 = swift_retain();
              v193(v194);
              swift_release();
              v192 += 2;
              --v191;
            }
            while (v191);
            goto LABEL_202;
          }
          goto LABEL_212;
        }
        uint64_t v68 = (uint64_t)v64;
        uint64_t v69 = v65;
        uint64_t v70 = v66;
        unsigned __int8 v71 = v67;
        if (v67 >> 6 && v67 >> 6 != 1)
        {
          __src = (void *)((uint64_t (*)(uint64_t))v64)(a7);
          uint64_t v228 = v129;
          uint64_t v229 = v130;
          if (!v130) {
            goto LABEL_137;
          }
        }
        else
        {
          sub_1B62C6A60(v65);
          __src = (void *)v68;
          uint64_t v228 = v70;
          uint64_t v229 = v69;
          if (!v69) {
            goto LABEL_137;
          }
        }
        uint64_t v131 = swift_allocObject();
        *(void *)(v131 + 16) = v229;
        *(void *)(v131 + 24) = v228;
        v132 = v248[0];
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v132 = sub_1B62CACA8(0, v132[2] + 1, 1, v132);
        }
        unint64_t v134 = v132[2];
        unint64_t v133 = v132[3];
        if (v134 >= v133 >> 1) {
          v132 = sub_1B62CACA8(v133 > 1, v134 + 1, 1, v132);
        }
        v132[2] = v134 + 1;
        v135 = &v132[2 * v134];
        v135[4] = sub_1B69E90EC;
        v135[5] = v131;
        v248[0] = v132;
LABEL_137:
        size_t v136 = sub_1B62CB508(v62, v62);
        id v137 = objc_msgSend(v242, sel_members);
        sub_1B63989B8(0, (unint64_t *)&qword_1EB97D840);
        uint64_t v138 = sub_1B6E31C28();

        uint64_t v139 = v249;
        if ((v138 & 0xC000000000000001) != 0) {
          id v140 = (id)MEMORY[0x1BA9B4580](v249, v138);
        }
        else {
          id v140 = *(id *)(v138 + 8 * v249 + 32);
        }
        v141 = v140;
        swift_bridgeObjectRelease();
        memcpy((char *)objc_msgSend(v141, sel_offset) + v240, __src, v136);
        sub_1B62C6A70(v226);

        sub_1B62CCEE8(v68, v69, v70, v71);
        swift_release();
        swift_bridgeObjectRelease();
        sub_1B62C6A50(v229);
        sub_1B62C6A70(v226);
        uint64_t v249 = v139 + 1;
        uint64_t v16 = a9;
        goto LABEL_15;
      case 5uLL:
      case 6uLL:
      case 9uLL:
      case 0xAuLL:
        goto LABEL_16;
      case 7uLL:
        unint64_t v41 = v37;
        uint64_t v42 = v37 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v43 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        int v44 = *(unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        int v45 = *(unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x21);
        if (v44)
        {
          unint64_t v46 = *(void *)(v42 + 24);
          if (v44 != 1)
          {
            swift_retain_n();
LABEL_204:
            swift_bridgeObjectRelease();
            uint64_t v207 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
            swift_retain();
            sub_1B6E328C8();
            id v246 = 0;
            unint64_t v247 = 0xE000000000000000;
            sub_1B6E31948();
            unint64_t v244 = v46;
            char v245 = v44;
            sub_1B6E32B18();
            uint64_t v208 = sub_1B6E32148();
            uint64_t v243 = 0;
            (*(void (**)(uint64_t, uint64_t *, void, unint64_t))(*(void *)v207 + 88))(v208, &v243, 0, 0xE000000000000000);
            sub_1B62C6A70(v41);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();

            swift_unknownObjectRelease();
            sub_1B62C6A70(v41);
            v209 = v248[0];
            uint64_t v210 = v248[0][2];
            if (!v210) {
              goto LABEL_212;
            }
            swift_bridgeObjectRetain();
            v211 = v209 + 5;
            do
            {
              v212 = (void (*)(uint64_t))*(v211 - 1);
              uint64_t v213 = swift_retain();
              v212(v213);
              swift_release();
              v211 += 2;
              --v210;
            }
            while (v210);
            goto LABEL_202;
          }
          sub_1B62C6AA8(v41);
          swift_retain();
          LOBYTE(v243) = 1;
          uint64_t v47 = sub_1B6A041D8(v43, v46, v29, 0x100000000);
          if (v48) {
            goto LABEL_204;
          }
          uint64_t v43 = v47;
        }
        else
        {
          swift_retain_n();
        }
        BOOL v77 = v43 == -1 && HIDWORD(v43) == 0;
        v78 = v235;
        if (v77) {
          goto LABEL_172;
        }
        uint64_t v239 = v31;
        uint64_t v79 = v235[1];
        if (v43 << 32 < 0 || (int)v43 >= v79)
        {
LABEL_87:
          if (v43 << 32 < 0) {
            goto LABEL_173;
          }
        }
        else
        {
          if (HIDWORD(v43) == -1 || *(_DWORD *)(*v235 + 12 * (int)v43 + 8) == HIDWORD(v43))
          {
            uint64_t v81 = *(void *)(*(void *)(*(void *)(a10 + 80) + 8 * *(__int16 *)(*v235 + 12 * (int)v43 + 6) + 32)
                            + 16);
            uint64_t v82 = *(void *)(v81 + 128);
            if (*(void *)(v82 + 16))
            {
              unint64_t v83 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone);
              v78 = v235;
              if ((v84 & 1) != 0
                && *(ValueMetadata **)(*(void *)(v81 + 24) + 16 * *(void *)(*(void *)(v82 + 56) + 8 * v83) + 32) == &type metadata for Tombstone)
              {
                goto LABEL_173;
              }
            }
          }
          uint64_t v85 = *v78 + 12 * (int)v43;
          if (HIDWORD(v43) == -1 || *(_DWORD *)(v85 + 8) == HIDWORD(v43))
          {
            uint64_t v87 = *(void *)(*(void *)(a10 + 136) + 8 * *(int *)(*v78 + 12 * (int)v43) + 32);
            uint64_t v88 = *(void *)(v87 + 48);
            uint64_t v89 = *(void *)(v88 + 16);
            if (v89)
            {
              uint64_t v90 = *(__int16 *)(v85 + 4);
              long long v91 = (void *)(v88 + 56);
              while ((ValueMetadata *)*(v91 - 3) != &type metadata for TextureGPURuntime)
              {
                v91 += 5;
                if (!--v89) {
                  goto LABEL_87;
                }
              }
              long long v104 = *(void **)(*(void *)(v87 + 128) + *v91 + 8 * v90);
              if (!v104)
              {
LABEL_173:
                swift_bridgeObjectRelease();
                unint64_t v98 = v41;
                uint64_t v29 = a10;
                goto LABEL_199;
              }
              swift_unknownObjectRetain();
              unint64_t v98 = v41;
              uint64_t v30 = v233 + 32;
              goto LABEL_152;
            }
          }
        }
        if ((int)v43 >= v79) {
          goto LABEL_173;
        }
        uint64_t v29 = a10;
        if (HIDWORD(v43) != -1 && *(_DWORD *)(*v78 + 12 * (int)v43 + 8) != HIDWORD(v43)) {
          goto LABEL_172;
        }
        sub_1B6BF8FE4(v43, a10);
        uint64_t v92 = v235;
        if ((int)v43 < v235[1])
        {
          uint64_t v93 = *v235;
          if (HIDWORD(v43) == -1 || *(_DWORD *)(v93 + 12 * (int)v43 + 8) == HIDWORD(v43))
          {
            unsigned int v94 = sub_1B6964DCC(*(void *)(*(void *)(a10 + 136) + 8 * *(int *)(v93 + 12 * (int)v43) + 32), *(_DWORD *)(v93 + 12 * (int)v43), *(_WORD *)(v93 + 12 * (int)v43 + 4), 4, a10);
            if (HIBYTE(v94) != 2 && (v94 & 0xFF00) == 0x100) {
              sub_1B62E364C((uint64_t)&type metadata for TextureLoadRequestGPU, (uint64_t)&off_1F0F8B818, v43);
            }
            uint64_t v92 = v235;
          }
        }
        if ((int)v43 >= v92[1]
          || (uint64_t v95 = *v92, HIDWORD(v43) != -1) && *(_DWORD *)(v95 + 12 * (int)v43 + 8) != HIDWORD(v43)
          || (unsigned int v96 = sub_1B6964DCC(*(void *)(*(void *)(a10 + 136) + 8 * *(int *)(v95 + 12 * (int)v43) + 32), *(_DWORD *)(v95 + 12 * (int)v43), *(_WORD *)(v95 + 12 * (int)v43 + 4), 4, a10), HIBYTE(v96) == 2))
        {
LABEL_172:
          swift_bridgeObjectRelease();
          unint64_t v98 = v41;
          goto LABEL_199;
        }
        uint64_t v97 = *(void *)(a10 + v222);
        unint64_t v98 = v41;
        if (v97)
        {
          uint64_t v30 = v233 + 32;
          switch(BYTE2(v96))
          {
            case 1:
              uint64_t v99 = *(void *)(v97 + 240);
              v142 = *(os_unfair_lock_s **)(v99 + 48);
              swift_retain();
              os_unfair_lock_lock(v142);
              uint64_t v101 = *(void *)(v99 + 128);
              if (*(void *)(v101 + 16))
              {
                uint64_t v102 = sub_1B62B2CE0(0xD000000000000015, 0x80000001B6F45BA0);
                if (v143) {
                  goto LABEL_145;
                }
              }
              long long v104 = (void *)sub_1B67FFDF0(v97);
              v144 = (void *)sub_1B6E31768();
              objc_msgSend(v104, sel_setLabel_, v144);

              swift_unknownObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v243 = *(void *)(v99 + 128);
              *(void *)(v99 + 128) = 0x8000000000000000;
              uint64_t v107 = (uint64_t)v104;
              uint64_t v108 = 0xD000000000000015;
              uint64_t v109 = 0x80000001B6F45BA0;
              goto LABEL_150;
            case 3:
              uint64_t v99 = *(void *)(v97 + 240);
              v145 = *(os_unfair_lock_s **)(v99 + 48);
              swift_retain();
              os_unfair_lock_lock(v145);
              uint64_t v101 = *(void *)(v99 + 128);
              if (*(void *)(v101 + 16))
              {
                uint64_t v102 = sub_1B62B2CE0(0x47746C7561666544, 0xEE00786554796572);
                if (v146) {
                  goto LABEL_145;
                }
              }
              long long v104 = (void *)sub_1B67FF750(v97);
              v154 = (void *)sub_1B6E31768();
              objc_msgSend(v104, sel_setLabel_, v154);

              swift_unknownObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v243 = *(void *)(v99 + 128);
              *(void *)(v99 + 128) = 0x8000000000000000;
              uint64_t v107 = (uint64_t)v104;
              uint64_t v108 = 0x47746C7561666544;
              uint64_t v109 = 0xEE00786554796572;
              goto LABEL_150;
            default:
              uint64_t v99 = *(void *)(v97 + 240);
              v100 = *(os_unfair_lock_s **)(v99 + 48);
              swift_retain();
              os_unfair_lock_lock(v100);
              uint64_t v101 = *(void *)(v99 + 128);
              if (*(void *)(v101 + 16)
                && (uint64_t v102 = sub_1B62B2CE0(0x42746C7561666544, 0xEF7865546B63616CLL), (v103 & 1) != 0))
              {
LABEL_145:
                long long v104 = *(void **)(*(void *)(v101 + 56) + 8 * v102);
                v147 = *(os_unfair_lock_s **)(v99 + 48);
                swift_unknownObjectRetain();
              }
              else
              {
                long long v104 = (void *)sub_1B67FFA8C(v97);
                long long v105 = (void *)sub_1B6E31768();
                objc_msgSend(v104, sel_setLabel_, v105);

                swift_unknownObjectRetain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v243 = *(void *)(v99 + 128);
                *(void *)(v99 + 128) = 0x8000000000000000;
                uint64_t v107 = (uint64_t)v104;
                uint64_t v108 = 0x42746C7561666544;
                uint64_t v109 = 0xEF7865546B63616CLL;
LABEL_150:
                sub_1B6331384(v107, v108, v109, isUniquelyReferenced_nonNull_native);
                *(void *)(v99 + 128) = v243;
                swift_bridgeObjectRelease();
                v147 = *(os_unfair_lock_s **)(v99 + 48);
              }
              os_unfair_lock_unlock(v147);
              swift_release();
              break;
          }
LABEL_152:
          id v155 = objc_msgSend(v104, sel_textureType);
          id v156 = v155;
          uint64_t v32 = v236;
          if (v45)
          {
            if (v45 == 1)
            {
              if (v155 != (id)2) {
                goto LABEL_182;
              }
            }
            else if (v45 != 2 || v155 != (id)7)
            {
LABEL_182:
              swift_bridgeObjectRelease();
              uint64_t v178 = *(void *)(a10 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
              unint64_t v244 = 0xE000000000000000;
              swift_retain();
              sub_1B6E328C8();
              sub_1B6E31948();
              sub_1B6E32B18();
              sub_1B6E31948();
              id v246 = v156;
              type metadata accessor for MTLTextureType(0);
              sub_1B6E32B18();
              uint64_t v179 = sub_1B6E32148();
              uint64_t v243 = 0;
              (*(void (**)(uint64_t, uint64_t *, void, unint64_t))(*(void *)v178 + 88))(v179, &v243, 0, 0xE000000000000000);
              sub_1B62C6A70(v98);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();

              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              sub_1B62C6A70(v98);
              v180 = v248[0];
              uint64_t v181 = v248[0][2];
              if (v181)
              {
                swift_bridgeObjectRetain();
                v182 = v180 + 5;
                do
                {
                  v183 = (void (*)(uint64_t))*(v182 - 1);
                  uint64_t v184 = swift_retain();
                  v183(v184);
                  swift_release();
                  v182 += 2;
                  --v181;
                }
                while (v181);
                goto LABEL_202;
              }
              goto LABEL_212;
            }
          }
          else if (v155)
          {
            goto LABEL_182;
          }
          swift_unknownObjectRetain();
          objc_msgSend(v16, sel_setTexture_atIndex_, v104, v227);
          sub_1B62C6A70(v98);
          swift_unknownObjectRelease_n();
          sub_1B62C6A70(v98);
          ++v227;
          uint64_t v29 = a10;
          uint64_t v31 = v239;
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
LABEL_199:
        uint64_t v200 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        swift_retain();
        uint64_t v201 = sub_1B6E32148();
        uint64_t v243 = 0;
        (*(void (**)(uint64_t, uint64_t *, unint64_t, unint64_t))(*(void *)v200 + 88))(v201, &v243, 0xD000000000000027, 0x80000001B6F45B40);
        sub_1B62C6A70(v98);
        swift_release();
        swift_release();

        swift_unknownObjectRelease();
        sub_1B62C6A70(v98);
        v202 = v248[0];
        uint64_t v203 = v248[0][2];
        if (v203)
        {
          swift_bridgeObjectRetain();
          v204 = v202 + 5;
          do
          {
            v205 = (void (*)(uint64_t))*(v204 - 1);
            uint64_t v206 = swift_retain();
            v205(v206);
            swift_release();
            v204 += 2;
            --v203;
          }
          while (v203);
          goto LABEL_202;
        }
LABEL_212:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
LABEL_213:
        swift_bridgeObjectRelease();
        return 0;
      case 8uLL:
        uint64_t v49 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        unsigned int v50 = *(unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        if (*(unsigned char *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
        {
          if (v50 == 1)
          {
            unint64_t v51 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            sub_1B62C6AA8(v37);
            swift_retain();
            LOBYTE(v243) = 1;
            uint64_t v52 = sub_1B6A041D8(v49, v51, v29, 0x100000000);
            if (v53)
            {
              swift_bridgeObjectRelease();
              swift_retain();
              sub_1B6E328C8();
              id v246 = 0;
              unint64_t v247 = 0xE000000000000000;
              sub_1B6E31948();
              unint64_t v244 = v51;
              char v245 = 1;
              sub_1B6E32B18();
              uint64_t v214 = sub_1B6E32148();
              uint64_t v243 = 1;
              sub_1B6B33B70(v214, 0, 0xE000000000000000, &v243);
              sub_1B62C6A70(v37);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();

              swift_unknownObjectRelease();
              sub_1B62C6A70(v37);
              v215 = v248[0];
              uint64_t v216 = v248[0][2];
              if (!v216) {
                goto LABEL_212;
              }
              swift_bridgeObjectRetain();
              v217 = v215 + 5;
              do
              {
                v218 = (void (*)(uint64_t))*(v217 - 1);
                uint64_t v219 = swift_retain();
                v218(v219);
                swift_release();
                v217 += 2;
                --v216;
              }
              while (v216);
              goto LABEL_202;
            }
            uint64_t v49 = v52;
          }
          else
          {
            swift_retain_n();
            uint64_t v49 = a4;
          }
        }
        else
        {
          swift_retain_n();
        }
        BOOL v110 = v49 == -1 && HIDWORD(v49) == 0;
        if (v110
          || (v49 & 0x80000000) != 0
          || v235[1] <= (int)v49
          || ((uint64_t v111 = *v235 + 12 * (int)v49, HIDWORD(v49) != -1)
            ? (BOOL v112 = *(_DWORD *)(v111 + 8) == HIDWORD(v49))
            : (BOOL v112 = 1),
              !v112
           || (uint64_t v113 = *(void *)(*(void *)(v29 + 136) + 8 * *(int *)(*v235 + 12 * (int)v49) + 32),
               uint64_t v114 = *(void *)(v113 + 48),
               (uint64_t v115 = *(void *)(v114 + 16)) == 0)))
        {
LABEL_215:
          uint64_t v243 = 0;
          unint64_t v244 = 0xE000000000000000;
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B681F698();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6786A7C(a11);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
LABEL_217:
          sub_1B6E32BE8();
          __break(1u);
          JUMPOUT(0x1B6A97B70);
        }
        int v116 = *(__int16 *)(v111 + 4);
        v117 = (void *)(v114 + 56);
        while ((ValueMetadata *)*(v117 - 3) != &type metadata for EmitterRuntime)
        {
          v117 += 5;
          if (!--v115) {
            goto LABEL_215;
          }
        }
        uint64_t v118 = *(void *)(v113 + 128) + *v117 + 656 * v116;
        uint64_t v119 = *(void *)(v118 + 360);
        if (!v119)
        {
          sub_1B62C6A70(v37);
          swift_release();

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B62C6A70(v37);
          v195 = v248[0];
          uint64_t v196 = v248[0][2];
          if (!v196) {
            goto LABEL_212;
          }
          swift_bridgeObjectRetain();
          v197 = v195 + 5;
          do
          {
            v198 = (void (*)(uint64_t))*(v197 - 1);
            uint64_t v199 = swift_retain();
            v198(v199);
            swift_release();
            v197 += 2;
            --v196;
          }
          while (v196);
LABEL_202:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_213;
        }
        uint64_t v238 = v31;
        uint64_t v120 = *(void *)(v118 + 368);
        uint64_t v121 = *(void *)(v118 + 376);
        int v122 = *(unsigned __int8 *)(v118 + 272);
        uint64_t v123 = *(void *)(v118 + 288);
        uint64_t v124 = *(void *)(v118 + 304);
        uint64_t v125 = *(void *)(v118 + 448);
        if (v50 >= 2)
        {
          if (v122) {
            uint64_t v33 = v125;
          }
          else {
            uint64_t v33 = 0;
          }
          uint64_t ObjectType = swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v35 = swift_unknownObjectRetain();
          sub_1B6D0E058(v35, v123 + v33 * v124, v124, 0, 4, ObjectType);
          swift_unknownObjectRelease();
          sub_1B6D0E058(v119, v120, v121, 0, 5, ObjectType);
          swift_unknownObjectRelease();
          sub_1B62C6A70(v37);
          sub_1B62C6A70(v37);
        }
        else
        {
          if (v122) {
            uint64_t v126 = v125;
          }
          else {
            uint64_t v126 = 0;
          }
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v127 = swift_unknownObjectRetain();
          sub_1B6B59478(v127, v123 + v126 * v124, v124, 0);
          swift_unknownObjectRelease();
          uint64_t v128 = swift_unknownObjectRetain();
          sub_1B6B59478(v128, v120, v121, 0);
          swift_unknownObjectRelease_n();
          sub_1B62C6A70(v37);
          sub_1B62C6A70(v37);
          v230 += 2;
        }
LABEL_15:
        uint64_t v32 = v236;
        uint64_t v29 = a10;
        uint64_t v30 = v233 + 32;
        uint64_t v31 = v238;
LABEL_16:
        if (v31 == v32)
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = a13;
          uint64_t v14 = a14;
          uint64_t v24 = v220;
          uint64_t v22 = v221;
LABEL_166:
          swift_getObjectType();
          uint64_t v157 = swift_unknownObjectRetain();
          sub_1B6B59478(v157, v22, v24, 0);
          swift_unknownObjectRelease();
          sub_1B6784224(a11, a12, v15, v14);
          swift_release();

          swift_unknownObjectRelease();
          v158 = v248[0];
          uint64_t v159 = v248[0][2];
          if (v159)
          {
            swift_bridgeObjectRetain();
            v160 = v158 + 5;
            do
            {
              v161 = (void (*)(uint64_t))*(v160 - 1);
              uint64_t v162 = swift_retain();
              v161(v162);
              swift_release();
              v160 += 2;
              --v159;
            }
            while (v159);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
          }
          swift_bridgeObjectRelease();
          return 1;
        }
        continue;
      case 0xBuLL:
        int v54 = *(_DWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
        uint64_t v55 = *(int *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        int v56 = 0;
        BOOL v57 = v55 == -1 && v54 == 0;
        if (!v57 && (v55 & 0x80000000) == 0 && v235[1] > v55)
        {
          if (v54 == -1 || *(_DWORD *)(*v235 + 12 * (int)v55 + 8) == v54)
          {
            uint64_t v59 = sub_1B6964F38(*(void *)(*(void *)(v29 + 136) + 8 * *(int *)(*v235 + 12 * (int)v55) + 32), *(_DWORD *)(*v235 + 12 * (int)v55), *(_WORD *)(*v235 + 12 * (int)v55 + 4), 8, v29);
            if ((v59 & 0xFF00000000) == 0x200000000) {
              int v56 = 0;
            }
            else {
              int v56 = v59;
            }
          }
          else
          {
            int v56 = 0;
          }
        }
        goto LABEL_146;
      case 0xCuLL:
        int v72 = *(_DWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
        uint64_t v73 = *(int *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        int v56 = 0;
        BOOL v74 = v73 == -1 && v72 == 0;
        if (!v74 && (v73 & 0x80000000) == 0 && v235[1] > v73)
        {
          if (v72 == -1 || *(_DWORD *)(*v235 + 12 * (int)v73 + 8) == v72)
          {
            uint64_t v76 = sub_1B6964F38(*(void *)(*(void *)(v29 + 136) + 8 * *(int *)(*v235 + 12 * (int)v73) + 32), *(_DWORD *)(*v235 + 12 * (int)v73), *(_WORD *)(*v235 + 12 * (int)v73 + 4), 8, v29);
            if ((v76 & 0xFF00000000) == 0x200000000) {
              int v56 = 0;
            }
            else {
              int v56 = v76;
            }
          }
          else
          {
            int v56 = 0;
          }
        }
LABEL_146:
        uint64_t v148 = v31;
        swift_retain_n();
        id v149 = objc_msgSend(v242, sel_members);
        sub_1B63989B8(0, (unint64_t *)&qword_1EB97D840);
        uint64_t v150 = sub_1B6E31C28();

        uint64_t v151 = v249;
        if ((v150 & 0xC000000000000001) != 0) {
          id v152 = (id)MEMORY[0x1BA9B4580](v249, v150);
        }
        else {
          id v152 = *(id *)(v150 + 8 * v249 + 32);
        }
        v153 = v152;
        swift_bridgeObjectRelease();
        *(_DWORD *)((char *)objc_msgSend(v153, sel_offset) + v240) = v56;
        sub_1B62C6A70(v37);

        sub_1B62C6A70(v37);
        uint64_t v249 = v151 + 1;
        uint64_t v30 = v233 + 32;
        uint64_t v31 = v148;
        goto LABEL_16;
      case 0xFuLL:
        if (v37 == 0xF000000000000000)
        {
          swift_getObjectType();
          sub_1B6A4E94C();
          ++v230;
        }
        goto LABEL_16;
      default:
        sub_1B6786A7C(a11);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_217;
    }
  }
}

uint64_t sub_1B6A97BC0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu) {
    return sub_1B62C7CB8(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_1B6A97BD4()
{
  swift_unownedRelease();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

void sub_1B6A97C0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t *sub_1B6A97C58()
{
  return sub_1B6916114(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (uint64_t *)(v0 + 40), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

ValueMetadata *type metadata accessor for vfx_script_emitter()
{
  return &type metadata for vfx_script_emitter;
}

uint64_t assignWithCopy for CachedLocationMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B62C7CB8(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_1B62C6AE0(v8, v9, v10, v11);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for CachedLocationMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B62C6AE0(v6, v7, v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for CachedLocationMapping()
{
  return &type metadata for CachedLocationMapping;
}

ValueMetadata *type metadata accessor for ScriptingMappingTimestamps()
{
  return &type metadata for ScriptingMappingTimestamps;
}

uint64_t initializeWithCopy for LocationMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1B62C7CB8(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for LocationMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1B62C7CB8(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B62C6AE0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for LocationMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B62C6AE0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationMapping(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x3C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for LocationMapping(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)float result = a2 - 62;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)float result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1B6A97F6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_1B6A97F78(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1B6A97F88(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for LocationMapping()
{
  return &type metadata for LocationMapping;
}

unsigned char *storeEnumTagSinglePayload for MappingInvalidationTrigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *float result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6A98078);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *float result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MappingInvalidationTrigger()
{
  return &type metadata for MappingInvalidationTrigger;
}

uint64_t destroy for MappedLocation(uint64_t result)
{
  if (*(void *)(result + 8)) {
    return swift_release();
  }
  return result;
}

void *_s3VFX14MappedLocationVwCP_0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  if (v3)
  {
    uint64_t v4 = a2[2];
    a1[1] = v3;
    a1[2] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  }
  return a1;
}

void *assignWithCopy for MappedLocation(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1 + 1;
  uint64_t v5 = a2 + 1;
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v7 = a2[2];
      a1[1] = v4;
      a1[2] = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *uint64_t v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[2];
  a1[1] = v4;
  a1[2] = v6;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for MappedLocation(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1 + 1;
  uint64_t v5 = a2 + 1;
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v7 = a2[2];
      a1[1] = v4;
      a1[2] = v7;
      return a1;
    }
LABEL_7:
    *uint64_t v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[2];
  a1[1] = v4;
  a1[2] = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MappedLocation()
{
  return &type metadata for MappedLocation;
}

unint64_t sub_1B6A9823C()
{
  unint64_t result = qword_1E9DD4DB0;
  if (!qword_1E9DD4DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4DB0);
  }
  return result;
}

id sub_1B6A9829C@<X0>(void *a1@<X8>)
{
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_depthPixelFormat) & 1) != 0
    && (id v3 = objc_msgSend(v1, sel_depthPixelFormat),
        (objc_msgSend(v1, sel_respondsToSelector_, sel_stencilPixelFormat) & 1) != 0))
  {
    id v4 = objc_msgSend(v1, sel_stencilPixelFormat);
    id v15 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 0);
    id v14 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 1);
    id v5 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 2);
    id v6 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 3);
    id v7 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 4);
    id v8 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 5);
    id v9 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 6);
    id v10 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 7);
    id result = objc_msgSend(v1, sel_sampleCount);
  }
  else
  {
    id v15 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 0);
    id v14 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 1);
    id v5 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 2);
    id v6 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 3);
    id v7 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 4);
    id v8 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 5);
    id v9 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 6);
    id v10 = objc_msgSend(v1, sel_colorPixelFormatAtIndex_, 7);
    id v3 = objc_msgSend(v1, sel_depthStencilPixelFormat);
    id result = objc_msgSend(v1, sel_sampleCount);
    if (v3 == (id)260) {
      uint64_t v12 = 260;
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t v13 = 253;
    if (v3 == (id)260) {
      uint64_t v13 = 260;
    }
    if ((unint64_t)qword_1E9DD6490 >= 0x2540BE407) {
      id v4 = (id)v13;
    }
    else {
      id v4 = (id)v12;
    }
  }
  *a1 = v15;
  a1[1] = v14;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v3;
  a1[9] = v4;
  a1[10] = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ExternalConstantsCopyEncoder.PointerLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalConstantsCopyEncoder.PointerLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)id result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalConstantsCopyEncoder.PointerLocation()
{
  return &type metadata for ExternalConstantsCopyEncoder.PointerLocation;
}

uint64_t sub_1B6A985A0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalConstantsCopyEncoder.TableLocation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExternalConstantsCopyEncoder.TableLocation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ExternalConstantsCopyEncoder.TableLocation()
{
  return &type metadata for ExternalConstantsCopyEncoder.TableLocation;
}

unsigned char *storeEnumTagSinglePayload for ExternalConstantsCopyEncoder.PointerLocation.Destination(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6A9873CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalConstantsCopyEncoder.PointerLocation.Destination()
{
  return &type metadata for ExternalConstantsCopyEncoder.PointerLocation.Destination;
}

ValueMetadata *type metadata accessor for ExternalConstantsCopyEncoder()
{
  return &type metadata for ExternalConstantsCopyEncoder;
}

unint64_t sub_1B6A98788()
{
  unint64_t result = qword_1E9DD4DC0;
  if (!qword_1E9DD4DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4DC0);
  }
  return result;
}

void sub_1B6A987DC()
{
  id v0 = objc_msgSend(self, sel_sharedCaptureManager);
  objc_msgSend(v0, sel_stopCapture);
}

void sub_1B6A9883C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 24));
  uint64_t v3 = OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground))
  {
    unsigned int v4 = *(os_unfair_lock_s **)(v2 + 24);
    os_unfair_lock_unlock(v4);
  }
  else
  {
    char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 24));
    if ((v5 & 1) == 0)
    {
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 24));
      *(unsigned char *)(v1 + v3) = 1;
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 24));
      if (*(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
      {
        swift_retain();
        sub_1B6A90C88(0);
        swift_release();
      }
      uint64_t v6 = swift_retain();
      sub_1B69E3520(v6, v1);
      swift_release();
    }
  }
}

void sub_1B6A98950()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock + 24));
  uint64_t v2 = OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 24));
  }
  else
  {
    char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 24));
    if ((v3 & 1) == 0) {
      return;
    }
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 24));
  *(unsigned char *)(v0 + v2) = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 24));
  if (*(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    swift_retain();
    sub_1B6A90D70();
    swift_release();
  }
}

uint64_t *sub_1B6A98A14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  *(void *)&v47[0] = 0x6974726174736572;
  *((void *)&v47[0] + 1) = 0xEF2078667620676ELL;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  long long v5 = v47[0];
  uint64_t v6 = sub_1B6E32168();
  *(void *)&v47[0] = 2;
  (*(void (**)(uint64_t, _OWORD *, void, void))(*(void *)v4 + 88))(v6, v47, v5, *((void *)&v5 + 1));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 & 0xFFFFFFFFFFLL;
  if (v7 == 0x200000000) {
    sub_1B6B65E48();
  }
  swift_retain();
  uint64_t v8 = sub_1B6852124();
  swift_release();
  if (v8)
  {
    sub_1B6A9BF28(v2, v7);
    sub_1B6A9C4AC(v2, v7);
    sub_1B6A9CA30(v2, v7);
    sub_1B6A9CFB4(v2, v7);
    sub_1B6A9D538(v2, v7);
    sub_1B6A9DABC(v2, v7);
    sub_1B6A9E040(v2, v7);
    sub_1B6A9E5C4(v2, v7);
    sub_1B6A9EB48(v2, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB0F0, (uint64_t (*)(uint64_t *))sub_1B63061D4, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
    sub_1B6A9EB48(v2, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAFF8, (uint64_t (*)(uint64_t *))sub_1B63061D4, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
    sub_1B6A9EB48(v2, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB1E8, (uint64_t (*)(uint64_t *))sub_1B6AA0234, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8);
    sub_1B6A9EB48(v2, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAF7C, (uint64_t (*)(uint64_t *))sub_1B63061D4, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
    sub_1B6A9EB48(v2, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB264, (uint64_t (*)(uint64_t *))sub_1B63061D4, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
    sub_1B6A9EB48(v2, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB16C, (uint64_t (*)(uint64_t *))sub_1B63061D4, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
    sub_1B6A9EB48(v2, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAF00, (uint64_t (*)(uint64_t *))sub_1B63061D4, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
    swift_release();
  }
  sub_1B6A99838(v7);
  swift_retain();
  uint64_t v9 = sub_1B685221C();
  swift_release();
  if (v9)
  {
    sub_1B691BA0C(v2, v7);
    swift_release();
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v59 = qword_1EB997A18;
  int v60 = 0;
  char v61 = 2;
  uint64_t v62 = 0;
  char v63 = 2;
  uint64_t v64 = 0;
  swift_retain();
  sub_1B67CF068((uint64_t)v44);
  swift_release();
  v56[0] = v44[0];
  v56[1] = v44[1];
  uint64_t v57 = v45;
  sub_1B62C9DA8(v2, (uint64_t)v56, v7, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)v44);
  }
  if (v53 <= 0 || (uint64_t v38 = v50) == 0)
  {
    sub_1B63061D4((uint64_t)v44);
    return sub_1B632F170(v46);
  }
  uint64_t v10 = v52[4];
  int v11 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v54[0] = v47[0];
  v54[1] = v47[1];
  uint64_t v55 = v48;
  uint64_t v36 = (uint64_t)(v52 + 6);
  uint64_t v37 = v49;
  uint64_t v43 = v52;
  uint64_t v35 = v52 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  int v34 = v11;
  do
  {
    id v14 = (unsigned int *)(v37 + 48 * v12);
    uint64_t v39 = *v14;
    uint64_t v40 = v14[1];
    uint64_t v41 = v13;
    id v15 = (uint64_t *)*((void *)v14 + 2);
    uint64_t v42 = *((void *)v14 + 3);
    uint64_t v16 = *((void *)v14 + 4);
    uint64_t v17 = *((void *)v14 + 5);
    if (v11)
    {
      unint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    sub_1B62D7910(v36, (uint64_t)v58, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v19 = v43[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v43[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v43[7] = v20;
    v35[1] = 0;
    v35[2] = 0;
    *uint64_t v35 = 0;
    swift_release();
    uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for Bindings, (uint64_t)&off_1F0FA3490, v15, v42, v16, (uint64_t)v43);
    if (v15)
    {
      if (!v16) {
        goto LABEL_22;
      }
      uint64_t v13 = v41;
      if (v16 == 1)
      {
        unint64_t v22 = 0;
        int v11 = v34;
      }
      else
      {
        unint64_t v22 = v16 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v23 = (unsigned char *)(v21 + 32);
        unint64_t v24 = v16 & 0xFFFFFFFFFFFFFFFELL;
        int v11 = v34;
        do
        {
          *(v23 - 24) = 1;
          *uint64_t v23 = 1;
          v23 += 48;
          v24 -= 2;
        }
        while (v24);
        if (v16 == v22) {
          goto LABEL_36;
        }
      }
      unint64_t v25 = v16 - v22;
      id v26 = (unsigned char *)(v21 + 24 * v22 + 8);
      do
      {
        *id v26 = 1;
        v26 += 24;
        --v25;
      }
      while (v25);
    }
    else
    {
      if (v39 == v40)
      {
LABEL_22:
        int v11 = v34;
        uint64_t v13 = v41;
        goto LABEL_36;
      }
      uint64_t v27 = v40 - v39;
      uint64_t v13 = v41;
      if ((unint64_t)(v40 - v39) >= 2)
      {
        uint64_t v28 = (v27 & 0xFFFFFFFFFFFFFFFELL) + v39;
        uint64_t v29 = (unsigned char *)(v21 + 24 * v39 + 32);
        unint64_t v30 = v27 & 0xFFFFFFFFFFFFFFFELL;
        int v11 = v34;
        do
        {
          *(v29 - 24) = 1;
          unsigned char *v29 = 1;
          v29 += 48;
          v30 -= 2;
        }
        while (v30);
        if (v27 == (v27 & 0xFFFFFFFFFFFFFFFELL)) {
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v28 = v39;
        int v11 = v34;
      }
      uint64_t v31 = (unsigned char *)(v21 + 24 * v28 + 8);
      uint64_t v32 = v40 - v28;
      do
      {
        *uint64_t v31 = 1;
        v31 += 24;
        --v32;
      }
      while (v32);
    }
LABEL_36:
    sub_1B6345178(v43, (unsigned __int16 **)v54, (uint64_t)v58);
    sub_1B634507C((char *)v17);
    ecs_stack_allocator_pop_snapshot(v10);
    if (v11)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    ++v12;
  }
  while (v12 != v38);
  sub_1B63061D4((uint64_t)v44);
  sub_1B632F170(v46);
  return sub_1B632F170(v46);
}

uint64_t sub_1B6A99274()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E312D8();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x1F4188790](v2, v3);
  long long v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B6E31288();
  uint64_t v46 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v40 - v11;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v40 - v15;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1B6E312C8();
  uint64_t v18 = sub_1B6385660(v17, (uint64_t)qword_1EB997E68);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  v19(v16, v1 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v6);
  uint64_t v44 = v18;
  uint64_t v20 = sub_1B6E312A8();
  os_signpost_type_t v21 = sub_1B6E322B8();
  char v22 = sub_1B6E323F8();
  uint64_t v41 = v5;
  if (v22)
  {
    v19(v12, (uint64_t)v16, v6);
    uint64_t v23 = v1;
    unint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v24 = 0;
    os_signpost_id_t v25 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v20, v21, v25, "prepare", "", v24, 2u);
    id v26 = v24;
    uint64_t v1 = v23;
    uint64_t v27 = v46;
    MEMORY[0x1BA9B84C0](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v6);
  }
  else
  {
  }
  uint64_t v40 = (void (*)(char *, char *, uint64_t))v19;
  v19(v12, (uint64_t)v16, v6);
  sub_1B6E31308();
  swift_allocObject();
  sub_1B6E312F8();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v46 + 8);
  v28(v16, v6);
  uint64_t v29 = swift_retain();
  sub_1B69D70F0(v29, v1);
  unint64_t v30 = sub_1B6E312A8();
  sub_1B6E312E8();
  int v31 = sub_1B6E322A8();
  if (sub_1B6E323F8())
  {
    LODWORD(v46) = v31;
    swift_retain();
    uint64_t v32 = v41;
    sub_1B6E31318();
    swift_release();
    uint64_t v34 = v42;
    uint64_t v33 = v43;
    if ((*(unsigned int (**)(char *, uint64_t))(v42 + 88))(v32, v43) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v35 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
      uint64_t v35 = "";
    }
    uint64_t v36 = v45;
    v40(v12, v45, v6);
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    os_signpost_id_t v38 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v30, (os_signpost_type_t)v46, v38, "prepare", v35, v37, 2u);
    MEMORY[0x1BA9B84C0](v37, -1, -1);

    v28(v36, v6);
  }
  else
  {

    uint64_t v12 = v45;
  }
  v28(v12, v6);
  return swift_release();
}

uint64_t sub_1B6A99714()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = (void *)v1[36];
    uint64_t v3 = (os_unfair_lock_s *)v2[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v3);
    sub_1B6967370(v2);
    os_unfair_lock_unlock(v3);
    swift_release();
    uint64_t v4 = (void *)v1[37];
    long long v5 = (os_unfair_lock_s *)v4[7];
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1B6967370(v4);
    os_unfair_lock_unlock(v5);
    swift_release();
    uint64_t v6 = v1[33];
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC868];
    *(void *)(v6 + 40) = MEMORY[0x1E4FBC868];
    uint64_t v8 = *(void *)(v6 + 24);
    *(void *)(v8 + 40) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 48) = v7;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t *sub_1B6A99838(uint64_t a1)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v44 = qword_1EB997A18;
  int v45 = 0;
  char v46 = 2;
  uint64_t v47 = 0;
  char v48 = 2;
  uint64_t v49 = 0;
  swift_retain();
  sub_1B6A6F110(3, (uint64_t)v29);
  swift_release();
  v41[0] = v29[0];
  v41[1] = v29[1];
  uint64_t v42 = v30;
  sub_1B62C9DA8(v1, (uint64_t)v41, a1 & 0xFFFFFFFFFFLL, v31);
  sub_1B62D7910((uint64_t)v31, (uint64_t)v32, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v32[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)v29);
  }
  if (v38 <= 0 || (uint64_t v25 = v35) == 0)
  {
    sub_1B63061D4((uint64_t)v29);
    return sub_1B632F170(v31);
  }
  uint64_t v3 = v37;
  uint64_t v4 = v37[4];
  int v5 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v39[0] = v32[0];
  v39[1] = v32[1];
  uint64_t v40 = v33;
  uint64_t v23 = (uint64_t)(v37 + 6);
  uint64_t v24 = v34;
  char v22 = v37 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v21 = v5;
  do
  {
    uint64_t v8 = (unsigned int *)(v24 + 48 * v6);
    uint64_t v27 = *v8;
    uint64_t v28 = v7;
    uint64_t v26 = v8[1];
    uint64_t v10 = (uint64_t *)*((void *)v8 + 2);
    uint64_t v9 = *((void *)v8 + 3);
    uint64_t v11 = *((void *)v8 + 4);
    uint64_t v12 = *((void *)v8 + 5);
    if (v5)
    {
      uint64_t v13 = *(os_unfair_lock_s **)(v12 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v13);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v4);
    sub_1B62D7910(v23, (uint64_t)v43, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v14 = v3[4];
    uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v3[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
    v3[7] = v15;
    v22[1] = 0;
    v22[2] = 0;
    *char v22 = 0;
    swift_release();
    uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for Seed, (uint64_t)&off_1F0F9E9D0, v10, v9, v11, (uint64_t)v3);
    if (v10)
    {
      if (!v11) {
        goto LABEL_18;
      }
      uint64_t v17 = (unsigned char *)(v16 + 4);
      int v5 = v21;
      uint64_t v7 = v28;
      do
      {
        if (*v17 == 1) {
          *((_DWORD *)v17 - 1) = arc4random();
        }
        v17 += 8;
        --v11;
      }
      while (v11);
    }
    else
    {
      if (v27 == v26)
      {
LABEL_18:
        int v5 = v21;
        uint64_t v7 = v28;
        goto LABEL_19;
      }
      uint64_t v18 = (unsigned char *)(v16 + 8 * v27 + 4);
      uint64_t v19 = v26 - v27;
      int v5 = v21;
      uint64_t v7 = v28;
      do
      {
        if (*v18 == 1) {
          *((_DWORD *)v18 - 1) = arc4random();
        }
        v18 += 8;
        --v19;
      }
      while (v19);
    }
LABEL_19:
    sub_1B6345178(v3, (unsigned __int16 **)v39, (uint64_t)v43);
    sub_1B634507C((char *)v12);
    ecs_stack_allocator_pop_snapshot(v4);
    if (v5)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
    }
    swift_release();
    ++v6;
  }
  while (v6 != v25);
  sub_1B63061D4((uint64_t)v29);
  sub_1B632F170(v31);
  return sub_1B632F170(v31);
}

void sub_1B6A99BF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX13EntityManager_updateHandlerIndex;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_updateHandlerIndex + 8) == 1)
  {
    uint64_t v2 = self;
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_addObserver_selector_name_object_, v0, sel__applicationDidEnterBackground_, *MEMORY[0x1E4FB2640], 0);

    id v4 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, sel__applicationWillEnterForeground_, *MEMORY[0x1E4FB2730], 0);

    id v5 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel__sceneDidEnterBackground_, *MEMORY[0x1E4FB2E90], 0);

    id v6 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v6, sel_addObserver_selector_name_object_, v0, sel__sceneWillEnterForeground_, *MEMORY[0x1E4FB2EB0], 0);

    id v7 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v7, sel_addObserver_selector_name_object_, v0, sel__sceneDidEnterBackground_, *MEMORY[0x1E4F28288], 0);

    id v8 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v8, sel_addObserver_selector_name_object_, v0, sel__sceneWillEnterForeground_, *MEMORY[0x1E4F28270], 0);

    if (*(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
    {
      if (qword_1EB97D4A0 != -1) {
        swift_once();
      }
      uint64_t v9 = &qword_1EB997A38;
    }
    else
    {
      if (qword_1E9DCC6B8 != -1) {
        swift_once();
      }
      uint64_t v9 = &qword_1E9E49750;
    }
    uint64_t v10 = *v9;
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v12 = *(os_unfair_lock_s **)(v10 + 40);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v12);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1B637886C;
    *(void *)(v13 + 24) = v11;
    swift_retain();
    unint64_t v14 = sub_1B6A9A050((uint64_t)sub_1B6377A84, v13);
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 40));
    swift_release();
    swift_release_n();
    *(void *)uint64_t v1 = v14;
    *(unsigned char *)(v1 + 8) = 0;
  }
}

void sub_1B6A99F28()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX13EntityManager_updateHandlerIndex;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_updateHandlerIndex + 8) & 1) == 0)
  {
    uint64_t v2 = *(void *)v1;
    id v3 = objc_msgSend(self, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v0);

    if (*(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
    {
      if (qword_1EB97D4A0 == -1) {
        goto LABEL_6;
      }
    }
    else if (qword_1E9DCC6B8 == -1)
    {
LABEL_6:
      swift_retain();
      sub_1B6BC8154(v2);
      swift_release();
      *(void *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 8) = 1;
      return;
    }
    swift_once();
    goto LABEL_6;
  }
}

unint64_t sub_1B6A9A050(uint64_t a1, uint64_t a2)
{
  id v5 = *(void **)v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 16);
  if (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    while (v5[v7 + 4])
    {
      ++v8;
      v7 += 2;
      if (v6 == v8) {
        goto LABEL_5;
      }
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_1B6C16904(v5);
    }
    uint64_t v11 = &v5[v7];
    sub_1B62C6A50(v11[4]);
    v11[4] = a1;
    v11[5] = a2;
  }
  else
  {
LABEL_5:
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_1B68C5650(0, v6 + 1, 1, v5);
    }
    unint64_t v8 = v5[2];
    unint64_t v9 = v5[3];
    if (v8 >= v9 >> 1) {
      id v5 = sub_1B68C5650(v9 > 1, v8 + 1, 1, v5);
    }
    v5[2] = v8 + 1;
    uint64_t v10 = &v5[2 * v8];
    v10[4] = a1;
    v10[5] = a2;
  }
  *(void *)uint64_t v2 = v5;
  return v8;
}

uint64_t sub_1B6A9A168()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB997A18;
  sub_1B62F946C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Particle;
  *(void *)(inited + 40) = &off_1F0FA6CF0;
  uint64_t v5 = v0;
  int v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  swift_retain();
  sub_1B62F776C(inited, 1, (uint64_t)v3);
  swift_setDeallocating();
  xmmword_1E9E495B0 = v3[0];
  unk_1E9E495C0 = v3[1];
  qword_1E9E495D0 = v4;
  return swift_release();
}

uint64_t sub_1B6A9A2C0(uint64_t a1)
{
  if (qword_1E9DCC568 != -1) {
    swift_once();
  }
  v20[0] = xmmword_1E9E495B0;
  v20[1] = unk_1E9E495C0;
  uint64_t v21 = qword_1E9E495D0;
  uint64_t v3 = a1 & 0xFFFFFFFFFFLL;
  sub_1B62C9DA8(v1, (uint64_t)v20, v3, v6);
  sub_1B632F170(v6);
  sub_1B62D7910((uint64_t)v6, (uint64_t)v13, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v13[0]) {
    return 1;
  }
  if (qword_1EB97E2F0 != -1) {
    swift_once();
  }
  v18[0] = xmmword_1EB997A68;
  v18[1] = unk_1EB997A78;
  uint64_t v19 = qword_1EB997A88;
  uint64_t v4 = v7;
  sub_1B62C9DA8(v1, (uint64_t)v18, v3, v7);
  sub_1B62D7910((uint64_t)v7, (uint64_t)v12, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v12[0]) {
    goto LABEL_13;
  }
  if (qword_1EB97EC68 != -1) {
    swift_once();
  }
  v16[0] = xmmword_1EB997C70;
  v16[1] = *(_OWORD *)&qword_1EB997C80;
  uint64_t v17 = qword_1EB997C90;
  uint64_t v4 = v8;
  sub_1B62C9DA8(v1, (uint64_t)v16, v3, v8);
  sub_1B62D7910((uint64_t)v8, (uint64_t)v11, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v11[0]) {
    goto LABEL_13;
  }
  if (qword_1EB97EC70 != -1) {
    swift_once();
  }
  v14[0] = xmmword_1EB997C98;
  v14[1] = unk_1EB997CA8;
  uint64_t v15 = qword_1EB997CB8;
  uint64_t v4 = v9;
  sub_1B62C9DA8(v1, (uint64_t)v14, v3, v9);
  sub_1B62D7910((uint64_t)v9, (uint64_t)v10, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v10[0])
  {
LABEL_13:
    sub_1B632F170(v4);
    return 1;
  }
  return 0;
}

uint64_t sub_1B6A9A538(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(1);
}

void sub_1B6A9A564(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock + 24));
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 24));
  }
  else
  {
    char v9 = *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 24));
    if ((v9 & 1) == 0)
    {
      uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
      if (v10)
      {
        swift_retain();
        sub_1B6377C4C(a1);
        if (*(void *)(*(void *)(v10 + 224) + 16))
        {
          double v11 = CACurrentMediaTime();
          uint64_t v12 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
          float v13 = a3;
          *(float *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64) = v13;
          sub_1B6378470(a3);
          *(double *)(v12 + 48) = a4;
          *(void *)(v12 + 8) = a2;
          sub_1B6378CA8(a2);
          uint64_t v14 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_counters;
          unsigned int v15 = *(_DWORD *)(v14 + 8);
          double v16 = CACurrentMediaTime();
          if (*(void *)v14) {
            vfx_counters_update(*(void *)v14, v15, v16 - v11);
          }
        }
        swift_release();
      }
    }
  }
}

void sub_1B6A9A6A4(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  int v3 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 0;
  int v81 = v3;
  if (v3)
  {
    uint64_t v4 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v4)
    {
      swift_retain();
      v4(a1);
      sub_1B62C6A50((uint64_t)v4);
    }
  }
  uint64_t v77 = OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare) = 1;
  sub_1B63773A4();
  uint64_t v5 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
  swift_retain();
  uint64_t v6 = swift_retain();
  sub_1B6C5E224(v6, a1);
  swift_release();
  swift_release();
  uint64_t v76 = v5;
  uint64_t v7 = *(void *)(a1 + v5);
  uint64_t v8 = *(void *)(v7 + 24);
  swift_retain();
  if (v8)
  {
    uint64_t v10 = v2;
    double v11 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
    uint64_t v12 = (uint64_t *)thread_worker_index(&thread_worker_index, v9);
    uint64_t v13 = *v12;
    *uint64_t v12 = 0;
    int v14 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent);
    swift_retain();
    if (v14 == 1)
    {
      sub_1B62F38EC(2);
      *(unsigned char *)(*(void *)(v7 + 24) + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 0;
    }
    sub_1B62F38EC(0);
    *(void *)v11(&thread_worker_index) = v13;
    swift_release();
    swift_release();
    uint64_t v2 = v10;
  }
  int v15 = *(unsigned __int8 *)(a1 + v2);
  *(unsigned char *)(a1 + v2) = 2;
  if (v15 != 2)
  {
    double v16 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v16)
    {
      swift_retain();
      v16(a1);
      sub_1B62C6A50((uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v17)
  {
    uint64_t v23 = *(void *)(*(void *)(a1 + v76) + 24);
    swift_retain();
    if (v23)
    {
      uint64_t v25 = (uint64_t *)thread_worker_index(&thread_worker_index, v24);
      uint64_t v26 = *v25;
      uint64_t *v25 = 0;
      swift_retain();
      sub_1B62F38EC(1);
      uint64_t *v25 = v26;
      swift_release();
      swift_release();
    }
    int v27 = *(unsigned __int8 *)(a1 + v2);
    *(unsigned char *)(a1 + v2) = v15;
    if (v27 != v15)
    {
      uint64_t v28 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
      if (v28)
      {
        swift_retain();
        v28(a1);
        sub_1B62C6A50((uint64_t)v28);
      }
    }
    *(unsigned char *)(a1 + v77) = 0;
    int v29 = *(unsigned __int8 *)(a1 + v2);
    int v30 = v81;
    *(unsigned char *)(a1 + v2) = v81;
    if (v29 != v30)
    {
      uint64_t v31 = OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn;
      goto LABEL_46;
    }
    return;
  }
  uint64_t v75 = v2;
  if (*(unsigned char *)(v17 + 552))
  {
    uint64_t v18 = *(void *)(v17 + 216);
    if (*(void *)(v18 + 16))
    {
      uint64_t v19 = *(void *)(v18 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 88);
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v22 = v21(ObjectType, v19);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_retain();
      uint64_t v22 = 80;
    }
  }
  else
  {
    uint64_t v22 = *(void *)(v17 + 544);
    swift_retain();
  }
  uint64_t v32 = self;
  id v33 = objc_msgSend(v32, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, v22, 16, 16, 0);
  objc_msgSend(v33, sel_setUsage_, 5);
  uint64_t v34 = *(void **)(v17 + 16);
  if (!objc_msgSend(v34, sel_newTextureWithDescriptor_, v33))
  {
    int v36 = v15;
    uint64_t v37 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v79 = 0x80000001B6F45D10;
    id v38 = objc_msgSend(v33, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_1B6E32148();
    uint64_t v78 = 0;
    (*(void (**)(uint64_t, uint64_t *, unint64_t, unint64_t))(*(void *)v37 + 88))(v39, &v78, 0xD000000000000024, 0x80000001B6F45D10);
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    int v40 = *(unsigned __int8 *)(a1 + v75);
    *(unsigned char *)(a1 + v75) = v36;
    if (v40 != v36)
    {
      uint64_t v41 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
      if (v41)
      {
        swift_retain();
        v41(a1);
        sub_1B62C6A50((uint64_t)v41);
      }
    }
    *(unsigned char *)(a1 + v77) = 0;
    int v42 = *(unsigned __int8 *)(a1 + v75);
    int v43 = v81;
    *(unsigned char *)(a1 + v75) = v81;
    if (v42 != v43)
    {
      uint64_t v31 = OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn;
      goto LABEL_46;
    }
    return;
  }
  BOOL v74 = v33;
  if (*(unsigned char *)(v17 + 568))
  {
    uint64_t v35 = 0;
    goto LABEL_34;
  }
  uint64_t v44 = *(void *)(v17 + 560);
  id v45 = objc_msgSend(v32, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, v44, 16, 16, 0);
  objc_msgSend(v45, sel_setUsage_, 7);
  id v46 = objc_msgSend(v34, sel_newTextureWithDescriptor_, v45);
  if (v46)
  {
    uint64_t v35 = (uint64_t)v46;
    *(void *)(v17 + 592) = v44;
    sub_1B6382348();

LABEL_34:
    int v80 = v15;
    type metadata accessor for MTLTextureRenderOutput();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v47 = swift_unknownObjectRetain();
    uint64_t v48 = sub_1B67FF1A8(v47, v35);
    uint64_t v49 = v48;
    *(unsigned char *)(v48 + 136) = 0;
    uint64_t v50 = v75;
    if ((*(unsigned char *)(v17 + 584) & 1) == 0) {
      *(void *)(v48 + 32) = *(void *)(v17 + 576);
    }
    id v51 = objc_msgSend(*(id *)(v17 + 312), sel_commandBuffer);
    if (v51)
    {
      sub_1B6E328F8();
      uint64_t v52 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      objc_msgSend(v51, sel_setLabel_, v52);
    }
    swift_retain();
    sub_1B6CCAF00(a1, v49, v51, (void *)v17);
    swift_release();
    uint64_t v53 = *(void *)(*(void *)(a1 + v76) + 24);
    swift_retain();
    if (v53)
    {
      uint64_t v73 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
      uint64_t v55 = (uint64_t *)thread_worker_index(&thread_worker_index, v54);
      uint64_t v56 = *v55;
      *uint64_t v55 = 0;
      swift_retain();
      sub_1B62F38EC(1);
      *uint64_t v55 = v56;
      uint64_t v50 = v75;
      swift_release();
      swift_release();
      uint64_t v57 = *(void *)(*(void *)(a1 + v76) + 24);
      swift_retain();
      if (v57)
      {
        uint64_t v58 = (uint64_t *)v73(&thread_worker_index);
        uint64_t v59 = *v58;
        *uint64_t v58 = 0;
        swift_retain();
        sub_1B62F38EC(5);
        *uint64_t v58 = v59;
        swift_release();
        swift_release();
      }
    }
    swift_retain();
    sub_1B679EE7C();
    swift_release();
    sub_1B63773A4();
    sub_1B637B33C(0);
    swift_getObjectType();
    objc_msgSend(v51, sel_commit);
    sub_1B6BBB94C();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    int v60 = *(unsigned __int8 *)(a1 + v50);
    int v61 = v80;
    *(unsigned char *)(a1 + v50) = v80;
    if (v60 != v61)
    {
      uint64_t v62 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
      if (v62)
      {
        swift_retain();
        v62(a1);
        sub_1B62C6A50((uint64_t)v62);
      }
    }
    *(unsigned char *)(a1 + v77) = 0;
    int v63 = *(unsigned __int8 *)(a1 + v50);
    int v64 = v81;
    *(unsigned char *)(a1 + v50) = v81;
    if (v63 != v64)
    {
      uint64_t v31 = OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn;
      goto LABEL_46;
    }
    return;
  }
  uint64_t v66 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v79 = 0x80000001B6F45D40;
  id v67 = objc_msgSend(v45, sel_description);
  sub_1B6E31798();

  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v68 = sub_1B6E32148();
  uint64_t v78 = 0;
  (*(void (**)(uint64_t, uint64_t *, unint64_t, unint64_t))(*(void *)v66 + 88))(v68, &v78, 0xD00000000000002ALL, 0x80000001B6F45D40);
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  int v69 = *(unsigned __int8 *)(a1 + v75);
  *(unsigned char *)(a1 + v75) = v15;
  if (v69 != v15)
  {
    uint64_t v70 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v70)
    {
      swift_retain();
      v70(a1);
      sub_1B62C6A50((uint64_t)v70);
    }
  }
  *(unsigned char *)(a1 + v77) = 0;
  int v71 = *(unsigned __int8 *)(a1 + v75);
  int v72 = v81;
  *(unsigned char *)(a1 + v75) = v81;
  if (v71 != v72)
  {
    uint64_t v31 = OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn;
LABEL_46:
    uint64_t v65 = *(void (**)(uint64_t))(a1 + v31);
    if (v65)
    {
      swift_retain();
      v65(a1);
      sub_1B62C6A50((uint64_t)v65);
    }
  }
}

uint64_t sub_1B6A9B090(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_1B6E31478();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  double v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1B6E30AE8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  int v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E30AD8();
  sub_1B63989B8(0, (unint64_t *)&qword_1EB97D1B0);
  swift_retain();
  *double v9 = sub_1B6E32238();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E4FBCBF0], v5);
  sub_1B6E31488();
  uint64_t v15 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v9, v5);
  a4(v15);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6A9B2AC()
{
  return sub_1B6E327B8();
}

uint64_t sub_1B6A9B358()
{
  uint64_t v29 = sub_1B6E30DE8();
  uint64_t v0 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29, v1);
  int v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B6E31098();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  double v16 = (char *)&v28 - v15;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v18 = (void *)sub_1B6E31768();
  objc_msgSend(v17, sel_setDateFormat_, v18);

  sub_1B6E30E68();
  v30[0] = 0x2D6563617274;
  v30[1] = 0xE600000000000000;
  id v19 = objc_msgSend(self, sel_now);
  sub_1B6E31078();

  uint64_t v20 = (void *)sub_1B6E31058();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v21 = v9;
  id v22 = objc_msgSend(v17, sel_stringFromDate_, v20);

  sub_1B6E31798();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v23 = v29;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v3, *MEMORY[0x1E4F276C0], v29);
  sub_1B633AF88();
  sub_1B6E30F38();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v23);
  swift_bridgeObjectRelease();
  double v24 = *(void (**)(char *, uint64_t))(v28 + 8);
  v24(v13, v21);
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v25 = sub_1B6E32168();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v30[0] = 0;
  swift_retain();
  sub_1B6B33E34(v25, v30, 0xD00000000000001CLL, 0x80000001B6F45D90);
  swift_release();
  swift_release();
  id v26 = MTLCreateSystemDefaultDevice();
  if (v26)
  {
    sub_1B63BCCA4((uint64_t)v26);
    sub_1B6D4A438();
    sub_1B6D4AA50();
    swift_unknownObjectRelease();
    swift_release();
  }
  sub_1B6A9F4B8();
  byte_1E9E492D0 = 1;

  return ((uint64_t (*)(char *, uint64_t))v24)(v16, v21);
}

void sub_1B6A9B800(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F351D8]), sel_init);
  objc_msgSend(v2, sel_setCaptureObject_, *(void *)(a1 + 16));
  id v3 = objc_msgSend(self, sel_sharedCaptureManager);
  id v11 = 0;
  unsigned int v4 = objc_msgSend(v3, sel_startCaptureWithDescriptor_error_, v2, &v11);

  if (v4)
  {
    id v5 = v11;

    *(unsigned char *)(a1 + 304) = 1;
  }
  else
  {
    id v6 = v11;
    uint64_t v7 = (void *)sub_1B6E30D78();

    swift_willThrow();
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    id v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v8 = (uint64_t)v11;
    uint64_t v9 = v12;
    int v10 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    id v11 = 0;
    swift_retain();
    sub_1B6B33E34(v10, (uint64_t *)&v11, v8, v9);
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
  }
}

uint64_t type metadata accessor for StartCaptureSystem()
{
  return self;
}

const char *sub_1B6A9BA84()
{
  return "startCapture";
}

uint64_t type metadata accessor for StopCaptureSystem()
{
  return self;
}

const char *sub_1B6A9BAC0()
{
  return "stopCapture";
}

uint64_t sub_1B6A9BAD4()
{
  return qword_1E9DD3030;
}

uint64_t type metadata accessor for RenderImGUISystem()
{
  return self;
}

const char *sub_1B6A9BB08()
{
  return "RenderImGUI";
}

uint64_t sub_1B6A9BB1C()
{
  return qword_1E9DD3028 + 2;
}

uint64_t sub_1B6A9BB2C()
{
  return sub_1B6A9BC2C(&qword_1EB997AE8, 30, (uint64_t)sub_1B6A9B358, (uint64_t)&unk_1F0FB8340);
}

uint64_t sub_1B6A9BBAC()
{
  return sub_1B6A9BC2C(&qword_1EB997F00, 31, (uint64_t)sub_1B6A9B2A8, (uint64_t)&unk_1F0FB82F0);
}

uint64_t sub_1B6A9BC2C(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1B6E313D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B6E31418();
  uint64_t result = MEMORY[0x1F4188790](v13, v14);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    uint64_t v25 = v16;
    v27.__sigaction_u.__sa_handler = (void (__cdecl *)(int))sub_1B6E31328();
    *(void *)&v27.sa_mask = 0;
    sigaction(a2, &v27, 0);
    sub_1B63989B8(0, (unint64_t *)&unk_1EB97D178);
    sub_1B63989B8(0, (unint64_t *)&qword_1EB97D1B0);
    uint64_t v24 = v8;
    uint64_t v19 = sub_1B6E32238();
    uint64_t v23 = a4;
    uint64_t v20 = (void *)v19;
    uint64_t v21 = sub_1B6E32278();

    *a1 = v21;
    swift_unknownObjectRelease();
    swift_getObjectType();
    aBlock[4] = a3;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B639AA00;
    aBlock[3] = v23;
    id v22 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    sub_1B6E313F8();
    sub_1B6A9B2AC();
    sub_1B6E32288();
    _Block_release(v22);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v24);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v13);
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B6E32298();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *sub_1B6A9BF28(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B6781514(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t v32 = type metadata accessor for GraphScript(0);
      sub_1B6AA0034(0, (unint64_t *)&unk_1EB97F790, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(v32, (uint64_t)&off_1F0F55610, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9C4AC(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B678127C(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t v32 = type metadata accessor for SimpleScript(0);
      sub_1B6AA0034(0, (unint64_t *)&unk_1EB97F7B0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(v32, (uint64_t)&off_1F0F5C308, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9CA30(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B6780FE4(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t v32 = type metadata accessor for MetalFunctionScript(0);
      sub_1B6AA0034(0, (unint64_t *)&unk_1EB981190, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(v32, (uint64_t)&off_1F0F7CDE8, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9CFB4(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B6780D4C(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t v32 = type metadata accessor for ShaderScript(0);
      sub_1B6AA0034(0, (unint64_t *)&unk_1EB97F7A0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(v32, (uint64_t)&off_1F0F5C050, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9D538(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B6780AB4(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t v32 = type metadata accessor for EmitterScript(0);
      sub_1B6AA0034(0, &qword_1EB97F7C0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(v32, (uint64_t)&off_1F0F5EBD0, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9DABC(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B678081C(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t inited = type metadata accessor for ParticleInitScript(0);
      sub_1B6AA0034(0, (unint64_t *)&unk_1EB97F770, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(inited, (uint64_t)&off_1F0F796D0, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9E040(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B6780584(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
      sub_1B6AA0034(0, (unint64_t *)&unk_1EB97F780, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(updated, (uint64_t)&off_1F0F82FB8, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B691FFF0(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9E5C4(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B67802EC(1, 1, (uint64_t)&v40);
  swift_release();
  uint64_t v57 = v40;
  int v58 = v41;
  char v59 = v42;
  uint64_t v60 = v43 | 1;
  char v61 = v44;
  uint64_t v62 = v45;
  sub_1B62C9DA8(a1, (uint64_t)&v57, a2 & 0xFFFFFFFFFFLL, v46);
  sub_1B62D7910((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v47[0]) {
    return (uint64_t *)sub_1B63061D4((uint64_t)&v40);
  }
  if (v53 <= 0)
  {
    sub_1B63061D4((uint64_t)&v40);
  }
  else
  {
    uint64_t v35 = v50;
    if (v50)
    {
      uint64_t v34 = v49;
      unsigned int v4 = v52;
      uint64_t v5 = v52[4];
      int v39 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v33 = (uint64_t)(v52 + 6);
      uint64_t v32 = type metadata accessor for TriggerScript(0);
      sub_1B6AA0034(0, (unint64_t *)&unk_1EB9811A0, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
      v54[0] = v47[0];
      v54[1] = v47[1];
      uint64_t v55 = v48;
      uint64_t v31 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v9 = (unsigned int *)(v34 + 48 * v7);
        uint64_t v37 = *v9;
        uint64_t v38 = v8;
        uint64_t v36 = v9[1];
        uint64_t v10 = (uint64_t *)*((void *)v9 + 2);
        uint64_t v11 = *((void *)v9 + 3);
        uint64_t v12 = *((void *)v9 + 4);
        uint64_t v13 = *((void *)v9 + 5);
        if (v39)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v5);
        sub_1B62D7910(v33, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v4[4];
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v4[7] = v16;
        v4[9] = 0;
        v4[10] = 0;
        v4[8] = 0;
        swift_release();
        sub_1B62C9024(v32, (uint64_t)&off_1F0F625B0, v10, v11, v12, (uint64_t)v4);
        uint64_t v17 = sub_1B62C9024(v31, (uint64_t)&off_1F0F8E108, v10, v11, v12, (uint64_t)v4);
        if (v10)
        {
          uint64_t v8 = v38;
          if (v12)
          {
            uint64_t v18 = (uint64_t *)(v17 + 8);
            uint64_t v5 = v30;
            do
            {
              sub_1B692001C(a1, *(v18 - 1), *v18);
              v18 += 2;
              --v12;
            }
            while (v12);
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = v38;
          if (v37 != v36)
          {
            uint64_t v19 = (uint64_t *)(v17 + 16 * v37 + 8);
            uint64_t v20 = v36 - v37;
            uint64_t v5 = v30;
            do
            {
              sub_1B692001C(a1, *(v19 - 1), *v19);
              v19 += 2;
              --v20;
            }
            while (v20);
            goto LABEL_20;
          }
        }
        uint64_t v5 = v30;
LABEL_20:
        sub_1B6345178(v4, (unsigned __int16 **)v54, (uint64_t)v56);
        if (*(void *)(v4[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v13);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v4[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            v4[13] = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            id v26 = *(char **)(v13 + 232);
            sigaction v27 = *(char **)(v13 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v13 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              sigaction v27 = *(char **)(v13 + 232);
              uint64_t v28 = *(char **)(v13 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                sigaction v27 = 0;
                *(void *)(v13 + 232) = 0;
                *(void *)(v13 + 240) = 0;
              }
            }
            *(void *)(v13 + 248) = v28;
            *(void *)(v13 + 256) = v27;
          }
        }
        ecs_stack_allocator_pop_snapshot(v5);
        if (v39)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
        }
        swift_release();
        if (++v7 == v35) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    sub_1B63061D4((uint64_t)&v40);
    sub_1B632F170(v46);
  }
  return sub_1B632F170(v46);
}

uint64_t *sub_1B6A9EB48(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t (*a4)(uint64_t *), unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t a7)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v76 = qword_1EB997A18;
  int v77 = 0;
  char v78 = 2;
  uint64_t v79 = 0;
  char v80 = 2;
  uint64_t v81 = 0;
  swift_retain();
  a3(&v53, 2);
  swift_release();
  uint64_t v70 = v53;
  int v71 = v54;
  char v72 = v55;
  uint64_t v73 = v56 | 1;
  char v74 = v57;
  uint64_t v75 = v58;
  sub_1B62C9DA8(a1, (uint64_t)&v70, a2 & 0xFFFFFFFFFFLL, v59);
  sub_1B62D7910((uint64_t)v59, (uint64_t)v60, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v60[0]) {
    return (uint64_t *)a4(&v53);
  }
  if (v66 <= 0)
  {
    a4(&v53);
  }
  else
  {
    uint64_t v49 = v63;
    if (v63)
    {
      uint64_t v48 = v62;
      uint64_t v13 = v65;
      uint64_t v14 = v65[4];
      int v15 = *(unsigned __int8 *)(v64 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v46 = (uint64_t)(v65 + 6);
      char v44 = v65 + 13;
      sub_1B6AA0034(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      uint64_t v17 = v16;
      v67[0] = v60[0];
      v67[1] = v60[1];
      uint64_t v68 = v61;
      uint64_t v43 = v16 - 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      int v47 = v15;
      uint64_t v45 = v14;
      while (1)
      {
        uint64_t v20 = (unsigned int *)(v48 + 48 * v18);
        uint64_t v51 = *v20;
        uint64_t v52 = v19;
        uint64_t v50 = v20[1];
        uint64_t v21 = (uint64_t *)*((void *)v20 + 2);
        uint64_t v22 = *((void *)v20 + 3);
        uint64_t v24 = *((void *)v20 + 4);
        uint64_t v23 = *((void *)v20 + 5);
        if (v15)
        {
          size_t v25 = *(os_unfair_lock_s **)(v23 + 376);
          swift_retain();
          os_unfair_lock_lock(v25);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v14);
        sub_1B62D7910(v46, (uint64_t)v69, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v26 = v13[4];
        uint64_t v27 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v13[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
        v13[7] = v27;
        v13[9] = 0;
        v13[10] = 0;
        float v13[8] = 0;
        swift_release();
        uint64_t v28 = sub_1B62C9024(v17, (uint64_t)&off_1F0F61BF0, v21, v22, v24, (uint64_t)v13);
        if (v21)
        {
          int v15 = v47;
          uint64_t v19 = v52;
          if (v24)
          {
            uint64_t v29 = *(void *)(*(void *)v43 + 72);
            uint64_t v14 = v45;
            do
            {
              *(unsigned char *)(v28 + *(int *)(v17 + 52)) = 0;
              v28 += v29;
              --v24;
            }
            while (v24);
            goto LABEL_20;
          }
        }
        else
        {
          int v15 = v47;
          uint64_t v19 = v52;
          if (v51 != v50)
          {
            uint64_t v30 = *(void *)(*(void *)v43 + 72);
            uint64_t v31 = v50 - v51;
            uint64_t v32 = v28 + v30 * v51;
            uint64_t v14 = v45;
            do
            {
              *(unsigned char *)(v32 + *(int *)(v17 + 52)) = 0;
              v32 += v30;
              --v31;
            }
            while (v31);
            goto LABEL_20;
          }
        }
        uint64_t v14 = v45;
LABEL_20:
        sub_1B6345178(v13, (unsigned __int16 **)v67, (uint64_t)v69);
        if (*(void *)(v13[13] + 16))
        {
          uint64_t v33 = swift_bridgeObjectRetain();
          sub_1B639147C(v33, v23);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v35 = v13[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v35 + 16));
          }
          else
          {
            uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v35 + 24) >= 2uLL)
            {
              sub_1B62F946C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v36 = (void *)swift_allocObject();
              size_t v37 = j__malloc_size(v36);
              v36[2] = 0;
              v36[3] = 2 * ((uint64_t)(v37 - 32) / 72);
            }
            *char v44 = v36;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v13[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            uint64_t v38 = *(char **)(v23 + 232);
            int v39 = *(char **)(v23 + 256);
            if (v38 == v39)
            {
              uint64_t v40 = *(char **)(v23 + 240);
            }
            else
            {
              sub_1B666018C(v39, v38);
              int v39 = *(char **)(v23 + 232);
              uint64_t v40 = *(char **)(v23 + 240);
              if (v40 == v39)
              {
                uint64_t v40 = 0;
                int v39 = 0;
                *(void *)(v23 + 232) = 0;
                *(void *)(v23 + 240) = 0;
              }
            }
            *(void *)(v23 + 248) = v40;
            *(void *)(v23 + 256) = v39;
          }
        }
        ecs_stack_allocator_pop_snapshot(v14);
        if (v15)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 376));
        }
        swift_release();
        if (++v18 == v49) {
          goto LABEL_37;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_37:
    a4(&v53);
    sub_1B632F170(v59);
  }
  return sub_1B632F170(v59);
}

uint64_t _s3VFX8VFXSceneC29applicationDidEnterBackgroundyyFZ_0()
{
  if (qword_1EB97D5F0 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB997960, sel_lock);
  if (qword_1EB97E3F8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB997A98;
  uint64_t v1 = (void *)qword_1EB997960;
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel_unlock);
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = v0 + 32;
    do
    {
      sub_1B6AA00F8(v3, (uint64_t)v13);
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v5 = Strong;
        uint64_t v6 = Strong + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
        os_unfair_lock_lock(*(os_unfair_lock_t *)(Strong
                                                + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock
                                                + 24));
        uint64_t v7 = OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground;
        if (*(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground))
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 24));
        }
        else
        {
          char v8 = *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground);
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 24));
          if ((v8 & 1) == 0)
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 24));
            *(unsigned char *)(v5 + v7) = 1;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 24));
            uint64_t v9 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
            if (v9)
            {
              swift_retain();
              os_unfair_recursive_lock_lock_with_options();
              if ((*(unsigned char *)(v9 + 152) & 1) == 0) {
                *(unsigned char *)(v9 + 152) = 1;
              }
              uint64_t v10 = *(void *)(v9 + 16);
              objc_msgSend(*(id *)(v10 + 16), sel_lock);
              *(unsigned char *)(v10 + 24) = 0;
              objc_msgSend(*(id *)(v10 + 16), sel_unlock);
              os_unfair_recursive_lock_unlock();
              swift_release();
            }
            uint64_t v11 = swift_retain();
            sub_1B69E3520(v11, v5);
            swift_release();
          }
        }
        swift_release();
      }
      sub_1B6AA018C((uint64_t)v13);
      v3 += 8;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6A9F330()
{
  if (qword_1EB97D5F0 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB997960, sel_lock);
  if (qword_1EB97E3F8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB997A98;
  uint64_t v1 = (void *)qword_1EB997960;
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel_unlock);
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = v0 + 32;
    do
    {
      sub_1B6AA00F8(v3, (uint64_t)v7);
      uint64_t Strong = swift_weakLoadStrong();
      sub_1B6AA018C((uint64_t)v7);
      if (Strong)
      {
        uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
        if (v5)
        {
          swift_retain();
          swift_release();
          *(unsigned char *)(v5 + 32) = 1;
        }
        swift_release();
      }
      v3 += 8;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6A9F4B8()
{
  id v0 = MTLCreateSystemDefaultDevice();
  if (v0)
  {
    sub_1B63BB61C((uint64_t)v0);
    uint64_t v28 = sub_1B6BC8494();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v28 = 0;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v1 = sub_1B6E32168();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&long long v31 = 0;
  swift_retain();
  sub_1B6B33E34(v1, (uint64_t *)&v31, 0x20534345203D3D0ALL, 0xEB000000000A3D3DLL);
  swift_release();
  swift_release();
  if (qword_1EB97D5F0 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB997960, sel_lock);
  if (qword_1EB97E3F8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EB997A98;
  uint64_t v3 = (void *)qword_1EB997960;
  swift_bridgeObjectRetain();
  objc_msgSend(v3, sel_unlock);
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v29 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = v2 + 32;
    do
    {
      sub_1B6AA00F8(v7, (uint64_t)&v34);
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v8 = Strong;
        uint64_t v9 = *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        *(void *)&long long v31 = 0;
        *((void *)&v31 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E31948();
        uint64_t v33 = v8;
        type metadata accessor for EntityManager();
        sub_1B6E32B18();
        sub_1B6E31948();
        uint64_t v10 = v6;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v33 = v8;
        sub_1B6E32B18();
        uint64_t v12 = *((void *)&v31 + 1);
        uint64_t v11 = v31;
        uint64_t v13 = sub_1B6E32168();
        *(void *)&long long v31 = 0;
        (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(*(void *)v9 + 88))(v13, &v31, v11, v12);
        swift_release();
        swift_bridgeObjectRelease();
        long long v31 = 0u;
        long long v32 = 0u;
        uint64_t v14 = swift_retain();
        sub_1B69DBED8(v14, v8, (uint64_t *)&v31);
        swift_release();
        long long v15 = v31;
        uint64_t v16 = *((void *)&v32 + 1);
        sub_1B6AA018C((uint64_t)&v34);
        uint64_t v6 = v15 + v10;
        v29 += *((void *)&v15 + 1);
        v5 += v16;
      }
      else
      {
        sub_1B6AA018C((uint64_t)&v34);
      }
      v7 += 8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v30 = v5;
    uint64_t v18 = v29;
    uint64_t v19 = v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  *(void *)&long long v31 = 0;
  *((void *)&v31 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  objc_msgSend(v20, sel_setCountStyle_, 3);
  id v21 = objc_msgSend(v20, sel_stringFromByteCount_, v19);
  sub_1B6E31798();

  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  objc_msgSend(v22, sel_setCountStyle_, 3);
  id v23 = objc_msgSend(v22, sel_stringFromByteCount_, v18);
  sub_1B6E31798();

  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v34 = v30;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  objc_msgSend(v24, sel_setCountStyle_, 3);
  id v25 = objc_msgSend(v24, sel_stringFromByteCount_, v28);
  sub_1B6E31798();

  sub_1B6E31948();
  swift_bridgeObjectRelease();
  long long v26 = v31;
  LODWORD(v25) = sub_1B6E32168();
  *(void *)&long long v31 = 0;
  swift_retain();
  sub_1B6B33E34((int)v25, (uint64_t *)&v31, v26, *((uint64_t *)&v26 + 1));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6A9FB04(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    if (byte_1E9E492D0 == 1)
    {
      byte_1E9E492D0 = 0;
      sub_1B63989B8(0, (unint64_t *)&qword_1EB97D1B0);
      swift_retain();
      uint64_t v2 = sub_1B6E32238();
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = sub_1B6A9FC4C;
      *(void *)(v3 + 24) = v1;
      v5[4] = sub_1B6377A84;
      v5[5] = v3;
      v5[0] = MEMORY[0x1E4F143A8];
      v5[1] = 1107296256;
      v5[2] = sub_1B691FFC8;
      v5[3] = &unk_1F0FBA1D0;
      uint64_t v4 = _Block_copy(v5);
      swift_retain();
      swift_release();
      dispatch_sync(v2, v4);

      swift_release();
      _Block_release(v4);
      return swift_release();
    }
  }
  return result;
}

void sub_1B6A9FC4C()
{
  sub_1B6A9B800(v0);
}

uint64_t sub_1B6A9FC54()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6A9FC64(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    if (*(unsigned char *)(v1 + 304) == 1)
    {
      *(unsigned char *)(v1 + 304) = 0;
      sub_1B63989B8(0, (unint64_t *)&qword_1EB97D1B0);
      swift_retain();
      uint64_t v2 = sub_1B6E32238();
      v5[4] = sub_1B6A987DC;
      v5[5] = 0;
      v5[0] = MEMORY[0x1E4F143A8];
      v5[1] = 1107296256;
      v5[2] = sub_1B691FFC8;
      v5[3] = &unk_1F0FB7F30;
      uint64_t v3 = _Block_copy(v5);
      swift_release();
      dispatch_sync(v2, v3);

      _Block_release(v3);
    }
    else
    {
      swift_retain();
    }
    char v4 = byte_1E9E492D1;
    if (byte_1E9E492D1 == 1)
    {
      byte_1E9E492D1 = 0;
      byte_1E9E492D0 = v4;
    }
    return swift_release();
  }
  return result;
}

void sub_1B6A9FD94(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) & 1) == 0)
  {
    uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
    if (v2)
    {
      if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_canUseImGUI) == 1)
      {
        swift_retain();
        swift_retain();
        id v6 = (id)sub_1B63340E8(a1);
        swift_release();
        if (v6)
        {
          uint64_t v3 = sub_1B6E328F8();
          sub_1B6388754(v3, v4, v6);
          swift_bridgeObjectRelease();
          if (sub_1B6388ED8(0) && *(void *)(v2 + 368))
          {
            swift_getObjectType();
            int v5 = *(_DWORD *)(v2 + 24) & 1;
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            sub_1B6389180(0, v5);
            swift_release();

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
        else
        {
          swift_release();
        }
      }
    }
  }
}

uint64_t sub_1B6A9FF58()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6A9FF90()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6A9FFC8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B6AA0000(void *a1)
{
}

uint64_t sub_1B6AA0008()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

void sub_1B6AA0034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B6AA00A0()
{
  unint64_t result = qword_1EB97D188;
  if (!qword_1EB97D188)
  {
    sub_1B6E313D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D188);
  }
  return result;
}

uint64_t sub_1B6AA00F8(uint64_t a1, uint64_t a2)
{
  sub_1B62F946C(0, qword_1EB97E760, (uint64_t (*)(uint64_t))type metadata accessor for EntityManager, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6AA018C(uint64_t a1)
{
  sub_1B62F946C(0, qword_1EB97E760, (uint64_t (*)(uint64_t))type metadata accessor for EntityManager, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1B6AA0250(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v155 = qword_1EB997A18;
  int v156 = 0;
  char v157 = 2;
  uint64_t v158 = 0;
  char v159 = 2;
  uint64_t v160 = 0;
  swift_retain();
  sub_1B63A93E0(2, (uint64_t)v89);
  swift_release();
  v138[0] = v89[0];
  v138[1] = v89[1];
  uint64_t v139 = v90;
  sub_1B62C9DA8(a1, (uint64_t)v138, 0x200000000, v91);
  sub_1B62CA210((uint64_t)v91, (uint64_t)v118, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v118[0])
  {
    long long v125 = v118[0];
    long long v126 = v118[1];
    uint64_t v127 = v119;
    if (v124 >= 1)
    {
      uint64_t v71 = v121;
      if (v121)
      {
        uint64_t v65 = v120;
        uint64_t v4 = v123[4];
        int v5 = *(unsigned __int8 *)(v122 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v86 = v123;
        uint64_t v53 = v123 + 8;
        uint64_t v56 = (uint64_t)(v123 + 6);
        uint64_t inited = type metadata accessor for ParticleInitScript(0);
        uint64_t v50 = inited - 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 0;
        int v62 = v5;
        uint64_t v68 = v4;
        do
        {
          uint64_t v7 = (unsigned int *)(v65 + 48 * v6);
          uint64_t v77 = *v7;
          uint64_t v74 = v7[1];
          uint64_t v8 = *((void *)v7 + 4);
          uint64_t v80 = *((void *)v7 + 3);
          unint64_t v83 = (uint64_t *)*((void *)v7 + 2);
          uint64_t v9 = *((void *)v7 + 5);
          if (v5)
          {
            unint64_t v10 = *(os_unfair_lock_s **)(v9 + 376);
            swift_retain();
            os_unfair_lock_lock(v10);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v4);
          sub_1B62CA210(v56, (uint64_t)v154, &qword_1EB97DE20);
          uint64_t v11 = v86[4];
          uint64_t v12 = *(void *)(*(void *)(*(void *)(*(void *)(v9 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v86[6] = ecs_stack_allocator_allocate(v11, 48 * v12, 8);
          v86[7] = v12;
          v53[1] = 0;
          _OWORD v53[2] = 0;
          *uint64_t v53 = 0;
          swift_release();
          uint64_t v13 = sub_1B62C9024(inited, (uint64_t)&off_1F0F796D0, v83, v80, v8, (uint64_t)v86);
          unint64_t v14 = v13;
          if (v83)
          {
            int v5 = v62;
            if (v8)
            {
              uint64_t v15 = *(void *)(*(void *)v50 + 72);
              do
              {
                sub_1B6AA1220(v14, a1, a2);
                v14 += v15;
                --v8;
              }
              while (v8);
            }
          }
          else
          {
            int v5 = v62;
            if (v77 != v74)
            {
              uint64_t v16 = *(void *)(*(void *)v50 + 72);
              uint64_t v17 = v74 - v77;
              unint64_t v18 = v13 + v16 * v77;
              do
              {
                sub_1B6AA1220(v18, a1, a2);
                v18 += v16;
                --v17;
              }
              while (v17);
            }
          }
          v128[0] = v125;
          v128[1] = v126;
          uint64_t v129 = v127;
          sub_1B6345178(v86, (unsigned __int16 **)v128, (uint64_t)v154);
          sub_1B634507C((char *)v9);
          uint64_t v4 = v68;
          ecs_stack_allocator_pop_snapshot(v68);
          if (v5)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 376));
          }
          swift_release();
          ++v6;
        }
        while (v6 != v71);
        sub_1B632F170(v91);
      }
    }
    sub_1B632F170(v91);
  }
  uint64_t v148 = qword_1EB997A18;
  int v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  char v152 = 2;
  uint64_t v153 = 0;
  swift_retain();
  sub_1B63A84C0(2, (uint64_t)v92);
  swift_release();
  v136[0] = v92[0];
  v136[1] = v92[1];
  uint64_t v137 = v93;
  sub_1B62C9DA8(a1, (uint64_t)v136, 0x200000000, v94);
  sub_1B62CA210((uint64_t)v94, (uint64_t)v108, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v108[0])
  {
    long long v115 = v108[0];
    long long v116 = v108[1];
    uint64_t v117 = v109;
    if (v114 >= 1)
    {
      uint64_t v72 = v111;
      if (v111)
      {
        uint64_t v69 = v110;
        uint64_t v19 = v113[4];
        int v20 = *(unsigned __int8 *)(v112 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v87 = v113;
        uint64_t v60 = v113 + 8;
        uint64_t v63 = (uint64_t)(v113 + 6);
        uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
        uint64_t v51 = updated - 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v21 = 0;
        int v54 = v20;
        uint64_t v57 = v19;
        do
        {
          id v22 = (unsigned int *)(v69 + 48 * v21);
          uint64_t v78 = *v22;
          uint64_t v75 = v22[1];
          uint64_t v23 = *((void *)v22 + 4);
          uint64_t v81 = *((void *)v22 + 3);
          char v84 = (uint64_t *)*((void *)v22 + 2);
          uint64_t v24 = *((void *)v22 + 5);
          if (v20)
          {
            id v25 = *(os_unfair_lock_s **)(v24 + 376);
            swift_retain();
            os_unfair_lock_lock(v25);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v19);
          sub_1B62CA210(v63, (uint64_t)v147, &qword_1EB97DE20);
          uint64_t v26 = v87[4];
          uint64_t v27 = *(void *)(*(void *)(*(void *)(*(void *)(v24 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v87[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
          v87[7] = v27;
          v60[1] = 0;
          _OWORD v60[2] = 0;
          void *v60 = 0;
          swift_release();
          uint64_t v28 = sub_1B62C9024(updated, (uint64_t)&off_1F0F82FB8, v84, v81, v23, (uint64_t)v87);
          unint64_t v29 = v28;
          if (v84)
          {
            int v20 = v54;
            if (v23)
            {
              uint64_t v30 = *(void *)(*(void *)v51 + 72);
              do
              {
                sub_1B6AA1220(v29, a1, a2);
                v29 += v30;
                --v23;
              }
              while (v23);
            }
          }
          else
          {
            int v20 = v54;
            if (v78 != v75)
            {
              uint64_t v31 = *(void *)(*(void *)v51 + 72);
              uint64_t v32 = v75 - v78;
              unint64_t v33 = v28 + v31 * v78;
              do
              {
                sub_1B6AA1220(v33, a1, a2);
                v33 += v31;
                --v32;
              }
              while (v32);
            }
          }
          v130[0] = v115;
          v130[1] = v116;
          uint64_t v131 = v117;
          sub_1B6345178(v87, (unsigned __int16 **)v130, (uint64_t)v147);
          sub_1B634507C((char *)v24);
          uint64_t v19 = v57;
          ecs_stack_allocator_pop_snapshot(v57);
          if (v20)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
          }
          swift_release();
          ++v21;
        }
        while (v21 != v72);
        sub_1B632F170(v94);
      }
    }
    sub_1B632F170(v94);
  }
  uint64_t v141 = qword_1EB997A18;
  int v142 = 0;
  char v143 = 2;
  uint64_t v144 = 0;
  char v145 = 2;
  uint64_t v146 = 0;
  swift_retain();
  sub_1B63ABE64(2, (uint64_t)v95);
  swift_release();
  v134[0] = v95[0];
  v134[1] = v95[1];
  uint64_t v135 = v96;
  sub_1B62C9DA8(a1, (uint64_t)v134, 0x200000000, v97);
  sub_1B62CA210((uint64_t)v97, (uint64_t)v98, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v98[0])
  {
    long long v105 = v98[0];
    long long v106 = v98[1];
    uint64_t v107 = v99;
    if (v104 > 0 && (uint64_t v73 = v101) != 0)
    {
      uint64_t v67 = v100;
      uint64_t v34 = v103[4];
      char v35 = *(unsigned char *)(v102 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v88 = v103;
      char v55 = v103 + 8;
      uint64_t v58 = (uint64_t)(v103 + 6);
      uint64_t v61 = type metadata accessor for GraphScript(0);
      uint64_t v52 = v61 - 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v36 = 0;
      char v64 = v35;
      uint64_t v70 = v34;
      do
      {
        size_t v37 = (unsigned int *)(v67 + 48 * v36);
        uint64_t v39 = *((void *)v37 + 4);
        uint64_t v38 = *((void *)v37 + 5);
        uint64_t v76 = v37[1];
        uint64_t v79 = *v37;
        uint64_t v82 = *((void *)v37 + 3);
        uint64_t v85 = (uint64_t *)*((void *)v37 + 2);
        if (v35)
        {
          uint64_t v40 = *(os_unfair_lock_s **)(v38 + 376);
          swift_retain();
          os_unfair_lock_lock(v40);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v38 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v34);
        sub_1B62CA210(v58, (uint64_t)v140, &qword_1EB97DE20);
        uint64_t v41 = v88[4];
        uint64_t v42 = *(void *)(*(void *)(*(void *)(*(void *)(v38 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v88[6] = ecs_stack_allocator_allocate(v41, 48 * v42, 8);
        v88[7] = v42;
        v55[1] = 0;
        _OWORD v55[2] = 0;
        *char v55 = 0;
        swift_release();
        uint64_t v43 = sub_1B62C9024(v61, (uint64_t)&off_1F0F55610, v85, v82, v39, (uint64_t)v88);
        char v44 = (int *)v43;
        if (v85)
        {
          if (v39)
          {
            uint64_t v45 = *(void *)(*(void *)v52 + 72);
            do
            {
              sub_1B6AA1B2C(v44, a1, a2);
              char v44 = (int *)((char *)v44 + v45);
              --v39;
            }
            while (v39);
          }
        }
        else if (v79 != v76)
        {
          uint64_t v46 = *(void *)(*(void *)v52 + 72);
          uint64_t v47 = v76 - v79;
          uint64_t v48 = (int *)(v43 + v46 * v79);
          do
          {
            sub_1B6AA1B2C(v48, a1, a2);
            uint64_t v48 = (int *)((char *)v48 + v46);
            --v47;
          }
          while (v47);
        }
        v132[0] = v105;
        v132[1] = v106;
        uint64_t v133 = v107;
        sub_1B6345178(v88, (unsigned __int16 **)v132, (uint64_t)v140);
        sub_1B634507C((char *)v38);
        uint64_t v34 = v70;
        ecs_stack_allocator_pop_snapshot(v70);
        char v35 = v64;
        if (v64)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 376));
        }
        swift_release();
        ++v36;
      }
      while (v36 != v73);
    }
    else
    {
      swift_retain();
      swift_retain();
      swift_retain();
    }
    sub_1B62CA064((uint64_t)v95);
    sub_1B62CA064((uint64_t)v92);
    sub_1B62CA064((uint64_t)v89);
    sub_1B632F170(v97);
    return sub_1B632F170(v97);
  }
  else
  {
    sub_1B62CA064((uint64_t)v95);
    sub_1B62CA064((uint64_t)v92);
    return (uint64_t *)sub_1B62CA064((uint64_t)v89);
  }
}

uint64_t *sub_1B6AA0DF4(uint64_t a1, uint64_t a2)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v53 = qword_1EB997A18;
  int v54 = 0;
  char v55 = 2;
  uint64_t v56 = 0;
  char v57 = 2;
  uint64_t v58 = 0;
  swift_retain();
  sub_1B63AB074(2, (uint64_t)v35);
  swift_release();
  v50[0] = v35[0];
  v50[1] = v35[1];
  uint64_t v51 = v36;
  sub_1B62C9DA8(a1, (uint64_t)v50, 0x200000000, v37);
  sub_1B62CA210((uint64_t)v37, (uint64_t)v38, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v38[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v35);
  }
  long long v45 = v38[0];
  long long v46 = v38[1];
  uint64_t v47 = v39;
  if (v44 > 0 && (uint64_t v29 = v41) != 0)
  {
    uint64_t v27 = v40;
    uint64_t v4 = v43;
    uint64_t v5 = v43[4];
    int v6 = *(unsigned __int8 *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    sub_1B6971BE0();
    uint64_t v34 = v4;
    uint64_t v23 = v4 + 8;
    uint64_t v24 = (uint64_t)(v4 + 6);
    uint64_t v25 = v7;
    uint64_t v22 = v7 - 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v8 = 0;
    int v26 = v6;
    uint64_t v28 = v5;
    do
    {
      uint64_t v9 = (unsigned int *)(v27 + 48 * v8);
      uint64_t v11 = *((void *)v9 + 4);
      uint64_t v10 = *((void *)v9 + 5);
      uint64_t v30 = v9[1];
      uint64_t v31 = *v9;
      uint64_t v32 = *((void *)v9 + 3);
      unint64_t v33 = (uint64_t *)*((void *)v9 + 2);
      if (v6)
      {
        uint64_t v12 = *(os_unfair_lock_s **)(v10 + 376);
        swift_retain();
        os_unfair_lock_lock(v12);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v5);
      sub_1B62CA210(v24, (uint64_t)v52, &qword_1EB97DE20);
      uint64_t v13 = v34[4];
      uint64_t v14 = *(void *)(*(void *)(*(void *)(*(void *)(v10 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v34[6] = ecs_stack_allocator_allocate(v13, 48 * v14, 8);
      v34[7] = v14;
      v23[1] = 0;
      _OWORD v23[2] = 0;
      *uint64_t v23 = 0;
      swift_release();
      uint64_t v15 = sub_1B62C9024(v25, (uint64_t)&off_1F0F61BF0, v33, v32, v11, (uint64_t)v34);
      uint64_t v16 = v15;
      if (v33)
      {
        if (v11)
        {
          uint64_t v17 = *(void *)(*(void *)v22 + 72);
          do
          {
            sub_1B6AA2534(v16, a1, a2);
            v16 += v17;
            --v11;
          }
          while (v11);
        }
      }
      else if (v31 != v30)
      {
        uint64_t v18 = *(void *)(*(void *)v22 + 72);
        uint64_t v19 = v30 - v31;
        uint64_t v20 = v15 + v18 * v31;
        do
        {
          sub_1B6AA2534(v20, a1, a2);
          v20 += v18;
          --v19;
        }
        while (v19);
      }
      v48[0] = v45;
      v48[1] = v46;
      uint64_t v49 = v47;
      sub_1B6345178(v34, (unsigned __int16 **)v48, (uint64_t)v52);
      sub_1B634507C((char *)v10);
      uint64_t v5 = v28;
      ecs_stack_allocator_pop_snapshot(v28);
      int v6 = v26;
      if (v26)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 376));
      }
      swift_release();
      ++v8;
    }
    while (v8 != v29);
    sub_1B62CA064((uint64_t)v35);
    sub_1B632F170(v37);
  }
  else
  {
    sub_1B62CA064((uint64_t)v35);
  }
  return sub_1B632F170(v37);
}

unint64_t sub_1B6AA1220(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(result + 32);
  uint64_t v80 = v3[2];
  if (!v80) {
    return result;
  }
  unint64_t v5 = result;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1B6C166E4(v3);
  }
  unint64_t result = type metadata accessor for BundleInfo();
  uint64_t v6 = 0;
  uint64_t v79 = *(int *)(result + 24);
  uint64_t v65 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v66 = v5;
  uint64_t v67 = a3;
  while (1)
  {
    uint64_t v10 = *(void *)(a3 + v79);
    *(void *)(v5 + 32) = v3;
    uint64_t v11 = &v3[4 * v6];
    unint64_t v14 = v11[4];
    uint64_t v12 = v11 + 4;
    unint64_t v13 = v14;
    unint64_t v15 = v14 >> 60;
    if (v14 >> 60 == 9) {
      break;
    }
    if (v15 != 3) {
      goto LABEL_8;
    }
    int v17 = *(_DWORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    int v16 = *(_DWORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
    unint64_t v18 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v19 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v71 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v72 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
    uint64_t v77 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
    char v73 = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
    __int16 v75 = *(_WORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x42);
    int v70 = v16;
    if (v10 >= 2026)
    {
      swift_retain();
      uint64_t KeyPath = v19;
      sub_1B62C6AA8(v13);
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    if (v17 == -1 && v16 == 0) {
      goto LABEL_69;
    }
    if (v17 < 0 || v65[1] <= v17) {
      goto LABEL_50;
    }
    uint64_t v21 = *v65;
    uint64_t v22 = *v65 + 12 * v17;
    if (v16 != -1 && *(_DWORD *)(v22 + 8) != v16) {
      goto LABEL_50;
    }
    uint64_t v24 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v21 + 12 * v17) + 32);
    uint64_t v25 = *(void *)(v24 + 48);
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      int v27 = *(__int16 *)(v22 + 4);
      uint64_t v28 = (void *)(v25 + 56);
      while ((ValueMetadata *)*(v28 - 3) != &type metadata for EmitterShape)
      {
        v28 += 5;
        if (!--v26) {
          goto LABEL_27;
        }
      }
      uint64_t v60 = *(void *)(v24 + 128) + *v28 + 224 * v27;
      if (*(unsigned char *)(v60 + 4) == 1 && !*(_DWORD *)v60)
      {
LABEL_69:
        swift_retain();
        uint64_t KeyPath = v19;
        sub_1B62C6AA8(v13);
        swift_bridgeObjectRetain();
        unint64_t v5 = v66;
        a3 = v67;
        goto LABEL_6;
      }
      goto LABEL_66;
    }
LABEL_27:
    uint64_t v29 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v21 + 12 * v17 + 6) + 32) + 16);
    uint64_t v30 = *(void *)(v29 + 128);
    if (!*(void *)(v30 + 16)
      || (unint64_t v31 = sub_1B62C1A30((uint64_t)&type metadata for ParticlePlaneCollider), (v32 & 1) == 0)
      || *(ValueMetadata **)(*(void *)(v29 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) != &type metadata for ParticlePlaneCollider)
    {
LABEL_50:
      if (v17 < 0
        || v65[1] <= v17
        || (uint64_t v33 = *v65, v16 != -1) && *(_DWORD *)(v33 + 12 * v17 + 8) != v16
        || (uint64_t v34 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v33 + 12 * v17 + 6) + 32) + 16),
            uint64_t v35 = *(void *)(v34 + 128),
            !*(void *)(v35 + 16))
        || (unint64_t v36 = sub_1B62C1A30((uint64_t)&type metadata for ParticleSphereCollider), (v37 & 1) == 0)
        || *(ValueMetadata **)(*(void *)(v34 + 24) + 16 * *(void *)(*(void *)(v35 + 56) + 8 * v36) + 32) != &type metadata for ParticleSphereCollider)
      {
        if (v17 < 0
          || v65[1] <= v17
          || (uint64_t v38 = *v65, v16 != -1) && *(_DWORD *)(v38 + 12 * v17 + 8) != v16
          || (uint64_t v39 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v38 + 12 * v17 + 6) + 32) + 16),
              uint64_t v40 = *(void *)(v39 + 128),
              !*(void *)(v40 + 16))
          || (unint64_t v41 = sub_1B62C1A30((uint64_t)&type metadata for ParticleBoxCollider), (v42 & 1) == 0)
          || *(ValueMetadata **)(*(void *)(v39 + 24) + 16 * *(void *)(*(void *)(v40 + 56) + 8 * v41) + 32) != &type metadata for ParticleBoxCollider)
        {
          if (v17 < 0) {
            goto LABEL_69;
          }
          if (v65[1] <= v17) {
            goto LABEL_69;
          }
          uint64_t v43 = *v65;
          if (v16 != -1 && *(_DWORD *)(v43 + 12 * v17 + 8) != v16) {
            goto LABEL_69;
          }
          uint64_t v44 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v43 + 12 * v17 + 6) + 32) + 16);
          uint64_t v45 = *(void *)(v44 + 128);
          if (!*(void *)(v45 + 16)) {
            goto LABEL_69;
          }
          unint64_t v46 = sub_1B62C1A30((uint64_t)&type metadata for ParticleCylinderCollider);
          if ((v47 & 1) == 0
            || *(ValueMetadata **)(*(void *)(v44 + 24) + 16 * *(void *)(*(void *)(v45 + 56) + 8 * v46) + 32) != &type metadata for ParticleCylinderCollider)
          {
            goto LABEL_69;
          }
        }
      }
    }
LABEL_66:
    swift_retain();
    sub_1B62C6AA8(v13);
    swift_bridgeObjectRetain();
    sub_1B6E32738();
    unint64_t result = swift_conformsToProtocol2();
    if (!result) {
      goto LABEL_78;
    }
    unint64_t v5 = v66;
    a3 = v67;
    if (swift_dynamicCastMetatype())
    {
      uint64_t KeyPath = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v77 = 0;
      __int16 v75 = 128;
      char v73 = 1;
      uint64_t v71 = 0x6C616353666C6168;
      unint64_t v18 = 0xE900000000000065;
      uint64_t v72 = MEMORY[0x1E4FBB470];
    }
    else
    {
      if (swift_dynamicCastMetatype())
      {
        uint64_t KeyPath = swift_getKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v61 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
        int v62 = &qword_1EB980E90;
      }
      else
      {
        if (!swift_dynamicCastMetatype())
        {
          uint64_t KeyPath = v19;
          goto LABEL_6;
        }
        uint64_t KeyPath = swift_getKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v61 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
        int v62 = (unint64_t *)&qword_1EB980EB0;
      }
      sub_1B6AA2488(0, v62, v61);
      uint64_t v72 = v63;
      uint64_t v77 = 0;
      __int16 v75 = 128;
      char v73 = 1;
      uint64_t v71 = 0x6C616353666C6168;
      unint64_t v18 = 0xE900000000000065;
    }
LABEL_6:
    uint64_t v8 = swift_allocObject();
    *(_DWORD *)(v8 + 16) = v17;
    *(_DWORD *)(v8 + 20) = v70;
    *(void *)(v8 + 24) = v71;
    *(void *)(v8 + 32) = v18;
    *(void *)(v8 + 40) = KeyPath;
    *(void *)(v8 + 48) = v72;
    *(void *)(v8 + 56) = v77;
    *(unsigned char *)(v8 + 64) = v73;
    unint64_t v9 = 0x3000000000000000;
    *(_WORD *)(v8 + 66) = v75;
LABEL_7:
    sub_1B62C6A70(v13);
    unint64_t result = sub_1B62C6A70(v13);
    *uint64_t v12 = v9 | v8;
    v12[2] = 0;
    *((unsigned char *)v12 + 24) = 1;
LABEL_8:
    ++v6;
    uint64_t v3 = *(void **)(v5 + 32);
    if (v6 == v80) {
      return result;
    }
  }
  unint64_t v48 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v49 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v50 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
  uint64_t v74 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v76 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
  char v51 = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
  __int16 v52 = *(_WORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x3A);
  char v78 = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
  uint64_t v68 = v12;
  unint64_t v69 = v13;
  if (v10 >= 2026)
  {
    sub_1B62C6AA8(v13);
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_57;
  }
  sub_1B62C6AA8(v13);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E32738();
  unint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_dynamicCastMetatype())
    {
      uint64_t v53 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v54 = 0;
      __int16 v52 = 128;
      char v51 = 1;
      uint64_t v55 = 0x6C616353666C6168;
      unint64_t v48 = 0xE900000000000065;
      uint64_t v49 = v53;
      uint64_t v50 = MEMORY[0x1E4FBB470];
LABEL_63:
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v55;
      *(void *)(v8 + 24) = v48;
      *(void *)(v8 + 32) = v49;
      *(void *)(v8 + 40) = v50;
      *(void *)(v8 + 48) = v54;
      *(unsigned char *)(v8 + 56) = v51;
      *(_WORD *)(v8 + 58) = v52;
      unint64_t v9 = 0x9000000000000000;
      *(unsigned char *)(v8 + 60) = v78;
      unint64_t v5 = v66;
      a3 = v67;
      uint64_t v12 = v68;
      unint64_t v13 = v69;
      goto LABEL_7;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v56 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      char v57 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
      uint64_t v58 = &qword_1EB980E90;
LABEL_62:
      sub_1B6AA2488(0, v58, v57);
      uint64_t v50 = v59;
      uint64_t v54 = 0;
      __int16 v52 = 128;
      char v51 = 1;
      uint64_t v55 = 0x6C616353666C6168;
      unint64_t v48 = 0xE900000000000065;
      uint64_t v49 = v56;
      goto LABEL_63;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v56 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      char v57 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
      uint64_t v58 = (unint64_t *)&qword_1EB980EB0;
      goto LABEL_62;
    }
LABEL_57:
    uint64_t v55 = v74;
    uint64_t v54 = v76;
    goto LABEL_63;
  }
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

int *sub_1B6AA1B2C(int *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)result;
  uint64_t v80 = *(void *)(*(void *)result + 16);
  if (!v80) {
    return result;
  }
  unint64_t v5 = result;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1B6C166E4(v3);
  }
  unint64_t result = (int *)type metadata accessor for BundleInfo();
  uint64_t v6 = 0;
  uint64_t v79 = result[6];
  uint64_t v65 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v66 = v5;
  uint64_t v67 = a3;
  while (1)
  {
    uint64_t v10 = *(void *)(a3 + v79);
    *(void *)unint64_t v5 = v3;
    uint64_t v11 = &v3[4 * v6];
    unint64_t v14 = v11[4];
    uint64_t v12 = v11 + 4;
    unint64_t v13 = v14;
    unint64_t v15 = v14 >> 60;
    if (v14 >> 60 == 9) {
      break;
    }
    if (v15 != 3) {
      goto LABEL_8;
    }
    int v17 = *(_DWORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    int v16 = *(_DWORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
    unint64_t v18 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v19 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v71 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v72 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
    uint64_t v77 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
    char v73 = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
    __int16 v75 = *(_WORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x42);
    int v70 = v16;
    if (v10 >= 2026)
    {
      swift_retain();
      uint64_t KeyPath = v19;
      sub_1B62C6AA8(v13);
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    if (v17 == -1 && v16 == 0) {
      goto LABEL_69;
    }
    if (v17 < 0 || v65[1] <= v17) {
      goto LABEL_50;
    }
    uint64_t v21 = *v65;
    uint64_t v22 = *v65 + 12 * v17;
    if (v16 != -1 && *(_DWORD *)(v22 + 8) != v16) {
      goto LABEL_50;
    }
    uint64_t v24 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v21 + 12 * v17) + 32);
    uint64_t v25 = *(void *)(v24 + 48);
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      int v27 = *(__int16 *)(v22 + 4);
      uint64_t v28 = (void *)(v25 + 56);
      while ((ValueMetadata *)*(v28 - 3) != &type metadata for EmitterShape)
      {
        v28 += 5;
        if (!--v26) {
          goto LABEL_27;
        }
      }
      uint64_t v60 = *(void *)(v24 + 128) + *v28 + 224 * v27;
      if (*(unsigned char *)(v60 + 4) == 1 && !*(_DWORD *)v60)
      {
LABEL_69:
        swift_retain();
        uint64_t KeyPath = v19;
        sub_1B62C6AA8(v13);
        swift_bridgeObjectRetain();
        unint64_t v5 = v66;
        a3 = v67;
        goto LABEL_6;
      }
      goto LABEL_66;
    }
LABEL_27:
    uint64_t v29 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v21 + 12 * v17 + 6) + 32) + 16);
    uint64_t v30 = *(void *)(v29 + 128);
    if (!*(void *)(v30 + 16)
      || (unint64_t v31 = sub_1B62C1A30((uint64_t)&type metadata for ParticlePlaneCollider), (v32 & 1) == 0)
      || *(ValueMetadata **)(*(void *)(v29 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) != &type metadata for ParticlePlaneCollider)
    {
LABEL_50:
      if (v17 < 0
        || v65[1] <= v17
        || (uint64_t v33 = *v65, v16 != -1) && *(_DWORD *)(v33 + 12 * v17 + 8) != v16
        || (uint64_t v34 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v33 + 12 * v17 + 6) + 32) + 16),
            uint64_t v35 = *(void *)(v34 + 128),
            !*(void *)(v35 + 16))
        || (unint64_t v36 = sub_1B62C1A30((uint64_t)&type metadata for ParticleSphereCollider), (v37 & 1) == 0)
        || *(ValueMetadata **)(*(void *)(v34 + 24) + 16 * *(void *)(*(void *)(v35 + 56) + 8 * v36) + 32) != &type metadata for ParticleSphereCollider)
      {
        if (v17 < 0
          || v65[1] <= v17
          || (uint64_t v38 = *v65, v16 != -1) && *(_DWORD *)(v38 + 12 * v17 + 8) != v16
          || (uint64_t v39 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v38 + 12 * v17 + 6) + 32) + 16),
              uint64_t v40 = *(void *)(v39 + 128),
              !*(void *)(v40 + 16))
          || (unint64_t v41 = sub_1B62C1A30((uint64_t)&type metadata for ParticleBoxCollider), (v42 & 1) == 0)
          || *(ValueMetadata **)(*(void *)(v39 + 24) + 16 * *(void *)(*(void *)(v40 + 56) + 8 * v41) + 32) != &type metadata for ParticleBoxCollider)
        {
          if (v17 < 0) {
            goto LABEL_69;
          }
          if (v65[1] <= v17) {
            goto LABEL_69;
          }
          uint64_t v43 = *v65;
          if (v16 != -1 && *(_DWORD *)(v43 + 12 * v17 + 8) != v16) {
            goto LABEL_69;
          }
          uint64_t v44 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v43 + 12 * v17 + 6) + 32) + 16);
          uint64_t v45 = *(void *)(v44 + 128);
          if (!*(void *)(v45 + 16)) {
            goto LABEL_69;
          }
          unint64_t v46 = sub_1B62C1A30((uint64_t)&type metadata for ParticleCylinderCollider);
          if ((v47 & 1) == 0
            || *(ValueMetadata **)(*(void *)(v44 + 24) + 16 * *(void *)(*(void *)(v45 + 56) + 8 * v46) + 32) != &type metadata for ParticleCylinderCollider)
          {
            goto LABEL_69;
          }
        }
      }
    }
LABEL_66:
    swift_retain();
    sub_1B62C6AA8(v13);
    swift_bridgeObjectRetain();
    sub_1B6E32738();
    unint64_t result = (int *)swift_conformsToProtocol2();
    if (!result) {
      goto LABEL_78;
    }
    unint64_t v5 = v66;
    a3 = v67;
    if (swift_dynamicCastMetatype())
    {
      uint64_t KeyPath = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v77 = 0;
      __int16 v75 = 128;
      char v73 = 1;
      uint64_t v71 = 0x6C616353666C6168;
      unint64_t v18 = 0xE900000000000065;
      uint64_t v72 = MEMORY[0x1E4FBB470];
    }
    else
    {
      if (swift_dynamicCastMetatype())
      {
        uint64_t KeyPath = swift_getKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v61 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
        int v62 = &qword_1EB980E90;
      }
      else
      {
        if (!swift_dynamicCastMetatype())
        {
          uint64_t KeyPath = v19;
          goto LABEL_6;
        }
        uint64_t KeyPath = swift_getKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v61 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
        int v62 = (unint64_t *)&qword_1EB980EB0;
      }
      sub_1B6AA2488(0, v62, v61);
      uint64_t v72 = v63;
      uint64_t v77 = 0;
      __int16 v75 = 128;
      char v73 = 1;
      uint64_t v71 = 0x6C616353666C6168;
      unint64_t v18 = 0xE900000000000065;
    }
LABEL_6:
    uint64_t v8 = swift_allocObject();
    *(_DWORD *)(v8 + 16) = v17;
    *(_DWORD *)(v8 + 20) = v70;
    *(void *)(v8 + 24) = v71;
    *(void *)(v8 + 32) = v18;
    *(void *)(v8 + 40) = KeyPath;
    *(void *)(v8 + 48) = v72;
    *(void *)(v8 + 56) = v77;
    *(unsigned char *)(v8 + 64) = v73;
    unint64_t v9 = 0x3000000000000000;
    *(_WORD *)(v8 + 66) = v75;
LABEL_7:
    sub_1B62C6A70(v13);
    unint64_t result = (int *)sub_1B62C6A70(v13);
    *uint64_t v12 = v9 | v8;
    v12[2] = 0;
    *((unsigned char *)v12 + 24) = 1;
LABEL_8:
    ++v6;
    uint64_t v3 = *(void **)v5;
    if (v6 == v80) {
      return result;
    }
  }
  unint64_t v48 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v49 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v50 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
  uint64_t v74 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v76 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
  char v51 = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
  __int16 v52 = *(_WORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x3A);
  char v78 = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
  uint64_t v68 = v12;
  unint64_t v69 = v13;
  if (v10 >= 2026)
  {
    sub_1B62C6AA8(v13);
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_57;
  }
  sub_1B62C6AA8(v13);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E32738();
  unint64_t result = (int *)swift_conformsToProtocol2();
  if (result)
  {
    if (swift_dynamicCastMetatype())
    {
      uint64_t v53 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v54 = 0;
      __int16 v52 = 128;
      char v51 = 1;
      uint64_t v55 = 0x6C616353666C6168;
      unint64_t v48 = 0xE900000000000065;
      uint64_t v49 = v53;
      uint64_t v50 = MEMORY[0x1E4FBB470];
LABEL_63:
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v55;
      *(void *)(v8 + 24) = v48;
      *(void *)(v8 + 32) = v49;
      *(void *)(v8 + 40) = v50;
      *(void *)(v8 + 48) = v54;
      *(unsigned char *)(v8 + 56) = v51;
      *(_WORD *)(v8 + 58) = v52;
      unint64_t v9 = 0x9000000000000000;
      *(unsigned char *)(v8 + 60) = v78;
      unint64_t v5 = v66;
      a3 = v67;
      uint64_t v12 = v68;
      unint64_t v13 = v69;
      goto LABEL_7;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v56 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      char v57 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
      uint64_t v58 = &qword_1EB980E90;
LABEL_62:
      sub_1B6AA2488(0, v58, v57);
      uint64_t v50 = v59;
      uint64_t v54 = 0;
      __int16 v52 = 128;
      char v51 = 1;
      uint64_t v55 = 0x6C616353666C6168;
      unint64_t v48 = 0xE900000000000065;
      uint64_t v49 = v56;
      goto LABEL_63;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v56 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      char v57 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
      uint64_t v58 = (unint64_t *)&qword_1EB980EB0;
      goto LABEL_62;
    }
LABEL_57:
    uint64_t v55 = v74;
    uint64_t v54 = v76;
    goto LABEL_63;
  }
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_1B6AA2438()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 61, 7);
}

void sub_1B6AA2488(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6645830();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB470], v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B6AA24F4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 68, 7);
}

void sub_1B6AA2534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B6971BE0();
  unint64_t v5 = (void *)(a1 + *(int *)(v4 + 60));
  uint64_t v6 = *(void *)(*v5 + 16);
  int v156 = v5;
  if (!v6)
  {
LABEL_76:
    uint64_t v66 = *(void *)(v5[1] + 16);
    if (!v66) {
      return;
    }
    uint64_t v67 = 0;
    uint64_t v155 = *(void *)(a3 + *(int *)(type metadata accessor for BundleInfo() + 24));
    uint64_t v129 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v131 = v66;
    while (1)
    {
      uint64_t v71 = (void *)v5[1];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v5[1] = v71;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v71 = sub_1B6C166E4(v71);
        v5[1] = v71;
      }
      char v73 = &v71[4 * v67];
      unint64_t v76 = v73[4];
      __int16 v75 = v73 + 4;
      unint64_t v74 = v76;
      unint64_t v77 = v76 >> 60;
      if (v76 >> 60 == 9)
      {
        unint64_t v110 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v111 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v112 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v145 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v149 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
        char v113 = *(unsigned char *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
        __int16 v114 = *(_WORD *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x3A);
        char v153 = *(unsigned char *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
        uint64_t v133 = v75;
        unint64_t v135 = v74;
        if (v155 >= 2026)
        {
          sub_1B62C6AA8(v74);
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          sub_1B62C6AA8(v74);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1B6E32738();
          if (!swift_conformsToProtocol2()) {
            goto LABEL_153;
          }
          if (swift_dynamicCastMetatype())
          {
            uint64_t KeyPath = swift_getKeyPath();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v116 = 0;
            __int16 v114 = 128;
            char v113 = 1;
            uint64_t v117 = 0x6C616353666C6168;
            unint64_t v110 = 0xE900000000000065;
            uint64_t v111 = KeyPath;
            uint64_t v112 = MEMORY[0x1E4FBB470];
LABEL_138:
            uint64_t v69 = swift_allocObject();
            *(void *)(v69 + 16) = v117;
            *(void *)(v69 + 24) = v110;
            *(void *)(v69 + 32) = v111;
            *(void *)(v69 + 40) = v112;
            *(void *)(v69 + 48) = v116;
            *(unsigned char *)(v69 + 56) = v113;
            *(_WORD *)(v69 + 58) = v114;
            unint64_t v70 = 0x9000000000000000;
            *(unsigned char *)(v69 + 60) = v153;
            unint64_t v5 = v156;
            uint64_t v66 = v131;
            __int16 v75 = v133;
            unint64_t v74 = v135;
            goto LABEL_80;
          }
          if (swift_dynamicCastMetatype())
          {
            uint64_t v118 = swift_getKeyPath();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v119 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
            uint64_t v120 = &qword_1EB980E90;
LABEL_137:
            sub_1B6AA2488(0, v120, v119);
            uint64_t v112 = v121;
            uint64_t v116 = 0;
            __int16 v114 = 128;
            char v113 = 1;
            uint64_t v117 = 0x6C616353666C6168;
            unint64_t v110 = 0xE900000000000065;
            uint64_t v111 = v118;
            goto LABEL_138;
          }
          if (swift_dynamicCastMetatype())
          {
            uint64_t v118 = swift_getKeyPath();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v119 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
            uint64_t v120 = (unint64_t *)&qword_1EB980EB0;
            goto LABEL_137;
          }
        }
        uint64_t v117 = v145;
        uint64_t v116 = v149;
        goto LABEL_138;
      }
      if (v77 != 3) {
        goto LABEL_81;
      }
      int v79 = *(_DWORD *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v78 = *(_DWORD *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
      unint64_t v80 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v81 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v139 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v141 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v152 = *(void *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      char v144 = *(unsigned char *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      __int16 v148 = *(_WORD *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 0x42);
      int v137 = v78;
      if (v155 >= 2026)
      {
        swift_retain();
        uint64_t v68 = v81;
        sub_1B62C6AA8(v74);
        swift_bridgeObjectRetain();
        goto LABEL_79;
      }
      if (v79 == -1 && v78 == 0) {
        goto LABEL_144;
      }
      if (v79 < 0 || v129[1] <= v79) {
        goto LABEL_125;
      }
      uint64_t v83 = *v129;
      uint64_t v84 = *v129 + 12 * v79;
      if (v78 != -1 && *(_DWORD *)(v84 + 8) != v78) {
        goto LABEL_125;
      }
      uint64_t v86 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v83 + 12 * v79) + 32);
      uint64_t v87 = *(void *)(v86 + 48);
      uint64_t v88 = *(void *)(v87 + 16);
      if (v88)
      {
        int v89 = *(__int16 *)(v84 + 4);
        uint64_t v90 = (void *)(v87 + 56);
        while ((ValueMetadata *)*(v90 - 3) != &type metadata for EmitterShape)
        {
          v90 += 5;
          if (!--v88) {
            goto LABEL_102;
          }
        }
        uint64_t v122 = *(void *)(v86 + 128) + *v90 + 224 * v89;
        if (*(unsigned char *)(v122 + 4) == 1 && !*(_DWORD *)v122)
        {
LABEL_144:
          swift_retain();
          uint64_t v68 = v81;
          sub_1B62C6AA8(v74);
          swift_bridgeObjectRetain();
          unint64_t v5 = v156;
          uint64_t v66 = v131;
          goto LABEL_79;
        }
        goto LABEL_141;
      }
LABEL_102:
      uint64_t v91 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v83 + 12 * v79 + 6) + 32) + 16);
      uint64_t v92 = *(void *)(v91 + 128);
      if (!*(void *)(v92 + 16)
        || (unint64_t v93 = sub_1B62C1A30((uint64_t)&type metadata for ParticlePlaneCollider), (v94 & 1) == 0)
        || *(ValueMetadata **)(*(void *)(v91 + 24) + 16 * *(void *)(*(void *)(v92 + 56) + 8 * v93) + 32) != &type metadata for ParticlePlaneCollider)
      {
LABEL_125:
        if (v79 < 0
          || v129[1] <= v79
          || (uint64_t v95 = *v129, v78 != -1) && *(_DWORD *)(v95 + 12 * v79 + 8) != v78
          || (uint64_t v96 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v95 + 12 * v79 + 6) + 32) + 16),
              uint64_t v97 = *(void *)(v96 + 128),
              !*(void *)(v97 + 16))
          || (unint64_t v98 = sub_1B62C1A30((uint64_t)&type metadata for ParticleSphereCollider), (v99 & 1) == 0)
          || *(ValueMetadata **)(*(void *)(v96 + 24) + 16 * *(void *)(*(void *)(v97 + 56) + 8 * v98) + 32) != &type metadata for ParticleSphereCollider)
        {
          if (v79 < 0
            || v129[1] <= v79
            || (uint64_t v100 = *v129, v78 != -1) && *(_DWORD *)(v100 + 12 * v79 + 8) != v78
            || (uint64_t v101 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v100 + 12 * v79 + 6) + 32)
                                 + 16),
                uint64_t v102 = *(void *)(v101 + 128),
                !*(void *)(v102 + 16))
            || (unint64_t v103 = sub_1B62C1A30((uint64_t)&type metadata for ParticleBoxCollider), (v104 & 1) == 0)
            || *(ValueMetadata **)(*(void *)(v101 + 24) + 16 * *(void *)(*(void *)(v102 + 56) + 8 * v103) + 32) != &type metadata for ParticleBoxCollider)
          {
            if (v79 < 0) {
              goto LABEL_144;
            }
            if (v129[1] <= v79) {
              goto LABEL_144;
            }
            uint64_t v105 = *v129;
            if (v78 != -1 && *(_DWORD *)(v105 + 12 * v79 + 8) != v78) {
              goto LABEL_144;
            }
            uint64_t v106 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v105 + 12 * v79 + 6) + 32) + 16);
            uint64_t v107 = *(void *)(v106 + 128);
            if (!*(void *)(v107 + 16)) {
              goto LABEL_144;
            }
            unint64_t v108 = sub_1B62C1A30((uint64_t)&type metadata for ParticleCylinderCollider);
            if ((v109 & 1) == 0
              || *(ValueMetadata **)(*(void *)(v106 + 24) + 16 * *(void *)(*(void *)(v107 + 56) + 8 * v108) + 32) != &type metadata for ParticleCylinderCollider)
            {
              goto LABEL_144;
            }
          }
        }
      }
LABEL_141:
      swift_retain();
      sub_1B62C6AA8(v74);
      swift_bridgeObjectRetain();
      sub_1B6E32738();
      if (!swift_conformsToProtocol2()) {
        goto LABEL_155;
      }
      unint64_t v5 = v156;
      uint64_t v66 = v131;
      if (swift_dynamicCastMetatype())
      {
        uint64_t v68 = swift_getKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v152 = 0;
        __int16 v148 = 128;
        char v144 = 1;
        uint64_t v139 = 0x6C616353666C6168;
        unint64_t v80 = 0xE900000000000065;
        uint64_t v141 = MEMORY[0x1E4FBB470];
      }
      else
      {
        if (swift_dynamicCastMetatype())
        {
          uint64_t v68 = swift_getKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v123 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
          uint64_t v124 = &qword_1EB980E90;
        }
        else
        {
          if (!swift_dynamicCastMetatype())
          {
            uint64_t v68 = v81;
            goto LABEL_79;
          }
          uint64_t v68 = swift_getKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v123 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
          uint64_t v124 = (unint64_t *)&qword_1EB980EB0;
        }
        sub_1B6AA2488(0, v124, v123);
        uint64_t v141 = v125;
        uint64_t v152 = 0;
        __int16 v148 = 128;
        char v144 = 1;
        uint64_t v139 = 0x6C616353666C6168;
        unint64_t v80 = 0xE900000000000065;
      }
LABEL_79:
      uint64_t v69 = swift_allocObject();
      *(_DWORD *)(v69 + 16) = v79;
      *(_DWORD *)(v69 + 20) = v137;
      *(void *)(v69 + 24) = v139;
      *(void *)(v69 + 32) = v80;
      *(void *)(v69 + 40) = v68;
      *(void *)(v69 + 48) = v141;
      *(void *)(v69 + 56) = v152;
      *(unsigned char *)(v69 + 64) = v144;
      unint64_t v70 = 0x3000000000000000;
      *(_WORD *)(v69 + 66) = v148;
LABEL_80:
      sub_1B62C6A70(v74);
      sub_1B62C6A70(v74);
      *__int16 v75 = v70 | v69;
      v75[2] = 0;
      *((unsigned char *)v75 + 24) = 1;
LABEL_81:
      if (++v67 == v66) {
        return;
      }
    }
  }
  uint64_t v7 = 0;
  uint64_t v154 = *(void *)(a3 + *(int *)(type metadata accessor for BundleInfo() + 24));
  uint64_t v128 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v130 = v6;
  while (1)
  {
    uint64_t v11 = (void *)*v5;
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v5 = v11;
    if ((v12 & 1) == 0)
    {
      uint64_t v11 = sub_1B6C166E4(v11);
      *unint64_t v5 = v11;
    }
    unint64_t v13 = &v11[4 * v7];
    unint64_t v16 = v13[4];
    unint64_t v15 = v13 + 4;
    unint64_t v14 = v16;
    unint64_t v17 = v16 >> 60;
    if (v16 >> 60 == 9) {
      break;
    }
    if (v17 != 3) {
      goto LABEL_6;
    }
    int v19 = *(_DWORD *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    int v18 = *(_DWORD *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
    unint64_t v20 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v21 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v138 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v140 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
    uint64_t v150 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
    char v142 = *(unsigned char *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
    __int16 v146 = *(_WORD *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x42);
    int v136 = v18;
    if (v154 >= 2026)
    {
      swift_retain();
      uint64_t v8 = v21;
      sub_1B62C6AA8(v14);
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
    if (v19 == -1 && v18 == 0) {
      goto LABEL_69;
    }
    if (v19 < 0 || v128[1] <= v19) {
      goto LABEL_50;
    }
    uint64_t v23 = *v128;
    uint64_t v24 = *v128 + 12 * v19;
    if (v18 != -1 && *(_DWORD *)(v24 + 8) != v18) {
      goto LABEL_50;
    }
    uint64_t v26 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v23 + 12 * v19) + 32);
    uint64_t v27 = *(void *)(v26 + 48);
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      int v29 = *(__int16 *)(v24 + 4);
      uint64_t v30 = (void *)(v27 + 56);
      while ((ValueMetadata *)*(v30 - 3) != &type metadata for EmitterShape)
      {
        v30 += 5;
        if (!--v28) {
          goto LABEL_27;
        }
      }
      uint64_t v62 = *(void *)(v26 + 128) + *v30 + 224 * v29;
      if (*(unsigned char *)(v62 + 4) == 1 && !*(_DWORD *)v62)
      {
LABEL_69:
        swift_retain();
        uint64_t v8 = v21;
        sub_1B62C6AA8(v14);
        swift_bridgeObjectRetain();
        unint64_t v5 = v156;
        uint64_t v6 = v130;
        goto LABEL_4;
      }
      goto LABEL_66;
    }
LABEL_27:
    uint64_t v31 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v23 + 12 * v19 + 6) + 32) + 16);
    uint64_t v32 = *(void *)(v31 + 128);
    if (!*(void *)(v32 + 16)
      || (unint64_t v33 = sub_1B62C1A30((uint64_t)&type metadata for ParticlePlaneCollider), (v34 & 1) == 0)
      || *(ValueMetadata **)(*(void *)(v31 + 24) + 16 * *(void *)(*(void *)(v32 + 56) + 8 * v33) + 32) != &type metadata for ParticlePlaneCollider)
    {
LABEL_50:
      if (v19 < 0
        || v128[1] <= v19
        || (uint64_t v35 = *v128, v18 != -1) && *(_DWORD *)(v35 + 12 * v19 + 8) != v18
        || (uint64_t v36 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v35 + 12 * v19 + 6) + 32) + 16),
            uint64_t v37 = *(void *)(v36 + 128),
            !*(void *)(v37 + 16))
        || (unint64_t v38 = sub_1B62C1A30((uint64_t)&type metadata for ParticleSphereCollider), (v39 & 1) == 0)
        || *(ValueMetadata **)(*(void *)(v36 + 24) + 16 * *(void *)(*(void *)(v37 + 56) + 8 * v38) + 32) != &type metadata for ParticleSphereCollider)
      {
        if (v19 < 0
          || v128[1] <= v19
          || (uint64_t v40 = *v128, v18 != -1) && *(_DWORD *)(v40 + 12 * v19 + 8) != v18
          || (uint64_t v41 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v40 + 12 * v19 + 6) + 32) + 16),
              uint64_t v42 = *(void *)(v41 + 128),
              !*(void *)(v42 + 16))
          || (unint64_t v43 = sub_1B62C1A30((uint64_t)&type metadata for ParticleBoxCollider), (v44 & 1) == 0)
          || *(ValueMetadata **)(*(void *)(v41 + 24) + 16 * *(void *)(*(void *)(v42 + 56) + 8 * v43) + 32) != &type metadata for ParticleBoxCollider)
        {
          if (v19 < 0) {
            goto LABEL_69;
          }
          if (v128[1] <= v19) {
            goto LABEL_69;
          }
          uint64_t v45 = *v128;
          if (v18 != -1 && *(_DWORD *)(v45 + 12 * v19 + 8) != v18) {
            goto LABEL_69;
          }
          uint64_t v46 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v45 + 12 * v19 + 6) + 32) + 16);
          uint64_t v47 = *(void *)(v46 + 128);
          if (!*(void *)(v47 + 16)) {
            goto LABEL_69;
          }
          unint64_t v48 = sub_1B62C1A30((uint64_t)&type metadata for ParticleCylinderCollider);
          if ((v49 & 1) == 0
            || *(ValueMetadata **)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v47 + 56) + 8 * v48) + 32) != &type metadata for ParticleCylinderCollider)
          {
            goto LABEL_69;
          }
        }
      }
    }
LABEL_66:
    swift_retain();
    sub_1B62C6AA8(v14);
    swift_bridgeObjectRetain();
    sub_1B6E32738();
    if (!swift_conformsToProtocol2()) {
      goto LABEL_154;
    }
    unint64_t v5 = v156;
    uint64_t v6 = v130;
    if (swift_dynamicCastMetatype())
    {
      uint64_t v8 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v150 = 0;
      __int16 v146 = 128;
      char v142 = 1;
      uint64_t v138 = 0x6C616353666C6168;
      unint64_t v20 = 0xE900000000000065;
      uint64_t v140 = MEMORY[0x1E4FBB470];
    }
    else
    {
      if (swift_dynamicCastMetatype())
      {
        uint64_t v8 = swift_getKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v63 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
        char v64 = &qword_1EB980E90;
      }
      else
      {
        if (!swift_dynamicCastMetatype())
        {
          uint64_t v8 = v21;
          goto LABEL_4;
        }
        uint64_t v8 = swift_getKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v63 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
        char v64 = (unint64_t *)&qword_1EB980EB0;
      }
      sub_1B6AA2488(0, v64, v63);
      uint64_t v140 = v65;
      uint64_t v150 = 0;
      __int16 v146 = 128;
      char v142 = 1;
      uint64_t v138 = 0x6C616353666C6168;
      unint64_t v20 = 0xE900000000000065;
    }
LABEL_4:
    uint64_t v9 = swift_allocObject();
    *(_DWORD *)(v9 + 16) = v19;
    *(_DWORD *)(v9 + 20) = v136;
    *(void *)(v9 + 24) = v138;
    *(void *)(v9 + 32) = v20;
    *(void *)(v9 + 40) = v8;
    *(void *)(v9 + 48) = v140;
    *(void *)(v9 + 56) = v150;
    *(unsigned char *)(v9 + 64) = v142;
    unint64_t v10 = 0x3000000000000000;
    *(_WORD *)(v9 + 66) = v146;
LABEL_5:
    sub_1B62C6A70(v14);
    sub_1B62C6A70(v14);
    *unint64_t v15 = v10 | v9;
    v15[2] = 0;
    *((unsigned char *)v15 + 24) = 1;
LABEL_6:
    if (++v7 == v6) {
      goto LABEL_76;
    }
  }
  unint64_t v50 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v51 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v52 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
  uint64_t v143 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v147 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
  char v53 = *(unsigned char *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
  __int16 v54 = *(_WORD *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x3A);
  char v151 = *(unsigned char *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
  v132 = v15;
  unint64_t v134 = v14;
  if (v154 >= 2026)
  {
    sub_1B62C6AA8(v14);
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_57;
  }
  sub_1B62C6AA8(v14);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E32738();
  if (swift_conformsToProtocol2())
  {
    if (swift_dynamicCastMetatype())
    {
      uint64_t v55 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v56 = 0;
      __int16 v54 = 128;
      char v53 = 1;
      uint64_t v57 = 0x6C616353666C6168;
      unint64_t v50 = 0xE900000000000065;
      uint64_t v51 = v55;
      uint64_t v52 = MEMORY[0x1E4FBB470];
LABEL_63:
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v57;
      *(void *)(v9 + 24) = v50;
      *(void *)(v9 + 32) = v51;
      *(void *)(v9 + 40) = v52;
      *(void *)(v9 + 48) = v56;
      *(unsigned char *)(v9 + 56) = v53;
      *(_WORD *)(v9 + 58) = v54;
      unint64_t v10 = 0x9000000000000000;
      *(unsigned char *)(v9 + 60) = v151;
      unint64_t v5 = v156;
      uint64_t v6 = v130;
      unint64_t v15 = v132;
      unint64_t v14 = v134;
      goto LABEL_5;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v58 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v59 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
      uint64_t v60 = &qword_1EB980E90;
LABEL_62:
      sub_1B6AA2488(0, v60, v59);
      uint64_t v52 = v61;
      uint64_t v56 = 0;
      __int16 v54 = 128;
      char v53 = 1;
      uint64_t v57 = 0x6C616353666C6168;
      unint64_t v50 = 0xE900000000000065;
      uint64_t v51 = v58;
      goto LABEL_63;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v58 = swift_getKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v59 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
      uint64_t v60 = (unint64_t *)&qword_1EB980EB0;
      goto LABEL_62;
    }
LABEL_57:
    uint64_t v57 = v143;
    uint64_t v56 = v147;
    goto LABEL_63;
  }
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
}

uint64_t type metadata accessor for ParticleColorOverVelocity.System()
{
  return self;
}

uint64_t sub_1B6AA3770(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6395B60(0, &qword_1E9DD4DD8, (uint64_t (*)(void))sub_1B6AA4CE0, (uint64_t)&type metadata for ParticleColorOverVelocity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)v14 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AA4CE0();
  sub_1B6E33A88();
  v14[0] = *(void *)v3;
  char v16 = 0;
  sub_1B67FEC7C();
  sub_1B6E32FA8();
  if (!v2)
  {
    v14[0] = *(void *)(v3 + 8);
    char v16 = 1;
    sub_1B62AA858();
    sub_1B62AA5EC(qword_1E9DD02C8);
    sub_1B6E32FA8();
    uint64_t v11 = *(void *)(v3 + 16);
    char v12 = *(unsigned char *)(v3 + 32);
    uint64_t v18 = *(void *)(v3 + 24);
    uint64_t v17 = v11;
    v14[0] = v11;
    v14[1] = v18;
    char v15 = v12;
    char v16 = 2;
    sub_1B68709B0(v3);
    sub_1B697B9F4();
    sub_1B6E32FA8();
    sub_1B62D8C3C((uint64_t)&v17);
    sub_1B62D8C3C((uint64_t)&v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

const char *sub_1B6AA39D0()
{
  return "ParticleColorOverVelocity";
}

uint64_t sub_1B6AA39E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB8248(*a1, *a2);
}

uint64_t sub_1B6AA39F0()
{
  uint64_t v1 = 0x65676E6172;
  if (*v0 != 1) {
    uint64_t v1 = 1886216562;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7469736F706D6F63;
  }
}

uint64_t sub_1B6AA3A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6AA3DA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6AA3A70(uint64_t a1)
{
  unint64_t v2 = sub_1B6AA4CE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AA3AAC(uint64_t a1)
{
  unint64_t v2 = sub_1B6AA4CE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6AA3AE8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6AA48C8(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B6AA3B30(void *a1)
{
  return sub_1B6AA3770(a1);
}

uint64_t sub_1B6AA3B6C()
{
  return sub_1B697B4D8();
}

uint64_t sub_1B6AA3BA8()
{
  return type metadata accessor for ParticleColorOverVelocity.System();
}

double sub_1B6AA3BC8@<D0>(uint64_t a1@<X8>)
{
  sub_1B6AA3C0C((uint64_t)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

double sub_1B6AA3C0C@<D0>(uint64_t a1@<X8>)
{
  sub_1B62D2A54(0, (unint64_t *)&unk_1EB980D90, (uint64_t (*)(uint64_t))sub_1B6395D64, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76900;
  simd_float4 v3 = _simd_pow_f4((simd_float4)xmmword_1B6E976C0, (simd_float4)xmmword_1B6E72D40);
  v3.i32[3] = 0;
  *(simd_float4 *)(v2 + 32) = v3;
  *(_DWORD *)(v2 + 48) = 0;
  simd_float4 v4 = _simd_pow_f4((simd_float4)xmmword_1B6E976D0, (simd_float4)xmmword_1B6E72D40);
  v4.i32[3] = 1.0;
  *(simd_float4 *)(v2 + 64) = v4;
  *(_DWORD *)(v2 + 80) = 1048576000;
  simd_float4 v5 = _simd_pow_f4((simd_float4)xmmword_1B6E976E0, (simd_float4)xmmword_1B6E72D40);
  v5.i32[3] = 1.0;
  *(simd_float4 *)(v2 + 96) = v5;
  *(_DWORD *)(v2 + 112) = 1056964608;
  simd_float4 v6 = _simd_pow_f4((simd_float4)xmmword_1B6E976F0, (simd_float4)xmmword_1B6E72D40);
  v6.i32[3] = 1.0;
  *(simd_float4 *)(v2 + 128) = v6;
  *(_DWORD *)(v2 + 144) = 1061158912;
  simd_float4 v7 = _simd_pow_f4((simd_float4)xmmword_1B6E97700, (simd_float4)xmmword_1B6E72D40);
  v7.i32[3] = 0;
  *(simd_float4 *)(v2 + 160) = v7;
  *(_DWORD *)(v2 + 176) = 1065353216;
  uint64_t v8 = sub_1B6397618(v2);
  swift_setDeallocating();
  swift_deallocClassInstance();
  uint64_t v9 = sub_1B639EA20(v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(void *)&double result = 1065353216;
  *(void *)(a1 + 4) = 1065353216;
  *(_DWORD *)(a1 + 12) = 1065353216;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t sub_1B6AA3DA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7469736F706D6F63 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1886216562 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B6AA3EFC(uint64_t a1)
{
  uint64_t v93 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  swift_retain();
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    swift_retain();
    sub_1B696017C(v4, (uint64_t)&v84);
    swift_retain();
    swift_release();
    uint64_t v5 = v85;
    if ((void)v85)
    {
      char v6 = v86;
      uint64_t v7 = *((void *)&v85 + 1);
      unsigned __int8 v8 = v84;
      float v9 = *((float *)&v84 + 2);
      float v49 = *((float *)&v84 + 1);
      float v10 = *((float *)&v84 + 3);
    }
    else
    {
      sub_1B6AA3C0C((uint64_t)v50);
      unsigned __int8 v8 = v50[0];
      float v9 = v52;
      float v49 = v51;
      float v10 = v53;
      uint64_t v5 = v54;
      uint64_t v7 = v55;
      char v6 = v56;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6A7C7BC(v5, v7, v6, (uint64_t)v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62CA210((uint64_t)v69, (uint64_t)v82, (unint64_t *)&unk_1EB97EFD0);
    if (!v83) {
      goto LABEL_11;
    }
    long long v88 = v82[4];
    long long v89 = v82[5];
    long long v90 = v82[6];
    uint64_t v91 = v83;
    long long v84 = v82[0];
    long long v85 = v82[1];
    long long v86 = v82[2];
    long long v87 = v82[3];
    sub_1B628D434((uint64_t)&v84);
    sub_1B6AFF0F4((uint64_t)&v84, 1, 1, (uint64_t)v70);
    sub_1B66576EC(v69);
    sub_1B697B3F8((uint64_t)v70, (uint64_t)&v79);
    if (*((void *)&v80 + 1) == 1)
    {
      sub_1B66576EC(v69);
LABEL_11:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    long long v66 = v79;
    long long v67 = v80;
    uint64_t v68 = v81;
    long long v12 = *(_OWORD *)(a1 + 104);
    long long v63 = *(_OWORD *)(a1 + 88);
    long long v64 = v12;
    uint64_t v65 = *(void *)(a1 + 120);
    sub_1B663F318((uint64_t)v57);
    v61[0] = v57[0];
    v61[1] = v57[1];
    uint64_t v62 = v58;
    sub_1B62C9DA8(v2, (uint64_t)v61, 0x200000000, &v71);
    sub_1B62CA210((uint64_t)&v71, (uint64_t)v72, (unint64_t *)&qword_1EB97DC50);
    if (*(void *)&v72[0])
    {
      if (v78 <= 0)
      {
        sub_1B6657794(&v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
        sub_1B66576EC(v69);
        sub_1B62CA064((uint64_t)v57);
        swift_release();
        sub_1B6657794(&v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6657794(&v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      else
      {
        uint64_t v43 = v75;
        if (v75)
        {
          float v13 = 1.0 / (float)(v10 - v9);
          float v14 = -(float)(v9 * v13);
          char v15 = v77;
          uint64_t v48 = v77[4];
          char v47 = *(unsigned char *)(v76 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v59[0] = v72[0];
          v59[1] = v72[1];
          uint64_t v60 = v73;
          uint64_t v41 = (uint64_t)(v77 + 6);
          uint64_t v42 = v74;
          uint64_t v40 = v77 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v16 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = v8;
          uint64_t v39 = v8;
          while (1)
          {
            int v19 = (unsigned int *)(v42 + 48 * v16);
            uint64_t v21 = (uint64_t *)*((void *)v19 + 2);
            uint64_t v20 = *((void *)v19 + 3);
            uint64_t v22 = *((void *)v19 + 4);
            uint64_t v23 = *((void *)v19 + 5);
            uint64_t v45 = *v19;
            uint64_t v46 = v17;
            uint64_t v44 = v19[1];
            if (v47)
            {
              uint64_t v24 = *(os_unfair_lock_s **)(v23 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v24);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v48);
            sub_1B62CA210(v41, (uint64_t)v92, &qword_1EB97DE20);
            uint64_t v25 = v15[4];
            uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v15[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
            v15[7] = v26;
            v40[1] = 0;
            v40[2] = 0;
            *uint64_t v40 = 0;
            swift_release();
            uint64_t v27 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v21, v20, v22, (uint64_t)v15);
            uint64_t v28 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v21, v20, v22, (uint64_t)v15);
            int v29 = (float32x4_t *)v28;
            if (v21)
            {
              if (v22)
              {
                uint64_t v17 = v46;
                do
                {
                  int8x16_t v31 = (int8x16_t)vmulq_f32(*v29, *v29);
                  (*((void (**)(long long *, float))&v67 + 1))(&v66, v14+ (float)(v13* sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v31.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v31, v31, 8uLL))))));
                  switch(v18)
                  {
                    case 1:
                      float32x4_t v30 = vaddq_f32(vmulq_n_f32(v32, v49), *v27);
                      break;
                    case 2:
                      float32x4_t v30 = vmulq_f32(vmulq_n_f32(v32, v49), *v27);
                      break;
                    case 3:
                      float32x4_t v30 = vaddq_f32(*v27, vmulq_n_f32(vsubq_f32(v32, *v27), v49));
                      break;
                    default:
                      float32x4_t v30 = vmulq_n_f32(v32, v49);
                      break;
                  }
                  *v27++ = v30;
                  ++v29;
                  --v22;
                }
                while (v22);
                goto LABEL_31;
              }
            }
            else if (v45 != v44)
            {
              uint64_t v33 = v44 - v45;
              char v34 = (float32x4_t *)(v28 + 16 * v45);
              uint64_t v35 = &v27[v45];
              uint64_t v17 = v46;
              do
              {
                int8x16_t v37 = (int8x16_t)vmulq_f32(*v34, *v34);
                (*((void (**)(long long *, float))&v67 + 1))(&v66, v14+ (float)(v13* sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v37.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL))))));
                switch(v39)
                {
                  case 1:
                    float32x4_t v36 = vaddq_f32(vmulq_n_f32(v38, v49), *v35);
                    break;
                  case 2:
                    float32x4_t v36 = vmulq_f32(vmulq_n_f32(v38, v49), *v35);
                    break;
                  case 3:
                    float32x4_t v36 = vaddq_f32(*v35, vmulq_n_f32(vsubq_f32(v38, *v35), v49));
                    break;
                  default:
                    float32x4_t v36 = vmulq_n_f32(v38, v49);
                    break;
                }
                *v35++ = v36;
                ++v34;
                --v33;
              }
              while (v33);
              goto LABEL_31;
            }
            uint64_t v17 = v46;
LABEL_31:
            sub_1B6345178(v15, (unsigned __int16 **)v59, (uint64_t)v92);
            sub_1B634507C((char *)v23);
            ecs_stack_allocator_pop_snapshot(v48);
            if (v47)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 376));
            }
            swift_release();
            if (++v16 == v43) {
              goto LABEL_43;
            }
          }
        }
        sub_1B6657794(&v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
LABEL_43:
        sub_1B66576EC(v69);
        sub_1B62CA064((uint64_t)v57);
        swift_release();
        sub_1B6657794(&v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6657794(&v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    else
    {
      sub_1B66576EC(v69);
      sub_1B62CA064((uint64_t)v57);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for ParticleColorOverVelocity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParticleColorOverVelocity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ParticleColorOverVelocity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 4) = *(void *)(a2 + 4);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticleColorOverVelocity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleColorOverVelocity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleColorOverVelocity()
{
  return &type metadata for ParticleColorOverVelocity;
}

uint64_t sub_1B6AA48C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_1B6395B60(0, &qword_1E9DD4DC8, (uint64_t (*)(void))sub_1B6AA4CE0, (uint64_t)&type metadata for ParticleColorOverVelocity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v27 = v4;
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v24 - v6;
  sub_1B62D2A54(0, (unint64_t *)&unk_1EB980D90, (uint64_t (*)(uint64_t))sub_1B6395D64, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E76900;
  simd_float4 v28 = (simd_float4)xmmword_1B6E72D40;
  simd_float4 v9 = _simd_pow_f4((simd_float4)xmmword_1B6E976C0, (simd_float4)xmmword_1B6E72D40);
  v9.i32[3] = 0;
  *(simd_float4 *)(v8 + 32) = v9;
  *(_DWORD *)(v8 + 48) = 0;
  simd_float4 v10 = _simd_pow_f4((simd_float4)xmmword_1B6E976D0, v28);
  v10.i32[3] = 1.0;
  *(simd_float4 *)(v8 + 64) = v10;
  *(_DWORD *)(v8 + 80) = 1048576000;
  simd_float4 v11 = _simd_pow_f4((simd_float4)xmmword_1B6E976E0, v28);
  v11.i32[3] = 1.0;
  *(simd_float4 *)(v8 + 96) = v11;
  *(_DWORD *)(v8 + 112) = 1056964608;
  simd_float4 v12 = _simd_pow_f4((simd_float4)xmmword_1B6E976F0, v28);
  v12.i32[3] = 1.0;
  *(simd_float4 *)(v8 + 128) = v12;
  *(_DWORD *)(v8 + 144) = 1061158912;
  simd_float4 v13 = _simd_pow_f4((simd_float4)xmmword_1B6E97700, v28);
  v13.i32[3] = 0;
  *(simd_float4 *)(v8 + 160) = v13;
  *(_DWORD *)(v8 + 176) = 1065353216;
  uint64_t v14 = sub_1B6397618(v8);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B639EA20(v14);
  swift_bridgeObjectRelease();
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AA4CE0();
  sub_1B6E33A48();
  if (v2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v25;
    uint64_t v16 = v26;
    char v32 = 0;
    sub_1B63BD348();
    sub_1B6E32DF8();
    char v17 = v29;
    int v18 = HIDWORD(v29);
    sub_1B62AA858();
    char v32 = 1;
    sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
    sub_1B6E32DF8();
    uint64_t v19 = v29;
    char v32 = 2;
    sub_1B639D880();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v27);
    uint64_t v20 = v29;
    uint64_t v21 = v30;
    char v22 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v16 = v17;
    *(_DWORD *)(v16 + 4) = v18;
    *(void *)(v16 + 8) = v19;
    *(void *)(v16 + 16) = v20;
    *(void *)(v16 + 24) = v21;
    *(unsigned char *)(v16 + 32) = v22;
  }
  return result;
}

unint64_t sub_1B6AA4CE0()
{
  unint64_t result = qword_1E9DD4DD0;
  if (!qword_1E9DD4DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4DD0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticleColorOverVelocity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AA4E00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleColorOverVelocity.CodingKeys()
{
  return &type metadata for ParticleColorOverVelocity.CodingKeys;
}

unint64_t sub_1B6AA4E3C()
{
  unint64_t result = qword_1E9DD4DE0;
  if (!qword_1E9DD4DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4DE0);
  }
  return result;
}

unint64_t sub_1B6AA4E94()
{
  unint64_t result = qword_1E9DD4DE8;
  if (!qword_1E9DD4DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4DE8);
  }
  return result;
}

unint64_t sub_1B6AA4EEC()
{
  unint64_t result = qword_1E9DD4DF0;
  if (!qword_1E9DD4DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4DF0);
  }
  return result;
}

uint64_t sub_1B6AA4F40(void *a1, __n128 a2)
{
  v10[0] = a2;
  sub_1B6AA5EB0(0, &qword_1E9DD4E08, (uint64_t (*)(void))sub_1B6AA5E5C, (uint64_t)&type metadata for ClampBox.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AA5E5C();
  sub_1B6E33A88();
  v10[1] = v10[0];
  sub_1B6AA5EB0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  sub_1B62AF194((unint64_t *)&qword_1EB97D1D8);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B6AA5114()
{
  return 0x6F69736E656D6964;
}

uint64_t sub_1B6AA5130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F69736E656D6964 && a2 == 0xEA0000000000736ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6AA51D4(uint64_t a1)
{
  unint64_t v2 = sub_1B6AA5E5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AA5210(uint64_t a1)
{
  unint64_t v2 = sub_1B6AA5E5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6AA524C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B6AA5738(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B6AA5278(void *a1)
{
  return sub_1B6AA4F40(a1, *v1);
}

double sub_1B6AA5294@<D0>(_OWORD *a1@<X8>)
{
  double result = 524288.127;
  *a1 = xmmword_1B6EA3160;
  return result;
}

uint64_t type metadata accessor for ClampBoxSystem()
{
  return self;
}

const char *sub_1B6AA52CC()
{
  return "Box Clamp";
}

uint64_t *sub_1B6AA52E0(uint64_t a1)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_1EB997A18;
  int v49 = 0;
  char v50 = 2;
  uint64_t v51 = 0;
  char v52 = 2;
  uint64_t v53 = 0;
  swift_retain();
  sub_1B663C898((uint64_t)v33);
  swift_release();
  float32x4_t v31 = v1[1];
  v45[0] = v33[0];
  v45[1] = v33[1];
  uint64_t v46 = v34;
  sub_1B62C9DA8(a1, (uint64_t)v45, 0x200000000, v35);
  sub_1B62CA210((uint64_t)v35, (uint64_t)v36, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v36[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v33);
  }
  if (v42 <= 0 || (uint64_t v26 = v39) == 0)
  {
    sub_1B62CA064((uint64_t)v33);
    return sub_1B632F170(v35);
  }
  float32x4_t v3 = v31;
  v3.i32[3] = 1.0;
  float32x4_t v32 = v3;
  uint64_t v4 = v41;
  uint64_t v30 = v41[4];
  int v29 = *(unsigned __int8 *)(v40 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v43[0] = v36[0];
  v43[1] = v36[1];
  uint64_t v44 = v37;
  uint64_t v24 = (uint64_t)(v41 + 6);
  uint64_t v25 = v38;
  uint64_t v23 = v41 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  do
  {
    char v7 = (unsigned int *)(v25 + 48 * v5);
    uint64_t v8 = *v7;
    uint64_t v27 = v7[1];
    uint64_t v28 = v6;
    simd_float4 v9 = (uint64_t *)*((void *)v7 + 2);
    uint64_t v10 = *((void *)v7 + 3);
    uint64_t v12 = *((void *)v7 + 4);
    uint64_t v11 = *((void *)v7 + 5);
    if (v29)
    {
      simd_float4 v13 = *(os_unfair_lock_s **)(v11 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v13);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v30);
    sub_1B62CA210(v24, (uint64_t)v47, &qword_1EB97DE20);
    uint64_t v14 = v4[4];
    uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v4[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
    v4[7] = v15;
    v23[1] = 0;
    _OWORD v23[2] = 0;
    *uint64_t v23 = 0;
    swift_release();
    uint64_t v16 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v9, v10, v12, (uint64_t)v4);
    uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v9, v10, v12, (uint64_t)v4);
    int v18 = (int8x16_t *)v17;
    if (v9)
    {
      if (v12)
      {
        uint64_t v6 = v28;
        do
        {
          globalClamp(v16++, v18++, v32);
          --v12;
        }
        while (v12);
        goto LABEL_20;
      }
    }
    else if (v8 != v27)
    {
      uint64_t v19 = v27 - v8;
      uint64_t v20 = (int8x16_t *)(v17 + 16 * v8);
      uint64_t v21 = &v16[v8];
      uint64_t v6 = v28;
      do
      {
        globalClamp(v21++, v20++, v32);
        --v19;
      }
      while (v19);
      goto LABEL_20;
    }
    uint64_t v6 = v28;
LABEL_20:
    sub_1B6345178(v4, (unsigned __int16 **)v43, (uint64_t)v47);
    sub_1B634507C((char *)v11);
    ecs_stack_allocator_pop_snapshot(v30);
    if (v29)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
    }
    swift_release();
    ++v5;
  }
  while (v5 != v26);
  sub_1B62CA064((uint64_t)v33);
  sub_1B632F170(v35);
  return sub_1B632F170(v35);
}

uint64_t sub_1B6AA56BC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlobalClampBoxSystem()
{
  return self;
}

double sub_1B6AA56F4()
{
  uint64_t v0 = swift_allocObject();
  double result = 134217761.0;
  *(_OWORD *)(v0 + 16) = xmmword_1B6EA3170;
  return result;
}

const char *sub_1B6AA5724()
{
  return "Global Box Clamp";
}

uint64_t sub_1B6AA5738(void *a1)
{
  sub_1B6AA5EB0(0, &qword_1E9DD4DF8, (uint64_t (*)(void))sub_1B6AA5E5C, (uint64_t)&type metadata for ClampBox.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AA5E5C();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B6AA5EB0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    sub_1B62AF194((unint64_t *)&qword_1EB97D1F0);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v10[0] = v10[1];
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

uint64_t *sub_1B6AA5958(uint64_t a1)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v77 = qword_1EB997A18;
  int v78 = 0;
  char v79 = 2;
  uint64_t v80 = 0;
  char v81 = 2;
  uint64_t v82 = 0;
  swift_retain();
  sub_1B67A7788((uint64_t)v62);
  swift_release();
  v74[0] = v62[0];
  v74[1] = v62[1];
  uint64_t v75 = v63;
  sub_1B62C9DA8(a1, (uint64_t)v74, 0x200000000, v64);
  sub_1B62CA210((uint64_t)v64, (uint64_t)v65, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v65[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v62);
  }
  if (v71 <= 0 || (uint64_t v59 = v68) == 0)
  {
    sub_1B62CA064((uint64_t)v62);
    return sub_1B632F170(v64);
  }
  uint64_t v2 = v70;
  uint64_t v3 = v70[4];
  int v4 = *(unsigned __int8 *)(v69 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v72[0] = v65[0];
  v72[1] = v65[1];
  uint64_t v73 = v66;
  uint64_t v57 = (uint64_t)(v70 + 6);
  uint64_t v58 = v67;
  char v56 = v70 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  int v54 = v4;
  uint64_t v55 = v3;
  do
  {
    uint64_t v61 = v6;
    uint64_t v7 = (unsigned int *)(v58 + 48 * v5);
    uint64_t v8 = *v7;
    uint64_t v60 = v7[1];
    uint64_t v10 = (uint64_t *)*((void *)v7 + 2);
    uint64_t v9 = *((void *)v7 + 3);
    uint64_t v12 = *((void *)v7 + 4);
    uint64_t v11 = *((void *)v7 + 5);
    if (v4)
    {
      simd_float4 v13 = *(os_unfair_lock_s **)(v11 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v13);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v3);
    sub_1B62CA210(v57, (uint64_t)v76, &qword_1EB97DE20);
    uint64_t v14 = v2[4];
    uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v2[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
    v2[7] = v15;
    v56[1] = 0;
    _OWORD v56[2] = 0;
    *char v56 = 0;
    swift_release();
    uint64_t v16 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for ClampBox, (uint64_t)&off_1F0FA3A90, v10, v9, v12, (uint64_t)v2);
    uint64_t v17 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v10, v9, v12, (uint64_t)v2);
    int v18 = (float32x2_t *)sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v10, v9, v12, (uint64_t)v2);
    if (v10)
    {
      if (!v12) {
        goto LABEL_20;
      }
      uint64_t v6 = v61;
      v20.i32[3] = v52;
      v19.i32[3] = v53;
      do
      {
        float32x4_t v21 = *v16++;
        float32x4_t v22 = v21;
        __int32 v23 = v19.i32[3];
        float32x4_t v24 = *v17;
        float32x4_t v19 = vabsq_f32(*v17);
        v19.i32[3] = v23;
        int32x4_t v25 = vcgtq_f32(v19, v21);
        *(int8x8_t *)&long long v26 = vbsl_s8((int8x8_t)vcltz_s32(*(int32x2_t *)v25.i8), (int8x8_t)vsub_f32(0, *v18), (int8x8_t)*v18);
        if (v25.i32[2] >= 0) {
          LODWORD(v27) = v18[1];
        }
        else {
          float v27 = 0.0 - COERCE_FLOAT(*(void *)&v18[1]);
        }
        *((void *)&v26 + 1) = LODWORD(v27);
        *(_OWORD *)v18->f32 = v26;
        v18 += 2;
        *(float32x2_t *)v28.f32 = vsub_f32(0, *(float32x2_t *)v22.f32);
        v24.i32[3] = 0;
        v28.f32[2] = 0.0 - v22.f32[2];
        v28.i32[3] = 0;
        float32x4_t v29 = vmaxnmq_f32(v24, v28);
        v29.i32[3] = 0;
        __int32 v30 = v20.i32[3];
        v22.i32[3] = 0;
        float32x4_t v20 = vminnmq_f32(v29, v22);
        v20.i32[3] = v30;
        float32x4_t v31 = v20;
        v31.i32[3] = 1.0;
        *v17++ = v31;
        --v12;
      }
      while (v12);
      __int32 v52 = v30;
      __int32 v53 = v19.i32[3];
    }
    else
    {
      v33.i32[3] = v50;
      v32.i32[3] = v51;
      if (v8 == v60)
      {
LABEL_20:
        uint64_t v3 = v55;
        int v4 = v54;
        uint64_t v6 = v61;
        goto LABEL_28;
      }
      uint64_t v34 = v60 - v8;
      uint64_t v35 = &v18[2 * v8];
      float32x4_t v36 = &v17[v8];
      uint64_t v37 = &v16[v8];
      uint64_t v6 = v61;
      do
      {
        float32x4_t v38 = *v37++;
        float32x4_t v39 = v38;
        __int32 v40 = v32.i32[3];
        float32x4_t v41 = *v36;
        float32x4_t v32 = vabsq_f32(*v36);
        v32.i32[3] = v40;
        int32x4_t v42 = vcgtq_f32(v32, v38);
        *(int8x8_t *)&long long v43 = vbsl_s8((int8x8_t)vcltz_s32(*(int32x2_t *)v42.i8), (int8x8_t)vsub_f32(0, *v35), (int8x8_t)*v35);
        if (v42.i32[2] >= 0) {
          LODWORD(v44) = v35[1];
        }
        else {
          float v44 = 0.0 - COERCE_FLOAT(*(void *)&v35[1]);
        }
        *((void *)&v43 + 1) = LODWORD(v44);
        *(_OWORD *)v35->f32 = v43;
        v35 += 2;
        *(float32x2_t *)v45.f32 = vsub_f32(0, *(float32x2_t *)v39.f32);
        v41.i32[3] = 0;
        v45.f32[2] = 0.0 - v39.f32[2];
        v45.i32[3] = 0;
        float32x4_t v46 = vmaxnmq_f32(v41, v45);
        v46.i32[3] = 0;
        __int32 v47 = v33.i32[3];
        v39.i32[3] = 0;
        float32x4_t v33 = vminnmq_f32(v46, v39);
        v33.i32[3] = v47;
        float32x4_t v48 = v33;
        v48.i32[3] = 1.0;
        *v36++ = v48;
        --v34;
      }
      while (v34);
      __int32 v50 = v47;
      __int32 v51 = v32.i32[3];
    }
    uint64_t v3 = v55;
    int v4 = v54;
LABEL_28:
    sub_1B6345178(v2, (unsigned __int16 **)v72, (uint64_t)v76);
    sub_1B634507C((char *)v11);
    ecs_stack_allocator_pop_snapshot(v3);
    if (v4)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
    }
    swift_release();
    ++v5;
  }
  while (v5 != v59);
  sub_1B62CA064((uint64_t)v62);
  sub_1B632F170(v64);
  return sub_1B632F170(v64);
}

ValueMetadata *type metadata accessor for ClampBox()
{
  return &type metadata for ClampBox;
}

unint64_t sub_1B6AA5E5C()
{
  unint64_t result = qword_1E9DD4E00;
  if (!qword_1E9DD4E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4E00);
  }
  return result;
}

void sub_1B6AA5EB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ClampBox.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6AA5FB4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClampBox.CodingKeys()
{
  return &type metadata for ClampBox.CodingKeys;
}

unint64_t sub_1B6AA5FF0()
{
  unint64_t result = qword_1E9DD4E10;
  if (!qword_1E9DD4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4E10);
  }
  return result;
}

unint64_t sub_1B6AA6048()
{
  unint64_t result = qword_1E9DD4E18;
  if (!qword_1E9DD4E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4E18);
  }
  return result;
}

unint64_t sub_1B6AA60A0()
{
  unint64_t result = qword_1E9DD4E20;
  if (!qword_1E9DD4E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4E20);
  }
  return result;
}

void sub_1B6AA60F4()
{
}

uint64_t sub_1B6AA6140()
{
  return type metadata accessor for LogicNode(0);
}

uint64_t type metadata accessor for LogicNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E28);
}

uint64_t sub_1B6AA6168(char a1)
{
  return (*(uint64_t (**)(void))(*(void *)v1 + 248))(a1 & 1);
}

uint64_t sub_1B6AA6190()
{
  return 0x7463656C6553;
}

uint64_t sub_1B6AA61A4@<X0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000010;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v2 + 40) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v2 + 48) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v6 + 32) = result | 0x4000000000000000;
  *a1 = v2;
  a1[1] = v6;
  a1[2] = (uint64_t)&unk_1F0F53CA0;
  a1[3] = (uint64_t)&unk_1F0F53CD0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v8;
  return result;
}

uint64_t sub_1B6AA62BC()
{
  return 0x203125203F203025;
}

uint64_t sub_1B6AA62DC()
{
  return type metadata accessor for SelectNode(0);
}

uint64_t type metadata accessor for SelectNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E38);
}

double sub_1B6AA6304@<D0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v3 + 32) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0x8000000000000010;
  *(void *)(v5 + 32) = v6 | 0x6000000000000000;
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v1 + 256))();
  uint64_t v8 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v8 + 16) = xmmword_1B6E76B30;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = 0x8000000000000000;
  *a1 = v3;
  a1[1] = v5;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  a1[2] = v8;
  a1[3] = v10;
  a1[4] = v10;
  a1[5] = v10;
  return result;
}

uint64_t sub_1B6AA6440()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x8000000000000010;
  return v0 | 0x6000000000000000;
}

uint64_t sub_1B6AA6478()
{
  return type metadata accessor for UnaryBoolOperatorNode(0);
}

uint64_t type metadata accessor for UnaryBoolOperatorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E48);
}

uint64_t sub_1B6AA64A0()
{
  return 7630670;
}

uint64_t sub_1B6AA64B0()
{
  return 3155233;
}

uint64_t sub_1B6AA64C0()
{
  return type metadata accessor for NotNode(0);
}

uint64_t type metadata accessor for NotNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E58);
}

uint64_t sub_1B6AA64E8()
{
  return 0x64644F7349;
}

unint64_t sub_1B6AA64FC()
{
  return 0x8000000000000010;
}

uint64_t sub_1B6AA6508()
{
  return 0x2931202620302528;
}

uint64_t sub_1B6AA652C()
{
  return type metadata accessor for IsOddNode(0);
}

uint64_t type metadata accessor for IsOddNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E68);
}

uint64_t sub_1B6AA6554()
{
  return 0x6E6576457349;
}

uint64_t sub_1B6AA6568()
{
  return 0x2931202620302528;
}

uint64_t sub_1B6AA658C()
{
  return type metadata accessor for IsEvenNode(0);
}

uint64_t type metadata accessor for IsEvenNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E78);
}

__n128 sub_1B6AA65B4@<Q0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E76B30;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v3 + 32) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v3 + 40) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000010;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v1 + 256))();
  uint64_t v9 = swift_allocObject();
  __n128 result = (__n128)xmmword_1B6E76B30;
  *(_OWORD *)(v9 + 16) = xmmword_1B6E76B30;
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = 0x8000000000000000;
  *a1 = v3;
  a1[1] = v6;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a1[2] = v9;
  a1[3] = v11;
  a1[4] = v11;
  a1[5] = v11;
  return result;
}

unint64_t sub_1B6AA6710()
{
  return 0x8000000000000008;
}

uint64_t sub_1B6AA671C()
{
  return type metadata accessor for BinaryLogicOperatorNode(0);
}

uint64_t type metadata accessor for BinaryLogicOperatorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E88);
}

uint64_t sub_1B6AA6744()
{
  return 29263;
}

uint64_t sub_1B6AA6750()
{
  return 0x3125207C7C203025;
}

uint64_t sub_1B6AA6768()
{
  return type metadata accessor for OrNode(0);
}

uint64_t type metadata accessor for OrNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4E98);
}

uint64_t sub_1B6AA6790()
{
  return 6581825;
}

uint64_t sub_1B6AA67A0()
{
  return 0x3125202626203025;
}

uint64_t sub_1B6AA67B8()
{
  return type metadata accessor for AndNode(0);
}

uint64_t type metadata accessor for AndNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4EA8);
}

uint64_t sub_1B6AA67E0()
{
  return 1684955470;
}

uint64_t sub_1B6AA67F0()
{
  return 0x2026262030252821;
}

uint64_t sub_1B6AA6810()
{
  return type metadata accessor for NandNode(0);
}

uint64_t type metadata accessor for NandNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4EB8);
}

uint64_t sub_1B6AA6838()
{
  return 7499598;
}

uint64_t sub_1B6AA6848()
{
  return 0x207C7C2030252821;
}

uint64_t sub_1B6AA6868()
{
  return type metadata accessor for NorNode(0);
}

uint64_t type metadata accessor for NorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4EC8);
}

uint64_t sub_1B6AA6890()
{
  return 0x6574616572477349;
}

unint64_t sub_1B6AA68AC()
{
  return 0x8000000000000018;
}

uint64_t sub_1B6AA68B8()
{
  return 0x3125203E203025;
}

uint64_t sub_1B6AA68D0()
{
  return type metadata accessor for IsGreaterNode(0);
}

uint64_t type metadata accessor for IsGreaterNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4ED8);
}

unint64_t sub_1B6AA68F8()
{
  return 0xD000000000000010;
}

uint64_t sub_1B6AA6914()
{
  return 0x3125203D3E203025;
}

uint64_t sub_1B6AA692C()
{
  return type metadata accessor for IsGreaterOrEqualNode(0);
}

uint64_t type metadata accessor for IsGreaterOrEqualNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4EE8);
}

uint64_t sub_1B6AA6954()
{
  return 0x72657373654C7349;
}

uint64_t sub_1B6AA696C()
{
  return 0x3125203C203025;
}

uint64_t sub_1B6AA6984()
{
  return type metadata accessor for IsLesserNode(0);
}

uint64_t type metadata accessor for IsLesserNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4EF8);
}

uint64_t sub_1B6AA69AC()
{
  return 0x72657373654C7349;
}

uint64_t sub_1B6AA69D0()
{
  return 0x3125203D3C203025;
}

uint64_t sub_1B6AA69E8()
{
  return type metadata accessor for IsLesserOrEqualNode(0);
}

uint64_t type metadata accessor for IsLesserOrEqualNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4F08);
}

uint64_t sub_1B6AA6A10()
{
  return 0x6C617571457349;
}

uint64_t sub_1B6AA6A28()
{
  return 0x3125203D3D203025;
}

uint64_t sub_1B6AA6A40()
{
  return type metadata accessor for IsEqualNode(0);
}

uint64_t type metadata accessor for IsEqualNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4F18);
}

uint64_t sub_1B6AA6A68()
{
  return 0x757145746F4E7349;
}

uint64_t sub_1B6AA6A84()
{
  return 0x3125203D21203025;
}

uint64_t sub_1B6AA6A9C()
{
  return type metadata accessor for IsNotEqualNode(0);
}

uint64_t type metadata accessor for IsNotEqualNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD4F28);
}

uint64_t sub_1B6AA6AC4()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6AA6AFC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1B6AA6B10(float a1)
{
  double v1 = a1;
  if (sub_1B6E318C8())
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    id v2 = objc_msgSend(self, sel_systemFontOfSize_, v1);
    id v3 = objc_msgSend(v2, sel_fontName);

    sub_1B6E31798();
  }
  uint64_t v4 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_fontDescriptorWithName_size_, v4, v1);

  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_fontWithDescriptor_size_, v5, v1);
  if (!v7) {
    id v7 = objc_msgSend(v6, sel_systemFontOfSize_, 14.0);
  }

  return v7;
}

uint64_t sub_1B6AA6C5C(void *a1)
{
  sub_1B6AAD1C4(0, &qword_1E9DD4FB8, (uint64_t (*)(void))sub_1B6AAD170, (uint64_t)&type metadata for SimpleFontDescription.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  id v7 = (char *)&v10 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AAD170();
  sub_1B6E33A88();
  char v12 = 0;
  uint64_t v8 = v10;
  sub_1B6E32F48();
  if (!v8)
  {
    char v11 = 1;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6AA6E08(char *a1, char *a2)
{
  return sub_1B6BB6770(*a1, *a2);
}

uint64_t sub_1B6AA6E14()
{
  if (*v0) {
    return 1702521203;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1B6AA6E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6AAA8C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6AA6E60(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAD170();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AA6E9C(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAD170();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6AA6ED8(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v6 = sub_1B6AAAEC8(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(float *)(a2 + 16) = v6;
  }
}

uint64_t sub_1B6AA6F08(void *a1)
{
  return sub_1B6AA6C5C(a1);
}

BOOL sub_1B6AA6F28(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 16);
  float v3 = *(float *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_1B6E334B8();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

unint64_t sub_1B6AA6F88@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B6AAB0E4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B6AA6FB4()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B6AA7014()
{
  return sub_1B6E31B08();
}

void sub_1B6AA7064(void *a1@<X8>)
{
  *a1 = &unk_1F0F79FD8;
}

uint64_t sub_1B6AA7074(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      return 0x6874646977;
    case 2:
      return 0x746867696568;
    case 3:
      return 0x6874676E656CLL;
    case 4:
      return 0x527265666D616863;
    case 5:
      return 0x6765536874646977;
    case 6:
      uint64_t v3 = 0x746867696568;
      goto LABEL_14;
    case 7:
      uint64_t v3 = 0x6874676E656CLL;
      goto LABEL_14;
    case 8:
      return 0x537265666D616863;
    case 9:
      return 0x737569646172;
    case 10:
      return 0x746E656D676573;
    case 11:
      return 0x7365646F65477369;
    case 12:
      uint64_t v3 = 0x6C6169646172;
LABEL_14:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
      break;
    case 13:
      uint64_t result = 0x64615272656E6E69;
      break;
    case 14:
      uint64_t result = 0x656D676553706163;
      break;
    case 15:
      uint64_t result = 0x7569646152706F74;
      break;
    case 16:
      uint64_t result = 0x6D67655365706970;
      break;
    case 17:
      uint64_t result = 1954047348;
      break;
    case 18:
      uint64_t result = 0x6F69737572747865;
      break;
    case 19:
      uint64_t result = 0x7373656E74616C66;
      break;
    case 20:
      uint64_t result = 1953394534;
      break;
    case 21:
      uint64_t result = 0x70536C6169646172;
      break;
    case 22:
      uint64_t result = 0x65687073696D6568;
      break;
    default:
      return result;
  }
  return result;
}

double sub_1B6AA733C@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(_OWORD *)(a1 + 4) = xmmword_1B6E4F540;
  *(int64x2_t *)(a1 + 24) = vdupq_n_s64(1uLL);
  *(_OWORD *)(a1 + 40) = xmmword_1B6EA34D0;
  *(_DWORD *)(a1 + 56) = 1056964608;
  *(void *)(a1 + 64) = 48;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 48;
  *(_DWORD *)(a1 + 88) = 1048576000;
  *(void *)(a1 + 96) = 24;
  *(_DWORD *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 112) = xmmword_1B6EA34E0;
  *(void *)(a1 + 128) = 0xE500000000000000;
  *(void *)(a1 + 136) = 0x3F19999A3F800000;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0xE000000000000000;
  double result = 0.0078125019;
  *(void *)(a1 + 160) = 0x3F80000041600000;
  *(unsigned char *)(a1 + 168) = 0;
  return result;
}

uint64_t sub_1B6AA73CC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1B6AA7074(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B6AA7074(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6AA7458()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6AA7074(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6AA74BC()
{
  sub_1B6AA7074(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6AA7510()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6AA7074(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6AA7570@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6AAA86C();
  *a1 = result;
  return result;
}

uint64_t sub_1B6AA75A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B6AA7074(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B6AA75CC()
{
  return sub_1B6AA7074(*v0);
}

uint64_t sub_1B6AA75D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6AAA86C();
  *a1 = result;
  return result;
}

uint64_t sub_1B6AA75FC(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAC628();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AA7638(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAC628();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6AA7674(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6AAD1C4(0, &qword_1E9DD4F60, (uint64_t (*)(void))sub_1B6AAC628, (uint64_t)&type metadata for PrimitiveGenerator.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v15 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AAC628();
  sub_1B6E33A88();
  if (!*(unsigned char *)v3 || (LOBYTE(v16) = *(unsigned char *)v3, char v19 = 0, sub_1B6AAA0B0(), sub_1B6E32FA8(), !v2))
  {
    if (*(float *)(v3 + 4) == 1.0 || (LOBYTE(v16) = 1, sub_1B6E32F78(), !v2))
    {
      if (*(float *)(v3 + 8) == 1.0 || (LOBYTE(v16) = 2, sub_1B6E32F78(), !v2))
      {
        if (*(float *)(v3 + 12) == 1.0 || (LOBYTE(v16) = 3, sub_1B6E32F78(), !v2))
        {
          if (*(float *)(v3 + 16) == 0.0 || (LOBYTE(v16) = 4, sub_1B6E32F78(), !v2))
          {
            if (*(void *)(v3 + 24) == 1 || (LOBYTE(v16) = 5, sub_1B6E32F88(), !v2))
            {
              if (*(void *)(v3 + 32) == 1 || (LOBYTE(v16) = 6, sub_1B6E32F88(), !v2))
              {
                if (*(void *)(v3 + 40) == 1 || (LOBYTE(v16) = 7, sub_1B6E32F88(), !v2))
                {
                  if (*(void *)(v3 + 48) == 10 || (LOBYTE(v16) = 8, sub_1B6E32F88(), !v2))
                  {
                    if (*(float *)(v3 + 56) == 0.5 || (LOBYTE(v16) = 9, sub_1B6E32F78(), !v2))
                    {
                      if (*(void *)(v3 + 64) == 48 || (LOBYTE(v16) = 10, sub_1B6E32F88(), !v2))
                      {
                        if (*(unsigned char *)(v3 + 72) != 1 || (LOBYTE(v16) = 11, sub_1B6E32F58(), !v2))
                        {
                          if (*(void *)(v3 + 80) == 48 || (LOBYTE(v16) = 12, sub_1B6E32F88(), !v2))
                          {
                            if (*(float *)(v3 + 88) == 0.25 || (LOBYTE(v16) = 13, sub_1B6E32F78(), !v2))
                            {
                              if (*(void *)(v3 + 96) == 24 || (LOBYTE(v16) = 14, sub_1B6E32F88(), !v2))
                              {
                                if (*(float *)(v3 + 104) == 0.0 || (LOBYTE(v16) = 15, sub_1B6E32F78(), !v2))
                                {
                                  if (*(void *)(v3 + 112) == 24 || (LOBYTE(v16) = 16, sub_1B6E32F88(), !v2))
                                  {
                                    if (*(void *)(v3 + 120) == 0x6F6C6C6548
                                      && *(void *)(v3 + 128) == 0xE500000000000000
                                      || (sub_1B6E334B8() & 1) != 0
                                      || (LOBYTE(v16) = 17, sub_1B6E32F48(), !v2))
                                    {
                                      if (*(float *)(v3 + 136) == 1.0 || (LOBYTE(v16) = 18, sub_1B6E32F78(), !v2))
                                      {
                                        if (*(float *)(v3 + 140) == 0.6 || (LOBYTE(v16) = 19, sub_1B6E32F78(), !v2))
                                        {
                                          if ((uint64_t v11 = *(void *)(v3 + 144),
                                                uint64_t v12 = *(void *)(v3 + 152),
                                                float v13 = *(float *)(v3 + 160),
                                                !v11)
                                            && v12 == 0xE000000000000000
                                            || (sub_1B6E334B8() & 1) != 0)
                                          {
                                            if (v13 == 14.0) {
                                              goto LABEL_63;
                                            }
                                          }
                                          uint64_t v16 = v11;
                                          uint64_t v17 = v12;
                                          float v18 = v13;
                                          char v19 = 20;
                                          sub_1B6AAC740();
                                          sub_1B6E32FA8();
                                          if (!v2)
                                          {
LABEL_63:
                                            if (*(float *)(v3 + 164) == 1.0 || (LOBYTE(v16) = 21, sub_1B6E32F78(), !v2))
                                            {
                                              if (*(unsigned char *)(v3 + 168) == 1)
                                              {
                                                LOBYTE(v16) = 22;
                                                sub_1B6E32F58();
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

__n128 sub_1B6AA7D0C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6AAB0F4(a1, v9);
  if (!v2)
  {
    long long v5 = v10[0];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 153) = *(_OWORD *)((char *)v10 + 9);
    long long v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    long long v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    long long v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    __n128 result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1B6AA7D70(void *a1)
{
  return sub_1B6AA7674(a1);
}

uint64_t sub_1B6AA7D88()
{
  sub_1B62CB280(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6EA34F0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v2 = swift_getKeyPath();
  sub_1B62CB280(0, (unint64_t *)&unk_1EB97DFB0, MEMORY[0x1E4FBC1C8], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v3 = (void *)swift_allocObject();
  v3[4] = sub_1B6AAC7CC;
  v3[5] = v2;
  _OWORD v3[2] = sub_1B6AAC7FC;
  v3[3] = v2;
  v3[6] = v2;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1B6723648(0x6974616C756D6973, 0xEF7865646E496E6FLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v3, v2, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  sub_1B62CB280(0, &qword_1E9DCF810, (uint64_t)&type metadata for PrimitiveGenerator.PrimitiveType, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  long long v6 = (void *)swift_allocObject();
  v6[4] = sub_1B6AAC82C;
  v6[5] = KeyPath;
  _OWORD v6[2] = sub_1B67787FC;
  v6[3] = KeyPath;
  v6[6] = KeyPath;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v7 = sub_1B67236C4(1701869940, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, KeyPath, 0, 0,
         0,
         v4,
         v5);
  swift_release();
  swift_release();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = swift_getKeyPath();
  sub_1B62CB280(0, (unint64_t *)&unk_1EB97DF50, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v10 = (void *)swift_allocObject();
  v10[4] = sub_1B677873C;
  v10[5] = v8;
  _OWORD v10[2] = sub_1B6778744;
  v10[3] = v8;
  v10[6] = v8;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v11 = sub_1B6723ABC(1954047348, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v9, 1, 0, (uint64_t)v10, v8, 0, 0,
          0,
          v4,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 40) = v11;
  uint64_t v12 = swift_getKeyPath();
  uint64_t v13 = swift_getKeyPath();
  sub_1B62CB280(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v14 = (void *)swift_allocObject();
  v14[4] = sub_1B6778684;
  v14[5] = v12;
  void v14[2] = sub_1B677868C;
  void v14[3] = v12;
  v14[6] = v12;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v16 = sub_1B6723B38(0x6F69737572747865, 0xE90000000000006ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v13, 1, 0, (uint64_t)v14, v12, 0, 0,
          0,
          MEMORY[0x1E4FBC860],
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 48) = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  char v19 = (void *)swift_allocObject();
  v19[4] = sub_1B6778684;
  v19[5] = v17;
  v19[2] = sub_1B677868C;
  v19[3] = v17;
  void v19[6] = v17;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v20 = sub_1B6723B38(0x7373656E74616C66, 0xE800000000000000, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, v18, 1, 0, (uint64_t)v19, v17, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 56) = v20;
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = swift_getKeyPath();
  sub_1B62CB280(0, &qword_1E9DCF7E0, (uint64_t)&type metadata for SimpleFontDescription, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  __int32 v23 = (void *)swift_allocObject();
  v23[4] = sub_1B677851C;
  v23[5] = v21;
  _OWORD v23[2] = sub_1B6778524;
  uint64_t v23[3] = v21;
  v23[6] = v21;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v24 = sub_1B6723BB4(1953394534, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v22, 1, 0, (uint64_t)v23, v21, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 64) = v24;
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = swift_getKeyPath();
  float v27 = (void *)swift_allocObject();
  v27[4] = sub_1B6778684;
  v27[5] = v25;
  v27[2] = sub_1B677868C;
  v27[3] = v25;
  v27[6] = v25;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v28 = sub_1B6723B38(0x6874646977, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v26, 1, 0, (uint64_t)v27, v25, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 72) = v28;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = swift_getKeyPath();
  float32x4_t v31 = (void *)swift_allocObject();
  v31[4] = sub_1B6778684;
  v31[5] = v29;
  v31[2] = sub_1B677868C;
  v31[3] = v29;
  v31[6] = v29;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v32 = sub_1B6723B38(0x746867696568, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v30, 1, 0, (uint64_t)v31, v29, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 80) = v32;
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (void *)swift_allocObject();
  v35[4] = sub_1B6778684;
  v35[5] = v33;
  _OWORD v35[2] = sub_1B677868C;
  v35[3] = v33;
  v35[6] = v33;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v36 = sub_1B6723B38(0x6874676E656CLL, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v34, 1, 0, (uint64_t)v35, v33, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 88) = v36;
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = swift_getKeyPath();
  float32x4_t v39 = (void *)swift_allocObject();
  v39[4] = sub_1B6778684;
  v39[5] = v37;
  _OWORD v39[2] = sub_1B677868C;
  v39[3] = v37;
  v39[6] = v37;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v40 = sub_1B6723B38(0x527265666D616863, 0xED00007375696461, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v38, 1, 0, (uint64_t)v39, v37, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 96) = v40;
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = swift_getKeyPath();
  long long v43 = (void *)swift_allocObject();
  v43[4] = sub_1B6778684;
  v43[5] = v41;
  _OWORD v43[2] = sub_1B677868C;
  v43[3] = v41;
  v43[6] = v41;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v44 = sub_1B6723B38(0x737569646172, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v42, 1, 0, (uint64_t)v43, v41, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 104) = v44;
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = swift_getKeyPath();
  __int32 v47 = (void *)swift_allocObject();
  v47[4] = sub_1B6778684;
  v47[5] = v45;
  _OWORD v47[2] = sub_1B677868C;
  v47[3] = v45;
  v47[6] = v45;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v48 = sub_1B6723B38(0x615272656E726F63, 0xEC00000073756964, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v46, 1, 0, (uint64_t)v47, v45, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 112) = v48;
  uint64_t v49 = swift_getKeyPath();
  uint64_t v50 = swift_getKeyPath();
  __int32 v51 = (void *)swift_allocObject();
  v51[4] = sub_1B6778684;
  v51[5] = v49;
  v51[2] = sub_1B677868C;
  v51[3] = v49;
  v51[6] = v49;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v52 = sub_1B6723B38(0x64615272656E6E69, 0xEB00000000737569, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v50, 1, 0, (uint64_t)v51, v49, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 120) = v52;
  uint64_t v53 = swift_getKeyPath();
  uint64_t v54 = swift_getKeyPath();
  uint64_t v55 = (void *)swift_allocObject();
  v55[4] = sub_1B6778684;
  v55[5] = v53;
  _OWORD v55[2] = sub_1B677868C;
  v55[3] = v53;
  v55[6] = v53;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v56 = sub_1B6723B38(0x6964615265706970, 0xEA00000000007375, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v54, 1, 0, (uint64_t)v55, v53, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 128) = v56;
  uint64_t v57 = swift_getKeyPath();
  uint64_t v58 = swift_getKeyPath();
  uint64_t v59 = (void *)swift_allocObject();
  v59[4] = sub_1B6778684;
  v59[5] = v57;
  _OWORD v59[2] = sub_1B677868C;
  v59[3] = v57;
  v59[6] = v57;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v60 = sub_1B6723B38(0x7569646152706F74, 0xE900000000000073, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v58, 1, 0, (uint64_t)v59, v57, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 136) = v60;
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = swift_getKeyPath();
  sub_1B62CB280(0, &qword_1EB97DF70, MEMORY[0x1E4FBB550], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v63 = (void *)swift_allocObject();
  v63[4] = sub_1B6AAC950;
  v63[5] = v61;
  v63[2] = sub_1B6AAC980;
  v63[3] = v61;
  v63[6] = v61;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v64 = sub_1B6723FAC(0x6765536874646977, 0xEC000000746E656DLL, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v62, 1, 0, (uint64_t)v63, v61, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 144) = v64;
  uint64_t v65 = swift_getKeyPath();
  uint64_t v66 = swift_getKeyPath();
  uint64_t v67 = (void *)swift_allocObject();
  v67[4] = sub_1B6AAC950;
  v67[5] = v65;
  _OWORD v67[2] = sub_1B6AAC980;
  v67[3] = v65;
  v67[6] = v65;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v68 = sub_1B6723FAC(0x6553746867696568, 0xED0000746E656D67, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v66, 1, 0, (uint64_t)v67, v65, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 152) = v68;
  uint64_t v69 = swift_getKeyPath();
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = (void *)swift_allocObject();
  v71[4] = sub_1B6AAC950;
  v71[5] = v69;
  v71[2] = sub_1B6AAC980;
  v71[3] = v69;
  v71[6] = v69;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v72 = sub_1B6723FAC(0x65536874676E656CLL, 0xED0000746E656D67, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v70, 1, 0, (uint64_t)v71, v69, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 160) = v72;
  uint64_t v73 = swift_getKeyPath();
  uint64_t v74 = swift_getKeyPath();
  uint64_t v75 = (void *)swift_allocObject();
  v75[4] = sub_1B6AAC950;
  v75[5] = v73;
  v75[2] = sub_1B6AAC980;
  v75[3] = v73;
  v75[6] = v73;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v76 = sub_1B6723FAC(0x537265666D616863, 0xEE00746E656D6765, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v74, 1, 0, (uint64_t)v75, v73, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 168) = v76;
  uint64_t v77 = swift_getKeyPath();
  uint64_t v78 = swift_getKeyPath();
  char v79 = (void *)swift_allocObject();
  v79[4] = sub_1B6AAC950;
  v79[5] = v77;
  v79[2] = sub_1B6AAC980;
  v79[3] = v77;
  v79[6] = v77;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v80 = sub_1B6723FAC(0x746E656D676573, 0xE700000000000000, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v78, 1, 0, (uint64_t)v79, v77, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 176) = v80;
  uint64_t v81 = swift_getKeyPath();
  uint64_t v82 = swift_getKeyPath();
  uint64_t v83 = (void *)swift_allocObject();
  v83[4] = sub_1B6AAC950;
  v83[5] = v81;
  v83[2] = sub_1B6AAC980;
  v83[3] = v81;
  v83[6] = v81;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v84 = sub_1B6723FAC(0x65536C6169646172, 0xED0000746E656D67, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v82, 1, 0, (uint64_t)v83, v81, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 184) = v84;
  uint64_t v85 = swift_getKeyPath();
  uint64_t v86 = swift_getKeyPath();
  long long v87 = (void *)swift_allocObject();
  v87[4] = sub_1B6AAC950;
  v87[5] = v85;
  v87[2] = sub_1B6AAC980;
  v87[3] = v85;
  v87[6] = v85;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v88 = sub_1B6723FAC(0x655372656E726F63, 0xED0000746E656D67, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v86, 1, 0, (uint64_t)v87, v85, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 192) = v88;
  uint64_t v89 = swift_getKeyPath();
  uint64_t v90 = swift_getKeyPath();
  uint64_t v91 = (void *)swift_allocObject();
  v91[4] = sub_1B6AAC950;
  v91[5] = v89;
  v91[2] = sub_1B6AAC980;
  v91[3] = v89;
  v91[6] = v89;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v92 = sub_1B6723FAC(0x656D676553706163, 0xEA0000000000746ELL, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v90, 1, 0, (uint64_t)v91, v89, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 200) = v92;
  uint64_t v93 = swift_getKeyPath();
  uint64_t v94 = swift_getKeyPath();
  uint64_t v95 = (void *)swift_allocObject();
  v95[4] = sub_1B6AAC950;
  v95[5] = v93;
  _OWORD v95[2] = sub_1B6AAC980;
  v95[3] = v93;
  v95[6] = v93;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v96 = sub_1B6723FAC(0x6D67655365706970, 0xEB00000000746E65, 0x3FF0000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, v94, 1, 0, (uint64_t)v95, v93, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 208) = v96;
  uint64_t v97 = swift_getKeyPath();
  uint64_t v98 = swift_getKeyPath();
  sub_1B62CB280(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  char v99 = (void *)swift_allocObject();
  v99[4] = sub_1B6AAC9F8;
  v99[5] = v97;
  v99[2] = sub_1B67783B4;
  v99[3] = v97;
  v99[6] = v97;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v100 = sub_1B6724028(0x7365646F65477369, 0xEA00000000006369, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v98, 1, 0, (uint64_t)v99, v97, 0, 0,
           0,
           v15,
           0);
  swift_release();
  swift_release();
  *(void *)(v0 + 216) = v100;
  uint64_t v101 = swift_getKeyPath();
  uint64_t v102 = swift_getKeyPath();
  unint64_t v103 = (void *)swift_allocObject();
  v103[4] = sub_1B6778684;
  v103[5] = v101;
  v103[2] = sub_1B677868C;
  v103[3] = v101;
  v103[6] = v101;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v104 = MEMORY[0x1E4FBC860];
  uint64_t v105 = sub_1B6723B38(0x70536C6169646172, 0xEA00000000006E61, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v102, 1, 0, (uint64_t)v103, v101, 0, 0,
           0,
           MEMORY[0x1E4FBC860],
           0);
  swift_release();
  swift_release();
  *(void *)(v0 + 224) = v105;
  uint64_t v106 = swift_getKeyPath();
  uint64_t v107 = swift_getKeyPath();
  unint64_t v108 = (void *)swift_allocObject();
  v108[4] = sub_1B6AAC9F8;
  v108[5] = v106;
  _OWORD v108[2] = sub_1B67783B4;
  v108[3] = v106;
  v108[6] = v106;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v109 = sub_1B6724028(0x65687073696D6568, 0xEB00000000636972, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v107, 1, 0, (uint64_t)v108, v106, 0, 0,
           0,
           v104,
           0);
  swift_release();
  swift_release();
  *(void *)(v0 + 232) = v109;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E495D8 = v0;
  return result;
}

BOOL sub_1B6AA9A28()
{
  return *v0 == 9;
}

uint64_t sub_1B6AA9A38()
{
  return (*v0 < 6u) & (0x25u >> *v0);
}

uint64_t sub_1B6AA9A54()
{
  return (*v0 < 8u) & (0xFDu >> *v0);
}

BOOL sub_1B6AA9A70()
{
  return !*v0 || *v0 == 5;
}

BOOL sub_1B6AA9A84()
{
  return !*v0 || *v0 == 9;
}

uint64_t sub_1B6AA9A98()
{
  return (*v0 < 9uLL) & (0x1DAu >> *v0);
}

BOOL sub_1B6AA9AB4()
{
  return *v0 == 3;
}

BOOL sub_1B6AA9AC4()
{
  return *v0 == 8;
}

BOOL sub_1B6AA9AD4()
{
  return *v0 == 6;
}

BOOL sub_1B6AA9AE4()
{
  return *v0 == 1;
}

uint64_t sub_1B6AA9AF4()
{
  return (*v0 < 9uLL) & (0x1D8u >> *v0);
}

BOOL sub_1B6AA9B10()
{
  return *v0 == 4;
}

uint64_t sub_1B6AA9B20()
{
  return (*v0 < 9uLL) & (0x18Au >> *v0);
}

unint64_t sub_1B6AA9B3C()
{
  return 0xD000000000000013;
}

uint64_t sub_1B6AA9B58()
{
  return 0x766974696D697250;
}

uint64_t destroy for PrimitiveGenerator()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrimitiveGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v3 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v3;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrimitiveGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

__n128 initializeWithTake for PrimitiveGenerator(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for PrimitiveGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v4 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimitiveGenerator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 169)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimitiveGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 168) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 169) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 128) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 169) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimitiveGenerator()
{
  return &type metadata for PrimitiveGenerator;
}

uint64_t *sub_1B6AA9F50(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  v28[0] = *(_OWORD *)(v1 + 16);
  v28[1] = v3;
  uint64_t v29 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v28, 0x200000000, v5);
  __n128 result = (uint64_t *)sub_1B6309B40((uint64_t)v5, (uint64_t)&v6);
  if (v6)
  {
    uint64_t v17 = v6;
    int v18 = v7;
    char v19 = v8;
    uint64_t v20 = v9;
    char v21 = v10;
    uint64_t v22 = v11;
    uint64_t v23 = v12;
    long long v24 = v13;
    long long v25 = v14;
    uint64_t v26 = v15;
    uint64_t v27 = v16;
    swift_retain();
    sub_1B6D9A4A0((uint64_t)&v17, a1);
    swift_release();
    return sub_1B632F170(v5);
  }
  return result;
}

unint64_t sub_1B6AAA02C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B6AAA05C();
  unint64_t result = sub_1B6AAA0B0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B6AAA05C()
{
  unint64_t result = qword_1E9DD4F38;
  if (!qword_1E9DD4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F38);
  }
  return result;
}

unint64_t sub_1B6AAA0B0()
{
  unint64_t result = qword_1E9DD4F40;
  if (!qword_1E9DD4F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F40);
  }
  return result;
}

uint64_t sub_1B6AAA104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6AAA5C4(a1, a2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D9564, a3);
}

uint64_t sub_1B6AAA11C(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6AACA48);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6AAA1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6AAA718(a1, a2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D98B0, a3);
}

uint64_t sub_1B6AAA1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6AAA7B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6AACA6C);
}

uint64_t sub_1B6AAA20C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_retain();
  uint64_t v6 = sub_1B66DC8B4(a1, (uint64_t)&type metadata for PrimitiveGenerator, (uint64_t)&off_1F0F7A410, a2);
  uint64_t v8 = v7;
  int v10 = v9;
  uint64_t result = swift_release();
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(_DWORD *)(a3 + 16) = v10;
  return result;
}

uint64_t sub_1B6AAA288(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6AACA98);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6AAA350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_retain();
  unint64_t v6 = sub_1B66D9444(a1, (uint64_t)&type metadata for PrimitiveGenerator, (uint64_t)&off_1F0F7A410, a2);
  uint64_t result = swift_release();
  *(_DWORD *)a3 = v6;
  *(unsigned char *)(a3 + 4) = BYTE4(v6) & 1;
  return result;
}

uint64_t sub_1B6AAA3C0(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6AACAD8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6AAA480@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  swift_retain();
  uint64_t v6 = sub_1B66DA968(a1, (uint64_t)&type metadata for PrimitiveGenerator, (uint64_t)&off_1F0F7A410, a2);
  uint64_t v8 = v7;
  uint64_t result = swift_release();
  *a3 = v6;
  a3[1] = v8;
  return result;
}

uint64_t sub_1B6AAA4EC(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6AACAFC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6AAA5AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6AAA5C4(a1, a2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DC9E4, a3);
}

uint64_t sub_1B6AAA5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t)@<X3>, unsigned char *a4@<X8>)
{
  swift_retain();
  LOBYTE(a3) = a3(a1, &type metadata for PrimitiveGenerator, &off_1F0F7A410, a2);
  uint64_t result = swift_release();
  *a4 = (_BYTE)a3;
  return result;
}

uint64_t sub_1B6AAA640(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6AACB38);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6AAA700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6AAA718(a1, a2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D9670, a3);
}

uint64_t sub_1B6AAA718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  swift_retain();
  uint64_t v8 = a3(a1, &type metadata for PrimitiveGenerator, &off_1F0F7A410, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_release();
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  return result;
}

uint64_t sub_1B6AAA7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6AAA7B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6AACB5C);
}

uint64_t sub_1B6AAA7B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6AAA86C()
{
  unint64_t v0 = sub_1B6E337B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17) {
    return 23;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6AAA8C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6AAA994(uint64_t a1, void *a2, uint64_t a3)
{
  char v6 = self;
  id v7 = objc_msgSend(v6, sel_immediateMode);
  objc_msgSend(v6, sel_setImmediateMode_, 1);
  switch(*(unsigned char *)a1)
  {
    case 1:
      long long v14 = self;
      LODWORD(v15) = *(_DWORD *)(a1 + 56);
      id v13 = objc_msgSend(v14, sel_sphereWithRadius_, v15);
      objc_msgSend(v13, sel_setSegmentCount_, *(void *)(a1 + 64));
      objc_msgSend(v13, sel_setGeodesic_, *(unsigned __int8 *)(a1 + 72));
      objc_msgSend(v13, sel_setHemispheric_, *(unsigned __int8 *)(a1 + 168));
      goto LABEL_13;
    case 2:
      uint64_t v17 = self;
      LODWORD(v18) = *(_DWORD *)(a1 + 4);
      LODWORD(v19) = *(_DWORD *)(a1 + 8);
      id v13 = objc_msgSend(v17, sel_planeWithWidth_height_, v18, v19);
      objc_msgSend(v13, sel_setWidthSegmentCount_, *(void *)(a1 + 24));
      objc_msgSend(v13, sel_setHeightSegmentCount_, *(void *)(a1 + 32));
      LODWORD(v20) = *(_DWORD *)(a1 + 16);
      objc_msgSend(v13, sel_setCornerRadius_, v20);
      objc_msgSend(v13, sel_setCornerSegmentCount_, *(void *)(a1 + 80));
      break;
    case 3:
      char v21 = self;
      LODWORD(v22) = *(_DWORD *)(a1 + 88);
      LODWORD(v23) = *(_DWORD *)(a1 + 56);
      LODWORD(v24) = *(_DWORD *)(a1 + 8);
      id v13 = objc_msgSend(v21, sel_tubeWithInnerRadius_outerRadius_height_, v22, v23, v24);
      objc_msgSend(v13, sel_setHeightSegmentCount_, *(void *)(a1 + 32));
      objc_msgSend(v13, sel_setRadialSegmentCount_, *(void *)(a1 + 80));
      goto LABEL_13;
    case 4:
      long long v25 = self;
      LODWORD(v26) = *(_DWORD *)(a1 + 56);
      LODWORD(v27) = *(_DWORD *)(a1 + 8);
      id v13 = objc_msgSend(v25, sel_capsuleWithCapRadius_height_, v26, v27);
      objc_msgSend(v13, sel_setCapSegmentCount_, *(void *)(a1 + 96));
      objc_msgSend(v13, sel_setRadialSegmentCount_, *(void *)(a1 + 80));
      goto LABEL_9;
    case 5:
      uint64_t v28 = self;
      LODWORD(v29) = *(_DWORD *)(a1 + 4);
      LODWORD(v30) = *(_DWORD *)(a1 + 8);
      LODWORD(v31) = *(_DWORD *)(a1 + 12);
      id v13 = objc_msgSend(v28, sel_pyramidWithWidth_height_length_, v29, v30, v31);
      objc_msgSend(v13, sel_setWidthSegmentCount_, *(void *)(a1 + 24));
      objc_msgSend(v13, sel_setHeightSegmentCount_, *(void *)(a1 + 32));
      objc_msgSend(v13, sel_setLengthSegmentCount_, *(void *)(a1 + 40));
      break;
    case 6:
      uint64_t v32 = self;
      LODWORD(v33) = *(_DWORD *)(a1 + 104);
      LODWORD(v34) = *(_DWORD *)(a1 + 56);
      LODWORD(v35) = *(_DWORD *)(a1 + 8);
      id v13 = objc_msgSend(v32, sel_coneWithTopRadius_bottomRadius_height_, v33, v34, v35);
      objc_msgSend(v13, sel_setRadialSegmentCount_, *(void *)(a1 + 80));
LABEL_9:
      objc_msgSend(v13, sel_setHeightSegmentCount_, *(void *)(a1 + 32));
      break;
    case 7:
      uint64_t v36 = self;
      LODWORD(v37) = *(_DWORD *)(a1 + 56);
      LODWORD(v38) = *(_DWORD *)(a1 + 8);
      id v13 = objc_msgSend(v36, sel_cylinderWithRadius_height_, v37, v38);
      objc_msgSend(v13, sel_setRadialSegmentCount_, *(void *)(a1 + 80));
      objc_msgSend(v13, sel_setHeightSegmentCount_, *(void *)(a1 + 32));
      goto LABEL_13;
    case 8:
      float32x4_t v39 = self;
      LODWORD(v40) = *(_DWORD *)(a1 + 56);
      LODWORD(v41) = *(_DWORD *)(a1 + 88);
      id v13 = objc_msgSend(v39, sel_torusWithRingRadius_pipeRadius_, v40, v41);
      objc_msgSend(v13, sel_setRadialSegmentCount_, *(void *)(a1 + 80));
      objc_msgSend(v13, sel_setPipeSegmentCount_, *(void *)(a1 + 112));
LABEL_13:
      LODWORD(v16) = *(_DWORD *)(a1 + 164);
      objc_msgSend(v13, sel_setRadialSpan_, v16);
      break;
    case 9:
      int v42 = *(_DWORD *)(a1 + 136);
      uint64_t v52 = *(void *)(a1 + 120);
      uint64_t v53 = *(void *)(a1 + 128);
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1B6E337F8();
      uint64_t v44 = self;
      LODWORD(v45) = v42;
      id v13 = objc_msgSend(v44, sel_textWithString_extrusionDepth_, v43, v45, v52, v53);
      swift_unknownObjectRelease();
      LODWORD(v46) = *(_DWORD *)(a1 + 16);
      objc_msgSend(v13, sel_setChamferRadius_, v46);
      *(float *)&double v47 = 1.0 / (float)(*(float *)(a1 + 140) + 1.0);
      objc_msgSend(v13, sel_setFlatness_, v47);
      id v48 = sub_1B6AA6B10(*(float *)(a1 + 160));
      objc_msgSend(v13, sel_setFont_, v48);

      break;
    default:
      uint64_t v8 = self;
      LODWORD(v9) = *(_DWORD *)(a1 + 4);
      LODWORD(v10) = *(_DWORD *)(a1 + 8);
      LODWORD(v11) = *(_DWORD *)(a1 + 12);
      LODWORD(v12) = *(_DWORD *)(a1 + 16);
      id v13 = objc_msgSend(v8, sel_cubeWithWidth_height_length_chamferRadius_, v9, v10, v11, v12);
      objc_msgSend(v13, sel_setWidthSegmentCount_, *(void *)(a1 + 24));
      objc_msgSend(v13, sel_setHeightSegmentCount_, *(void *)(a1 + 32));
      objc_msgSend(v13, sel_setLengthSegmentCount_, *(void *)(a1 + 40));
      objc_msgSend(v13, sel_setChamferSegmentCount_, *(void *)(a1 + 48));
      break;
  }
  objc_msgSend(v6, sel_setImmediateMode_, v7);
  type metadata accessor for VFXCoreImporter();
  id v49 = v13;
  uint64_t v50 = sub_1B6B68298(v49, 0, a3);

  uint64_t result = swift_release();
  *a2 = v50;
  return result;
}

float sub_1B6AAAEC8(void *a1)
{
  sub_1B6AAD1C4(0, &qword_1E9DD4FA8, (uint64_t (*)(void))sub_1B6AAD170, (uint64_t)&type metadata for SimpleFontDescription.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  double v9 = &v12[-v8];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AAD170();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12[15] = 0;
    sub_1B6E32D98();
    v12[14] = 1;
    sub_1B6E32DC8();
    float v2 = v11;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v2;
}

unint64_t sub_1B6AAB0E4(unint64_t result)
{
  if (result >= 0xA) {
    return 10;
  }
  return result;
}

uint64_t sub_1B6AAB0F4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v96 = a2;
  sub_1B6AAD1C4(0, &qword_1E9DD4F48, (uint64_t (*)(void))sub_1B6AAC628, (uint64_t)&type metadata for PrimitiveGenerator.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v95 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v84 - v7;
  uint64_t v9 = a1[3];
  uint64_t v100 = a1;
  sub_1B62C14BC(a1, v9);
  sub_1B6AAC628();
  sub_1B6E33A48();
  if (v2)
  {
    uint64_t v146 = v2;
    int v107 = 0;
    char v10 = 0;
    uint64_t v98 = 0x6F6C6C6548;
    float v11 = 0.5;
    float v97 = 0.25;
    int v12 = 0;
    uint64_t v104 = 0;
    unint64_t v105 = 0xE500000000000000;
    unint64_t v103 = 0xE000000000000000;
    float v101 = 1.0;
    float v102 = 14.0;
    uint64_t v13 = 1;
    uint64_t v99 = 10;
    uint64_t v14 = 48;
    uint64_t v106 = 24;
    int v15 = 1058642330;
    float v16 = 0.0;
    uint64_t v17 = 24;
    uint64_t v18 = 48;
    float v19 = 1.0;
    uint64_t v20 = 1;
    uint64_t v21 = 1;
    float v22 = 1.0;
    float v23 = 1.0;
    float v24 = 1.0;
LABEL_19:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v100);
    LOBYTE(v118) = v10;
    *(_WORD *)((char *)&v118 + 1) = v144;
    BYTE3(v118) = v145;
    *((float *)&v118 + 1) = v23;
    unint64_t v119 = __PAIR64__(LODWORD(v19), LODWORD(v22));
    float v120 = v16;
    uint64_t v121 = v21;
    uint64_t v122 = v20;
    uint64_t v123 = v13;
    uint64_t v124 = v99;
    float v125 = v11;
    uint64_t v126 = v18;
    char v127 = v107;
    *(_DWORD *)&v128[3] = *(_DWORD *)&v143[3];
    *(_DWORD *)uint64_t v128 = *(_DWORD *)v143;
    uint64_t v129 = v14;
    float v130 = v97;
    uint64_t v131 = v17;
    int v132 = v12;
    uint64_t v133 = v106;
    uint64_t v134 = v98;
    unint64_t v135 = v105;
    float v136 = v101;
    int v137 = v15;
    uint64_t v138 = v104;
    unint64_t v139 = v103;
    float v140 = v102;
    float v141 = v24;
    char v142 = 0;
    return sub_1B6AAC67C((uint64_t)&v118);
  }
  uint64_t v25 = v95;
  double v26 = v96;
  LOBYTE(v118) = 0;
  char v27 = sub_1B6E32E98();
  int v94 = 0;
  if (v27)
  {
    LOBYTE(v108) = 0;
    sub_1B6AAA05C();
    sub_1B6E32DF8();
    int v94 = v118;
  }
  LOBYTE(v118) = 1;
  float v28 = 1.0;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 1;
    sub_1B6E32DC8();
    float v23 = v29;
  }
  else
  {
    float v23 = 1.0;
  }
  LOBYTE(v118) = 2;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 2;
    sub_1B6E32DC8();
    float v28 = v30;
  }
  LOBYTE(v118) = 3;
  float v19 = 1.0;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 3;
    sub_1B6E32DC8();
    float v19 = v31;
  }
  LOBYTE(v118) = 4;
  float v16 = 0.0;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 4;
    sub_1B6E32DC8();
    float v16 = v32;
  }
  LOBYTE(v118) = 5;
  char v33 = sub_1B6E32E98();
  uint64_t v93 = v8;
  if (v33)
  {
    LOBYTE(v118) = 5;
    uint64_t v34 = sub_1B6E32DD8();
  }
  else
  {
    uint64_t v34 = 1;
  }
  LOBYTE(v118) = 6;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 6;
    uint64_t v92 = sub_1B6E32DD8();
  }
  else
  {
    uint64_t v92 = 1;
  }
  LOBYTE(v118) = 7;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 7;
    uint64_t v91 = sub_1B6E32DD8();
  }
  else
  {
    uint64_t v91 = 1;
  }
  LOBYTE(v118) = 8;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 8;
    uint64_t v99 = sub_1B6E32DD8();
  }
  else
  {
    uint64_t v99 = 10;
  }
  LOBYTE(v118) = 9;
  float v36 = 0.5;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 9;
    sub_1B6E32DC8();
    float v36 = v37;
  }
  LOBYTE(v118) = 10;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 10;
    uint64_t v90 = sub_1B6E32DD8();
  }
  else
  {
    uint64_t v90 = 48;
  }
  LOBYTE(v118) = 11;
  char v38 = sub_1B6E32E98();
  uint64_t v89 = v34;
  if (v38)
  {
    LOBYTE(v118) = 11;
    int v39 = sub_1B6E32DA8() & 1;
  }
  else
  {
    int v39 = 0;
  }
  LOBYTE(v118) = 12;
  char v40 = sub_1B6E32E98();
  int v107 = v39;
  if (v40)
  {
    LOBYTE(v118) = 12;
    uint64_t v88 = sub_1B6E32DD8();
  }
  else
  {
    uint64_t v88 = 48;
  }
  LOBYTE(v118) = 13;
  float v41 = 0.25;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 13;
    sub_1B6E32DC8();
    float v41 = v42;
  }
  LOBYTE(v118) = 14;
  char v43 = sub_1B6E32E98();
  float v97 = v41;
  if (v43)
  {
    LOBYTE(v118) = 14;
    uint64_t v44 = sub_1B6E32DD8();
  }
  else
  {
    uint64_t v44 = 24;
  }
  LOBYTE(v118) = 15;
  int v45 = 0;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 15;
    sub_1B6E32DC8();
    int v45 = v46;
  }
  LOBYTE(v118) = 16;
  char v47 = sub_1B6E32E98();
  uint64_t v87 = v5;
  if (v47)
  {
    LOBYTE(v118) = 16;
    uint64_t v48 = sub_1B6E32DD8();
    uint64_t v86 = v44;
    uint64_t v106 = v48;
  }
  else
  {
    uint64_t v86 = v44;
    uint64_t v106 = 24;
  }
  uint64_t v49 = 0x6F6C6C6548;
  LOBYTE(v118) = 17;
  char v50 = sub_1B6E32E98();
  int v85 = v45;
  if (v50)
  {
    LOBYTE(v118) = 17;
    uint64_t v51 = sub_1B6E32D98();
    unint64_t v105 = v52;
    uint64_t v49 = v51;
  }
  else
  {
    unint64_t v105 = 0xE500000000000000;
  }
  float v53 = v41;
  LOBYTE(v118) = 18;
  char v54 = sub_1B6E32E98();
  uint64_t v98 = v49;
  if (v54)
  {
    float v11 = v36;
    LOBYTE(v118) = 18;
    sub_1B6E32DC8();
    float v101 = v55;
  }
  else
  {
    float v101 = 1.0;
    float v11 = v36;
  }
  float v22 = v28;
  LOBYTE(v118) = 19;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 19;
    sub_1B6E32DC8();
    uint64_t v146 = 0;
    int v57 = v56;
  }
  else
  {
    int v57 = 1058642330;
  }
  LOBYTE(v118) = 20;
  uint64_t v58 = v93;
  char v59 = sub_1B6E32E98();
  int v84 = v57;
  if (v59)
  {
    LOBYTE(v108) = 20;
    sub_1B6AAC6EC();
    sub_1B6E32DF8();
    uint64_t v146 = 0;
    uint64_t v60 = v118;
    unint64_t v61 = v119;
    float v62 = v120;
  }
  else
  {
    uint64_t v146 = 0;
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    float v62 = 14.0;
  }
  LOBYTE(v118) = 21;
  uint64_t v63 = v87;
  char v64 = sub_1B6E32E98();
  float v24 = 1.0;
  unint64_t v103 = v61;
  uint64_t v104 = v60;
  float v102 = v62;
  if (v64)
  {
    LOBYTE(v118) = 21;
    uint64_t v65 = v146;
    sub_1B6E32DC8();
    uint64_t v146 = v65;
    if (v65)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v58, v63);
LABEL_67:
      char v10 = v94;
      uint64_t v13 = v91;
      uint64_t v20 = v92;
      uint64_t v14 = v88;
      uint64_t v21 = v89;
      int v15 = v84;
      int v12 = v85;
      uint64_t v18 = v90;
      uint64_t v17 = v86;
      goto LABEL_19;
    }
    float v24 = v66;
  }
  LOBYTE(v118) = 22;
  if (sub_1B6E32E98())
  {
    LOBYTE(v118) = 22;
    uint64_t v67 = v146;
    char v68 = sub_1B6E32DA8();
    uint64_t v146 = v67;
    if (v67)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v93, v87);
      goto LABEL_67;
    }
    char v70 = v68;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v93, v87);
    int v69 = v70 & 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v58, v63);
    int v69 = 0;
  }
  LODWORD(v95) = v69;
  char v71 = v94;
  LOBYTE(v108) = v94;
  *(_WORD *)((char *)&v108 + 1) = v144;
  BYTE3(v108) = v145;
  *(void *)((char *)&v108 + 4) = __PAIR64__(LODWORD(v22), LODWORD(v23));
  *((float *)&v108 + 3) = v19;
  *(float *)&long long v109 = v16;
  uint64_t v72 = v89;
  uint64_t v73 = v91;
  uint64_t v74 = v92;
  *((void *)&v109 + 1) = v89;
  *(void *)&long long v110 = v92;
  uint64_t v76 = v98;
  uint64_t v75 = v99;
  *((void *)&v110 + 1) = v91;
  *(void *)&long long v111 = v99;
  *((float *)&v111 + 2) = v11;
  *(void *)&long long v112 = v90;
  BYTE8(v112) = v107;
  HIDWORD(v112) = *(_DWORD *)&v143[3];
  *(_DWORD *)((char *)&v112 + 9) = *(_DWORD *)v143;
  uint64_t v77 = v88;
  *(void *)&long long v113 = v88;
  *((float *)&v113 + 2) = v53;
  *(void *)&long long v114 = v86;
  int v78 = v85;
  DWORD2(v114) = v85;
  *(void *)&long long v115 = v106;
  *((void *)&v115 + 1) = v98;
  *(void *)&long long v116 = v105;
  *((void *)&v116 + 1) = __PAIR64__(v84, LODWORD(v101));
  *(void *)&v117[0] = v104;
  *((void *)&v117[0] + 1) = v103;
  *(void *)&v117[1] = __PAIR64__(LODWORD(v24), LODWORD(v102));
  BYTE8(v117[1]) = v69;
  sub_1B6AAC6B4((uint64_t)&v108);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v100);
  LOBYTE(v118) = v71;
  *(_WORD *)((char *)&v118 + 1) = v144;
  BYTE3(v118) = v145;
  *((float *)&v118 + 1) = v23;
  unint64_t v119 = __PAIR64__(LODWORD(v19), LODWORD(v22));
  float v120 = v16;
  uint64_t v121 = v72;
  uint64_t v122 = v74;
  uint64_t v123 = v73;
  uint64_t v124 = v75;
  float v125 = v11;
  uint64_t v126 = v90;
  char v127 = v107;
  *(_DWORD *)&v128[3] = *(_DWORD *)&v143[3];
  *(_DWORD *)uint64_t v128 = *(_DWORD *)v143;
  uint64_t v129 = v77;
  float v130 = v53;
  uint64_t v131 = v86;
  int v132 = v78;
  uint64_t v133 = v106;
  uint64_t v134 = v76;
  unint64_t v135 = v105;
  float v136 = v101;
  int v137 = v84;
  uint64_t v138 = v104;
  unint64_t v139 = v103;
  float v140 = v102;
  float v141 = v24;
  char v142 = v95;
  uint64_t result = sub_1B6AAC67C((uint64_t)&v118);
  long long v79 = v117[0];
  v26[8] = v116;
  v26[9] = v79;
  *(_OWORD *)((char *)v26 + 153) = *(_OWORD *)((char *)v117 + 9);
  long long v80 = v113;
  v26[4] = v112;
  v26[5] = v80;
  long long v81 = v115;
  v26[6] = v114;
  v26[7] = v81;
  long long v82 = v109;
  *double v26 = v108;
  v26[1] = v82;
  long long v83 = v111;
  v26[2] = v110;
  v26[3] = v83;
  return result;
}

unint64_t sub_1B6AAC628()
{
  unint64_t result = qword_1E9DD4F50;
  if (!qword_1E9DD4F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F50);
  }
  return result;
}

uint64_t sub_1B6AAC67C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AAC6B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B6AAC6EC()
{
  unint64_t result = qword_1E9DD4F58;
  if (!qword_1E9DD4F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F58);
  }
  return result;
}

unint64_t sub_1B6AAC740()
{
  unint64_t result = qword_1E9DD4F68;
  if (!qword_1E9DD4F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F68);
  }
  return result;
}

unsigned __int8 *sub_1B6AAC794@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1B6AAC7A0(unint64_t *a1, unsigned char *a2)
{
  unint64_t result = sub_1B6AAB0E4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B6AAC7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6AAA718(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6AAC7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6AAA7B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6AACB5C);
}

uint64_t sub_1B6AAC82C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6AAA5C4(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DC9E4, a2);
}

unsigned char *sub_1B6AAC85C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 9;
  return result;
}

unsigned char *sub_1B6AAC870@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = (*result < 6u) & (0x25u >> *result);
  return result;
}

unsigned char *sub_1B6AAC890@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = (*result < 8u) & (0xFDu >> *result);
  return result;
}

unsigned char *sub_1B6AAC8B0@<X0>(unsigned char *result@<X0>, char *a2@<X8>)
{
  if (*result) {
    BOOL v2 = *result == 5;
  }
  else {
    BOOL v2 = 1;
  }
  char v3 = v2;
  *a2 = v3;
  return result;
}

unsigned char *sub_1B6AAC8C8@<X0>(unsigned char *result@<X0>, char *a2@<X8>)
{
  if (*result) {
    BOOL v2 = *result == 9;
  }
  else {
    BOOL v2 = 1;
  }
  char v3 = v2;
  *a2 = v3;
  return result;
}

unsigned char *sub_1B6AAC8E0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = (*result < 9uLL) & (0x1DAu >> *result);
  return result;
}

unsigned char *sub_1B6AAC900@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 2;
  return result;
}

unsigned char *sub_1B6AAC914@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 3;
  return result;
}

unsigned char *sub_1B6AAC928@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 8;
  return result;
}

unsigned char *sub_1B6AAC93C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 6;
  return result;
}

uint64_t sub_1B6AAC950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6AAA718(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6AAC980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6AAA7B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6AACA6C);
}

unsigned char *sub_1B6AAC9B0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 1;
  return result;
}

unsigned char *sub_1B6AAC9C4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = (*result < 9uLL) & (0x1D8u >> *result);
  return result;
}

unsigned char *sub_1B6AAC9E4@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 4;
  return result;
}

uint64_t sub_1B6AAC9F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6AAA5C4(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D9564, a2);
}

unsigned char *sub_1B6AACA28@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = (*result < 9uLL) & (0x18Au >> *result);
  return result;
}

void *sub_1B6AACA48(void *a1)
{
  return sub_1B66CE644(a1, **(unsigned char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1B6AACA6C(uint64_t a1)
{
  return sub_1B6AACB88(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CE698);
}

uint64_t sub_1B6AACA98()
{
  return sub_1B66D6B80(**(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 8), *(void *)(v0 + 24), *(void *)(v0 + 32), *(float *)(*(void *)(v0 + 16) + 16));
}

void *sub_1B6AACAD8(void *a1)
{
  return sub_1B66CE6EC(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), **(float **)(v1 + 16));
}

uint64_t sub_1B6AACAFC()
{
  return sub_1B66D6D1C(**(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 8), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void *sub_1B6AACB38(void *a1)
{
  return sub_1B66CE740(a1, **(unsigned char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1B6AACB5C(uint64_t a1)
{
  return sub_1B6AACB88(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CE794);
}

uint64_t sub_1B6AACB88(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, **(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

unint64_t sub_1B6AACBB4()
{
  unint64_t result = qword_1E9DD4F70;
  if (!qword_1E9DD4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PrimitiveGenerator.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AACCD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimitiveGenerator.CodingKeys()
{
  return &type metadata for PrimitiveGenerator.CodingKeys;
}

uint64_t sub_1B6AACD10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SimpleFontDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for SimpleFontDescription(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SimpleFontDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleFontDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleFontDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleFontDescription()
{
  return &type metadata for SimpleFontDescription;
}

unsigned char *storeEnumTagSinglePayload for PrimitiveGenerator.PrimitiveType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AACF58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimitiveGenerator.PrimitiveType()
{
  return &type metadata for PrimitiveGenerator.PrimitiveType;
}

unint64_t sub_1B6AACF94()
{
  unint64_t result = qword_1E9DD4F78;
  if (!qword_1E9DD4F78)
  {
    sub_1B62CB280(255, &qword_1E9DD4F80, (uint64_t)&type metadata for PrimitiveGenerator.PrimitiveType, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F78);
  }
  return result;
}

unint64_t sub_1B6AAD014()
{
  unint64_t result = qword_1E9DD4F88;
  if (!qword_1E9DD4F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F88);
  }
  return result;
}

unint64_t sub_1B6AAD06C()
{
  unint64_t result = qword_1E9DD4F90;
  if (!qword_1E9DD4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F90);
  }
  return result;
}

unint64_t sub_1B6AAD0C4()
{
  unint64_t result = qword_1E9DD4F98;
  if (!qword_1E9DD4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4F98);
  }
  return result;
}

unint64_t sub_1B6AAD11C()
{
  unint64_t result = qword_1E9DD4FA0;
  if (!qword_1E9DD4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FA0);
  }
  return result;
}

unint64_t sub_1B6AAD170()
{
  unint64_t result = qword_1E9DD4FB0;
  if (!qword_1E9DD4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FB0);
  }
  return result;
}

void sub_1B6AAD1C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SimpleFontDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AAD2F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleFontDescription.CodingKeys()
{
  return &type metadata for SimpleFontDescription.CodingKeys;
}

unint64_t sub_1B6AAD334()
{
  unint64_t result = qword_1E9DD4FC0;
  if (!qword_1E9DD4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FC0);
  }
  return result;
}

unint64_t sub_1B6AAD38C()
{
  unint64_t result = qword_1E9DD4FC8;
  if (!qword_1E9DD4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FC8);
  }
  return result;
}

unint64_t sub_1B6AAD3E4()
{
  unint64_t result = qword_1E9DD4FD0;
  if (!qword_1E9DD4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Static()
{
  return &type metadata for Static;
}

ValueMetadata *type metadata accessor for SpaceOverride()
{
  return &type metadata for SpaceOverride;
}

ValueMetadata *type metadata accessor for LastFrameWorldTransform()
{
  return &type metadata for LastFrameWorldTransform;
}

ValueMetadata *type metadata accessor for Parent()
{
  return &type metadata for Parent;
}

ValueMetadata *type metadata accessor for InverseWorldTransform()
{
  return &type metadata for InverseWorldTransform;
}

ValueMetadata *type metadata accessor for WorldTransform()
{
  return &type metadata for WorldTransform;
}

double sub_1B6AAD49C(unint64_t a1, int32x2_t a2)
{
  sub_1B633C690(a1, 0, 0, 1, 0, 0, 1, 0, (uint64_t)v24, a2, 0, 1);
  uint64_t v4 = v24[0];
  uint64_t v3 = v24[1];
  sub_1B633C598((uint64_t)v24, (uint64_t)v27);
  if (v27[64])
  {
    float32x4_t v23 = (float32x4_t)xmmword_1B6E4F300;
  }
  else
  {
    v5.i64[0] = v4;
    v5.i64[1] = v3;
    float32x4_t v23 = v5;
  }
  unint64_t v6 = sub_1B62D054C(a1);
  if (v8) {
    return *(double *)v23.i64;
  }
  sub_1B633C690(v6, 0, 0, 1, 0, 0, 1, 0, (uint64_t)v25, v7, 0, 1);
  uint64_t v10 = v25[0];
  uint64_t v9 = v25[1];
  uint64_t v12 = v25[2];
  uint64_t v11 = v25[3];
  uint64_t v14 = v25[4];
  uint64_t v13 = v25[5];
  uint64_t v16 = v25[6];
  uint64_t v15 = v25[7];
  sub_1B633C598((uint64_t)v25, (uint64_t)v26);
  if (v26[64])
  {
    float32x4_t v17 = (float32x4_t)xmmword_1B6E4F370;
    float32x4_t v18 = (float32x4_t)xmmword_1B6E4F2E0;
    float32x4_t v19 = (float32x4_t)xmmword_1B6E4F320;
    float32x4_t v20 = (float32x4_t)xmmword_1B6E4F300;
  }
  else
  {
    v20.i64[0] = v10;
    v20.i64[1] = v9;
    v19.i64[0] = v12;
    v19.i64[1] = v11;
    v18.i64[0] = v14;
    v18.i64[1] = v13;
    v17.i64[0] = v16;
    v17.i64[1] = v15;
  }
  *(void *)&double v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v23.f32[0]), v19, *(float32x2_t *)v23.f32, 1), v18, v23, 2), v17, v23, 3).u64[0];
  return v21;
}

uint64_t sub_1B6AAD6A8(unint64_t a1, uint64_t a2)
{
  int v3 = a1;
  unint64_t v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return MEMORY[0x1E4FBC860];
  }
  swift_retain();
  if (v3 < 0
    || v3 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 != -1)
    && *(_DWORD *)(v5 + 12 * v3 + 8) != v4)
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = sub_1B6965010(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * v3) + 32));
  swift_release();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    int64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v15 = MEMORY[0x1E4FBC860];
      sub_1B6C3D398(0, v9, 0);
      uint64_t v10 = 0;
      uint64_t v6 = v15;
      do
      {
        uint64_t v11 = *(void *)(v8 + 8 * v10 + 32);
        unint64_t v13 = *(void *)(v15 + 16);
        unint64_t v12 = *(void *)(v15 + 24);
        if (v13 >= v12 >> 1) {
          sub_1B6C3D398(v12 > 1, v13 + 1, 1);
        }
        ++v10;
        *(void *)(v15 + 16) = v13 + 1;
        uint64_t v14 = v15 + 16 * v13;
        *(void *)(v14 + 32) = v11;
        *(void *)(v14 + 40) = a2;
      }
      while (v9 != v10);
    }
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1B6AAD834(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 != -1 || (uint64_t result = 0, v3))
  {
    uint64_t result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
        && (uint64_t v6 = (unsigned int *)(v5 + 12 * (int)a1),
            sub_1B62CD3E0(*(void *)(*(void *)(v1 + 136) + 8 * (int)*v6 + 32), (uint64_t)&type metadata for Children, *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v6+ 2) << 32), v1, &v8), v8))
      {
        uint64_t v8 = (void *)*v8;
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        return v7;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

double sub_1B6AAD94C(unint64_t a1, int32x2_t a2)
{
  if (a1 != 0xFFFFFFFF
    && (uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      sub_1B633C4F4(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_DWORD *)(v4 + 12 * (int)a1), *(_WORD *)(v4 + 12 * (int)a1 + 4), 64, v2, (uint64_t)v7);
      sub_1B6311EC0((uint64_t)v7, (uint64_t)v10, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
      if ((v11 & 1) == 0) {
        return v10[0];
      }
    }
  }
  sub_1B633C690(a1, 0, 0, 1, 0, 0, 1, 0, (uint64_t)&v8, a2, 0, 1);
  double v5 = v8;
  sub_1B633C598((uint64_t)&v8, (uint64_t)v9);
  if ((v9[64] & 1) == 0) {
    return v5;
  }
  *(void *)&double result = 1065353216;
  return result;
}

uint64_t sub_1B6AADAEC(void *a1)
{
  uint64_t v2 = *v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v6 = v2;
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B62E9EB4(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
  sub_1B62E1F38((unint64_t *)&unk_1E9DD8570, (void (*)(void))sub_1B6657A10);
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B6AADBF0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B691DD0C(v5, a1, a2);
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_unknownObjectRelease();
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_1B6AADC6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3 = a3;
  LODWORD(v4) = a1;
  unint64_t v5 = HIDWORD(a3);
  unint64_t v6 = HIDWORD(a1);
  BOOL v8 = a1 != a3 || HIDWORD(a1) != HIDWORD(a3);
  if (v8 && a2 != 0)
  {
    do
    {
      BOOL v11 = v4 == -1 && v6 == 0;
      BOOL v8 = v11;
      if (v11) {
        break;
      }
      swift_retain();
      if ((v4 & 0x80000000) != 0
        || (unint64_t v12 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries),
            (int)v4 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
        || (uint64_t v13 = *v12, v14 = *v12 + 12 * (int)v4, v15 = *(__int16 *)(v14 + 4), v6 != -1)
        && *(_DWORD *)(v14 + 8) != v6
        || (uint64_t v16 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v13 + 12 * (int)v4) + 32),
            uint64_t v17 = *(void *)(v16 + 48),
            (uint64_t v18 = *(void *)(v17 + 16)) == 0))
      {
LABEL_33:
        swift_release();
        return 1;
      }
      float32x4_t v19 = (void *)(v17 + 56);
      while ((ValueMetadata *)*(v19 - 3) != &type metadata for Parent)
      {
        v19 += 5;
        if (!--v18) {
          goto LABEL_33;
        }
      }
      unint64_t v4 = *(void *)(*(void *)(v16 + 128) + *v19 + 8 * v15);
      swift_release();
      unint64_t v6 = HIDWORD(v4);
    }
    while (v4 != v3 || HIDWORD(v4) != v5);
  }
  return v8;
}

uint64_t sub_1B6AADDB4(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 && (sub_1B6AADC6C(a1, a2, a3) & 1) == 0)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v16 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v25[0] = 0;
    swift_retain();
    sub_1B6B33E34(v16, v25, 0xD00000000000002FLL, 0x80000001B6F461B0);
    swift_release();
    return swift_release();
  }
  else
  {
    BOOL v8 = a3 == -1 && HIDWORD(a3) == 0;
    char v9 = v8;
    if (v8) {
      goto LABEL_15;
    }
    swift_retain();
    if ((a3 & 0x80000000) != 0) {
      goto LABEL_14;
    }
    if ((int)a3 >= *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
      goto LABEL_14;
    }
    uint64_t v10 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) != -1 && *(_DWORD *)(v10 + 12 * (int)a3 + 8) != HIDWORD(a3)) {
      goto LABEL_14;
    }
    unint64_t v18 = sub_1B6964FAC(*(void *)(*(void *)(a4 + 136) + 8 * *(int *)(v10 + 12 * (int)a3) + 32), *(_DWORD *)(v10 + 12 * (int)a3), *(_WORD *)(v10 + 12 * (int)a3 + 4), 8, a4);
    char v20 = v19;
    uint64_t result = swift_release();
    if ((v20 & 1) != 0 || (v18 == -1 ? (BOOL v21 = HIDWORD(v18) == 0) : (BOOL v21 = 0), v21))
    {
LABEL_15:
      if (a2 && (swift_retain(), char v11 = sub_1B631EA84(a1), swift_release(), (v11 & 1) != 0))
      {
        v25[0] = a1;
        if ((v9 & 1) == 0)
        {
          uint64_t v12 = swift_retain();
          MEMORY[0x1F4188790](v12, v13);
          sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6AAF744);
          swift_release();
        }
        swift_retain();
        sub_1B6AAEFA4(a3, a1);
      }
      else
      {
        if (v9) {
          return sub_1B6AAE14C(a3, a4);
        }
        uint64_t v14 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v14)
        {
          int v15 = *(unsigned __int8 *)(v14 + 80);
          MEMORY[0x1BA9B8670](v14 + 48);
          uint64_t v14 = *(void *)(v14 + 56);
        }
        else
        {
          int v15 = 0;
        }
        swift_unknownObjectUnownedInit();
        v23[0] = a4;
        _OWORD v23[2] = v14;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        char v24 = v15;
        sub_1B636C4E0((uint64_t)v23, (uint64_t)v25);
        sub_1B6A61F04((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, a3);
        sub_1B636C450((uint64_t)v25);
        if (v15) {
          sub_1B6A667F0(1);
        }
      }
      swift_release();
      return sub_1B6AAE14C(a3, a4);
    }
    if (!a2 || (v18 == a1 ? (BOOL v22 = HIDWORD(v18) == HIDWORD(a1)) : (BOOL v22 = 0), !v22))
    {
      swift_retain();
      sub_1B6AAEAC4(a3, v18);
LABEL_14:
      swift_release();
      goto LABEL_15;
    }
  }
  return result;
}

uint64_t sub_1B6AAE14C(unint64_t a1, uint64_t a2)
{
  swift_retain();
  BOOL v4 = sub_1B62EC0CC((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FDE0, a1);
  uint64_t result = swift_release();
  if (!v4)
  {
    if (a1 == 0xFFFFFFFF
      || (swift_retain(), uint64_t v6 = sub_1B62D054C(a1), v8 = v7, swift_release(), (v8 & 1) != 0)
      || (swift_retain(),
          BOOL v9 = sub_1B62EC0CC((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F51710, v6),
          swift_release(),
          !v9))
    {
      return sub_1B6D15090(a1, a2);
    }
    else
    {
      return sub_1B6D15234(a1, a2);
    }
  }
  return result;
}

uint64_t sub_1B6AAE258(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6792298();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

double sub_1B6AAE320@<D0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1B6E4F300;
  a1[1] = xmmword_1B6E4F320;
  double result = 0.0;
  a1[2] = xmmword_1B6E4F2E0;
  a1[3] = xmmword_1B6E4F370;
  return result;
}

uint64_t sub_1B6AAE34C(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  __n128 v15 = a4;
  __n128 v16 = a5;
  __n128 v13 = a2;
  __n128 v14 = a3;
  sub_1B62B1874(0, &qword_1E9DD4070, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  char v11 = (char *)&v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62B1B2C();
  sub_1B6E33A88();
  __n128 v21 = v13;
  __n128 v22 = v14;
  __n128 v23 = v15;
  __n128 v24 = v16;
  uint64_t v17 = 0;
  char v18 = 1;
  uint64_t v19 = 0x65756C6176;
  unint64_t v20 = 0xE500000000000000;
  sub_1B6792298();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6AAE4FC(void *a1)
{
  return sub_1B6AAE34C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1B6AAE51C(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAF784();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AAE558(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAF784();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6AAE594(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6AAE6AC(a1, a2, a3, &qword_1E9DD4FD8, (uint64_t (*)(void))sub_1B6AAF784, (uint64_t)&type metadata for Static.CodingKeys, (void (*)(void))sub_1B6AAF784);
}

uint64_t sub_1B6AAE5E4(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAFCB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AAE620(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAFCB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6AAE65C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6AAE6AC(a1, a2, a3, &qword_1E9DD5028, (uint64_t (*)(void))sub_1B6AAFCB0, (uint64_t)&type metadata for Fixed.CodingKeys, (void (*)(void))sub_1B6AAFCB0);
}

uint64_t sub_1B6AAE6AC(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B62B1874(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  __n128 v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6AAE7E8(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAFC5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AAE824(uint64_t a1)
{
  unint64_t v2 = sub_1B6AAFC5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6AAE860(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6AAE6AC(a1, a2, a3, &qword_1E9DD5018, (uint64_t (*)(void))sub_1B6AAFC5C, (uint64_t)&type metadata for Beamed.CodingKeys, (void (*)(void))sub_1B6AAFC5C);
}

void sub_1B6AAE8B0()
{
  qword_1E9E495E0 = (uint64_t)&unk_1F0F54F88;
}

void *sub_1B6AAE8C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  double result = sub_1B6AAF620(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1B6AAE8F0(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6E335E8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B6AAE984@<X0>(void *a1@<X8>)
{
  if (qword_1E9DCC578 != -1) {
    swift_once();
  }
  *a1 = qword_1E9E495E0;

  return swift_bridgeObjectRetain();
}

unint64_t sub_1B6AAE9F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B6AAF7D8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6AAEA1C(void *a1)
{
  char v2 = *v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  char v6 = v2;
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B66C6494();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B6AAEAC4(uint64_t a1, unint64_t a2)
{
  if (sub_1B62EC0CC((uint64_t)&type metadata for Children, (uint64_t)&off_1F0FA3910, a2))
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
    if (v5)
    {
      char v6 = *(unsigned char *)(v5 + 80);
      MEMORY[0x1BA9B8670](v5 + 48);
      uint64_t v5 = *(void *)(v5 + 56);
    }
    else
    {
      char v6 = 0;
    }
    swift_unknownObjectUnownedInit();
    unint64_t v28 = v2;
    uint64_t v30 = v5;
    swift_unknownObjectUnownedAssign();
    swift_unownedRetain();
    swift_unknownObjectRelease();
    LOBYTE(v31) = v6;
    sub_1B636C4E0((uint64_t)&v28, (uint64_t)v38);
    sub_1B6987D8C((uint64_t)v38, (uint64_t)v36);
    uint64_t KeyPath = swift_getKeyPath();
    if (a2 == 0xFFFFFFFF
      || (unint64_t v11 = v36[0], swift_unownedRetainStrong(), v12 = (int32x2_t *)sub_1B6AAD834(a2), swift_release(), !v12))
    {
      swift_release();
    }
    else
    {
      unint64_t v27 = HIDWORD(a2);
      double v35 = v12;
      int32x2_t v13 = v12[2];
      if (v13)
      {
        uint64_t v14 = 0;
        __n128 v15 = (_DWORD *)&v12[4] + 1;
        while (*(v15 - 1) != a1 || *v15 != HIDWORD(a1))
        {
          v15 += 2;
          if (*(void *)&v13 == ++v14) {
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRetain();
        sub_1B69F0350(v14);
      }
      else
      {
LABEL_15:
        uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        unint64_t v28 = 0;
        unint64_t v29 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        unint64_t v28 = 0x20797469746E45;
        unint64_t v29 = 0xE700000000000000;
        sub_1B681F698();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B681F698();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        unint64_t v18 = v28;
        unint64_t v19 = v29;
        uint64_t v20 = sub_1B6E32148();
        unint64_t v28 = 0;
        (*(void (**)(uint64_t, unint64_t *, unint64_t, unint64_t))(*(void *)v17 + 88))(v20, &v28, v18, v19);
        swift_release();
        swift_bridgeObjectRelease();
      }
      __n128 v21 = v35;
      if ((sub_1B69197F8(v12, v35) & 1) == 0)
      {
        swift_unownedRetainStrong();
        swift_release();
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        uint64_t v22 = swift_unownedRetainStrong();
        v26[1] = v26;
        unint64_t v28 = (unint64_t)v21;
        MEMORY[0x1F4188790](v22, v23);
        _OWORD v25[2] = KeyPath;
        v25[3] = &v28;
        sub_1B66C8508(a2, (uint64_t)sub_1B6AAF768, (uint64_t)v25);
        swift_release();
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        if (v37 == 1)
        {
          swift_unownedRetainStrong();
          unint64_t v28 = __PAIR64__(v27, a2);
          unint64_t v29 = v11;
          sub_1B67452EC();
          uint64_t v32 = v24;
          char v33 = &off_1F0F7FE30;
          uint64_t v30 = KeyPath;
          float v31 = v21;
          char v34 = 11;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1B6A62610((uint64_t)&v28);
          swift_release();
          sub_1B67421B0((uint64_t)&v28);
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B636C450((uint64_t)v36);
    uint64_t result = sub_1B636C450((uint64_t)v38);
    if (v6) {
      return sub_1B6A667F0(1);
    }
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v29 = 0xE700000000000000;
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v8 = sub_1B6E32148();
    unint64_t v28 = 0;
    (*(void (**)(uint64_t, unint64_t *, uint64_t, unint64_t))(*(void *)v7 + 88))(v8, &v28, 0x20797469746E45, 0xE700000000000000);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6AAEFA4(unint64_t a1, unint64_t a2)
{
  __int32 v4 = a1;
  unint64_t v5 = HIDWORD(a1);
  BOOL v6 = sub_1B62EC0CC((uint64_t)&type metadata for Children, (uint64_t)&off_1F0FA3910, a2);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
  if (!v6)
  {
    if (v7)
    {
      int v9 = *(unsigned __int8 *)(v7 + 80);
      MEMORY[0x1BA9B8670](v7 + 48);
      uint64_t v7 = *(void *)(v7 + 56);
    }
    else
    {
      int v9 = 0;
    }
    swift_unknownObjectUnownedInit();
    v34[0] = v2;
    v34[2] = v7;
    swift_unknownObjectUnownedAssign();
    swift_unownedRetain();
    swift_unknownObjectRelease();
    char v35 = v9;
    sub_1B636C4E0((uint64_t)v34, (uint64_t)v26);
    sub_1B62E9EB4(0, &qword_1EB980C50, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBBE00]);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1B6E77050;
    *(_DWORD *)(v22 + 32) = v4;
    *(_DWORD *)(v22 + 36) = v5;
    sub_1B68528A4(v22, a2);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B636C450((uint64_t)v26);
    if (!v9) {
      return result;
    }
    return sub_1B6A667F0(1);
  }
  if (v7)
  {
    int v8 = *(unsigned __int8 *)(v7 + 80);
    MEMORY[0x1BA9B8670](v7 + 48);
    uint64_t v7 = *(void *)(v7 + 56);
  }
  else
  {
    int v8 = 0;
  }
  swift_unknownObjectUnownedInit();
  v26[0] = v2;
  uint64_t v27 = v7;
  swift_unknownObjectUnownedAssign();
  swift_unownedRetain();
  swift_unknownObjectRelease();
  LOBYTE(v28) = v8;
  sub_1B636C4E0((uint64_t)v26, (uint64_t)v34);
  sub_1B6987D8C((uint64_t)v34, (uint64_t)v32);
  uint64_t KeyPath = swift_getKeyPath();
  if (a2 == 0xFFFFFFFF
    || (uint64_t v11 = v32[0], swift_unownedRetainStrong(), v12 = (int32x2_t *)sub_1B6AAD834(a2), swift_release(), !v12))
  {
    swift_release();
  }
  else
  {
    unint64_t v24 = HIDWORD(a2);
    int v25 = v8;
    swift_bridgeObjectRetain();
    int32x2_t v13 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int32x2_t v13 = (int32x2_t *)sub_1B633F784(0, *(void *)&v12[2] + 1, 1, (char *)v12);
    }
    unint64_t v15 = (unint64_t)v13[2];
    unint64_t v14 = (unint64_t)v13[3];
    if (v15 >= v14 >> 1) {
      int32x2_t v13 = (int32x2_t *)sub_1B633F784(v14 > 1, v15 + 1, 1, (char *)v13);
    }
    _OWORD v13[2] = (int32x2_t)(v15 + 1);
    uint64_t v16 = &v13[v15];
    v16[4].i32[0] = v4;
    v16[4].i32[1] = v5;
    if ((sub_1B69197F8(v12, v13) & 1) == 0)
    {
      swift_unownedRetainStrong();
      swift_release();
      if (swift_unknownObjectUnownedLoadStrong()) {
        swift_unknownObjectRelease();
      }
      uint64_t v17 = swift_unownedRetainStrong();
      v26[0] = v13;
      MEMORY[0x1F4188790](v17, v18);
      _OWORD v23[2] = KeyPath;
      void v23[3] = v26;
      sub_1B66C8508(a2, (uint64_t)sub_1B6AAFE84, (uint64_t)v23);
      swift_release();
      if (swift_unknownObjectUnownedLoadStrong()) {
        swift_unknownObjectRelease();
      }
      unsigned int v19 = v24;
      if (v33 == 1)
      {
        swift_unownedRetainStrong();
        v26[0] = __PAIR64__(v19, a2);
        v26[1] = v11;
        sub_1B67452EC();
        uint64_t v29 = v20;
        uint64_t v30 = &off_1F0F7FE30;
        uint64_t v27 = KeyPath;
        unint64_t v28 = v13;
        char v31 = 11;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1B6A62610((uint64_t)v26);
        swift_release();
        sub_1B67421B0((uint64_t)v26);
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v8) = v25;
  }
  sub_1B636C450((uint64_t)v32);
  uint64_t result = sub_1B636C450((uint64_t)v34);
  if (v8) {
    return sub_1B6A667F0(1);
  }
  return result;
}

BOOL sub_1B6AAF390(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  sub_1B697E3B4(a1, a2, (uint64_t)&v21, a3, a4, a5);
  uint64_t v10 = (void *)sub_1B6AAD6A8(a1, a2);
  uint64_t v11 = v10;
  uint64_t v12 = v10[2];
  if (v12)
  {
    uint64_t v13 = v10[4];
    uint64_t v14 = v10[5];
    swift_retain();
    swift_bridgeObjectRetain();
    LOBYTE(v13) = sub_1B6AAF390(v13, v14, a3, a4, a5);
    swift_release();
    swift_bridgeObjectRelease();
    if (v13)
    {
      unint64_t v15 = v11 + 7;
      do
      {
        BOOL v16 = --v12 == 0;
        if (!v12) {
          break;
        }
        uint64_t v17 = v15 + 2;
        uint64_t v18 = *(v15 - 1);
        uint64_t v19 = *v15;
        swift_retain();
        swift_bridgeObjectRetain();
        LOBYTE(v18) = sub_1B6AAF390(v18, v19, a3, a4, a5);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v15 = v17;
      }
      while ((v18 & 1) != 0);
    }
    else
    {
      BOOL v16 = 0;
    }
  }
  else
  {
    BOOL v16 = 1;
  }
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  return v16;
}

BOOL sub_1B6AAF508(unint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain_n();
  sub_1B697E4BC(a1, a2, (uint64_t)&v17, a3);
  BOOL v6 = (void *)sub_1B6AAD6A8(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = v6[2];
  if (v8)
  {
    uint64_t v9 = v6[4];
    uint64_t v10 = v6[5];
    swift_retain();
    LOBYTE(v9) = sub_1B6AAF508(v9, v10, a3);
    swift_release();
    if (v9)
    {
      uint64_t v11 = v7 + 7;
      do
      {
        BOOL v12 = --v8 == 0;
        if (!v8) {
          break;
        }
        uint64_t v13 = v11 + 2;
        uint64_t v14 = *(v11 - 1);
        uint64_t v15 = *v11;
        swift_retain();
        LOBYTE(v14) = sub_1B6AAF508(v14, v15, a3);
        swift_release();
        uint64_t v11 = v13;
      }
      while ((v14 & 1) != 0);
    }
    else
    {
      BOOL v12 = 0;
    }
  }
  else
  {
    BOOL v12 = 1;
  }
  swift_bridgeObjectRelease();
  swift_release_n();
  return v12;
}

void *sub_1B6AAF620(void *a1)
{
  uint64_t v3 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1) {
    goto LABEL_7;
  }
  sub_1B62C14BC(v6, v6[3]);
  uint64_t v4 = sub_1B6E33538();
  uint64_t v3 = (void *)v4;
  if (v4 >= 5u)
  {
    sub_1B6E32998();
    swift_allocError();
    sub_1B6E32948();
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
LABEL_7:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v3;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

void *sub_1B6AAF744(void *a1)
{
  return sub_1B6B712D4(a1, **(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B6AAF768()
{
  return sub_1B6712058();
}

unint64_t sub_1B6AAF784()
{
  unint64_t result = qword_1E9DD4FE0;
  if (!qword_1E9DD4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FE0);
  }
  return result;
}

unint64_t sub_1B6AAF7D8(void *a1)
{
  unint64_t v3 = (unint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v1)
  {
    sub_1B62C14BC(v5, v5[3]);
    sub_1B66C6440();
    sub_1B6E33518();
    unint64_t v3 = v6;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

unint64_t sub_1B6AAF8B4()
{
  unint64_t result = qword_1EB97EBC8;
  if (!qword_1EB97EBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EBC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParentedToScene()
{
  return &type metadata for ParentedToScene;
}

ValueMetadata *type metadata accessor for Depth()
{
  return &type metadata for Depth;
}

ValueMetadata *type metadata accessor for Static.CodingKeys()
{
  return &type metadata for Static.CodingKeys;
}

ValueMetadata *type metadata accessor for Beamed()
{
  return &type metadata for Beamed;
}

ValueMetadata *type metadata accessor for Fixed()
{
  return &type metadata for Fixed;
}

ValueMetadata *type metadata accessor for Children()
{
  return &type metadata for Children;
}

ValueMetadata *type metadata accessor for NotInHierarchy()
{
  return &type metadata for NotInHierarchy;
}

unsigned char *_s3VFX11EntitySpaceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AAFA44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySpace()
{
  return &type metadata for EntitySpace;
}

unint64_t sub_1B6AAFA80()
{
  unint64_t result = qword_1E9DD4FE8;
  if (!qword_1E9DD4FE8)
  {
    sub_1B62E9EB4(255, &qword_1E9DD4FF0, (uint64_t)&type metadata for EntitySpace, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FE8);
  }
  return result;
}

unint64_t sub_1B6AAFB00()
{
  unint64_t result = qword_1E9DD4FF8;
  if (!qword_1E9DD4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD4FF8);
  }
  return result;
}

unint64_t sub_1B6AAFB58()
{
  unint64_t result = qword_1E9DD5000;
  if (!qword_1E9DD5000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5000);
  }
  return result;
}

unint64_t sub_1B6AAFBB0()
{
  unint64_t result = qword_1E9DD5008;
  if (!qword_1E9DD5008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5008);
  }
  return result;
}

unint64_t sub_1B6AAFC08()
{
  unint64_t result = qword_1E9DD5010;
  if (!qword_1E9DD5010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5010);
  }
  return result;
}

unint64_t sub_1B6AAFC5C()
{
  unint64_t result = qword_1E9DD5020;
  if (!qword_1E9DD5020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5020);
  }
  return result;
}

unint64_t sub_1B6AAFCB0()
{
  unint64_t result = qword_1E9DD5030;
  if (!qword_1E9DD5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5030);
  }
  return result;
}

ValueMetadata *type metadata accessor for Fixed.CodingKeys()
{
  return &type metadata for Fixed.CodingKeys;
}

ValueMetadata *type metadata accessor for Beamed.CodingKeys()
{
  return &type metadata for Beamed.CodingKeys;
}

unint64_t sub_1B6AAFD28()
{
  unint64_t result = qword_1E9DD5038;
  if (!qword_1E9DD5038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5038);
  }
  return result;
}

unint64_t sub_1B6AAFD80()
{
  unint64_t result = qword_1E9DD5040;
  if (!qword_1E9DD5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5040);
  }
  return result;
}

unint64_t sub_1B6AAFDD8()
{
  unint64_t result = qword_1E9DD5048;
  if (!qword_1E9DD5048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5048);
  }
  return result;
}

unint64_t sub_1B6AAFE30()
{
  unint64_t result = qword_1E9DD5050;
  if (!qword_1E9DD5050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5050);
  }
  return result;
}

uint64_t sub_1B6AAFE84()
{
  return sub_1B6AAF768();
}

uint64_t sub_1B6AAFEA0(uint64_t a1)
{
  uint64_t v2 = v1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B68EA098(0, *(void *)(v4 + 16));
  }
  else
  {
    *uint64_t v2 = sub_1B6785CD0(0, *(void *)(v4 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (char **)(v2 + 3);
  int v6 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = v2[3];
  if (v6)
  {
    sub_1B68E9708(0, *(void *)(v7 + 16));
  }
  else
  {
    *uint64_t v5 = (char *)sub_1B67858B8(0, *(void *)(v7 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (char **)(v2 + 4);
  int v9 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = v2[4];
  if (v9)
  {
    sub_1B68E9708(0, *(void *)(v10 + 16));
  }
  else
  {
    void *v8 = (char *)sub_1B67858B8(0, *(void *)(v10 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v2 + 5;
  int v12 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = v2[5];
  if (v12)
  {
    sub_1B68E9708(0, *(void *)(v13 + 16));
  }
  else
  {
    *uint64_t v11 = (uint64_t)sub_1B67858B8(0, *(void *)(v13 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + 1;
  int v15 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = v2[1];
  if (v15)
  {
    uint64_t result = sub_1B68E96F0(0, *(void *)(v16 + 16));
    if (!a1) {
      return result;
    }
  }
  else
  {
    *uint64_t v14 = sub_1B6785964(0, *(void *)(v16 + 24) >> 1);
    uint64_t result = swift_bridgeObjectRelease();
    if (!a1) {
      return result;
    }
  }
  __asm { FMOV            V0.4S, #1.0 }
  unsigned int v61 = HIDWORD(_Q0);
  uint64_t v23 = a1;
  do
  {
    uint64_t v24 = sub_1B6AB0A2C(result, -1000.0, 1000.0);
    unsigned int v64 = v25;
    uint64_t v26 = sub_1B6AB0A2C(v24, -1000.0, 1000.0);
    unsigned int v63 = v27;
    sub_1B6AB0A2C(v26, -1000.0, 1000.0);
    unsigned int v62 = v28;
    uint64_t v29 = (char *)*v2;
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v29;
    if ((v30 & 1) == 0)
    {
      uint64_t v29 = sub_1B68C60D8(0, *((void *)v29 + 2) + 1, 1, v29);
      *uint64_t v2 = v29;
    }
    unint64_t v32 = *((void *)v29 + 2);
    unint64_t v31 = *((void *)v29 + 3);
    if (v32 >= v31 >> 1) {
      uint64_t v29 = sub_1B68C60D8(v31 > 1, v32 + 1, 1, v29);
    }
    *(void *)&long long v33 = __PAIR64__(v63, v64);
    *((void *)&v33 + 1) = v62;
    *((void *)v29 + 2) = v32 + 1;
    char v34 = &v29[32 * v32];
    *((_OWORD *)v34 + 2) = v33;
    *((void *)v34 + 6) = 0;
    *uint64_t v2 = v29;
    double v35 = drand48();
    double v36 = drand48();
    double v37 = drand48();
    drand48();
    uint64_t v38 = v2[1];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    v2[1] = v38;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B629CE28(0, *(void *)(v38 + 16) + 1, 1, (char *)v38);
      uint64_t v38 = result;
      *uint64_t v14 = result;
    }
    unint64_t v40 = *(void *)(v38 + 16);
    unint64_t v39 = *(void *)(v38 + 24);
    if (v40 >= v39 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B629CE28(v39 > 1, v40 + 1, 1, (char *)v38);
      uint64_t v38 = result;
    }
    *(float *)&unsigned int v41 = v35;
    *(float *)&unsigned int v42 = v36;
    *(float *)&unsigned int v43 = v37;
    *(void *)&long long v44 = __PAIR64__(v42, v41);
    *((void *)&v44 + 1) = __PAIR64__(v61, v43);
    *(void *)(v38 + 16) = v40 + 1;
    *(_OWORD *)(v38 + 16 * v40 + 32) = v44;
    *uint64_t v14 = v38;
    --v23;
  }
  while (v23);
  uint64_t v45 = a1 + 15;
  if (a1 + 15 < 0) {
    uint64_t v45 = a1 + 30;
  }
  if ((unint64_t)(a1 + 30) >= 0x1F)
  {
    uint64_t v46 = 0;
    unint64_t v47 = v45 & 0xFFFFFFFFFFFFFFF0;
    uint64_t v48 = 32;
    do
    {
      long long v65 = xmmword_1B6E50340;
      if (v46 < a1) {
        long long v65 = *(_OWORD *)(*v2 + v48);
      }
      uint64_t v49 = *v5;
      char v50 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v5 = v49;
      if ((v50 & 1) == 0)
      {
        uint64_t v49 = sub_1B6397840(0, *((void *)v49 + 2) + 1, 1, v49);
        *uint64_t v5 = v49;
      }
      unint64_t v52 = *((void *)v49 + 2);
      unint64_t v51 = *((void *)v49 + 3);
      if (v52 >= v51 >> 1) {
        uint64_t v49 = sub_1B6397840(v51 > 1, v52 + 1, 1, v49);
      }
      *((void *)v49 + 2) = v52 + 1;
      *(_DWORD *)&v49[4 * v52 + 32] = v65;
      *uint64_t v5 = v49;
      float v53 = *v8;
      char v54 = swift_isUniquelyReferenced_nonNull_native();
      void *v8 = v53;
      if ((v54 & 1) == 0)
      {
        float v53 = sub_1B6397840(0, *((void *)v53 + 2) + 1, 1, v53);
        void *v8 = v53;
      }
      unint64_t v56 = *((void *)v53 + 2);
      unint64_t v55 = *((void *)v53 + 3);
      if (v56 >= v55 >> 1) {
        float v53 = sub_1B6397840(v55 > 1, v56 + 1, 1, v53);
      }
      *((void *)v53 + 2) = v56 + 1;
      *(_DWORD *)&v53[4 * v56 + 32] = DWORD1(v65);
      void *v8 = v53;
      uint64_t v57 = *v11;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v11 = v57;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B6397840(0, *(void *)(v57 + 16) + 1, 1, (char *)v57);
        uint64_t v57 = result;
        *uint64_t v11 = result;
      }
      unint64_t v59 = *(void *)(v57 + 16);
      unint64_t v58 = *(void *)(v57 + 24);
      if (v59 >= v58 >> 1)
      {
        uint64_t result = (uint64_t)sub_1B6397840(v58 > 1, v59 + 1, 1, (char *)v57);
        uint64_t v57 = result;
      }
      ++v46;
      *(void *)(v57 + 16) = v59 + 1;
      *(_DWORD *)(v57 + 4 * v59 + 32) = DWORD2(v65);
      *uint64_t v11 = v57;
      v48 += 32;
    }
    while (v47 != v46);
  }
  return result;
}

void sub_1B6AB03DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((void *)*v0 + 2);
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_1B6C169F8((uint64_t)v1);
    }
    int v3 = v0[3];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v3 = sub_1B6C1683C((uint64_t)v3);
    }
    uint64_t v4 = v0[4];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_1B6C1683C((uint64_t)v4);
    }
    uint64_t v5 = v0[5];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_1B6C1683C((uint64_t)v5);
    }
    uint64_t v7 = 0;
    uint64_t v8 = 8;
    do
    {
      uint64_t v10 = (float32x2_t *)&v1[v7];
      uint64_t v11 = *(void *)&v1[v7 + 48];
      if (v11)
      {
        *(float *)v6.i32 = (float)v11;
        *(float32x2_t *)&long long v9 = vdiv_f32(v10[4], (float32x2_t)vdup_lane_s32(v6, 0));
        *((float *)&v9 + 2) = v10[5].f32[0] / (float)v11;
        HIDWORD(v9) = 0;
        *(_OWORD *)v10[4].f32 = v9;
      }
      else
      {
        long long v9 = *(_OWORD *)v10[4].f32;
      }
      *(_DWORD *)&v3[4 * v8] = v9;
      *(_DWORD *)&v4[4 * v8] = DWORD1(v9);
      *(_DWORD *)&v5[4 * v8] = DWORD2(v9);
      v7 += 32;
      ++v8;
    }
    while (v8 - v2 != 8);
    *uint64_t v0 = v1;
    v0[4] = v4;
    v0[5] = v5;
    v0[3] = v3;
  }
}

void sub_1B6AB0510(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
  a1[2] = 100;
  a1[3] = v1;
  a1[4] = v1;
  a1[5] = v1;
}

uint64_t sub_1B6AB052C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B636E6E4((uint64_t)&type metadata for kClusterState, (uint64_t)&off_1F0F628B8, v1, (void (*)(uint64_t))sub_1B6AB1DC0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6AB0620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, unint64_t a8, uint64_t a9)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = a7[6];
  uint64_t v11 = a7[7];
  unint64_t v12 = v11 - v10;
  if (v11 - v10 < 0 || HIDWORD(v12) || (a8 & 0x8000000000000000) != 0 || HIDWORD(a8))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    uint64_t result = kcluster_update_compare(a3, a1, a4, v12, a8);
    if (v11 != v10 && result)
    {
      uint64_t v29 = a9 + 104;
      do
      {
        uint64_t v15 = *(unsigned int *)(a4 + 4 * v10);
        if (v15 == a8) {
          goto LABEL_11;
        }
        uint64_t v16 = a7[1];
        uint64_t v17 = *(void *)(v16 + 40);
        uint64_t v18 = *(void *)(v17 + 112);
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19)
        {
          uint64_t v20 = *(void *)(v17 + 96);
          char v21 = (uint64_t *)(v18 + 56);
          while ((ValueMetadata *)*(v21 - 3) != &type metadata for kCluster)
          {
            v21 += 5;
            if (!--v19) {
              goto LABEL_21;
            }
          }
          uint64_t v22 = *v21;
          v31[0] = a8;
          swift_retain();
          if (*(void *)(v20 + v22) == v31[0])
          {
            unint64_t v32 = &type metadata for kCluster;
            long long v33 = &off_1F0FA7D28;
            v31[0] = a8;
            char v34 = 3;
            sub_1B63B2A48(v29, (uint64_t)v31, v10, 0, v16, a9);
            sub_1B6391400((uint64_t)v31);
          }
          swift_release();
        }
LABEL_21:
        uint64_t v23 = *(void *)(v16 + 40);
        uint64_t v24 = *(void *)(v23 + 112);
        uint64_t v25 = *(void *)(v24 + 16);
        if (v25)
        {
          uint64_t v26 = *(void *)(v23 + 96);
          unsigned int v27 = (uint64_t *)(v24 + 56);
          while ((ValueMetadata *)*(v27 - 3) != &type metadata for kCluster)
          {
            v27 += 5;
            if (!--v25) {
              goto LABEL_8;
            }
          }
          uint64_t v28 = *v27;
          v31[0] = v15;
          swift_retain();
          if (*(void *)(v26 + v28) == v31[0]) {
            goto LABEL_10;
          }
        }
        else
        {
LABEL_8:
          swift_retain();
        }
        unint64_t v32 = &type metadata for kCluster;
        long long v33 = &off_1F0FA7D28;
        v31[0] = v15;
        char v34 = 2;
        sub_1B63B2A48(v29, (uint64_t)v31, v10, 0, v16, a9);
        sub_1B6391400((uint64_t)v31);
LABEL_10:
        uint64_t result = swift_release();
LABEL_11:
        ++v10;
      }
      while (v10 != v11);
    }
  }
  return result;
}

uint64_t sub_1B6AB08E8(void *a1, uint64_t *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v9;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for kClusteringSystem()
{
  return self;
}

const char *sub_1B6AB09B0()
{
  return "kClustering";
}

uint64_t sub_1B6AB09C4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 176);
  swift_retain();
  sub_1B6B3A354((uint64_t)&type metadata for kClusterState, (uint64_t)&off_1F0F628B8, v1);

  return swift_release();
}

uint64_t sub_1B6AB0A2C(uint64_t a1, float a2, float a3)
{
  float v6 = a3 - a2;
  uint64_t v8 = 0;
  uint64_t result = MEMORY[0x1BA9B84E0](&v8, 8);
  if ((float)((float)(v6 * (float)((float)(v8 & 0xFFFFFF) * 0.000000059605)) + a2) == a3) {
    return sub_1B6AB0A2C(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1B6AB0AB8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6AB0B60(uint64_t a1)
{
  uint64_t v232 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void **)(a1 + 176);
  swift_retain();
  sub_1B6B3B22C((uint64_t)&type metadata for kClusterState, (uint64_t)&off_1F0F628B8, v2, v151);
  swift_release();
  uint64_t v154 = v151[0];
  long long v149 = v152;
  long long v150 = v153;
  uint64_t v148 = v151[0];
  unint64_t v3 = *(void *)(v151[0] + 16);
  if (v3 <= 1)
  {
    v227[0] = *((void *)&v153 + 1);
    *(void *)&v217[0] = v153;
    *(void *)&v210[0] = *((void *)&v152 + 1);
    *(void *)&long long v202 = v151[1];
    sub_1B6AB052C(a1);
    sub_1B62D8C3C((uint64_t)&v154);
    sub_1B62D8C3C((uint64_t)&v202);
    sub_1B62D8C3C((uint64_t)v210);
    sub_1B62D8C3C((uint64_t)v217);
    return sub_1B62D8C3C((uint64_t)v227);
  }
  uint64_t v107 = a1;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v193 = qword_1EB997A18;
  int v194 = 0;
  char v195 = 2;
  uint64_t v196 = 0;
  char v197 = 2;
  uint64_t v198 = 0;
  swift_retain();
  sub_1B67CE420((uint64_t)v157);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980B70, &qword_1EB97E870, (unint64_t *)&qword_1EB97E840);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  *(void *)(v4 + 32) = &type metadata for kCluster;
  *(void *)(v4 + 40) = &off_1F0FA7D28;
  sub_1B63B9C44(v4, (uint64_t)v158);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v157);
  unint64_t v5 = *(void *)(v148 + 16);
  if (HIDWORD(v5))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  uint64_t v6 = (char *)*((void *)&v149 + 1);
  uint64_t v133 = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_1B6397840(0, *(void *)(*((void *)&v149 + 1) + 16), 0, *((char **)&v149 + 1));
  }
  uint64_t v7 = (char *)v150;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_1B6397840(0, *(void *)(v150 + 16), 0, (char *)v150);
  }
  uint64_t v8 = (char *)*((void *)&v150 + 1);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_1B6397840(0, *(void *)(*((void *)&v150 + 1) + 16), 0, *((char **)&v150 + 1));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v155[0] = v6 + 32;
  v155[1] = v7 + 32;
  v155[2] = v8 + 32;
  int v156 = v5;
  v179[0] = v158[0];
  v179[1] = v158[1];
  uint64_t v180 = v159;
  sub_1B62C9DA8(v107, (uint64_t)v179, 0x200000000, v199);
  sub_1B62CA210((uint64_t)v199, (uint64_t)v217, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v217[0])
  {
    long long v166 = v217[0];
    long long v167 = v217[1];
    uint64_t v168 = v218;
    uint64_t v124 = v223;
    if (v223 >= 1)
    {
      uint64_t v121 = v220;
      if (v220)
      {
        uint64_t v118 = v219;
        uint64_t v9 = v222;
        uint64_t v139 = v222[4];
        v138.i32[0] = *(unsigned __int8 *)(v221 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v112 = (uint64_t)(v222 + 6);
        uint64_t v115 = v221;
        long long v109 = v222 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        do
        {
          unint64_t v12 = (unsigned int *)(v118 + 48 * v10);
          uint64_t v144 = *v12;
          uint64_t v13 = v12[2];
          uint64_t v142 = v12[1];
          v137.i64[0] = *((void *)v12 + 2);
          uint64_t v14 = *((void *)v12 + 5);
          uint64_t v127 = *((void *)v12 + 4);
          uint64_t v130 = *((void *)v12 + 3);
          uint64_t v134 = v11;
          if (v138.i32[0])
          {
            uint64_t v15 = *(os_unfair_lock_s **)(v14 + 376);
            swift_retain();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v139);
          sub_1B62CA210(v112, (uint64_t)v226, &qword_1EB97DE20);
          uint64_t v16 = v9[4];
          uint64_t v17 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v9[6] = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
          v9[7] = v17;
          v109[1] = 0;
          v109[2] = 0;
          *long long v109 = 0;
          swift_release();
          v227[0] = v115;
          v227[1] = v14;
          v227[2] = v9;
          v227[3] = v13;
          v227[4] = (v142 - v144 + v13);
          v227[5] = v124;
          v227[6] = v144;
          v227[7] = v142;
          v227[8] = 0;
          v227[9] = 0;
          char v228 = 1;
          uint64_t v229 = v137.i64[0];
          uint64_t v230 = v130;
          uint64_t v231 = v127;
          uint64_t v18 = *(void *)(v14 + 40);
          uint64_t v19 = *(void *)(v18 + 112);
          uint64_t v20 = *(void *)(v19 + 16);
          if (v20)
          {
            uint64_t v21 = *(void *)(v18 + 96);
            uint64_t v22 = (void *)(v19 + 56);
            while ((ValueMetadata *)*(v22 - 3) != &type metadata for kCluster)
            {
              v22 += 5;
              if (!--v20)
              {
                unint64_t v23 = 0;
                goto LABEL_26;
              }
            }
            unint64_t v23 = *(void *)(v21 + *v22);
          }
          else
          {
            unint64_t v23 = 0;
          }
LABEL_26:
          uint64_t v24 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, (uint64_t *)v137.i64[0], v130, v127, (uint64_t)v9);
          uint64_t v26 = v24;
          if (v24) {
            uint64_t v27 = (v25 - v24) / 16;
          }
          else {
            uint64_t v27 = 0;
          }
          do
          {
            *(void *)&v210[0] = 0;
            MEMORY[0x1BA9B84E0](v210, 8);
          }
          while (((100 * *(void *)&v210[0]) & 0xFFFFFFFFFFFFFFF0) == 0);
          if ((uint64_t)v149 >= (uint64_t)((*(unint64_t *)&v210[0] * (unsigned __int128)0x64uLL) >> 64))
          {
            uint64_t v28 = ecs_stack_allocator_allocate(v9[4], 4 * (v142 - v144), 4);
            if (v26)
            {
              uint64_t v29 = v26;
              uint64_t v30 = v27;
            }
            else
            {
              uint64_t v29 = 0;
              uint64_t v30 = 0;
            }
            uint64_t v11 = v134;
            sub_1B6AB0620(v29, v30, (uint64_t)v155, (uint64_t)v28, v142 - v144, 0, v227, v23, (uint64_t)v9);
          }
          else
          {
            uint64_t v11 = v134;
          }
          v169[0] = v166;
          v169[1] = v167;
          uint64_t v170 = v168;
          sub_1B6345178(v9, (unsigned __int16 **)v169, (uint64_t)v226);
          sub_1B634507C((char *)v14);
          ecs_stack_allocator_pop_snapshot(v139);
          if (v138.i32[0])
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
          }
          swift_release();
          ++v10;
        }
        while (v10 != v121);
        uint64_t v133 = v11;
        sub_1B632F170(v199);
      }
    }
    sub_1B632F170(v199);
  }
  uint64_t v187 = qword_1EB997A18;
  int v188 = 0;
  char v189 = 2;
  uint64_t v190 = 0;
  char v191 = 2;
  uint64_t v192 = 0;
  swift_retain();
  sub_1B67CE420((uint64_t)v160);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1B6E77D10;
  *(void *)(v32 + 32) = &type metadata for kCluster;
  *(void *)(v32 + 40) = &off_1F0FA7D58;
  *(void *)(v32 + 48) = &type metadata for PointOfView;
  *(void *)(v32 + 56) = &off_1F0F56610;
  *(void *)(v32 + 64) = &type metadata for PointOfCulling;
  *(void *)(v32 + 72) = &off_1F0F64F58;
  sub_1B62AD184(v161);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v160);
  v177[0] = v161[0];
  v177[1] = v161[1];
  uint64_t v178 = v162;
  sub_1B62C9DA8(v107, (uint64_t)v177, 0x200000000, v200);
  sub_1B62CA210((uint64_t)v200, (uint64_t)v210, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v210[0])
  {
    if (v216 < 1 || (uint64_t v125 = v213) == 0)
    {
      uint64_t v74 = v107;
      uint64_t v75 = (char *)v148;
LABEL_92:
      sub_1B632F170(v200);
      uint64_t v76 = v133;
      goto LABEL_93;
    }
    uint64_t v33 = v215[4];
    int v34 = *(unsigned __int8 *)(v214 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v171[0] = v210[0];
    v171[1] = v210[1];
    uint64_t v172 = v211;
    uint64_t v113 = (uint64_t)(v215 + 6);
    uint64_t v116 = v212;
    v138.i64[0] = (uint64_t)(v215 + 13);
    float v140 = v215;
    long long v110 = v215 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v35 = 0;
    int v119 = v34;
    uint64_t v122 = v33;
    while (1)
    {
      uint64_t v131 = v35;
      double v36 = (unsigned int *)(v116 + 48 * v35);
      uint64_t v37 = *v36;
      uint64_t v128 = v36[1];
      uint64_t v38 = (uint64_t *)*((void *)v36 + 2);
      uint64_t v145 = *((void *)v36 + 3);
      uint64_t v39 = *((void *)v36 + 5);
      v137.i64[0] = *((void *)v36 + 4);
      if (v34)
      {
        unint64_t v40 = *(os_unfair_lock_s **)(v39 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v40);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v33);
      sub_1B62CA210(v113, (uint64_t)v225, &qword_1EB97DE20);
      uint64_t v41 = v140[4];
      uint64_t v42 = *(void *)(*(void *)(*(void *)(*(void *)(v39 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v140[6] = ecs_stack_allocator_allocate(v41, 48 * v42, 8);
      v140[7] = v42;
      v110[1] = 0;
      v110[2] = 0;
      *long long v110 = 0;
      swift_release();
      uint64_t v146 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v38, v145, v137.i64[0], (uint64_t)v140);
      if (v38)
      {
        if (v137.i64[0])
        {
          uint64_t v43 = v137.i64[0];
          uint64_t v44 = 0;
          while (1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v38[v44];
            uint64_t v48 = -1;
            float v49 = INFINITY;
            char v50 = (float *)(v148 + 40);
            do
            {
              float32x2_t v51 = vsub_f32(*(float32x2_t *)(v146 + 16 * v44), *(float32x2_t *)(v50 - 2));
              float v47 = COERCE_FLOAT(*(void *)(v146 + 16 * v44 + 8));
              float v52 = sqrtf((float)((float)(v47 - *v50) * (float)(v47 - *v50)) + vaddv_f32(vmul_f32(v51, v51)));
              if (v52 < v49) {
                uint64_t v48 = v45;
              }
              uint64_t v53 = v45 + 1;
              if (v52 < v49) {
                float v49 = v52;
              }
              v50 += 8;
              ++v45;
            }
            while (v3 != v53);
            uint64_t v54 = *(void *)(v39 + 40);
            uint64_t v55 = *(void *)(v54 + 112);
            uint64_t v56 = *(void *)(v55 + 16);
            if (v56)
            {
              uint64_t v57 = *(void *)(v54 + 96);
              unint64_t v58 = (uint64_t *)(v55 + 56);
              while ((ValueMetadata *)*(v58 - 3) != &type metadata for kCluster)
              {
                v58 += 5;
                if (!--v56)
                {
                  swift_retain();
                  uint64_t v43 = v137.i64[0];
                  goto LABEL_54;
                }
              }
              uint64_t v59 = *v58;
              *(void *)&long long v202 = v48;
              swift_retain();
              if (*(void *)(v57 + v59) == (void)v202)
              {
                swift_release();
                uint64_t v43 = v137.i64[0];
                goto LABEL_55;
              }
              uint64_t v43 = v137.i64[0];
            }
            else
            {
              swift_retain();
            }
LABEL_54:
            v204 = &off_1F0FA7D28;
            *((void *)&v203 + 1) = &type metadata for kCluster;
            *(void *)&long long v202 = v48;
            LOBYTE(v205) = 2;
            sub_1B63B2A48(v138.i64[0], (uint64_t)&v202, v46, 0, v39, (uint64_t)v140);
            sub_1B6391400((uint64_t)&v202);
            swift_release();
LABEL_55:
            if (++v44 == v43) {
              goto LABEL_71;
            }
          }
        }
        goto LABEL_71;
      }
      if (v37 != v128) {
        break;
      }
LABEL_71:
      sub_1B6345178(v140, (unsigned __int16 **)v171, (uint64_t)v225);
      sub_1B634507C((char *)v39);
      uint64_t v33 = v122;
      ecs_stack_allocator_pop_snapshot(v122);
      int v34 = v119;
      if (v119)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 376));
      }
      swift_release();
      uint64_t v35 = v131 + 1;
      if (v131 + 1 == v125)
      {
        sub_1B632F170(v200);
        uint64_t v74 = v107;
        uint64_t v75 = (char *)v148;
        goto LABEL_92;
      }
    }
    while (1)
    {
      uint64_t v60 = 0;
      uint64_t v62 = -1;
      float v63 = INFINITY;
      unsigned int v64 = (float *)(v148 + 40);
      do
      {
        float32x2_t v65 = vsub_f32(*(float32x2_t *)(v146 + 16 * v37), *(float32x2_t *)(v64 - 2));
        float v61 = COERCE_FLOAT(*(void *)(v146 + 16 * v37 + 8));
        float v66 = sqrtf((float)((float)(v61 - *v64) * (float)(v61 - *v64)) + vaddv_f32(vmul_f32(v65, v65)));
        if (v66 < v63) {
          uint64_t v62 = v60;
        }
        uint64_t v67 = v60 + 1;
        if (v66 < v63) {
          float v63 = v66;
        }
        v64 += 8;
        ++v60;
      }
      while (v3 != v67);
      uint64_t v68 = *(void *)(v39 + 40);
      uint64_t v69 = *(void *)(v68 + 112);
      uint64_t v70 = *(void *)(v69 + 16);
      if (v70)
      {
        uint64_t v71 = *(void *)(v68 + 96);
        uint64_t v72 = (uint64_t *)(v69 + 56);
        while ((ValueMetadata *)*(v72 - 3) != &type metadata for kCluster)
        {
          v72 += 5;
          if (!--v70) {
            goto LABEL_73;
          }
        }
        uint64_t v73 = *v72;
        *(void *)&long long v202 = v62;
        swift_retain();
        if (*(void *)(v71 + v73) == (void)v202) {
          goto LABEL_75;
        }
      }
      else
      {
LABEL_73:
        swift_retain();
      }
      v204 = &off_1F0FA7D28;
      *((void *)&v203 + 1) = &type metadata for kCluster;
      *(void *)&long long v202 = v62;
      LOBYTE(v205) = 2;
      sub_1B63B2A48(v138.i64[0], (uint64_t)&v202, v37, 0, v39, (uint64_t)v140);
      sub_1B6391400((uint64_t)&v202);
LABEL_75:
      swift_release();
      if (++v37 == v128) {
        goto LABEL_71;
      }
    }
  }
  uint64_t v74 = v107;
  uint64_t v75 = (char *)v148;
  uint64_t v76 = v133;
LABEL_93:
  uint64_t v181 = qword_1EB997A18;
  int v182 = 0;
  char v183 = 2;
  uint64_t v184 = 0;
  char v185 = 2;
  uint64_t v186 = 0;
  swift_retain();
  sub_1B67CE420((uint64_t)v163);
  swift_release();
  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_1B6E77050;
  *(void *)(v77 + 32) = &type metadata for kCluster;
  *(void *)(v77 + 40) = &off_1F0FA7D28;
  sub_1B63B9C44(v77, (uint64_t)v164);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v163);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v75 = sub_1B6C169F8((uint64_t)v75);
  }
  uint64_t v78 = 32;
  unint64_t v79 = v3;
  do
  {
    long long v80 = &v75[v78];
    *(void *)long long v80 = 0;
    *((void *)v80 + 1) = 0;
    *((void *)v80 + 2) = 0;
    v78 += 32;
    --v79;
  }
  while (v79);
  v175[0] = v164[0];
  v175[1] = v164[1];
  uint64_t v176 = v165;
  sub_1B62C9DA8(v74, (uint64_t)v175, 0x200000000, v201);
  sub_1B62CA210((uint64_t)v201, (uint64_t)&v202, (unint64_t *)&qword_1EB97DC50);
  if ((void)v202)
  {
    if (v209 >= 1)
    {
      uint64_t v117 = v206;
      if (v206)
      {
        uint64_t v143 = v208[4];
        int v141 = *(unsigned __int8 *)(v207 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v173[0] = v202;
        v173[1] = v203;
        uint64_t v111 = v205;
        uint64_t v114 = (uint64_t)(v208 + 6);
        uint64_t v174 = v204;
        uint64_t v147 = v208;
        long long v108 = v208 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v81 = 0;
        while (1)
        {
          uint64_t v135 = v76;
          long long v82 = (unsigned int *)(v111 + 48 * v81);
          uint64_t v83 = *((void *)v82 + 3);
          uint64_t v126 = (uint64_t *)*((void *)v82 + 2);
          uint64_t v129 = v82[1];
          uint64_t v84 = *((void *)v82 + 5);
          uint64_t v123 = *((void *)v82 + 4);
          uint64_t v132 = *v82;
          if (v141)
          {
            int v85 = *(os_unfair_lock_s **)(v84 + 376);
            swift_retain();
            os_unfair_lock_lock(v85);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v84 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v143);
          sub_1B62CA210(v114, (uint64_t)v224, &qword_1EB97DE20);
          uint64_t v86 = v147[4];
          uint64_t v87 = *(void *)(*(void *)(*(void *)(*(void *)(v84 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v147[6] = ecs_stack_allocator_allocate(v86, 48 * v87, 8);
          v147[7] = v87;
          v108[1] = 0;
          _OWORD v108[2] = 0;
          *long long v108 = 0;
          swift_release();
          uint64_t v88 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v126, v83, v123, (uint64_t)v147);
          float32x4_t v89 = 0uLL;
          if (v132 == v129)
          {
            uint64_t v76 = v135;
            float32x4_t v91 = v137;
            float32x4_t v90 = v138;
          }
          else
          {
            uint64_t v92 = v129 - v132;
            float32x4_t v90 = 0uLL;
            uint64_t v93 = (float32x4_t *)(v88 + 16 * v132);
            uint64_t v76 = v135;
            do
            {
              float32x4_t v94 = *v93++;
              float32x4_t v91 = v94;
              float32x4_t v90 = vaddq_f32(v90, v94);
              v91.i32[3] = v137.i32[3];
              v90.i32[3] = v138.i32[3];
              float32x4_t v89 = v90;
              --v92;
            }
            while (v92);
          }
          uint64_t v95 = *(void *)(v84 + 40);
          uint64_t v96 = *(void *)(v95 + 112);
          uint64_t v97 = *(void *)(v96 + 16);
          float32x4_t v137 = v91;
          float32x4_t v138 = v90;
          if (v97)
          {
            uint64_t v98 = *(void *)(v95 + 96);
            uint64_t v99 = (void *)(v96 + 56);
            while ((ValueMetadata *)*(v99 - 3) != &type metadata for kCluster)
            {
              v99 += 5;
              if (!--v97) {
                goto LABEL_113;
              }
            }
            int64_t v100 = *(void *)(v98 + *v99);
            if (v100 >= (uint64_t)v3) {
              goto LABEL_115;
            }
            float32x4_t v136 = v89;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_119:
            }
              uint64_t v75 = sub_1B6C169F8((uint64_t)v75);
          }
          else
          {
LABEL_113:
            float32x4_t v136 = v89;
            int64_t v100 = 0;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              goto LABEL_119;
            }
          }
          float v101 = (float32x4_t *)&v75[32 * v100];
          float32x4_t v102 = vaddq_f32(v136, v101[2]);
          v102.i32[3] = v120;
          v101[2] = v102;
          v101[3].i64[0] += v129 - v132;
LABEL_115:
          sub_1B6345178(v147, (unsigned __int16 **)v173, (uint64_t)v224);
          sub_1B634507C((char *)v84);
          ecs_stack_allocator_pop_snapshot(v143);
          if (v141)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 376));
          }
          swift_release();
          if (++v81 == v117)
          {
            sub_1B632F170(v201);
            uint64_t v74 = v107;
            break;
          }
        }
      }
    }
    sub_1B632F170(v201);
  }
  sub_1B6AB03DC();
  MEMORY[0x1F4188790](v103, v104);
  uint64_t v105 = v74;
  uint64_t v106 = *(void **)(v74 + 176);
  swift_retain();
  sub_1B636E6E4((uint64_t)&type metadata for kClusterState, (uint64_t)&off_1F0F628B8, v106, (void (*)(uint64_t))sub_1B6AB1DA4);
  swift_release();
  sub_1B62CA064((uint64_t)v164);
  sub_1B62CA064((uint64_t)v161);
  sub_1B62CA064((uint64_t)v158);
  sub_1B6AB052C(v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6AB1DA4(void *a1)
{
  return sub_1B6AB08E8(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1B6AB1DC0(void *a1)
{
  return sub_1B6AB0AB8(a1, *(uint64_t **)(v1 + 16));
}

ValueMetadata *type metadata accessor for kCluster()
{
  return &type metadata for kCluster;
}

uint64_t destroy for kClusterState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for kClusterState(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for kClusterState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for kClusterState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for kClusterState()
{
  return &type metadata for kClusterState;
}

unint64_t sub_1B6AB1FE4()
{
  unint64_t result = qword_1E9DD5058;
  if (!qword_1E9DD5058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5058);
  }
  return result;
}

uint64_t initializeWithCopy for RenderContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = a1 + 40;
  uint64_t v6 = a2 + 40;
  uint64_t v7 = *(void *)(a2 + 64);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v5, v6);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
    *(_OWORD *)(v5 + 16) = v9;
    *(void *)(v5 + 32) = *(void *)(v6 + 32);
  }
  unint64_t v10 = *(void *)(a2 + 80);
  if (v10 > 1)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v11;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  uint64_t v12 = *(void *)(a2 + 96);
  if (v12 == 1)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  else
  {
    *(void *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    swift_unknownObjectRetain();
  }
  uint64_t v13 = *(void *)(a2 + 120);
  if (v13 == 1)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
  }
  else
  {
    *(void *)(a1 + 120) = v13;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for RenderContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = a1 + 40;
  uint64_t v5 = (long long *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      sub_1B62C15DC((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
      goto LABEL_8;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 40);
  }
  else if (v6)
  {
    *(void *)(a1 + 64) = v6;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  long long v7 = *v5;
  long long v8 = v5[1];
  *(void *)(v4 + 32) = *((void *)v5 + 4);
  *(_OWORD *)uint64_t v4 = v7;
  *(_OWORD *)(v4 + 16) = v8;
LABEL_8:
  uint64_t v9 = *(void *)(a1 + 80);
  unint64_t v10 = *(void *)(a2 + 80);
  if (v9 == 1)
  {
    if (v10 >= 2) {
      goto LABEL_19;
    }
LABEL_14:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_20;
  }
  if (v10 == 1)
  {
    uint64_t v11 = sub_1B6AB252C;
LABEL_13:
    sub_1B6AB2584(a1 + 80, (uint64_t (*)(void))v11);
    goto LABEL_14;
  }
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 80) = v10;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    uint64_t v11 = sub_1B6AB246C;
    goto LABEL_13;
  }
  if (!v10) {
    goto LABEL_14;
  }
LABEL_19:
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
LABEL_20:
  uint64_t v12 = (long long *)(a1 + 96);
  uint64_t v14 = (long long *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) == 1)
  {
    if (v13 == 1)
    {
      long long v15 = *v14;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *uint64_t v12 = v15;
    }
    else
    {
      *(void *)(a1 + 96) = v13;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_unknownObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_1B6AB2584(a1 + 96, (uint64_t (*)(void))sub_1B6AB25E4);
    uint64_t v16 = *(void *)(a2 + 112);
    *uint64_t v12 = *v14;
    *(void *)(a1 + 112) = v16;
  }
  else
  {
    *(void *)(a1 + 96) = v13;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  uint64_t v17 = (long long *)(a1 + 120);
  uint64_t v19 = (long long *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120) == 1)
  {
    if (v18 == 1)
    {
      long long v20 = *v19;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      long long *v17 = v20;
    }
    else
    {
      *(void *)(a1 + 120) = v18;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_unknownObjectRetain();
    }
  }
  else if (v18 == 1)
  {
    sub_1B6AB2584(a1 + 120, (uint64_t (*)(void))sub_1B6AB25E4);
    uint64_t v21 = *(void *)(a2 + 136);
    long long *v17 = *v19;
    *(void *)(a1 + 136) = v21;
  }
  else
  {
    *(void *)(a1 + 120) = v18;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
  }
  return a1;
}

void sub_1B6AB246C()
{
  if (!qword_1E9DD5060)
  {
    sub_1B6AB24D4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD5060);
    }
  }
}

unint64_t sub_1B6AB24D4()
{
  unint64_t result = qword_1EB97D7F0;
  if (!qword_1EB97D7F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB97D7F0);
  }
  return result;
}

void sub_1B6AB252C()
{
  if (!qword_1E9DD5070)
  {
    sub_1B6AB246C();
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5070);
    }
  }
}

uint64_t sub_1B6AB2584(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1B6AB25E4()
{
  if (!qword_1EB97DAB0)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97DAB0);
    }
  }
}

__n128 initializeWithTake for RenderContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t storeEnumTagSinglePayload for RenderContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderContext()
{
  return &type metadata for RenderContext;
}

uint64_t sub_1B6AB26DC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = v1;
  if (v1 == 1)
  {
    long long v3 = (void *)v0;
    sub_1B6AB2BA4(v0, (uint64_t)v13);
    uint64_t v4 = v13[1];
    swift_retain();
    sub_1B635FC14((uint64_t)v13);
    swift_getKeyPath();
    uint64_t v5 = *(void *)(v4 + 176);
    swift_retain();
    uint64_t v2 = sub_1B6B3A598((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1F0F643E8, v5, (void (*)(void *__return_ptr, uint64_t))sub_1B6AB31D8);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    swift_release();
    swift_release();
    swift_release();
    if (!v2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v10 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v13[0] = 0;
      swift_retain();
      sub_1B6B33E34(v10, v13, 0xD000000000000017, 0x80000001B6F46250);
      swift_release();
      swift_release();
    }
    uint64_t v11 = v3[12];
    swift_unknownObjectRetain();
    sub_1B696D160(v11);
    v3[12] = v2;
    v3[13] = v7;
    v3[14] = v9;
  }
  sub_1B6AB31F0(v1);
  return v2;
}

uint64_t sub_1B6AB28E0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = v1;
  if (v1 == 1)
  {
    long long v3 = (void *)v0;
    sub_1B6AB2BA4(v0, (uint64_t)v13);
    uint64_t v4 = v13[1];
    swift_retain();
    sub_1B635FC14((uint64_t)v13);
    swift_getKeyPath();
    uint64_t v5 = *(void *)(v4 + 176);
    swift_retain();
    uint64_t v2 = sub_1B6B3A598((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1F0F643E8, v5, (void (*)(void *__return_ptr, uint64_t))sub_1B6AB31D8);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    swift_release();
    swift_release();
    swift_release();
    if (!v2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v10 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v13[0] = 0;
      swift_retain();
      sub_1B6B33E34(v10, v13, 0xD00000000000001BLL, 0x80000001B6F46270);
      swift_release();
      swift_release();
    }
    uint64_t v11 = v3[15];
    swift_unknownObjectRetain();
    sub_1B696D160(v11);
    v3[15] = v2;
    v3[16] = v7;
    v3[17] = v9;
  }
  sub_1B6AB31F0(v1);
  return v2;
}

uint64_t sub_1B6AB2AE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    sub_1B6AB2BA4(v1, (uint64_t)&v8);
    swift_retain();
    sub_1B635FC14((uint64_t)&v8);
    uint64_t v3 = sub_1B6357368();
    uint64_t v5 = v4;
    swift_release();
    uint64_t v6 = *(void *)(v1 + 80);
    sub_1B6311B24(v3);
    sub_1B6AB2BDC(v6);
    *(void *)(v1 + 80) = v3;
    *(void *)(v1 + 88) = v5;
  }
  sub_1B6AB2BEC(v2);
  return v3;
}

uint64_t sub_1B6AB2BA4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6AB2BDC(uint64_t result)
{
  if (result != 1) {
    return sub_1B69A1E9C(result);
  }
  return result;
}

uint64_t sub_1B6AB2BEC(uint64_t result)
{
  if (result != 1) {
    return sub_1B6311B24(result);
  }
  return result;
}

uint64_t sub_1B6AB2BFC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = (void *)result;
  if (qword_1EB97D6E8 != -1) {
    __n128 result = swift_once();
  }
  if (byte_1EB99799C != 1) {
    goto LABEL_9;
  }
  if (!v4[156])
  {
    if (v4[154])
    {
      swift_getObjectType();
      id v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedLength);
      uint64_t v7 = *(void *)a2;
      swift_retain();
      uint64_t v8 = sub_1B62F1868(0, (uint64_t)v6);
      uint64_t v10 = v9;
      uint64_t v12 = v11;
      swift_unknownObjectRetain();
      swift_release();
      v4[156] = v8;
      v4[157] = v10;
      v4[158] = v12;
      uint64_t v13 = swift_unknownObjectRetain();
      sub_1B62EC494(v13, v10, v12, 0);
      swift_unknownObjectRelease();
      uint64_t v14 = *(void *)(v7 + 272);
      swift_retain();
      sub_1B6383E40((uint64_t)v51);
      uint64_t v15 = *(void *)(*(void *)(*(void *)(v14 + 16) + 264) + 40);
      uint64_t v16 = *(void *)(v15 + 16);
      swift_retain();
      if (v16)
      {
        uint64_t v18 = v51[0];
        uint64_t v17 = v51[1];
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1B62B2CE0(v18, v17);
        if (v20)
        {
          uint64_t v21 = *(void *)(*(void *)(v15 + 56) + 8 * v19);
          swift_unknownObjectRetain();
          sub_1B62C7BF4((uint64_t)v51);
          swift_release();
          sub_1B62C7BF4((uint64_t)v51);
          goto LABEL_12;
        }
        sub_1B62C7BF4((uint64_t)v51);
      }
      swift_release();
      sub_1B62C7BF4((uint64_t)v51);
      uint64_t v21 = 0;
LABEL_12:
      swift_release();
      sub_1B6AB2BA4(a2, (uint64_t)v50);
      if (!v21)
      {
        uint64_t v22 = v50[0];
        uint64_t v23 = *(void *)(v50[0] + 240);
        swift_retain_n();
        sub_1B6BCB5A4(0xD000000000000015, 0x80000001B6F46290, v23, v22);
        swift_release_n();
      }
      sub_1B635FC14((uint64_t)v50);
      uint64_t v24 = swift_unknownObjectRetain();
      sub_1B6357350(v24, 30);
      swift_unknownObjectRelease();
      uint64_t v25 = v4 + 155;
      uint64_t v26 = swift_unknownObjectRetain();
      MEMORY[0x1BA9B3870](v26);
      if (*(void *)((v4[155] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v4[155] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B6E31C78();
      }
      sub_1B6E31CC8();
      sub_1B6E31C48();
      uint64_t v49 = *(void *)a2;
      uint64_t v27 = *(void *)(*(void *)a2 + 272);
      swift_retain();
      sub_1B6383E40((uint64_t)v52);
      uint64_t v28 = *(void *)(*(void *)(*(void *)(v27 + 16) + 264) + 40);
      uint64_t v29 = *(void *)(v28 + 16);
      swift_retain();
      if (v29)
      {
        uint64_t v31 = v52[0];
        uint64_t v30 = v52[1];
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_1B62B2CE0(v31, v30);
        if (v33)
        {
          uint64_t v34 = *(void *)(*(void *)(v28 + 56) + 8 * v32);
          swift_unknownObjectRetain();
          sub_1B62C7BF4((uint64_t)v52);
          uint64_t v35 = v34;
          swift_release();
          sub_1B62C7BF4((uint64_t)v52);
        }
        else
        {
          sub_1B62C7BF4((uint64_t)v52);
          swift_release();
          sub_1B62C7BF4((uint64_t)v52);
          uint64_t v35 = 0;
        }
      }
      else
      {
        swift_release();
        sub_1B62C7BF4((uint64_t)v52);
        uint64_t v35 = 0;
      }
      swift_release();
      sub_1B6357350(v35, 31);
      if (v35)
      {
        uint64_t v36 = swift_unknownObjectRetain();
        MEMORY[0x1BA9B3870](v36);
        if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B6E31C78();
        }
        sub_1B6E31CC8();
        sub_1B6E31C48();
      }
      uint64_t v37 = *(void *)(v49 + 272);
      swift_retain();
      sub_1B6383E40((uint64_t)v53);
      uint64_t v38 = *(void *)(*(void *)(*(void *)(v37 + 16) + 264) + 40);
      uint64_t v39 = *(void *)(v38 + 16);
      swift_retain();
      if (v39)
      {
        uint64_t v41 = v53[0];
        uint64_t v40 = v53[1];
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_1B62B2CE0(v41, v40);
        if (v43)
        {
          uint64_t v44 = *(void *)(*(void *)(v38 + 56) + 8 * v42);
          swift_unknownObjectRetain();
          sub_1B62C7BF4((uint64_t)v53);
          swift_release();
          sub_1B62C7BF4((uint64_t)v53);
LABEL_30:
          swift_release();
          sub_1B6357350(v44, 32);
          if (v44)
          {
            uint64_t v45 = swift_unknownObjectRetain();
            MEMORY[0x1BA9B3870](v45);
            if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B6E31C78();
            }
            sub_1B6E31CC8();
            sub_1B6E31C48();
          }
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_35;
        }
        sub_1B62C7BF4((uint64_t)v53);
      }
      swift_release();
      sub_1B62C7BF4((uint64_t)v53);
      uint64_t v44 = 0;
      goto LABEL_30;
    }
LABEL_9:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return result;
  }
LABEL_35:
  uint64_t v46 = *(void *)(*(void *)a2 + 376);
  swift_unknownObjectRetain();
  if (v46)
  {
    v53[13] = &unk_1F1077230;
    if (swift_dynamicCastObjCProtocolConditional())
    {
      swift_getObjectType();
      unint64_t v47 = swift_bridgeObjectRetain();
      sub_1B62E73B0(v47, 1, 2);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v48 = v4[158];
  *(_OWORD *)a3 = *((_OWORD *)v4 + 78);
  a3[2] = v48;
  return swift_unknownObjectRetain();
}

double sub_1B6AB31D8@<D0>(uint64_t a1@<X8>)
{
  return sub_1B6AB3200(a1);
}

uint64_t sub_1B6AB31F0(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRetain();
  }
  return result;
}

double sub_1B6AB3200@<D0>(uint64_t a1@<X8>)
{
  swift_getAtKeyPath();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1B6AB324C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E313D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B6E31418();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EB9854F8;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1EB997FF0;
  swift_retain();
  swift_release();
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = v15;
  v16[3] = a1;
  uint64_t v16[4] = a2;
  aBlock[4] = sub_1B6AB42D4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B639AA00;
  aBlock[3] = &unk_1F0FB8390;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1B6E313F8();
  v19[1] = MEMORY[0x1E4FBC860];
  sub_1B6367288((unint64_t *)&qword_1EB97D188, MEMORY[0x1E4FBCB00]);
  sub_1B6981C34();
  sub_1B6367288((unint64_t *)&qword_1EB97D198, (void (*)(uint64_t))sub_1B6981C34);
  sub_1B6E327B8();
  MEMORY[0x1BA9B3EB0](0, v13, v8, v17);
  _Block_release(v17);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_1B6AB35B0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_1B6E31808();
  MEMORY[0x1F4188790](v6 - 8, v7);
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((uint64_t)(0xFFFFFFFF00000001 * a2) >> 32 > a1) {
        goto LABEL_7;
      }
      return 0;
    case 2uLL:
      if (*(void *)(a2 + 24) - *(void *)(a2 + 16) > a1) {
        goto LABEL_7;
      }
      return 0;
    case 3uLL:
      if ((a1 & 0x8000000000000000) == 0) {
        return 0;
      }
      goto LABEL_7;
    default:
      if (BYTE6(a3) <= a1) {
        return 0;
      }
LABEL_7:
      unsigned __int8 v8 = 10;
      if ((sub_1B6E334B8() & 1) == 0)
      {
        if ((sub_1B6E315C8() & 1) == 0 || (sub_1B6B06D70(10, 0xE100000000000000) & 0xFFFFFF80) != 0) {
          unsigned __int8 v8 = 0;
        }
        else {
          unsigned __int8 v8 = sub_1B6B06D70(10, 0xE100000000000000);
        }
      }
      uint64_t v10 = sub_1B6E31008();
      unint64_t v12 = v11;
      sub_1B69EFE98(v8, v10, v11);
      uint64_t v13 = sub_1B6E31008();
      unint64_t v15 = v14;
      sub_1B6E317F8();
      uint64_t v9 = sub_1B6E317B8();
      sub_1B62C2360(v10, v12);
      sub_1B62C2360(v13, v15);
      return v9;
  }
}

uint64_t sub_1B6AB3840(uint64_t a1)
{
  uint64_t v4 = sub_1B6E314A8();
  sub_1B6E314A8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1BA9B3940](a1, TupleTypeMetadata2);
  sub_1B6E31D18();
  sub_1B6E31C68();
  sub_1B6E31D18();
  sub_1B6E31C68();
  sub_1B6E31D18();
  swift_getWitnessTable();
  sub_1B6E31AA8();
  return v4;
}

uint64_t sub_1B6AB3990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1, a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v11, v12);
  (*(void (**)(char *, double))(v15 + 16))((char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  sub_1B6E31D18();
  sub_1B6E31CE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, a6);
  sub_1B6E31D18();
  return sub_1B6E31CE8();
}

uint64_t sub_1B6AB3B24(uint64_t a1, uint64_t a2)
{
  return sub_1B6AB3990(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t sub_1B6AB3B30(uint64_t a1)
{
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1B6AB3B8C(uint64_t a1)
{
  return sub_1B6E332B8();
}

uint64_t sub_1B6AB3BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1B6E32EA8();
  sub_1B6E32DF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
}

uint64_t sub_1B6AB3CE0(uint64_t a1)
{
  unint64_t v2 = sub_1B6AB41BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AB3D1C(uint64_t a1)
{
  unint64_t v2 = sub_1B6AB41BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6AB3D58(void *a1)
{
  sub_1B6AB4160();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AB41BC();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6AB3E64()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if (qos_class_self())
  {
    uint64_t v1 = 0;
  }
  else
  {
    int v8 = 0;
    sched_param v7 = 0;
    uint64_t v2 = pthread_self();
    pthread_getschedparam(v2, &v8, &v7);
    uint64_t v1 = sub_1B6AB4048(v7.sched_priority);
  }
  MEMORY[0x1F4188790](v1, v0);
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB9854F8;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v4 = swift_release();
  MEMORY[0x1F4188790](v4, v5);
  sub_1B6E32218();
  return swift_release();
}

uint64_t sub_1B6AB401C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1B6AB4048(int a1)
{
  if (a1 > 37) {
    return 33;
  }
  if (a1 > 31) {
    return 25;
  }
  if (a1 > 20) {
    return 21;
  }
  if (a1 > 4) {
    return 17;
  }
  if ((a1 & 0x80000000) == 0) {
    return 9;
  }
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DummyCodable()
{
  return &type metadata for DummyCodable;
}

void sub_1B6AB4160()
{
  if (!qword_1E9DD5078)
  {
    sub_1B6AB41BC();
    unint64_t v0 = sub_1B6E33038();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5078);
    }
  }
}

unint64_t sub_1B6AB41BC()
{
  unint64_t result = qword_1E9DD5080;
  if (!qword_1E9DD5080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5080);
  }
  return result;
}

ValueMetadata *type metadata accessor for DummyCodable.CodingKeys()
{
  return &type metadata for DummyCodable.CodingKeys;
}

unint64_t sub_1B6AB4224()
{
  unint64_t result = qword_1E9DD5088;
  if (!qword_1E9DD5088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5088);
  }
  return result;
}

unint64_t sub_1B6AB427C()
{
  unint64_t result = qword_1E9DD5090;
  if (!qword_1E9DD5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5090);
  }
  return result;
}

uint64_t sub_1B6AB42DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t result = sub_1B62B2CE0(result, a2), (v6 & 1) != 0))
  {
    sched_param v7 = (uint64_t *)(*(void *)(a3 + 56) + 40 * result);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    uint64_t v11 = v7[2];
    uint64_t v10 = v7[3];
    uint64_t v12 = v7[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  a4[2] = v11;
  a4[3] = v10;
  a4[4] = v12;
  return result;
}

uint64_t sub_1B6AB4374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1B62B2CE0(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 32 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t (*sub_1B6AB4400(void *a1, unint64_t a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B6AD85F8(v4, a2 | ((HIDWORD(a2) & 1) << 32));
  return sub_1B6383298;
}

uint64_t (*sub_1B6AB4470(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B6AD8698(v4, a2);
  return sub_1B6383298;
}

__n128 sub_1B6AB44D0(void *a1)
{
  uint64_t v23 = *(void **)v1;
  uint64_t v21 = *(void *)(*(void *)v1 + 16);
  if (v21)
  {
    uint64_t v3 = a1[1];
    uint64_t v24 = *a1;
    uint64_t v4 = v23 + 6;
    uint64_t v5 = v21;
    while (1)
    {
      uint64_t v8 = *v4;
      uint64_t v7 = v4[1];
      uint64_t v9 = v4[2];
      uint64_t v10 = v4[3];
      uint64_t v11 = v4[4];
      uint64_t v12 = v4[5];
      BOOL v13 = *(v4 - 2) == v24 && *(v4 - 1) == v3;
      if (v13 || (sub_1B6E334B8() & 1) != 0)
      {
        BOOL v14 = v8 == a1[2] && v7 == a1[3];
        if (v14 || (sub_1B6E334B8())
          && (v9 == a1[4] && v10 == a1[5] || (sub_1B6E334B8() & 1) != 0)
          && (v11 == a1[6] && v12 == a1[7] || (sub_1B6E334B8() & 1) != 0))
        {
          break;
        }
      }
      v4 += 8;
      if (!--v5) {
        goto LABEL_21;
      }
    }
  }
  else
  {
LABEL_21:
    sub_1B6AD9050((uint64_t)a1);
    uint64_t v15 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_1B68C0EC0(0, v21 + 1, 1, v23);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      uint64_t v15 = sub_1B68C0EC0(v16 > 1, v17 + 1, 1, v15);
    }
    v15[2] = v17 + 1;
    uint64_t v18 = &v15[8 * v17];
    __n128 result = *(__n128 *)a1;
    long long v19 = *((_OWORD *)a1 + 1);
    long long v20 = *((_OWORD *)a1 + 3);
    *((_OWORD *)v18 + 4) = *((_OWORD *)a1 + 2);
    *((_OWORD *)v18 + 5) = v20;
    *((__n128 *)v18 + 2) = result;
    *((_OWORD *)v18 + 3) = v19;
    *uint64_t v22 = v15;
  }
  return result;
}

uint64_t sub_1B6AB4684(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 16);
  if (v6)
  {
    uint64_t result = v5[4];
    if (result == a1 && v5[5] == a2) {
      return result;
    }
    uint64_t result = sub_1B6E334B8();
    if (result) {
      return result;
    }
    uint64_t v9 = v6 - 1;
    if (v6 != 1)
    {
      uint64_t result = v5[6];
      if (result == a1 && v5[7] == a2) {
        return result;
      }
      uint64_t result = sub_1B6E334B8();
      if (result) {
        return result;
      }
      BOOL v14 = v5 + 9;
      while (--v9)
      {
        uint64_t result = *(v14 - 1);
        if (result != a1 || *v14 != a2)
        {
          v14 += 2;
          uint64_t result = sub_1B6E334B8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        return result;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B6335858(0, v6 + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v11 = v5[2];
  unint64_t v10 = v5[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B6335858(v10 > 1, v11 + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  v5[2] = v11 + 1;
  uint64_t v12 = &v5[2 * v11];
  void v12[4] = a1;
  v12[5] = a2;
  *(void *)uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6AB47C4(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_12:
    uint64_t v10 = swift_retain();
    MEMORY[0x1BA9B3870](v10);
    if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    return sub_1B6E31C48();
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v5 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = MEMORY[0x1BA9B4580](0, v3);
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 32);
    swift_retain();
  }
  if (*(void *)(v6 + 40) != *(void *)(a1 + 40) || *(void *)(v6 + 48) != *(void *)(a1 + 48))
  {
    char v8 = sub_1B6E334B8();
    uint64_t result = swift_release();
    if (v8) {
      return result;
    }
    if (v4 == 1) {
      goto LABEL_12;
    }
    if (v5)
    {
      uint64_t v11 = MEMORY[0x1BA9B4580](1, v3);
    }
    else
    {
      uint64_t v11 = *(void *)(v3 + 40);
      swift_retain();
    }
    if (*(void *)(v11 + 40) != *(void *)(a1 + 40) || *(void *)(v11 + 48) != *(void *)(a1 + 48))
    {
      char v12 = sub_1B6E334B8();
      uint64_t result = swift_release();
      if (v12) {
        return result;
      }
      uint64_t v13 = 0;
      uint64_t v14 = v4 - 2;
      while (v14 != v13)
      {
        if (v5)
        {
          uint64_t v15 = MEMORY[0x1BA9B4580](v13 + 2, v3);
        }
        else
        {
          uint64_t v15 = *(void *)(v3 + 8 * v13 + 48);
          swift_retain();
        }
        if (*(void *)(v15 + 40) == *(void *)(a1 + 40) && *(void *)(v15 + 48) == *(void *)(a1 + 48)) {
          goto LABEL_22;
        }
        char v17 = sub_1B6E334B8();
        uint64_t result = swift_release();
        ++v13;
        if (v17) {
          return result;
        }
      }
      goto LABEL_12;
    }
  }
LABEL_22:

  return swift_release();
}

void sub_1B6AB4A00(void *a1)
{
  uint64_t v2 = v1;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 40));
  sub_1B62C14BC(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_1B62C14BC(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v8 = *(void *)(v2 + 48);
  uint64_t v34 = v8 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v8 + 64);
  unint64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  int64_t v35 = v12;
  unint64_t v32 = v12 - 5;
  uint64_t v33 = v8;
LABEL_4:
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_18:
    uint64_t v18 = *(void *)(v8 + 56) + 24 * v15;
    uint64_t v19 = *(void *)v18;
    if (*(unsigned __int16 *)(*(void *)v18 + 30) >= 0x18u)
    {
      uint64_t v20 = *(void *)(*(void *)(v8 + 48) + 8 * v15);
      uint64_t v21 = *(unsigned __int16 *)(v19 + 28);
      unint64_t v22 = v19 + v21 + 24 * ((178956971 * (unint64_t)*(unsigned __int16 *)(*(void *)v18 + 30)) >> 32) + 41;
      uint64_t v23 = v21 + 41;
      while (1)
      {
        uint64_t v24 = v19 + v23;
        if (*(void *)(v19 + v23) == DynamicType && *(void *)(v19 + v23 + 16) == v7) {
          break;
        }
        v23 += 24;
        if (v24 + 24 == v22) {
          goto LABEL_4;
        }
      }
      unint64_t v26 = sub_1B62C1A30(v20);
      uint64_t v8 = v33;
      if (v27)
      {
        unint64_t v28 = v26;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v30 = *(void *)(v2 + 48);
        *(void *)(v2 + 48) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1B62B8194();
        }
        sub_1B6AC8184(v28, v30);
        *(void *)(v2 + 48) = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v8 = v33;
      }
    }
  }
  uint64_t v16 = v13 + 1;
  if (v13 + 1 >= v35) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v16);
  if (v17) {
    goto LABEL_17;
  }
  uint64_t v16 = v13 + 2;
  if (v13 + 2 >= v35) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v16);
  if (v17) {
    goto LABEL_17;
  }
  uint64_t v16 = v13 + 3;
  if (v13 + 3 >= v35) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v16);
  if (v17) {
    goto LABEL_17;
  }
  uint64_t v16 = v13 + 4;
  if (v13 + 4 >= v35) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v16);
  if (v17)
  {
LABEL_17:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v13 = v16;
    goto LABEL_18;
  }
  while (v32 != v13)
  {
    unint64_t v17 = *(void *)(v8 + 8 * v13++ + 104);
    if (v17)
    {
      uint64_t v16 = v13 + 4;
      goto LABEL_17;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v31 = *(os_unfair_lock_s **)(v2 + 40);

  os_unfair_lock_unlock(v31);
}

uint64_t sub_1B6AB4D24()
{
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 40), -1, -1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1B6AB4D78(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for QueryManager.QueryInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QueryManager.QueryInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for QueryManager.QueryInfo()
{
  return &type metadata for QueryManager.QueryInfo;
}

uint64_t sub_1B6AB4EA0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980740);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v33 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v30 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v20 = v9[v19];
    if (!v20)
    {
      uint64_t v19 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v20 = v9[v19];
      if (!v20)
      {
        uint64_t v19 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v20 = v9[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v8 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    uint64_t v23 = sub_1B6E33908();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (v26 + 1 == v27) {
          unint64_t v26 = 0;
        }
        else {
          ++v26;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v26);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v26 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v21;
    *(void *)(*(void *)(v7 + 56) + v16) = v22;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v20 = *(void *)(v5 + 96 + 8 * v8++);
    if (v20)
    {
      uint64_t v19 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v33)
  {
    uint64_t v3 = v32;
    if (v31 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v30;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v32;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB5134(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67FAD68();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v28 = -1 << v10;
  uint64_t v29 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  int64_t v30 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v30) {
      goto LABEL_29;
    }
    unint64_t v22 = v9[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v30) {
        goto LABEL_29;
      }
      unint64_t v22 = v9[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v30) {
          goto LABEL_29;
        }
        unint64_t v22 = v9[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(unsigned int *)(*(void *)(v5 + 48) + 4 * v20);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    uint64_t v14 = MEMORY[0x1BA9B5560](*(void *)(v7 + 40), v23, 4);
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v25) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v26 = *(void *)(v13 + 8 * v17);
      }
      while (v26 == -1);
      unint64_t v18 = __clz(__rbit64(~v26)) + (v17 << 6);
    }
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_DWORD *)(*(void *)(v7 + 48) + 4 * v18) = v23;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v24;
    ++*(void *)(v7 + 16);
  }
  while (v30 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), 8 * v30);
    }
    else {
      *uint64_t v9 = v28;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB53C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD8F14();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v29 = (void *)(v5 + 64);
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v30) {
      goto LABEL_29;
    }
    unint64_t v22 = v29[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v30) {
        goto LABEL_29;
      }
      unint64_t v22 = v29[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v30) {
          goto LABEL_29;
        }
        unint64_t v22 = v29[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((a2 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v25) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v26 = *(void *)(v12 + 8 * v16);
      }
      while (v26 == -1);
      unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v23;
    *(void *)(*(void *)(v7 + 56) + v18) = v24;
    ++*(void *)(v7 + 16);
  }
  while (v30 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v27 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v27 >= 64) {
      bzero(v29, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v29 = -1 << v27;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB5694(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0530);
  char v42 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_20;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_30;
    }
    unint64_t v24 = v41[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v24 = v41[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v24 = v41[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_20:
    unint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 88 * v22;
    if (v42)
    {
      long long v29 = *(_OWORD *)(v28 + 16);
      long long v43 = *(_OWORD *)v28;
      long long v44 = v29;
      long long v30 = *(_OWORD *)(v28 + 32);
      long long v31 = *(_OWORD *)(v28 + 48);
      long long v32 = *(_OWORD *)(v28 + 64);
      uint64_t v48 = *(void *)(v28 + 80);
      long long v47 = v32;
      long long v45 = v30;
      long long v46 = v31;
    }
    else
    {
      sub_1B66459A4(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v33 = sub_1B6E33988();
    uint64_t v34 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v12 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v35) & ~*(void *)(v12 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v37 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (v36 + 1 == v37) {
          unint64_t v36 = 0;
        }
        else {
          ++v36;
        }
        uint64_t v38 = *(void *)(v12 + 8 * v36);
      }
      while (v38 == -1);
      unint64_t v14 = __clz(__rbit64(~v38)) + (v36 << 6);
    }
    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v27;
    v15[1] = v26;
    uint64_t v16 = *(void *)(v7 + 56) + 88 * v14;
    long long v17 = v44;
    *(_OWORD *)uint64_t v16 = v43;
    *(_OWORD *)(v16 + 16) = v17;
    long long v18 = v45;
    long long v19 = v46;
    long long v20 = v47;
    *(void *)(v16 + 80) = v48;
    *(_OWORD *)(v16 + 48) = v19;
    *(_OWORD *)(v16 + 64) = v20;
    *(_OWORD *)(v16 + 32) = v18;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  if (v42)
  {
    uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
    if (v39 >= 64) {
      bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v41 = -1 << v39;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB59DC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD8C64(0, (unint64_t *)&unk_1EB980780);
  char v33 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v23 = v32[v22];
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v23 = v32[v22];
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v23 = v32[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_21:
    unint64_t v24 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v33 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v28) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    long long v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *long long v19 = v26;
    v19[1] = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v27;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  if (v33)
  {
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    if (v30 >= 64) {
      bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *long long v32 = -1 << v30;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB5CD0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&unk_1EB981270);
  char v44 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v3;
  uint64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v42 = v11;
  uint64_t v43 = v5;
  unint64_t v39 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v45 = v13;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v42) {
      goto LABEL_29;
    }
    unint64_t v24 = v41[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_29;
      }
      unint64_t v24 = v41[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v42) {
          goto LABEL_29;
        }
        unint64_t v24 = v41[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v45 = v23;
LABEL_21:
    uint64_t v25 = *(void *)(v5 + 56);
    uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = (uint64_t *)(v25 + 40 * v22);
    uint64_t v30 = *v29;
    unint64_t v31 = v29[1];
    uint64_t v32 = v29[2];
    uint64_t v33 = v29[3];
    uint64_t v34 = v29[4];
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1B629C9E8(v30, v31);
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v35 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v35) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v36 = *(void *)(v12 + 8 * v17);
      }
      while (v36 == -1);
      unint64_t v18 = __clz(__rbit64(~v36)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    long long v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *long long v19 = v27;
    v19[1] = v28;
    unint64_t v20 = (uint64_t *)(*(void *)(v7 + 56) + 40 * v18);
    *unint64_t v20 = v30;
    v20[1] = v31;
    uint64_t v13 = v45;
    _OWORD v20[2] = v32;
    v20[3] = v33;
    v20[4] = v34;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v43;
  }
  while (v39 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v40;
  if (v44)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
    if (v37 >= 64) {
      bzero(v41, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v41 = -1 << v37;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB6018(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0520);
  char v40 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v39 = v11;
  unint64_t v37 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v22 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v23 = v22 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v24 = v13 + 1;
    if (v13 + 1 >= v39) {
      goto LABEL_29;
    }
    unint64_t v25 = v38[v24];
    if (!v25)
    {
      uint64_t v24 = v13 + 2;
      if (v13 + 2 >= v39) {
        goto LABEL_29;
      }
      unint64_t v25 = v38[v24];
      if (!v25)
      {
        uint64_t v24 = v13 + 3;
        if (v13 + 3 >= v39) {
          goto LABEL_29;
        }
        unint64_t v25 = v38[v24];
        if (!v25) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v13 = v24;
LABEL_21:
    uint64_t v26 = 16 * v23;
    uint64_t v27 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v23);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 56) + v26);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v33 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v33) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v34 = *(void *)(v12 + 8 * v17);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    *unint64_t v20 = v29;
    v20[1] = v28;
    unint64_t v21 = (void *)(*(void *)(v7 + 56) + v19);
    *unint64_t v21 = v31;
    v21[1] = v32;
    ++*(void *)(v7 + 16);
  }
  while (v37 != v13)
  {
    unint64_t v25 = *(void *)(v5 + 8 * v13++ + 96);
    if (v25)
    {
      uint64_t v24 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v2;
  if (v40)
  {
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    if (v35 >= 64) {
      bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v38 = -1 << v35;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB6324(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD97A8(0);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v10;
  uint64_t v30 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  int64_t v31 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v8 + 1;
    if (v8 + 1 >= v31) {
      goto LABEL_29;
    }
    unint64_t v23 = v9[v22];
    if (!v23)
    {
      uint64_t v22 = v8 + 2;
      if (v8 + 2 >= v31) {
        goto LABEL_29;
      }
      unint64_t v23 = v9[v22];
      if (!v23)
      {
        uint64_t v22 = v8 + 3;
        if (v8 + 3 >= v31) {
          goto LABEL_29;
        }
        unint64_t v23 = v9[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v8 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    uint64_t v14 = sub_1B6E33908();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v26) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v27 = *(void *)(v13 + 8 * v17);
      }
      while (v27 == -1);
      unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
    }
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v24;
    *(void *)(*(void *)(v7 + 56) + v19) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v31 - 4 != v8)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v8++);
    if (v23)
    {
      uint64_t v22 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v30 >= 64) {
      bzero((void *)(v5 + 64), 8 * v31);
    }
    else {
      *uint64_t v9 = v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB65B8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v52 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52, v6);
  uint64_t v57 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v53 = (char *)&v44 - v10;
  uint64_t v11 = *v2;
  sub_1B6AD9708(0, (unint64_t *)&unk_1EB9806C0, MEMORY[0x1E4FBBD58]);
  int v54 = a2;
  uint64_t v12 = sub_1B6E32C38();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_35;
  }
  char v44 = v2;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  long long v47 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  unint64_t v18 = (unint64_t)(v14 + 63) >> 6;
  long long v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v20 = v12 + 64;
  swift_retain();
  uint64_t v21 = 0;
  int64_t v48 = v18;
  unint64_t v45 = v18 - 4;
  uint64_t v50 = v5;
  uint64_t v51 = v11;
  while (1)
  {
    if (v17)
    {
      uint64_t v55 = (v17 - 1) & v17;
      uint64_t v56 = v21;
      unint64_t v25 = __clz(__rbit64(v17)) | (v21 << 6);
      goto LABEL_20;
    }
    uint64_t v26 = v21 + 1;
    if (v21 + 1 >= v48) {
      goto LABEL_30;
    }
    unint64_t v27 = v47[v26];
    if (!v27)
    {
      uint64_t v26 = v21 + 2;
      if (v21 + 2 >= v48) {
        goto LABEL_30;
      }
      unint64_t v27 = v47[v26];
      if (!v27)
      {
        uint64_t v26 = v21 + 3;
        if (v21 + 3 >= v48) {
          goto LABEL_30;
        }
        unint64_t v27 = v47[v26];
        if (!v27) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v55 = (v27 - 1) & v27;
    uint64_t v56 = v26;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
LABEL_20:
    uint64_t v28 = v11;
    uint64_t v29 = *(void *)(v5 + 72);
    unint64_t v30 = v29 * v25;
    unint64_t v31 = *(void *)(v11 + 48) + v29 * v25;
    if (v54)
    {
      uint64_t v32 = *v19;
      uint64_t v34 = v52;
      unint64_t v33 = v53;
      (*v19)(v53, v31, v52);
      v32(v57, *(void *)(v28 + 56) + v30, v34);
    }
    else
    {
      uint64_t v49 = v29;
      uint64_t v35 = *v46;
      uint64_t v34 = v52;
      unint64_t v33 = v53;
      (*v46)(v53, v31, v52);
      v35(v57, *(void *)(v28 + 56) + v30, v34);
      uint64_t v29 = v49;
    }
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v36 = sub_1B6E315A8();
    uint64_t v37 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v38 = v36 & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v20 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v38) & ~*(void *)(v20 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v40 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (v39 + 1 == v40) {
          unint64_t v39 = 0;
        }
        else {
          ++v39;
        }
        uint64_t v41 = *(void *)(v20 + 8 * v39);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v39 << 6);
    }
    *(void *)(v20 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    unint64_t v23 = v29 * v22;
    uint64_t v24 = *v19;
    (*v19)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v33, v34);
    v24((char *)(*(void *)(v13 + 56) + v23), (unint64_t)v57, v34);
    ++*(void *)(v13 + 16);
    uint64_t v5 = v50;
    uint64_t v11 = v51;
    unint64_t v17 = v55;
    uint64_t v21 = v56;
  }
  while (v45 != v21)
  {
    unint64_t v27 = *(void *)(v11 + 8 * v21++ + 96);
    if (v27)
    {
      uint64_t v26 = v21 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v3 = v44;
  if (v54)
  {
    uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
    if (v42 >= 64) {
      bzero(v47, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *long long v47 = -1 << v42;
    }
    *(void *)(v11 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1B6AB6A54(uint64_t a1, char a2)
{
  return sub_1B6ABA0B0(a1, a2, (void (*)(void))sub_1B67FB174);
}

uint64_t sub_1B6AB6A6C(uint64_t a1, char a2)
{
  return sub_1B6AB7D20(a1, a2, sub_1B6ADA27C);
}

uint64_t sub_1B6AB6A84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&unk_1E9DD5150);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v31 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v28 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v30 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v19 = v9[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v19 = v9[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v19 = v9[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v21 = sub_1B6E33908();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (v24 + 1 == v25) {
          unint64_t v24 = 0;
        }
        else {
          ++v24;
        }
        uint64_t v26 = *(void *)(v14 + 8 * v24);
      }
      while (v26 == -1);
      unint64_t v15 = __clz(__rbit64(~v26)) + (v24 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v20;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v31)
  {
    uint64_t v3 = v30;
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v30;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB6D08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0668);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v32 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  char v31 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v19 = v9[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v19 = v9[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v19 = v9[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
    uint64_t v22 = sub_1B6E33908();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v14 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v15 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v20;
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v21;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v32)
  {
    uint64_t v3 = v31;
    if (v30 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v31;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB6F98(uint64_t a1, char a2)
{
  return sub_1B6AB7A40(a1, a2, (void (*)(void))sub_1B6ADA420);
}

uint64_t sub_1B6AB6FB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0AA0);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v30 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v28 = -1 << v10;
  uint64_t v29 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_29;
    }
    unint64_t v23 = v9[v22];
    if (!v23)
    {
      uint64_t v22 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_29;
      }
      unint64_t v23 = v9[v22];
      if (!v23)
      {
        uint64_t v22 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_29;
        }
        unint64_t v23 = v9[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v8 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = sub_1B6E33908();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v25) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v26 = *(void *)(v14 + 8 * v18);
      }
      while (v26 == -1);
      unint64_t v19 = __clz(__rbit64(~v26)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v7 + 48) + 8 * v19) = v24;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v31;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v8++);
    if (v23)
    {
      uint64_t v22 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v3 = v30;
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v30;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB7260(uint64_t a1, char a2)
{
  return sub_1B6AB7A40(a1, a2, (void (*)(void))sub_1B67FBB54);
}

uint64_t sub_1B6AB7278(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67FBD08();
  char v42 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_44;
  }
  unint64_t v40 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v44 = v11;
  unint64_t v39 = v11 - 4;
  char v14 = v42;
  uint64_t v41 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v13 + 1;
    if (v13 + 1 >= v44) {
      goto LABEL_39;
    }
    unint64_t v20 = v43[v19];
    if (!v20)
    {
      uint64_t v19 = v13 + 2;
      if (v13 + 2 >= v44) {
        goto LABEL_39;
      }
      unint64_t v20 = v43[v19];
      if (!v20)
      {
        uint64_t v19 = v13 + 3;
        if (v13 + 3 >= v44) {
          goto LABEL_39;
        }
        unint64_t v20 = v43[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v13 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(v5 + 48) + 24 * v18;
    long long v46 = *(_OWORD *)v21;
    uint64_t v22 = *(unsigned __int8 *)(v21 + 20);
    uint64_t v23 = *(unsigned int *)(v21 + 16);
    unint64_t v24 = v23 | (v22 << 32);
    uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    if ((v14 & 1) == 0)
    {
      sub_1B6650588((id)v46, *((void **)&v46 + 1), v23 | (v22 << 32));
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    uint64_t v26 = (v24 >> 38) & 3;
    if (v26)
    {
      if (v26 == 1)
      {
        uint64_t v45 = v25;
        sub_1B6E33928();
        sub_1B6E31798();
        id v27 = *((id *)&v46 + 1);
        id v28 = (id)v46;
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        if (*((void *)&v46 + 1))
        {
          sub_1B6E33938();
          uint64_t v29 = v27;
          id v30 = v27;
          sub_1B6E32368();
        }
        else
        {
          uint64_t v29 = v27;
          sub_1B6E33938();
        }
        char v14 = v42;
        sub_1B6E33938();
        if ((v24 & 0x100000000) == 0) {
          sub_1B6E33958();
        }

        uint64_t v5 = v41;
        uint64_t v25 = v45;
      }
      else
      {
        sub_1B6E33928();
      }
    }
    else
    {
      sub_1B6E33928();
      sub_1B6E33938();
    }
    uint64_t v31 = sub_1B6E33988();
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v35 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (v34 + 1 == v35) {
          unint64_t v34 = 0;
        }
        else {
          ++v34;
        }
        uint64_t v36 = *(void *)(v12 + 8 * v34);
      }
      while (v36 == -1);
      unint64_t v15 = __clz(__rbit64(~v36)) + (v34 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 24 * v15;
    *(_OWORD *)uint64_t v16 = v46;
    *(unsigned char *)(v16 + 20) = BYTE4(v24);
    *(_DWORD *)(v16 + 16) = v24;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v39 != v13)
  {
    unint64_t v20 = *(void *)(v5 + 8 * v13++ + 96);
    if (v20)
    {
      uint64_t v19 = v13 + 3;
      goto LABEL_19;
    }
  }
LABEL_39:
  swift_release();
  uint64_t v3 = v40;
  if (v42)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
    if (v37 >= 64) {
      bzero(v43, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v43 = -1 << v37;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB76C4(uint64_t a1, char a2)
{
  return sub_1B6AC5B84(a1, a2, (void (*)(void))sub_1B6AD9F00);
}

uint64_t sub_1B6AB76DC(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1B67FB978();
  char v43 = a2;
  uint64_t v5 = sub_1B6E32C38();
  uint64_t v44 = v5;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_32;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v36 = -1 << v7;
  uint64_t v37 = v7;
  uint64_t v8 = v7 < 64 ? ~(-1 << v7) : -1;
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  uint64_t v10 = v5 + 64;
  unint64_t v40 = (uint64_t *)(v4 + 64);
  int64_t v41 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v39 = v4 + 96;
  for (i = v4; ; uint64_t v4 = i)
  {
    if (v9)
    {
      unint64_t v17 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v45 = v6;
      unint64_t v18 = v17 | (v6 << 6);
      goto LABEL_21;
    }
    uint64_t v19 = v6 + 1;
    if (v6 + 1 >= v41) {
      goto LABEL_29;
    }
    unint64_t v20 = v40[v19];
    if (!v20)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v41) {
        goto LABEL_29;
      }
      unint64_t v20 = v40[v19];
      if (!v20)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v41) {
          goto LABEL_29;
        }
        unint64_t v20 = v40[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v45 = v19;
LABEL_21:
    uint64_t v21 = *(void *)(v4 + 56);
    uint64_t v22 = *(void *)(*(void *)(v4 + 48) + 8 * v18);
    uint64_t v23 = (uint64_t *)(v21 + 88 * v18);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t v26 = v23[2];
    uint64_t v27 = v23[3];
    uint64_t v28 = v23[4];
    uint64_t v30 = v23[6];
    uint64_t v29 = v23[7];
    uint64_t v48 = v23[8];
    uint64_t v49 = v23[5];
    uint64_t v47 = v23[9];
    uint64_t v46 = v23[10];
    if ((v43 & 1) == 0) {
      sub_1B67FBA04(v24);
    }
    uint64_t v11 = sub_1B6E33908();
    uint64_t v12 = -1 << *(unsigned char *)(v44 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v10 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v10 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v31 = (unint64_t)(63 - v12) >> 6;
      do
      {
        if (v14 + 1 == v31) {
          unint64_t v14 = 0;
        }
        else {
          ++v14;
        }
        uint64_t v32 = *(void *)(v10 + 8 * v14);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v14 << 6);
    }
    uint64_t v6 = v45;
    *(void *)(v10 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v44 + 48) + 8 * v15) = v22;
    uint64_t v16 = (uint64_t *)(*(void *)(v44 + 56) + 88 * v15);
    uint64_t *v16 = v24;
    v16[1] = v25;
    _OWORD v16[2] = v26;
    v16[3] = v27;
    uint64_t v16[4] = v28;
    v16[5] = v49;
    v16[6] = v30;
    v16[7] = v29;
    v16[8] = v48;
    v16[9] = v47;
    v16[10] = v46;
    ++*(void *)(v44 + 16);
  }
  while (v41 - 4 != v6)
  {
    unint64_t v20 = *(void *)(v39 + 8 * v6++);
    if (v20)
    {
      uint64_t v19 = v6 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if ((v43 & 1) == 0)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v35 = v44;
    unint64_t v33 = v38;
    goto LABEL_35;
  }
  unint64_t v33 = v38;
  if (v37 >= 64) {
    bzero(v40, 8 * v41);
  }
  else {
    *unint64_t v40 = v36;
  }
  *(void *)(v4 + 16) = 0;
  uint64_t result = swift_release();
  uint64_t v35 = v44;
LABEL_35:
  *unint64_t v33 = v35;
  return result;
}

uint64_t sub_1B6AB7A28(uint64_t a1, char a2)
{
  return sub_1B6AB7A40(a1, a2, (void (*)(void))sub_1B6ADA1F0);
}

uint64_t sub_1B6AB7A40(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_35;
  }
  uint64_t v9 = 0;
  uint64_t v10 = (uint64_t *)(v6 + 64);
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v30 = -1 << v11;
  uint64_t v31 = v11;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  uint64_t v14 = v7 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v21 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v22 = v21 | (v9 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v32) {
      goto LABEL_29;
    }
    unint64_t v24 = v10[v23];
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_29;
      }
      unint64_t v24 = v10[v23];
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_29;
        }
        unint64_t v24 = v10[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_21:
    uint64_t v25 = *(void *)(*(void *)(v6 + 48) + 8 * v22);
    uint64_t v26 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = sub_1B6E33908();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v27) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v18);
      }
      while (v28 == -1);
      unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v25;
    *(void *)(*(void *)(v8 + 56) + v20) = v26;
    ++*(void *)(v8 + 16);
  }
  while (v32 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v6 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v31 >= 64) {
      bzero((void *)(v6 + 64), 8 * v32);
    }
    else {
      *uint64_t v10 = v30;
    }
    *(void *)(v6 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B6AB7CD8(uint64_t a1, char a2)
{
  return sub_1B6AC5B84(a1, a2, (void (*)(void))sub_1B6AD9E68);
}

uint64_t sub_1B6AB7CF0(uint64_t a1, int a2)
{
  return sub_1B6AC754C(a1, a2, (void (*)(void, __n128))sub_1B6ADA144);
}

uint64_t sub_1B6AB7D08(uint64_t a1, char a2)
{
  return sub_1B6AB7D20(a1, a2, sub_1B6AD9498);
}

uint64_t sub_1B6AB7D20(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_35;
  }
  uint64_t v9 = 0;
  uint64_t v10 = (uint64_t *)(v6 + 64);
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v30 = -1 << v11;
  uint64_t v31 = v11;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  uint64_t v14 = v7 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v21 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v22 = v21 | (v9 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v32) {
      goto LABEL_29;
    }
    unint64_t v24 = v10[v23];
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_29;
      }
      unint64_t v24 = v10[v23];
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_29;
        }
        unint64_t v24 = v10[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_21:
    uint64_t v25 = *(void *)(*(void *)(v6 + 48) + 8 * v22);
    uint64_t v26 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    uint64_t v15 = sub_1B6E33908();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v27) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v18);
      }
      while (v28 == -1);
      unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v25;
    *(void *)(*(void *)(v8 + 56) + v20) = v26;
    ++*(void *)(v8 + 16);
  }
  while (v32 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v6 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v31 >= 64) {
      bzero((void *)(v6 + 64), 8 * v32);
    }
    else {
      *uint64_t v10 = v30;
    }
    *(void *)(v6 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B6AB7FB8(uint64_t a1, int a2)
{
  return sub_1B6AB8020(a1, a2, (unint64_t *)&unk_1E9DD5350, type metadata accessor for TriggerScript, (void (*)(void, __n128))sub_1B6ADA4AC);
}

uint64_t sub_1B6AB7FEC(uint64_t a1, int a2)
{
  return sub_1B6AB8020(a1, a2, (unint64_t *)&unk_1E9DD0AF0, type metadata accessor for GraphScript, (void (*)(void, __n128))sub_1B665487C);
}

uint64_t sub_1B6AB8020(uint64_t a1, int a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void, __n128))
{
  uint64_t v7 = v5;
  uint64_t v47 = a3;
  sub_1B63999E0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
  uint64_t v45 = *(void *)(v10 - 8);
  v12.n128_f64[0] = MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = *v5;
  a5(0, v12);
  int v46 = a2;
  uint64_t v16 = sub_1B6E32C38();
  uint64_t v17 = v16;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_36;
  }
  uint64_t v18 = 0;
  uint64_t v19 = 1 << *(unsigned char *)(v15 + 32);
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & *(void *)(v15 + 64);
  uint64_t v22 = v16 + 64;
  char v43 = (void *)(v15 + 64);
  int64_t v44 = (unint64_t)(v19 + 63) >> 6;
  int64_t v42 = v44 - 4;
  unint64_t v40 = v5;
  uint64_t v41 = v15 + 96;
  while (1)
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v25 = v24 | (v18 << 6);
      goto LABEL_20;
    }
    uint64_t v26 = v18 + 1;
    if (v18 + 1 >= v44) {
      goto LABEL_30;
    }
    unint64_t v27 = v43[v26];
    if (!v27)
    {
      uint64_t v26 = v18 + 2;
      if (v18 + 2 >= v44) {
        goto LABEL_30;
      }
      unint64_t v27 = v43[v26];
      if (!v27)
      {
        uint64_t v26 = v18 + 3;
        if (v18 + 3 >= v44) {
          goto LABEL_30;
        }
        unint64_t v27 = v43[v26];
        if (!v27) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v18 = v26;
LABEL_20:
    char v28 = *(unsigned char *)(*(void *)(v15 + 48) + v25);
    uint64_t v29 = *(void *)(v45 + 72);
    uint64_t v30 = *(void *)(v15 + 56) + v29 * v25;
    if (v46) {
      sub_1B6AD955C(v30, (uint64_t)v14, v47, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    }
    else {
      sub_1B63B153C(v30, (uint64_t)v14, v47, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    }
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v31 = sub_1B6E33988();
    uint64_t v32 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v35 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (v34 + 1 == v35) {
          unint64_t v34 = 0;
        }
        else {
          ++v34;
        }
        uint64_t v36 = *(void *)(v22 + 8 * v34);
      }
      while (v36 == -1);
      unint64_t v23 = __clz(__rbit64(~v36)) + (v34 << 6);
    }
    *(void *)(v22 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(unsigned char *)(*(void *)(v17 + 48) + v23) = v28;
    sub_1B6AD955C((uint64_t)v14, *(void *)(v17 + 56) + v29 * v23, v47, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    ++*(void *)(v17 + 16);
  }
  while (v42 != v18)
  {
    unint64_t v27 = *(void *)(v41 + 8 * v18++);
    if (v27)
    {
      uint64_t v26 = v18 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  if (v46)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v15 + 32);
    uint64_t v7 = v40;
    if (v37 >= 64) {
      bzero(v43, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v43 = -1 << v37;
    }
    *(void *)(v15 + 16) = 0;
LABEL_36:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v7 = v40;
  }
  uint64_t *v7 = v17;
  return result;
}

uint64_t sub_1B6AB83F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980750);
  char v39 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v24 = v37[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v24 = v37[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v24 = v37[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_21:
    unint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 24 * v22;
    uint64_t v29 = *(void *)v28;
    uint64_t v30 = *(void *)(v28 + 8);
    char v31 = *(unsigned char *)(v28 + 16);
    if ((v39 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v32) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v33 = *(void *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v27;
    v19[1] = v26;
    uint64_t v20 = *(void *)(v7 + 56) + 24 * v18;
    *(void *)uint64_t v20 = v29;
    *(void *)(v20 + 8) = v30;
    *(unsigned char *)(v20 + 16) = v31;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v36;
  if (v39)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    if (v34 >= 64) {
      bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v37 = -1 << v34;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB870C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F8F84();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v28 = (void *)(v5 + 64);
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v19 = v18 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v20 = v8 + 1;
    if (v8 + 1 >= v29) {
      goto LABEL_29;
    }
    unint64_t v21 = v28[v20];
    if (!v21)
    {
      uint64_t v20 = v8 + 2;
      if (v8 + 2 >= v29) {
        goto LABEL_29;
      }
      unint64_t v21 = v28[v20];
      if (!v21)
      {
        uint64_t v20 = v8 + 3;
        if (v8 + 3 >= v29) {
          goto LABEL_29;
        }
        unint64_t v21 = v28[v20];
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v8 = v20;
LABEL_21:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v24) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v25 = *(void *)(v12 + 8 * v16);
      }
      while (v25 == -1);
      unint64_t v17 = __clz(__rbit64(~v25)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v23;
    ++*(void *)(v7 + 16);
  }
  while (v29 - 4 != v8)
  {
    unint64_t v21 = *(void *)(v5 + 96 + 8 * v8++);
    if (v21)
    {
      uint64_t v20 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v26 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v26 >= 64) {
      bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v28 = -1 << v26;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB89CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807C0);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  char v31 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v9;
  uint64_t v30 = v9;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  unint64_t v32 = (uint64_t *)(v5 + 64);
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v33) {
      goto LABEL_29;
    }
    unint64_t v22 = v32[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v33) {
        goto LABEL_29;
      }
      unint64_t v22 = v32[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v33) {
          goto LABEL_29;
        }
        unint64_t v22 = v32[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v24 = *(void *)(v5 + 56) + 24 * v20;
    long long v34 = *(_OWORD *)v24;
    uint64_t v25 = *(void *)(v24 + 16);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = sub_1B6E33908();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v26) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v23;
    uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
    *(_OWORD *)uint64_t v18 = v34;
    *(void *)(v18 + 16) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v33 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v3 = v31;
    if (v30 >= 64) {
      bzero(v32, 8 * v33);
    }
    else {
      *unint64_t v32 = v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v31;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB8CA4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67FB914();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v30 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (void *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v19 = v9[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v19 = v9[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v19 = v9[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v14 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v15 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v20;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v21;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v30)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v28 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB8F44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD51B0);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v33 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v30 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v20 = v9[v19];
    if (!v20)
    {
      uint64_t v19 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v20 = v9[v19];
      if (!v20)
      {
        uint64_t v19 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v20 = v9[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v8 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    uint64_t v23 = sub_1B6E33908();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (v26 + 1 == v27) {
          unint64_t v26 = 0;
        }
        else {
          ++v26;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v26);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v26 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v21;
    *(void *)(*(void *)(v7 + 56) + v16) = v22;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v20 = *(void *)(v5 + 96 + 8 * v8++);
    if (v20)
    {
      uint64_t v19 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v33)
  {
    uint64_t v3 = v32;
    if (v31 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v30;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v32;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB91E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1B6AD93BC();
  int v43 = a2;
  uint64_t v10 = sub_1B6E32C38();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_35;
  }
  uint64_t v37 = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  char v39 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  unint64_t v16 = (unint64_t)(v12 + 63) >> 6;
  unint64_t v38 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  int64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v17 = v10 + 64;
  swift_retain();
  uint64_t v18 = 0;
  int64_t v40 = v16;
  uint64_t v41 = v9;
  unint64_t v36 = v16 - 4;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_20;
    }
    uint64_t v22 = v18 + 1;
    if (v18 + 1 >= v40) {
      goto LABEL_30;
    }
    unint64_t v23 = v39[v22];
    if (!v23)
    {
      uint64_t v22 = v18 + 2;
      if (v18 + 2 >= v40) {
        goto LABEL_30;
      }
      unint64_t v23 = v39[v22];
      if (!v23)
      {
        uint64_t v22 = v18 + 3;
        if (v18 + 3 >= v40) {
          goto LABEL_30;
        }
        unint64_t v23 = v39[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v18 = v22;
LABEL_20:
    uint64_t v24 = v5;
    uint64_t v25 = *(void *)(v5 + 72);
    unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
    if (v43)
    {
      (*v44)(v8, v26, v42);
      long long v45 = *(_OWORD *)(*(void *)(v9 + 56) + 16 * v21);
    }
    else
    {
      (*v38)(v8, v26, v42);
      long long v45 = *(_OWORD *)(*(void *)(v9 + 56) + 16 * v21);
      swift_retain();
    }
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v27 = sub_1B6E315A8();
    uint64_t v28 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v31 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (v30 + 1 == v31) {
          unint64_t v30 = 0;
        }
        else {
          ++v30;
        }
        uint64_t v32 = *(void *)(v17 + 8 * v30);
      }
      while (v32 == -1);
      unint64_t v19 = __clz(__rbit64(~v32)) + (v30 << 6);
    }
    *(void *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    ((void (*)(unint64_t, char *))*v44)(*(void *)(v11 + 48) + v25 * v19, v8);
    *(_OWORD *)(*(void *)(v11 + 56) + 16 * v19) = v45;
    ++*(void *)(v11 + 16);
    uint64_t v5 = v24;
    uint64_t v9 = v41;
  }
  while (v36 != v18)
  {
    unint64_t v23 = *(void *)(v9 + 8 * v18++ + 96);
    if (v23)
    {
      uint64_t v22 = v18 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v3 = v37;
  if (v43)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v9 + 32);
    if (v33 >= 64) {
      bzero(v39, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *char v39 = -1 << v33;
    }
    *(void *)(v9 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1B6AB95F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67FA6EC();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v28 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_20;
    }
    uint64_t v17 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v18 = v28[v17];
    if (!v18)
    {
      uint64_t v17 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v18 = v28[v17];
      if (!v18)
      {
        uint64_t v17 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v18 = v28[v17];
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v13 = v17;
LABEL_20:
    char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    long long v29 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v16);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1B6E33988();
    uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (v23 + 1 == v24) {
          unint64_t v23 = 0;
        }
        else {
          ++v23;
        }
        uint64_t v25 = *(void *)(v12 + 8 * v23);
      }
      while (v25 == -1);
      unint64_t v14 = __clz(__rbit64(~v25)) + (v23 << 6);
    }
    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v19;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v14) = v29;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v18 = *(void *)(v5 + 8 * v13++ + 96);
    if (v18)
    {
      uint64_t v17 = v13 + 3;
      goto LABEL_19;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v26 = 1 << *(unsigned char *)(v5 + 32);
    if (v26 >= 64) {
      bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v28 = -1 << v26;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB98F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD9C88();
  char v39 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  unint64_t v36 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v37 = v11;
  uint64_t v38 = v5;
  unint64_t v34 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v13 + 1;
    if (v13 + 1 >= v37) {
      goto LABEL_29;
    }
    unint64_t v22 = v36[v21];
    if (!v22)
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v37) {
        goto LABEL_29;
      }
      unint64_t v22 = v36[v21];
      if (!v22)
      {
        uint64_t v21 = v13 + 3;
        if (v13 + 3 >= v37) {
          goto LABEL_29;
        }
        unint64_t v22 = v36[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v13 = v21;
LABEL_21:
    unint64_t v23 = (uint64_t *)(*(void *)(v5 + 48) + 40 * v20);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    uint64_t v27 = v23[2];
    uint64_t v26 = v23[3];
    uint64_t v28 = v23[4];
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v39 & 1) == 0)
    {
      sub_1B629C9E8(v24, v25);
      swift_bridgeObjectRetain();
    }
    v40[0] = v24;
    v40[1] = v25;
    v40[2] = v27;
    v40[3] = v26;
    v40[4] = v28;
    sub_1B6E33918();
    sub_1B6A3D8B8();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v30) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v31 = *(void *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1B629C37C((uint64_t)v40, *(void *)(v7 + 48) + 40 * v18);
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v29;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v38;
  }
  while (v34 != v13)
  {
    unint64_t v22 = *(void *)(v5 + 8 * v13++ + 96);
    if (v22)
    {
      uint64_t v21 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v35;
  if (v39)
  {
    uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
    if (v32 >= 64) {
      bzero(v36, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v36 = -1 << v32;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AB9C20(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9C28);
}

uint64_t sub_1B6AB9C38(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = sub_1B6E32B48();
  uint64_t v5 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1B62FF184();
  int v43 = a2;
  uint64_t v10 = sub_1B6E32C38();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_35;
  }
  int64_t v37 = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  char v39 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  unint64_t v16 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v38 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  int64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v17 = v10 + 64;
  swift_retain();
  uint64_t v18 = 0;
  int64_t v40 = v16;
  uint64_t v41 = v9;
  unint64_t v36 = v16 - 4;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_20;
    }
    uint64_t v22 = v18 + 1;
    if (v18 + 1 >= v40) {
      goto LABEL_30;
    }
    unint64_t v23 = v39[v22];
    if (!v23)
    {
      uint64_t v22 = v18 + 2;
      if (v18 + 2 >= v40) {
        goto LABEL_30;
      }
      unint64_t v23 = v39[v22];
      if (!v23)
      {
        uint64_t v22 = v18 + 3;
        if (v18 + 3 >= v40) {
          goto LABEL_30;
        }
        unint64_t v23 = v39[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v18 = v22;
LABEL_20:
    uint64_t v24 = v5;
    uint64_t v25 = *(void *)(v5 + 72);
    unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
    if (v43)
    {
      (*v44)(v8, v26, v42);
      sub_1B62B57A8((_OWORD *)(*(void *)(v9 + 56) + 32 * v21), v45);
    }
    else
    {
      (*v38)(v8, v26, v42);
      sub_1B62CAAD8(*(void *)(v9 + 56) + 32 * v21, (uint64_t)v45);
    }
    uint64_t v27 = sub_1B6E315A8();
    uint64_t v28 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v31 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (v30 + 1 == v31) {
          unint64_t v30 = 0;
        }
        else {
          ++v30;
        }
        uint64_t v32 = *(void *)(v17 + 8 * v30);
      }
      while (v32 == -1);
      unint64_t v19 = __clz(__rbit64(~v32)) + (v30 << 6);
    }
    *(void *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    ((void (*)(unint64_t, char *))*v44)(*(void *)(v11 + 48) + v25 * v19, v8);
    sub_1B62B57A8(v45, (_OWORD *)(*(void *)(v11 + 56) + 32 * v19));
    ++*(void *)(v11 + 16);
    uint64_t v5 = v24;
    uint64_t v9 = v41;
  }
  while (v36 != v18)
  {
    unint64_t v23 = *(void *)(v9 + 8 * v18++ + 96);
    if (v23)
    {
      uint64_t v22 = v18 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v3 = v37;
  if (v43)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v9 + 32);
    if (v33 >= 64) {
      bzero(v39, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *char v39 = -1 << v33;
    }
    *(void *)(v9 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1B6ABA020(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD938C);
}

uint64_t sub_1B6ABA038(uint64_t a1, char a2)
{
  return sub_1B6ABA0B0(a1, a2, (void (*)(void))sub_1B67FA500);
}

uint64_t sub_1B6ABA050(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9A78);
}

uint64_t sub_1B6ABA068(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9BF8);
}

uint64_t sub_1B6ABA080(uint64_t a1, char a2)
{
  return sub_1B6ABA0B0(a1, a2, sub_1B6AD9468);
}

uint64_t sub_1B6ABA098(uint64_t a1, char a2)
{
  return sub_1B6ABA0B0(a1, a2, (void (*)(void))sub_1B67F941C);
}

uint64_t sub_1B6ABA0B0(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v34 = a2;
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_34;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v33 = (void *)(v6 + 64);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  swift_retain();
  uint64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v14 + 1;
    if (v14 + 1 >= v12) {
      goto LABEL_29;
    }
    unint64_t v24 = v33[v23];
    if (!v24)
    {
      uint64_t v23 = v14 + 2;
      if (v14 + 2 >= v12) {
        goto LABEL_29;
      }
      unint64_t v24 = v33[v23];
      if (!v24)
      {
        uint64_t v23 = v14 + 3;
        if (v14 + 3 >= v12) {
          goto LABEL_29;
        }
        unint64_t v24 = v33[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v14 = v23;
LABEL_21:
    uint64_t v25 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v15 = sub_1B6E33988();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v29) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v8 + 48) + 16 * v19);
    *unint64_t v20 = v27;
    v20[1] = v26;
    *(void *)(*(void *)(v8 + 56) + 8 * v19) = v28;
    ++*(void *)(v8 + 16);
  }
  while (v12 - 4 != v14)
  {
    unint64_t v24 = *(void *)(v6 + 8 * v14++ + 96);
    if (v24)
    {
      uint64_t v23 = v14 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  if (v34)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
    if (v31 >= 64) {
      bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v33 = -1 << v31;
    }
    *(void *)(v6 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B6ABA390(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD5140);
  char v36 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = -1 << v9;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v3;
  uint64_t v12 = v6 + 64;
  uint64_t v38 = (uint64_t *)(v5 + 64);
  int64_t v39 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v5 + 96;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      uint64_t v16 = v8;
      unint64_t v17 = v15 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v16 = v8 + 1;
    if (v8 + 1 >= v39) {
      goto LABEL_27;
    }
    unint64_t v18 = v38[v16];
    if (!v18)
    {
      uint64_t v16 = v8 + 2;
      if (v8 + 2 >= v39) {
        goto LABEL_27;
      }
      unint64_t v18 = v38[v16];
      if (!v18)
      {
        uint64_t v16 = v8 + 3;
        if (v8 + 3 >= v39) {
          goto LABEL_27;
        }
        unint64_t v18 = v38[v16];
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v17 = __clz(__rbit64(v18)) + (v16 << 6);
LABEL_20:
    uint64_t v19 = *(void *)(v5 + 56) + 80 * v17;
    uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    char v44 = *(unsigned char *)(v19 + 64);
    uint64_t v42 = *(void *)(v19 + 48);
    uint64_t v43 = *(void *)(v19 + 56);
    uint64_t v21 = *(void *)(v19 + 32);
    uint64_t v41 = *(void *)(v19 + 40);
    uint64_t v23 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v25 = *(void *)v19;
    uint64_t v24 = *(void *)(v19 + 8);
    uint64_t v26 = sub_1B6E33908();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (v29 + 1 == v30) {
          unint64_t v29 = 0;
        }
        else {
          ++v29;
        }
        uint64_t v31 = *(void *)(v12 + 8 * v29);
      }
      while (v31 == -1);
      unint64_t v13 = __clz(__rbit64(~v31)) + (v29 << 6);
    }
    uint64_t v8 = v16;
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v7 + 48) + 8 * v13) = v20;
    uint64_t v14 = *(void *)(v7 + 56) + 80 * v13;
    *(void *)uint64_t v14 = v25;
    *(void *)(v14 + 8) = v24;
    *(void *)(v14 + 16) = v23;
    *(void *)(v14 + 24) = v22;
    *(void *)(v14 + 32) = v21;
    *(void *)(v14 + 40) = v41;
    *(void *)(v14 + 48) = v42;
    *(void *)(v14 + 56) = v43;
    *(unsigned char *)(v14 + 64) = v44;
    ++*(void *)(v7 + 16);
  }
  while (v39 - 4 != v8)
  {
    unint64_t v18 = *(void *)(v37 + 8 * v8++);
    if (v18)
    {
      uint64_t v16 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v36)
  {
    uint64_t v3 = v35;
    if (v34 >= 64) {
      bzero(v38, 8 * v39);
    }
    else {
      *uint64_t v38 = v33;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v35;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABA6A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980790);
  char v43 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v44 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = -1 << v8;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v3;
  uint64_t v11 = v6 + 64;
  int64_t v40 = (uint64_t *)(v5 + 64);
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v39 = v5 + 96;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v45 = v7;
      unint64_t v19 = v18 | (v7 << 6);
      goto LABEL_21;
    }
    uint64_t v20 = v7 + 1;
    if (v7 + 1 >= v41) {
      goto LABEL_29;
    }
    unint64_t v21 = v40[v20];
    if (!v21)
    {
      uint64_t v20 = v7 + 2;
      if (v7 + 2 >= v41) {
        goto LABEL_29;
      }
      unint64_t v21 = v40[v20];
      if (!v21)
      {
        uint64_t v20 = v7 + 3;
        if (v7 + 3 >= v41) {
          goto LABEL_29;
        }
        unint64_t v21 = v40[v20];
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v45 = v20;
LABEL_21:
    uint64_t v22 = *(void *)(v5 + 56);
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
    uint64_t v24 = v22 + 56 * v19;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v28 = *(void *)(v24 + 24);
    uint64_t v30 = *(void *)(v24 + 32);
    uint64_t v29 = *(void *)(v24 + 40);
    char v31 = *(unsigned char *)(v24 + 48);
    if ((v43 & 1) == 0) {
      sub_1B629EBB8(v25, v26, v27, v28, v30, v29, v31);
    }
    uint64_t v12 = sub_1B6E33908();
    uint64_t v13 = -1 << *(unsigned char *)(v44 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v11 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v11 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v13) >> 6;
      do
      {
        if (v15 + 1 == v32) {
          unint64_t v15 = 0;
        }
        else {
          ++v15;
        }
        uint64_t v33 = *(void *)(v11 + 8 * v15);
      }
      while (v33 == -1);
      unint64_t v16 = __clz(__rbit64(~v33)) + (v15 << 6);
    }
    uint64_t v7 = v45;
    *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(void *)(*(void *)(v44 + 48) + 8 * v16) = v23;
    uint64_t v17 = *(void *)(v44 + 56) + 56 * v16;
    *(void *)uint64_t v17 = v25;
    *(void *)(v17 + 8) = v26;
    *(void *)(v17 + 16) = v27;
    *(void *)(v17 + 24) = v28;
    *(void *)(v17 + 32) = v30;
    *(void *)(v17 + 40) = v29;
    *(unsigned char *)(v17 + 48) = v31;
    ++*(void *)(v44 + 16);
  }
  while (v41 - 4 != v7)
  {
    unint64_t v21 = *(void *)(v39 + 8 * v7++);
    if (v21)
    {
      uint64_t v20 = v7 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v43)
  {
    uint64_t v3 = v38;
    if (v37 >= 64) {
      bzero(v40, 8 * v41);
    }
    else {
      *int64_t v40 = v36;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v35 = v44;
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v35 = v44;
    uint64_t v3 = v38;
  }
  *uint64_t v3 = v35;
  return result;
}

uint64_t sub_1B6ABA9C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0858);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v32 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  char v31 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v19 = v9[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v19 = v9[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v19 = v9[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
    uint64_t v22 = sub_1B6E33908();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v14 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v15 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v20;
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v21;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v32)
  {
    uint64_t v3 = v31;
    if (v30 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v31;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABAC58(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1B67F9648();
  char v43 = a2;
  uint64_t v5 = sub_1B6E32C38();
  uint64_t v44 = v5;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_32;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v36 = -1 << v7;
  uint64_t v37 = v7;
  uint64_t v8 = v7 < 64 ? ~(-1 << v7) : -1;
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  uint64_t v10 = v5 + 64;
  int64_t v40 = (uint64_t *)(v4 + 64);
  int64_t v41 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v39 = v4 + 96;
  for (i = v4; ; uint64_t v4 = i)
  {
    if (v9)
    {
      unint64_t v17 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v45 = v6;
      unint64_t v18 = v17 | (v6 << 6);
      goto LABEL_21;
    }
    uint64_t v19 = v6 + 1;
    if (v6 + 1 >= v41) {
      goto LABEL_29;
    }
    unint64_t v20 = v40[v19];
    if (!v20)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v41) {
        goto LABEL_29;
      }
      unint64_t v20 = v40[v19];
      if (!v20)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v41) {
          goto LABEL_29;
        }
        unint64_t v20 = v40[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v45 = v19;
LABEL_21:
    uint64_t v21 = *(void *)(v4 + 56);
    uint64_t v22 = *(void *)(*(void *)(v4 + 48) + 8 * v18);
    uint64_t v23 = v21 + 80 * v18;
    unint64_t v24 = *(void **)v23;
    uint64_t v25 = *(void *)(v23 + 8);
    uint64_t v26 = *(void *)(v23 + 16);
    uint64_t v27 = *(void *)(v23 + 24);
    uint64_t v28 = *(void *)(v23 + 32);
    uint64_t v30 = *(void *)(v23 + 48);
    uint64_t v29 = *(void *)(v23 + 56);
    uint64_t v47 = *(void **)(v23 + 64);
    uint64_t v48 = *(void *)(v23 + 40);
    char v46 = *(unsigned char *)(v23 + 72);
    if ((v43 & 1) == 0) {
      sub_1B67A2324(v24, v25, v26, v27, v28, v48, v30, v29, v47, v46);
    }
    uint64_t v11 = sub_1B6E33908();
    uint64_t v12 = -1 << *(unsigned char *)(v44 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v10 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v10 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v31 = (unint64_t)(63 - v12) >> 6;
      do
      {
        if (v14 + 1 == v31) {
          unint64_t v14 = 0;
        }
        else {
          ++v14;
        }
        uint64_t v32 = *(void *)(v10 + 8 * v14);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v14 << 6);
    }
    uint64_t v6 = v45;
    *(void *)(v10 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v44 + 48) + 8 * v15) = v22;
    uint64_t v16 = *(void *)(v44 + 56) + 80 * v15;
    *(void *)uint64_t v16 = v24;
    *(void *)(v16 + 8) = v25;
    *(void *)(v16 + 16) = v26;
    *(void *)(v16 + 24) = v27;
    *(void *)(v16 + 32) = v28;
    *(void *)(v16 + 40) = v48;
    *(void *)(v16 + 48) = v30;
    *(void *)(v16 + 56) = v29;
    *(void *)(v16 + 64) = v47;
    *(unsigned char *)(v16 + 72) = v46;
    ++*(void *)(v44 + 16);
  }
  while (v41 - 4 != v6)
  {
    unint64_t v20 = *(void *)(v39 + 8 * v6++);
    if (v20)
    {
      uint64_t v19 = v6 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if ((v43 & 1) == 0)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v35 = v44;
    uint64_t v33 = v38;
    goto LABEL_35;
  }
  uint64_t v33 = v38;
  if (v37 >= 64) {
    bzero(v40, 8 * v41);
  }
  else {
    *int64_t v40 = v36;
  }
  *(void *)(v4 + 16) = 0;
  uint64_t result = swift_release();
  uint64_t v35 = v44;
LABEL_35:
  *uint64_t v33 = v35;
  return result;
}

uint64_t sub_1B6ABAF94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F752C();
  char v35 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v34 = v11;
  unint64_t v31 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v34) {
      goto LABEL_29;
    }
    unint64_t v23 = v33[v22];
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v34) {
        goto LABEL_29;
      }
      unint64_t v23 = v33[v22];
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v34) {
          goto LABEL_29;
        }
        unint64_t v23 = v33[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_21:
    unint64_t v24 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v35 & 1) == 0)
    {
      id v26 = v24;
      swift_bridgeObjectRetain();
    }
    sub_1B6E31798();
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v27) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v24;
    *(void *)(*(void *)(v7 + 56) + v19) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v31 != v13)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v32;
  if (v35)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v33, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v33 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABB290(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F7434();
  char v35 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v33 = (void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v34) {
      goto LABEL_29;
    }
    unint64_t v22 = v33[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v34) {
        goto LABEL_29;
      }
      unint64_t v22 = v33[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v34) {
          goto LABEL_29;
        }
        unint64_t v22 = v33[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v37 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v23 = *(void *)(v5 + 56) + 40 * v20;
    unint64_t v24 = *(void **)v23;
    uint64_t v25 = *(void *)(v23 + 8);
    int v26 = *(_DWORD *)(v23 + 16);
    char v27 = *(unsigned char *)(v23 + 20);
    long long v36 = *(_OWORD *)(v23 + 24);
    if ((v35 & 1) == 0)
    {
      id v28 = v24;
      swift_retain();
    }
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v29) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v30 = *(void *)(v12 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v37;
    uint64_t v18 = *(void *)(v7 + 56) + 40 * v17;
    *(void *)uint64_t v18 = v24;
    *(void *)(v18 + 8) = v25;
    *(_DWORD *)(v18 + 16) = v26;
    *(unsigned char *)(v18 + 20) = v27;
    *(_OWORD *)(v18 + 24) = v36;
    ++*(void *)(v7 + 16);
  }
  while (v34 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v35)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v31 >= 64) {
      bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v33 = -1 << v31;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABB5C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB985550);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_36;
  }
  uint64_t v31 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = (void *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_30;
    }
    unint64_t v20 = v9[v19];
    if (!v20)
    {
      uint64_t v19 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_30;
      }
      unint64_t v20 = v9[v19];
      if (!v20)
      {
        uint64_t v19 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_30;
        }
        unint64_t v20 = v9[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v8 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
    uint64_t v22 = *(void *)(v5 + 56) + 8 * v18;
    if (a2) {
      sub_1B67F99AC(v22, (uint64_t)v32);
    }
    else {
      sub_1B63BCBB8(v22, (uint64_t)v32);
    }
    uint64_t v23 = sub_1B6E33908();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (v26 + 1 == v27) {
          unint64_t v26 = 0;
        }
        else {
          ++v26;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v26);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v26 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v21;
    sub_1B67F99AC((uint64_t)v32, *(void *)(v7 + 56) + v16);
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v20 = *(void *)(v5 + 96 + 8 * v8++);
    if (v20)
    {
      uint64_t v19 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v31;
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_36:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v31;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABB880(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F96D4();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  unint64_t v27 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v28 = (void *)(v5 + 64);
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v16 = v8 + 1;
    if (v8 + 1 >= v29) {
      goto LABEL_29;
    }
    unint64_t v17 = v28[v16];
    if (!v17)
    {
      uint64_t v16 = v8 + 2;
      if (v8 + 2 >= v29) {
        goto LABEL_29;
      }
      unint64_t v17 = v28[v16];
      if (!v17)
      {
        uint64_t v16 = v8 + 3;
        if (v8 + 3 >= v29) {
          goto LABEL_29;
        }
        unint64_t v17 = v28[v16];
        if (!v17) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v8 = v16;
LABEL_20:
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    sub_1B6AD8CDC(*(void *)(v5 + 56) + 832 * v15, (uint64_t)v30, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    if ((a2 & 1) == 0) {
      sub_1B6AD8D4C((uint64_t)v30);
    }
    sub_1B6AD8CDC((uint64_t)v30, (uint64_t)v31, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    uint64_t v19 = sub_1B6E33908();
    uint64_t v20 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v23 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (v22 + 1 == v23) {
          unint64_t v22 = 0;
        }
        else {
          ++v22;
        }
        uint64_t v24 = *(void *)(v12 + 8 * v22);
      }
      while (v24 == -1);
      unint64_t v13 = __clz(__rbit64(~v24)) + (v22 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v7 + 48) + 8 * v13) = v18;
    sub_1B6AD8CDC((uint64_t)v31, *(void *)(v7 + 56) + 832 * v13, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    ++*(void *)(v7 + 16);
  }
  while (v29 - 4 != v8)
  {
    unint64_t v17 = *(void *)(v5 + 96 + 8 * v8++);
    if (v17)
    {
      uint64_t v16 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v25 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v27;
    if (v25 >= 64) {
      bzero(v28, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v28 = -1 << v25;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v27;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABBBEC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F7DCC();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v23 = v33[v22];
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v23 = v33[v22];
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v23 = v33[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_21:
    uint64_t v24 = 8 * v21;
    uint64_t v25 = *(void *)(v5 + 48);
    unint64_t v26 = *(void *)(v25 + v24);
    uint64_t v27 = *(void *)(*(void *)(v5 + 56) + v24);
    if ((a2 & 1) == 0) {
      sub_1B62C6AA8(*(void *)(v25 + v24));
    }
    sub_1B6E33918();
    sub_1B68ED020((uint64_t)v34, v26);
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v28) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v26;
    *(void *)(*(void *)(v7 + 56) + v19) = v27;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v32;
  if (a2)
  {
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    if (v30 >= 64) {
      bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v33 = -1 << v30;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABBEB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F7E30();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v30 = v2;
  uint64_t v31 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v22 = v31[v21];
    if (!v22)
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v22 = v31[v21];
      if (!v22)
      {
        uint64_t v21 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v22 = v31[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v13 = v21;
LABEL_21:
    uint64_t v23 = *(void *)(v5 + 48);
    unint64_t v24 = *(void *)(v23 + 8 * v20);
    char v25 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((a2 & 1) == 0) {
      sub_1B62C6AA8(*(void *)(v23 + 8 * v20));
    }
    sub_1B6E33918();
    sub_1B68ED020((uint64_t)v32, v24);
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v26) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v17);
      }
      while (v27 == -1);
      unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v24;
    *(unsigned char *)(*(void *)(v7 + 56) + v18) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v22 = *(void *)(v5 + 8 * v13++ + 96);
    if (v22)
    {
      uint64_t v21 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v30;
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    if (v28 >= 64) {
      bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v31 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABC16C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD5100);
  char v40 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v38 = v11;
  uint64_t v39 = v5;
  unint64_t v36 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v38) {
      goto LABEL_29;
    }
    unint64_t v24 = v37[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v38) {
        goto LABEL_29;
      }
      unint64_t v24 = v37[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v38) {
          goto LABEL_29;
        }
        unint64_t v24 = v37[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_21:
    char v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 32 * v22;
    unint64_t v29 = *(void *)v28;
    char v30 = *(unsigned char *)(v28 + 8);
    uint64_t v31 = *(void *)(v28 + 16);
    char v41 = *(unsigned char *)(v28 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1B62C6AA8(v29);
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v32) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v33 = *(void *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v27;
    v19[1] = v26;
    uint64_t v20 = *(void *)(v7 + 56) + 32 * v18;
    *(void *)uint64_t v20 = v29;
    *(unsigned char *)(v20 + 8) = v30;
    *(void *)(v20 + 16) = v31;
    *(unsigned char *)(v20 + 24) = v41;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v39;
  }
  while (v36 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v2;
  if (v40)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    if (v34 >= 64) {
      bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v37 = -1 << v34;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABC498(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B63967B4(0, &qword_1E9DD0578, (void (*)(uint64_t))type metadata accessor for XcodeInfo, (void (*)(void))sub_1B67F7B4C);
  uint64_t v6 = (void *)sub_1B6E32C38();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_25;
  }
  uint64_t v23 = v3;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = (void *)(v5 + 64);
  uint64_t v9 = -1;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  uint64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_18;
    }
    uint64_t v15 = v12 + 1;
    if (v12 + 1 >= v11) {
      goto LABEL_20;
    }
    unint64_t v16 = v8[v15];
    if (!v16)
    {
      uint64_t v15 = v12 + 2;
      if (v12 + 2 >= v11) {
        goto LABEL_20;
      }
      unint64_t v16 = v8[v15];
      if (!v16)
      {
        uint64_t v15 = v12 + 3;
        if (v12 + 3 >= v11) {
          goto LABEL_20;
        }
        unint64_t v16 = v8[v15];
        if (!v16) {
          break;
        }
      }
    }
LABEL_17:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v12 = v15;
LABEL_18:
    unint64_t v17 = (unsigned __int8 *)(*(void *)(v5 + 48) + 2 * v14);
    __int16 v18 = *v17;
    __int16 v19 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v14);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    sub_1B6AC7B84(v18 | (v19 << 8), v20, v6);
  }
  while (v11 - 4 != v12)
  {
    unint64_t v16 = *(void *)(v5 + 96 + 8 * v12++);
    if (v16)
    {
      uint64_t v15 = v12 + 3;
      goto LABEL_17;
    }
  }
LABEL_20:
  swift_release();
  uint64_t v3 = v23;
  if (a2)
  {
    uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
    if (v21 > 63) {
      bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v8 = -1 << v21;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_25:
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1B6ABC6C4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47, v6);
  char v46 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1B67FA58C();
  int v44 = a2;
  uint64_t v9 = sub_1B6E32C38();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_38;
  }
  int64_t v38 = v2;
  uint64_t v11 = 0;
  uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & *(void *)(v8 + 64);
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t v42 = (void *)(v8 + 64);
  int64_t v43 = (unint64_t)(v12 + 63) >> 6;
  int64_t v40 = v43 - 4;
  char v41 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v39 = v8 + 96;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v11 << 6);
      goto LABEL_20;
    }
    uint64_t v20 = v11 + 1;
    if (v11 + 1 >= v43) {
      goto LABEL_32;
    }
    unint64_t v21 = v42[v20];
    if (!v21)
    {
      uint64_t v20 = v11 + 2;
      if (v11 + 2 >= v43) {
        goto LABEL_32;
      }
      unint64_t v21 = v42[v20];
      if (!v21)
      {
        uint64_t v20 = v11 + 3;
        if (v11 + 3 >= v43) {
          goto LABEL_32;
        }
        unint64_t v21 = v42[v20];
        if (!v21) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v11 = v20;
LABEL_20:
    uint64_t v22 = *(void *)(v8 + 56);
    uint64_t v23 = v8;
    uint64_t v24 = *(void *)(v8 + 48) + 8 * v19;
    int v25 = *(_DWORD *)v24;
    int v26 = *(unsigned __int8 *)(v24 + 4);
    uint64_t v27 = v5;
    uint64_t v28 = *(void *)(v5 + 72);
    uint64_t v29 = v22 + v28 * v19;
    if (v44) {
      (*v45)(v46, v29, v47);
    }
    else {
      (*v41)(v46, v29, v47);
    }
    sub_1B6E33918();
    sub_1B6E33938();
    if (!v26) {
      sub_1B6E33958();
    }
    uint64_t v30 = sub_1B6E33988();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = v30 & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v34 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (v33 + 1 == v34) {
          unint64_t v33 = 0;
        }
        else {
          ++v33;
        }
        uint64_t v35 = *(void *)(v15 + 8 * v33);
      }
      while (v35 == -1);
      unint64_t v16 = __clz(__rbit64(~v35)) + (v33 << 6);
    }
    *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t v17 = *(void *)(v10 + 48) + 8 * v16;
    *(_DWORD *)uint64_t v17 = v25;
    *(unsigned char *)(v17 + 4) = v26;
    (*v45)((char *)(*(void *)(v10 + 56) + v28 * v16), (uint64_t)v46, v47);
    ++*(void *)(v10 + 16);
    uint64_t v8 = v23;
    uint64_t v5 = v27;
  }
  while (v40 != v11)
  {
    unint64_t v21 = *(void *)(v39 + 8 * v11++);
    if (v21)
    {
      uint64_t v20 = v11 + 3;
      goto LABEL_19;
    }
  }
LABEL_32:
  if (v44)
  {
    uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v3 = v38;
    if (v36 >= 64) {
      bzero(v42, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v42 = -1 << v36;
    }
    *(void *)(v8 + 16) = 0;
LABEL_38:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v38;
  }
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1B6ABCA9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67FB298();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v8 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v31 = a2;
  uint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 64);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v6 + 64;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v9 << 6);
      goto LABEL_20;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v14) {
      goto LABEL_27;
    }
    unint64_t v21 = v10[v20];
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v14) {
        goto LABEL_27;
      }
      unint64_t v21 = v10[v20];
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v14) {
          goto LABEL_27;
        }
        unint64_t v21 = v10[v20];
        if (!v21) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_20:
    *(void *)&long long v7 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
    long long v32 = v7;
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v23 = sub_1B6E33988();
    uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v15 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (v26 + 1 == v27) {
          unint64_t v26 = 0;
        }
        else {
          ++v26;
        }
        uint64_t v28 = *(void *)(v15 + 8 * v26);
      }
      while (v28 == -1);
      unint64_t v16 = __clz(__rbit64(~v28)) + (v26 << 6);
    }
    *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t v17 = 8 * v16;
    *((void *)&v7 + 1) = *((void *)&v32 + 1);
    *(void *)(*(void *)(v8 + 48) + v17) = v32;
    *(void *)(*(void *)(v8 + 56) + v17) = v22;
    ++*(void *)(v8 + 16);
  }
  while (v14 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v5 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v31)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v10 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1B6ABCD5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6ADA3A8();
  char v35 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v33 = v2;
  unint64_t v34 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v23 = v34[v22];
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v23 = v34[v22];
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v23 = v34[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_21:
    uint64_t v24 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    unint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v21);
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v28 = v27;
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v29) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v26;
    v19[1] = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v27;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v33;
  if (v35)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
    if (v31 >= 64) {
      bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v34 = -1 << v31;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABD034(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62B3C14(0, &qword_1EB980748, (void (*)(uint64_t))sub_1B67F8728);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  uint64_t v31 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  long long v32 = (void *)(v5 + 64);
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v12) {
      goto LABEL_27;
    }
    unint64_t v19 = v32[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_27;
      }
      unint64_t v19 = v32[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v12) {
          goto LABEL_27;
        }
        unint64_t v19 = v32[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v21 = *(void *)(v5 + 56) + 24 * v17;
    uint64_t v22 = *(void *)(v21 + 16);
    long long v33 = *(_OWORD *)v21;
    uint64_t v23 = sub_1B6E33908();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (v26 + 1 == v27) {
          unint64_t v26 = 0;
        }
        else {
          ++v26;
        }
        uint64_t v28 = *(void *)(v13 + 8 * v26);
      }
      while (v28 == -1);
      unint64_t v14 = __clz(__rbit64(~v28)) + (v26 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v20;
    uint64_t v15 = *(void *)(v7 + 56) + 24 * v14;
    *(_OWORD *)uint64_t v15 = v33;
    *(void *)(v15 + 16) = v22;
    ++*(void *)(v7 + 16);
  }
  while (v12 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v31;
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *long long v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v31;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABD314(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B639696C();
  char v37 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  unint64_t v34 = (void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v33 = v5 + 96;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      uint64_t v20 = v8;
      unint64_t v21 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v20 = v8 + 1;
    if (v8 + 1 >= v35) {
      goto LABEL_29;
    }
    unint64_t v22 = v34[v20];
    if (!v22)
    {
      uint64_t v20 = v8 + 2;
      if (v8 + 2 >= v35) {
        goto LABEL_29;
      }
      unint64_t v22 = v34[v20];
      if (!v22)
      {
        uint64_t v20 = v8 + 3;
        if (v8 + 3 >= v35) {
          goto LABEL_29;
        }
        unint64_t v22 = v34[v20];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v21 = __clz(__rbit64(v22)) + (v20 << 6);
LABEL_21:
    char v23 = *(unsigned char *)(*(void *)(v5 + 48) + v21);
    uint64_t v24 = *(void *)(v5 + 56) + 80 * v21;
    uint64_t v26 = *(void *)v24;
    uint64_t v25 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 32);
    char v28 = *(unsigned char *)(v24 + 40);
    uint64_t v39 = *(void *)(v24 + 48);
    char v38 = *(unsigned char *)(v24 + 56);
    long long v40 = *(_OWORD *)(v24 + 64);
    long long v41 = *(_OWORD *)(v24 + 16);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v29) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v30 = *(void *)(v12 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    uint64_t v8 = v20;
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v23;
    uint64_t v18 = *(void *)(v7 + 56) + 80 * v17;
    *(void *)uint64_t v18 = v26;
    *(void *)(v18 + 8) = v25;
    *(_OWORD *)(v18 + 16) = v41;
    *(void *)(v18 + 32) = v27;
    *(unsigned char *)(v18 + 40) = v28;
    *(void *)(v18 + 48) = v39;
    *(unsigned char *)(v18 + 56) = v38;
    *(_OWORD *)(v18 + 64) = v40;
    ++*(void *)(v7 + 16);
  }
  while (v35 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v33 + 8 * v8++);
    if (v22)
    {
      uint64_t v20 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v37)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v31 >= 64) {
      bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v34 = -1 << v31;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABD64C(uint64_t a1, char a2)
{
  return sub_1B6ABD68C(a1, a2, (void (*)(void))sub_1B67FA0F0, (void (*)(uint64_t, char *))sub_1B6AD9600, (void (*)(uint64_t, char *))sub_1B6AD95CC);
}

uint64_t sub_1B6ABD68C(uint64_t a1, char a2, void (*a3)(void), void (*a4)(uint64_t, char *), void (*a5)(uint64_t, char *))
{
  uint64_t v7 = v5;
  uint64_t v9 = *v5;
  a3(0);
  uint64_t v10 = sub_1B6E32C38();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_36;
  }
  unint64_t v34 = v7;
  uint64_t v12 = 0;
  uint64_t v13 = 1 << *(unsigned char *)(v9 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & *(void *)(v9 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v17 = v10 + 64;
  uint64_t v36 = (void *)(v9 + 64);
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v12 << 6);
      goto LABEL_20;
    }
    uint64_t v22 = v12 + 1;
    if (v12 + 1 >= v16) {
      goto LABEL_30;
    }
    unint64_t v23 = v36[v22];
    if (!v23)
    {
      uint64_t v22 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_30;
      }
      unint64_t v23 = v36[v22];
      if (!v23)
      {
        uint64_t v22 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_30;
        }
        unint64_t v23 = v36[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v12 = v22;
LABEL_20:
    uint64_t v24 = *(void *)(*(void *)(v9 + 48) + 8 * v21);
    uint64_t v25 = *(void *)(v9 + 56) + 8 * v21;
    if (a2) {
      a4(v25, v37);
    }
    else {
      a5(v25, v37);
    }
    uint64_t v26 = sub_1B6E33908();
    uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (v29 + 1 == v30) {
          unint64_t v29 = 0;
        }
        else {
          ++v29;
        }
        uint64_t v31 = *(void *)(v17 + 8 * v29);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v29 << 6);
    }
    *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v11 + 48) + v19) = v24;
    a4((uint64_t)v37, (char *)(*(void *)(v11 + 56) + v19));
    ++*(void *)(v11 + 16);
  }
  while (v16 - 4 != v12)
  {
    unint64_t v23 = *(void *)(v9 + 96 + 8 * v12++);
    if (v23)
    {
      uint64_t v22 = v12 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  if (a2)
  {
    uint64_t v32 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v7 = v34;
    if (v32 >= 64) {
      bzero(v36, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v36 = -1 << v32;
    }
    *(void *)(v9 + 16) = 0;
LABEL_36:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v7 = v34;
  }
  uint64_t *v7 = v11;
  return result;
}

uint64_t sub_1B6ABD95C(uint64_t a1, char a2)
{
  return sub_1B6ABD68C(a1, a2, (void (*)(void))sub_1B67F9E00, (void (*)(uint64_t, char *))sub_1B6AD9528, (void (*)(uint64_t, char *))sub_1B63B9468);
}

uint64_t sub_1B6ABD99C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B63967B4(0, &qword_1E9DD0890, (void (*)(uint64_t))sub_1B67FA2B8, (void (*)(void))sub_1B67FA338);
  char v34 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v8 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  uint64_t v32 = (void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v9 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v33) {
      goto LABEL_29;
    }
    unint64_t v23 = v32[v22];
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v33) {
        goto LABEL_29;
      }
      unint64_t v23 = v32[v22];
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v33) {
          goto LABEL_29;
        }
        unint64_t v23 = v32[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_21:
    *(void *)&long long v7 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    long long v35 = v7;
    uint64_t v24 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = v24[2];
    if ((v34 & 1) == 0) {
      swift_unknownObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v28) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v29 = *(void *)(v13 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *((void *)&v7 + 1) = *((void *)&v35 + 1);
    *(void *)(*(void *)(v8 + 48) + 8 * v18) = v35;
    uint64_t v19 = (void *)(*(void *)(v8 + 56) + 24 * v18);
    *uint64_t v19 = v25;
    v19[1] = v26;
    void v19[2] = v27;
    ++*(void *)(v8 + 16);
  }
  while (v33 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v9++);
    if (v23)
    {
      uint64_t v22 = v9 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v34)
  {
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v30 >= 64) {
      bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v30;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1B6ABDCD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67FA204();
  char v43 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_37;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  long long v40 = (void *)(v5 + 64);
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v39 = v5 + 96;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      uint64_t v47 = v8;
      unint64_t v18 = v17 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v8 + 1;
    if (v8 + 1 >= v41) {
      goto LABEL_31;
    }
    unint64_t v20 = v40[v19];
    if (!v20)
    {
      uint64_t v19 = v8 + 2;
      if (v8 + 2 >= v41) {
        goto LABEL_31;
      }
      unint64_t v20 = v40[v19];
      if (!v20)
      {
        uint64_t v19 = v8 + 3;
        if (v8 + 3 >= v41) {
          goto LABEL_31;
        }
        unint64_t v20 = v40[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v47 = v19;
LABEL_20:
    uint64_t v21 = 40 * v18;
    uint64_t v22 = *(void *)(v5 + 56);
    uint64_t v23 = *(void *)(v5 + 48) + 40 * v18;
    uint64_t v24 = *(void *)v23;
    uint64_t v25 = *(void *)(v23 + 8);
    uint64_t v27 = *(void *)(v23 + 16);
    uint64_t v26 = *(void *)(v23 + 24);
    int v28 = *(unsigned __int8 *)(v23 + 32);
    uint64_t v29 = (uint64_t *)(v22 + v21);
    uint64_t v30 = *v29;
    long long v44 = *(_OWORD *)(v29 + 1);
    uint64_t v45 = v29[3];
    char v46 = *((unsigned char *)v29 + 32);
    if ((v43 & 1) == 0)
    {
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if (!v28) {
      sub_1B6E33928();
    }
    uint64_t v31 = sub_1B6E33988();
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v8 = v47;
    }
    else
    {
      unint64_t v35 = (unint64_t)(63 - v32) >> 6;
      uint64_t v8 = v47;
      do
      {
        if (v34 + 1 == v35) {
          unint64_t v34 = 0;
        }
        else {
          ++v34;
        }
        uint64_t v36 = *(void *)(v12 + 8 * v34);
      }
      while (v36 == -1);
      unint64_t v13 = __clz(__rbit64(~v36)) + (v34 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = 40 * v13;
    uint64_t v15 = *(void *)(v7 + 48) + v14;
    *(void *)uint64_t v15 = v24;
    *(void *)(v15 + 8) = v25;
    *(void *)(v15 + 16) = v27;
    *(void *)(v15 + 24) = v26;
    *(unsigned char *)(v15 + 32) = v28;
    uint64_t v16 = *(void *)(v7 + 56) + v14;
    *(void *)uint64_t v16 = v30;
    *(_OWORD *)(v16 + 8) = v44;
    *(void *)(v16 + 24) = v45;
    *(unsigned char *)(v16 + 32) = v46;
    ++*(void *)(v7 + 16);
  }
  while (v41 - 4 != v8)
  {
    unint64_t v20 = *(void *)(v39 + 8 * v8++);
    if (v20)
    {
      uint64_t v19 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_31:
  if (v43)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v37 >= 64) {
      bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *long long v40 = -1 << v37;
    }
    *(void *)(v5 + 16) = 0;
LABEL_37:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABE058(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD8C64(0, (unint64_t *)&qword_1EB9807F0);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v30 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  uint64_t v31 = (void *)(v5 + 64);
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v8 + 1;
    if (v8 + 1 >= v12) {
      goto LABEL_29;
    }
    unint64_t v23 = v31[v22];
    if (!v23)
    {
      uint64_t v22 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_29;
      }
      unint64_t v23 = v31[v22];
      if (!v23)
      {
        uint64_t v22 = v8 + 3;
        if (v8 + 3 >= v12) {
          goto LABEL_29;
        }
        unint64_t v23 = v31[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v8 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((a2 & 1) == 0) {
      swift_unknownObjectRetain();
    }
    uint64_t v14 = sub_1B6E33908();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v26) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v27 = *(void *)(v13 + 8 * v17);
      }
      while (v27 == -1);
      unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
    }
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v24;
    *(void *)(*(void *)(v7 + 56) + v19) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v12 - 4 != v8)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v8++);
    if (v23)
    {
      uint64_t v22 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v30;
    if (v28 >= 64) {
      bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v31 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v30;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABE318(uint64_t a1, char a2)
{
  return sub_1B6AC7248(a1, a2, (unint64_t *)&qword_1E9DD0518);
}

uint64_t sub_1B6ABE32C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67FBA88();
  char v40 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_36;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v2;
  char v38 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_31;
    }
    unint64_t v20 = v38[v19];
    if (!v20)
    {
      uint64_t v19 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = v38[v19];
      if (!v20)
      {
        uint64_t v19 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_31;
        }
        unint64_t v20 = v38[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v13 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(v5 + 56);
    uint64_t v22 = *(void *)(v5 + 48) + 32 * v18;
    unint64_t v23 = *(void *)v22;
    char v24 = *(unsigned char *)(v22 + 8);
    uint64_t v25 = *(void *)(v22 + 16);
    int v26 = *(unsigned __int8 *)(v22 + 24);
    uint64_t v27 = (uint64_t *)(v21 + 16 * v18);
    uint64_t v28 = v27[1];
    uint64_t v41 = *v27;
    if ((v40 & 1) == 0)
    {
      sub_1B62C6AA8(v23);
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B68ED020((uint64_t)v42, v23);
    sub_1B6E33938();
    sub_1B6E33938();
    if (!v26) {
      sub_1B6E33928();
    }
    uint64_t v29 = sub_1B6E33988();
    uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v31 = v29 & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v33 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (v32 + 1 == v33) {
          unint64_t v32 = 0;
        }
        else {
          ++v32;
        }
        uint64_t v34 = *(void *)(v12 + 8 * v32);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v32 << 6);
    }
    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 32 * v14;
    *(void *)uint64_t v15 = v23;
    *(unsigned char *)(v15 + 8) = v24;
    *(void *)(v15 + 16) = v25;
    *(unsigned char *)(v15 + 24) = v26;
    unint64_t v16 = (void *)(*(void *)(v7 + 56) + 16 * v14);
    void *v16 = v41;
    v16[1] = v28;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v20 = *(void *)(v5 + 8 * v13++ + 96);
    if (v20)
    {
      uint64_t v19 = v13 + 3;
      goto LABEL_19;
    }
  }
LABEL_31:
  swift_release();
  uint64_t v3 = v37;
  if (v40)
  {
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    if (v35 >= 64) {
      bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *char v38 = -1 << v35;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_36:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABE664(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1B67FA8C0();
  int v44 = a2;
  uint64_t v11 = sub_1B6E32C38();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_35;
  }
  char v40 = v2;
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v42 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v17 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v11 + 64;
  swift_retain();
  uint64_t v19 = 0;
  int64_t v43 = v17;
  unint64_t v39 = v17 - 4;
  uint64_t v47 = v9;
  uint64_t v48 = v5;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      uint64_t v46 = v19;
      unint64_t v24 = v23 | (v19 << 6);
      goto LABEL_20;
    }
    uint64_t v25 = v19 + 1;
    if (v19 + 1 >= v43) {
      goto LABEL_30;
    }
    unint64_t v26 = v42[v25];
    if (!v26)
    {
      uint64_t v25 = v19 + 2;
      if (v19 + 2 >= v43) {
        goto LABEL_30;
      }
      unint64_t v26 = v42[v25];
      if (!v26)
      {
        uint64_t v25 = v19 + 3;
        if (v19 + 3 >= v43) {
          goto LABEL_30;
        }
        unint64_t v26 = v42[v25];
        if (!v26) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v46 = v25;
LABEL_20:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v10 + 48) + v27 * v24;
    if (v44) {
      (*v45)(v47, v28, v48);
    }
    else {
      (*v41)(v47, v28, v48);
    }
    uint64_t v29 = v10;
    char v30 = *(unsigned char *)(*(void *)(v10 + 56) + v24);
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v31 = sub_1B6E315A8();
    uint64_t v32 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v35 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (v34 + 1 == v35) {
          unint64_t v34 = 0;
        }
        else {
          ++v34;
        }
        uint64_t v36 = *(void *)(v18 + 8 * v34);
      }
      while (v36 == -1);
      unint64_t v20 = __clz(__rbit64(~v36)) + (v34 << 6);
    }
    uint64_t v21 = v47;
    uint64_t v22 = v48;
    *(void *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*v45)((char *)(*(void *)(v12 + 48) + v27 * v20), (unint64_t)v21, v22);
    *(unsigned char *)(*(void *)(v12 + 56) + v20) = v30;
    ++*(void *)(v12 + 16);
    uint64_t v10 = v29;
    uint64_t v19 = v46;
  }
  while (v39 != v19)
  {
    unint64_t v26 = *(void *)(v10 + 8 * v19++ + 96);
    if (v26)
    {
      uint64_t v25 = v19 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v3 = v40;
  if (v44)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v10 + 32);
    if (v37 >= 64) {
      bzero(v42, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v42 = -1 << v37;
    }
    *(void *)(v10 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1B6ABEA60(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1B6AD9DBC();
  int v50 = a2;
  uint64_t v11 = sub_1B6E32C38();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_35;
  }
  uint64_t v45 = v2;
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v17 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v51 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v11 + 64;
  swift_retain();
  uint64_t v19 = 0;
  int64_t v48 = v17;
  uint64_t v49 = v10;
  unint64_t v44 = v17 - 4;
  uint64_t v53 = v9;
  uint64_t v54 = v5;
  while (1)
  {
    if (v16)
    {
      unint64_t v24 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      uint64_t v52 = v19;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_20;
    }
    uint64_t v26 = v19 + 1;
    if (v19 + 1 >= v48) {
      goto LABEL_30;
    }
    unint64_t v27 = v47[v26];
    if (!v27)
    {
      uint64_t v26 = v19 + 2;
      if (v19 + 2 >= v48) {
        goto LABEL_30;
      }
      unint64_t v27 = v47[v26];
      if (!v27)
      {
        uint64_t v26 = v19 + 3;
        if (v19 + 3 >= v48) {
          goto LABEL_30;
        }
        unint64_t v27 = v47[v26];
        if (!v27) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v52 = v26;
LABEL_20:
    uint64_t v28 = *(void *)(v6 + 72);
    unint64_t v29 = *(void *)(v10 + 48) + v28 * v25;
    uint64_t v30 = 16 * v25;
    if (v50)
    {
      (*v51)(v53, v29, v54);
      uint64_t v31 = *(void *)(v10 + 56) + v30;
      id v32 = *(id *)v31;
      char v33 = *(unsigned char *)(v31 + 8);
    }
    else
    {
      (*v46)(v53, v29, v54);
      uint64_t v34 = *(void *)(v10 + 56) + v30;
      id v32 = *(id *)v34;
      char v33 = *(unsigned char *)(v34 + 8);
      sub_1B683DFDC(*(id *)v34, v33);
    }
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v35 = sub_1B6E315A8();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = v35 & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v39 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (v38 + 1 == v39) {
          unint64_t v38 = 0;
        }
        else {
          ++v38;
        }
        uint64_t v40 = *(void *)(v18 + 8 * v38);
      }
      while (v40 == -1);
      unint64_t v20 = __clz(__rbit64(~v40)) + (v38 << 6);
    }
    uint64_t v21 = v53;
    uint64_t v22 = v54;
    *(void *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*v51)((char *)(*(void *)(v12 + 48) + v28 * v20), (unint64_t)v21, v22);
    uint64_t v23 = *(void *)(v12 + 56) + 16 * v20;
    *(void *)uint64_t v23 = v32;
    *(unsigned char *)(v23 + 8) = v33;
    ++*(void *)(v12 + 16);
    uint64_t v10 = v49;
    uint64_t v19 = v52;
  }
  while (v44 != v19)
  {
    unint64_t v27 = *(void *)(v10 + 8 * v19++ + 96);
    if (v27)
    {
      uint64_t v26 = v19 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v3 = v45;
  if (v50)
  {
    uint64_t v41 = 1 << *(unsigned char *)(v10 + 32);
    if (v41 >= 64) {
      bzero(v47, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v47 = -1 << v41;
    }
    *(void *)(v10 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1B6ABEE88(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62B3C14(0, (unint64_t *)&qword_1E9DD0900, (void (*)(uint64_t))sub_1B6AD9D54);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v30 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v28 = -1 << v10;
  uint64_t v29 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_29;
    }
    unint64_t v23 = v9[v22];
    if (!v23)
    {
      uint64_t v22 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_29;
      }
      unint64_t v23 = v9[v22];
      if (!v23)
      {
        uint64_t v22 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_29;
        }
        unint64_t v23 = v9[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v8 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1B67C52A4(*((unint64_t *)&v31 + 1));
    }
    uint64_t v15 = sub_1B6E33908();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v25) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v26 = *(void *)(v14 + 8 * v18);
      }
      while (v26 == -1);
      unint64_t v19 = __clz(__rbit64(~v26)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v7 + 48) + 8 * v19) = v24;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v31;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v8++);
    if (v23)
    {
      uint64_t v22 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v3 = v30;
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v30;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABF138(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47, v6);
  uint64_t v46 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1B67FB61C();
  int v48 = a2;
  uint64_t v9 = sub_1B6E32C38();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_34;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = v2;
  uint64_t v42 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  unint64_t v15 = (unint64_t)(v11 + 63) >> 6;
  unint64_t v44 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v16 = v9 + 64;
  swift_retain();
  uint64_t v17 = 0;
  int64_t v43 = v15;
  unint64_t v40 = v15 - 4;
  uint64_t v18 = v47;
  while (1)
  {
    if (v14)
    {
      unint64_t v26 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v27 = v26 | (v17 << 6);
      goto LABEL_21;
    }
    uint64_t v28 = v17 + 1;
    if (v17 + 1 >= v43) {
      goto LABEL_29;
    }
    unint64_t v29 = v42[v28];
    if (!v29)
    {
      uint64_t v28 = v17 + 2;
      if (v17 + 2 >= v43) {
        goto LABEL_29;
      }
      unint64_t v29 = v42[v28];
      if (!v29)
      {
        uint64_t v28 = v17 + 3;
        if (v17 + 3 >= v43) {
          goto LABEL_29;
        }
        unint64_t v29 = v42[v28];
        if (!v29) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v17 = v28;
LABEL_21:
    uint64_t v30 = *(void *)(v8 + 56);
    uint64_t v31 = v8;
    id v32 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v27);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = *(void *)(v30 + 8 * v27);
    if ((v48 & 1) == 0)
    {
      swift_retain();
      sub_1B67C52A4(v35);
    }
    sub_1B6E33918();
    unint64_t v19 = v46;
    (*v45)(v46, v34 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v18);
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    sub_1B6E315B8();
    (*v44)(v19, v18);
    sub_1B6E33928();
    uint64_t v20 = sub_1B6E33988();
    uint64_t v21 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v16 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v16 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v36 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (v23 + 1 == v36) {
          unint64_t v23 = 0;
        }
        else {
          ++v23;
        }
        uint64_t v37 = *(void *)(v16 + 8 * v23);
      }
      while (v37 == -1);
      unint64_t v24 = __clz(__rbit64(~v37)) + (v23 << 6);
    }
    *(void *)(v16 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    unint64_t v25 = (void *)(*(void *)(v10 + 48) + 16 * v24);
    void *v25 = v34;
    v25[1] = v33;
    *(void *)(*(void *)(v10 + 56) + 8 * v24) = v35;
    ++*(void *)(v10 + 16);
    uint64_t v8 = v31;
  }
  while (v40 != v17)
  {
    unint64_t v29 = *(void *)(v8 + 8 * v17++ + 96);
    if (v29)
    {
      uint64_t v28 = v17 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v41;
  if (v48)
  {
    uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
    if (v38 >= 64) {
      bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v42 = -1 << v38;
    }
    *(void *)(v8 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1B6ABF534(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD90A8);
}

uint64_t sub_1B6ABF54C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v41 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1B63967B4(0, (unint64_t *)&qword_1EB980700, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo, (void (*)(void))sub_1B67FC164);
  int v42 = a2;
  uint64_t v10 = sub_1B6E32C38();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_38;
  }
  unint64_t v36 = v2;
  uint64_t v12 = 0;
  uint64_t v13 = 1 << *(unsigned char *)(v9 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & *(void *)(v9 + 64);
  uint64_t v16 = v10 + 64;
  unint64_t v39 = (void *)(v9 + 64);
  int64_t v40 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v37 = v9 + 96;
  int64_t v38 = v40 - 4;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v12 << 6);
      goto LABEL_20;
    }
    uint64_t v21 = v12 + 1;
    if (v12 + 1 >= v40) {
      goto LABEL_32;
    }
    unint64_t v22 = v39[v21];
    if (!v22)
    {
      uint64_t v21 = v12 + 2;
      if (v12 + 2 >= v40) {
        goto LABEL_32;
      }
      unint64_t v22 = v39[v21];
      if (!v22)
      {
        uint64_t v21 = v12 + 3;
        if (v12 + 3 >= v40) {
          goto LABEL_32;
        }
        unint64_t v22 = v39[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v12 = v21;
LABEL_20:
    uint64_t v23 = *(void *)(v9 + 48) + 8 * v20;
    int v24 = *(_DWORD *)v23;
    int v25 = *(unsigned __int8 *)(v23 + 4);
    uint64_t v26 = *(void *)(v41 + 72);
    uint64_t v27 = *(void *)(v9 + 56) + v26 * v20;
    if (v42) {
      sub_1B6365F60(v27, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    }
    else {
      sub_1B6366C70(v27, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    }
    sub_1B6E33918();
    sub_1B6E33928();
    if (!v25) {
      sub_1B6E33958();
    }
    uint64_t v28 = sub_1B6E33988();
    uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (v31 + 1 == v32) {
          unint64_t v31 = 0;
        }
        else {
          ++v31;
        }
        uint64_t v33 = *(void *)(v16 + 8 * v31);
      }
      while (v33 == -1);
      unint64_t v17 = __clz(__rbit64(~v33)) + (v31 << 6);
    }
    *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v11 + 48) + 8 * v17;
    *(_DWORD *)uint64_t v18 = v24;
    *(unsigned char *)(v18 + 4) = v25;
    sub_1B6365F60((uint64_t)v8, *(void *)(v11 + 56) + v26 * v17, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    ++*(void *)(v11 + 16);
  }
  while (v38 != v12)
  {
    unint64_t v22 = *(void *)(v37 + 8 * v12++);
    if (v22)
    {
      uint64_t v21 = v12 + 3;
      goto LABEL_19;
    }
  }
LABEL_32:
  if (v42)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v3 = v36;
    if (v34 >= 64) {
      bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v39 = -1 << v34;
    }
    *(void *)(v9 + 16) = 0;
LABEL_38:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v36;
  }
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1B6ABF960(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9020);
}

uint64_t sub_1B6ABF978(uint64_t a1, char a2)
{
  return sub_1B6AC40AC(a1, a2, (void (*)(void))sub_1B6ADA0AC);
}

uint64_t sub_1B6ABF990(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62B3C14(0, &qword_1E9DD5318, type metadata accessor for RGResource);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v33 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v30 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v20 = v9[v19];
    if (!v20)
    {
      uint64_t v19 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v20 = v9[v19];
      if (!v20)
      {
        uint64_t v19 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v20 = v9[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v8 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    uint64_t v23 = sub_1B6E33908();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (v26 + 1 == v27) {
          unint64_t v26 = 0;
        }
        else {
          ++v26;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v26);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v26 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v21;
    *(void *)(*(void *)(v7 + 56) + v16) = v22;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v20 = *(void *)(v5 + 96 + 8 * v8++);
    if (v20)
    {
      uint64_t v19 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v33)
  {
    uint64_t v3 = v32;
    if (v31 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v30;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v32;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6ABFC34(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1B67FB450();
  int v45 = a2;
  uint64_t v11 = sub_1B6E32C38();
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_35;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v41 = (void *)(v12 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  unint64_t v18 = (unint64_t)(v14 + 63) >> 6;
  unint64_t v39 = v3;
  int64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v43 = v6;
  uint64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v20 = v11 + 64;
  swift_retain();
  uint64_t v21 = 0;
  int64_t v42 = v18;
  unint64_t v38 = v18 - 4;
  for (i = v12; ; uint64_t v12 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_20;
    }
    uint64_t v25 = v21 + 1;
    if (v21 + 1 >= v42) {
      goto LABEL_30;
    }
    unint64_t v26 = v41[v25];
    if (!v26)
    {
      uint64_t v25 = v21 + 2;
      if (v21 + 2 >= v42) {
        goto LABEL_30;
      }
      unint64_t v26 = v41[v25];
      if (!v26)
      {
        uint64_t v25 = v21 + 3;
        if (v21 + 3 >= v42) {
          goto LABEL_30;
        }
        unint64_t v26 = v41[v25];
        if (!v26) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v21 = v25;
LABEL_20:
    uint64_t v27 = *(void *)(v43 + 72);
    unint64_t v28 = *(void *)(v12 + 48) + v27 * v24;
    if (v45)
    {
      (*v19)(v9, v28, v5);
      uint64_t v29 = *(void *)(*(void *)(v12 + 56) + 8 * v24);
    }
    else
    {
      (*v40)(v9, v28, v5);
      uint64_t v29 = *(void *)(*(void *)(v12 + 56) + 8 * v24);
      swift_bridgeObjectRetain();
    }
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v30 = sub_1B6E315A8();
    uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v32 = v30 & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v20 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v32) & ~*(void *)(v20 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v34 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (v33 + 1 == v34) {
          unint64_t v33 = 0;
        }
        else {
          ++v33;
        }
        uint64_t v35 = *(void *)(v20 + 8 * v33);
      }
      while (v35 == -1);
      unint64_t v22 = __clz(__rbit64(~v35)) + (v33 << 6);
    }
    *(void *)(v20 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v19)((char *)(*(void *)(v13 + 48) + v27 * v22), (unint64_t)v9, v5);
    *(void *)(*(void *)(v13 + 56) + 8 * v22) = v29;
    ++*(void *)(v13 + 16);
  }
  while (v38 != v21)
  {
    unint64_t v26 = *(void *)(v12 + 8 * v21++ + 96);
    if (v26)
    {
      uint64_t v25 = v21 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v3 = v39;
  if (v45)
  {
    uint64_t v36 = 1 << *(unsigned char *)(v12 + 32);
    if (v36 >= 64) {
      bzero(v41, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v41 = -1 << v36;
    }
    *(void *)(v12 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1B6AC0020(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62B3C14(0, &qword_1E9DD52E8, (void (*)(uint64_t))sub_1B68D60AC);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  int v48 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v46 = -1 << v10;
  uint64_t v47 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  int64_t v49 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      if (a2) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
    uint64_t v29 = v8 + 1;
    if (v8 + 1 >= v49) {
      goto LABEL_29;
    }
    unint64_t v30 = v9[v29];
    if (!v30)
    {
      uint64_t v29 = v8 + 2;
      if (v8 + 2 >= v49) {
        goto LABEL_29;
      }
      unint64_t v30 = v9[v29];
      if (!v30)
      {
        uint64_t v29 = v8 + 3;
        if (v8 + 3 >= v49) {
          goto LABEL_29;
        }
        unint64_t v30 = v9[v29];
        if (!v30) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v21 = __clz(__rbit64(v30)) + (v29 << 6);
    uint64_t v8 = v29;
    if (a2)
    {
LABEL_10:
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
      uint64_t v23 = *(void *)(v5 + 56) + 152 * v21;
      long long v24 = *(_OWORD *)(v23 + 112);
      long long v66 = *(_OWORD *)(v23 + 96);
      long long v67 = v24;
      long long v68 = *(_OWORD *)(v23 + 128);
      char v69 = *(unsigned char *)(v23 + 144);
      long long v25 = *(_OWORD *)(v23 + 48);
      long long v62 = *(_OWORD *)(v23 + 32);
      long long v63 = v25;
      long long v26 = *(_OWORD *)(v23 + 80);
      long long v64 = *(_OWORD *)(v23 + 64);
      long long v65 = v26;
      long long v27 = *(_OWORD *)v23;
      long long v28 = *(_OWORD *)(v23 + 16);
      goto LABEL_22;
    }
LABEL_21:
    uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 152 * v21;
    long long v32 = *(_OWORD *)(v31 + 16);
    long long v50 = *(_OWORD *)v31;
    long long v51 = v32;
    long long v33 = *(_OWORD *)(v31 + 80);
    long long v35 = *(_OWORD *)(v31 + 32);
    long long v34 = *(_OWORD *)(v31 + 48);
    long long v54 = *(_OWORD *)(v31 + 64);
    long long v55 = v33;
    long long v52 = v35;
    long long v53 = v34;
    long long v37 = *(_OWORD *)(v31 + 112);
    long long v36 = *(_OWORD *)(v31 + 128);
    long long v38 = *(_OWORD *)(v31 + 96);
    char v59 = *(unsigned char *)(v31 + 144);
    long long v57 = v37;
    long long v58 = v36;
    long long v56 = v38;
    sub_1B62CA090((uint64_t)&v50);
    long long v66 = v56;
    long long v67 = v57;
    long long v68 = v58;
    char v69 = v59;
    long long v62 = v52;
    long long v63 = v53;
    long long v64 = v54;
    long long v65 = v55;
    long long v27 = v50;
    long long v28 = v51;
LABEL_22:
    long long v60 = v27;
    long long v61 = v28;
    uint64_t v39 = sub_1B6E33908();
    uint64_t v40 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v41 = v39 & ~v40;
    unint64_t v42 = v41 >> 6;
    if (((-1 << v41) & ~*(void *)(v13 + 8 * (v41 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v41) & ~*(void *)(v13 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v43 = (unint64_t)(63 - v40) >> 6;
      do
      {
        if (v42 + 1 == v43) {
          unint64_t v42 = 0;
        }
        else {
          ++v42;
        }
        uint64_t v44 = *(void *)(v13 + 8 * v42);
      }
      while (v44 == -1);
      unint64_t v14 = __clz(__rbit64(~v44)) + (v42 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v22;
    uint64_t v15 = *(void *)(v7 + 56) + 152 * v14;
    long long v16 = v67;
    *(_OWORD *)(v15 + 96) = v66;
    *(_OWORD *)(v15 + 112) = v16;
    *(_OWORD *)(v15 + 128) = v68;
    *(unsigned char *)(v15 + 144) = v69;
    long long v17 = v63;
    *(_OWORD *)(v15 + 32) = v62;
    *(_OWORD *)(v15 + 48) = v17;
    long long v18 = v65;
    *(_OWORD *)(v15 + 64) = v64;
    *(_OWORD *)(v15 + 80) = v18;
    long long v19 = v61;
    *(_OWORD *)uint64_t v15 = v60;
    *(_OWORD *)(v15 + 16) = v19;
    ++*(void *)(v7 + 16);
  }
  while (v49 - 4 != v8)
  {
    unint64_t v30 = *(void *)(v5 + 96 + 8 * v8++);
    if (v30)
    {
      uint64_t v29 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v3 = v48;
    if (v47 >= 64) {
      bzero((void *)(v5 + 64), 8 * v49);
    }
    else {
      *uint64_t v9 = v46;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v48;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC03A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6ADA020();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  unint64_t v30 = v3;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v28 = -1 << v10;
  uint64_t v29 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_29;
    }
    unint64_t v23 = v9[v22];
    if (!v23)
    {
      uint64_t v22 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_29;
      }
      unint64_t v23 = v9[v22];
      if (!v23)
      {
        uint64_t v22 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_29;
        }
        unint64_t v23 = v9[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v8 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = sub_1B6E33908();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v25) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v26 = *(void *)(v14 + 8 * v18);
      }
      while (v26 == -1);
      unint64_t v19 = __clz(__rbit64(~v26)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v7 + 48) + 8 * v19) = v24;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v31;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v8++);
    if (v23)
    {
      uint64_t v22 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v3 = v30;
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v30;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC0628(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B63967B4(0, (unint64_t *)&unk_1E9DD5250, (void (*)(uint64_t))_s17CodeSourceSnippetCMa, (void (*)(void))sub_1B67FAD14);
  char v39 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v35 = v2;
  long long v36 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v37 = v11;
  uint64_t v38 = v5;
  unint64_t v34 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v13 + 1;
    if (v13 + 1 >= v37) {
      goto LABEL_29;
    }
    unint64_t v22 = v36[v21];
    if (!v22)
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v37) {
        goto LABEL_29;
      }
      unint64_t v22 = v36[v21];
      if (!v22)
      {
        uint64_t v21 = v13 + 3;
        if (v13 + 3 >= v37) {
          goto LABEL_29;
        }
        unint64_t v22 = v36[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v13 = v21;
LABEL_21:
    unint64_t v23 = (uint64_t *)(*(void *)(v5 + 48) + 40 * v20);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    uint64_t v27 = v23[2];
    uint64_t v26 = v23[3];
    uint64_t v28 = v23[4];
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v39 & 1) == 0)
    {
      sub_1B629C9E8(v24, v25);
      swift_retain();
    }
    v40[0] = v24;
    v40[1] = v25;
    v40[2] = v27;
    v40[3] = v26;
    v40[4] = v28;
    sub_1B6E33918();
    sub_1B6A3D8B8();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v30) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v31 = *(void *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1B629C37C((uint64_t)v40, *(void *)(v7 + 48) + 40 * v18);
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v29;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v38;
  }
  while (v34 != v13)
  {
    unint64_t v22 = *(void *)(v5 + 8 * v13++ + 96);
    if (v22)
    {
      uint64_t v21 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v3 = v35;
  if (v39)
  {
    uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
    if (v32 >= 64) {
      bzero(v36, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v36 = -1 << v32;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC098C(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9C58);
}

uint64_t sub_1B6AC09A4(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9A18);
}

uint64_t sub_1B6AC09BC(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD99E8);
}

uint64_t sub_1B6AC09D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F7E94();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_36;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  unint64_t v30 = (void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v17 = v8 + 1;
    if (v8 + 1 >= v31) {
      goto LABEL_30;
    }
    unint64_t v18 = v30[v17];
    if (!v18)
    {
      uint64_t v17 = v8 + 2;
      if (v8 + 2 >= v31) {
        goto LABEL_30;
      }
      unint64_t v18 = v30[v17];
      if (!v18)
      {
        uint64_t v17 = v8 + 3;
        if (v8 + 3 >= v31) {
          goto LABEL_30;
        }
        unint64_t v18 = v30[v17];
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v8 = v17;
LABEL_20:
    unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v20 = *v19;
    uint64_t v32 = v19[1];
    uint64_t v21 = *(void *)(v5 + 56) + 48 * v16;
    if (a2) {
      sub_1B67F7F4C(v21, (uint64_t)v33);
    }
    else {
      sub_1B69595FC(v21, (uint64_t)v33);
    }
    sub_1B6E33918();
    sub_1B6E33928();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = (void *)(*(void *)(v7 + 48) + 16 * v13);
    *uint64_t v14 = v20;
    v14[1] = v32;
    sub_1B67F7F4C((uint64_t)v33, *(void *)(v7 + 56) + 48 * v13);
    ++*(void *)(v7 + 16);
  }
  while (v31 - 4 != v8)
  {
    unint64_t v18 = *(void *)(v5 + 96 + 8 * v8++);
    if (v18)
    {
      uint64_t v17 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v28 >= 64) {
      bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v30 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_36:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC0CDC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B63967B4(0, (unint64_t *)&unk_1E9DD50E0, (void (*)(uint64_t))sub_1B67F9F08, (void (*)(void))sub_1B67F9F84);
  char v48 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v8 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_36;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  int v45 = (void *)(v5 + 64);
  int64_t v46 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v44 = v5 + 96;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v9 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v9 + 1;
    if (v9 + 1 >= v46) {
      goto LABEL_30;
    }
    unint64_t v20 = v45[v19];
    if (!v20)
    {
      uint64_t v19 = v9 + 2;
      if (v9 + 2 >= v46) {
        goto LABEL_30;
      }
      unint64_t v20 = v45[v19];
      if (!v20)
      {
        uint64_t v19 = v9 + 3;
        if (v9 + 3 >= v46) {
          goto LABEL_30;
        }
        unint64_t v20 = v45[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v9 = v19;
LABEL_20:
    uint64_t v61 = v9;
    uint64_t v21 = *(void *)(v5 + 48) + 16 * v18;
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    unint64_t v24 = *(void *)(v5 + 56) + (v18 << 7);
    if (v48)
    {
      uint64_t v59 = *(void *)(v24 + 8);
      uint64_t v60 = *(void *)v24;
      uint64_t v58 = *(void *)(v24 + 16);
      uint64_t v25 = *(void *)(v24 + 32);
      char v56 = *(unsigned char *)(v24 + 40);
      char v57 = *(unsigned char *)(v24 + 24);
      char v54 = *(unsigned char *)(v24 + 42);
      char v55 = *(unsigned char *)(v24 + 41);
      uint64_t v52 = *(void *)(v24 + 56);
      uint64_t v53 = *(void *)(v24 + 48);
      uint64_t v26 = *(void *)(v24 + 72);
      uint64_t v51 = *(void *)(v24 + 64);
      uint64_t v27 = *(void *)(v24 + 80);
      uint64_t v28 = *(void *)(v24 + 88);
      uint64_t v29 = *(void *)(v24 + 96);
      v7.i32[0] = *(_DWORD *)(v24 + 104);
      long long v49 = *(_OWORD *)(v24 + 112);
      int16x8_t v50 = (int16x8_t)vmovl_u8(v7);
    }
    else
    {
      long long v31 = *(_OWORD *)(v24 + 32);
      long long v30 = *(_OWORD *)(v24 + 48);
      long long v32 = *(_OWORD *)v24;
      long long v63 = *(_OWORD *)(v24 + 16);
      long long v64 = v31;
      long long v62 = v32;
      long long v33 = *(_OWORD *)(v24 + 112);
      long long v35 = *(_OWORD *)(v24 + 64);
      long long v34 = *(_OWORD *)(v24 + 80);
      long long v68 = *(_OWORD *)(v24 + 96);
      long long v69 = v33;
      long long v66 = v35;
      long long v67 = v34;
      long long v65 = v30;
      uint64_t v59 = *((void *)&v62 + 1);
      uint64_t v60 = v62;
      uint64_t v58 = v63;
      uint64_t v25 = v31;
      char v56 = BYTE8(v31);
      char v57 = BYTE8(v63);
      char v54 = BYTE10(v31);
      char v55 = BYTE9(v31);
      uint64_t v52 = *((void *)&v30 + 1);
      uint64_t v53 = v30;
      uint64_t v26 = *((void *)&v35 + 1);
      uint64_t v51 = v35;
      uint64_t v28 = *((void *)&v34 + 1);
      uint64_t v27 = v34;
      uint64_t v29 = v68;
      LODWORD(v30) = DWORD2(v68);
      long long v49 = v33;
      int16x8_t v50 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v30);
      sub_1B69168B8((uint64_t)&v62);
    }
    sub_1B6E33918();
    sub_1B6E33938();
    sub_1B6E33928();
    uint64_t v36 = sub_1B6E33988();
    uint64_t v37 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v38 = v36 & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v13 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v38) & ~*(void *)(v13 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v9 = v61;
    }
    else
    {
      unint64_t v40 = (unint64_t)(63 - v37) >> 6;
      uint64_t v9 = v61;
      do
      {
        if (v39 + 1 == v40) {
          unint64_t v39 = 0;
        }
        else {
          ++v39;
        }
        uint64_t v41 = *(void *)(v13 + 8 * v39);
      }
      while (v41 == -1);
      unint64_t v14 = __clz(__rbit64(~v41)) + (v39 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v8 + 48) + 16 * v14;
    *(unsigned char *)uint64_t v15 = v22;
    *(void *)(v15 + 8) = v23;
    unint64_t v16 = *(void *)(v8 + 56) + (v14 << 7);
    *(void *)unint64_t v16 = v60;
    *(void *)(v16 + 8) = v59;
    *(void *)(v16 + 16) = v58;
    *(unsigned char *)(v16 + 24) = v57;
    *(void *)(v16 + 32) = v25;
    *(unsigned char *)(v16 + 40) = v56;
    *(unsigned char *)(v16 + 41) = v55;
    *(unsigned char *)(v16 + 42) = v54;
    *(void *)(v16 + 48) = v53;
    *(void *)(v16 + 56) = v52;
    *(void *)(v16 + 64) = v51;
    *(void *)(v16 + 72) = v26;
    *(void *)(v16 + 80) = v27;
    *(void *)(v16 + 88) = v28;
    *(void *)(v16 + 96) = v29;
    *(_DWORD *)(v16 + 104) = vmovn_s16(v50).u32[0];
    v7.i32[1] = DWORD1(v49);
    *(_OWORD *)(v16 + 112) = v49;
    ++*(void *)(v8 + 16);
  }
  while (v46 - 4 != v9)
  {
    unint64_t v20 = *(void *)(v44 + 8 * v9++);
    if (v20)
    {
      uint64_t v19 = v9 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  if (v48)
  {
    uint64_t v42 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v42 >= 64) {
      bzero(v45, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *int v45 = -1 << v42;
    }
    *(void *)(v5 + 16) = 0;
LABEL_36:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1B6AC1174(uint64_t a1, char a2)
{
  return sub_1B6AC40AC(a1, a2, (void (*)(void))sub_1B6AD916C);
}

uint64_t sub_1B6AC118C(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1B67F7BA0();
  char v34 = a2;
  uint64_t v5 = sub_1B6E32C38();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_35;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 64);
  uint64_t v11 = v5 + 64;
  long long v32 = (void *)(v4 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v7 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v7 + 1;
    if (v7 + 1 >= v33) {
      goto LABEL_29;
    }
    unint64_t v22 = v32[v21];
    if (!v22)
    {
      uint64_t v21 = v7 + 2;
      if (v7 + 2 >= v33) {
        goto LABEL_29;
      }
      unint64_t v22 = v32[v21];
      if (!v22)
      {
        uint64_t v21 = v7 + 3;
        if (v7 + 3 >= v33) {
          goto LABEL_29;
        }
        unint64_t v22 = v32[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v7 = v21;
LABEL_21:
    uint64_t v23 = 16 * v20;
    uint64_t v24 = *(void *)(v4 + 48) + 16 * v20;
    int v26 = *(_DWORD *)v24;
    int v25 = *(_DWORD *)(v24 + 4);
    uint64_t v27 = *(void *)(v24 + 8);
    long long v35 = *(_OWORD *)(*(void *)(v4 + 56) + v23);
    if ((v34 & 1) == 0) {
      sub_1B67F7C58(v35, *((unint64_t *)&v35 + 1));
    }
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    sub_1B6E33928();
    uint64_t v12 = sub_1B6E33988();
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v11 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v11 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v13) >> 6;
      do
      {
        if (v15 + 1 == v28) {
          unint64_t v15 = 0;
        }
        else {
          ++v15;
        }
        uint64_t v29 = *(void *)(v11 + 8 * v15);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v15 << 6);
    }
    *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v6 + 48) + v17;
    *(_DWORD *)uint64_t v18 = v26;
    *(_DWORD *)(v18 + 4) = v25;
    *(void *)(v18 + 8) = v27;
    *(_OWORD *)(*(void *)(v6 + 56) + v17) = v35;
    ++*(void *)(v6 + 16);
  }
  while (v33 - 4 != v7)
  {
    unint64_t v22 = *(void *)(v4 + 96 + 8 * v7++);
    if (v22)
    {
      uint64_t v21 = v7 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v34)
  {
    uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
    if (v30 >= 64) {
      bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *long long v32 = -1 << v30;
    }
    *(void *)(v4 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_1B6AC1498(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F7FA8();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_36;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v30 = (void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v17 = v8 + 1;
    if (v8 + 1 >= v31) {
      goto LABEL_30;
    }
    unint64_t v18 = v30[v17];
    if (!v18)
    {
      uint64_t v17 = v8 + 2;
      if (v8 + 2 >= v31) {
        goto LABEL_30;
      }
      unint64_t v18 = v30[v17];
      if (!v18)
      {
        uint64_t v17 = v8 + 3;
        if (v8 + 3 >= v31) {
          goto LABEL_30;
        }
        unint64_t v18 = v30[v17];
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v8 = v17;
LABEL_20:
    unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v20 = *v19;
    uint64_t v32 = v19[1];
    uint64_t v21 = *(void *)(v5 + 56) + 96 * v16;
    if (a2) {
      sub_1B67F7AF0(v21, (uint64_t)v33);
    }
    else {
      sub_1B6874B44(v21, (uint64_t)v33);
    }
    sub_1B6E33918();
    sub_1B6E33928();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    unint64_t v14 = (void *)(*(void *)(v7 + 48) + 16 * v13);
    *unint64_t v14 = v20;
    v14[1] = v32;
    sub_1B67F7AF0((uint64_t)v33, *(void *)(v7 + 56) + 96 * v13);
    ++*(void *)(v7 + 16);
  }
  while (v31 - 4 != v8)
  {
    unint64_t v18 = *(void *)(v5 + 96 + 8 * v8++);
    if (v18)
    {
      uint64_t v17 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v28 >= 64) {
      bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v30 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_36:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC17A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6966C18();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_37;
  }
  uint64_t v30 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  swift_retain();
  uint64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v14 + 1;
    if (v14 + 1 >= v12) {
      goto LABEL_30;
    }
    unint64_t v20 = v9[v19];
    if (!v20)
    {
      uint64_t v19 = v14 + 2;
      if (v14 + 2 >= v12) {
        goto LABEL_30;
      }
      unint64_t v20 = v9[v19];
      if (!v20)
      {
        uint64_t v19 = v14 + 3;
        if (v14 + 3 >= v12) {
          goto LABEL_30;
        }
        unint64_t v20 = v9[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v14 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(v5 + 48) + 32 * v18;
    if (a2)
    {
      sub_1B6649008(v21, (uint64_t)v32);
      sub_1B6649008(*(void *)(v5 + 56) + 32 * v18, (uint64_t)v31);
    }
    else
    {
      sub_1B664D9F0(v21, (uint64_t)v32);
      sub_1B664D9F0(*(void *)(v5 + 56) + 32 * v18, (uint64_t)v31);
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v13 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v15 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 32 * v15;
    sub_1B6649008((uint64_t)v32, *(void *)(v7 + 48) + 32 * v15);
    sub_1B6649008((uint64_t)v31, *(void *)(v7 + 56) + v16);
    ++*(void *)(v7 + 16);
  }
  while (v12 - 4 != v14)
  {
    unint64_t v20 = *(void *)(v5 + 8 * v14++ + 96);
    if (v20)
    {
      uint64_t v19 = v14 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    if (v28 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
  }
  uint64_t result = swift_release();
  uint64_t v3 = v30;
LABEL_37:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC1A7C(uint64_t a1, char a2)
{
  return sub_1B6AC40AC(a1, a2, sub_1B6AD90D8);
}

uint64_t sub_1B6AC1A94(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD8FF0);
}

uint64_t sub_1B6AC1AAC(uint64_t a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807D0);
  char v41 = a2;
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_35;
  }
  uint64_t v36 = v4;
  uint64_t v9 = 0;
  uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v6 + 64);
  uint64_t v13 = v7 + 64;
  unint64_t v38 = (void *)(v6 + 64);
  int64_t v39 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v37 = v6 + 96;
  for (i = v6; ; uint64_t v6 = i)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      uint64_t v21 = v9;
      unint64_t v22 = v20 | (v9 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v9 + 1;
    if (v9 + 1 >= v39) {
      goto LABEL_29;
    }
    unint64_t v23 = v38[v21];
    if (!v23)
    {
      uint64_t v21 = v9 + 2;
      if (v9 + 2 >= v39) {
        goto LABEL_29;
      }
      unint64_t v23 = v38[v21];
      if (!v23)
      {
        uint64_t v21 = v9 + 3;
        if (v9 + 3 >= v39) {
          goto LABEL_29;
        }
        unint64_t v23 = v38[v21];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v22 = __clz(__rbit64(v23)) + (v21 << 6);
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v6 + 48) + 8 * v22);
    uint64_t v25 = *(void *)(v6 + 56) + 120 * v22;
    char v26 = *(unsigned char *)(v25 + 24);
    uint64_t v27 = *(void *)(v25 + 32);
    char v28 = *(unsigned char *)(v25 + 40);
    char v29 = *(unsigned char *)(v25 + 41);
    char v30 = *(unsigned char *)(v25 + 42);
    long long v46 = *(_OWORD *)(v25 + 48);
    long long v47 = *(_OWORD *)v25;
    long long v44 = *(_OWORD *)(v25 + 80);
    long long v45 = *(_OWORD *)(v25 + 64);
    uint64_t v42 = *(void *)(v25 + 96);
    uint64_t v43 = *(void *)(v25 + 16);
    v3.i32[0] = *(_DWORD *)(v25 + 104);
    uint64_t v31 = *(void *)(v25 + 112);
    if ((v41 & 1) == 0)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = sub_1B6E33908();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v32) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v33 = *(void *)(v13 + 8 * v17);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    uint64_t v9 = v21;
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v8 + 48) + 8 * v18) = v24;
    uint64_t v19 = *(void *)(v8 + 56) + 120 * v18;
    *(_OWORD *)uint64_t v19 = v47;
    *(void *)(v19 + 16) = v43;
    *(unsigned char *)(v19 + 24) = v26;
    *(void *)(v19 + 32) = v27;
    *(unsigned char *)(v19 + 40) = v28;
    *(unsigned char *)(v19 + 41) = v29;
    *(unsigned char *)(v19 + 42) = v30;
    *(_OWORD *)(v19 + 48) = v46;
    *(_OWORD *)(v19 + 64) = v45;
    *(_OWORD *)(v19 + 80) = v44;
    *(void *)(v19 + 96) = v42;
    *(_DWORD *)(v19 + 104) = vmovn_s16((int16x8_t)vmovl_u8(v3)).u32[0];
    *(void *)(v19 + 112) = v31;
    ++*(void *)(v8 + 16);
  }
  while (v39 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v37 + 8 * v9++);
    if (v23)
    {
      uint64_t v21 = v9 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v41)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v4 = v36;
    if (v34 >= 64) {
      bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v38 = -1 << v34;
    }
    *(void *)(v6 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v4 = v36;
  }
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B6AC1E40(uint64_t a1, int a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = sub_1B6E30F48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1B67FA7A4();
  int v47 = a2;
  uint64_t v11 = sub_1B6E32C38();
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_35;
  }
  int16x8_t v50 = v9;
  uint64_t v51 = v5;
  uint64_t v14 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v15 = *(void *)(v10 + 64);
  long long v44 = (void *)(v10 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  unint64_t v18 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v42 = v3;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  char v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v19 = v11 + 64;
  swift_retain();
  uint64_t v20 = 0;
  int64_t v45 = v18;
  uint64_t v46 = v12;
  unint64_t v41 = v18 - 4;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_20;
    }
    uint64_t v25 = v20 + 1;
    if (v20 + 1 >= v45) {
      goto LABEL_30;
    }
    unint64_t v26 = v44[v25];
    if (!v26)
    {
      uint64_t v25 = v20 + 2;
      if (v20 + 2 >= v45) {
        goto LABEL_30;
      }
      unint64_t v26 = v44[v25];
      if (!v26)
      {
        uint64_t v25 = v20 + 3;
        if (v20 + 3 >= v45) {
          goto LABEL_30;
        }
        unint64_t v26 = v44[v25];
        if (!v26) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v20 = v25;
LABEL_20:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v12 + 48) + v27 * v24;
    if (v47)
    {
      (*v48)(v50, v28, v51);
      char v29 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v24);
      uint64_t v30 = v29[1];
      uint64_t v49 = *v29;
    }
    else
    {
      (*v43)(v50, v28, v51);
      uint64_t v31 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v24);
      uint64_t v30 = v31[1];
      uint64_t v49 = *v31;
      swift_bridgeObjectRetain();
    }
    sub_1B6366304((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
    uint64_t v32 = sub_1B6E315A8();
    uint64_t v33 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v34 = v32 & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v36 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (v35 + 1 == v36) {
          unint64_t v35 = 0;
        }
        else {
          ++v35;
        }
        uint64_t v37 = *(void *)(v19 + 8 * v35);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v35 << 6);
    }
    *(void *)(v19 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    (*v48)((char *)(*(void *)(v13 + 48) + v27 * v21), (unint64_t)v50, v51);
    unint64_t v22 = (void *)(*(void *)(v13 + 56) + 16 * v21);
    *unint64_t v22 = v49;
    v22[1] = v30;
    ++*(void *)(v13 + 16);
    uint64_t v12 = v46;
  }
  while (v41 != v20)
  {
    unint64_t v26 = *(void *)(v12 + 8 * v20++ + 96);
    if (v26)
    {
      uint64_t v25 = v20 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint8x8_t v3 = v42;
  if (v47)
  {
    uint64_t v38 = 1 << *(unsigned char *)(v12 + 32);
    if (v38 >= 64) {
      bzero(v44, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *long long v44 = -1 << v38;
    }
    *(void *)(v12 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v13;
  return result;
}

uint64_t sub_1B6AC2258(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD92F8);
}

uint64_t sub_1B6AC2270(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F887C();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v31 = v2;
  uint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v23 = v32[v22];
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v23 = v32[v22];
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v23 = v32[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_21:
    unint64_t v24 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((a2 & 1) == 0)
    {
      id v26 = v24;
      swift_retain();
    }
    uint64_t v14 = sub_1B6E32348();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v27) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v24;
    *(void *)(*(void *)(v7 + 56) + v19) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint8x8_t v3 = v31;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC2510(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F8044();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v29 = (void *)(v5 + 64);
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v30) {
      goto LABEL_29;
    }
    unint64_t v22 = v29[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v30) {
        goto LABEL_29;
      }
      unint64_t v22 = v29[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v30) {
          goto LABEL_29;
        }
        unint64_t v22 = v29[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    sub_1B6E33918();
    sub_1B6A540C0();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v25) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v26 = *(void *)(v12 + 8 * v16);
      }
      while (v26 == -1);
      unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v23;
    *(void *)(*(void *)(v7 + 56) + v18) = v24;
    ++*(void *)(v7 + 16);
  }
  while (v30 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v27 = 1 << *(unsigned char *)(v5 + 32);
    uint8x8_t v3 = v2;
    if (v27 >= 64) {
      bzero(v29, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v29 = -1 << v27;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint8x8_t v3 = v2;
  }
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC27D8(uint64_t a1, char a2)
{
  return sub_1B6AC2EF0(a1, a2, &qword_1E9DD51E0, &qword_1E9DD0690, 0x1E4F35BF8, &qword_1E9DD0698);
}

uint64_t sub_1B6AC27FC(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F8B98();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  swift_retain();
  uint64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v14 + 1;
    if (v14 + 1 >= v12) {
      goto LABEL_29;
    }
    unint64_t v23 = v9[v22];
    if (!v23)
    {
      uint64_t v22 = v14 + 2;
      if (v14 + 2 >= v12) {
        goto LABEL_29;
      }
      unint64_t v23 = v9[v22];
      if (!v23)
      {
        uint64_t v22 = v14 + 3;
        if (v14 + 3 >= v12) {
          goto LABEL_29;
        }
        unint64_t v23 = v9[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v14 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    long long v29 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1B62FFBB0(v29, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_1B6E33918();
    sub_1B6E30FE8();
    uint64_t v15 = sub_1B6E33988();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v25) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v26 = *(void *)(v13 + 8 * v18);
      }
      while (v26 == -1);
      unint64_t v19 = __clz(__rbit64(~v26)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19) = v29;
    *(void *)(*(void *)(v7 + 56) + 8 * v19) = v24;
    ++*(void *)(v7 + 16);
  }
  while (v12 - 4 != v14)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v14++ + 96);
    if (v23)
    {
      uint64_t v22 = v14 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  if (a2)
  {
    uint64_t v27 = 1 << *(unsigned char *)(v5 + 32);
    if (v27 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v27;
    }
    *(void *)(v5 + 16) = 0;
  }
  uint64_t result = swift_release();
  uint8x8_t v3 = v2;
LABEL_36:
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC2AC8(uint64_t a1, int a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = sub_1B6E30F48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1B67F8AFC();
  int v44 = a2;
  uint64_t v11 = sub_1B6E32C38();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_35;
  }
  uint64_t v40 = v2;
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v42 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v17 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v41 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  int64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v46 = v5;
  uint64_t v18 = v11 + 64;
  swift_retain();
  uint64_t v19 = 0;
  int64_t v43 = v17;
  unint64_t v39 = v17 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_20;
    }
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v43) {
      goto LABEL_30;
    }
    unint64_t v24 = v42[v23];
    if (!v24)
    {
      uint64_t v23 = v19 + 2;
      if (v19 + 2 >= v43) {
        goto LABEL_30;
      }
      unint64_t v24 = v42[v23];
      if (!v24)
      {
        uint64_t v23 = v19 + 3;
        if (v19 + 3 >= v43) {
          goto LABEL_30;
        }
        unint64_t v24 = v42[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v16 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v19 = v23;
LABEL_20:
    uint64_t v25 = v10;
    uint64_t v26 = *(void *)(v10 + 48);
    uint64_t v27 = v6;
    uint64_t v28 = *(void *)(v6 + 72);
    uint64_t v29 = v26 + v28 * v22;
    if (v44) {
      (*v45)(v9, v29, v46);
    }
    else {
      (*v41)(v9, v29, v46);
    }
    uint64_t v30 = *(void *)(*(void *)(v25 + 56) + 8 * v22);
    sub_1B6366304((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
    uint64_t v31 = sub_1B6E315A8();
    uint64_t v32 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v35 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (v34 + 1 == v35) {
          unint64_t v34 = 0;
        }
        else {
          ++v34;
        }
        uint64_t v36 = *(void *)(v18 + 8 * v34);
      }
      while (v36 == -1);
      unint64_t v20 = __clz(__rbit64(~v36)) + (v34 << 6);
    }
    *(void *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*v45)((char *)(*(void *)(v12 + 48) + v28 * v20), (uint64_t)v9, v46);
    *(void *)(*(void *)(v12 + 56) + 8 * v20) = v30;
    ++*(void *)(v12 + 16);
    uint64_t v6 = v27;
    uint64_t v10 = v25;
  }
  while (v39 != v19)
  {
    unint64_t v24 = *(void *)(v10 + 8 * v19++ + 96);
    if (v24)
    {
      uint64_t v23 = v19 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint8x8_t v3 = v40;
  if (v44)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v10 + 32);
    if (v37 >= 64) {
      bzero(v42, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v42 = -1 << v37;
    }
    *(void *)(v10 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v12;
  return result;
}

uint64_t sub_1B6AC2ECC(uint64_t a1, char a2)
{
  return sub_1B6AC2EF0(a1, a2, (unint64_t *)&unk_1E9DD5170, &qword_1E9DD06B0, (uint64_t)off_1E6140438, &qword_1E9DD0700);
}

uint64_t sub_1B6AC2EF0(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v7 = v6;
  uint64_t v9 = *v6;
  sub_1B67F8C50(0, a3, a4, a5, a6);
  uint64_t v10 = sub_1B6E32C38();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v36 = v6;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & *(void *)(v9 + 64);
  int64_t v16 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v17 = v10 + 64;
  swift_retain();
  uint64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v25 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v26 = v25 | (v18 << 6);
      goto LABEL_21;
    }
    uint64_t v27 = v18 + 1;
    if (v18 + 1 >= v16) {
      goto LABEL_29;
    }
    unint64_t v28 = v13[v27];
    if (!v28)
    {
      uint64_t v27 = v18 + 2;
      if (v18 + 2 >= v16) {
        goto LABEL_29;
      }
      unint64_t v28 = v13[v27];
      if (!v28)
      {
        uint64_t v27 = v18 + 3;
        if (v18 + 3 >= v16) {
          goto LABEL_29;
        }
        unint64_t v28 = v13[v27];
        if (!v28) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v15 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    uint64_t v18 = v27;
LABEL_21:
    uint64_t v29 = *(void **)(*(void *)(v9 + 48) + 8 * v26);
    uint64_t v30 = *(void *)(*(void *)(v9 + 56) + 8 * v26);
    if ((a2 & 1) == 0) {
      id v31 = v29;
    }
    uint64_t v19 = sub_1B6E32348();
    uint64_t v20 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v17 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v17 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (v22 + 1 == v32) {
          unint64_t v22 = 0;
        }
        else {
          ++v22;
        }
        uint64_t v33 = *(void *)(v17 + 8 * v22);
      }
      while (v33 == -1);
      unint64_t v23 = __clz(__rbit64(~v33)) + (v22 << 6);
    }
    *(void *)(v17 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v24 = 8 * v23;
    *(void *)(*(void *)(v11 + 48) + v24) = v29;
    *(void *)(*(void *)(v11 + 56) + v24) = v30;
    ++*(void *)(v11 + 16);
  }
  while (v16 - 4 != v18)
  {
    unint64_t v28 = *(void *)(v9 + 8 * v18++ + 96);
    if (v28)
    {
      uint64_t v27 = v18 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  if (a2)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v9 + 32);
    if (v34 >= 64) {
      bzero((void *)(v9 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v13 = -1 << v34;
    }
    *(void *)(v9 + 16) = 0;
  }
  uint64_t result = swift_release();
  uint64_t v7 = v36;
LABEL_36:
  uint64_t *v7 = v11;
  return result;
}

uint64_t sub_1B6AC319C(uint64_t a1, char a2)
{
  return sub_1B6AC2EF0(a1, a2, &qword_1E9DD0708, (unint64_t *)&unk_1E9DD5160, (uint64_t)off_1E6140460, &qword_1E9DD0710);
}

uint64_t sub_1B6AC31C0(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F865C();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v8 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  id v31 = (void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v9 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v32) {
      goto LABEL_29;
    }
    unint64_t v23 = v31[v22];
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_29;
      }
      unint64_t v23 = v31[v22];
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_29;
        }
        unint64_t v23 = v31[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_21:
    *(void *)&long long v7 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    long long v33 = v7;
    uint64_t v24 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v21);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v27) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v28 = *(void *)(v13 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *((void *)&v7 + 1) = *((void *)&v33 + 1);
    *(void *)(*(void *)(v8 + 48) + 8 * v18) = v33;
    uint64_t v19 = (void *)(*(void *)(v8 + 56) + 16 * v18);
    *uint64_t v19 = v25;
    v19[1] = v26;
    ++*(void *)(v8 + 16);
  }
  while (v32 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v9++);
    if (v23)
    {
      uint64_t v22 = v9 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    uint8x8_t v3 = v2;
    if (v29 >= 64) {
      bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *id v31 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint8x8_t v3 = v2;
  }
  *uint8x8_t v3 = v8;
  return result;
}

uint64_t sub_1B6AC34A4(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0680);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v32 = v2;
  long long v33 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v23 = v33[v22];
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v23 = v33[v22];
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v23 = v33[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_21:
    uint64_t v24 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v28) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v26;
    v19[1] = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v27;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint8x8_t v3 = v32;
  if (a2)
  {
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    if (v30 >= 64) {
      bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *long long v33 = -1 << v30;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC3794(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD9108();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (void *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v22 = v21 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_29;
    }
    unint64_t v24 = v9[v23];
    if (!v24)
    {
      uint64_t v23 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_29;
      }
      unint64_t v24 = v9[v23];
      if (!v24)
      {
        uint64_t v23 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_29;
        }
        unint64_t v24 = v9[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v8 = v23;
LABEL_21:
    uint64_t v32 = *(void *)(*(void *)(v5 + 48) + 8 * v22);
    uint64_t v25 = (long long *)(*(void *)(v5 + 56) + 32 * v22);
    long long v30 = v25[1];
    long long v31 = *v25;
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v15 = sub_1B6E33988();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v26) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v27 = *(void *)(v14 + 8 * v18);
      }
      while (v27 == -1);
      unint64_t v19 = __clz(__rbit64(~v27)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v7 + 48) + 8 * v19) = v32;
    unint64_t v20 = (_OWORD *)(*(void *)(v7 + 56) + 32 * v19);
    *unint64_t v20 = v31;
    v20[1] = v30;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v24 = *(void *)(v5 + 96 + 8 * v8++);
    if (v24)
    {
      uint64_t v23 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint8x8_t v3 = v2;
    if (v28 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint8x8_t v3 = v2;
  }
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC3A90(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0600);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v33 = v2;
  uint64_t v34 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v24 = v34[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v24 = v34[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v24 = v34[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_21:
    uint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = (long long *)(*(void *)(v5 + 56) + 32 * v22);
    long long v35 = *v28;
    long long v36 = v28[1];
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v29) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v27;
    v19[1] = v26;
    unint64_t v20 = (_OWORD *)(*(void *)(v7 + 56) + 32 * v18);
    *unint64_t v20 = v35;
    v20[1] = v36;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint8x8_t v3 = v33;
  if (a2)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
    if (v31 >= 64) {
      bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v34 = -1 << v31;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC3DC0(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0B28);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v9;
  uint64_t v30 = v9;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v31 = (uint64_t *)(v5 + 64);
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v32) {
      goto LABEL_29;
    }
    unint64_t v22 = v31[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_29;
      }
      unint64_t v22 = v31[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_29;
        }
        unint64_t v22 = v31[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v24 = *(void *)(v5 + 56) + 24 * v20;
    uint64_t v25 = *(void *)v24;
    long long v33 = *(_OWORD *)(v24 + 8);
    if ((a2 & 1) == 0) {
      swift_unknownObjectRetain();
    }
    uint64_t v13 = sub_1B6E33908();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v26) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v23;
    uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
    *(void *)uint64_t v18 = v25;
    *(_OWORD *)(v18 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  while (v32 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v30 >= 64) {
      bzero(v31, 8 * v32);
    }
    else {
      *uint64_t v31 = v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC4094(uint64_t a1, char a2)
{
  return sub_1B6AC40AC(a1, a2, (void (*)(void))sub_1B6AD926C);
}

uint64_t sub_1B6AC40AC(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_35;
  }
  uint64_t v9 = 0;
  uint64_t v10 = (uint64_t *)(v6 + 64);
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v30 = -1 << v11;
  uint64_t v31 = v11;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  uint64_t v14 = v7 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v21 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v22 = v21 | (v9 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v32) {
      goto LABEL_29;
    }
    unint64_t v24 = v10[v23];
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_29;
      }
      unint64_t v24 = v10[v23];
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_29;
        }
        unint64_t v24 = v10[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_21:
    uint64_t v25 = *(void *)(*(void *)(v6 + 48) + 8 * v22);
    uint64_t v26 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = sub_1B6E33908();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v27) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v18);
      }
      while (v28 == -1);
      unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v25;
    *(void *)(*(void *)(v8 + 56) + v20) = v26;
    ++*(void *)(v8 + 16);
  }
  while (v32 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v6 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v31 >= 64) {
      bzero((void *)(v6 + 64), 8 * v32);
    }
    else {
      *uint64_t v10 = v30;
    }
    *(void *)(v6 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B6AC4344(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, &qword_1EB94A1E8);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v28 = -1 << v10;
  uint64_t v29 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  int64_t v30 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v30) {
      goto LABEL_29;
    }
    unint64_t v22 = v9[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v30) {
        goto LABEL_29;
      }
      unint64_t v22 = v9[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v30) {
          goto LABEL_29;
        }
        unint64_t v22 = v9[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(unsigned int *)(*(void *)(v5 + 48) + 4 * v20);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = MEMORY[0x1BA9B5560](*(void *)(v7 + 40), v23, 4);
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v25) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v26 = *(void *)(v13 + 8 * v17);
      }
      while (v26 == -1);
      unint64_t v18 = __clz(__rbit64(~v26)) + (v17 << 6);
    }
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_DWORD *)(*(void *)(v7 + 48) + 4 * v18) = v23;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v24;
    ++*(void *)(v7 + 16);
  }
  while (v30 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v29 >= 64) {
      bzero((void *)(v5 + 64), 8 * v30);
    }
    else {
      *uint64_t v9 = v28;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC45F4(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD9984();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v8 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v30 = a2;
  uint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 64);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v6 + 64;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v9 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v9 + 1;
    if (v9 + 1 >= v14) {
      goto LABEL_27;
    }
    unint64_t v20 = v10[v19];
    if (!v20)
    {
      uint64_t v19 = v9 + 2;
      if (v9 + 2 >= v14) {
        goto LABEL_27;
      }
      unint64_t v20 = v10[v19];
      if (!v20)
      {
        uint64_t v19 = v9 + 3;
        if (v9 + 3 >= v14) {
          goto LABEL_27;
        }
        unint64_t v20 = v10[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v9 = v19;
LABEL_20:
    *(void *)&long long v7 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
    long long v31 = v7;
    char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v18);
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v15 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v15 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v15 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v16 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *((void *)&v7 + 1) = *((void *)&v31 + 1);
    *(void *)(*(void *)(v8 + 48) + 8 * v16) = v31;
    *(unsigned char *)(*(void *)(v8 + 56) + v16) = v21;
    ++*(void *)(v8 + 16);
  }
  while (v14 - 4 != v9)
  {
    unint64_t v20 = *(void *)(v5 + 96 + 8 * v9++);
    if (v20)
    {
      uint64_t v19 = v9 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v30)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint8x8_t v3 = v2;
    if (v28 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v10 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint8x8_t v3 = v2;
  }
  *uint8x8_t v3 = v8;
  return result;
}

uint64_t sub_1B6AC48A8(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62B3C14(0, &qword_1E9DD07D0, (void (*)(uint64_t))sub_1B67F9380);
  char v39 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v36 = v2;
  uint64_t v37 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v24 = v37[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v24 = v37[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v24 = v37[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_21:
    unint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v22);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = v28[2];
    if ((v39 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v32) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v33 = *(void *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v27;
    v19[1] = v26;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + 24 * v18);
    *unint64_t v20 = v29;
    v20[1] = v30;
    _OWORD v20[2] = v31;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint8x8_t v3 = v36;
  if (v39)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    if (v34 >= 64) {
      bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v37 = -1 << v34;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC4BD8(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9AA8);
}

uint64_t sub_1B6AC4BF0(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9A48);
}

uint64_t sub_1B6AC4C08(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9BC8);
}

uint64_t sub_1B6AC4C20(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9B98);
}

uint64_t sub_1B6AC4C38(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9B68);
}

uint64_t sub_1B6AC4C50(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9B38);
}

uint64_t sub_1B6AC4C68(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9B08);
}

uint64_t sub_1B6AC4C80(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B6AD9AD8);
}

uint64_t sub_1B6AC4C98(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD07C0);
  char v42 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v39 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v40 = v11;
  uint64_t v41 = v5;
  unint64_t v38 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v43 = v13;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v40) {
      goto LABEL_29;
    }
    unint64_t v24 = v39[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v40) {
        goto LABEL_29;
      }
      unint64_t v24 = v39[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v40) {
          goto LABEL_29;
        }
        unint64_t v24 = v39[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v43 = v23;
LABEL_21:
    uint64_t v25 = *(void *)(v5 + 56);
    uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = (uint64_t *)(v25 + 56 * v22);
    uint64_t v30 = v29[1];
    uint64_t v31 = v29[3];
    uint64_t v46 = v29[2];
    uint64_t v32 = v29[5];
    uint64_t v44 = *v29;
    uint64_t v45 = v29[4];
    uint64_t v33 = v29[6];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v34 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v34) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v35 = *(void *)(v12 + 8 * v17);
      }
      while (v35 == -1);
      unint64_t v18 = __clz(__rbit64(~v35)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + 56 * v18);
    uint64_t v13 = v43;
    *unint64_t v20 = v44;
    v20[1] = v30;
    _OWORD v20[2] = v46;
    v20[3] = v31;
    v20[4] = v45;
    v20[5] = v32;
    v20[6] = v33;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v41;
  }
  while (v38 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint8x8_t v3 = v2;
  if (v42)
  {
    uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
    if (v36 >= 64) {
      bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *char v39 = -1 << v36;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC4FF0(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B63967B4(0, &qword_1E9DD07B0, (void (*)(uint64_t))type metadata accessor for VFXREBindingMeshData, (void (*)(void))sub_1B67F92C4);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v30 = v2;
  uint64_t v31 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_30;
    }
    unint64_t v22 = v31[v21];
    if (!v22)
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v22 = v31[v21];
      if (!v22)
      {
        uint64_t v21 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v22 = v31[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v13 = v21;
LABEL_21:
    char v23 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    unint64_t v24 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((a2 & 1) == 0) {
      id v25 = v24;
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v26) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v17);
      }
      while (v27 == -1);
      unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v7 + 48) + v18) = v23;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v24;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v22 = *(void *)(v5 + 8 * v13++ + 96);
    if (v22)
    {
      uint64_t v21 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_30:
  swift_release();
  uint8x8_t v3 = v30;
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    if (v28 >= 64) {
      bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v31 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC53E4(uint64_t a1, char a2)
{
  return sub_1B6AC5420(a1, a2, &qword_1E9DD52D0, &qword_1E9DD0570, MEMORY[0x1E4FBC840] + 8);
}

uint64_t sub_1B6AC5404(uint64_t a1, char a2)
{
  return sub_1B6AC5420(a1, a2, (unint64_t *)&unk_1E9DD0550, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1B6AC5420(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *v5;
  sub_1B6AD9F98(0, a3, a4, a5);
  char v46 = a2;
  uint64_t v9 = sub_1B6E32C38();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  char v42 = v5;
  uint64_t v43 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  unint64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  swift_retain();
  uint64_t v16 = 0;
  int64_t v44 = v14;
  uint64_t v45 = v8;
  unint64_t v41 = v14 - 4;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      uint64_t v47 = v16;
      unint64_t v21 = v20 | (v16 << 6);
      goto LABEL_20;
    }
    uint64_t v22 = v16 + 1;
    if (v16 + 1 >= v44) {
      goto LABEL_36;
    }
    unint64_t v23 = v43[v22];
    if (!v23)
    {
      uint64_t v22 = v16 + 2;
      if (v16 + 2 >= v44) {
        goto LABEL_36;
      }
      unint64_t v23 = v43[v22];
      if (!v23)
      {
        uint64_t v22 = v16 + 3;
        if (v16 + 3 >= v44) {
          goto LABEL_36;
        }
        unint64_t v23 = v43[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v47 = v22;
LABEL_20:
    uint64_t v24 = *(void *)(v8 + 56);
    uint64_t v25 = *(void *)(v8 + 48) + 72 * v21;
    uint64_t v27 = *(void *)v25;
    uint64_t v26 = *(void *)(v25 + 8);
    uint64_t v28 = *(void *)(v25 + 16);
    uint64_t v29 = *(void *)(v25 + 24);
    uint64_t v30 = *(void *)(v25 + 40);
    uint64_t v49 = *(void *)(v25 + 32);
    uint64_t v31 = *(void *)(v25 + 56);
    uint64_t v50 = *(void *)(v25 + 48);
    int v48 = *(_DWORD *)(v25 + 64);
    int v51 = *(unsigned __int8 *)(v25 + 68);
    uint64_t v32 = *(void *)(v24 + 8 * v21);
    if ((v46 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    if (v30)
    {
      sub_1B6E33938();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_1B6E33938();
      if (v31)
      {
LABEL_24:
        sub_1B6E33938();
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        if (v51) {
          goto LABEL_25;
        }
        goto LABEL_28;
      }
    }
    sub_1B6E33938();
    if (v51)
    {
LABEL_25:
      sub_1B6E33938();
      goto LABEL_29;
    }
LABEL_28:
    sub_1B6E33938();
    sub_1B6E33958();
LABEL_29:
    uint64_t v33 = sub_1B6E33988();
    uint64_t v34 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v15 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v35) & ~*(void *)(v15 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v18 = v32;
    }
    else
    {
      unint64_t v37 = (unint64_t)(63 - v34) >> 6;
      uint64_t v18 = v32;
      do
      {
        if (v36 + 1 == v37) {
          unint64_t v36 = 0;
        }
        else {
          ++v36;
        }
        uint64_t v38 = *(void *)(v15 + 8 * v36);
      }
      while (v38 == -1);
      unint64_t v17 = __clz(__rbit64(~v38)) + (v36 << 6);
    }
    *(void *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v19 = *(void *)(v10 + 48) + 72 * v17;
    *(void *)uint64_t v19 = v27;
    *(void *)(v19 + 8) = v26;
    *(void *)(v19 + 16) = v28;
    *(void *)(v19 + 24) = v29;
    *(void *)(v19 + 32) = v49;
    *(void *)(v19 + 40) = v30;
    *(void *)(v19 + 48) = v50;
    *(void *)(v19 + 56) = v31;
    *(_DWORD *)(v19 + 64) = v48;
    *(unsigned char *)(v19 + 68) = v51;
    *(void *)(*(void *)(v10 + 56) + 8 * v17) = v18;
    ++*(void *)(v10 + 16);
    uint64_t v8 = v45;
    uint64_t v16 = v47;
  }
  while (v41 != v16)
  {
    unint64_t v23 = *(void *)(v8 + 8 * v16++ + 96);
    if (v23)
    {
      uint64_t v22 = v16 + 3;
      goto LABEL_19;
    }
  }
LABEL_36:
  swift_release();
  uint64_t v6 = v42;
  if (v46)
  {
    uint64_t v39 = 1 << *(unsigned char *)(v8 + 32);
    if (v39 >= 64) {
      bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v43 = -1 << v39;
    }
    *(void *)(v8 + 16) = 0;
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_1B6AC5868(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD97D8();
  char v39 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v36 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v37 = v11;
  uint64_t v38 = v5;
  unint64_t v35 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v37) {
      goto LABEL_29;
    }
    unint64_t v23 = v36[v22];
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v37) {
        goto LABEL_29;
      }
      unint64_t v23 = v36[v22];
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v37) {
          goto LABEL_29;
        }
        unint64_t v23 = v36[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(v5 + 56);
    uint64_t v25 = *(void *)(v5 + 48) + 32 * v21;
    uint64_t v26 = *(void *)v25;
    char v27 = *(unsigned char *)(v25 + 8);
    uint64_t v29 = *(void *)(v25 + 16);
    uint64_t v28 = *(void *)(v25 + 24);
    uint64_t v30 = *(void *)(v24 + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v31) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v32 = *(void *)(v12 + 8 * v17);
      }
      while (v32 == -1);
      unint64_t v18 = __clz(__rbit64(~v32)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = *(void *)(v7 + 48) + 32 * v18;
    *(void *)uint64_t v19 = v26;
    *(unsigned char *)(v19 + 8) = v27;
    *(void *)(v19 + 16) = v29;
    *(void *)(v19 + 24) = v28;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v38;
  }
  while (v35 != v13)
  {
    unint64_t v23 = *(void *)(v5 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint8x8_t v3 = v2;
  if (v39)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    if (v33 >= 64) {
      bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v36 = -1 << v33;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC5B6C(uint64_t a1, char a2)
{
  return sub_1B6AC5B84(a1, a2, (void (*)(void))sub_1B6ADA548);
}

uint64_t sub_1B6AC5B84(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_35;
  }
  uint64_t v9 = 0;
  unint64_t v10 = (uint64_t *)(v6 + 64);
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v30 = -1 << v11;
  uint64_t v31 = v11;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  uint64_t v14 = v7 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v21 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v22 = v21 | (v9 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v32) {
      goto LABEL_29;
    }
    unint64_t v24 = v10[v23];
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_29;
      }
      unint64_t v24 = v10[v23];
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_29;
        }
        unint64_t v24 = v10[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_21:
    uint64_t v25 = *(void *)(*(void *)(v6 + 48) + 8 * v22);
    uint64_t v26 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    uint64_t v15 = sub_1B6E33908();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v27) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v18);
      }
      while (v28 == -1);
      unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
    }
    *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v25;
    *(void *)(*(void *)(v8 + 56) + v20) = v26;
    ++*(void *)(v8 + 16);
  }
  while (v32 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v6 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v31 >= 64) {
      bzero((void *)(v6 + 64), 8 * v32);
    }
    else {
      *unint64_t v10 = v30;
    }
    *(void *)(v6 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B6AC5E1C(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD9634();
  char v36 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_36;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v35 = v11;
  unint64_t v33 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v13 + 1;
    if (v13 + 1 >= v35) {
      goto LABEL_31;
    }
    unint64_t v19 = v34[v18];
    if (!v19)
    {
      uint64_t v18 = v13 + 2;
      if (v13 + 2 >= v35) {
        goto LABEL_31;
      }
      unint64_t v19 = v34[v18];
      if (!v19)
      {
        uint64_t v18 = v13 + 3;
        if (v13 + 3 >= v35) {
          goto LABEL_31;
        }
        unint64_t v19 = v34[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v13 = v18;
LABEL_20:
    uint64_t v20 = *(void *)(v5 + 48) + 32 * v17;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    int v24 = *(unsigned __int8 *)(v20 + 24);
    long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v17);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    sub_1B6E33938();
    if (!v24) {
      sub_1B6E33928();
    }
    uint64_t v25 = sub_1B6E33988();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (v28 + 1 == v29) {
          unint64_t v28 = 0;
        }
        else {
          ++v28;
        }
        uint64_t v30 = *(void *)(v12 + 8 * v28);
      }
      while (v30 == -1);
      unint64_t v14 = __clz(__rbit64(~v30)) + (v28 << 6);
    }
    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 32 * v14;
    *(void *)uint64_t v15 = v22;
    *(void *)(v15 + 8) = v21;
    *(void *)(v15 + 16) = v23;
    *(unsigned char *)(v15 + 24) = v24;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v14) = v37;
    ++*(void *)(v7 + 16);
  }
  while (v33 != v13)
  {
    unint64_t v19 = *(void *)(v5 + 8 * v13++ + 96);
    if (v19)
    {
      uint64_t v18 = v13 + 3;
      goto LABEL_19;
    }
  }
LABEL_31:
  swift_release();
  uint8x8_t v3 = v2;
  if (v36)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
    if (v31 >= 64) {
      bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v34 = -1 << v31;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_36:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC613C(uint64_t a1, char a2)
{
  return sub_1B6AC69D8(a1, a2, (void (*)(void))sub_1B67FB740);
}

uint64_t sub_1B6AC6154(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0670);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v33 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v30 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v32 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v19 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v20 = v9[v19];
    if (!v20)
    {
      uint64_t v19 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v20 = v9[v19];
      if (!v20)
      {
        uint64_t v19 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v20 = v9[v19];
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v8 = v19;
LABEL_20:
    uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    uint64_t v23 = sub_1B6E33908();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (v26 + 1 == v27) {
          unint64_t v26 = 0;
        }
        else {
          ++v26;
        }
        uint64_t v28 = *(void *)(v14 + 8 * v26);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v26 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v21;
    *(void *)(*(void *)(v7 + 56) + v16) = v22;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v20 = *(void *)(v5 + 96 + 8 * v8++);
    if (v20)
    {
      uint64_t v19 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v33)
  {
    uint8x8_t v3 = v32;
    if (v31 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v30;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint8x8_t v3 = v32;
  }
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC63EC(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0770);
  char v38 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v36 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  int64_t v37 = v11;
  unint64_t v35 = v11 - 4;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v37) {
      goto LABEL_29;
    }
    unint64_t v24 = v36[v23];
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v37) {
        goto LABEL_29;
      }
      unint64_t v24 = v36[v23];
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v37) {
          goto LABEL_29;
        }
        unint64_t v24 = v36[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_21:
    unint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 32 * v22;
    uint64_t v29 = *(void *)v28;
    long long v39 = *(_OWORD *)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 24);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v31) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v32 = *(void *)(v12 + 8 * v17);
      }
      while (v32 == -1);
      unint64_t v18 = __clz(__rbit64(~v32)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v27;
    v19[1] = v26;
    uint64_t v20 = *(void *)(v7 + 56) + 32 * v18;
    *(void *)uint64_t v20 = v29;
    *(_OWORD *)(v20 + 8) = v39;
    *(void *)(v20 + 24) = v30;
    ++*(void *)(v7 + 16);
  }
  while (v35 != v13)
  {
    unint64_t v24 = *(void *)(v5 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint8x8_t v3 = v2;
  if (v38)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    if (v33 >= 64) {
      bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v36 = -1 << v33;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC670C(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB97D8A8);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v10;
  uint64_t v30 = v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v13 = v6 + 64;
  int64_t v31 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v22 = v8 + 1;
    if (v8 + 1 >= v31) {
      goto LABEL_29;
    }
    unint64_t v23 = v9[v22];
    if (!v23)
    {
      uint64_t v22 = v8 + 2;
      if (v8 + 2 >= v31) {
        goto LABEL_29;
      }
      unint64_t v23 = v9[v22];
      if (!v23)
      {
        uint64_t v22 = v8 + 3;
        if (v8 + 3 >= v31) {
          goto LABEL_29;
        }
        unint64_t v23 = v9[v22];
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v8 = v22;
LABEL_21:
    uint64_t v24 = *(void *)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = sub_1B6E33908();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v26) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v27 = *(void *)(v13 + 8 * v17);
      }
      while (v27 == -1);
      unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
    }
    *(void *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v24;
    *(void *)(*(void *)(v7 + 56) + v19) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v31 - 4 != v8)
  {
    unint64_t v23 = *(void *)(v5 + 96 + 8 * v8++);
    if (v23)
    {
      uint64_t v22 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v30 >= 64) {
      bzero((void *)(v5 + 64), 8 * v31);
    }
    else {
      *uint64_t v9 = v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC69C0(uint64_t a1, char a2)
{
  return sub_1B6AC69D8(a1, a2, (void (*)(void))sub_1B67F8DD8);
}

uint64_t sub_1B6AC69D8(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v9 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_35;
  }
  uint64_t v10 = 0;
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v7 + 64;
  int64_t v31 = (void *)(v6 + 64);
  while (1)
  {
    if (v13)
    {
      unint64_t v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v23 = v22 | (v10 << 6);
      goto LABEL_21;
    }
    uint64_t v24 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_29;
    }
    unint64_t v25 = v31[v24];
    if (!v25)
    {
      uint64_t v24 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_29;
      }
      unint64_t v25 = v31[v24];
      if (!v25)
      {
        uint64_t v24 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_29;
        }
        unint64_t v25 = v31[v24];
        if (!v25) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v10 = v24;
LABEL_21:
    *(void *)&long long v8 = *(void *)(*(void *)(v6 + 48) + 8 * v23);
    long long v32 = v8;
    uint64_t v26 = *(void *)(*(void *)(v6 + 56) + 8 * v23);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v16 = sub_1B6E33988();
    uint64_t v17 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v18 = v16 & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v15 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v27 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (v19 + 1 == v27) {
          unint64_t v19 = 0;
        }
        else {
          ++v19;
        }
        uint64_t v28 = *(void *)(v15 + 8 * v19);
      }
      while (v28 == -1);
      unint64_t v20 = __clz(__rbit64(~v28)) + (v19 << 6);
    }
    *(void *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t v21 = 8 * v20;
    *((void *)&v8 + 1) = *((void *)&v32 + 1);
    *(void *)(*(void *)(v9 + 48) + v21) = v32;
    *(void *)(*(void *)(v9 + 56) + v21) = v26;
    ++*(void *)(v9 + 16);
  }
  while (v14 - 4 != v10)
  {
    unint64_t v25 = *(void *)(v6 + 96 + 8 * v10++);
    if (v25)
    {
      uint64_t v24 = v10 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v4 = v3;
    if (v29 >= 64) {
      bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *int64_t v31 = -1 << v29;
    }
    *(void *)(v6 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v4 = v3;
  }
  *uint64_t v4 = v9;
  return result;
}

uint64_t sub_1B6AC6CB4(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B6AD9328();
  char v32 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v30 = (void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v31) {
      goto LABEL_29;
    }
    unint64_t v22 = v30[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v31) {
        goto LABEL_29;
      }
      unint64_t v22 = v30[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v31) {
          goto LABEL_29;
        }
        unint64_t v22 = v30[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    char v23 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v24 = *(void *)(v5 + 56) + 24 * v20;
    uint64_t v25 = *(void *)v24;
    long long v33 = *(_OWORD *)(v24 + 8);
    if ((v32 & 1) == 0) {
      swift_unknownObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33938();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v26) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v23;
    uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
    *(void *)uint64_t v18 = v25;
    *(_OWORD *)(v18 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  while (v31 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v32)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint8x8_t v3 = v2;
    if (v28 >= 64) {
      bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v30 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint8x8_t v3 = v2;
  }
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC6F9C(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980830);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v32 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v31 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v19 = v9[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v19 = v9[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v19 = v9[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    unsigned int v20 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v17);
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    uint64_t v22 = MEMORY[0x1BA9B5560](*(void *)(v7 + 40), v20, 4);
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v14 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v15 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_DWORD *)(*(void *)(v7 + 48) + 4 * v15) = v20;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v21;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v32)
  {
    uint8x8_t v3 = v31;
    if (v30 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *uint64_t v9 = v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint8x8_t v3 = v31;
  }
  *uint8x8_t v3 = v7;
  return result;
}

uint64_t sub_1B6AC7234(uint64_t a1, char a2)
{
  return sub_1B6AC7248(a1, a2, (unint64_t *)&qword_1EB980778);
}

uint64_t sub_1B6AC7248(uint64_t a1, char a2, unint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1B62BC098(0, a3);
  char v35 = a2;
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_34;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  long long v33 = v3;
  uint64_t v34 = (void *)(v6 + 64);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  swift_retain();
  uint64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v14 + 1;
    if (v14 + 1 >= v12) {
      goto LABEL_29;
    }
    unint64_t v24 = v34[v23];
    if (!v24)
    {
      uint64_t v23 = v14 + 2;
      if (v14 + 2 >= v12) {
        goto LABEL_29;
      }
      unint64_t v24 = v34[v23];
      if (!v24)
      {
        uint64_t v23 = v14 + 3;
        if (v14 + 3 >= v12) {
          goto LABEL_29;
        }
        unint64_t v24 = v34[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v14 = v23;
LABEL_21:
    unint64_t v25 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((v35 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v15 = sub_1B6E33988();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v29) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unsigned int v20 = (void *)(*(void *)(v8 + 48) + 16 * v19);
    *unsigned int v20 = v27;
    v20[1] = v26;
    *(void *)(*(void *)(v8 + 56) + 8 * v19) = v28;
    ++*(void *)(v8 + 16);
  }
  while (v12 - 4 != v14)
  {
    unint64_t v24 = *(void *)(v6 + 8 * v14++ + 96);
    if (v24)
    {
      uint64_t v23 = v14 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v4 = v33;
  if (v35)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
    if (v31 >= 64) {
      bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v34 = -1 << v31;
    }
    *(void *)(v6 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B6AC7534(uint64_t a1, int a2)
{
  return sub_1B6AC754C(a1, a2, (void (*)(void, __n128))sub_1B6ADA2AC);
}

uint64_t sub_1B6AC754C(uint64_t a1, int a2, void (*a3)(void, __n128))
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_1B6E31118();
  uint64_t v8 = *(void *)(v7 - 8);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v7, v9);
  int64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v3;
  a3(0, v10);
  int v48 = a2;
  uint64_t v14 = sub_1B6E32C38();
  uint64_t v15 = v13;
  uint64_t v16 = v14;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_35;
  }
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = *(void *)(v15 + 64);
  int64_t v44 = (void *)(v15 + 64);
  if (v17 < 64) {
    uint64_t v19 = ~(-1 << v17);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v18;
  unint64_t v21 = (unint64_t)(v17 + 63) >> 6;
  char v42 = v5;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v46 = v8;
  unint64_t v22 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v23 = v14 + 64;
  swift_retain();
  uint64_t v24 = 0;
  int64_t v45 = v21;
  unint64_t v41 = v21 - 4;
  for (i = v15; ; uint64_t v15 = i)
  {
    if (v20)
    {
      unint64_t v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v27 = v26 | (v24 << 6);
      goto LABEL_20;
    }
    uint64_t v28 = v24 + 1;
    if (v24 + 1 >= v45) {
      goto LABEL_30;
    }
    unint64_t v29 = v44[v28];
    if (!v29)
    {
      uint64_t v28 = v24 + 2;
      if (v24 + 2 >= v45) {
        goto LABEL_30;
      }
      unint64_t v29 = v44[v28];
      if (!v29)
      {
        uint64_t v28 = v24 + 3;
        if (v24 + 3 >= v45) {
          goto LABEL_30;
        }
        unint64_t v29 = v44[v28];
        if (!v29) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v20 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v24 = v28;
LABEL_20:
    uint64_t v30 = *(void *)(v46 + 72);
    unint64_t v31 = *(void *)(v15 + 48) + v30 * v27;
    if (v48)
    {
      (*v22)(v12, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v15 + 56) + 8 * v27);
    }
    else
    {
      (*v43)(v12, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v15 + 56) + 8 * v27);
      swift_retain();
    }
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v33 = sub_1B6E315A8();
    uint64_t v34 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v23 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v35) & ~*(void *)(v23 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v37 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (v36 + 1 == v37) {
          unint64_t v36 = 0;
        }
        else {
          ++v36;
        }
        uint64_t v38 = *(void *)(v23 + 8 * v36);
      }
      while (v38 == -1);
      unint64_t v25 = __clz(__rbit64(~v38)) + (v36 << 6);
    }
    *(void *)(v23 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    (*v22)((char *)(*(void *)(v16 + 48) + v30 * v25), (unint64_t)v12, v7);
    *(void *)(*(void *)(v16 + 56) + 8 * v25) = v32;
    ++*(void *)(v16 + 16);
  }
  while (v41 != v24)
  {
    unint64_t v29 = *(void *)(v15 + 8 * v24++ + 96);
    if (v29)
    {
      uint64_t v28 = v24 + 3;
      goto LABEL_19;
    }
  }
LABEL_30:
  swift_release();
  uint64_t v5 = v42;
  if (v48)
  {
    uint64_t v39 = 1 << *(unsigned char *)(v15 + 32);
    if (v39 >= 64) {
      bzero(v44, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *int64_t v44 = -1 << v39;
    }
    *(void *)(v15 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v5 = v16;
  return result;
}

uint64_t sub_1B6AC7944(uint64_t a1, char a2)
{
  uint8x8_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B67F9D30();
  uint64_t v6 = (void *)sub_1B6E32C38();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_25;
  }
  unint64_t v29 = v3;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = (void *)(v5 + 64);
  uint64_t v9 = -1;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  uint64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_18;
    }
    uint64_t v15 = v12 + 1;
    if (v12 + 1 >= v11) {
      goto LABEL_20;
    }
    unint64_t v16 = v8[v15];
    if (!v16)
    {
      uint64_t v15 = v12 + 2;
      if (v12 + 2 >= v11) {
        goto LABEL_20;
      }
      unint64_t v16 = v8[v15];
      if (!v16)
      {
        uint64_t v15 = v12 + 3;
        if (v12 + 3 >= v11) {
          goto LABEL_20;
        }
        unint64_t v16 = v8[v15];
        if (!v16) {
          break;
        }
      }
    }
LABEL_17:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v12 = v15;
LABEL_18:
    uint64_t v17 = *(void *)(v5 + 48) + 96 * v14;
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    long long v21 = *(_OWORD *)(v17 + 16);
    long long v20 = *(_OWORD *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 48);
    long long v23 = *(_OWORD *)(v17 + 56);
    long long v24 = *(_OWORD *)(v17 + 72);
    uint64_t v25 = *(void *)(v17 + 88);
    uint64_t v26 = *(void *)(*(void *)(v5 + 56) + 8 * v14);
    if ((a2 & 1) == 0)
    {
      long long v32 = *(_OWORD *)(v17 + 56);
      long long v33 = *(_OWORD *)(v17 + 72);
      long long v30 = *(_OWORD *)(v17 + 16);
      long long v31 = *(_OWORD *)(v17 + 32);
      swift_unknownObjectRetain();
      long long v21 = v30;
      long long v20 = v31;
      long long v23 = v32;
      long long v24 = v33;
    }
    uint64_t v34 = v18;
    char v35 = v19;
    long long v36 = v21;
    long long v37 = v20;
    uint64_t v38 = v22;
    long long v39 = v23;
    long long v40 = v24;
    uint64_t v41 = v25;
    sub_1B6AC7FD0((uint64_t)&v34, v26, v6);
  }
  while (v11 - 4 != v12)
  {
    unint64_t v16 = *(void *)(v5 + 96 + 8 * v12++);
    if (v16)
    {
      uint64_t v15 = v12 + 3;
      goto LABEL_17;
    }
  }
LABEL_20:
  swift_release();
  uint8x8_t v3 = v29;
  if (a2)
  {
    uint64_t v27 = 1 << *(unsigned char *)(v5 + 32);
    if (v27 > 63) {
      bzero((void *)(v5 + 64), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v8 = -1 << v27;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_25:
  uint64_t result = swift_release();
  *uint8x8_t v3 = v6;
  return result;
}

unint64_t sub_1B6AC7B84(__int16 a1, uint64_t a2, void *a3)
{
  sub_1B6E33918();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E33988();
  unint64_t result = sub_1B6E327D8();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_WORD *)(a3[6] + 2 * result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1B6AC7D50(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v5 = type metadata accessor for TextureCache.TextureKey();
  sub_1B6E30F48();
  sub_1B6366304((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
  sub_1B6E315B8();
  uint64_t v6 = a1 + *(int *)(v5 + 24);
  unsigned int v7 = *(unsigned __int8 *)(v6 + 24);
  __int16 v8 = *(_WORD *)(v6 + 56);
  sub_1B6E33928();
  if (v7 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v7 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v8 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v8 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  sub_1B6E33938();
  sub_1B6E33988();
  unint64_t v9 = sub_1B6E327D8();
  *(void *)((char *)a3 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
  uint64_t result = sub_1B6365F60(a1, a3[6] + *(void *)(*(void *)(v5 - 8) + 72) * v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  *(void *)(a3[7] + 8 * v9) = a2;
  ++a3[2];
  return result;
}

__n128 sub_1B6AC7FD0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E33938();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33958();
  sub_1B6E33958();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33958();
  sub_1B6E33958();
  sub_1B6E33988();
  unint64_t v5 = sub_1B6E327D8();
  *(void *)((char *)a3 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v5;
  uint64_t v6 = (_OWORD *)(a3[6] + 96 * v5);
  long long v7 = *(_OWORD *)(a1 + 48);
  _OWORD v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v7;
  long long v8 = *(_OWORD *)(a1 + 80);
  void v6[4] = *(_OWORD *)(a1 + 64);
  v6[5] = v8;
  __n128 result = *(__n128 *)a1;
  long long v10 = *(_OWORD *)(a1 + 16);
  *uint64_t v6 = *(_OWORD *)a1;
  v6[1] = v10;
  *(void *)(a3[7] + 8 * v5) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1B6AC8184(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(a2 + 48);
        int64_t v11 = (void *)(v10 + 8 * v6);
        __n128 result = sub_1B6E33908();
        unint64_t v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1) {
              *uint64_t v15 = *v11;
            }
            uint64_t v16 = *(void *)(a2 + 56);
            unint64_t v17 = v16 + 24 * v3;
            uint64_t v18 = (long long *)(v16 + 24 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              long long v9 = *v18;
              *(void *)(v17 + 16) = *((void *)v18 + 2);
              *(_OWORD *)unint64_t v17 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    char v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    char v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *char v19 = v21 & v20;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC8328(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        uint64_t v9 = sub_1B6E33988();
        __n128 result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          __n128 result = v14 + 88 * v3;
          uint64_t v15 = (const void *)(v14 + 88 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 88))
          {
            __n128 result = (unint64_t)memmove((void *)result, v15, 0x58uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC8504(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        uint64_t v9 = sub_1B6E33988();
        __n128 result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void sub_1B6AC86D4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v30 = a2 + 64;
    uint64_t v12 = sub_1B6E327C8();
    uint64_t v13 = v30;
    if ((*(void *)(v30 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v28 = (v12 + 1) & v11;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v27 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v29 = v14;
      uint64_t v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        int64_t v18 = v16 * v10;
        v27(v8, *(void *)(a2 + 48) + v16 * v10, v4);
        sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
        uint64_t v19 = sub_1B6E315A8();
        (*v17)(v8, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v28)
        {
          if (v20 < v28 || a1 < (uint64_t)v20) {
            goto LABEL_6;
          }
        }
        else if (v20 < v28 && a1 < (uint64_t)v20)
        {
          goto LABEL_6;
        }
        int64_t v23 = v16 * a1;
        if (v16 * a1 < v18 || *(void *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v16))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v23 != v18)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        if (v23 < v18 || *(void *)(a2 + 56) + v23 >= (unint64_t)(*(void *)(a2 + 56) + v18 + v16))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v23 == v18) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v13 = v30;
      }
      while (((*(void *)(v30 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    long long v24 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    long long v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *long long v24 = v26 & v25;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
}

unint64_t sub_1B6AC89D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33928();
        __n128 result = sub_1B6E33988();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void sub_1B6AC8B88(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v31 = a2 + 64;
    uint64_t v12 = sub_1B6E327C8();
    uint64_t v13 = v31;
    if ((*(void *)(v31 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v28 = (v12 + 1) & v11;
      uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v30 = v5 + 16;
      uint64_t v14 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = *(void *)(v5 + 72);
      do
      {
        uint64_t v16 = v15;
        int64_t v17 = v15 * v10;
        v29(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
        uint64_t v18 = sub_1B6E315A8();
        (*v14)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v28)
        {
          if (v19 >= v28 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            uint64_t v15 = v16;
            if (v16 * a1 < v17
              || *(void *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v17 + v16))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            int64_t v23 = (_OWORD *)(v22 + 16 * a1);
            long long v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v13 = v31;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *int64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v28 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        uint64_t v13 = v31;
        uint64_t v15 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v13 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  uint64_t *v25 = v27 & v26;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
}

void sub_1B6AC8E78(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E32B48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    uint64_t v12 = sub_1B6E327C8();
    uint64_t v13 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v35 = (v12 + 1) & v11;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v34 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v36 = v14;
      int64_t v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        int64_t v18 = v16 * v10;
        v34(v8, *(void *)(a2 + 48) + v16 * v10, v4);
        uint64_t v19 = sub_1B6E315A8();
        (*v17)(v8, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v35)
        {
          if (v20 >= v35 && a1 >= (uint64_t)v20)
          {
LABEL_17:
            uint64_t v23 = *(void *)(a2 + 48);
            unint64_t v24 = v23 + v16 * a1;
            unint64_t v25 = v23 + v18 + v16;
            if (v16 * a1 < v18 || v24 >= v25)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v27 = *(void *)(a2 + 56);
            unint64_t v28 = (_OWORD *)(v27 + 32 * a1);
            uint64_t v29 = (_OWORD *)(v27 + 32 * v10);
            uint64_t v13 = v37;
            if (a1 != v10 || (a1 = v10, v28 >= v29 + 2))
            {
              long long v30 = v29[1];
              _OWORD *v28 = *v29;
              v28[1] = v30;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v35 || a1 >= (uint64_t)v20)
        {
          goto LABEL_17;
        }
        uint64_t v13 = v37;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v13 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v31 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v31;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v31 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v31;
    uint64_t v32 = (-1 << a1) - 1;
  }
  *uint64_t v31 = v33 & v32;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
}

unint64_t sub_1B6AC9128(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        __n128 result = sub_1B6E33908();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            __n128 result = v15 + 80 * v3;
            uint64_t v16 = (const void *)(v15 + 80 * v6);
            if (80 * v3 < (uint64_t)(80 * v6) || result >= (unint64_t)v16 + 80 || (BOOL v17 = v3 == v6, v3 = v6, !v17))
            {
              __n128 result = (unint64_t)memmove((void *)result, v16, 0x50uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC92D0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 8 * v6);
        __n128 result = sub_1B6E33908();
        unint64_t v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 >= v8 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            BOOL v17 = (void *)(v12 + 8 * v3);
            if (v3 != v6 || v17 >= v13 + 1) {
              void *v17 = *v13;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            unint64_t v19 = v18 + 56 * v3;
            uint64_t v20 = (long long *)(v18 + 56 * v6);
            if (56 * v3 < (uint64_t)(56 * v6) || v19 >= (unint64_t)v20 + 56 || (BOOL v21 = v3 == v6, v3 = v6, !v21))
            {
              long long v9 = *v20;
              long long v10 = v20[1];
              long long v11 = v20[2];
              *(void *)(v19 + 48) = *((void *)v20 + 6);
              *(_OWORD *)(v19 + 16) = v10;
              *(_OWORD *)(v19 + 32) = v11;
              *(_OWORD *)unint64_t v19 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v14 >= v8 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC9488(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        long long v10 = (void *)(v9 + 8 * v6);
        __n128 result = sub_1B6E33908();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        unint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *unint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        __n128 result = v15 + 8 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 8 * v6 + 8)
        {
          __n128 result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v16 = v3 == v6;
          int64_t v3 = v6;
          if (v16) {
            goto LABEL_6;
          }
          __n128 result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC9640(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = 8 * v6;
        int v10 = *(unsigned __int8 *)(*(void *)(a2 + 48) + 8 * v6 + 4);
        sub_1B6E33918();
        sub_1B6E33938();
        if (v10 != 1) {
          sub_1B6E33958();
        }
        __n128 result = sub_1B6E33988();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v11 < v8) {
          goto LABEL_13;
        }
LABEL_14:
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 8 * v3);
        unint64_t v14 = (void *)(v12 + v9);
        if (8 * v3 != v9 || v13 >= v14 + 1) {
          *uint64_t v13 = *v14;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_1B6E30F48() - 8) + 72);
        int64_t v17 = v16 * v3;
        __n128 result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          __n128 result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          __n128 result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_23;
        }
      }
      if (v11 < v8) {
        goto LABEL_6;
      }
LABEL_13:
      if (v3 < (uint64_t)v11) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
LABEL_23:
    BOOL v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *BOOL v21 = v23 & v22;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC986C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33928();
        __n128 result = sub_1B6E33988();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          __n128 result = v13 + 80 * v3;
          unint64_t v14 = (const void *)(v13 + 80 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v14 + 80))
          {
            __n128 result = (unint64_t)memmove((void *)result, v14, 0x50uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v16 = *v15;
    uint64_t v17 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v17 = *v15;
    uint64_t v16 = (-1 << result) - 1;
  }
  *uint64_t v15 = v17 & v16;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC9A2C(unint64_t a1, uint64_t a2)
{
  return sub_1B6AC9A6C(a1, a2, (unint64_t *)&unk_1EB9854C0, (uint64_t (*)(uint64_t))type metadata accessor for TextureCache);
}

unint64_t sub_1B6AC9A4C(unint64_t a1, uint64_t a2)
{
  return sub_1B6AC9A6C(a1, a2, (unint64_t *)&unk_1EB9854E0, (uint64_t (*)(uint64_t))type metadata accessor for DepthStencilCache);
}

unint64_t sub_1B6AC9A6C(unint64_t result, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  int64_t v5 = result;
  uint64_t v6 = a2 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v8 = (result + 1) & ~v7;
  if (((1 << v8) & *(void *)(a2 + 64 + 8 * (v8 >> 6))) != 0)
  {
    uint64_t v11 = ~v7;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      unint64_t v12 = (result + 1) & v11;
      do
      {
        uint64_t v13 = *(void *)(a2 + 48);
        unint64_t v14 = (void *)(v13 + 8 * v8);
        __n128 result = sub_1B6E33908();
        unint64_t v15 = result & v11;
        if (v5 >= (uint64_t)v12)
        {
          if (v15 < v12 || v5 < (uint64_t)v15) {
            goto LABEL_6;
          }
        }
        else if (v15 < v12 && v5 < (uint64_t)v15)
        {
          goto LABEL_6;
        }
        int64_t v18 = (void *)(v13 + 8 * v5);
        if (v5 != v8 || v18 >= v14 + 1) {
          *int64_t v18 = *v14;
        }
        if (v5 < (uint64_t)v8 || *(void *)(a2 + 56) + 8 * v5 >= *(void *)(a2 + 56) + 8 * v8 + 8)
        {
          sub_1B63999E0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
          __n128 result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v19 = v5 == v8;
          int64_t v5 = v8;
          if (v19) {
            goto LABEL_6;
          }
          sub_1B63999E0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
          __n128 result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v5 = v8;
LABEL_6:
        unint64_t v8 = (v8 + 1) & v11;
      }
      while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v6 + 8 * ((unint64_t)v5 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v5) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v6 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC9C7C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = 8 * v6;
        int v10 = *(unsigned __int8 *)(*(void *)(a2 + 48) + 8 * v6 + 4);
        sub_1B6E33918();
        sub_1B6E33928();
        if (v10 != 1) {
          sub_1B6E33958();
        }
        __n128 result = sub_1B6E33988();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v11 < v8) {
          goto LABEL_13;
        }
LABEL_14:
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 8 * v3);
        unint64_t v14 = (void *)(v12 + v9);
        if (8 * v3 != v9 || v13 >= v14 + 1) {
          *uint64_t v13 = *v14;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for GraphScriptingConfig.ScriptInfo() - 8) + 72);
        int64_t v17 = v16 * v3;
        __n128 result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          __n128 result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          __n128 result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_23;
        }
      }
      if (v11 < v8) {
        goto LABEL_6;
      }
LABEL_13:
      if (v3 < (uint64_t)v11) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
LABEL_23:
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6AC9EC4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33928();
        sub_1B6E33958();
        sub_1B6E33958();
        __n128 result = sub_1B6E33988();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (long long *)(v15 + 48 * v3);
          int64_t v17 = (long long *)(v15 + 48 * v6);
          if (48 * v3 < (uint64_t)(48 * v6) || v16 >= v17 + 3 || (BOOL v18 = v3 == v6, v3 = v6, !v18))
          {
            long long v9 = *v17;
            long long v10 = v17[2];
            v16[1] = v17[1];
            _OWORD v16[2] = v10;
            long long *v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6ACA0C0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33928();
        sub_1B6E33958();
        sub_1B6E33958();
        __n128 result = sub_1B6E33988();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (_OWORD *)(v10 + 16 * v3);
          uint64_t v12 = (_OWORD *)(v10 + 16 * v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          __n128 result = v13 + 96 * v3;
          unint64_t v14 = (const void *)(v13 + 96 * v6);
          if (96 * v3 < (uint64_t)(96 * v6) || result >= (unint64_t)v14 + 96 || (BOOL v15 = v3 == v6, v3 = v6, !v15))
          {
            __n128 result = (unint64_t)memmove((void *)result, v14, 0x60uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6ACA2B4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33958();
        sub_1B6E33958();
        __n128 result = sub_1B6E33988();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (void *)(v10 + 8 * v3);
          uint64_t v12 = (void *)(v10 + 8 * v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          unint64_t v14 = (void *)(v13 + 8 * v3);
          BOOL v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *unint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6ACA480(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33958();
        sub_1B6E33958();
        __n128 result = sub_1B6E33988();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v3);
          uint64_t v13 = (void *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          BOOL v15 = (_OWORD *)(v14 + 32 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            *BOOL v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6ACA64C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        __n128 result = sub_1B6E33908();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (_DWORD *)(v15 + 4 * v3);
            uint64_t v17 = (_DWORD *)(v15 + 4 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              _DWORD *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6ACA7DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        __n128 result = sub_1B6E33988();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6ACAA9C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v21 = (result + 1) & v7;
      do
      {
        uint64_t v22 = 72 * v6;
        uint64_t v8 = *(void *)(a2 + 48) + 72 * v6;
        uint64_t v9 = *(void *)(v8 + 40);
        uint64_t v10 = *(void *)(v8 + 56);
        int v23 = *(unsigned __int8 *)(v8 + 68);
        sub_1B6E33918();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        sub_1B6E33938();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
        }
        if (v10)
        {
          sub_1B6E33938();
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          if (v23) {
            goto LABEL_10;
          }
        }
        else
        {
          sub_1B6E33938();
          if (v23)
          {
LABEL_10:
            sub_1B6E33938();
            goto LABEL_13;
          }
        }
        sub_1B6E33938();
        sub_1B6E33958();
LABEL_13:
        uint64_t v11 = sub_1B6E33988();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __n128 result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v21)
        {
          if (v12 < v21) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v21)
        {
          goto LABEL_18;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_18:
          uint64_t v13 = *(void *)(a2 + 48);
          __n128 result = v13 + 72 * v3;
          uint64_t v14 = (const void *)(v13 + v22);
          if (72 * v3 < v22 || result >= (unint64_t)v14 + 72 || v3 != v6) {
            __n128 result = (unint64_t)memmove((void *)result, v14, 0x48uLL);
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            void *v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1B6ACADE0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        uint64_t v10 = sub_1B6E33988();
        __n128 result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void sub_1B6ACAFB0(unint64_t a1, uint64_t a2)
{
  uint64_t v32 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v4 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32, v5);
  uint64_t v36 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = sub_1B6E327C8();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v29 = (v11 + 1) & v10;
      uint64_t v30 = a2 + 64;
      while (1)
      {
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = v12;
        int64_t v34 = v12 * v9;
        unint64_t v35 = a1;
        uint64_t v15 = v13 + v12 * v9;
        uint64_t v16 = v36;
        sub_1B6366C70(v15, v36, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
        sub_1B6E33918();
        sub_1B6E33928();
        uint64_t v17 = v32;
        sub_1B6E30F48();
        sub_1B6366304((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
        sub_1B6E315B8();
        uint64_t v18 = v16 + *(int *)(v17 + 24);
        unsigned int v19 = *(unsigned __int8 *)(v18 + 24);
        uint64_t v33 = *(void *)(v18 + 40);
        uint64_t v31 = *(void *)(v18 + 48);
        __int16 v20 = *(_WORD *)(v18 + 56);
        sub_1B6E33928();
        if (v19 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v19 & 0x80) == 0)) {
          sub_1B6E33938();
        }
        uint64_t v12 = v14;
        if ((v20 & 0xFF00) != 0x300)
        {
          sub_1B6E33938();
          sub_1B6E33928();
          sub_1B6E33928();
          sub_1B6E33938();
          if ((v20 & 1) == 0) {
            sub_1B6E33928();
          }
        }
        a1 = v35;
        unint64_t v21 = v29;
        uint64_t v7 = v30;
        sub_1B6E33938();
        uint64_t v22 = sub_1B6E33988();
        sub_1B6366A18(v36);
        unint64_t v23 = v22 & v10;
        if ((uint64_t)a1 >= (uint64_t)v21) {
          break;
        }
        if (v23 < v21) {
          goto LABEL_17;
        }
LABEL_18:
        if ((uint64_t)(v12 * a1) < v34 || *(void *)(a2 + 48) + v12 * a1 >= *(void *)(a2 + 48) + v34 + v12)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v12 * a1 != v34)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        if ((uint64_t)(160 * a1) < (uint64_t)(160 * v9)
          || *(void *)(a2 + 56) + 160 * a1 >= *(void *)(a2 + 56) + 160 * v9 + 160)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v24 = a1 == v9;
          a1 = v9;
          if (v24) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        unint64_t v9 = (v9 + 1) & v10;
        if (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_27;
        }
      }
      if (v23 < v21) {
        goto LABEL_6;
      }
LABEL_17:
      if ((uint64_t)a1 < (uint64_t)v23) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
LABEL_27:
    unint64_t v25 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v25 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  uint64_t *v25 = v27 & v26;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
}

uint64_t sub_1B6ACB3D8()
{
  return sub_1B6ACB410((unint64_t *)&qword_1EB980740);
}

uint64_t sub_1B6ACB3F4()
{
  return sub_1B6ACB410((unint64_t *)&qword_1EB980810);
}

uint64_t sub_1B6ACB410(unint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1B62BC098(0, a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v19);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v21 = __clz(__rbit64(v20));
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = v21 + (v19 << 6);
    uint64_t v10 = v19;
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
  }
  while (v14 - 4 != v10)
  {
    unint64_t v20 = *(void *)(v3 + 96 + 8 * v10++);
    if (v20)
    {
      uint64_t v19 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6ACB5A0()
{
  uint64_t v1 = v0;
  sub_1B67FAD68();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACB73C()
{
  uint64_t v1 = v0;
  sub_1B6AD8F14();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACB8DC()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0530);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  uint64_t v29 = v1;
  __src = (void *)(v2 + 64);
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v6) {
    memmove(v5, __src, 8 * v6);
  }
  uint64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v8 + 1;
    if (v8 + 1 >= v12) {
      goto LABEL_24;
    }
    unint64_t v27 = *((void *)__src + v26);
    if (!v27)
    {
      uint64_t v26 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_24;
      }
      unint64_t v27 = *((void *)__src + v26);
      if (!v27)
      {
        uint64_t v26 = v8 + 3;
        if (v8 + 3 >= v12) {
          goto LABEL_24;
        }
        unint64_t v27 = *((void *)__src + v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v27 - 1) & v27;
    unint64_t v14 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v8 = v26;
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = 88 * v14;
    sub_1B66459A4(*(void *)(v2 + 56) + 88 * v14, (uint64_t)v31);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v15);
    *uint64_t v20 = v18;
    v20[1] = v17;
    uint64_t v21 = *(void *)(v4 + 56) + v19;
    long long v22 = v31[1];
    *(_OWORD *)uint64_t v21 = v31[0];
    long long v23 = v31[2];
    long long v24 = v31[3];
    long long v25 = v31[4];
    *(void *)(v21 + 80) = v32;
    *(_OWORD *)(v21 + 48) = v24;
    *(_OWORD *)(v21 + 64) = v25;
    *(_OWORD *)(v21 + 16) = v22;
    *(_OWORD *)(v21 + 32) = v23;
    swift_bridgeObjectRetain();
  }
  while (v12 - 4 != v8)
  {
    unint64_t v27 = *(void *)(v2 + 8 * v8++ + 96);
    if (v27)
    {
      uint64_t v26 = v8 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v29;
LABEL_26:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACBB08()
{
  uint64_t v1 = v0;
  sub_1B6AD8C64(0, (unint64_t *)&unk_1EB980780);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v2 + 96 + 8 * v9++);
    if (v23)
    {
      uint64_t v22 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACBCCC()
{
  sub_1B62BC098(0, (unint64_t *)&unk_1EB981270);
  uint64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1B6E32C28();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_24;
  }
  uint64_t v4 = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  if (v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v5) {
    memmove(v4, __src, 8 * v5);
  }
  uint64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v7 + 1;
    if (v7 + 1 >= v11) {
      goto LABEL_24;
    }
    unint64_t v27 = *((void *)__src + v26);
    if (!v27)
    {
      uint64_t v26 = v7 + 2;
      if (v7 + 2 >= v11) {
        goto LABEL_24;
      }
      unint64_t v27 = *((void *)__src + v26);
      if (!v27)
      {
        uint64_t v26 = v7 + 3;
        if (v7 + 3 >= v11) {
          goto LABEL_24;
        }
        unint64_t v27 = *((void *)__src + v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v27 - 1) & v27;
    unint64_t v13 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v7 = v26;
LABEL_12:
    uint64_t v14 = 16 * v13;
    uint64_t v15 = *(void *)(v1 + 56);
    uint64_t v16 = (void *)(*(void *)(v1 + 48) + 16 * v13);
    uint64_t v17 = v16[1];
    uint64_t v18 = 40 * v13;
    uint64_t v19 = *(void *)(v15 + v18);
    unint64_t v20 = *(void *)(v15 + v18 + 8);
    uint64_t v21 = *(void *)(v15 + v18 + 16);
    uint64_t v22 = *(void *)(v15 + v18 + 24);
    uint64_t v23 = *(void *)(v15 + v18 + 32);
    long long v24 = (void *)(*(void *)(v3 + 48) + v14);
    *long long v24 = *v16;
    v24[1] = v17;
    long long v25 = (uint64_t *)(*(void *)(v3 + 56) + v18);
    uint64_t *v25 = v19;
    v25[1] = v20;
    _OWORD v25[2] = v21;
    v25[3] = v22;
    void v25[4] = v23;
    swift_bridgeObjectRetain();
    sub_1B629C9E8(v19, v20);
  }
  while (v11 - 4 != v7)
  {
    unint64_t v27 = *(void *)(v1 + 96 + 8 * v7++);
    if (v27)
    {
      uint64_t v26 = v7 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t *v29 = v3;
  return result;
}

uint64_t sub_1B6ACBEF0()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0520);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  unint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v25 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    if (!v26)
    {
      uint64_t v25 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v25);
      if (!v26)
      {
        uint64_t v25 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v6 + 8 * v25);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v9 = v25;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    long long v24 = (void *)(*(void *)(v4 + 56) + v16);
    *long long v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v26 = *(void *)(v2 + 96 + 8 * v9++);
    if (v26)
    {
      uint64_t v25 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACC0BC()
{
  return sub_1B6ACCBE8(sub_1B6AD97A8);
}

uint64_t sub_1B6ACC0D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void **)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  long long v39 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v38 = (char *)&v32 - v8;
  sub_1B6AD9708(0, (unint64_t *)&unk_1EB9806C0, MEMORY[0x1E4FBBD58]);
  uint64_t v9 = *v0;
  uint64_t v10 = sub_1B6E32C28();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_23;
  }
  int64_t v34 = v1;
  unint64_t v12 = (void *)(v10 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13) {
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  }
  uint64_t v14 = 0;
  uint64_t v15 = *(void *)(v9 + 16);
  uint64_t v40 = v11;
  uint64_t v41 = v9;
  *(void *)(v11 + 16) = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 64);
  uint64_t v37 = v3 + 2;
  uint64_t v35 = v9 + 64;
  int64_t v36 = (unint64_t)(v16 + 63) >> 6;
  int64_t v33 = v36 - 4;
  uint64_t v19 = v38;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      uint64_t v22 = v41;
      goto LABEL_9;
    }
    uint64_t v29 = v14 + 1;
    if (v14 + 1 >= v36) {
      goto LABEL_22;
    }
    unint64_t v30 = *(void *)(v35 + 8 * v29);
    uint64_t v22 = v41;
    if (!v30)
    {
      uint64_t v29 = v14 + 2;
      if (v14 + 2 >= v36) {
        goto LABEL_22;
      }
      unint64_t v30 = *(void *)(v35 + 8 * v29);
      if (!v30)
      {
        uint64_t v29 = v14 + 3;
        if (v14 + 3 >= v36) {
          goto LABEL_22;
        }
        unint64_t v30 = *(void *)(v35 + 8 * v29);
        if (!v30) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v18 = (v30 - 1) & v30;
    unint64_t v21 = __clz(__rbit64(v30)) + (v29 << 6);
    uint64_t v14 = v29;
LABEL_9:
    unint64_t v23 = v3[9] * v21;
    long long v24 = (void (*)(char *, unint64_t, uint64_t))v3[2];
    v24(v19, *(void *)(v22 + 48) + v23, v2);
    unint64_t v25 = *(void *)(v22 + 56) + v23;
    unint64_t v26 = v39;
    v24(v39, v25, v2);
    uint64_t v27 = v40;
    uint64_t v28 = (void (*)(unint64_t, char *, uint64_t))v3[4];
    v28(*(void *)(v40 + 48) + v23, v19, v2);
    v28(*(void *)(v27 + 56) + v23, v26, v2);
  }
  while (v33 != v14)
  {
    unint64_t v30 = *(void *)(v41 + 8 * v14++ + 96);
    if (v30)
    {
      uint64_t v29 = v14 + 3;
      goto LABEL_20;
    }
  }
LABEL_22:
  uint64_t result = swift_release();
  uint64_t v1 = v34;
  uint64_t v11 = v40;
LABEL_23:
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_1B6ACC3F4()
{
  return sub_1B6ACDFE0((void (*)(void))sub_1B67FB174);
}

uint64_t sub_1B6ACC40C()
{
  return sub_1B6ACCBE8(sub_1B6ADA27C);
}

uint64_t sub_1B6ACC424()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&unk_1E9DD5150);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v16 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v18 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v18 + (v16 << 6);
    uint64_t v9 = v16;
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v9++);
    if (v17)
    {
      uint64_t v16 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACC5B8()
{
  return sub_1B6ACE554((unint64_t *)&qword_1E9DD0668);
}

uint64_t sub_1B6ACC5DC()
{
  return sub_1B6AD4838((void (*)(void))sub_1B6ADA420);
}

uint64_t sub_1B6ACC5F4()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0AA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACC7CC()
{
  return sub_1B6AD4838((void (*)(void))sub_1B67FBB54);
}

uint64_t sub_1B6ACC7E4()
{
  uint64_t v1 = v0;
  sub_1B67FBD08();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v25 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    if (!v26)
    {
      uint64_t v25 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v25);
      if (!v26)
      {
        uint64_t v25 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v6 + 8 * v25);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v9 = v25;
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void **)v17;
    long long v19 = *(void **)(v17 + 8);
    uint64_t v20 = *(unsigned __int8 *)(v17 + 20);
    uint64_t v21 = *(unsigned int *)(v17 + 16);
    uint64_t v22 = 8 * v15;
    uint64_t v23 = *(void *)(*(void *)(v2 + 56) + v22);
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v24 = v18;
    *(void *)(v24 + 8) = v19;
    *(_DWORD *)(v24 + 16) = v21;
    *(unsigned char *)(v24 + 20) = v20;
    *(void *)(*(void *)(v4 + 56) + v22) = v23;
    sub_1B6650588(v18, v19, v21 | (v20 << 32));
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v26 = *(void *)(v2 + 96 + 8 * v9++);
    if (v26)
    {
      uint64_t v25 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACC9A8()
{
  return sub_1B6AD5B50((void (*)(void))sub_1B6AD9F00);
}

uint64_t sub_1B6ACC9C0()
{
  uint64_t v1 = v0;
  sub_1B67FB978();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v32 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v32);
    if (!v33)
    {
      uint64_t v32 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v33 = *(void *)(v6 + 8 * v32);
      if (!v33)
      {
        uint64_t v32 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v33 = *(void *)(v6 + 8 * v32);
        if (!v33) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v33 - 1) & v33;
    unint64_t v15 = __clz(__rbit64(v33)) + (v32 << 6);
    uint64_t v9 = v32;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 88 * v15;
    long long v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    uint64_t v24 = v19[4];
    uint64_t v25 = v19[5];
    uint64_t v26 = v19[6];
    uint64_t v27 = v19[7];
    uint64_t v28 = v19[8];
    uint64_t v29 = v19[9];
    uint64_t v30 = v19[10];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v31 = (uint64_t *)(*(void *)(v4 + 56) + v18);
    *uint64_t v31 = v20;
    v31[1] = v21;
    v31[2] = v22;
    void v31[3] = v23;
    v31[4] = v24;
    _OWORD v31[5] = v25;
    v31[6] = v26;
    v31[7] = v27;
    uint64_t v31[8] = v28;
    v31[9] = v29;
    v31[10] = v30;
    sub_1B67FBA04(v20);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v33 = *(void *)(v2 + 96 + 8 * v9++);
    if (v33)
    {
      uint64_t v32 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACCBA0()
{
  return sub_1B6AD4838((void (*)(void))sub_1B6ADA1F0);
}

uint64_t sub_1B6ACCBB8()
{
  return sub_1B6AD5B50((void (*)(void))sub_1B6AD9E68);
}

uint64_t sub_1B6ACCBD0()
{
  return sub_1B6ACCBE8(sub_1B6AD9498);
}

uint64_t sub_1B6ACCBE8(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v19);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v10 = v19;
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_retain();
  }
  while (v14 - 4 != v10)
  {
    unint64_t v20 = *(void *)(v3 + 96 + 8 * v10++);
    if (v20)
    {
      uint64_t v19 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6ACCD88()
{
  return sub_1B6ACCDF0((unint64_t *)&unk_1E9DD5350, type metadata accessor for TriggerScript, (void (*)(void, double))sub_1B6ADA4AC);
}

uint64_t sub_1B6ACCDBC()
{
  return sub_1B6ACCDF0((unint64_t *)&unk_1E9DD0AF0, type metadata accessor for GraphScript, (void (*)(void, double))sub_1B665487C);
}

uint64_t sub_1B6ACCDF0(unint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(void, double))
{
  uint64_t v5 = v3;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_1B63999E0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
  uint64_t v36 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v10 = (char *)&v32 - v9;
  a3(0, v8);
  uint64_t v11 = *v3;
  uint64_t v12 = sub_1B6E32C28();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  int64_t v14 = (void *)(v12 + 64);
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v13 + 32)) + 63) >> 6;
  unint64_t v33 = v5;
  int64_t v34 = (const void *)(v11 + 64);
  if (v13 != v11 || (unint64_t)v14 >= v11 + 64 + 8 * v15) {
    memmove(v14, v34, 8 * v15);
  }
  uint64_t v17 = 0;
  uint64_t v18 = *(void *)(v11 + 16);
  uint64_t v39 = v13;
  *(void *)(v13 + 16) = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v11 + 64);
  int64_t v35 = (unint64_t)(v19 + 63) >> 6;
  int64_t v32 = v35 - 4;
  uint64_t v22 = v37;
  for (uint64_t i = v38;
        ;
        sub_1B6AD955C((uint64_t)v10, *(void *)(v28 + 56) + v27, v22, i, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff))
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v25 = v24 | (v17 << 6);
      goto LABEL_12;
    }
    uint64_t v29 = v17 + 1;
    if (v17 + 1 >= v35) {
      goto LABEL_24;
    }
    unint64_t v30 = *((void *)v34 + v29);
    if (!v30)
    {
      uint64_t v29 = v17 + 2;
      if (v17 + 2 >= v35) {
        goto LABEL_24;
      }
      unint64_t v30 = *((void *)v34 + v29);
      if (!v30)
      {
        uint64_t v29 = v17 + 3;
        if (v17 + 3 >= v35) {
          goto LABEL_24;
        }
        unint64_t v30 = *((void *)v34 + v29);
        if (!v30) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v21 = (v30 - 1) & v30;
    unint64_t v25 = __clz(__rbit64(v30)) + (v29 << 6);
    uint64_t v17 = v29;
LABEL_12:
    char v26 = *(unsigned char *)(*(void *)(v11 + 48) + v25);
    unint64_t v27 = *(void *)(v36 + 72) * v25;
    sub_1B63B153C(*(void *)(v11 + 56) + v27, (uint64_t)v10, v22, i, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    uint64_t v28 = v39;
    *(unsigned char *)(*(void *)(v39 + 48) + v25) = v26;
  }
  while (v32 != v17)
  {
    unint64_t v30 = *(void *)(v11 + 8 * v17++ + 96);
    if (v30)
    {
      uint64_t v29 = v17 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v5 = v33;
  uint64_t v13 = v39;
LABEL_26:
  *uint64_t v5 = v13;
  return result;
}

uint64_t sub_1B6ACD0AC()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980750);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    if (!v27)
    {
      uint64_t v26 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v26);
      if (!v27)
      {
        uint64_t v26 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v9 = v26;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    LOBYTE(v21) = *(unsigned char *)(v21 + 16);
    unint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v24 = v19;
    v24[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(void *)(v25 + 8) = v23;
    *(unsigned char *)(v25 + 16) = v21;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v27 = *(void *)(v2 + 96 + 8 * v9++);
    if (v27)
    {
      uint64_t v26 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACD284()
{
  uint64_t v1 = v0;
  sub_1B67F8F84();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v17 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v17);
      if (!v18)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v17);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v9 = v17;
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v18 = *(void *)(v2 + 96 + 8 * v9++);
    if (v18)
    {
      uint64_t v17 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACD41C()
{
  return sub_1B6AD5174(sub_1B62B3C80);
}

uint64_t sub_1B6ACD434()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v20;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACD608()
{
  uint64_t v1 = v0;
  sub_1B67FB914();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v17 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v17);
      if (!v18)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v17);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v19 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v19 + (v17 << 6);
    uint64_t v9 = v17;
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v18 = *(void *)(v2 + 96 + 8 * v9++);
    if (v18)
    {
      uint64_t v17 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACD784()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD51B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v20 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v20 + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACD920()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6AD93BC();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  uint64_t v28 = v1;
  uint64_t v29 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v29, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v31 = v3 + 16;
  int64_t v27 = v30 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v30) {
      goto LABEL_24;
    }
    unint64_t v24 = *((void *)v29 + v23);
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v30) {
        goto LABEL_24;
      }
      unint64_t v24 = *((void *)v29 + v23);
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v30) {
          goto LABEL_24;
        }
        unint64_t v24 = *((void *)v29 + v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v24 - 1) & v24;
    unint64_t v18 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    uint64_t v20 = 16 * v18;
    unint64_t v21 = *(void *)(v9 + 48) + v19;
    uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v32 = *(_OWORD *)(*(void *)(v7 + 56) + v20);
    v22(v21, v6, v2);
    *(_OWORD *)(*(void *)(v9 + 56) + v20) = v32;
    swift_retain();
  }
  while (v27 != v13)
  {
    unint64_t v24 = *(void *)(v7 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v28;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6ACDBC4()
{
  uint64_t v1 = v0;
  sub_1B67FA6EC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v17 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v17);
      if (!v18)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v17);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v9 = v17;
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v18 = *(void *)(v2 + 96 + 8 * v9++);
    if (v18)
    {
      uint64_t v17 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACDD78()
{
  uint64_t v1 = v0;
  sub_1B6AD9C88();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    if (!v27)
    {
      uint64_t v26 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v26);
      if (!v27)
      {
        uint64_t v26 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v9 = v26;
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 40 * v15);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v22 = v17[4];
    uint64_t v23 = 8 * v15;
    uint64_t v24 = *(void *)(*(void *)(v2 + 56) + v23);
    uint64_t v25 = (uint64_t *)(*(void *)(v4 + 48) + v16);
    uint64_t *v25 = *v17;
    v25[1] = v19;
    _OWORD v25[2] = v20;
    v25[3] = v21;
    void v25[4] = v22;
    *(void *)(*(void *)(v4 + 56) + v23) = v24;
    sub_1B629C9E8(v18, v19);
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v27 = *(void *)(v2 + 96 + 8 * v9++);
    if (v27)
    {
      uint64_t v26 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACDF38()
{
  return sub_1B6AD5174(sub_1B6AD9C28);
}

uint64_t sub_1B6ACDF50()
{
  return sub_1B6AD5174(sub_1B6AD938C);
}

uint64_t sub_1B6ACDF68()
{
  return sub_1B6ACDFE0((void (*)(void))sub_1B67FA500);
}

uint64_t sub_1B6ACDF80()
{
  return sub_1B6AD5174(sub_1B6AD9A78);
}

uint64_t sub_1B6ACDF98()
{
  return sub_1B6AD5174(sub_1B6AD9BF8);
}

uint64_t sub_1B6ACDFB0()
{
  return sub_1B6ACDFE0(sub_1B6AD9468);
}

uint64_t sub_1B6ACDFC8()
{
  return sub_1B6ACDFE0((void (*)(void))sub_1B67F941C);
}

uint64_t sub_1B6ACDFE0(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v7 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v10 = v23;
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v14 - 4 != v10)
  {
    unint64_t v24 = *(void *)(v3 + 96 + 8 * v10++);
    if (v24)
    {
      uint64_t v23 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6ACE194()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD5140);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    if (!v27)
    {
      uint64_t v26 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v26);
      if (!v27)
      {
        uint64_t v26 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v28 = __clz(__rbit64(v27));
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = v28 + (v26 << 6);
    uint64_t v9 = v26;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 80 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)(v19 + 64);
    long long v21 = *(_OWORD *)v19;
    long long v22 = *(_OWORD *)(v19 + 16);
    long long v23 = *(_OWORD *)(v19 + 32);
    long long v24 = *(_OWORD *)(v19 + 48);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v25 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v25 = v21;
    *(_OWORD *)(v25 + 16) = v22;
    *(_OWORD *)(v25 + 32) = v23;
    *(_OWORD *)(v25 + 48) = v24;
    *(unsigned char *)(v25 + 64) = v20;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v27 = *(void *)(v2 + 96 + 8 * v9++);
    if (v27)
    {
      uint64_t v26 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACE350()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980790);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v28 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    if (!v29)
    {
      uint64_t v28 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v28);
      if (!v29)
      {
        uint64_t v28 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v29 = *(void *)(v6 + 8 * v28);
        if (!v29) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v9 = v28;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 56 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    char v26 = *(unsigned char *)(v19 + 48);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v27 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v27 = v20;
    *(void *)(v27 + 8) = v21;
    *(void *)(v27 + 16) = v22;
    *(void *)(v27 + 24) = v23;
    *(void *)(v27 + 32) = v24;
    *(void *)(v27 + 40) = v25;
    *(unsigned char *)(v27 + 48) = v26;
    sub_1B629EBB8(v20, v21, v22, v23, v24, v25, v26);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v29 = *(void *)(v2 + 96 + 8 * v9++);
    if (v29)
    {
      uint64_t v28 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACE530()
{
  return sub_1B6ACE554((unint64_t *)&qword_1E9DD0858);
}

uint64_t sub_1B6ACE554(unint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1B62BC098(0, a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v7 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v20 = __clz(__rbit64(v19));
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = v20 + (v18 << 6);
    uint64_t v10 = v18;
LABEL_12:
    char v17 = *(unsigned char *)(*(void *)(v3 + 56) + v16);
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 56) + v16) = v17;
  }
  while (v14 - 4 != v10)
  {
    unint64_t v19 = *(void *)(v3 + 96 + 8 * v10++);
    if (v19)
    {
      uint64_t v18 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6ACE6E0()
{
  uint64_t v1 = v0;
  sub_1B67F9648();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v30 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    if (!v31)
    {
      uint64_t v30 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v30);
      if (!v31)
      {
        uint64_t v30 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v31 = *(void *)(v6 + 8 * v30);
        if (!v31) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v30 << 6);
    uint64_t v9 = v30;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 80 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    unint64_t v20 = *(void **)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 48);
    uint64_t v27 = *(void *)(v19 + 56);
    uint64_t v28 = *(void **)(v19 + 64);
    LOBYTE(v19) = *(unsigned char *)(v19 + 72);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v29 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v29 = v20;
    *(void *)(v29 + 8) = v21;
    *(void *)(v29 + 16) = v22;
    *(void *)(v29 + 24) = v23;
    *(void *)(v29 + 32) = v24;
    *(void *)(v29 + 40) = v25;
    *(void *)(v29 + 48) = v26;
    *(void *)(v29 + 56) = v27;
    *(void *)(v29 + 64) = v28;
    *(unsigned char *)(v29 + 72) = v19;
    sub_1B67A2324(v20, v21, v22, v23, v24, v25, v26, v27, v28, v19);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v31 = *(void *)(v2 + 96 + 8 * v9++);
    if (v31)
    {
      uint64_t v30 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACE8C0()
{
  uint64_t v1 = v0;
  sub_1B67F752C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACEA60()
{
  uint64_t v1 = v0;
  sub_1B67F7434();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    if (!v27)
    {
      uint64_t v26 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v26);
      if (!v27)
      {
        uint64_t v26 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v9 = v26;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = 40 * v15;
    uint64_t v18 = *(void *)(v2 + 56) + v17;
    id v19 = *(void **)v18;
    int v20 = *(_DWORD *)(v18 + 16);
    char v21 = *(unsigned char *)(v18 + 20);
    uint64_t v22 = *(void *)(v18 + 8);
    long long v23 = *(_OWORD *)(v18 + 24);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    uint64_t v24 = *(void *)(v4 + 56) + v17;
    *(void *)uint64_t v24 = v19;
    *(void *)(v24 + 8) = v22;
    *(_DWORD *)(v24 + 16) = v20;
    *(unsigned char *)(v24 + 20) = v21;
    *(_OWORD *)(v24 + 24) = v23;
    id v25 = v19;
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v27 = *(void *)(v2 + 96 + 8 * v9++);
    if (v27)
    {
      uint64_t v26 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACEC40()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB985550);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_1B63BCBB8(*(void *)(v2 + 56) + 8 * v15, (uint64_t)v21);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1B67F99AC((uint64_t)v21, *(void *)(v4 + 56) + v16);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 8 * v9++ + 96);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACEE0C()
{
  uint64_t v1 = v0;
  sub_1B67F96D4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  int v20 = v1;
  __src = (void *)(v2 + 64);
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v6) {
    memmove(v5, __src, 8 * v6);
  }
  uint64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v22 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_12;
    }
    uint64_t v17 = v8 + 1;
    if (v8 + 1 >= v22) {
      goto LABEL_24;
    }
    unint64_t v18 = *((void *)__src + v17);
    if (!v18)
    {
      uint64_t v17 = v8 + 2;
      if (v8 + 2 >= v22) {
        goto LABEL_24;
      }
      unint64_t v18 = *((void *)__src + v17);
      if (!v18)
      {
        uint64_t v17 = v8 + 3;
        if (v8 + 3 >= v22) {
          goto LABEL_24;
        }
        unint64_t v18 = *((void *)__src + v17);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v8 = v17;
LABEL_12:
    uint64_t v14 = 8 * v13;
    uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    uint64_t v16 = 832 * v13;
    sub_1B6AD8CDC(*(void *)(v2 + 56) + 832 * v13, (uint64_t)v23, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    *(void *)(*(void *)(v4 + 48) + v14) = v15;
    sub_1B6AD8CDC((uint64_t)v23, *(void *)(v4 + 56) + v16, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    sub_1B6AD8D4C((uint64_t)v23);
  }
  while (v22 - 4 != v8)
  {
    unint64_t v18 = *(void *)(v2 + 8 * v8++ + 96);
    if (v18)
    {
      uint64_t v17 = v8 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v20;
LABEL_26:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACF03C()
{
  uint64_t v1 = v0;
  sub_1B67F7DCC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v19);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v9 = v19;
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    sub_1B62C6AA8(v17);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v20 = *(void *)(v2 + 96 + 8 * v9++);
    if (v20)
    {
      uint64_t v19 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACF1D4()
{
  uint64_t v1 = v0;
  sub_1B67F7E30();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    unint64_t v16 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    char v17 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = v16;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v17;
    sub_1B62C6AA8(v16);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACF36C()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD5100);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v27 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    if (!v28)
    {
      uint64_t v27 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v27);
      if (!v28)
      {
        uint64_t v27 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v28 = *(void *)(v6 + 8 * v27);
        if (!v28) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v27 << 6);
    uint64_t v9 = v27;
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    unint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    LOBYTE(v21) = *(unsigned char *)(v21 + 24);
    id v25 = (void *)(*(void *)(v4 + 48) + v16);
    void *v25 = v19;
    v25[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(unsigned char *)(v26 + 8) = v23;
    *(void *)(v26 + 16) = v24;
    *(unsigned char *)(v26 + 24) = v21;
    swift_bridgeObjectRetain();
    sub_1B62C6AA8(v22);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v28 = *(void *)(v2 + 96 + 8 * v9++);
    if (v28)
    {
      uint64_t v27 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACF558()
{
  uint64_t v1 = v0;
  sub_1B63967B4(0, &qword_1E9DD0578, (void (*)(uint64_t))type metadata accessor for XcodeInfo, (void (*)(void))sub_1B67F7B4C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 2 * v15;
    __int16 v17 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_WORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACF72C()
{
  uint64_t v1 = v0;
  uint64_t v36 = sub_1B6E30F48();
  uint64_t v2 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36, v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B67FA58C();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1B6E32C28();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v9 = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  unint64_t v31 = v1;
  long long v32 = (const void *)(v6 + 64);
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10) {
    memmove(v9, v32, 8 * v10);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *(void *)(v6 + 16);
  uint64_t v37 = v8;
  *(void *)(v8 + 16) = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  uint64_t v34 = v2 + 32;
  uint64_t v35 = v2 + 16;
  int64_t v33 = (unint64_t)(v14 + 63) >> 6;
  int64_t v30 = v33 - 4;
  for (uint64_t i = v36; ; (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v25 + 56) + v24, v5, i))
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_12;
    }
    uint64_t v27 = v12 + 1;
    if (v12 + 1 >= v33) {
      goto LABEL_24;
    }
    unint64_t v28 = *((void *)v32 + v27);
    if (!v28)
    {
      uint64_t v27 = v12 + 2;
      if (v12 + 2 >= v33) {
        goto LABEL_24;
      }
      unint64_t v28 = *((void *)v32 + v27);
      if (!v28)
      {
        uint64_t v27 = v12 + 3;
        if (v12 + 3 >= v33) {
          goto LABEL_24;
        }
        unint64_t v28 = *((void *)v32 + v27);
        if (!v28) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v28 - 1) & v28;
    unint64_t v19 = __clz(__rbit64(v28)) + (v27 << 6);
    uint64_t v12 = v27;
LABEL_12:
    uint64_t v20 = 8 * v19;
    uint64_t v21 = *(void *)(v6 + 48) + 8 * v19;
    int v22 = *(_DWORD *)v21;
    char v23 = *(unsigned char *)(v21 + 4);
    unint64_t v24 = *(void *)(v2 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v5, *(void *)(v6 + 56) + v24, i);
    uint64_t v25 = v37;
    uint64_t v26 = *(void *)(v37 + 48) + v20;
    *(_DWORD *)uint64_t v26 = v22;
    *(unsigned char *)(v26 + 4) = v23;
  }
  while (v30 != v12)
  {
    unint64_t v28 = *(void *)(v6 + 8 * v12++ + 96);
    if (v28)
    {
      uint64_t v27 = v12 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v31;
  uint64_t v8 = v37;
LABEL_26:
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_1B6ACF9E4()
{
  uint64_t v1 = v0;
  sub_1B67FB298();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v20 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v20 + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACFB60()
{
  uint64_t v1 = v0;
  sub_1B6ADA3A8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id v22 = v20;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACFD08()
{
  uint64_t v1 = v0;
  sub_1B62B3C14(0, &qword_1EB980748, (void (*)(uint64_t))sub_1B67F8728);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v25 = __clz(__rbit64(v24));
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = v25 + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v20;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6ACFEC8()
{
  uint64_t v1 = v0;
  sub_1B639696C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    if (!v27)
    {
      uint64_t v26 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v26);
      if (!v27)
      {
        uint64_t v26 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v9 = v26;
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 80 * v15;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 32);
    char v20 = *(unsigned char *)(v16 + 40);
    uint64_t v21 = *(void *)(v16 + 48);
    char v22 = *(unsigned char *)(v16 + 56);
    long long v23 = *(_OWORD *)(v16 + 64);
    long long v24 = *(_OWORD *)(v16 + 16);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v25 = *(void *)(v4 + 56) + 80 * v15;
    *(void *)uint64_t v25 = v18;
    *(void *)(v25 + 8) = v17;
    *(_OWORD *)(v25 + 16) = v24;
    *(void *)(v25 + 32) = v19;
    *(unsigned char *)(v25 + 40) = v20;
    *(void *)(v25 + 48) = v21;
    *(unsigned char *)(v25 + 56) = v22;
    *(_OWORD *)(v25 + 64) = v23;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v27 = *(void *)(v2 + 96 + 8 * v9++);
    if (v27)
    {
      uint64_t v26 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD009C()
{
  return sub_1B6AD00DC((void (*)(void))sub_1B67FA0F0, (void (*)(unint64_t, char *))sub_1B6AD95CC, (void (*)(char *, uint64_t))sub_1B6AD9600);
}

uint64_t sub_1B6AD00DC(void (*a1)(void), void (*a2)(unint64_t, char *), void (*a3)(char *, uint64_t))
{
  uint64_t v6 = v3;
  a1(0);
  uint64_t v7 = *v3;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v26 = v6;
  uint64_t v10 = (void *)(v8 + 64);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v12) {
    memmove(v10, (const void *)(v7 + 64), 8 * v12);
  }
  uint64_t v14 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v14 + 1;
    if (v14 + 1 >= v18) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v11 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v14 + 2;
      if (v14 + 2 >= v18) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v11 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v14 + 3;
        if (v14 + 3 >= v18) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v11 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v14 = v23;
LABEL_12:
    uint64_t v21 = 8 * v20;
    uint64_t v22 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
    a2(*(void *)(v7 + 56) + 8 * v20, v27);
    *(void *)(*(void *)(v9 + 48) + v21) = v22;
    a3(v27, *(void *)(v9 + 56) + v21);
  }
  while (v18 - 4 != v14)
  {
    unint64_t v24 = *(void *)(v7 + 8 * v14++ + 96);
    if (v24)
    {
      uint64_t v23 = v14 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v6 = v26;
LABEL_26:
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_1B6AD02BC()
{
  return sub_1B6AD00DC((void (*)(void))sub_1B67F9E00, (void (*)(unint64_t, char *))sub_1B63B9468, (void (*)(char *, uint64_t))sub_1B6AD9528);
}

uint64_t sub_1B6AD02FC()
{
  uint64_t v1 = v0;
  sub_1B63967B4(0, &qword_1E9DD0890, (void (*)(uint64_t))sub_1B67FA2B8, (void (*)(void))sub_1B67FA338);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = 24 * v15;
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 56) + v17);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v17);
    *uint64_t v22 = v20;
    v22[1] = v19;
    v22[2] = v21;
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD04E4()
{
  uint64_t v1 = v0;
  sub_1B67FA204();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v28 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    if (!v29)
    {
      uint64_t v28 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v28);
      if (!v29)
      {
        uint64_t v28 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v29 = *(void *)(v6 + 8 * v28);
        if (!v29) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v9 = v28;
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void *)(v17 + 24);
    char v19 = *(unsigned char *)(v17 + 32);
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 24);
    char v23 = *(unsigned char *)(v20 + 32);
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    long long v25 = *(_OWORD *)(v17 + 8);
    long long v26 = *(_OWORD *)(v20 + 8);
    *(void *)uint64_t v24 = *(void *)v17;
    *(_OWORD *)(v24 + 8) = v25;
    *(void *)(v24 + 24) = v18;
    *(unsigned char *)(v24 + 32) = v19;
    uint64_t v27 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v27 = v21;
    *(_OWORD *)(v27 + 8) = v26;
    *(void *)(v27 + 24) = v22;
    *(unsigned char *)(v27 + 32) = v23;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v29 = *(void *)(v2 + 96 + 8 * v9++);
    if (v29)
    {
      uint64_t v28 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD06C8()
{
  uint64_t v1 = v0;
  sub_1B6AD8C64(0, (unint64_t *)&qword_1EB9807F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD0878()
{
  return sub_1B6AD6E7C((unint64_t *)&qword_1E9DD0518);
}

uint64_t sub_1B6AD088C()
{
  uint64_t v1 = v0;
  sub_1B67FBA88();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v27 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    if (!v28)
    {
      uint64_t v27 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v27);
      if (!v28)
      {
        uint64_t v27 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v28 = *(void *)(v6 + 8 * v27);
        if (!v28) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v27 << 6);
    uint64_t v9 = v27;
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    unint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    LOBYTE(v17) = *(unsigned char *)(v17 + 24);
    uint64_t v21 = 16 * v15;
    uint64_t v22 = (uint64_t *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v25 = v18;
    *(unsigned char *)(v25 + 8) = v19;
    *(void *)(v25 + 16) = v20;
    *(unsigned char *)(v25 + 24) = v17;
    long long v26 = (void *)(*(void *)(v4 + 56) + v21);
    *long long v26 = v23;
    v26[1] = v24;
    sub_1B62C6AA8(v18);
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v28 = *(void *)(v2 + 96 + 8 * v9++);
    if (v28)
    {
      uint64_t v27 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD0A58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B67FA8C0();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  uint64_t v25 = v1;
  long long v26 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v26, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v28 = v3 + 32;
  uint64_t v29 = v3 + 16;
  int64_t v27 = (unint64_t)(v14 + 63) >> 6;
  int64_t v24 = v27 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v21 = v13 + 1;
    if (v13 + 1 >= v27) {
      goto LABEL_24;
    }
    unint64_t v22 = *((void *)v26 + v21);
    if (!v22)
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v27) {
        goto LABEL_24;
      }
      unint64_t v22 = *((void *)v26 + v21);
      if (!v22)
      {
        uint64_t v21 = v13 + 3;
        if (v13 + 3 >= v27) {
          goto LABEL_24;
        }
        unint64_t v22 = *((void *)v26 + v21);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v13 = v21;
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    char v20 = *(unsigned char *)(*(void *)(v7 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v19, v6, v2);
    *(unsigned char *)(*(void *)(v9 + 56) + v18) = v20;
  }
  while (v24 != v13)
  {
    unint64_t v22 = *(void *)(v7 + 8 * v13++ + 96);
    if (v22)
    {
      uint64_t v21 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v25;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6AD0CF0()
{
  uint64_t v1 = v0;
  uint64_t v39 = sub_1B6E31118();
  uint64_t v2 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39, v3);
  uint64_t v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6AD9DBC();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1B6E32C28();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v8 = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  int64_t v33 = v1;
  uint64_t v34 = (const void *)(v5 + 64);
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9) {
    memmove(v8, v34, 8 * v9);
  }
  uint64_t v11 = 0;
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v40 = v7;
  uint64_t v41 = v5;
  *(void *)(v7 + 16) = v12;
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  uint64_t v36 = v2 + 32;
  uint64_t v37 = v2 + 16;
  int64_t v35 = (unint64_t)(v13 + 63) >> 6;
  int64_t v32 = v35 - 4;
  unint64_t v17 = v38;
  uint64_t v16 = v39;
  uint64_t v18 = v40;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v11 << 6);
      uint64_t v21 = v41;
      goto LABEL_12;
    }
    uint64_t v29 = v11 + 1;
    if (v11 + 1 >= v35) {
      goto LABEL_25;
    }
    unint64_t v30 = *((void *)v34 + v29);
    uint64_t v21 = v41;
    if (!v30)
    {
      uint64_t v29 = v11 + 2;
      if (v11 + 2 >= v35) {
        goto LABEL_25;
      }
      unint64_t v30 = *((void *)v34 + v29);
      if (!v30)
      {
        uint64_t v29 = v11 + 3;
        if (v11 + 3 >= v35) {
          goto LABEL_25;
        }
        unint64_t v30 = *((void *)v34 + v29);
        if (!v30) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v30 - 1) & v30;
    unint64_t v20 = __clz(__rbit64(v30)) + (v29 << 6);
    uint64_t v11 = v29;
LABEL_12:
    unint64_t v22 = *(void *)(v2 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v17, *(void *)(v21 + 48) + v22, v16);
    uint64_t v23 = *(void *)(v21 + 56);
    uint64_t v24 = 16 * v20;
    uint64_t v25 = v23 + 16 * v20;
    long long v26 = *(void **)v25;
    char v27 = *(unsigned char *)(v25 + 8);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v18 + 48) + v22, v17, v16);
    uint64_t v28 = *(void *)(v18 + 56) + v24;
    *(void *)uint64_t v28 = v26;
    *(unsigned char *)(v28 + 8) = v27;
    sub_1B683DFDC(v26, v27);
  }
  while (v32 != v11)
  {
    unint64_t v30 = *(void *)(v41 + 8 * v11++ + 96);
    if (v30)
    {
      uint64_t v29 = v11 + 3;
      goto LABEL_23;
    }
  }
LABEL_25:
  uint64_t result = swift_release();
  uint64_t v1 = v33;
  uint64_t v7 = v40;
LABEL_26:
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1B6AD0FCC()
{
  uint64_t v1 = v0;
  sub_1B62B3C14(0, (unint64_t *)&qword_1E9DD0900, (void (*)(uint64_t))sub_1B6AD9D54);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    sub_1B67C52A4(*((unint64_t *)&v19 + 1));
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD1198()
{
  uint64_t v1 = v0;
  sub_1B67FB61C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    unint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_retain();
    sub_1B67C52A4(v21);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD1344()
{
  return sub_1B6AD5174(sub_1B6AD90A8);
}

uint64_t sub_1B6AD135C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63967B4(0, (unint64_t *)&qword_1EB980700, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo, (void (*)(void))sub_1B67FC164);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  uint64_t v29 = v1;
  unint64_t v30 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v30, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  int64_t v31 = (unint64_t)(v14 + 63) >> 6;
  int64_t v28 = v31 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v25 = v13 + 1;
    if (v13 + 1 >= v31) {
      goto LABEL_24;
    }
    unint64_t v26 = *((void *)v30 + v25);
    if (!v26)
    {
      uint64_t v25 = v13 + 2;
      if (v13 + 2 >= v31) {
        goto LABEL_24;
      }
      unint64_t v26 = *((void *)v30 + v25);
      if (!v26)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v31) {
          goto LABEL_24;
        }
        unint64_t v26 = *((void *)v30 + v25);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v13 = v25;
LABEL_12:
    uint64_t v19 = 8 * v18;
    uint64_t v20 = *(void *)(v7 + 48) + 8 * v18;
    int v21 = *(_DWORD *)v20;
    char v22 = *(unsigned char *)(v20 + 4);
    unint64_t v23 = *(void *)(v3 + 72) * v18;
    sub_1B6366C70(*(void *)(v7 + 56) + v23, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    uint64_t v24 = *(void *)(v9 + 48) + v19;
    *(_DWORD *)uint64_t v24 = v21;
    *(unsigned char *)(v24 + 4) = v22;
    sub_1B6365F60((uint64_t)v6, *(void *)(v9 + 56) + v23, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  }
  while (v28 != v13)
  {
    unint64_t v26 = *(void *)(v7 + 8 * v13++ + 96);
    if (v26)
    {
      uint64_t v25 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v29;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6AD1628()
{
  return sub_1B6AD5174(sub_1B6AD9020);
}

uint64_t sub_1B6AD1640()
{
  return sub_1B6AD4838((void (*)(void))sub_1B636ADE0);
}

uint64_t sub_1B6AD1658()
{
  return sub_1B6ACE554((unint64_t *)&qword_1EB97D8B0);
}

uint64_t sub_1B6AD167C()
{
  return sub_1B6AD4838((void (*)(void))sub_1B6ADA0AC);
}

uint64_t sub_1B6AD1694()
{
  uint64_t v1 = v0;
  sub_1B62B3C14(0, &qword_1E9DD5318, type metadata accessor for RGResource);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v20 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v20 + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD183C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B67FB450();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  unint64_t v26 = v1;
  char v27 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v27, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v29 = v3 + 32;
  uint64_t v30 = v3 + 16;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  int64_t v25 = v28 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v28) {
      goto LABEL_24;
    }
    unint64_t v23 = *((void *)v27 + v22);
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v28) {
        goto LABEL_24;
      }
      unint64_t v23 = *((void *)v27 + v22);
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v28) {
          goto LABEL_24;
        }
        unint64_t v23 = *((void *)v27 + v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v19, v6, v2);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
  }
  while (v25 != v13)
  {
    unint64_t v23 = *(void *)(v7 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v26;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6AD1AE0()
{
  uint64_t v1 = v0;
  sub_1B62B3C14(0, &qword_1E9DD52E8, (void (*)(uint64_t))sub_1B68D60AC);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v35 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v36 = *(void *)(v6 + 8 * v35);
    if (!v36)
    {
      uint64_t v35 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v36 = *(void *)(v6 + 8 * v35);
      if (!v36)
      {
        uint64_t v35 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v36 = *(void *)(v6 + 8 * v35);
        if (!v36) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v36 - 1) & v36;
    unint64_t v15 = __clz(__rbit64(v36)) + (v35 << 6);
    uint64_t v9 = v35;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 152 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    long long v20 = *(_OWORD *)(v19 + 32);
    long long v21 = *(_OWORD *)(v19 + 48);
    long long v22 = *(_OWORD *)(v19 + 80);
    long long v42 = *(_OWORD *)(v19 + 64);
    long long v43 = v22;
    long long v41 = v21;
    long long v24 = *(_OWORD *)(v19 + 112);
    long long v23 = *(_OWORD *)(v19 + 128);
    long long v25 = *(_OWORD *)(v19 + 96);
    char v47 = *(unsigned char *)(v19 + 144);
    long long v45 = v24;
    long long v46 = v23;
    long long v44 = v25;
    long long v26 = *(_OWORD *)(v19 + 16);
    long long v38 = *(_OWORD *)v19;
    long long v39 = v26;
    long long v40 = v20;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v27 = *(void *)(v4 + 56) + v18;
    long long v28 = v39;
    *(_OWORD *)uint64_t v27 = v38;
    *(_OWORD *)(v27 + 16) = v28;
    long long v29 = v40;
    long long v30 = v41;
    long long v31 = v43;
    *(_OWORD *)(v27 + 64) = v42;
    *(_OWORD *)(v27 + 80) = v31;
    *(_OWORD *)(v27 + 32) = v29;
    *(_OWORD *)(v27 + 48) = v30;
    long long v32 = v44;
    long long v33 = v45;
    long long v34 = v46;
    *(unsigned char *)(v27 + 144) = v47;
    *(_OWORD *)(v27 + 112) = v33;
    *(_OWORD *)(v27 + 128) = v34;
    *(_OWORD *)(v27 + 96) = v32;
    sub_1B62CA090((uint64_t)&v38);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v36 = *(void *)(v2 + 8 * v9++ + 96);
    if (v36)
    {
      uint64_t v35 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD1D1C()
{
  uint64_t v1 = v0;
  sub_1B6ADA020();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD1EBC()
{
  uint64_t v1 = v0;
  sub_1B63967B4(0, (unint64_t *)&unk_1E9DD5250, (void (*)(uint64_t))_s17CodeSourceSnippetCMa, (void (*)(void))sub_1B67FAD14);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    if (!v27)
    {
      uint64_t v26 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v26);
      if (!v27)
      {
        uint64_t v26 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v9 = v26;
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 40 * v15);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v22 = v17[4];
    uint64_t v23 = 8 * v15;
    uint64_t v24 = *(void *)(*(void *)(v2 + 56) + v23);
    long long v25 = (uint64_t *)(*(void *)(v4 + 48) + v16);
    uint64_t *v25 = *v17;
    v25[1] = v19;
    _OWORD v25[2] = v20;
    v25[3] = v21;
    void v25[4] = v22;
    *(void *)(*(void *)(v4 + 56) + v23) = v24;
    sub_1B629C9E8(v18, v19);
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v27 = *(void *)(v2 + 96 + 8 * v9++);
    if (v27)
    {
      uint64_t v26 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD20B4()
{
  return sub_1B6AD5174(sub_1B6AD9C58);
}

uint64_t sub_1B6AD20CC()
{
  return sub_1B6AD5174(sub_1B6AD9A18);
}

uint64_t sub_1B6AD20E4()
{
  return sub_1B6AD5174(sub_1B6AD99E8);
}

uint64_t sub_1B6AD20FC()
{
  uint64_t v1 = v0;
  sub_1B67F7E94();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  long long v25 = v1;
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = 48 * v15;
    uint64_t v20 = v17[1];
    sub_1B69595FC(*(void *)(v2 + 56) + 48 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v20;
    sub_1B67F7F4C((uint64_t)v26, *(void *)(v4 + 56) + v19);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v2 + 8 * v9++ + 96);
    if (v23)
    {
      uint64_t v22 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v25;
LABEL_26:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD22DC()
{
  uint64_t v1 = v0;
  sub_1B63967B4(0, (unint64_t *)&unk_1E9DD50E0, (void (*)(uint64_t))sub_1B67F9F08, (void (*)(void))sub_1B67F9F84);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v36 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    if (!v37)
    {
      uint64_t v36 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v36);
      if (!v37)
      {
        uint64_t v36 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v37 = *(void *)(v6 + 8 * v36);
        if (!v37) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v36 << 6);
    uint64_t v9 = v36;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    char v18 = *(unsigned char *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    unint64_t v20 = v15 << 7;
    uint64_t v21 = (long long *)(*(void *)(v2 + 56) + v20);
    long long v22 = v21[7];
    long long v24 = v21[4];
    long long v23 = v21[5];
    long long v45 = v21[6];
    long long v46 = v22;
    long long v43 = v24;
    long long v44 = v23;
    long long v26 = *v21;
    long long v25 = v21[1];
    long long v27 = v21[3];
    long long v41 = v21[2];
    long long v42 = v27;
    long long v39 = v26;
    long long v40 = v25;
    uint64_t v28 = *(void *)(v4 + 48) + v16;
    *(unsigned char *)uint64_t v28 = v18;
    *(void *)(v28 + 8) = v19;
    long long v29 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    long long v30 = v39;
    long long v31 = v40;
    long long v32 = v42;
    _OWORD v29[2] = v41;
    v29[3] = v32;
    _OWORD *v29 = v30;
    v29[1] = v31;
    long long v33 = v43;
    long long v34 = v44;
    long long v35 = v46;
    v29[6] = v45;
    v29[7] = v35;
    v29[4] = v33;
    v29[5] = v34;
    sub_1B69168B8((uint64_t)&v39);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v37 = *(void *)(v2 + 8 * v9++ + 96);
    if (v37)
    {
      uint64_t v36 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD2504()
{
  return sub_1B6AD4838((void (*)(void))sub_1B6AD916C);
}

uint64_t sub_1B6AD251C()
{
  uint64_t v1 = v0;
  sub_1B67F7BA0();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v21 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    if (!v22)
    {
      uint64_t v21 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v21);
      if (!v22)
      {
        uint64_t v21 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v21);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v9 = v21;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    sub_1B67F7C58(v20, *((unint64_t *)&v20 + 1));
  }
  while (v13 - 4 != v9)
  {
    unint64_t v22 = *(void *)(v2 + 96 + 8 * v9++);
    if (v22)
    {
      uint64_t v21 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD26CC()
{
  uint64_t v1 = v0;
  sub_1B67F7FA8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  long long v25 = v1;
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = 96 * v15;
    uint64_t v20 = v17[1];
    sub_1B6874B44(*(void *)(v2 + 56) + 96 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v20;
    sub_1B67F7AF0((uint64_t)v26, *(void *)(v4 + 56) + v19);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v2 + 8 * v9++ + 96);
    if (v23)
    {
      uint64_t v22 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v25;
LABEL_26:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD28AC()
{
  uint64_t v1 = v0;
  sub_1B6966C18();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v17 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v17);
      if (!v18)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v17);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v9 = v17;
LABEL_12:
    uint64_t v16 = 32 * v15;
    sub_1B664D9F0(*(void *)(v2 + 48) + 32 * v15, (uint64_t)v21);
    sub_1B664D9F0(*(void *)(v2 + 56) + v16, (uint64_t)v20);
    sub_1B6649008((uint64_t)v21, *(void *)(v4 + 48) + v16);
    sub_1B6649008((uint64_t)v20, *(void *)(v4 + 56) + v16);
  }
  while (v13 - 4 != v9)
  {
    unint64_t v18 = *(void *)(v2 + 8 * v9++ + 96);
    if (v18)
    {
      uint64_t v17 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD2A6C()
{
  uint64_t v1 = v0;
  sub_1B63117E4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v37 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v38 = *(void *)(v6 + 8 * v37);
    if (!v38)
    {
      uint64_t v37 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v38 = *(void *)(v6 + 8 * v37);
      if (!v38)
      {
        uint64_t v37 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v38 = *(void *)(v6 + 8 * v37);
        if (!v38) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v38 - 1) & v38;
    unint64_t v15 = __clz(__rbit64(v38)) + (v37 << 6);
    uint64_t v9 = v37;
LABEL_12:
    uint64_t v16 = 96 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 96 * v15;
    uint64_t v18 = *(void *)(v17 + 88);
    uint64_t v19 = 112 * v15;
    uint64_t v20 = *(void *)(v2 + 56) + v19;
    uint64_t v21 = *(void *)(v20 + 16);
    char v22 = *(unsigned char *)(v20 + 24);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    long long v24 = *(_OWORD *)(v17 + 8);
    long long v25 = *(_OWORD *)(v17 + 24);
    long long v26 = *(_OWORD *)(v17 + 40);
    long long v27 = *(_OWORD *)(v17 + 56);
    long long v28 = *(_OWORD *)(v17 + 72);
    uint64_t v29 = *(void *)(v20 + 64);
    uint64_t v30 = *(void *)(v20 + 104);
    long long v31 = *(_OWORD *)(v20 + 32);
    long long v32 = *(_OWORD *)(v20 + 48);
    long long v33 = *(_OWORD *)(v20 + 72);
    long long v34 = *(_OWORD *)(v20 + 88);
    long long v35 = *(_OWORD *)v20;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v17;
    *(_OWORD *)(v23 + 8) = v24;
    *(_OWORD *)(v23 + 24) = v25;
    *(_OWORD *)(v23 + 40) = v26;
    *(_OWORD *)(v23 + 56) = v27;
    *(_OWORD *)(v23 + 72) = v28;
    *(void *)(v23 + 88) = v18;
    uint64_t v36 = *(void *)(v4 + 56) + v19;
    *(_OWORD *)uint64_t v36 = v35;
    *(void *)(v36 + 16) = v21;
    *(unsigned char *)(v36 + 24) = v22;
    *(_OWORD *)(v36 + 32) = v31;
    *(_OWORD *)(v36 + 48) = v32;
    *(void *)(v36 + 64) = v29;
    *(_OWORD *)(v36 + 72) = v33;
    *(_OWORD *)(v36 + 88) = v34;
    *(void *)(v36 + 104) = v30;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v38 = *(void *)(v2 + 96 + 8 * v9++);
    if (v38)
    {
      uint64_t v37 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD2CA4()
{
  return sub_1B6AD4838(sub_1B6AD90D8);
}

uint64_t sub_1B6AD2CBC()
{
  return sub_1B6AD5174(sub_1B6AD8FF0);
}

uint64_t sub_1B6AD2CD4()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v32 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v32);
    if (!v33)
    {
      uint64_t v32 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v33 = *(void *)(v6 + 8 * v32);
      if (!v33)
      {
        uint64_t v32 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v33 = *(void *)(v6 + 8 * v32);
        if (!v33) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v33 - 1) & v33;
    unint64_t v15 = __clz(__rbit64(v33)) + (v32 << 6);
    uint64_t v9 = v32;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 120 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    char v21 = *(unsigned char *)(v19 + 24);
    __int16 v22 = *(_WORD *)(v19 + 40);
    char v23 = *(unsigned char *)(v19 + 42);
    uint64_t v24 = *(void *)(v19 + 96);
    uint64_t v25 = *(void *)(v19 + 112);
    uint64_t v26 = *(void *)(v19 + 32);
    long long v27 = *(_OWORD *)v19;
    long long v28 = *(_OWORD *)(v19 + 48);
    long long v29 = *(_OWORD *)(v19 + 64);
    long long v30 = *(_OWORD *)(v19 + 80);
    LODWORD(v19) = *(_DWORD *)(v19 + 104);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v31 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v31 = v27;
    *(void *)(v31 + 16) = v20;
    *(unsigned char *)(v31 + 24) = v21;
    *(void *)(v31 + 32) = v26;
    *(_WORD *)(v31 + 40) = v22;
    *(unsigned char *)(v31 + 42) = v23;
    *(_OWORD *)(v31 + 48) = v28;
    *(_OWORD *)(v31 + 64) = v29;
    *(_OWORD *)(v31 + 80) = v30;
    *(void *)(v31 + 96) = v24;
    *(_DWORD *)(v31 + 104) = v19;
    *(void *)(v31 + 112) = v25;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v33 = *(void *)(v2 + 96 + 8 * v9++);
    if (v33)
    {
      uint64_t v32 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD2EF8()
{
  uint64_t v1 = v0;
  uint64_t v38 = sub_1B6E30F48();
  uint64_t v2 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38, v3);
  uint64_t v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B67FA7A4();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1B6E32C28();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v8 = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  uint64_t v32 = v1;
  unint64_t v33 = (const void *)(v5 + 64);
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9) {
    memmove(v8, v33, 8 * v9);
  }
  uint64_t v11 = 0;
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v39 = v7;
  uint64_t v40 = v5;
  *(void *)(v7 + 16) = v12;
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  uint64_t v35 = v2 + 32;
  uint64_t v36 = v2 + 16;
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  int64_t v31 = v34 - 4;
  uint64_t v17 = v37;
  uint64_t v16 = v38;
  uint64_t v18 = v39;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v11 << 6);
      uint64_t v21 = v40;
      goto LABEL_12;
    }
    uint64_t v28 = v11 + 1;
    if (v11 + 1 >= v34) {
      goto LABEL_25;
    }
    unint64_t v29 = *((void *)v33 + v28);
    uint64_t v21 = v40;
    if (!v29)
    {
      uint64_t v28 = v11 + 2;
      if (v11 + 2 >= v34) {
        goto LABEL_25;
      }
      unint64_t v29 = *((void *)v33 + v28);
      if (!v29)
      {
        uint64_t v28 = v11 + 3;
        if (v11 + 3 >= v34) {
          goto LABEL_25;
        }
        unint64_t v29 = *((void *)v33 + v28);
        if (!v29) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v29 - 1) & v29;
    unint64_t v20 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v11 = v28;
LABEL_12:
    unint64_t v22 = *(void *)(v2 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v17, *(void *)(v21 + 48) + v22, v16);
    uint64_t v23 = 16 * v20;
    uint64_t v24 = (uint64_t *)(*(void *)(v21 + 56) + 16 * v20);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v18 + 48) + v22, v17, v16);
    long long v27 = (void *)(*(void *)(v18 + 56) + v23);
    *long long v27 = v25;
    v27[1] = v26;
    swift_bridgeObjectRetain();
  }
  while (v31 != v11)
  {
    unint64_t v29 = *(void *)(v40 + 8 * v11++ + 96);
    if (v29)
    {
      uint64_t v28 = v11 + 3;
      goto LABEL_23;
    }
  }
LABEL_25:
  uint64_t result = swift_release();
  uint64_t v1 = v32;
  uint64_t v7 = v39;
LABEL_26:
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1B6AD31C8()
{
  return sub_1B6AD5174(sub_1B6AD92F8);
}

uint64_t sub_1B6AD31E0()
{
  uint64_t v1 = v0;
  sub_1B67F887C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD3380()
{
  uint64_t v1 = v0;
  sub_1B67F8044();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v19);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v9 = v19;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v20 = *(void *)(v2 + 96 + 8 * v9++);
    if (v20)
    {
      uint64_t v19 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD3518()
{
  return sub_1B6AD39A0(&qword_1E9DD51E0, &qword_1E9DD0690, 0x1E4F35BF8, &qword_1E9DD0698);
}

uint64_t sub_1B6AD353C()
{
  uint64_t v1 = v0;
  sub_1B67F8B98();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    long long v18 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v18;
    *(void *)(*(void *)(v4 + 56) + v17) = v19;
    sub_1B62FFBB0(v18, *((unint64_t *)&v18 + 1));
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD36E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E30F48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B67F8AFC();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  long long v27 = v1;
  uint64_t v28 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v28, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  int64_t v29 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v30 = v3 + 16;
  int64_t v26 = v29 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v29) {
      goto LABEL_24;
    }
    unint64_t v23 = *((void *)v28 + v22);
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v29) {
        goto LABEL_24;
      }
      unint64_t v23 = *((void *)v28 + v22);
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v29) {
          goto LABEL_24;
        }
        unint64_t v23 = *((void *)v28 + v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v19, v6, v2);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
  }
  while (v26 != v13)
  {
    unint64_t v23 = *(void *)(v7 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v27;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6AD397C()
{
  return sub_1B6AD39A0((unint64_t *)&unk_1E9DD5170, &qword_1E9DD06B0, (uint64_t)off_1E6140438, &qword_1E9DD0700);
}

uint64_t sub_1B6AD39A0(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1B67F8C50(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1B6E32C28();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_24;
  }
  uint64_t v9 = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v11) {
    memmove(v9, (const void *)(v6 + 64), 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v24 = v13 + 1;
    if (v13 + 1 >= v17) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v10 + 8 * v24);
    if (!v25)
    {
      uint64_t v24 = v13 + 2;
      if (v13 + 2 >= v17) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v10 + 8 * v24);
      if (!v25)
      {
        uint64_t v24 = v13 + 3;
        if (v13 + 3 >= v17) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v10 + 8 * v24);
        if (!v25) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v13 = v24;
LABEL_12:
    uint64_t v20 = 8 * v19;
    uint64_t v21 = *(void **)(*(void *)(v6 + 48) + 8 * v19);
    uint64_t v22 = *(void *)(*(void *)(v6 + 56) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    *(void *)(*(void *)(v8 + 56) + v20) = v22;
    id v23 = v21;
  }
  while (v17 - 4 != v13)
  {
    unint64_t v25 = *(void *)(v6 + 96 + 8 * v13++);
    if (v25)
    {
      uint64_t v24 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v5 = v8;
  return result;
}

uint64_t sub_1B6AD3B48()
{
  return sub_1B6AD39A0(&qword_1E9DD0708, (unint64_t *)&unk_1E9DD5160, (uint64_t)off_1E6140460, &qword_1E9DD0710);
}

uint64_t sub_1B6AD3B6C()
{
  uint64_t v1 = v0;
  sub_1B67F865C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = 16 * v15;
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 56) + v17);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    uint64_t v21 = (void *)(*(void *)(v4 + 56) + v17);
    *uint64_t v21 = v20;
    v21[1] = v19;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v2 + 96 + 8 * v9++);
    if (v23)
    {
      uint64_t v22 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD3D10()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v23 = *(void *)(v2 + 96 + 8 * v9++);
    if (v23)
    {
      uint64_t v22 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD3ED4()
{
  uint64_t v1 = v0;
  sub_1B62B3C14(0, &qword_1EB981280, (void (*)(uint64_t))sub_1B62CB664);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD40A0()
{
  uint64_t v1 = v0;
  sub_1B6AD9108();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v21 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    if (!v22)
    {
      uint64_t v21 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v21);
      if (!v22)
      {
        uint64_t v21 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v21);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v9 = v21;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = 32 * v15;
    uint64_t v18 = (long long *)(*(void *)(v2 + 56) + v17);
    long long v19 = *v18;
    long long v24 = v18[1];
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    uint64_t v20 = (_OWORD *)(*(void *)(v4 + 56) + v17);
    *uint64_t v20 = v19;
    v20[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v22 = *(void *)(v2 + 96 + 8 * v9++);
    if (v22)
    {
      uint64_t v21 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD4278()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0600);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v25 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    if (!v26)
    {
      uint64_t v25 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v25);
      if (!v26)
      {
        uint64_t v25 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v6 + 8 * v25);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v9 = v25;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = (long long *)(*(void *)(v2 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    long long v23 = *v21;
    long long v28 = v21[1];
    *unint64_t v22 = v19;
    v22[1] = v18;
    long long v24 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    *long long v24 = v23;
    v24[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v26 = *(void *)(v2 + 96 + 8 * v9++);
    if (v26)
    {
      uint64_t v25 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD4480()
{
  uint64_t v1 = v0;
  sub_1B63967B4(0, (unint64_t *)&unk_1EB9806F0, (void (*)(uint64_t))type metadata accessor for EntityClass, (void (*)(void))sub_1B63BAEE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v17 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v17);
      if (!v18)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v17);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v9 = v17;
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v18 = *(void *)(v2 + 96 + 8 * v9++);
    if (v18)
    {
      uint64_t v17 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD4650()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0B28);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    long long v21 = *(_OWORD *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD4820()
{
  return sub_1B6AD4838((void (*)(void))sub_1B6AD926C);
}

uint64_t sub_1B6AD4838(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v19);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v10 = v19;
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_bridgeObjectRetain();
  }
  while (v14 - 4 != v10)
  {
    unint64_t v20 = *(void *)(v3 + 96 + 8 * v10++);
    if (v20)
    {
      uint64_t v19 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6AD49D8()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v22 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v22 + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 4 * v15;
    int v19 = *(_DWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_DWORD *)(*(void *)(v4 + 56) + v18) = v19;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD4B78()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, &qword_1EB94A1E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD4D34()
{
  uint64_t v1 = v0;
  sub_1B6AD9984();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v17 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v17);
      if (!v18)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v17);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v19 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v19 + (v17 << 6);
    uint64_t v9 = v17;
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v18 = *(void *)(v2 + 96 + 8 * v9++);
    if (v18)
    {
      uint64_t v17 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD4EB0()
{
  sub_1B62B3C14(0, &qword_1E9DD07D0, (void (*)(uint64_t))sub_1B67F9380);
  int64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1B6E32C28();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_24;
  }
  uint64_t v4 = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v6) {
    memmove(v4, (const void *)(v1 + 64), 8 * v6);
  }
  uint64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    uint64_t v26 = v8 + 1;
    if (v8 + 1 >= v12) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v5 + 8 * v26);
    if (!v27)
    {
      uint64_t v26 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v5 + 8 * v26);
      if (!v27)
      {
        uint64_t v26 = v8 + 3;
        if (v8 + 3 >= v12) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v5 + 8 * v26);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v27 - 1) & v27;
    unint64_t v14 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v8 = v26;
LABEL_12:
    uint64_t v15 = 16 * v14;
    char v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 24 * v14;
    uint64_t v20 = (uint64_t *)(*(void *)(v1 + 56) + v19);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    unint64_t v24 = (void *)(*(void *)(v3 + 48) + v15);
    *unint64_t v24 = v17;
    v24[1] = v18;
    uint64_t v25 = (void *)(*(void *)(v3 + 56) + v19);
    void *v25 = v21;
    v25[1] = v22;
    _OWORD v25[2] = v23;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v12 - 4 != v8)
  {
    unint64_t v27 = *(void *)(v1 + 96 + 8 * v8++);
    if (v27)
    {
      uint64_t v26 = v8 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t *v29 = v3;
  return result;
}

uint64_t sub_1B6AD50B4()
{
  return sub_1B6AD5174(sub_1B6AD9AA8);
}

uint64_t sub_1B6AD50CC()
{
  return sub_1B6AD5174(sub_1B6AD9A48);
}

uint64_t sub_1B6AD50E4()
{
  return sub_1B6AD5174(sub_1B6AD9BC8);
}

uint64_t sub_1B6AD50FC()
{
  return sub_1B6AD5174(sub_1B6AD9B98);
}

uint64_t sub_1B6AD5114()
{
  return sub_1B6AD5174(sub_1B6AD9B68);
}

uint64_t sub_1B6AD512C()
{
  return sub_1B6AD5174(sub_1B6AD9B38);
}

uint64_t sub_1B6AD5144()
{
  return sub_1B6AD5174(sub_1B6AD9B08);
}

uint64_t sub_1B6AD515C()
{
  return sub_1B6AD5174(sub_1B6AD9AD8);
}

uint64_t sub_1B6AD5174(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  unint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v7 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v10 = v23;
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  while (v14 - 4 != v10)
  {
    unint64_t v24 = *(void *)(v3 + 96 + 8 * v10++);
    if (v24)
    {
      uint64_t v23 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6AD5328()
{
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD07C0);
  unint64_t v33 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1B6E32C28();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_24;
  }
  uint64_t v4 = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v6) {
    memmove(v4, (const void *)(v1 + 64), 8 * v6);
  }
  uint64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    uint64_t v30 = v8 + 1;
    if (v8 + 1 >= v12) {
      goto LABEL_24;
    }
    unint64_t v31 = *(void *)(v5 + 8 * v30);
    if (!v31)
    {
      uint64_t v30 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_24;
      }
      unint64_t v31 = *(void *)(v5 + 8 * v30);
      if (!v31)
      {
        uint64_t v30 = v8 + 3;
        if (v8 + 3 >= v12) {
          goto LABEL_24;
        }
        unint64_t v31 = *(void *)(v5 + 8 * v30);
        if (!v31) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v31 - 1) & v31;
    unint64_t v14 = __clz(__rbit64(v31)) + (v30 << 6);
    uint64_t v8 = v30;
LABEL_12:
    uint64_t v15 = 16 * v14;
    unint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 56 * v14;
    uint64_t v20 = (uint64_t *)(*(void *)(v1 + 56) + v19);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
    uint64_t v25 = v20[4];
    uint64_t v26 = v20[5];
    uint64_t v27 = v20[6];
    long long v28 = (void *)(*(void *)(v3 + 48) + v15);
    void *v28 = v17;
    v28[1] = v18;
    int64_t v29 = (void *)(*(void *)(v3 + 56) + v19);
    void *v29 = v21;
    v29[1] = v22;
    _OWORD v29[2] = v23;
    v29[3] = v24;
    v29[4] = v25;
    v29[5] = v26;
    v29[6] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v12 - 4 != v8)
  {
    unint64_t v31 = *(void *)(v1 + 96 + 8 * v8++);
    if (v31)
    {
      uint64_t v30 = v8 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *unint64_t v33 = v3;
  return result;
}

uint64_t sub_1B6AD554C()
{
  uint64_t v1 = v0;
  sub_1B63967B4(0, &qword_1E9DD07B0, (void (*)(uint64_t))type metadata accessor for VFXREBindingMeshData, (void (*)(void))sub_1B67F92C4);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    unint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id v17 = v16;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD571C()
{
  return sub_1B6AD5758(&qword_1E9DD52D0, &qword_1E9DD0570, MEMORY[0x1E4FBC840] + 8);
}

uint64_t sub_1B6AD573C()
{
  return sub_1B6AD5758((unint64_t *)&unk_1E9DD0550, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1B6AD5758(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  sub_1B6AD9F98(0, a1, a2, a3);
  int64_t v34 = v3;
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1B6E32C28();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_24;
  }
  unint64_t v7 = (void *)(v5 + 64);
  uint64_t v8 = v4 + 64;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)v7 >= v4 + 64 + 8 * v9) {
    memmove(v7, (const void *)(v4 + 64), 8 * v9);
  }
  uint64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    uint64_t v31 = v11 + 1;
    if (v11 + 1 >= v15) {
      goto LABEL_24;
    }
    unint64_t v32 = *(void *)(v8 + 8 * v31);
    if (!v32)
    {
      uint64_t v31 = v11 + 2;
      if (v11 + 2 >= v15) {
        goto LABEL_24;
      }
      unint64_t v32 = *(void *)(v8 + 8 * v31);
      if (!v32)
      {
        uint64_t v31 = v11 + 3;
        if (v11 + 3 >= v15) {
          goto LABEL_24;
        }
        unint64_t v32 = *(void *)(v8 + 8 * v31);
        if (!v32) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v14 = (v32 - 1) & v32;
    unint64_t v17 = __clz(__rbit64(v32)) + (v31 << 6);
    uint64_t v11 = v31;
LABEL_12:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = 72 * v17;
    uint64_t v20 = *(void *)(v4 + 48) + v19;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
    uint64_t v23 = *(void *)(v20 + 24);
    uint64_t v24 = *(void *)(v20 + 32);
    uint64_t v25 = *(void *)(v20 + 56);
    int v26 = *(_DWORD *)(v20 + 64);
    char v27 = *(unsigned char *)(v20 + 68);
    uint64_t v28 = *(void *)(*(void *)(v4 + 56) + v18);
    uint64_t v29 = *(void *)(v6 + 48) + v19;
    long long v30 = *(_OWORD *)(v20 + 40);
    *(void *)uint64_t v29 = *(void *)v20;
    *(void *)(v29 + 8) = v21;
    *(void *)(v29 + 16) = v22;
    *(void *)(v29 + 24) = v23;
    *(void *)(v29 + 32) = v24;
    *(_OWORD *)(v29 + 40) = v30;
    *(void *)(v29 + 56) = v25;
    *(_DWORD *)(v29 + 64) = v26;
    *(unsigned char *)(v29 + 68) = v27;
    *(void *)(*(void *)(v6 + 56) + v18) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v15 - 4 != v11)
  {
    unint64_t v32 = *(void *)(v4 + 96 + 8 * v11++);
    if (v32)
    {
      uint64_t v31 = v11 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *int64_t v34 = v6;
  return result;
}

uint64_t sub_1B6AD597C()
{
  uint64_t v1 = v0;
  sub_1B6AD97D8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v24 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    if (!v25)
    {
      uint64_t v24 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v24);
      if (!v25)
      {
        uint64_t v24 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v24);
        if (!v25) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v9 = v24;
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    char v18 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v17 + 24);
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = *(void *)v17;
    *(unsigned char *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v20;
    *(void *)(v23 + 24) = v19;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v25 = *(void *)(v2 + 96 + 8 * v9++);
    if (v25)
    {
      uint64_t v24 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD5B38()
{
  return sub_1B6AD5B50((void (*)(void))sub_1B6ADA548);
}

uint64_t sub_1B6AD5B50(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v19);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v10 = v19;
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_retain();
  }
  while (v14 - 4 != v10)
  {
    unint64_t v20 = *(void *)(v3 + 96 + 8 * v10++);
    if (v20)
    {
      uint64_t v19 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6AD5CF0()
{
  uint64_t v1 = v0;
  sub_1B6AD9634();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v24 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    if (!v25)
    {
      uint64_t v24 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v24);
      if (!v25)
      {
        uint64_t v24 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v24);
        if (!v25) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v9 = v24;
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    LOBYTE(v17) = *(unsigned char *)(v17 + 24);
    uint64_t v21 = 16 * v15;
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    long long v23 = *(_OWORD *)(*(void *)(v2 + 56) + v21);
    *(void *)uint64_t v22 = v19;
    *(void *)(v22 + 8) = v18;
    *(void *)(v22 + 16) = v20;
    *(unsigned char *)(v22 + 24) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v21) = v23;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v25 = *(void *)(v2 + 96 + 8 * v9++);
    if (v25)
    {
      uint64_t v24 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD5EBC()
{
  return sub_1B6AD67A4((void (*)(void))sub_1B67FB740);
}

uint64_t sub_1B6AD5ED4()
{
  return sub_1B6ACB410((unint64_t *)&qword_1E9DD0670);
}

uint64_t sub_1B6AD5EF0()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1E9DD0770);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v27 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    if (!v28)
    {
      uint64_t v27 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v27);
      if (!v28)
      {
        uint64_t v27 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v28 = *(void *)(v6 + 8 * v27);
        if (!v28) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v27 << 6);
    uint64_t v9 = v27;
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 24);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 8);
    *uint64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(void *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v28 = *(void *)(v2 + 96 + 8 * v9++);
    if (v28)
    {
      uint64_t v27 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD60D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6396834();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  unint64_t v28 = v1;
  uint64_t v29 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v29, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  int64_t v27 = v17 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v17) {
      goto LABEL_24;
    }
    unint64_t v24 = *((void *)v29 + v23);
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v17) {
        goto LABEL_24;
      }
      unint64_t v24 = *((void *)v29 + v23);
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v17) {
          goto LABEL_24;
        }
        unint64_t v24 = *((void *)v29 + v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_12:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_1B6366C70(*(void *)(v7 + 48) + v20, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    uint64_t v21 = 8 * v19;
    uint64_t v22 = *(void *)(*(void *)(v7 + 56) + v21);
    sub_1B6365F60((uint64_t)v6, *(void *)(v9 + 48) + v20, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    *(void *)(*(void *)(v9 + 56) + v21) = v22;
  }
  while (v27 != v13)
  {
    unint64_t v24 = *(void *)(v7 + 8 * v13++ + 96);
    if (v24)
    {
      uint64_t v23 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v28;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6AD634C()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB97D8A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD6504()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63968D0();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  unint64_t v28 = v1;
  uint64_t v10 = (void *)(v8 + 64);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v12) {
    memmove(v10, (const void *)(v7 + 64), 8 * v12);
  }
  uint64_t v14 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  int64_t v27 = v18 - 4;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v14 + 1;
    if (v14 + 1 >= v18) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v11 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v14 + 2;
      if (v14 + 2 >= v18) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v11 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v14 + 3;
        if (v14 + 3 >= v18) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v11 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v14 = v23;
LABEL_12:
    unint64_t v21 = *(void *)(v3 + 72) * v20;
    sub_1B6366C70(*(void *)(v7 + 48) + v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    uint64_t v22 = 160 * v20;
    sub_1B6367A74(*(void *)(v7 + 56) + v22, (uint64_t)v29);
    sub_1B6365F60((uint64_t)v6, *(void *)(v9 + 48) + v21, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    sub_1B6366650((uint64_t)v29, *(void *)(v9 + 56) + v22);
  }
  while (v27 != v14)
  {
    unint64_t v24 = *(void *)(v7 + 8 * v14++ + 96);
    if (v24)
    {
      uint64_t v23 = v14 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v28;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6AD678C()
{
  return sub_1B6AD67A4((void (*)(void))sub_1B67F8DD8);
}

uint64_t sub_1B6AD67A4(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v19);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v10 = v19;
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_bridgeObjectRetain();
  }
  while (v14 - 4 != v10)
  {
    unint64_t v20 = *(void *)(v3 + 96 + 8 * v10++);
    if (v20)
    {
      uint64_t v19 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6AD6944()
{
  uint64_t v1 = v0;
  sub_1B6AD9328();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 24 * v15;
    uint64_t v17 = *(void *)v16;
    long long v18 = *(_OWORD *)(v16 + 8);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v19 = *(void *)(v4 + 56) + 24 * v15;
    *(void *)uint64_t v19 = v17;
    *(_OWORD *)(v19 + 8) = v18;
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD6AF0()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980830);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v22 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v22 + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  while (v13 - 4 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD6C90()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980760);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v25 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    if (!v26)
    {
      uint64_t v25 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v25);
      if (!v26)
      {
        uint64_t v25 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v6 + 8 * v25);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v9 = v25;
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = v20[1];
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    uint64_t v23 = *v20;
    *unint64_t v22 = v19;
    v22[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v24 = v23;
    v24[1] = v21;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v26 = *(void *)(v2 + 96 + 8 * v9++);
    if (v26)
    {
      uint64_t v25 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B6AD6E68()
{
  return sub_1B6AD6E7C((unint64_t *)&qword_1EB980778);
}

uint64_t sub_1B6AD6E7C(unint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1B62BC098(0, a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_24;
  }
  uint64_t v6 = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    uint64_t v24 = v10 + 1;
    if (v10 + 1 >= v14) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v24);
    if (!v25)
    {
      uint64_t v24 = v10 + 2;
      if (v10 + 2 >= v14) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v7 + 8 * v24);
      if (!v25)
      {
        uint64_t v24 = v10 + 3;
        if (v10 + 3 >= v14) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v7 + 8 * v24);
        if (!v25) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v10 = v24;
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 8 * v16;
    uint64_t v22 = *(void *)(*(void *)(v3 + 56) + v21);
    uint64_t v23 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v23 = v20;
    v23[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
  }
  while (v14 - 4 != v10)
  {
    unint64_t v25 = *(void *)(v3 + 96 + 8 * v10++);
    if (v25)
    {
      uint64_t v24 = v10 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B6AD7038()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6ADA2AC();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  unint64_t v26 = v1;
  int64_t v27 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v27, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v29 = v3 + 32;
  uint64_t v30 = v3 + 16;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  int64_t v25 = v28 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v13 + 1;
    if (v13 + 1 >= v28) {
      goto LABEL_24;
    }
    unint64_t v23 = *((void *)v27 + v22);
    if (!v23)
    {
      uint64_t v22 = v13 + 2;
      if (v13 + 2 >= v28) {
        goto LABEL_24;
      }
      unint64_t v23 = *((void *)v27 + v22);
      if (!v23)
      {
        uint64_t v22 = v13 + 3;
        if (v13 + 3 >= v28) {
          goto LABEL_24;
        }
        unint64_t v23 = *((void *)v27 + v22);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v13 = v22;
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v19, v6, v2);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    swift_retain();
  }
  while (v25 != v13)
  {
    unint64_t v23 = *(void *)(v7 + 8 * v13++ + 96);
    if (v23)
    {
      uint64_t v22 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v26;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B6AD72DC()
{
  uint64_t v1 = v0;
  sub_1B67F9D30();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v28 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    if (!v29)
    {
      uint64_t v28 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v28);
      if (!v29)
      {
        uint64_t v28 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v29 = *(void *)(v6 + 8 * v28);
        if (!v29) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v9 = v28;
LABEL_12:
    uint64_t v16 = 96 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 96 * v15;
    char v18 = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    uint64_t v22 = *(void *)(v17 + 48);
    uint64_t v23 = *(void *)(v17 + 88);
    long long v24 = *(_OWORD *)(v17 + 16);
    long long v25 = *(_OWORD *)(v17 + 32);
    long long v26 = *(_OWORD *)(v17 + 56);
    long long v27 = *(_OWORD *)(v17 + 72);
    *(void *)uint64_t v21 = *(void *)v17;
    *(unsigned char *)(v21 + 8) = v18;
    *(_OWORD *)(v21 + 16) = v24;
    *(_OWORD *)(v21 + 32) = v25;
    *(void *)(v21 + 48) = v22;
    *(_OWORD *)(v21 + 56) = v26;
    *(_OWORD *)(v21 + 72) = v27;
    *(void *)(v21 + 88) = v23;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_unknownObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v29 = *(void *)(v2 + 96 + 8 * v9++);
    if (v29)
    {
      uint64_t v28 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

__n128 sub_1B6AD74B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = (void *)(a5[6] + 16 * a1);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 88 * a1;
  long long v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a4 + 64);
  *(void *)(v6 + 80) = *(void *)(a4 + 80);
  __n128 result = *(__n128 *)a4;
  long long v9 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v9;
  ++a5[2];
  return result;
}

unint64_t sub_1B6AD7518(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  long long v7 = (void *)(a6[7] + 16 * result);
  void *v7 = a4;
  v7[1] = a5;
  ++a6[2];
  return result;
}

uint64_t sub_1B6AD7560(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 72) * a1;
  v11(v8 + v12, a2, v9);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a4[7] + v12, a3, v9);
  ++a4[2];
  return result;
}

unint64_t sub_1B6AD7634(unint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 8 * (result >> 6) + 64) |= 1 << result;
  *(void *)(*(void *)(a3 + 48) + 8 * result) = a2;
  ++*(void *)(a3 + 16);
  return result;
}

uint64_t sub_1B6AD7668(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1B6AD8CDC(a3, a4[7] + 88 * a1, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBB718]);
  ++a4[2];
  return result;
}

unint64_t sub_1B6AD76F4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  long long v7 = (void *)(a7[6] + 16 * result);
  void *v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(void *)(v8 + 8) = a5;
  *(unsigned char *)(v8 + 16) = a6 & 1;
  ++a7[2];
  return result;
}

unint64_t sub_1B6AD7744(unint64_t result, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a5[6] + result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  ++a5[2];
  return result;
}

uint64_t sub_1B6AD7784(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t result = sub_1B629C37C(a2, a4[6] + 40 * a1);
  *(void *)(a4[7] + 8 * a1) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD77FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_1B6E31118();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  int64_t v13 = (void *)(a5[7] + 16 * a1);
  *int64_t v13 = a3;
  v13[1] = a4;
  ++a5[2];
  return result;
}

_OWORD *sub_1B6AD78B4(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1B6E32B48();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_1B62B57A8(a3, (_OWORD *)(a4[7] + 32 * a1));
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD796C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1B634F71C(a3, a4[7] + 80 * a1);
  ++a4[2];
  return result;
}

unint64_t sub_1B6AD79D0(unint64_t result, uint64_t a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD7A0C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1B6AD8CDC(a3, a4[7] + 80 * a1, (unint64_t *)&unk_1E9DD0030, (uint64_t)&type metadata for ShaderCache.ComputePipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  ++a4[2];
  return result;
}

__n128 sub_1B6AD7A98(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v4 = a4[7] + 40 * a1;
  __n128 result = *(__n128 *)a3;
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = *(void *)(a3 + 32);
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD7AE8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1B6AD7CA8(a1, a2, a3, a4, sub_1B67F99AC);
}

uint64_t sub_1B6AD7B00(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1B6AD8CDC(a3, a4[7] + 832 * a1, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  ++a4[2];
  return result;
}

unint64_t sub_1B6AD7B8C(unint64_t result, __int16 a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_WORD *)(a4[6] + 2 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD7BC8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a4[6] + 8 * a1;
  *(_DWORD *)uint64_t v7 = a2;
  *(unsigned char *)(v7 + 4) = BYTE4(a2) & 1;
  uint64_t v8 = a4[7];
  uint64_t v9 = sub_1B6E30F48();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a3, v9);
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD7C78(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1B6AD7CA8(a1, a2, a3, a4, sub_1B6AD9600);
}

uint64_t sub_1B6AD7C90(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1B6AD7CA8(a1, a2, a3, a4, sub_1B6AD9528);
}

uint64_t sub_1B6AD7CA8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = a5(a3, a4[7] + 8 * a1);
  ++a4[2];
  return result;
}

__n128 sub_1B6AD7D10(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v4 = a4[6] + 40 * a1;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(unsigned char *)(v4 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = a4[7] + 40 * a1;
  __n128 result = *(__n128 *)a3;
  long long v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a3;
  *(_OWORD *)(v6 + 16) = v8;
  *(unsigned char *)(v6 + 32) = *(unsigned char *)(a3 + 32);
  ++a4[2];
  return result;
}

unint64_t sub_1B6AD7D74(unint64_t result, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = a8[6] + 32 * result;
  *(void *)uint64_t v8 = a2;
  *(unsigned char *)(v8 + 8) = a3;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 24) = a5 & 1;
  uint64_t v9 = (void *)(a8[7] + 16 * result);
  *uint64_t v9 = a6;
  v9[1] = a7;
  ++a8[2];
  return result;
}

uint64_t sub_1B6AD7DC8(unint64_t a1, uint64_t a2, char a3, void *a4)
{
  char v7 = a3 & 1;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1B6E31118();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(unsigned char *)(a4[7] + a1) = v7;
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD7E78(unint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_1B6E31118();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = a5[7] + 16 * a1;
  *(void *)uint64_t v13 = a3;
  *(unsigned char *)(v13 + 8) = a4 & 1;
  ++a5[2];
  return result;
}

uint64_t sub_1B6AD7F38(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a4[6] + 8 * a1;
  *(_DWORD *)uint64_t v7 = a2;
  *(unsigned char *)(v7 + 4) = BYTE4(a2) & 1;
  uint64_t v8 = a4[7];
  uint64_t v9 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t result = sub_1B6365F60(a3, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD7FE4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1B6E31118();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  ++a4[2];
  return result;
}

__n128 sub_1B6AD8094(unint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v4 = *a3;
  uint64_t v5 = a3[17];
  char v6 = *((unsigned char *)a3 + 144);
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7] + 152 * a1;
  *(void *)uint64_t v7 = v4;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(a3 + 1);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a3 + 3);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(a3 + 5);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a3 + 7);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)(a3 + 9);
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(a3 + 11);
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(a3 + 13);
  __n128 result = *(__n128 *)(a3 + 15);
  *(__n128 *)(v7 + 120) = result;
  *(void *)(v7 + 136) = v5;
  *(unsigned char *)(v7 + 144) = v6;
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD812C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  char v6 = (void *)(a5[6] + 16 * a1);
  *char v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1B67F7F4C(a4, a5[7] + 48 * a1);
  ++a5[2];
  return result;
}

__n128 sub_1B6AD819C(unint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a4 + 16);
  char v6 = *(unsigned char *)(a4 + 24);
  __int16 v7 = *(_WORD *)(a4 + 40);
  char v8 = *(unsigned char *)(a4 + 42);
  uint64_t v9 = *(void *)(a4 + 96);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6] + 16 * a1;
  *(unsigned char *)uint64_t v10 = a2;
  *(void *)(v10 + 8) = a3;
  uint64_t v11 = a5[7] + (a1 << 7);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a4;
  *(void *)(v11 + 16) = v5;
  *(unsigned char *)(v11 + 24) = v6;
  *(void *)(v11 + 32) = *(void *)(a4 + 32);
  *(_WORD *)(v11 + 40) = v7;
  *(unsigned char *)(v11 + 42) = v8;
  long long v12 = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v11 + 64) = v12;
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(a4 + 80);
  *(void *)(v11 + 96) = v9;
  *(_DWORD *)(v11 + 104) = *(_DWORD *)(a4 + 104);
  __n128 result = *(__n128 *)(a4 + 112);
  *(__n128 *)(v11 + 112) = result;
  ++a5[2];
  return result;
}

uint64_t sub_1B6AD8238(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  char v6 = (void *)(a5[6] + 16 * a1);
  *char v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1B67F7AF0(a4, a5[7] + 96 * a1);
  ++a5[2];
  return result;
}

__n128 sub_1B6AD82A8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v4 = a4[7] + 120 * a1;
  long long v5 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v4 + 80) = v5;
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a3 + 96);
  *(void *)(v4 + 112) = *(void *)(a3 + 112);
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v6;
  __n128 result = *(__n128 *)(a3 + 32);
  long long v8 = *(_OWORD *)(a3 + 48);
  *(__n128 *)(v4 + 32) = result;
  *(_OWORD *)(v4 + 48) = v8;
  ++a4[2];
  return result;
}

uint64_t sub_1B6AD8310(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1B6E30F48();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  ++a4[2];
  return result;
}

unint64_t sub_1B6AD83C0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  *(void *)(a7[6] + 8 * result) = a2;
  __int16 v7 = (void *)(a7[7] + 32 * result);
  void *v7 = a3;
  v7[1] = a4;
  v7[2] = a5;
  v7[3] = a6;
  ++a7[2];
  return result;
}

unint64_t sub_1B6AD8404(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = (void *)(a8[6] + 16 * result);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = (void *)(a8[7] + 32 * result);
  *uint64_t v9 = a4;
  v9[1] = a5;
  v9[2] = a6;
  v9[3] = a7;
  ++a8[2];
  return result;
}

unint64_t sub_1B6AD844C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  __int16 v7 = (void *)(a7[6] + 16 * result);
  void *v7 = a2;
  v7[1] = a3;
  uint64_t v8 = (void *)(a7[7] + 24 * result);
  void *v8 = a4;
  v8[1] = a5;
  v8[2] = a6;
  ++a7[2];
  return result;
}

__n128 sub_1B6AD8498(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v5 = (void *)(a5[6] + 16 * a1);
  *long long v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 56 * a1;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  __n128 result = *(__n128 *)(a4 + 32);
  *(__n128 *)(v6 + 32) = result;
  *(void *)(v6 + 48) = *(void *)(a4 + 48);
  ++a5[2];
  return result;
}

__n128 sub_1B6AD84F8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v4 = a4[6] + 72 * a1;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 61) = *(void *)(a2 + 61);
  __n128 result = *(__n128 *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(__n128 *)(v4 + 16) = result;
  *(void *)(a4[7] + 8 * a1) = a3;
  ++a4[2];
  return result;
}

unint64_t sub_1B6AD8550(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = a8[6] + 32 * result;
  *(void *)uint64_t v8 = a2;
  *(void *)(v8 + 8) = a3;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 24) = a5 & 1;
  uint64_t v9 = (void *)(a8[7] + 16 * result);
  *uint64_t v9 = a6;
  v9[1] = a7;
  ++a8[2];
  return result;
}

__n128 sub_1B6AD85A0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v4 = (_OWORD *)(a4[6] + 96 * a1);
  long long v5 = *(_OWORD *)(a2 + 48);
  _OWORD v4[2] = *(_OWORD *)(a2 + 32);
  v4[3] = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  v4[4] = *(_OWORD *)(a2 + 64);
  v4[5] = v6;
  __n128 result = *(__n128 *)a2;
  long long v8 = *(_OWORD *)(a2 + 16);
  *uint64_t v4 = *(_OWORD *)a2;
  v4[1] = v8;
  *(void *)(a4[7] + 8 * a1) = a3;
  ++a4[2];
  return result;
}

uint64_t (*sub_1B6AD85F8(void *a1, unint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1B63821E0(v4);
  v4[9] = sub_1B6AD8728(v4 + 4, a2 | ((HIDWORD(a2) & 1) << 32), isUniquelyReferenced_nonNull_native);
  return sub_1B6383354;
}

uint64_t (*sub_1B6AD8698(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1B63821E0(v4);
  v4[9] = sub_1B6AD8A50(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1B6383354;
}

void (*sub_1B6AD8728(void *a1, unint64_t a2, char a3))(uint64_t a1)
{
  uint64_t v4 = v3;
  long long v8 = malloc(0x28uLL);
  *a1 = v8;
  void *v8 = a2;
  v8[1] = v3;
  sub_1B63999E0(0, &qword_1EB97F350, (uint64_t (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo, MEMORY[0x1E4FBB718]);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  uint64_t v12 = HIDWORD(a2) & 1;
  uint64_t v13 = a2;
  unint64_t v14 = sub_1B69FAA7C(a2 | (unint64_t)(v12 << 32));
  char v16 = v15;
  *((unsigned char *)v8 + 32) = v15 & 1;
  uint64_t v17 = *(void *)(v11 + 24);
  uint64_t v18 = *(void *)(v11 + 16) + ((v15 & 1) == 0);
  if (v17 >= v18 && (a3 & 1) != 0)
  {
LABEL_6:
    v8[3] = v14;
    if (v16)
    {
LABEL_7:
      uint64_t v19 = *(void *)(*v4 + 56);
      uint64_t v20 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
      uint64_t v21 = *(void *)(v20 - 8);
      sub_1B6365F60(v19 + *(void *)(v21 + 72) * v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v10, 0, 1, v20);
      return sub_1B6AD8984;
    }
LABEL_10:
    uint64_t v24 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
    return sub_1B6AD8984;
  }
  if (v17 >= v18 && (a3 & 1) == 0)
  {
    sub_1B6AD135C();
    goto LABEL_6;
  }
  sub_1B6ABF54C(v18, a3 & 1);
  unint64_t v22 = sub_1B69FAA7C(v13 | (v12 << 32));
  if ((v16 & 1) == (v23 & 1))
  {
    unint64_t v14 = v22;
    v8[3] = v22;
    if (v16) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  __n128 result = (void (*)(uint64_t))sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B6AD8984(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void **)(*(void *)a1 + 16);
  sub_1B6860728((uint64_t)v2, *(unsigned char *)(*(void *)a1 + 32), *(uint64_t **)(*(void *)a1 + 8), *(void *)(*(void *)a1 + 24), **(void **)a1 | ((HIDWORD(**(void **)a1) & 1) << 32));
  sub_1B63667D0((uint64_t)v2, (uint64_t)&qword_1EB97F350, (uint64_t)type metadata accessor for GraphScriptingConfig.ScriptInfo, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63999E0);
  free(v2);

  free(v1);
}

void (*sub_1B6AD8A50(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  long long v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[3] = a2;
  v8[4] = v3;
  uint64_t v9 = *v3;
  unint64_t v10 = sub_1B62C1A30(a2);
  char v12 = v11;
  *((unsigned char *)v8 + 48) = v11 & 1;
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 16) + ((v11 & 1) == 0);
  if (v13 >= v14 && (a3 & 1) != 0)
  {
LABEL_6:
    v8[5] = v10;
    if (v12)
    {
LABEL_7:
      uint64_t v15 = *(void *)(*v4 + 56) + 24 * v10;
      long long v16 = *(_OWORD *)v15;
      uint64_t v17 = *(void *)(v15 + 16);
LABEL_11:
      *(_OWORD *)long long v8 = v16;
      v8[2] = v17;
      return sub_1B6AD8B88;
    }
LABEL_10:
    uint64_t v17 = 0;
    long long v16 = 0uLL;
    goto LABEL_11;
  }
  if (v13 >= v14 && (a3 & 1) == 0)
  {
    sub_1B6ACD434();
    goto LABEL_6;
  }
  sub_1B6AB89CC(v14, a3 & 1);
  unint64_t v18 = sub_1B62C1A30(a2);
  if ((v12 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    v8[5] = v18;
    if (v12) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  __n128 result = (void (*)(uint64_t **))sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B6AD8B88(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v3 = v1[2];
    unint64_t v5 = v1[5];
    long long v6 = *(void **)v1[4];
    if ((*a1)[6])
    {
      long long v6 = (void *)(v6[7] + 24 * v5);
      *long long v6 = v2;
      v6[1] = v4;
    }
    else
    {
      uint64_t v7 = v1[3];
      v6[(v5 >> 6) + 8] |= 1 << v5;
      *(void *)(v6[6] + 8 * v5) = v7;
      long long v8 = (void *)(v6[7] + 24 * v5);
      void *v8 = v2;
      v8[1] = v4;
      v8[2] = v3;
      uint64_t v3 = v6[2] + 1;
    }
    _OWORD v6[2] = v3;
  }
  else if ((*a1)[6])
  {
    sub_1B6AC8184(v1[5], *(void *)v1[4]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v1);
}

void sub_1B6AD8C64(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_1B62F3064(255, (unint64_t *)&qword_1EB97D7F0);
    unint64_t v3 = sub_1B6E32C68();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1B6AD8CDC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  sub_1B63668FC(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B6AD8D4C(uint64_t a1)
{
  return a1;
}

void sub_1B6AD8F14()
{
  if (!qword_1E9DD50C0)
  {
    type metadata accessor for ComponentsDataChunk();
    sub_1B63999E0(255, (unint64_t *)&unk_1E9DD50C8, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBB320]);
    sub_1B6366304((unint64_t *)&qword_1E9DD50D8, (void (*)(uint64_t))type metadata accessor for ComponentsDataChunk);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD50C0);
    }
  }
}

void sub_1B6AD8FF0(uint64_t a1)
{
}

void sub_1B6AD9020(uint64_t a1)
{
}

uint64_t sub_1B6AD9050(uint64_t a1)
{
  return a1;
}

void sub_1B6AD90A8(uint64_t a1)
{
}

void sub_1B6AD90D8(uint64_t a1)
{
}

void sub_1B6AD9108()
{
  if (!qword_1E9DD5148)
  {
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5148);
    }
  }
}

void sub_1B6AD916C()
{
  if (!qword_1E9DD0620)
  {
    sub_1B6AD91F8(255, (unint64_t *)&qword_1E9DD0628, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0620);
    }
  }
}

void sub_1B6AD91F8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B6AD988C(255, a3, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a4);
    unint64_t v5 = sub_1B6E31D18();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6AD926C()
{
  if (!qword_1E9DD0630)
  {
    sub_1B6AD91F8(255, (unint64_t *)&qword_1E9DD0638, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0630);
    }
  }
}

void sub_1B6AD92F8(uint64_t a1)
{
}

void sub_1B6AD9328()
{
  if (!qword_1EB94A1B8)
  {
    sub_1B63B70E8();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB94A1B8);
    }
  }
}

void sub_1B6AD938C(uint64_t a1)
{
}

void sub_1B6AD93BC()
{
  if (!qword_1E9DD51C0)
  {
    sub_1B6E31118();
    sub_1B62CB664();
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD51C0);
    }
  }
}

void sub_1B6AD9468(uint64_t a1)
{
}

void sub_1B6AD9498(uint64_t a1)
{
}

void sub_1B6AD94C8()
{
  if (!qword_1E9DD0A98)
  {
    unint64_t v0 = sub_1B6E31F18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A98);
    }
  }
}

uint64_t sub_1B6AD9528(uint64_t a1, uint64_t a2)
{
  return sub_1B6AD955C(a1, a2, (unint64_t *)&unk_1EB9854E0, (uint64_t (*)(uint64_t))type metadata accessor for DepthStencilCache, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
}

uint64_t sub_1B6AD955C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1B63999E0(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B6AD95CC(uint64_t a1, uint64_t a2)
{
  return sub_1B63B153C(a1, a2, (unint64_t *)&unk_1EB9854C0, (uint64_t (*)(uint64_t))type metadata accessor for TextureCache, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
}

uint64_t sub_1B6AD9600(uint64_t a1, uint64_t a2)
{
  return sub_1B6AD955C(a1, a2, (unint64_t *)&unk_1EB9854C0, (uint64_t (*)(uint64_t))type metadata accessor for TextureCache, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
}

void sub_1B6AD9634()
{
  if (!qword_1E9DD51E8)
  {
    sub_1B62C55B0(255, &qword_1E9DD51F0);
    sub_1B6AD96B4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD51E8);
    }
  }
}

unint64_t sub_1B6AD96B4()
{
  unint64_t result = qword_1E9DD51F8;
  if (!qword_1E9DD51F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD51F8);
  }
  return result;
}

void sub_1B6AD9708(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1B6E31118();
    uint64_t v7 = sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v8 = a3(a1, v6, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B6AD97A8(uint64_t a1)
{
}

void sub_1B6AD97D8()
{
  if (!qword_1E9DD5210)
  {
    sub_1B6AD988C(255, (unint64_t *)&unk_1E9DD1F50, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for _KeyBox);
    type metadata accessor for _BinaryDecoder.DataStream();
    sub_1B6AD98F4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5210);
    }
  }
}

void sub_1B6AD988C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B6AD98F4()
{
  unint64_t result = qword_1E9DD5218;
  if (!qword_1E9DD5218)
  {
    sub_1B6AD988C(255, (unint64_t *)&unk_1E9DD1F50, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for _KeyBox);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5218);
  }
  return result;
}

void sub_1B6AD9984()
{
  if (!qword_1EB94A1E0)
  {
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB94A1E0);
    }
  }
}

void sub_1B6AD99E8(uint64_t a1)
{
}

void sub_1B6AD9A18(uint64_t a1)
{
}

void sub_1B6AD9A48(uint64_t a1)
{
}

void sub_1B6AD9A78(uint64_t a1)
{
}

void sub_1B6AD9AA8(uint64_t a1)
{
}

void sub_1B6AD9AD8(uint64_t a1)
{
}

void sub_1B6AD9B08(uint64_t a1)
{
}

void sub_1B6AD9B38(uint64_t a1)
{
}

void sub_1B6AD9B68(uint64_t a1)
{
}

void sub_1B6AD9B98(uint64_t a1)
{
}

void sub_1B6AD9BC8(uint64_t a1)
{
}

void sub_1B6AD9BF8(uint64_t a1)
{
}

void sub_1B6AD9C28(uint64_t a1)
{
}

void sub_1B6AD9C58(uint64_t a1)
{
}

void sub_1B6AD9C88()
{
  if (!qword_1E9DD5260)
  {
    sub_1B63999E0(255, &qword_1E9DD5268, (uint64_t (*)(uint64_t))sub_1B6AD9D24, MEMORY[0x1E4FBB320]);
    sub_1B67FAD14();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5260);
    }
  }
}

void sub_1B6AD9D24(uint64_t a1)
{
}

void sub_1B6AD9D54()
{
  if (!qword_1E9DD5280)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD5280);
    }
  }
}

void sub_1B6AD9DBC()
{
  if (!qword_1E9DD0928)
  {
    sub_1B6E31118();
    sub_1B67FAA44();
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0928);
    }
  }
}

void sub_1B6AD9E68()
{
  if (!qword_1E9DD52A8)
  {
    sub_1B63999E0(255, &qword_1E9DD52B0, (uint64_t (*)(uint64_t))type metadata accessor for AuthoringNode, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD52A8);
    }
  }
}

void sub_1B6AD9F00()
{
  if (!qword_1E9DD52B8)
  {
    sub_1B63999E0(255, &qword_1E9DD2010, (uint64_t (*)(uint64_t))type metadata accessor for GraphCodeGen.CFGNode, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD52B8);
    }
  }
}

void sub_1B6AD9F98(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1B63668FC(255, a3, a4, MEMORY[0x1E4FBB320]);
    sub_1B67F7970();
    unint64_t v5 = sub_1B6E32C68();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6ADA020()
{
  if (!qword_1E9DD52D8)
  {
    sub_1B63668FC(255, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD52D8);
    }
  }
}

void sub_1B6ADA0AC()
{
  if (!qword_1E9DD5300)
  {
    sub_1B63999E0(255, (unint64_t *)&unk_1E9DD5308, (uint64_t (*)(uint64_t))sub_1B68D6750, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5300);
    }
  }
}

void sub_1B6ADA144()
{
  if (!qword_1E9DD5320)
  {
    sub_1B6E31118();
    type metadata accessor for Node();
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5320);
    }
  }
}

void sub_1B6ADA1F0()
{
  if (!qword_1E9DD09C0)
  {
    sub_1B67FB364(255, (unint64_t *)&unk_1E9DD0F70, (unint64_t *)&unk_1E9DD09D0, (void (*)(uint64_t))type metadata accessor for AuthoringNode);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD09C0);
    }
  }
}

void sub_1B6ADA27C(uint64_t a1)
{
}

void sub_1B6ADA2AC()
{
  if (!qword_1E9DD0A20)
  {
    sub_1B6E31118();
    type metadata accessor for AuthoringNode();
    sub_1B6366304((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A20);
    }
  }
}

unint64_t sub_1B6ADA358()
{
  unint64_t result = qword_1EB97EAD8;
  if (!qword_1EB97EAD8)
  {
    sub_1B62C55B0(255, &qword_1EB97EAD0);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB97EAD8);
  }
  return result;
}

void sub_1B6ADA3A8()
{
  if (!qword_1E9DD0B10)
  {
    sub_1B63989B8(255, &qword_1EB9804F0);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0B10);
    }
  }
}

void sub_1B6ADA420()
{
  if (!qword_1E9DD0A78)
  {
    sub_1B67FB364(255, (unint64_t *)&unk_1E9DD0A80, &qword_1E9DD0FA0, (void (*)(uint64_t))type metadata accessor for Node);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A78);
    }
  }
}

void sub_1B6ADA4AC()
{
  if (!qword_1E9DD0AE0)
  {
    sub_1B63999E0(255, (unint64_t *)&unk_1E9DD5350, type metadata accessor for TriggerScript, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    sub_1B6654918();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0AE0);
    }
  }
}

void sub_1B6ADA548()
{
  if (!qword_1E9DD5368)
  {
    sub_1B63668FC(255, &qword_1E9DD2130, (uint64_t)&type metadata for AuthoringNodeCoder, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5368);
    }
  }
}

id sub_1B6ADA5D4()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  *(void *)&v0[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_currentRunloop] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_startedCallback];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  memset(&context, 0, sizeof(context));
  uint64_t v2 = v0;
  *(void *)&v2[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_runloopSource] = CFRunLoopSourceCreate(0, 0, &context);

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for RunloopThread.Thread();
  return objc_msgSendSuper2(&v4, sel_init);
}

void sub_1B6ADA6B8()
{
  uint64_t v1 = CFRunLoopGetCurrent();
  uint64_t v2 = OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_currentRunloop;
  unint64_t v3 = *(void **)&v0[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_currentRunloop];
  *(void *)&v0[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_currentRunloop] = v1;
  objc_super v4 = v1;

  unint64_t v5 = *(__CFRunLoopSource **)&v0[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_runloopSource];
  CFStringRef v6 = (const __CFString *)*MEMORY[0x1E4F1D410];
  CFRunLoopAddSource(v4, v5, (CFRunLoopMode)*MEMORY[0x1E4F1D410]);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v0;
  *(void *)(v7 + 24) = v4;
  uint64_t v13[4] = sub_1B6ADAC48;
  v13[5] = v7;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_1B6ADA8C0;
  v13[3] = &unk_1F0FBA220;
  unint64_t v8 = _Block_copy(v13);
  uint64_t v9 = v4;
  unint64_t v10 = v0;
  swift_release();
  uint64_t v11 = CFRunLoopObserverCreateWithHandler(0, 1uLL, 0, 0, v8);
  _Block_release(v8);
  CFRunLoopAddObserver(v9, v11, v6);
  CFRunLoopRun();
  CFRunLoopRemoveObserver(v9, v11, v6);
  CFRunLoopRemoveSource(v9, v5, v6);
  char v12 = *(void **)&v0[v2];
  *(void *)&v0[v2] = 0;
}

void sub_1B6ADA844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_super v4 = *(void (**)(uint64_t))(a3
                                      + OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_startedCallback);
  if (v4)
  {
    swift_retain();
    v4(a4);
    sub_1B62C6A50((uint64_t)v4);
  }
}

void sub_1B6ADA8C0(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a2, a3);
  swift_release();
}

id sub_1B6ADA980()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RunloopThread.Thread();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B6ADAA18()
{
  CFRunLoopStop(*(CFRunLoopRef *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RunloopThread()
{
  return self;
}

void sub_1B6ADAA84()
{
  dispatch_semaphore_t v1 = dispatch_semaphore_create(0);
  objc_super v2 = *(char **)(v0 + 16);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  unint64_t v5 = (uint64_t (**)(void *))&v2[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_startedCallback];
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtCC3VFX13RunloopThreadP33_C5453D25073BE51EF98804DB40F9E2866Thread_startedCallback];
  *unint64_t v5 = sub_1B6ADACC8;
  v5[1] = (uint64_t (*)(void *))v4;
  uint64_t v7 = v1;
  swift_retain();
  swift_retain();
  sub_1B62C6A50(v6);
  objc_msgSend(v2, sel_start);
  swift_release();
  swift_release();
  sub_1B6E322F8();
}

uint64_t sub_1B6ADAB8C(void *a1)
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void **)(Strong + 24);
    *(void *)(Strong + 24) = a1;
    id v4 = a1;
    swift_release();
  }
  return sub_1B6E32308();
}

uint64_t type metadata accessor for RunloopThread.Thread()
{
  return self;
}

uint64_t sub_1B6ADAC08()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B6ADAC48(uint64_t a1, uint64_t a2)
{
  sub_1B6ADA844(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B6ADAC50()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6ADAC88()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6ADACC8(void *a1)
{
  return sub_1B6ADAB8C(a1);
}

uint64_t vfx_script_debug_record_scalar(_:_:_:_:_:_:)(_OWORD *a1)
{
  long long v1 = a1[1];
  v11[0] = *a1;
  v11[1] = v1;
  long long v2 = a1[3];
  _DWORD v11[2] = a1[2];
  _DWORD v11[3] = v2;
  swift_retain();
  if (*((void *)&v11[0] + 1) != 0xFFFFFFFFLL
    && (DWORD2(v11[0]) & 0x80000000) == 0
    && *(void *)(*(void *)&v11[0] + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > SDWORD2(v11[0])
    && ((uint64_t v3 = *(void *)(*(void *)&v11[0] + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(v11[0]) == -1)
     || *(_DWORD *)(v3 + 12 * SDWORD2(v11[0]) + 8) == HIDWORD(v11[0])))
  {
    unint64_t v5 = (int *)(v3 + 12 * SDWORD2(v11[0]));
    uint64_t v6 = *((__int16 *)v5 + 2);
    uint64_t v7 = *(void *)(*(void *)(*(void *)&v11[0] + 136) + 8 * *v5 + 32);
    sub_1B6ADB330((uint64_t)v11);
    uint64_t v8 = *(void *)(v7 + 48);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      unint64_t v10 = (void *)(v8 + 56);
      while ((ValueMetadata *)*(v10 - 3) != &type metadata for GraphDebuggingComponent)
      {
        v10 += 5;
        if (!--v9) {
          goto LABEL_7;
        }
      }
      sub_1B6ADB2F0((uint64_t *)(*(void *)(v7 + 128) + *v10 + 16 * v6));
    }
  }
  else
  {
    sub_1B6ADB330((uint64_t)v11);
  }
LABEL_7:
  swift_release();
  return sub_1B6ADB35C((uint64_t)v11);
}

uint64_t sub_1B6ADAE20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10)
{
  uint64_t v43 = a6;
  uint64_t v44 = a4;
  uint64_t v42 = a10;
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  MEMORY[0x1F4188790](v16 - 8, v17);
  char v19 = (char *)&v42 - v18;
  unint64_t v20 = *(void *)(a2 + 8);
  swift_retain();
  sub_1B695DB00(v20, (uint64_t)v19);
  swift_release();
  uint64_t v21 = type metadata accessor for GraphScript(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
  {
    sub_1B6AE991C((uint64_t)v19);
    char v22 = 0;
  }
  else
  {
    char v22 = v19[40];
    sub_1B62D4CFC((uint64_t)v19, type metadata accessor for GraphScript);
  }
  LOBYTE(v47[0]) = v22;
  uint64_t v23 = sub_1B6E31818();
  v47[0] = a3;
  v47[1] = v44;
  _OWORD v47[2] = v23;
  v47[3] = v24;
  v47[4] = a5;
  v47[5] = v43;
  v47[6] = a7;
  v47[7] = a8;
  int v48 = a9;
  char v49 = 0;
  uint64_t v25 = *(void *)(*a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v25) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B69FAB44(v47);
  char v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
LABEL_10:
    sub_1B62F7F08(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1B6E77050;
    sub_1B62CAAD8(v42, v36 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v46[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_1B67E8D34(v36, v47, isUniquelyReferenced_nonNull_native);
    *a1 = *(void *)&v46[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1B62CAAD8(v42, (uint64_t)v46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v50 = *a1;
  uint64_t v29 = v50;
  *a1 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_1B69FAB44(v47);
  char v32 = v30;
  uint64_t v33 = *(void *)(v29 + 16) + ((v30 & 1) == 0);
  if (*(void *)(v29 + 24) >= v33)
  {
    if (v28)
    {
      if (v30) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B6AD571C();
      if (v32) {
        goto LABEL_13;
      }
    }
LABEL_15:
    uint64_t v38 = 0;
    goto LABEL_16;
  }
  sub_1B6AC53E4(v33, v28);
  unint64_t v34 = sub_1B69FAB44(v47);
  if ((v32 & 1) == (v35 & 1))
  {
    unint64_t v31 = v34;
    if ((v32 & 1) == 0) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v38 = *(void **)(*(void *)(v50 + 56) + 8 * v31);
LABEL_16:
    long long v45 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v38 = sub_1B68C4954(0, v38[2] + 1, 1, v38);
    }
    unint64_t v40 = v38[2];
    unint64_t v39 = v38[3];
    if (v40 >= v39 >> 1) {
      uint64_t v38 = sub_1B68C4954(v39 > 1, v40 + 1, 1, v38);
    }
    _OWORD v38[2] = v40 + 1;
    sub_1B62B57A8(v46, &v38[4 * v40 + 4]);
    long long v45 = v38;
    sub_1B6860964((uint64_t *)&v45, v32 & 1, &v50, v31, (uint64_t)v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a1 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6ADB2F0(uint64_t *a1)
{
  return sub_1B6ADAE20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(_DWORD *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1B6ADB330(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6ADB35C(uint64_t a1)
{
  return a1;
}

uint64_t vfx_script_debug_record_scalar(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7)
{
  long long v13 = a1[1];
  v17[0] = *a1;
  v17[1] = v13;
  long long v14 = a1[3];
  v17[2] = a1[2];
  v17[3] = v14;
  long long v15 = v17[0];
  swift_retain();
  sub_1B6ADB330((uint64_t)v17);
  sub_1B6C09880(*((uint64_t *)&v15 + 1), v15, (uint64_t)v17, a2, a3, a4, a5, a6, a7);
  swift_release();
  return sub_1B6ADB35C((uint64_t)v17);
}

uint64_t vfx_script_debug_record_scalar(_:_:_:_:_:_:_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7)
{
  long long v13 = a1[1];
  v20[0] = *a1;
  v20[1] = v13;
  long long v14 = a1[3];
  _OWORD v20[2] = a1[2];
  v20[3] = v14;
  swift_retain();
  if (*((void *)&v20[0] + 1) != 0xFFFFFFFFLL
    && (DWORD2(v20[0]) & 0x80000000) == 0
    && *(void *)(*(void *)&v20[0] + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > SDWORD2(v20[0])
    && ((uint64_t v15 = *(void *)(*(void *)&v20[0] + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(v20[0]) == -1)
     || *(_DWORD *)(v15 + 12 * SDWORD2(v20[0]) + 8) == HIDWORD(v20[0])))
  {
    uint64_t v17 = (int *)(v15 + 12 * SDWORD2(v20[0]));
    uint64_t v18 = *(void *)(*(void *)(*(void *)&v20[0] + 136) + 8 * *v17 + 32);
    __int16 v19 = *((_WORD *)v17 + 2);
    sub_1B6ADB330((uint64_t)v20);
    sub_1B6C097F0(v18, v19, 16, (uint64_t)v20, a2, a3, a4, a5, a6, a7);
  }
  else
  {
    sub_1B6ADB330((uint64_t)v20);
  }
  swift_release();
  return sub_1B6ADB35C((uint64_t)v20);
}

uint64_t sub_1B6ADB57C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7, uint64_t a8)
{
  uint64_t v48 = a8;
  char v47 = a1;
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  MEMORY[0x1F4188790](v11 - 8, v12);
  long long v14 = (char *)&v47 - v13;
  unint64_t v15 = *(void *)(a2 + 8);
  swift_retain();
  sub_1B695DB00(v15, (uint64_t)v14);
  swift_release();
  uint64_t v16 = type metadata accessor for GraphScript(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) == 1)
  {
    sub_1B6AE991C((uint64_t)v14);
    char v17 = 0;
  }
  else
  {
    char v17 = v14[40];
    sub_1B62D4CFC((uint64_t)v14, type metadata accessor for GraphScript);
  }
  LOBYTE(v53[0]) = v17;
  uint64_t v18 = sub_1B6E31818();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1B6E31968();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1B6E31968();
  uint64_t v26 = v25;
  uint64_t v27 = sub_1B6E31968();
  v53[0] = v21;
  v53[1] = v23;
  _OWORD v53[2] = v18;
  v53[3] = v20;
  v53[4] = v24;
  v53[5] = v26;
  v53[6] = v27;
  v53[7] = v28;
  int v54 = a6;
  char v55 = 0;
  if (qword_1EB981168 != -1) {
    swift_once();
  }
  if (*(void *)(qword_1EB997F48 + 16) <= (unint64_t)a7)
  {
    long long v51 = 0u;
    long long v50 = 0u;
    goto LABEL_15;
  }
  sub_1B629C37C(qword_1EB997F48 + 40 * a7 + 32, (uint64_t)v56);
  sub_1B6646D94(v56, (void (*)(void, void, void, void, void))sub_1B629C9E8);
  uint64_t v29 = sub_1B6A4BDD8(v56);
  sub_1B6A3E5C0(v48, v29, (uint64_t *)&v50);
  sub_1B6646D94(v56, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  if (!*((void *)&v51 + 1))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B62B32CC((uint64_t)&v50);
  }
  sub_1B62B57A8(&v50, v52);
  char v30 = v47;
  if (!*(void *)(*v47 + 16)) {
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B69FAB44(v53);
  char v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0)
  {
LABEL_16:
    sub_1B62F7F08(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1B6E77050;
    sub_1B62CAAD8((uint64_t)v52, v42 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v50 = *v30;
    *char v30 = 0x8000000000000000;
    sub_1B67E8D34(v42, v53, isUniquelyReferenced_nonNull_native);
    *char v30 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v52);
  }
  sub_1B62CAAD8((uint64_t)v52, (uint64_t)&v50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v57 = *v30;
  uint64_t v34 = v57;
  *char v30 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_1B69FAB44(v53);
  char v37 = v35;
  uint64_t v38 = *(void *)(v34 + 16) + ((v35 & 1) == 0);
  if (*(void *)(v34 + 24) >= v38)
  {
    if (v33)
    {
      if (v35) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_1B6AD571C();
      if (v37) {
        goto LABEL_19;
      }
    }
LABEL_21:
    uint64_t v44 = 0;
    goto LABEL_22;
  }
  sub_1B6AC53E4(v38, v33);
  unint64_t v39 = sub_1B69FAB44(v53);
  if ((v37 & 1) == (v40 & 1))
  {
    unint64_t v36 = v39;
    if ((v37 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v44 = *(void **)(*(void *)(v57 + 56) + 8 * v36);
LABEL_22:
    char v49 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v44 = sub_1B68C4954(0, v44[2] + 1, 1, v44);
    }
    unint64_t v46 = v44[2];
    unint64_t v45 = v44[3];
    if (v46 >= v45 >> 1) {
      uint64_t v44 = sub_1B68C4954(v45 > 1, v46 + 1, 1, v44);
    }
    _OWORD v44[2] = v46 + 1;
    sub_1B62B57A8(&v50, &v44[4 * v46 + 4]);
    char v49 = v44;
    sub_1B6860964((uint64_t *)&v49, v37 & 1, &v57, v36, (uint64_t)v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *char v47 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t vfx_script_debug_record_array(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7)
{
  long long v13 = a1[1];
  v17[0] = *a1;
  v17[1] = v13;
  long long v14 = a1[3];
  v17[2] = a1[2];
  v17[3] = v14;
  long long v15 = v17[0];
  swift_retain();
  sub_1B6ADB330((uint64_t)v17);
  sub_1B6C099E4(*((uint64_t *)&v15 + 1), v15, (uint64_t)v17, a2, a3, a4, a5, a6, a7);
  swift_release();
  return sub_1B6ADB35C((uint64_t)v17);
}

uint64_t vfx_script_debug_record_array(_:_:_:_:_:_:_:_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7)
{
  long long v13 = a1[1];
  v20[0] = *a1;
  v20[1] = v13;
  long long v14 = a1[3];
  _OWORD v20[2] = a1[2];
  v20[3] = v14;
  swift_retain();
  if (*((void *)&v20[0] + 1) != 0xFFFFFFFFLL
    && (DWORD2(v20[0]) & 0x80000000) == 0
    && *(void *)(*(void *)&v20[0] + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > SDWORD2(v20[0])
    && ((uint64_t v15 = *(void *)(*(void *)&v20[0] + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(v20[0]) == -1)
     || *(_DWORD *)(v15 + 12 * SDWORD2(v20[0]) + 8) == HIDWORD(v20[0])))
  {
    char v17 = (int *)(v15 + 12 * SDWORD2(v20[0]));
    uint64_t v18 = *(void *)(*(void *)(*(void *)&v20[0] + 136) + 8 * *v17 + 32);
    __int16 v19 = *((_WORD *)v17 + 2);
    sub_1B6ADB330((uint64_t)v20);
    sub_1B6C09948(v18, v19, 16, (uint64_t)v20, a2, a3, a4, a5, a6, a7);
  }
  else
  {
    sub_1B6ADB330((uint64_t)v20);
  }
  swift_release();
  return sub_1B6ADB35C((uint64_t)v20);
}

uint64_t sub_1B6ADBD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7, uint64_t a8)
{
  v46[1] = a8;
  v46[0] = a1;
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  MEMORY[0x1F4188790](v11 - 8, v12);
  long long v14 = (char *)v46 - v13;
  unint64_t v15 = *(void *)(a2 + 8);
  swift_retain();
  sub_1B695DB00(v15, (uint64_t)v14);
  swift_release();
  uint64_t v16 = type metadata accessor for GraphScript(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) == 1)
  {
    sub_1B6AE991C((uint64_t)v14);
    char v17 = 0;
  }
  else
  {
    char v17 = v14[40];
    sub_1B62D4CFC((uint64_t)v14, type metadata accessor for GraphScript);
  }
  LOBYTE(v52[0]) = v17;
  uint64_t v18 = sub_1B6E31818();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1B6E31968();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1B6E31968();
  uint64_t v26 = v25;
  uint64_t v27 = sub_1B6E31968();
  v52[0] = v21;
  v52[1] = v23;
  _OWORD v52[2] = v18;
  v52[3] = v20;
  v52[4] = v24;
  v52[5] = v26;
  v52[6] = v27;
  v52[7] = v28;
  int v53 = a6;
  char v54 = 0;
  if (qword_1EB981168 != -1) {
    swift_once();
  }
  if (*(void *)(qword_1EB997F48 + 16) <= (unint64_t)a7)
  {
    long long v49 = 0u;
    long long v48 = 0u;
    goto LABEL_15;
  }
  sub_1B629C37C(qword_1EB997F48 + 40 * a7 + 32, (uint64_t)v55);
  sub_1B6646D94(v55, (void (*)(void, void, void, void, void))sub_1B629C9E8);
  sub_1B6A3D574(v51);
  sub_1B6A4BDD8(v51);
  sub_1B6646D94(v51, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  sub_1B6A3E62C((uint64_t *)&v48);
  sub_1B6646D94(v55, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  if (!*((void *)&v49 + 1))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B62B32CC((uint64_t)&v48);
  }
  sub_1B62B57A8(&v48, v50);
  uint64_t v29 = (void *)v46[0];
  if (!*(void *)(*(void *)v46[0] + 16)) {
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B69FAB44(v52);
  char v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
LABEL_16:
    sub_1B62F7F08(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1B6E77050;
    sub_1B62CAAD8((uint64_t)v50, v41 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v48 = *v29;
    void *v29 = 0x8000000000000000;
    sub_1B67E8D34(v41, v52, isUniquelyReferenced_nonNull_native);
    void *v29 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v50);
  }
  sub_1B62CAAD8((uint64_t)v50, (uint64_t)&v48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v56 = *v29;
  uint64_t v33 = v56;
  void *v29 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v35 = sub_1B69FAB44(v52);
  char v36 = v34;
  uint64_t v37 = *(void *)(v33 + 16) + ((v34 & 1) == 0);
  if (*(void *)(v33 + 24) >= v37)
  {
    if (v32)
    {
      if (v34) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_1B6AD571C();
      if (v36) {
        goto LABEL_19;
      }
    }
LABEL_21:
    uint64_t v43 = 0;
    goto LABEL_22;
  }
  sub_1B6AC53E4(v37, v32);
  unint64_t v38 = sub_1B69FAB44(v52);
  if ((v36 & 1) == (v39 & 1))
  {
    unint64_t v35 = v38;
    if ((v36 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v43 = *(void **)(*(void *)(v56 + 56) + 8 * v35);
LABEL_22:
    char v47 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_1B68C4954(0, v43[2] + 1, 1, v43);
    }
    unint64_t v45 = v43[2];
    unint64_t v44 = v43[3];
    if (v45 >= v44 >> 1) {
      uint64_t v43 = sub_1B68C4954(v44 > 1, v45 + 1, 1, v43);
    }
    _OWORD v43[2] = v45 + 1;
    sub_1B62B57A8(&v48, &v43[4 * v45 + 4]);
    char v47 = v43;
    sub_1B6860964((uint64_t *)&v47, v36 & 1, &v56, v35, (uint64_t)v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)v46[0] = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t vfx_script_debug_log(_:_:_:_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v12 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6E31948();
    a6 = a4;
    a7 = a5;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  vfx_script_debug_log(_:_:_:)(a1, a2, a3, a6, a7);

  return swift_bridgeObjectRelease();
}

uint64_t vfx_script_debug_log(_:_:_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v24 - v12;
  long long v14 = a1[1];
  v27[0] = *a1;
  v27[1] = v14;
  long long v15 = a1[3];
  v27[2] = a1[2];
  v27[3] = v15;
  long long v16 = v27[0];
  swift_retain();
  if (sub_1B62EC0CC((uint64_t)&type metadata for GraphDebuggingComponent, (uint64_t)&off_1F0F8F2E8, *((uint64_t *)&v16 + 1)))
  {
    sub_1B6ADB330((uint64_t)v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6C09AB4(*((unint64_t *)&v16 + 1), v16, (uint64_t)v27, a2, a3, a4, a5);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B6ADB35C((uint64_t)v27);
  }
  else if (*(unsigned char *)(v16 + 48))
  {
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1B695DB00(*((unint64_t *)&v16 + 1), (uint64_t)v13);
    swift_release();
    uint64_t v18 = type metadata accessor for GraphScript(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v13, 1, v18) == 1)
    {
      sub_1B6AE991C((uint64_t)v13);
      char v19 = 0;
    }
    else
    {
      char v19 = v13[40];
      sub_1B62D4CFC((uint64_t)v13, type metadata accessor for GraphScript);
    }
    LOBYTE(v25) = v19;
    sub_1B6E31818();
    uint64_t v25 = a2;
    uint64_t v26 = a3;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
    swift_retain();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t v21 = v25;
    uint64_t v22 = v26;
    uint64_t v23 = sub_1B6E32168();
    uint64_t v25 = 0;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(*(void *)v20 + 88))(v23, &v25, v21, v22);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6ADC780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B6ADCAA8(a1, a2, a3, a4, a5, a6);
}

uint64_t vfx_script_debug_log(_:_:_:)(_OWORD *a1)
{
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  MEMORY[0x1F4188790](v2 - 8, v3);
  unint64_t v5 = (char *)&v24 - v4;
  uint64_t v6 = sub_1B6E31968();
  uint64_t v8 = v7;
  uint64_t v9 = sub_1B6E31968();
  uint64_t v11 = v10;
  long long v12 = a1[1];
  v27[0] = *a1;
  v27[1] = v12;
  long long v13 = a1[3];
  v27[2] = a1[2];
  v27[3] = v13;
  long long v14 = v27[0];
  swift_retain();
  if (sub_1B62EC0CC((uint64_t)&type metadata for GraphDebuggingComponent, (uint64_t)&off_1F0F8F2E8, *((uint64_t *)&v14 + 1)))
  {
    sub_1B6ADB330((uint64_t)v27);
    swift_bridgeObjectRetain();
    sub_1B6C09AB4(*((unint64_t *)&v14 + 1), v14, (uint64_t)v27, v6, v8, v9, v11);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    return sub_1B6ADB35C((uint64_t)v27);
  }
  if (*(unsigned char *)(v14 + 48))
  {
    sub_1B6ADB330((uint64_t)v27);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B6ADB35C((uint64_t)v27);
  }
  swift_retain();
  sub_1B695DB00(*((unint64_t *)&v14 + 1), (uint64_t)v5);
  sub_1B6ADB330((uint64_t)v27);
  swift_release();
  uint64_t v16 = type metadata accessor for GraphScript(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16) == 1)
  {
    sub_1B6AE991C((uint64_t)v5);
    char v17 = 0;
  }
  else
  {
    char v17 = v5[40];
    sub_1B62D4CFC((uint64_t)v5, type metadata accessor for GraphScript);
  }
  LOBYTE(v25) = v17;
  sub_1B6E31818();
  uint64_t v25 = v6;
  uint64_t v26 = v8;
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v18 = v25;
  uint64_t v19 = v26;
  uint64_t v20 = *(void *)(v14 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
  swift_retain();
  uint64_t v25 = v18;
  uint64_t v26 = v19;
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v21 = v25;
  uint64_t v22 = v26;
  uint64_t v23 = sub_1B6E32168();
  uint64_t v25 = 0;
  (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(*(void *)v20 + 88))(v23, &v25, v21, v22);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B6ADB35C((uint64_t)v27);
  return swift_release();
}

uint64_t sub_1B6ADCAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  MEMORY[0x1F4188790](v14 - 8, v15);
  char v17 = (char *)v42 - v16;
  unint64_t v18 = *(void *)(a2 + 8);
  swift_retain();
  sub_1B695DB00(v18, (uint64_t)v17);
  swift_release();
  uint64_t v19 = type metadata accessor for GraphScript(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v17, 1, v19) == 1)
  {
    sub_1B6AE991C((uint64_t)v17);
    char v20 = 0;
  }
  else
  {
    char v20 = v17[40];
    sub_1B62D4CFC((uint64_t)v17, type metadata accessor for GraphScript);
  }
  LOBYTE(v44[0]) = v20;
  uint64_t v21 = sub_1B6E31818();
  v44[0] = a3;
  v44[1] = a4;
  _OWORD v44[2] = v21;
  v44[3] = v22;
  long long v45 = 0u;
  long long v46 = 0u;
  int v47 = 0;
  char v48 = 1;
  uint64_t v23 = *(void *)(*(void *)(a1 + 8) + 16);
  swift_bridgeObjectRetain();
  if (!v23
    || (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1B69FAB44(v44),
        char v25 = v24,
        swift_bridgeObjectRelease_n(),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v25 & 1) == 0))
  {
    sub_1B62F7F08(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1B6E77050;
    *(void *)(v34 + 32) = a5;
    *(void *)(v34 + 40) = a6;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = 0x8000000000000000;
    sub_1B67E8D74(v34, v44, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 8) = v49;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v42[0] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v49 = *(void *)(a1 + 8);
  uint64_t v27 = v49;
  *(void *)(a1 + 8) = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_1B69FAB44(v44);
  char v30 = v28;
  uint64_t v31 = *(void *)(v27 + 16) + ((v28 & 1) == 0);
  if (*(void *)(v27 + 24) >= v31)
  {
    if (v26)
    {
      if (v28) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B6AD573C();
      if (v30) {
        goto LABEL_13;
      }
    }
LABEL_15:
    uint64_t v37 = 0;
    goto LABEL_16;
  }
  sub_1B6AC5404(v31, v26);
  unint64_t v32 = sub_1B69FAB44(v44);
  if ((v30 & 1) != (v33 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v29 = v32;
  if ((v30 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v37 = *(void **)(*(void *)(v49 + 56) + 8 * v29);
LABEL_16:
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  v42[1] = v7;
  if ((v38 & 1) == 0) {
    uint64_t v37 = sub_1B6335858(0, v37[2] + 1, 1, v37);
  }
  unint64_t v40 = v37[2];
  unint64_t v39 = v37[3];
  if (v40 >= v39 >> 1) {
    uint64_t v37 = sub_1B6335858(v39 > 1, v40 + 1, 1, v37);
  }
  _OWORD v37[2] = v40 + 1;
  uint64_t v41 = &v37[2 * v40];
  v41[4] = v42[0];
  v41[5] = a6;
  uint64_t v43 = v37;
  sub_1B6860964((uint64_t *)&v43, v30 & 1, &v49, v29, (uint64_t)v44);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v49;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t vfx_script_debug_log_value(_:_:_:_:_:)(_OWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_1B6E31968();
  uint64_t v14 = v13;
  uint64_t v15 = sub_1B6E31968();
  unint64_t v17 = v16;
  long long v18 = a1[1];
  v35[0] = *a1;
  v35[1] = v18;
  long long v19 = a1[3];
  _OWORD v35[2] = a1[2];
  v35[3] = v19;
  uint64_t v20 = *(void *)&v35[0];
  swift_retain();
  sub_1B6ADB330((uint64_t)v35);
  if (qword_1EB981168 != -1) {
    swift_once();
  }
  if (*(void *)(qword_1EB997F48 + 16) <= (unint64_t)a4)
  {
    long long v32 = 0u;
    long long v33 = 0u;
    goto LABEL_10;
  }
  sub_1B629C37C(qword_1EB997F48 + 40 * a4 + 32, (uint64_t)v36);
  sub_1B6646D94(v36, (void (*)(void, void, void, void, void))sub_1B629C9E8);
  uint64_t v21 = sub_1B6A4BDD8(v36);
  sub_1B6A3E5C0(a5, v21, (uint64_t *)&v32);
  sub_1B6646D94(v36, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  if (!*((void *)&v33 + 1))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B6ADB35C((uint64_t)v35);
    return sub_1B62B32CC((uint64_t)&v32);
  }
  sub_1B62B57A8(&v32, v34);
  uint64_t v22 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v22 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (v22)
  {
    *(void *)&long long v32 = 0;
    *((void *)&v32 + 1) = 0xE000000000000000;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v32 = 0;
    *((void *)&v32 + 1) = 0xE000000000000000;
  }
  sub_1B6E32B18();
  long long v24 = v32;
  unint64_t v25 = *((void *)&v35[0] + 1);
  if (sub_1B62EC0CC((uint64_t)&type metadata for GraphDebuggingComponent, (uint64_t)&off_1F0F8F2E8, *((uint64_t *)&v35[0] + 1)))
  {
    sub_1B6ADB330((uint64_t)v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6C09AB4(v25, v20, (uint64_t)v35, v12, v14, v24, *((uint64_t *)&v24 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6ADB35C((uint64_t)v35);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B6ADB35C((uint64_t)v35);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v34);
    return swift_bridgeObjectRelease();
  }
  else if (*(unsigned char *)(v20 + 48))
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v34);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B6ADB35C((uint64_t)v35);
  }
  else
  {
    swift_retain();
    sub_1B695DB00(v25, (uint64_t)v11);
    swift_release();
    uint64_t v26 = type metadata accessor for GraphScript(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v11, 1, v26) == 1)
    {
      sub_1B6AE991C((uint64_t)v11);
      char v27 = 0;
    }
    else
    {
      char v27 = v11[40];
      sub_1B62D4CFC((uint64_t)v11, type metadata accessor for GraphScript);
    }
    LOBYTE(v32) = v27;
    sub_1B6E31818();
    uint64_t v28 = *(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
    swift_retain();
    *(void *)&long long v32 = v12;
    *((void *)&v32 + 1) = v14;
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v29 = v32;
    uint64_t v30 = sub_1B6E32168();
    *(void *)&long long v32 = 0;
    (*(void (**)(uint64_t, long long *, void, void))(*(void *)v28 + 88))(v30, &v32, v29, *((void *)&v29 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B6ADB35C((uint64_t)v35);
    swift_release();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v34);
  }
}

uint64_t sub_1B6ADD3CC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Children; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD444(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for VFXTag; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD4BC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureGPURuntime; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD534(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(id *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureCGImage; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    id v17 = *(id *)(*(void *)(a1 + 128) + *i + a2 * a3);
    id v13 = v17;
    a4(&v17);
    if (v7)
    {
    }
    else
    {
      uint64_t v14 = sub_1B635AB28(a7) << 16 >> 48;
      id v15 = v17;
      swift_retain();
      sub_1B6BF7EF0(v14, v15);
      swift_release();

      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADD650(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD6C8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Bindings; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD740(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldTransform; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD7B8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for InverseWorldTransform; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD830(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for DirectionalLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD8A8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD920(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AmbientLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADD998(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SpotLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADDA10(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for IBLGenerator; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADDA88(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Shadow; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADDB00(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadingOptions; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v13 = *((void *)v12 + 2);
    char v14 = *((unsigned char *)v12 + 24);
    uint64_t v15 = *((void *)v12 + 6);
    __int16 v16 = *((_WORD *)v12 + 28);
    long long v19 = *v12;
    *(void *)&long long v20 = v13;
    BYTE8(v20) = v14;
    *(_OWORD *)uint64_t v21 = v12[2];
    *(void *)&v21[16] = v15;
    *(_WORD *)&v21[24] = v16;
    a4(&v19);
    if (!v7)
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      v22[0] = v19;
      v22[1] = v20;
      v23[0] = *(_OWORD *)v21;
      *(_OWORD *)((char *)v23 + 10) = *(_OWORD *)&v21[10];
      swift_retain();
      sub_1B6358498(v17, (uint64_t)v22);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADDC48(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ScriptsHolder; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADDCC0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6ADDE00(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for TriggerScript, type metadata accessor for TriggerScript, (void (*)(uint64_t, char *, uint64_t))sub_1B6BF7D6C, type metadata accessor for TriggerScript) & 1;
}

uint64_t sub_1B6ADDD60(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6ADDE00(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for GraphScript, type metadata accessor for GraphScript, (void (*)(uint64_t, char *, uint64_t))sub_1B6BF7D9C, type metadata accessor for GraphScript) & 1;
}

uint64_t sub_1B6ADDE00(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void), uint64_t (*a9)(void), void (*a10)(uint64_t, char *, uint64_t), uint64_t (*a11)(void))
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v18 = a8(0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v22 = (char *)&v29 - v21;
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    for (uint64_t i = (void *)(v23 + 56); *(i - 3) != v20; i += 5)
    {
      if (!--v24) {
        return v24 & 1;
      }
    }
    uint64_t v30 = a10;
    uint64_t v31 = a11;
    sub_1B6AE9E00(*(void *)(a1 + 128) + *i + a2 * a3, (uint64_t)v22, a9);
    a4(v22);
    if (v11)
    {
      sub_1B62D4CFC((uint64_t)v22, v31);
    }
    else
    {
      uint64_t v26 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v27 = **(void **)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      swift_retain();
      v30(v26, v22, v27);
      swift_release();
      sub_1B62D4CFC((uint64_t)v22, v31);
      LOBYTE(v24) = 1;
    }
  }
  return v24 & 1;
}

uint64_t sub_1B6ADDFC8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6ADDE00(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript, (void (*)(uint64_t, char *, uint64_t))sub_1B6BF6078, type metadata accessor for ParticleUpdateScript) & 1;
}

uint64_t sub_1B6ADE068(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6ADDE00(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for ParticleInitScript, type metadata accessor for ParticleInitScript, (void (*)(uint64_t, char *, uint64_t))sub_1B6BF5098, type metadata accessor for ParticleInitScript) & 1;
}

uint64_t sub_1B6ADE108(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ForceField; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADE180(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFluidSolver2DSolver; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADE1F8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for GraphScriptingConfig; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADE270(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PropagateDirtiness; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADE2E8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Material; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v15 = *(void *)(v14 + 8);
    int v16 = *(_DWORD *)(v14 + 40);
    char v17 = *(unsigned char *)(v14 + 44);
    int v18 = *(_DWORD *)(v14 + 48);
    char v19 = *(unsigned char *)(v14 + 52);
    char v20 = *(unsigned char *)(v14 + 53);
    uint64_t v21 = *(void *)(v14 + 56);
    char v22 = *(unsigned char *)(v14 + 64);
    uint64_t v23 = *(void *)(v14 + 88);
    uint64_t v24 = *(void *)(v14 + 96);
    LOBYTE(v27) = *(unsigned char *)v14;
    *((void *)&v27 + 1) = v15;
    *(void *)uint64_t v28 = *(void *)(v14 + 16);
    *(_OWORD *)&v28[8] = *(_OWORD *)(v14 + 24);
    *(_DWORD *)&v28[24] = v16;
    v28[28] = v17;
    LODWORD(v29) = v18;
    BYTE4(v29) = v19;
    BYTE5(v29) = v20;
    *((void *)&v29 + 1) = v21;
    v30[0] = v22;
    *(_OWORD *)&v30[8] = *(_OWORD *)(v14 + 72);
    *(void *)&v30[24] = v23;
    uint64_t v31 = v24;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    a4(&v27);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v25 = sub_1B635AB28(a7) << 16 >> 48;
      v32[4] = *(_OWORD *)v30;
      v32[5] = *(_OWORD *)&v30[16];
      uint64_t v33 = v31;
      v32[0] = v27;
      v32[1] = *(_OWORD *)v28;
      _OWORD v32[2] = *(_OWORD *)&v28[16];
      void v32[3] = v29;
      swift_retain();
      sub_1B6BF79CC(v25, (uint64_t)v32);
      swift_release();
      sub_1B634EBF4((uint64_t)v32);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6ADE4EC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB9811A0, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8) & 1;
}

uint64_t sub_1B6ADE52C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8) & 1;
}

uint64_t sub_1B6ADE56C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97F780, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100) & 1;
}

uint64_t sub_1B6ADE5AC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v12 = *(void *)(a1 + 48);
  sub_1B636E204(0, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v14 = *(void *)(v12 + 16);
  if (!v14) {
    return 0;
  }
  for (uint64_t i = (void *)(v12 + 56); *(i - 3) != v13; i += 5)
  {
    if (!--v14) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADE67C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100) & 1;
}

uint64_t sub_1B6ADE6BC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v12 = *(void *)(a1 + 48);
  sub_1B636E204(0, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v14 = *(void *)(v12 + 16);
  if (!v14) {
    return 0;
  }
  for (uint64_t i = (void *)(v12 + 56); *(i - 3) != v13; i += 5)
  {
    if (!--v14) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADE78C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97F770, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10) & 1;
}

uint64_t sub_1B6ADE7CC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10) & 1;
}

uint64_t sub_1B6ADE80C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97F7A0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10) & 1;
}

uint64_t sub_1B6ADE84C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10) & 1;
}

uint64_t sub_1B6ADE88C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB981190, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8) & 1;
}

uint64_t sub_1B6ADE8CC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8) & 1;
}

uint64_t sub_1B6ADE90C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97F7B0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058) & 1;
}

uint64_t sub_1B6ADE94C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058) & 1;
}

uint64_t sub_1B6ADE98C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97F790, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00) & 1;
}

uint64_t sub_1B6ADE9CC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00) & 1;
}

uint64_t sub_1B6ADEA0C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE5AC(a1, a2, a3, a4, a5, &qword_1EB97F7C0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298) & 1;
}

uint64_t sub_1B6ADEA4C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  return sub_1B6ADE6BC(a1, a2, a3, a4, a5, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298) & 1;
}

uint64_t sub_1B6ADEA8C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ModelRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    long long v15 = *(_OWORD *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v15);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7) << 16 >> 48;
      long long v13 = v15;
      swift_retain();
      sub_1B6BF3A40(v12, v13, *((unint64_t *)&v13 + 1));
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADEBA0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Parent; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    unint64_t v15 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v15);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7) << 16 >> 48;
      unint64_t v13 = v15;
      swift_retain();
      sub_1B6BF77CC(v12, v13);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADECA8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale3; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADED20(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Skeleton; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADED98(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SkinnedMeshBinding; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADEE10(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PerspectiveCamera; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADEE88(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for OrthographicCamera; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADEF00(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MeshReferenceAsset; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v15 = v14[1];
    uint64_t v16 = v14[2];
    uint64_t v17 = v14[3];
    uint64_t v24 = *v14;
    uint64_t v25 = v15;
    uint64_t v26 = v16;
    uint64_t v27 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v24);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v19 = v24;
      uint64_t v20 = v25;
      uint64_t v21 = v26;
      uint64_t v22 = v27;
      swift_retain();
      sub_1B6BF4F5C(v18, v19, v20, v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6ADF064(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MetalScriptReflection; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF0DC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingSolver; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    unint64_t v13 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v15 = v13[1];
    long long v14 = v13[2];
    v34[0] = *v13;
    v34[1] = v15;
    _OWORD v34[2] = v14;
    long long v17 = v13[4];
    long long v16 = v13[5];
    long long v18 = v13[3];
    *(_DWORD *)((char *)v35 + 15) = *(_DWORD *)((char *)v13 + 95);
    v34[4] = v17;
    v35[0] = v16;
    void v34[3] = v18;
    long long v19 = v13[1];
    long long v28 = *v13;
    long long v29 = v19;
    long long v20 = v13[2];
    long long v21 = v13[3];
    long long v22 = v13[4];
    long long v23 = v13[5];
    *(_DWORD *)((char *)v33 + 15) = *(_DWORD *)((char *)v13 + 95);
    long long v32 = v22;
    v33[0] = v23;
    long long v30 = v20;
    long long v31 = v21;
    sub_1B62CA090((uint64_t)v34);
    a4(&v28);
    if (v7)
    {
      v26[4] = v32;
      v27[0] = v33[0];
      *(_DWORD *)((char *)v27 + 15) = *(_DWORD *)((char *)v33 + 15);
      v26[0] = v28;
      v26[1] = v29;
      void v26[2] = v30;
      v26[3] = v31;
      sub_1B62CA064((uint64_t)v26);
    }
    else
    {
      uint64_t v24 = sub_1B635AB28(a7) << 16 >> 48;
      v36[0] = v28;
      v36[1] = v29;
      *(_DWORD *)&v37[15] = *(_DWORD *)((char *)v33 + 15);
      v36[4] = v32;
      *(_OWORD *)uint64_t v37 = v33[0];
      _OWORD v36[2] = v30;
      void v36[3] = v31;
      swift_retain();
      sub_1B6C03438(v24, (uint64_t)v36);
      swift_release();
      sub_1B62CA064((uint64_t)v36);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADF27C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Opacity; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF2F4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for REMeshAssetPointCache; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    long long v14 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v15 = v14[1];
    uint64_t v16 = v14[2];
    uint64_t v22 = *v14;
    uint64_t v23 = v15;
    uint64_t v24 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v22);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v18 = v22;
      uint64_t v19 = v23;
      uint64_t v20 = v24;
      swift_retain();
      sub_1B6BF6664(v17, v18, v19, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6ADF44C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for LocalAABB; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF4C4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for NodeVisibilityController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF53C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for NodeTransformController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF5B4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ProjectionMatrix; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF62C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for LastFrameWorldTransform; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF6A4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleID; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF71C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scheduling; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v15 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v15);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v13 = v15;
      swift_retain();
      sub_1B6BF3668(v12, v13);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADF824(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraBloom; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF89C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAge; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF914(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CSVFileAsset; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADF98C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterShape; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v13 = v12[11];
    long long v31 = v12[10];
    long long v32 = v13;
    long long v33 = v12[12];
    char v34 = *((unsigned char *)v12 + 208);
    long long v14 = v12[7];
    long long v27 = v12[6];
    long long v28 = v14;
    long long v15 = v12[9];
    long long v29 = v12[8];
    long long v30 = v15;
    long long v16 = v12[3];
    long long v23 = v12[2];
    long long v24 = v16;
    long long v17 = v12[5];
    long long v25 = v12[4];
    long long v26 = v17;
    long long v18 = v12[1];
    long long v21 = *v12;
    long long v22 = v18;
    a4(&v21);
    if (!v7)
    {
      uint64_t v19 = sub_1B635AB28(a7) << 16 >> 48;
      v35[10] = v31;
      v35[11] = v32;
      v35[12] = v33;
      char v36 = v34;
      v35[6] = v27;
      v35[7] = v28;
      uint64_t v35[8] = v29;
      v35[9] = v30;
      _OWORD v35[2] = v23;
      v35[3] = v24;
      _OWORD v35[4] = v25;
      v35[5] = v26;
      v35[0] = v21;
      v35[1] = v22;
      swift_retain();
      sub_1B632A488(v19, (uint64_t)v35);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADFB14(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for LinearFactor; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADFB8C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleDrag; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    float v13 = *(float *)v12;
    LOBYTE(v12) = *(unsigned char *)(v12 + 4);
    float v16 = v13;
    char v17 = v12;
    a4(&v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C04950(v14 << 16 >> 48, v17, v16);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADFC74(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SmoothMotion; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADFCEC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned __int8 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for VideoCapture; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v13 = (char *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unsigned __int8 v14 = v13[1];
    char v15 = v13[2];
    uint64_t v17 = *((void *)v13 + 1);
    uint64_t v16 = *((void *)v13 + 2);
    unsigned __int8 v24 = *v13;
    unsigned __int8 v25 = v14;
    char v26 = v15;
    uint64_t v27 = v17;
    uint64_t v28 = v16;
    swift_bridgeObjectRetain();
    a4(&v24);
    if (v7)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v19 = v27;
      uint64_t v20 = v28;
      if (v26) {
        int v21 = 0x10000;
      }
      else {
        int v21 = 0;
      }
      unsigned int v22 = v24 | (v25 << 8) | v21;
      swift_retain();
      sub_1B6BF376C(v18, v22, v19, v20);
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6ADFE58(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AngularFactor; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADFED0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AudioAnalyzer; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADFF48(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AudioSpectrum; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6ADFFC0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6ADDE00(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for EmitterScript, type metadata accessor for EmitterScript, (void (*)(uint64_t, char *, uint64_t))sub_1B6BF3874, type metadata accessor for EmitterScript) & 1;
}

uint64_t sub_1B6AE0060(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MeshFileAsset; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    uint64_t v18 = *(void *)(v14 + 48);
    *(void *)&long long v22 = *(void *)v14;
    *((void *)&v22 + 1) = v15;
    *(void *)&long long v23 = v16;
    *((void *)&v23 + 1) = v17;
    long long v24 = *(_OWORD *)(v14 + 32);
    uint64_t v25 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = (id)v24;
    a4(&v22);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = sub_1B635AB28(a7) << 16 >> 48;
      long long v29 = v22;
      v26[0] = v22;
      v26[1] = v23;
      void v26[2] = v24;
      uint64_t v27 = v25;
      long long v30 = v23;
      long long v31 = v24;
      long long v33 = v23;
      long long v34 = v22;
      sub_1B674C934((uint64_t)&v31, (uint64_t)v32);
      sub_1B6AE9BA0((uint64_t)&v27, (uint64_t)v28, (unint64_t *)&qword_1E9DCE558, &qword_1EB980330, MEMORY[0x1E4FBB550]);
      swift_retain();
      sub_1B6BF38A0(v20, (uint64_t)v26);
      swift_release();
      sub_1B62C7BF4((uint64_t)&v34);
      sub_1B62C7BF4((uint64_t)&v33);
      sub_1B6811278(v32);
      sub_1B62D8C3C((uint64_t)v28);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE0268(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for NeighborCount; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE02E0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngle; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE0358(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleForce; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v13 = *v12;
    LOBYTE(v12) = v12[1].n128_u8[0];
    __n128 v16 = v13;
    unsigned __int8 v17 = v12;
    a4(&v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C049A4(v14 << 16 >> 48, v17, v16);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE0440(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleNoise; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (int *)(*(void *)(a1 + 128) + *i + a2 * a3);
    int v13 = *v12;
    long long v14 = *((_OWORD *)v12 + 1);
    int v15 = v12[8];
    char v16 = *((unsigned char *)v12 + 36);
    uint64_t v17 = *((void *)v12 + 5);
    LOBYTE(v12) = *((unsigned char *)v12 + 48);
    LODWORD(v20) = v13;
    long long v21 = v14;
    LODWORD(v22) = v15;
    BYTE4(v22) = v16;
    *((void *)&v22 + 1) = v17;
    char v23 = (char)v12;
    a4(&v20);
    if (!v7)
    {
      uint64_t v18 = sub_1B635AB28(a7);
      v24[0] = v20;
      v24[1] = v21;
      void v24[2] = v22;
      char v25 = v23;
      sub_1B6C049F4(v18 << 16 >> 48, (uint64_t)v24);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE055C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePivot; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE05D4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned __int8 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SpaceOverride; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    unsigned __int8 v15 = *(unsigned char *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v15);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7) << 16 >> 48;
      unsigned __int8 v13 = v15;
      swift_retain();
      sub_1B6BF3B68(v12, v13);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE06DC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureClient; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE0754(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AudioFileAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    unsigned __int8 v13 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unint64_t v14 = v13->n128_u64[1];
    unint64_t v15 = v13[1].n128_u64[0];
    unint64_t v16 = v13[1].n128_u64[1];
    v20.n128_u64[0] = v13->n128_u64[0];
    v20.n128_u64[1] = v14;
    v21.n128_u64[0] = v15;
    v21.n128_u64[1] = v16;
    __n128 v22 = v13[2];
    id v17 = (id)v22.n128_u64[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v20);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      v23[0] = v20;
      v23[1] = v21;
      _OWORD v23[2] = v22;
      void v23[3] = v20;
      void v23[4] = v21;
      __n128 v24 = v22;
      __n128 v26 = v21;
      __n128 v27 = v20;
      sub_1B674C934((uint64_t)&v24, (uint64_t)v25);
      swift_retain();
      sub_1B6BF3C68(v18, v23);
      swift_release();
      sub_1B62C7BF4((uint64_t)&v27);
      sub_1B62C7BF4((uint64_t)&v26);
      sub_1B6811278(v25);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE08F4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraLensBlur; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE096C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CurveComponent; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    LOBYTE(v14) = *(unsigned char *)(v14 + 24);
    uint64_t v24 = v15;
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    char v27 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v24);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v19 = v24;
      uint64_t v20 = v25;
      uint64_t v21 = v26;
      char v22 = v27;
      swift_retain();
      sub_1B6BF3DC8(v18, v19, v20, v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE0AF4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MovieFileAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v13 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    char v17 = *(unsigned char *)(v13 + 48);
    char v18 = *(unsigned char *)(v13 + 49);
    char v19 = *(unsigned char *)(v13 + 50);
    *(void *)&long long v24 = *(void *)v13;
    *((void *)&v24 + 1) = v14;
    *(void *)&long long v25 = v15;
    *((void *)&v25 + 1) = v16;
    *(_OWORD *)uint64_t v26 = *(_OWORD *)(v13 + 32);
    v26[16] = v17;
    v26[17] = v18;
    v26[18] = v19;
    id v20 = *(id *)v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v24);
    if (v7)
    {
      uint64_t v21 = *(void **)v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = sub_1B635AB28(a7) << 16 >> 48;
      v27[0] = v24;
      v27[1] = v25;
      v28[0] = *(_OWORD *)v26;
      *(_DWORD *)((char *)v28 + 15) = *(_DWORD *)&v26[15];
      swift_retain();
      sub_1B6BF3F18(v22, (uint64_t)v27);
      swift_release();
      sub_1B6AE9A50((uint64_t)v27);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE0C8C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleTarget; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE0D04(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for RenderSettings; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE0D7C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for RenderingOrder; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE0DF4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SceneFileAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v13 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    uint64_t v17 = *(void *)(v13 + 48);
    uint64_t v18 = *(void *)(v13 + 56);
    *(void *)&long long v23 = *(void *)v13;
    *((void *)&v23 + 1) = v14;
    *(void *)&long long v24 = v15;
    *((void *)&v24 + 1) = v16;
    long long v25 = *(_OWORD *)(v13 + 32);
    *(void *)&long long v26 = v17;
    *((void *)&v26 + 1) = v18;
    id v19 = (id)v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v23);
    if (v7)
    {
      id v20 = (void *)v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = sub_1B635AB28(a7) << 16 >> 48;
      v27[0] = v23;
      v27[1] = v24;
      _OWORD v27[2] = v25;
      v27[3] = v26;
      swift_retain();
      sub_1B6BF404C(v21, (uint64_t)v27);
      swift_release();
      sub_1B6AE9C78((uint64_t)v27);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE0F84(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SineMoveAction; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE0FFC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AngularVelocity; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE1074(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned __int8 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AudioController; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (unsigned __int8 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unsigned __int8 v13 = *v12;
    unsigned __int8 v14 = v12[1];
    LOBYTE(v12) = v12[2];
    unsigned __int8 v20 = v13;
    unsigned __int8 v21 = v14;
    char v22 = (char)v12;
    a4(&v20);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      if (v22) {
        int v16 = 0x10000;
      }
      else {
        int v16 = 0;
      }
      if (v21) {
        int v17 = 256;
      }
      else {
        int v17 = 0;
      }
      unsigned int v18 = v17 | v20 | v16;
      swift_retain();
      sub_1B6BF4180(v15, v18);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE11B8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for LightController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE1230(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleCollide; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unsigned __int32 v13 = v12[1].n128_u32[0];
    unsigned __int32 v14 = v12[1].n128_u32[1];
    __n128 v17 = *v12;
    unint64_t v18 = __PAIR64__(v14, v13);
    a4(&v17);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7);
      __n128 v19 = v17;
      unint64_t v20 = v18;
      sub_1B6C04A54(v15 << 16 >> 48, &v19);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE132C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleRespawn; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE13A4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnID; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v15 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v15);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v13 = v15;
      swift_retain();
      sub_1B6BF42B0(v12, v13);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE14AC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ShaderFileAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v13 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unint64_t v14 = v13->n128_u64[1];
    unint64_t v15 = v13[1].n128_u64[0];
    unint64_t v16 = v13[1].n128_u64[1];
    v20.n128_u64[0] = v13->n128_u64[0];
    v20.n128_u64[1] = v14;
    v21.n128_u64[0] = v15;
    v21.n128_u64[1] = v16;
    __n128 v22 = v13[2];
    id v17 = (id)v22.n128_u64[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v20);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      v23[0] = v20;
      v23[1] = v21;
      _OWORD v23[2] = v22;
      void v23[3] = v20;
      void v23[4] = v21;
      __n128 v24 = v22;
      __n128 v26 = v21;
      __n128 v27 = v20;
      sub_1B674C934((uint64_t)&v24, (uint64_t)v25);
      swift_retain();
      sub_1B6BF43B4(v18, v23);
      swift_release();
      sub_1B62C7BF4((uint64_t)&v27);
      sub_1B62C7BF4((uint64_t)&v26);
      sub_1B6811278(v25);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE164C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureFileData; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unint64_t v14 = v13[1];
    uint64_t v19 = *v13;
    unint64_t v20 = v14;
    sub_1B6751DC0(v19, v14);
    a4(&v19);
    if (v7)
    {
      sub_1B665D488(v19, v20);
    }
    else
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v16 = v19;
      unint64_t v17 = v20;
      swift_retain();
      sub_1B6BF4514(v15, v16, v17);
      swift_release();
      sub_1B665D488(v16, v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE1780(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CALayerFileAsset; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE17F8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE1870(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraVignetting; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE18E8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleCopyData; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE1960(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleEmission; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE19D8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleLifeInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    char v13 = *((unsigned char *)v12 + 8);
    uint64_t v16 = *v12;
    char v17 = v13;
    a4(&v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C04AB0(v14 << 16 >> 48, v17, *(float *)&v16, *((float *)&v16 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE1AC0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleLifetime; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE1B38(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleMassInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C04B08(v12 << 16 >> 48, *(float *)&v14, *((float *)&v14 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE1C10(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSizeInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 28);
    v16[0] = *(unsigned char *)v12;
    *(_OWORD *)&uint64_t v16[4] = *(_OWORD *)(v12 + 4);
    *(void *)&v16[20] = *(void *)(v12 + 20);
    *(_DWORD *)&v16[28] = v13;
    a4(v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7) << 16 >> 48;
      v17[0] = *(_OWORD *)v16;
      v17[1] = *(_OWORD *)&v16[16];
      swift_retain();
      sub_1B6BF462C(v14, (unsigned __int8 *)v17);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE1D38(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSubSpawn; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 12);
    char v15 = *(unsigned char *)(v12 + 13);
    char v16 = *(unsigned char *)(v12 + 14);
    char v17 = *(unsigned char *)(v12 + 15);
    int v18 = *(_DWORD *)(v12 + 16);
    char v19 = *(unsigned char *)(v12 + 20);
    *(void *)__n128 v22 = *(void *)v12;
    *(_DWORD *)&v22[8] = v13;
    v22[12] = v14;
    v22[13] = v15;
    v22[14] = v16;
    v22[15] = v17;
    *(_DWORD *)&v22[16] = v18;
    v22[20] = v19;
    a4(v22);
    if (!v7)
    {
      uint64_t v20 = sub_1B635AB28(a7) << 16 >> 48;
      v23[0] = *(_OWORD *)v22;
      *(void *)((char *)v23 + 13) = *(void *)&v22[13];
      swift_retain();
      sub_1B6BF4704(v20, (uint64_t)v23);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE1E88(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureFileAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    int v13 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unint64_t v14 = v13->n128_u64[1];
    unint64_t v15 = v13[1].n128_u64[0];
    unint64_t v16 = v13[1].n128_u64[1];
    v20.n128_u64[0] = v13->n128_u64[0];
    v20.n128_u64[1] = v14;
    v21.n128_u64[0] = v15;
    v21.n128_u64[1] = v16;
    __n128 v22 = v13[2];
    id v17 = (id)v22.n128_u64[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v20);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      v23[0] = v20;
      v23[1] = v21;
      _OWORD v23[2] = v22;
      void v23[3] = v20;
      void v23[4] = v21;
      __n128 v24 = v22;
      __n128 v26 = v21;
      __n128 v27 = v20;
      sub_1B674C934((uint64_t)&v24, (uint64_t)v25);
      swift_retain();
      sub_1B6BF4834(v18, v23);
      swift_release();
      sub_1B62C7BF4((uint64_t)&v27);
      sub_1B62C7BF4((uint64_t)&v26);
      sub_1B6811278(v25);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE2028(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WrapAroundCamera; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    char v13 = *((unsigned char *)v12 + 24);
    char v14 = *((unsigned char *)v12 + 25);
    uint64_t v15 = *(void *)((char *)v12 + 28);
    char v16 = *((unsigned char *)v12 + 36);
    long long v19 = *v12;
    *(void *)__n128 v20 = *((void *)v12 + 2);
    v20[8] = v13;
    v20[9] = v14;
    *(void *)&v20[12] = v15;
    v20[20] = v16;
    a4(&v19);
    if (!v7)
    {
      uint64_t v17 = sub_1B635AB28(a7);
      long long v21 = v19;
      v22[0] = *(_OWORD *)v20;
      *(void *)((char *)v22 + 13) = *(void *)&v20[13];
      sub_1B6C04B54(v17 << 16 >> 48, (uint64_t)&v21);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE213C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraToneMapping; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE21B4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngleInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C04BB0(v12 << 16 >> 48, *(float *)&v14, *((float *)&v14 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE228C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleColorInit; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = (char *)(*(void *)(a1 + 128) + *i + a2 * a3);
    char v15 = *v14;
    unsigned int v16 = *((_DWORD *)v14 + 1);
    unsigned int v17 = *((_DWORD *)v14 + 2);
    char v18 = v14[12];
    int v19 = *((_DWORD *)v14 + 4);
    char v20 = v14[20];
    long long v21 = *((_OWORD *)v14 + 2);
    uint64_t v22 = *((void *)v14 + 6);
    uint64_t v23 = *((void *)v14 + 7);
    LOBYTE(v14) = v14[64];
    LOBYTE(v26) = v15;
    *(void *)((char *)&v26 + 4) = __PAIR64__(v17, v16);
    BYTE12(v26) = v18;
    LODWORD(v27) = v19;
    BYTE4(v27) = v20;
    long long v28 = v21;
    *(void *)&long long v29 = v22;
    *((void *)&v29 + 1) = v23;
    char v30 = (char)v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v26);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = sub_1B635AB28(a7) << 16 >> 48;
      char v32 = v30;
      v31[2] = v28;
      void v31[3] = v29;
      v31[0] = v26;
      v31[1] = v27;
      swift_retain();
      sub_1B6C04BFC(v24, (uint64_t)v31);
      swift_release();
      sub_1B6AE9A98((uint64_t)v31);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE2404(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleMetalness; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE247C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePivotInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v15 = *v12;
    unint64_t v16 = v12[1].n128_u64[0];
    a4(&v15);
    if (!v7)
    {
      uint64_t v13 = sub_1B635AB28(a7);
      __n128 v17 = v15;
      unint64_t v18 = v16;
      sub_1B6C04CA8(v13 << 16 >> 48, &v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE2570(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleRoughness; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE25E8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointCacheEmitter; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    char v13 = *((unsigned char *)v12 + 24);
    char v14 = *((unsigned char *)v12 + 25);
    char v15 = *((unsigned char *)v12 + 26);
    char v16 = *((unsigned char *)v12 + 27);
    char v17 = *((unsigned char *)v12 + 28);
    char v18 = *((unsigned char *)v12 + 29);
    int v19 = *((_DWORD *)v12 + 8);
    long long v22 = *v12;
    *(void *)&long long v23 = *((void *)v12 + 2);
    BYTE8(v23) = v13;
    BYTE9(v23) = v14;
    BYTE10(v23) = v15;
    BYTE11(v23) = v16;
    BYTE12(v23) = v17;
    BYTE13(v23) = v18;
    int v24 = v19;
    a4(&v22);
    if (!v7)
    {
      uint64_t v20 = sub_1B635AB28(a7) << 16 >> 48;
      v25[0] = v22;
      v25[1] = v23;
      int v26 = v24;
      swift_retain();
      sub_1B6BF4994(v20, (uint64_t)v25);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE2740(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointCacheSpawner; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    unsigned __int8 v13 = *(unsigned char *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 9);
    char v15 = *(unsigned char *)(v12 + 10);
    char v16 = *(unsigned char *)(v12 + 11);
    uint64_t v23 = *(void *)v12;
    unsigned __int8 v24 = v13;
    char v25 = v14;
    char v26 = v15;
    char v27 = v16;
    a4(&v23);
    if (!v7)
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      if (v25) {
        int v18 = 256;
      }
      else {
        int v18 = 0;
      }
      int v19 = v18 | v24;
      if (v26) {
        int v20 = 0x10000;
      }
      else {
        int v20 = 0;
      }
      if (v27) {
        int v21 = 0x1000000;
      }
      else {
        int v21 = 0;
      }
      sub_1B6C04D04(v17, v23, v19 | v20 | v21);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE287C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__int16 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadPolicy; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__int16 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __int16 v13 = *v12;
    unsigned __int8 v14 = *((unsigned char *)v12 + 2);
    LOBYTE(v12) = *((unsigned char *)v12 + 3);
    __int16 v19 = v13;
    unsigned __int8 v20 = v14;
    char v21 = (char)v12;
    a4(&v19);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      if (v21) {
        int v16 = 0x1000000;
      }
      else {
        int v16 = 0;
      }
      unsigned int v17 = v16 | (v20 << 16) | (HIBYTE(v19) << 8) | v19;
      swift_retain();
      sub_1B6BF4AD0(v15, v17);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE29BC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureNamedAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    __int16 v13 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v14 = v13[1];
    uint64_t v19 = *v13;
    uint64_t v20 = v14;
    swift_bridgeObjectRetain();
    a4(&v19);
    if (v7)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v16 = v19;
      uint64_t v17 = v20;
      swift_retain();
      sub_1B6BF4C08(v15, v16, v17);
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE2AEC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraColorGrading; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE2B64(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraDepthOfField; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE2BDC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ColorRampComponent; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    LOBYTE(v14) = *(unsigned char *)(v14 + 16);
    uint64_t v22 = v15;
    uint64_t v23 = v16;
    char v24 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v22);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v18 = v22;
      uint64_t v19 = v23;
      char v20 = v24;
      swift_retain();
      sub_1B6BF4D10(v17, v18, v19, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE2D34(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for DistanceConstraint; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v14 = *(float *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C04D78(v12 << 16 >> 48, v14);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE2E0C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterDescription; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    uint64_t v18 = *(void *)(v14 + 32);
    char v19 = *(unsigned char *)(v14 + 40);
    char v20 = *(unsigned char *)(v14 + 41);
    char v21 = *(unsigned char *)(v14 + 42);
    char v22 = *(unsigned char *)(v14 + 43);
    char v23 = *(unsigned char *)(v14 + 44);
    char v24 = *(unsigned char *)(v14 + 45);
    char v25 = *(unsigned char *)(v14 + 56);
    char v26 = *(unsigned char *)(v14 + 57);
    char v27 = *(unsigned char *)(v14 + 58);
    uint64_t v28 = *(void *)(v14 + 64);
    char v29 = *(unsigned char *)(v14 + 72);
    __int16 v30 = *(_WORD *)(v14 + 74);
    char v31 = *(unsigned char *)(v14 + 76);
    char v32 = *(unsigned char *)(v14 + 77);
    int v33 = *(_DWORD *)(v14 + 80);
    *(void *)&long long v36 = *(void *)v14;
    *((void *)&v36 + 1) = v15;
    *(void *)&long long v37 = v16;
    *((void *)&v37 + 1) = v17;
    *(void *)&long long v38 = v18;
    BYTE8(v38) = v19;
    BYTE9(v38) = v20;
    BYTE10(v38) = v21;
    BYTE11(v38) = v22;
    BYTE12(v38) = v23;
    BYTE13(v38) = v24;
    *(void *)&long long v39 = *(void *)(v14 + 48);
    BYTE8(v39) = v25;
    BYTE9(v39) = v26;
    BYTE10(v39) = v27;
    *(void *)&long long v40 = v28;
    BYTE8(v40) = v29;
    WORD5(v40) = v30;
    BYTE12(v40) = v31;
    BYTE13(v40) = v32;
    int v41 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v36);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = sub_1B635AB28(a7) << 16 >> 48;
      v42[3] = v39;
      v42[4] = v40;
      int v43 = v41;
      v42[0] = v36;
      v42[1] = v37;
      void v42[2] = v38;
      swift_retain();
      sub_1B6BF4E08(v34, (uint64_t)v42);
      swift_release();
      sub_1B6AE9994((uint64_t)v42);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE3034(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MaterialController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE30AC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleBurstSpawn; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    long long v14 = *(_OWORD *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C04DC0(v12 << 16 >> 48, v14, *((uint64_t *)&v14 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE3184(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleForceField; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    int v13 = *((_DWORD *)v12 + 10);
    long long v14 = v12[1];
    long long v17 = *v12;
    *(_OWORD *)uint64_t v18 = v14;
    *(void *)&v18[16] = *((void *)v12 + 4);
    *(_DWORD *)&v18[24] = v13;
    a4(&v17);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7);
      long long v19 = v17;
      v20[0] = *(_OWORD *)v18;
      *(_OWORD *)((char *)v20 + 12) = *(_OWORD *)&v18[12];
      sub_1B6C04E0C(v15 << 16 >> 48, (uint64_t)&v19);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE3280(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnDelay; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v15 = *(float *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v15);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7) << 16 >> 48;
      float v13 = v15;
      swift_retain();
      sub_1B6BF50C4(v12, v13);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE3388(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PrimitiveGenerator; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v13 = (_OWORD *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v15 = v13[1];
    long long v14 = v13[2];
    v41[0] = *v13;
    v41[1] = v15;
    _OWORD v41[2] = v14;
    long long v16 = v13[6];
    long long v18 = v13[3];
    long long v17 = v13[4];
    v41[5] = v13[5];
    v41[6] = v16;
    v41[3] = v18;
    v41[4] = v17;
    long long v20 = v13[8];
    long long v19 = v13[9];
    long long v21 = v13[7];
    *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v13 + 153);
    v41[8] = v20;
    v42[0] = v19;
    v41[7] = v21;
    long long v22 = v13[9];
    long long v39 = v13[8];
    v40[0] = v22;
    *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v13 + 153);
    long long v23 = v13[5];
    long long v35 = v13[4];
    long long v36 = v23;
    long long v24 = v13[7];
    long long v37 = v13[6];
    long long v38 = v24;
    long long v25 = v13[1];
    long long v31 = *v13;
    long long v32 = v25;
    long long v26 = v13[3];
    long long v33 = v13[2];
    long long v34 = v26;
    sub_1B6AAC6B4((uint64_t)v41);
    a4(&v31);
    if (v7)
    {
      v29[8] = v39;
      v30[0] = v40[0];
      *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)v40 + 9);
      v29[4] = v35;
      v29[5] = v36;
      v29[6] = v37;
      v29[7] = v38;
      v29[0] = v31;
      v29[1] = v32;
      _OWORD v29[2] = v33;
      v29[3] = v34;
      sub_1B6AAC67C((uint64_t)v29);
    }
    else
    {
      uint64_t v27 = sub_1B635AB28(a7) << 16 >> 48;
      v43[8] = v39;
      v44[0] = v40[0];
      *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v40 + 9);
      v43[4] = v35;
      v43[5] = v36;
      v43[6] = v37;
      v43[7] = v38;
      v43[0] = v31;
      v43[1] = v32;
      _OWORD v43[2] = v33;
      v43[3] = v34;
      swift_retain();
      sub_1B6BF51CC(v27, (uint64_t)v43);
      swift_release();
      sub_1B6AAC67C((uint64_t)v43);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE3584(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TexturePlaceholder; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v13 = (unint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v14 = v13[1];
    unint64_t v19 = *v13;
    uint64_t v20 = v14;
    swift_unknownObjectRetain();
    a4(&v19);
    if (v7)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      unint64_t v16 = v19;
      uint64_t v17 = v20;
      swift_retain();
      sub_1B6BF5348(v15, v16, v17);
      swift_release();
      swift_unknownObjectRelease();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE36BC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureRequireMask; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE3734(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureShaderAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v13 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v15 = v13[1];
    long long v14 = v13[2];
    v42[0] = *v13;
    v42[1] = v15;
    _OWORD v42[2] = v14;
    long long v16 = v13[6];
    long long v18 = v13[3];
    long long v17 = v13[4];
    _OWORD v42[5] = v13[5];
    v42[6] = v16;
    v42[3] = v18;
    v42[4] = v17;
    long long v20 = v13[8];
    long long v19 = v13[9];
    long long v21 = v13[7];
    uint64_t v43 = *((void *)v13 + 20);
    v42[8] = v20;
    v42[9] = v19;
    v42[7] = v21;
    long long v22 = v13[9];
    long long v39 = v13[8];
    long long v40 = v22;
    uint64_t v41 = *((void *)v13 + 20);
    long long v23 = v13[5];
    long long v35 = v13[4];
    long long v36 = v23;
    long long v24 = v13[7];
    long long v37 = v13[6];
    long long v38 = v24;
    long long v25 = v13[1];
    long long v31 = *v13;
    long long v32 = v25;
    long long v26 = v13[3];
    long long v33 = v13[2];
    long long v34 = v26;
    sub_1B6AE9CC8((uint64_t)v42);
    a4(&v31);
    if (v7)
    {
      v29[8] = v39;
      _OWORD v29[9] = v40;
      uint64_t v30 = v41;
      v29[4] = v35;
      v29[5] = v36;
      v29[6] = v37;
      v29[7] = v38;
      v29[0] = v31;
      v29[1] = v32;
      _OWORD v29[2] = v33;
      v29[3] = v34;
      sub_1B6AE9D64((uint64_t)v29);
    }
    else
    {
      uint64_t v27 = sub_1B635AB28(a7) << 16 >> 48;
      v44[8] = v39;
      v44[9] = v40;
      uint64_t v45 = v41;
      uint64_t v44[4] = v35;
      v44[5] = v36;
      v44[6] = v37;
      v44[7] = v38;
      v44[0] = v31;
      v44[1] = v32;
      _OWORD v44[2] = v33;
      v44[3] = v34;
      swift_retain();
      sub_1B6BF5460(v27, (uint64_t)v44);
      swift_release();
      sub_1B6AE9D64((uint64_t)v44);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE3920(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldFogController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE3998(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldIBLController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE3A10(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for AnimationTimeSource; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE3A88(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6ADDE00(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for MetalFunctionScript, type metadata accessor for MetalFunctionScript, (void (*)(uint64_t, char *, uint64_t))sub_1B6BF5624, type metadata accessor for MetalFunctionScript) & 1;
}

uint64_t sub_1B6AE3B28(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleBoxCollider; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE3BA0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleBoxRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 12);
    int v15 = *(_DWORD *)(v12 + 16);
    char v16 = *(unsigned char *)(v12 + 20);
    int v17 = *(_DWORD *)(v12 + 24);
    char v18 = *(unsigned char *)(v12 + 28);
    char v19 = *(unsigned char *)(v12 + 29);
    char v20 = *(unsigned char *)(v12 + 30);
    char v21 = *(unsigned char *)(v12 + 31);
    int v22 = *(_DWORD *)(v12 + 32);
    *(void *)&long long v25 = *(void *)v12;
    DWORD2(v25) = v13;
    BYTE12(v25) = v14;
    LODWORD(v26) = v15;
    BYTE4(v26) = v16;
    DWORD2(v26) = v17;
    BYTE12(v26) = v18;
    BYTE13(v26) = v19;
    BYTE14(v26) = v20;
    HIBYTE(v26) = v21;
    int v27 = v22;
    a4(&v25);
    if (!v7)
    {
      uint64_t v23 = sub_1B635AB28(a7) << 16 >> 48;
      v28[0] = v25;
      v28[1] = v26;
      int v29 = v27;
      swift_retain();
      sub_1B6BF5650(v23, (uint64_t)v28);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE3D0C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleGrowEmitter; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    long long v13 = *(_OWORD *)(v12 + 16);
    int v14 = *(_DWORD *)(v12 + 40);
    uint64_t v15 = *(void *)(v12 + 48);
    int v16 = *(_DWORD *)(v12 + 56);
    LOBYTE(v19) = *(unsigned char *)v12;
    long long v20 = v13;
    *(void *)char v21 = *(void *)(v12 + 32);
    *(_DWORD *)&char v21[8] = v14;
    *(void *)&v21[16] = v15;
    *(_DWORD *)&v21[24] = v16;
    a4(&v19);
    if (!v7)
    {
      uint64_t v17 = sub_1B635AB28(a7);
      v22[0] = v19;
      v22[1] = v20;
      v23[0] = *(_OWORD *)v21;
      *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)&v21[12];
      sub_1B6C04E68(v17 << 16 >> 48, (uint64_t)v22);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE3E28(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSDFCollider; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE3EA0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointCacheFileAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    long long v13 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unint64_t v14 = v13->n128_u64[1];
    unint64_t v15 = v13[1].n128_u64[0];
    unint64_t v16 = v13[1].n128_u64[1];
    v20.n128_u64[0] = v13->n128_u64[0];
    v20.n128_u64[1] = v14;
    v21.n128_u64[0] = v15;
    v21.n128_u64[1] = v16;
    __n128 v22 = v13[2];
    id v17 = (id)v22.n128_u64[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v20);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      v23[0] = v20;
      v23[1] = v21;
      _OWORD v23[2] = v22;
      void v23[3] = v20;
      void v23[4] = v21;
      __n128 v24 = v22;
      __n128 v26 = v21;
      __n128 v27 = v20;
      sub_1B674C934((uint64_t)&v24, (uint64_t)v25);
      swift_retain();
      sub_1B6BF5780(v18, v23);
      swift_release();
      sub_1B62C7BF4((uint64_t)&v27);
      sub_1B62C7BF4((uint64_t)&v26);
      sub_1B6811278(v25);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4040(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointCacheFromModel; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE40B8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointCacheGenerator; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v13 = *(void *)(v12 + 8);
    unsigned __int8 v14 = *(unsigned char *)(v12 + 16);
    unsigned __int16 v15 = *(_WORD *)(v12 + 18);
    uint64_t v16 = *(void *)(v12 + 24);
    unint64_t v23 = *(void *)v12;
    uint64_t v24 = v13;
    unsigned __int8 v25 = v14;
    unsigned __int16 v26 = v15;
    uint64_t v27 = v16;
    a4(&v23);
    if (!v7)
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      unint64_t v18 = v23;
      uint64_t v19 = v24;
      uint64_t v20 = v27;
      unsigned int v21 = v25 | (v26 << 16);
      swift_retain();
      sub_1B6BF58E0(v17, v18, v19, v21, v20);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4210(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ProjectorParameters; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 12);
    int v15 = *(_DWORD *)(v12 + 24);
    *(void *)&long long v18 = *(void *)v12;
    DWORD2(v18) = v13;
    BYTE12(v18) = v14;
    *(void *)uint64_t v19 = *(void *)(v12 + 16);
    *(_DWORD *)&v19[8] = v15;
    *(void *)&v19[12] = *(void *)(v12 + 28);
    a4(&v18);
    if (!v7)
    {
      uint64_t v16 = sub_1B635AB28(a7);
      v20[0] = v18;
      v20[1] = *(_OWORD *)v19;
      int v21 = *(_DWORD *)&v19[16];
      sub_1B6C04EC8(v16 << 16 >> 48, (uint64_t)v20);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4328(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SDFTextureGenerator; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    float v13 = *(float *)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
    unint64_t v20 = *(void *)v12;
    float v21 = v13;
    uint64_t v22 = v14;
    a4(&v20);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      unint64_t v16 = v20;
      float v17 = v21;
      uint64_t v18 = v22;
      swift_retain();
      sub_1B6BF5A44(v15, v16, v18, v17);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4464(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleLineRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    char v13 = *(unsigned char *)(v12 + 4);
    int v14 = *(_DWORD *)(v12 + 8);
    char v15 = *(unsigned char *)(v12 + 12);
    int v16 = *(_DWORD *)(v12 + 16);
    char v17 = *(unsigned char *)(v12 + 20);
    char v18 = *(unsigned char *)(v12 + 21);
    char v19 = *(unsigned char *)(v12 + 32);
    char v20 = *(unsigned char *)(v12 + 33);
    LODWORD(v23) = *(_DWORD *)v12;
    BYTE4(v23) = v13;
    DWORD2(v23) = v14;
    BYTE12(v23) = v15;
    *(_DWORD *)uint64_t v24 = v16;
    v24[4] = v17;
    v24[5] = v18;
    *(void *)&v24[8] = *(void *)(v12 + 24);
    v24[16] = v19;
    v24[17] = v20;
    *(void *)&v24[20] = *(void *)(v12 + 36);
    a4(&v23);
    if (!v7)
    {
      uint64_t v21 = sub_1B635AB28(a7) << 16 >> 48;
      long long v25 = v23;
      v26[0] = *(_OWORD *)v24;
      *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)&v24[12];
      swift_retain();
      sub_1B6BF5B80(v21, &v25);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE45D0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleMeshCollider; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE4648(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(int32x4_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleMeshRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    char v13 = *(unsigned char *)(v12 + 16);
    int32x4_t v16 = *(int32x4_t *)v12;
    v17[0] = v13;
    *(_OWORD *)&v17[8] = *(_OWORD *)(v12 + 24);
    a4(&v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7) << 16 >> 48;
      v18[0] = v16;
      v18[1] = *(int32x4_t *)v17;
      uint64_t v19 = *(void *)&v17[16];
      swift_retain();
      sub_1B6BF5C54(v14, v18);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4770(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleQuadRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v13 = v12[7];
    long long v25 = v12[6];
    v26[0] = v13;
    *(_OWORD *)((char *)v26 + 11) = *(long long *)((char *)v12 + 123);
    long long v14 = v12[3];
    long long v21 = v12[2];
    long long v22 = v14;
    long long v15 = v12[5];
    long long v23 = v12[4];
    long long v24 = v15;
    long long v16 = v12[1];
    long long v19 = *v12;
    long long v20 = v16;
    a4(&v19);
    if (!v7)
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      v27[6] = v25;
      v28[0] = v26[0];
      *(_OWORD *)((char *)v28 + 11) = *(_OWORD *)((char *)v26 + 11);
      _OWORD v27[2] = v21;
      v27[3] = v22;
      _OWORD v27[4] = v23;
      v27[5] = v24;
      v27[0] = v19;
      v27[1] = v20;
      swift_retain();
      sub_1B6BF5D84(v17, v27);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE48CC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleRibbonTrails; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE4944(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSizeOverLife; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v12 = (char *)(*(void *)(a1 + 128) + *i + a2 * a3);
    char v13 = *v12;
    int v14 = *((_DWORD *)v12 + 1);
    char v15 = v12[8];
    uint64_t v16 = *((void *)v12 + 2);
    uint64_t v17 = *((void *)v12 + 3);
    uint64_t v18 = *((void *)v12 + 4);
    char v19 = v12[40];
    uint64_t v20 = *((void *)v12 + 6);
    uint64_t v21 = *((void *)v12 + 7);
    uint64_t v22 = *((void *)v12 + 8);
    char v23 = v12[72];
    uint64_t v24 = *((void *)v12 + 10);
    uint64_t v25 = *((void *)v12 + 11);
    uint64_t v26 = *((void *)v12 + 12);
    LOBYTE(v12) = v12[104];
    LOBYTE(v30) = v13;
    DWORD1(v30) = v14;
    BYTE8(v30) = v15;
    *(void *)&long long v31 = v16;
    *((void *)&v31 + 1) = v17;
    *(void *)&long long v32 = v18;
    BYTE8(v32) = v19;
    *(void *)&long long v33 = v20;
    *((void *)&v33 + 1) = v21;
    *(void *)&long long v34 = v22;
    BYTE8(v34) = v23;
    *(void *)long long v35 = v24;
    *(void *)&uint64_t v35[8] = v25;
    *(void *)&v35[16] = v26;
    v35[24] = (_BYTE)v12;
    long long v38 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(&v30);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = sub_1B635AB28(a7) << 16 >> 48;
      v36[4] = v34;
      v37[0] = *(_OWORD *)v35;
      *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)&v35[9];
      v36[0] = v30;
      v36[1] = v31;
      _OWORD v36[2] = v32;
      void v36[3] = v33;
      swift_retain();
      sub_1B6BF5EE4(v27, v36);
      swift_release();
      sub_1B6AE9B00((uint64_t)v36);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE4B88(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleTextureFrame; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE4C00(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleVelocityInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unsigned __int8 v13 = v12[1].n128_u8[0];
    unsigned __int32 v14 = v12[1].n128_u32[1];
    __n128 v17 = *v12;
    LOBYTE(v18) = v13;
    HIDWORD(v18) = v14;
    a4(&v17);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7);
      __n128 v19 = v17;
      uint64_t v20 = v18;
      sub_1B6C04F24(v15 << 16 >> 48, &v19);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4CFC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureRequireMipmap; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v13 = *(void *)v12;
    LOBYTE(v12) = *(unsigned char *)(v12 + 8);
    uint64_t v18 = v13;
    char v19 = v12;
    a4(&v18);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v15 = v18;
      char v16 = v19;
      swift_retain();
      sub_1B6BF61FC(v14, v15, v16);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4E20(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ForceFieldsController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE4E98(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for OrientationConstraint; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    float v13 = *(float *)(v12 + 4);
    v16[0] = *(unsigned char *)v12;
    float v17 = v13;
    a4(v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C04F80(v14 << 16 >> 48, v16[0], v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE4F80(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAOBoxRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C04FD4(v12 << 16 >> 48, *(float *)&v14, *((float *)&v14 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE5058(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngleVelocity; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE50D0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleColorOverLife; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v15 = *(_DWORD *)(v14 + 4);
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    char v18 = *(unsigned char *)(v14 + 24);
    char v19 = *(unsigned char *)(v14 + 25);
    LOBYTE(v22) = *(unsigned char *)v14;
    DWORD1(v22) = v15;
    *((void *)&v22 + 1) = v16;
    *(void *)char v23 = v17;
    v23[8] = v18;
    v23[9] = v19;
    *(void *)&v23[12] = *(void *)(v14 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v22);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = sub_1B635AB28(a7) << 16 >> 48;
      v24[0] = v22;
      v24[1] = *(_OWORD *)v23;
      int v25 = *(_DWORD *)&v23[16];
      swift_retain();
      sub_1B6BF631C(v20, (uint64_t)v24);
      swift_release();
      sub_1B6AE9ACC((uint64_t)v24);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE5244(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleDecalRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C05020(v12 << 16 >> 48, v14);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE531C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePlaneCollider; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE5394(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePointRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unsigned __int32 v13 = v12->n128_u32[2];
    unsigned __int8 v14 = v12->n128_u8[12];
    unsigned __int32 v15 = v12[1].n128_u32[0];
    unsigned __int8 v16 = v12[1].n128_u8[4];
    unsigned __int8 v17 = v12[1].n128_u8[5];
    unsigned __int8 v18 = v12[1].n128_u8[6];
    unsigned __int32 v19 = v12[1].n128_u32[2];
    unsigned __int8 v20 = v12[1].n128_u8[12];
    unsigned __int8 v21 = v12[1].n128_u8[13];
    v24.n128_u64[0] = v12->n128_u64[0];
    v24.n128_u32[2] = v13;
    v24.n128_u8[12] = v14;
    v25.n128_u32[0] = v15;
    v25.n128_u8[4] = v16;
    v25.n128_u8[5] = v17;
    v25.n128_u8[6] = v18;
    v25.n128_u32[2] = v19;
    v25.n128_u8[12] = v20;
    v25.n128_u8[13] = v21;
    __n128 v26 = v12[2];
    a4(&v24);
    if (!v7)
    {
      uint64_t v22 = sub_1B635AB28(a7) << 16 >> 48;
      v27[0] = v24;
      v27[1] = v25;
      _OWORD v27[2] = v26;
      swift_retain();
      sub_1B6BF642C(v22, v27);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE54FC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnDuration; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v15 = *(float *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v15);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7) << 16 >> 48;
      float v13 = v15;
      swift_retain();
      sub_1B6BF655C(v12, v13);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE5604(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleVariableSpawn; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v15 = *v12;
    unint64_t v16 = v12[1].n128_u64[0];
    a4(&v15);
    if (!v7)
    {
      uint64_t v13 = sub_1B635AB28(a7);
      __n128 v17 = v15;
      unint64_t v18 = v16;
      sub_1B6C05068(v13 << 16 >> 48, &v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE56F8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PhysicsBodyController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE5770(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SceneKitAssetInstance; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    char v13 = *(unsigned char *)(v12 + 8);
    unint64_t v18 = *(void *)v12;
    char v19 = v13;
    a4(&v18);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7) << 16 >> 48;
      unint64_t v15 = v18;
      char v16 = v19;
      swift_retain();
      sub_1B6BF6794(v14, v15, v16);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE5894(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(void **), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureArrayFileAsset; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    char v16 = *(void **)(*(void *)(a1 + 128) + *i + a2 * a3);
    swift_bridgeObjectRetain();
    a4(&v16);
    if (v7)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v14 = v16;
      swift_retain();
      sub_1B6BF68C0(v13, v14);
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE59B4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngleEvolution; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v13 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    LODWORD(v19) = *(_DWORD *)v13;
    *((void *)&v19 + 1) = v14;
    *(void *)&long long v20 = v15;
    *((void *)&v20 + 1) = v16;
    char v21 = *(unsigned char *)(v13 + 32);
    sub_1B6761BE8(v14);
    a4(&v19);
    if (v7)
    {
      sub_1B6761C48(*((uint64_t *)&v19 + 1));
    }
    else
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      char v23 = v21;
      v22[0] = v19;
      v22[1] = v20;
      swift_retain();
      sub_1B6C050C4(v17, (uint64_t)v22);
      swift_release();
      sub_1B6AE9C44((uint64_t)v22);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE5AF8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleRibbonRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v13 = v12[5];
    long long v22 = v12[4];
    v23[0] = v13;
    *(_OWORD *)((char *)v23 + 9) = *(long long *)((char *)v12 + 89);
    long long v14 = v12[1];
    long long v18 = *v12;
    long long v19 = v14;
    long long v15 = v12[3];
    long long v20 = v12[2];
    long long v21 = v15;
    a4(&v18);
    if (!v7)
    {
      uint64_t v16 = sub_1B635AB28(a7) << 16 >> 48;
      v24[4] = v22;
      v25[0] = v23[0];
      *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v23 + 9);
      v24[0] = v18;
      v24[1] = v19;
      _OWORD v24[2] = v20;
      _OWORD v24[3] = v21;
      swift_retain();
      sub_1B6BF69B4(v16, v24);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE5C40(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSphereCollider; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE5CB8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSphereRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 12);
    int v15 = *(_DWORD *)(v12 + 16);
    char v16 = *(unsigned char *)(v12 + 20);
    int v17 = *(_DWORD *)(v12 + 24);
    char v18 = *(unsigned char *)(v12 + 28);
    char v19 = *(unsigned char *)(v12 + 29);
    char v20 = *(unsigned char *)(v12 + 30);
    char v21 = *(unsigned char *)(v12 + 31);
    int v22 = *(_DWORD *)(v12 + 32);
    *(void *)&long long v25 = *(void *)v12;
    DWORD2(v25) = v13;
    BYTE12(v25) = v14;
    LODWORD(v26) = v15;
    BYTE4(v26) = v16;
    DWORD2(v26) = v17;
    BYTE12(v26) = v18;
    BYTE13(v26) = v19;
    BYTE14(v26) = v20;
    HIBYTE(v26) = v21;
    int v27 = v22;
    a4(&v25);
    if (!v7)
    {
      uint64_t v23 = sub_1B635AB28(a7) << 16 >> 48;
      v28[0] = v25;
      v28[1] = v26;
      int v29 = v27;
      swift_retain();
      sub_1B6BF6B04(v23, (uint64_t)v28);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE5E24(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldPhysicsController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE5E9C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for OrientationOverVelocity; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    float v13 = *(float *)v12;
    LOBYTE(v12) = *(unsigned char *)(v12 + 4);
    float v16 = v13;
    char v17 = v12;
    a4(&v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C0519C(v14 << 16 >> 48, v17, v16);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE5F84(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleContinuousSpawn; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    float v14 = *(float *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C051F0(v12 << 16 >> 48, v14);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE605C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleOpacityOverLife; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    LOBYTE(v14) = *(unsigned char *)(v14 + 24);
    uint64_t v24 = v15;
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    char v27 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v24);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v19 = v24;
      uint64_t v20 = v25;
      uint64_t v21 = v26;
      char v22 = v27;
      swift_retain();
      sub_1B6C05238(v18, v19, v20, v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE61C4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleOrientationInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v15 = *v12;
    unint64_t v16 = v12[1].n128_u64[0];
    a4(&v15);
    if (!v7)
    {
      uint64_t v13 = sub_1B635AB28(a7);
      __n128 v17 = v15;
      unint64_t v18 = v16;
      sub_1B6C05304(v13 << 16 >> 48, &v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE62B8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSizeOverTexture; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    __int16 v13 = *(_WORD *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 12);
    int v15 = *(_DWORD *)(v12 + 16);
    char v16 = *(unsigned char *)(v12 + 20);
    uint64_t v17 = *(void *)(v12 + 56);
    int v18 = *(_DWORD *)(v12 + 64);
    *(void *)&long long v22 = *(void *)v12;
    WORD4(v22) = v13;
    BYTE12(v22) = v14;
    *(_DWORD *)uint64_t v23 = v15;
    void v23[4] = v16;
    long long v19 = *(_OWORD *)(v12 + 40);
    *(_OWORD *)&v23[8] = *(_OWORD *)(v12 + 24);
    *(_OWORD *)&v23[24] = v19;
    *(void *)&v23[40] = v17;
    int v24 = v18;
    a4(&v22);
    if (!v7)
    {
      uint64_t v20 = sub_1B635AB28(a7) << 16 >> 48;
      _OWORD v25[2] = *(_OWORD *)&v23[16];
      v25[3] = *(_OWORD *)&v23[32];
      int v26 = v24;
      v25[0] = v22;
      v25[1] = *(_OWORD *)v23;
      swift_retain();
      sub_1B6BF6C34(v20, (uint64_t)v25);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE641C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSurfaceRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v15 = *v12;
    unint64_t v16 = v12[1].n128_u64[0];
    a4(&v15);
    if (!v7)
    {
      uint64_t v13 = sub_1B635AB28(a7);
      __n128 v17 = v15;
      unint64_t v18 = v16;
      sub_1B6C05360(v13 << 16 >> 48, &v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6510(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureRequireSizeLimit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    char v13 = *((unsigned char *)v12 + 16);
    long long v18 = *v12;
    char v19 = v13;
    a4(&v18);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7) << 16 >> 48;
      long long v15 = v18;
      char v16 = v19;
      swift_retain();
      sub_1B6BF6D28(v14, v15, *((uint64_t *)&v15 + 1), v16);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6638(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAOSphereRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C053BC(v12 << 16 >> 48, *(float *)&v14, *((float *)&v14 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6710(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleColorOverTexture; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 4);
    char v14 = *(unsigned char *)(v12 + 16);
    uint64_t v15 = *(void *)(v12 + 24);
    uint64_t v16 = *(void *)(v12 + 32);
    int v17 = *(_DWORD *)(v12 + 40);
    LOBYTE(v20) = *(unsigned char *)v12;
    DWORD1(v20) = v13;
    *((void *)&v20 + 1) = *(void *)(v12 + 8);
    v21[0] = v14;
    *(void *)&char v21[8] = v15;
    *(void *)&v21[16] = v16;
    *(_DWORD *)&v21[24] = v17;
    a4(&v20);
    if (!v7)
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      long long v22 = v20;
      v23[0] = *(_OWORD *)v21;
      *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)&v21[12];
      swift_retain();
      sub_1B6BF6E54(v18, (uint64_t)&v22);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6850(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleCylinderCollider; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE68C8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleGaussianRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    char v13 = *(unsigned char *)(v12 + 8);
    int v14 = *(_DWORD *)(v12 + 20);
    char v15 = *(unsigned char *)(v12 + 24);
    *(void *)uint64_t v18 = *(void *)v12;
    v18[8] = v13;
    *(void *)&uint64_t v18[12] = *(void *)(v12 + 12);
    *(_DWORD *)&v18[20] = v14;
    v18[24] = v15;
    a4(v18);
    if (!v7)
    {
      uint64_t v16 = sub_1B635AB28(a7) << 16 >> 48;
      v19[0] = *(_OWORD *)v18;
      *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)&v18[9];
      swift_retain();
      sub_1B6BF6F48(v16, (uint64_t)v19);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6A00(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleLocalBoxCollider; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v13 = v12[1];
    char v14 = *((unsigned char *)v12 + 40);
    long long v17 = *v12;
    *(_OWORD *)uint64_t v18 = v13;
    *(void *)&v18[16] = *((void *)v12 + 4);
    v18[24] = v14;
    a4(&v17);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      long long v19 = v17;
      v20[0] = *(_OWORD *)v18;
      *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v18[9];
      swift_retain();
      sub_1B6BF704C(v15, (uint64_t)&v19);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6B28(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleOpacityEvolution; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    char v14 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v15 = *v14;
    char v16 = *((unsigned char *)v14 + 8);
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    uint64_t v19 = v14[4];
    LOBYTE(v14) = *((unsigned char *)v14 + 40);
    *(void *)&long long v23 = v15;
    BYTE8(v23) = v16;
    *(void *)int v24 = v17;
    *(void *)&v24[8] = v18;
    *(void *)&v24[16] = v19;
    v24[24] = (_BYTE)v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v23);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = sub_1B635AB28(a7);
      long long v25 = v23;
      v26[0] = *(_OWORD *)v24;
      *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)&v24[9];
      v27[0] = v26[0];
      *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)&v24[9];
      uint64_t v29 = *((void *)&v27[0] + 1);
      uint64_t v30 = *(void *)v24;
      uint64_t v21 = v20 << 16 >> 48;
      sub_1B6AE9BA0((uint64_t)&v27[1], (uint64_t)v28, (unint64_t *)&qword_1EB9801F0, &qword_1EB9801E0, (uint64_t)&type metadata for CurveTangents);
      swift_retain();
      sub_1B6C05408(v21, &v25);
      swift_release();
      sub_1B62D8C3C((uint64_t)&v30);
      sub_1B62D8C3C((uint64_t)&v29);
      sub_1B62D8C3C((uint64_t)v28);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE6CD8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSizeOverVelocity; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 4);
    char v14 = *(unsigned char *)(v12 + 8);
    v18[0] = *(unsigned char *)v12;
    *(_DWORD *)&v18[4] = v13;
    v18[8] = v14;
    long long v15 = *(_OWORD *)(v12 + 28);
    *(_OWORD *)&uint64_t v18[12] = *(_OWORD *)(v12 + 12);
    *(_OWORD *)&unsigned char v18[28] = v15;
    a4(v18);
    if (!v7)
    {
      uint64_t v16 = sub_1B635AB28(a7) << 16 >> 48;
      long long v19 = *(_OWORD *)v18;
      v20[0] = *(_OWORD *)&v18[16];
      *(_OWORD *)((char *)v20 + 12) = *(_OWORD *)&v18[28];
      swift_retain();
      sub_1B6BF7198(v16, &v19);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6E10(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleTextureFrameInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C05510(v12 << 16 >> 48, *(float *)&v14, *((float *)&v14 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE6EE8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for RenderGraphTextureTarget; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE6F60(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParametricModelController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE6FD8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngleVelocityInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C0555C(v12 << 16 >> 48, *(float *)&v14, *((float *)&v14 + 1));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE70B0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleColorOverPosition; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = (__int16 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __int16 v15 = *v14;
    char v16 = *((unsigned char *)v14 + 4);
    int v17 = *((_DWORD *)v14 + 2);
    uint64_t v18 = *((void *)v14 + 2);
    uint64_t v19 = *((void *)v14 + 3);
    LOBYTE(v14) = *((unsigned char *)v14 + 32);
    LOWORD(v22) = v15;
    BYTE4(v22) = v16;
    DWORD2(v22) = v17;
    *(void *)&long long v23 = v18;
    *((void *)&v23 + 1) = v19;
    char v24 = (char)v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v22);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = sub_1B635AB28(a7) << 16 >> 48;
      v25[0] = v22;
      v25[1] = v23;
      char v26 = v24;
      swift_retain();
      sub_1B6BF727C(v20, (uint64_t)v25);
      swift_release();
      sub_1B6AE9C10((uint64_t)v25);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE721C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleColorOverVelocity; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    uint64_t v14 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v15 = *(_DWORD *)(v14 + 12);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    char v18 = *(unsigned char *)(v14 + 32);
    LOBYTE(v21) = *(unsigned char *)v14;
    *(void *)((char *)&v21 + 4) = *(void *)(v14 + 4);
    HIDWORD(v21) = v15;
    *(void *)&long long v22 = v16;
    *((void *)&v22 + 1) = v17;
    char v23 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v21);
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = sub_1B635AB28(a7) << 16 >> 48;
      v24[0] = v21;
      v24[1] = v22;
      char v25 = v23;
      swift_retain();
      sub_1B6BF738C(v19, (uint64_t)v24);
      swift_release();
      sub_1B6AE9C10((uint64_t)v24);
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE7388(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePrimitiveRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 12);
    int v15 = *(_DWORD *)(v12 + 16);
    char v16 = *(unsigned char *)(v12 + 20);
    int v17 = *(_DWORD *)(v12 + 24);
    char v18 = *(unsigned char *)(v12 + 28);
    char v19 = *(unsigned char *)(v12 + 29);
    char v20 = *(unsigned char *)(v12 + 30);
    char v21 = *(unsigned char *)(v12 + 31);
    int v22 = *(_DWORD *)(v12 + 32);
    char v23 = *(unsigned char *)(v12 + 36);
    *(void *)&long long v26 = *(void *)v12;
    DWORD2(v26) = v13;
    BYTE12(v26) = v14;
    *(_DWORD *)char v27 = v15;
    _OWORD v27[4] = v16;
    *(_DWORD *)&char v27[8] = v17;
    v27[12] = v18;
    v27[13] = v19;
    v27[14] = v20;
    v27[15] = v21;
    *(_DWORD *)&v27[16] = v22;
    v27[20] = v23;
    a4(&v26);
    if (!v7)
    {
      uint64_t v24 = sub_1B635AB28(a7) << 16 >> 48;
      long long v28 = v26;
      v29[0] = *(_OWORD *)v27;
      *(void *)((char *)v29 + 13) = *(void *)&v27[13];
      swift_retain();
      sub_1B6BF749C(v24, (uint64_t)&v28);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE74FC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnOverDistance; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    float v13 = *(float *)v12;
    unsigned __int8 v14 = *(unsigned char *)(v12 + 4);
    LOBYTE(v12) = *(unsigned char *)(v12 + 5);
    float v18 = v13;
    unsigned __int8 v19 = v14;
    char v20 = v12;
    a4(&v18);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      if (v20) {
        __int16 v16 = 256;
      }
      else {
        __int16 v16 = 0;
      }
      sub_1B6C055A8(v15, v16 | v19, v18);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE7600(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldBackgroundController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE7678(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectSSAOController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE76F0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePeriodicBurstSpawn; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    long long v15 = *v12;
    *(void *)__int16 v16 = *((void *)v12 + 2);
    a4(&v15);
    if (!v7)
    {
      uint64_t v13 = sub_1B635AB28(a7);
      sub_1B6C05604(v13 << 16 >> 48, v15, *((uint64_t *)&v15 + 1), v16[0], v16[1]);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE77D8(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleVolumetricRenderer; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (float *)(*(void *)(a1 + 128) + *i + a2 * a3);
    float v13 = v12[2];
    uint64_t v16 = *(void *)v12;
    float v17 = v13;
    a4(&v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C05658(v14 << 16 >> 48, *(float *)&v16, *((float *)&v16 + 1), v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE78C0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectBloomController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE7938(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectGrainController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE79B0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngularVelocityInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v15 = *v12;
    unint64_t v16 = v12[1].n128_u64[0];
    a4(&v15);
    if (!v7)
    {
      uint64_t v13 = sub_1B635AB28(a7);
      __n128 v17 = v15;
      unint64_t v18 = v16;
      sub_1B6C056AC(v13 << 16 >> 48, &v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE7AA4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleOpacityOverVelocity; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v13 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
    char v16 = *(unsigned char *)(v13 + 24);
    *(void *)char v20 = *(void *)v13;
    *(void *)&v20[8] = v14;
    *(void *)&v20[16] = v15;
    v20[24] = v16;
    *(void *)&v20[28] = *(void *)(v13 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(v20);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = sub_1B635AB28(a7);
      int v22 = *(_DWORD *)&v20[32];
      v23[0] = *(_OWORD *)v20;
      *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)&v20[9];
      uint64_t v25 = *((void *)&v23[0] + 1);
      uint64_t v26 = *(void *)v20;
      uint64_t v18 = v17 << 16 >> 48;
      v21[0] = *(_OWORD *)v20;
      v21[1] = *(_OWORD *)&v20[16];
      sub_1B6AE9BA0((uint64_t)&v23[1], (uint64_t)v24, (unint64_t *)&qword_1EB9801F0, &qword_1EB9801E0, (uint64_t)&type metadata for CurveTangents);
      swift_retain();
      sub_1B6C05740(v18, (uint64_t)v21);
      swift_release();
      sub_1B62D8C3C((uint64_t)&v26);
      sub_1B62D8C3C((uint64_t)&v25);
      sub_1B62D8C3C((uint64_t)v24);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE7C4C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePositionOverTexture; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    __int16 v13 = *(_WORD *)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 24);
    uint64_t v15 = *(void *)(v12 + 32);
    int v16 = *(_DWORD *)(v12 + 40);
    *(void *)unsigned __int8 v19 = *(void *)v12;
    *(_WORD *)&v19[8] = v13;
    *(void *)&v19[12] = *(void *)(v12 + 12);
    *(void *)&v19[24] = v14;
    *(void *)&v19[32] = v15;
    *(_DWORD *)&unsigned char v19[40] = v16;
    a4(v19);
    if (!v7)
    {
      uint64_t v17 = sub_1B635AB28(a7);
      long long v20 = *(_OWORD *)v19;
      v21[0] = *(_OWORD *)&v19[16];
      *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)&v19[28];
      sub_1B6C05848(v17 << 16 >> 48, (uint64_t)&v20);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE7D58(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingSpeedControl; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    char v13 = *(unsigned char *)(v12 + 24);
    *(_OWORD *)int v16 = *(_OWORD *)v12;
    *(void *)&unsigned char v16[16] = *(void *)(v12 + 16);
    v16[24] = v13;
    a4(v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      v17[0] = *(_OWORD *)v16;
      *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)&v16[9];
      sub_1B6C058A4(v14 << 16 >> 48, (uint64_t)v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE7E54(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFluidSolver2DEmitter; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE7ECC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleTextureFrameEvolution; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v13 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    LODWORD(v19) = *(_DWORD *)v13;
    *((void *)&v19 + 1) = v14;
    *(void *)&long long v20 = v15;
    *((void *)&v20 + 1) = v16;
    char v21 = *(unsigned char *)(v13 + 32);
    sub_1B6761BE8(v14);
    a4(&v19);
    if (v7)
    {
      sub_1B6761C48(*((uint64_t *)&v19 + 1));
    }
    else
    {
      uint64_t v17 = sub_1B635AB28(a7) << 16 >> 48;
      char v23 = v21;
      v22[0] = v19;
      v22[1] = v20;
      swift_retain();
      sub_1B6C058FC(v17, (uint64_t)v22);
      swift_release();
      sub_1B6AE9C44((uint64_t)v22);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE8010(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectExposureController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8088(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectLensBlurController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8100(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingFlyTowardsArea; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    char v13 = *(unsigned char *)(v12 + 24);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v12;
    *(void *)&unsigned char v16[16] = *(void *)(v12 + 16);
    v16[24] = v13;
    a4(v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      v17[0] = *(_OWORD *)v16;
      *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)&v16[9];
      sub_1B6C059D4(v14 << 16 >> 48, (uint64_t)v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE81FC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(__n128 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleTargetFromPositionInit; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v15 = *v12;
    unint64_t v16 = v12[1].n128_u64[0];
    a4(&v15);
    if (!v7)
    {
      uint64_t v13 = sub_1B635AB28(a7);
      __n128 v17 = v15;
      unint64_t v18 = v16;
      sub_1B6C05A30(v13 << 16 >> 48, &v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE82F0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingConstrainToArea; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    float v13 = v12->n128_f32[0];
    __n128 v14 = v12[1];
    __n128 v15 = v12[2];
    LOBYTE(v12) = v12[3].n128_u8[0];
    v18[0] = v13;
    __n128 v19 = v14;
    __n128 v20 = v15;
    char v21 = (char)v12;
    a4(v18);
    if (!v7)
    {
      uint64_t v16 = sub_1B635AB28(a7);
      sub_1B6C05BD0(v16 << 16 >> 48, v21, v18[0], v19, v20);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE83E4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectMotionBlurController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE845C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingAlignOrientation; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 4);
    char v14 = *(unsigned char *)(v12 + 8);
    long long v15 = *(_OWORD *)(v12 + 16);
    char v16 = *(unsigned char *)(v12 + 32);
    int v17 = *(_DWORD *)(v12 + 36);
    LOBYTE(v20) = *(unsigned char *)v12;
    DWORD1(v20) = v13;
    BYTE8(v20) = v14;
    long long v21 = v15;
    LOBYTE(v22) = v16;
    HIDWORD(v22) = v17;
    a4(&v20);
    if (!v7)
    {
      uint64_t v18 = sub_1B635AB28(a7);
      v23[0] = v20;
      v23[1] = v21;
      uint64_t v24 = v22;
      sub_1B6C05C28(v18 << 16 >> 48, (uint64_t)v23);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE8570(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingConstrainToPlane; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    float v13 = v12->n128_f32[0];
    __n128 v14 = v12[1];
    __n128 v15 = v12[2];
    LOBYTE(v12) = v12[3].n128_u8[0];
    v18[0] = v13;
    __n128 v19 = v14;
    __n128 v20 = v15;
    char v21 = (char)v12;
    a4(v18);
    if (!v7)
    {
      uint64_t v16 = sub_1B635AB28(a7);
      sub_1B6C05C84(v16 << 16 >> 48, v21, v18[0], v19, v20);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE8664(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectToneMappingController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE86DC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectDepthOfFieldController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8754(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectDoughnutBokehController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE87CC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56);
          (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingAlignVelocityOnPlane;
          i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    __n128 v13 = v12[1];
    v16[0] = v12->n128_f32[0];
    __n128 v17 = v13;
    a4(v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C05CDC(v14 << 16 >> 48, v16[0], v17);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE88B4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56);
          (ValueMetadata *)*(i - 3) != &type metadata for TextureRequireAnimationRepresentation;
          i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v13 = *((void *)v12 + 2);
    unsigned __int8 v14 = *((unsigned char *)v12 + 24);
    unsigned __int8 v15 = *((unsigned char *)v12 + 25);
    long long v22 = *v12;
    uint64_t v23 = v13;
    unsigned __int8 v24 = v14;
    unsigned __int8 v25 = v15;
    a4(&v22);
    if (!v7)
    {
      uint64_t v16 = sub_1B635AB28(a7) << 16 >> 48;
      long long v17 = v22;
      uint64_t v18 = v23;
      int v19 = v24;
      int v20 = v25;
      swift_retain();
      sub_1B6BF75CC(v16, v17, *((uint64_t *)&v17 + 1), v18, v19 | (v20 << 8));
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE8A00(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56);
        (ValueMetadata *)*(i - 3) != &type metadata for CameraEffectChromaticTransformController;
        i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8A78(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Mass; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8AF0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned int *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Seed; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = (unsigned int *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unsigned int v13 = *v12;
    LOBYTE(v12) = *((unsigned char *)v12 + 4);
    unsigned int v18 = v13;
    char v19 = (char)v12;
    a4(&v18);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v15 = 0x100000000;
      if (!v19) {
        uint64_t v15 = 0;
      }
      uint64_t v16 = v15 | v18;
      swift_retain();
      sub_1B6BF76D4(v14, v16);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE8C18(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8C90(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(float *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Attach; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    float v13 = *(float *)v12;
    LOBYTE(v12) = *(unsigned char *)(v12 + 4);
    float v16 = v13;
    char v17 = v12;
    a4(&v16);
    if (!v7)
    {
      uint64_t v14 = sub_1B635AB28(a7);
      sub_1B6C05D2C(v14 << 16 >> 48, v17, v16);
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE8D78(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for LookAt; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8DF0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Normal; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8E68(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Prefab; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8EE0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Rect2D; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8F58(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale1; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE8FD0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale2; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE9048(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Skybox; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    int v13 = *(_DWORD *)(v12 + 16);
    char v14 = *(unsigned char *)(v12 + 20);
    int v15 = *(_DWORD *)(v12 + 24);
    char v16 = *(unsigned char *)(v12 + 28);
    uint64_t v17 = *(void *)(v12 + 8);
    *(void *)int v20 = *(void *)v12;
    *(void *)&v20[8] = v17;
    *(_DWORD *)&v20[16] = v13;
    v20[20] = v14;
    *(_DWORD *)&v20[24] = v15;
    v20[28] = v16;
    a4(v20);
    if (!v7)
    {
      uint64_t v18 = sub_1B635AB28(a7) << 16 >> 48;
      v21[0] = *(_OWORD *)v20;
      *(_OWORD *)((char *)v21 + 13) = *(_OWORD *)&v20[13];
      swift_retain();
      sub_1B6BF78DC(v18, (uint64_t)v21);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE9180(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Vortex; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    long long v14 = *(_OWORD *)(*(void *)(a1 + 128) + *i + a2 * a3);
    a4(&v14);
    if (!v7)
    {
      uint64_t v12 = sub_1B635AB28(a7);
      sub_1B6C05D80(v12 << 16 >> 48, *(float *)&v14, *((float *)&v14 + 1), *((float *)&v14 + 2), *((float *)&v14 + 3));
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE925C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Velocity; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE92D4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for KillShape; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE934C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MeshModel; i += 5)
    {
      if (!--v10) {
        return v10 & 1;
      }
    }
    long long v14 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v15 = v14[1];
    uint64_t v20 = *v14;
    uint64_t v21 = v15;
    swift_retain();
    swift_bridgeObjectRetain();
    a4(&v20);
    if (v8)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v17 = v20;
      uint64_t v18 = v21;
      swift_retain();
      sub_1B6BF7B20(v16, v17, v18);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      LOBYTE(v10) = 1;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6AE9494(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SetActive; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE950C(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for UserData1; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE9584(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for UserData2; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE95FC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for UserData3; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE9674(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for UserData4; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE96EC(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldAABB; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE9764(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MeshImportOptions; i += 5)
    {
      if (!--v9) {
        return v9 & 1;
      }
    }
    uint64_t v12 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v13 = *(void *)v12;
    unsigned __int8 v14 = *(unsigned char *)(v12 + 8);
    LOBYTE(v12) = *(unsigned char *)(v12 + 9);
    uint64_t v20 = v13;
    unsigned __int8 v21 = v14;
    char v22 = v12;
    a4(&v20);
    if (!v7)
    {
      uint64_t v15 = sub_1B635AB28(a7) << 16 >> 48;
      uint64_t v16 = v20;
      if (v22) {
        int v17 = 256;
      }
      else {
        int v17 = 0;
      }
      unsigned int v18 = v17 | v21;
      swift_retain();
      sub_1B6BF7C40(v15, v16, v18);
      swift_release();
      LOBYTE(v9) = 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1B6AE98A4(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MorpherController; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6AE991C(uint64_t a1)
{
  sub_1B62D4260(0, &qword_1EB97DBF0, (void (*)(uint64_t))type metadata accessor for GraphScript);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B6AE9994(uint64_t a1)
{
  return a1;
}

void sub_1B6AE99E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1B62F7F08(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v5 = sub_1B6E324B8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6AE9A50(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1B6AE9A98(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AE9ACC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AE9B00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AE9BA0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1B6AE99E4(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B6AE9C10(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AE9C44(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AE9C78(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1B6AE9CC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AE9D64(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6AE9E00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6AE9E68(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6AEB2E4(0, &qword_1E9DD53A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AEB290();
  sub_1B6E33A88();
  v13[0] = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    sub_1B6AEAF8C(v3 + 8, (uint64_t)v14, (unint64_t *)&qword_1E9DD53B0, (uint64_t (*)(uint64_t))sub_1B665D590);
    sub_1B6AEAF8C((uint64_t)v14, (uint64_t)v13, (unint64_t *)&qword_1E9DD53B0, (uint64_t (*)(uint64_t))sub_1B665D590);
    v12[15] = 1;
    sub_1B665D590();
    sub_1B681F0D8((unint64_t *)&qword_1E9DD85D0);
    sub_1B6E32F38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6AEA054(char *a1, char *a2)
{
  return sub_1B6BB8CF4(*a1, *a2);
}

uint64_t sub_1B6AEA060()
{
  if (*v0) {
    return 0x6576727563;
  }
  else {
    return 0x6E6F697461727564;
  }
}

uint64_t sub_1B6AEA098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6AEABE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6AEA0C0(uint64_t a1)
{
  unint64_t v2 = sub_1B6AEB290();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AEA0FC(uint64_t a1)
{
  unint64_t v2 = sub_1B6AEB290();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6AEA138@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6AEB074(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B6AEA180(void *a1)
{
  return sub_1B6AE9E68(a1);
}

uint64_t sub_1B6AEA1BC()
{
  return type metadata accessor for ParticleTextureFrameEvolutionSystem();
}

double sub_1B6AEA1DC()
{
  sub_1B6AEB348(0, (unint64_t *)&qword_1EB980BA0, (uint64_t (*)(uint64_t))sub_1B663C11C, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for ParticleTextureFrame;
  *(void *)(v0 + 40) = &off_1F0F82BB8;
  return result;
}

void sub_1B6AEA254(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1065353216;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 32) = 0;
}

uint64_t type metadata accessor for ParticleTextureFrameEvolution.GPUSystem()
{
  return self;
}

const char *sub_1B6AEA294()
{
  return "ParticleTextureFrameEvolution.GPU";
}

uint64_t sub_1B6AEA2A8()
{
  return type metadata accessor for ParticleTextureFrameEvolution.GPUSystem();
}

uint64_t *sub_1B6AEA2C8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = 0;
  uint64_t v5 = *a1;
  uint64_t v4 = (void *)a1[1];
  swift_retain_n();
  sub_1B695F428(v4, (uint64_t)v89);
  float v6 = *(float *)v89;
  uint64_t v7 = v89[1];
  uint64_t v9 = v89[2];
  uint64_t v8 = v89[3];
  char v10 = v90;
  swift_release();
  sub_1B62CA210((uint64_t)v89, (uint64_t)v100, &qword_1E9DD5390);
  float v11 = 1.0;
  if (v101 == 1) {
    goto LABEL_23;
  }
  if (!v7)
  {
    float v11 = v6;
LABEL_23:
    sub_1B62F46E8();
    float v34 = v33;
    long long v35 = *(_OWORD *)(v2 + 32);
    long long v106 = *(_OWORD *)(v2 + 16);
    long long v107 = v35;
    uint64_t v108 = *(void *)(v2 + 48);
    sub_1B62C9DA8(v5, (uint64_t)&v106, 0x200000000, v91);
    sub_1B62CA210((uint64_t)v91, (uint64_t)&v92, (unint64_t *)&qword_1EB97DC50);
    if (!(void)v92) {
      return (uint64_t *)swift_release();
    }
    if (v99 <= 0)
    {
      swift_release();
      return sub_1B632F170(v91);
    }
    uint64_t v85 = v96;
    if (!v96)
    {
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_58:
      swift_release();
      sub_1B632F170(v91);
      return sub_1B632F170(v91);
    }
    *(float *)v36.i32 = v34 / v11;
    int32x2_t v73 = v36;
    long long v37 = v98;
    uint64_t v38 = v98[4];
    char v39 = *(unsigned char *)(v97 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    long long v102 = v92;
    long long v103 = v93;
    uint64_t v104 = v94;
    uint64_t v81 = (uint64_t)(v98 + 6);
    uint64_t v83 = v95;
    unint64_t v79 = v98 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v40 = 0;
    float32x4_t v71 = (float32x4_t)vdupq_lane_s32(v73, 0);
    char v77 = v39;
    uint64_t v75 = v38;
    while (1)
    {
      uint64_t v41 = (unsigned int *)(v83 + 48 * v40);
      uint64_t v42 = *v41;
      uint64_t v87 = v41[1];
      uint64_t v88 = v3;
      unint64_t v44 = (uint64_t *)*((void *)v41 + 2);
      uint64_t v43 = *((void *)v41 + 3);
      unint64_t v46 = *((void *)v41 + 4);
      uint64_t v45 = *((void *)v41 + 5);
      if (v39)
      {
        int v47 = *(os_unfair_lock_s **)(v45 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v47);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v45 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v38);
      sub_1B62CA210(v81, (uint64_t)v105, &qword_1EB97DE20);
      uint64_t v48 = v37[4];
      uint64_t v49 = *(void *)(*(void *)(*(void *)(*(void *)(v45 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v37[6] = ecs_stack_allocator_allocate(v48, 48 * v49, 8);
      v37[7] = v49;
      v79[1] = 0;
      v79[2] = 0;
      *unint64_t v79 = 0;
      swift_release();
      uint64_t v50 = sub_1B62C9024((uint64_t)&type metadata for ParticleTextureFrame, (uint64_t)&off_1F0F82BB8, v44, v43, v46, (uint64_t)v37);
      if (v44)
      {
        char v39 = v77;
        if (v46)
        {
          if (v46 >= 8)
          {
            unint64_t v51 = v46 & 0xFFFFFFFFFFFFFFF8;
            int v53 = (float32x4_t *)(v50 + 16);
            unint64_t v54 = v46 & 0xFFFFFFFFFFFFFFF8;
            uint64_t v3 = v88;
            uint64_t v38 = v75;
            do
            {
              float32x4_t v55 = vaddq_f32(v71, *v53);
              v53[-1] = vaddq_f32(v71, v53[-1]);
              *int v53 = v55;
              v53 += 2;
              v54 -= 8;
            }
            while (v54);
            float v52 = *(float *)v73.i32;
            if (v46 == v51) {
              goto LABEL_51;
            }
          }
          else
          {
            unint64_t v51 = 0;
            uint64_t v3 = v88;
            float v52 = *(float *)v73.i32;
            uint64_t v38 = v75;
          }
          unint64_t v56 = v46 - v51;
          uint64_t v57 = (float *)(v50 + 4 * v51);
          do
          {
            *uint64_t v57 = v52 + *v57;
            ++v57;
            --v56;
          }
          while (v56);
        }
        else
        {
          uint64_t v3 = v88;
          uint64_t v38 = v75;
        }
      }
      else if (v42 == v87)
      {
        uint64_t v3 = v88;
        uint64_t v38 = v75;
        char v39 = v77;
      }
      else
      {
        uint64_t v58 = v87 - v42;
        if ((unint64_t)(v87 - v42) >= 8)
        {
          uint64_t v59 = (v58 & 0xFFFFFFFFFFFFFFF8) + v42;
          uint64_t v61 = (float32x4_t *)(v50 + 4 * v42 + 16);
          unint64_t v62 = v58 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            float32x4_t v63 = vaddq_f32(v71, *v61);
            v61[-1] = vaddq_f32(v71, v61[-1]);
            *uint64_t v61 = v63;
            v61 += 2;
            v62 -= 8;
          }
          while (v62);
          uint64_t v3 = v88;
          float v60 = *(float *)v73.i32;
          uint64_t v38 = v75;
          char v39 = v77;
          if (v58 == (v58 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v59 = v42;
          uint64_t v3 = v88;
          float v60 = *(float *)v73.i32;
          uint64_t v38 = v75;
          char v39 = v77;
        }
        uint64_t v64 = v87 - v59;
        long long v65 = (float *)(v50 + 4 * v59);
        do
        {
          float *v65 = v60 + *v65;
          ++v65;
          --v64;
        }
        while (v64);
      }
LABEL_51:
      sub_1B6345178(v37, (unsigned __int16 **)&v102, (uint64_t)v105);
      sub_1B634507C((char *)v45);
      ecs_stack_allocator_pop_snapshot(v38);
      if (v39)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 376));
      }
      swift_release();
      if (++v40 == v85) {
        goto LABEL_58;
      }
    }
  }
  long long v12 = *(_OWORD *)(v2 + 72);
  long long v106 = *(_OWORD *)(v2 + 56);
  long long v107 = v12;
  uint64_t v108 = *(void *)(v2 + 88);
  sub_1B62C9DA8(v5, (uint64_t)&v106, 0x200000000, v91);
  sub_1B62CA210((uint64_t)v91, (uint64_t)&v92, (unint64_t *)&qword_1EB97DC50);
  if (!(void)v92)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  if (v99 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v76 = v96;
    if (v96)
    {
      uint64_t v13 = v98[4];
      char v14 = *(unsigned char *)(v97 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      long long v102 = v92;
      long long v103 = v93;
      uint64_t v72 = v95;
      uint64_t v104 = v94;
      uint64_t v86 = v98;
      long long v69 = v98 + 8;
      uint64_t v70 = (uint64_t)(v98 + 6);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v15 = 0;
      char v74 = v14;
      uint64_t v67 = v8;
      uint64_t v68 = v13;
      while (1)
      {
        uint64_t v84 = v15;
        uint64_t v16 = (unsigned int *)(v72 + 48 * v15);
        uint64_t v80 = *v16;
        uint64_t v78 = v16[1];
        uint64_t v17 = *((void *)v16 + 3);
        long long v82 = (uint64_t *)*((void *)v16 + 2);
        uint64_t v18 = *((void *)v16 + 4);
        uint64_t v19 = *((void *)v16 + 5);
        if (v14)
        {
          uint64_t v20 = *(os_unfair_lock_s **)(v19 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v20);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v13);
        sub_1B62CA210(v70, (uint64_t)v105, &qword_1EB97DE20);
        uint64_t v21 = v86[4];
        uint64_t v22 = *(void *)(*(void *)(*(void *)(*(void *)(v19 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v86[6] = ecs_stack_allocator_allocate(v21, 48 * v22, 8);
        v86[7] = v22;
        v69[1] = 0;
        v69[2] = 0;
        *long long v69 = 0;
        swift_release();
        uint64_t v23 = (_DWORD *)sub_1B62C9024((uint64_t)&type metadata for ParticleTextureFrame, (uint64_t)&off_1F0F82BB8, v82, v17, v18, (uint64_t)v86);
        uint64_t v24 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v82, v17, v18, (uint64_t)v86);
        unsigned __int8 v25 = (float *)v24;
        if (v82)
        {
          if (!v18) {
            goto LABEL_17;
          }
          uint64_t v13 = v68;
          do
          {
            float v26 = *v25++;
            sub_1B631A2E0(v7, v9, v67, v10, v26);
            *v23++ = v27;
            --v18;
          }
          while (v18);
        }
        else
        {
          if (v80 == v78)
          {
LABEL_17:
            uint64_t v13 = v68;
            goto LABEL_20;
          }
          uint64_t v28 = v78 - v80;
          uint64_t v29 = (float *)(v24 + 4 * v80);
          uint64_t v30 = &v23[v80];
          uint64_t v13 = v68;
          do
          {
            float v31 = *v29++;
            sub_1B631A2E0(v7, v9, v67, v10, v31);
            *v30++ = v32;
            --v28;
          }
          while (v28);
        }
LABEL_20:
        sub_1B6345178(v86, (unsigned __int16 **)&v102, (uint64_t)v105);
        sub_1B634507C((char *)v19);
        ecs_stack_allocator_pop_snapshot(v13);
        char v14 = v74;
        if (v74)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
        }
        swift_release();
        uint64_t v15 = v84 + 1;
        if (v84 + 1 == v76) {
          goto LABEL_61;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_61:
    swift_release();
    sub_1B632F170(v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return sub_1B632F170(v91);
}

uint64_t type metadata accessor for ParticleTextureFrameEvolutionSystem()
{
  return self;
}

uint64_t sub_1B6AEAB2C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 104);
  long long v11 = *(_OWORD *)(a1 + 88);
  long long v12 = v3;
  uint64_t v13 = *(void *)(a1 + 120);
  sub_1B663E438((uint64_t)v7);
  long long v4 = v7[1];
  *(_OWORD *)(v2 + 56) = v7[0];
  *(_OWORD *)(v2 + 72) = v4;
  *(void *)(v2 + 88) = v8;
  sub_1B67CF898((uint64_t)v9);
  sub_1B62F648C(a1);
  long long v5 = v9[1];
  *(_OWORD *)(v2 + 16) = v9[0];
  *(_OWORD *)(v2 + 32) = v5;
  *(void *)(v2 + 48) = v10;
  return v2;
}

const char *sub_1B6AEABD4()
{
  return "ParticleTextureFrameEvolution";
}

uint64_t sub_1B6AEABE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576727563 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6AEACD4(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  long long v3 = (void *)a1[3];
  uint64_t v4 = a1[6];
  swift_retain_n();
  sub_1B695F428(v3, (uint64_t)v23);
  float v5 = *(float *)v23;
  uint64_t v6 = v23[1];
  uint64_t v8 = v23[2];
  uint64_t v7 = v23[3];
  char v9 = v24;
  swift_release();
  sub_1B62CA210((uint64_t)v23, (uint64_t)v25, &qword_1E9DD5390);
  if (v26 == 1)
  {
    float v10 = 1.0;
LABEL_7:
    sub_1B6AEAF8C((uint64_t)a1, (uint64_t)v27, &qword_1E9DD5398, (uint64_t (*)(uint64_t))sub_1B6AEB00C);
    sub_1B6AEAF8C((uint64_t)v27, (uint64_t)&v28, &qword_1E9DD5398, (uint64_t (*)(uint64_t))sub_1B6AEB00C);
    if (v28) {
      objc_msgSend(v28, sel_setTexture_atIndex_, 0, 0);
    }
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  float v10 = v5;
  if (!v6) {
    goto LABEL_7;
  }
  swift_retain();
  sub_1B6761BE8(v6);
  long long v11 = sub_1B6CE1610(v6, v8, v7, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6AEAF8C((uint64_t)a1, (uint64_t)v27, &qword_1E9DD5398, (uint64_t (*)(uint64_t))sub_1B6AEB00C);
  sub_1B6AEAF8C((uint64_t)v27, (uint64_t)&v28, &qword_1E9DD5398, (uint64_t (*)(uint64_t))sub_1B6AEB00C);
  if (v28) {
    objc_msgSend(v28, sel_setTexture_atIndex_, v11, 0);
  }
  swift_unknownObjectRelease();
LABEL_10:
  sub_1B6A81254();
  float v13 = v12;
  sub_1B6761C48(v6);
  float v22 = v13 / v10;
  uint64_t v14 = *a1;
  if (*a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_textureframe_evolution_uniforms(0);
    sub_1B6B594A8((uint64_t)&v22, 1, ObjectType, v16, v17, v18, v19, v20);
  }
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v2, v14 == 0, 0, (uint64_t)a1, 0xD00000000000001FLL, 0x80000001B6F464B0, 0);
  sub_1B6786A7C((uint64_t)a1);
  return swift_release_n();
}

uint64_t sub_1B6AEAF8C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B6AEB348(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1B6AEB00C()
{
  unint64_t result = qword_1E9DD53A0;
  if (!qword_1E9DD53A0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD53A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleTextureFrameEvolution()
{
  return &type metadata for ParticleTextureFrameEvolution;
}

uint64_t sub_1B6AEB074@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6AEB2E4(0, &qword_1EB980A70, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  float v10 = (char *)&v16 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AEB290();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v18) = 0;
  sub_1B6E32DC8();
  int v12 = v11;
  sub_1B665D590();
  char v17 = 1;
  sub_1B681F0D8((unint64_t *)&qword_1EB97FD90);
  sub_1B6E32D78();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  long long v16 = v18;
  uint64_t v13 = v19;
  char v14 = v20;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(_DWORD *)a2 = v12;
  *(_OWORD *)(a2 + 8) = v16;
  *(void *)(a2 + 24) = v13;
  *(unsigned char *)(a2 + 32) = v14;
  return result;
}

unint64_t sub_1B6AEB290()
{
  unint64_t result = qword_1EB97FAC8;
  if (!qword_1EB97FAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FAC8);
  }
  return result;
}

void sub_1B6AEB2E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6AEB290();
    unint64_t v7 = a3(a1, &type metadata for ParticleTextureFrameEvolution.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1B6AEB348(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleTextureFrameEvolution.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AEB478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleTextureFrameEvolution.CodingKeys()
{
  return &type metadata for ParticleTextureFrameEvolution.CodingKeys;
}

unint64_t sub_1B6AEB4B4()
{
  unint64_t result = qword_1E9DD53B8;
  if (!qword_1E9DD53B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD53B8);
  }
  return result;
}

unint64_t sub_1B6AEB50C()
{
  unint64_t result = qword_1EB97FAE0[0];
  if (!qword_1EB97FAE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB97FAE0);
  }
  return result;
}

unint64_t sub_1B6AEB564()
{
  unint64_t result = qword_1EB97FAD8;
  if (!qword_1EB97FAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FAD8);
  }
  return result;
}

uint64_t destroy for RenderArguments()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RenderArguments(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RenderArguments(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_WORD *)(a1 + 98) = *(_WORD *)(a2 + 98);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RenderArguments(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RenderArguments()
{
  return &type metadata for RenderArguments;
}

uint64_t sub_1B6AEB99C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6AEB9E4()
{
  return sub_1B6E33958();
}

uint64_t sub_1B6AEBA10()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6AEBA54@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6AEC3B4(*a1);
  *a2 = result;
  return result;
}

void sub_1B6AEBA80(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1B6AEBA8C(char a1)
{
  if ((a1 & 1) == 0)
  {
    if ((a1 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1B6E31948();
    if ((a1 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  sub_1B6E31948();
  if ((a1 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_3:
  if ((a1 & 4) != 0) {
LABEL_4:
  }
    sub_1B6E31948();
LABEL_5:
  uint64_t v2 = sub_1B6D48258();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1BA9B34C0](v2, v4, v6, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B6AEBB9C()
{
  return sub_1B6AEBA8C(*v0);
}

uint64_t sub_1B6AEBBA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_unknownObjectRetain();
  }
}

unsigned char *storeEnumTagSinglePayload for ArgumentScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AEBC80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArgumentScope()
{
  return &type metadata for ArgumentScope;
}

ValueMetadata *type metadata accessor for BindingRequirement()
{
  return &type metadata for BindingRequirement;
}

uint64_t destroy for SamplerArgument(uint64_t a1)
{
  return sub_1B69A1E8C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for SamplerArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B6AEBBA4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SamplerArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B6AEBBA4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B69A1E8C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SamplerArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B69A1E8C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for SamplerArgument()
{
  return &type metadata for SamplerArgument;
}

uint64_t destroy for TextureArgument(uint64_t a1)
{
  return sub_1B6916620(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for TextureArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B6916440(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for TextureArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B6916440(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B6916620(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TextureArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B6916620(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextureArgument(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureArgument(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6AEBFD0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TextureArgument()
{
  return &type metadata for TextureArgument;
}

uint64_t initializeWithCopy for BufferArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1B62E9500(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for BufferArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1B62E9500(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1B62E6BD4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for BufferArgument(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1B62E6BD4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for BufferArgument(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 32) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for BufferArgument(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1B6AEC1BC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 6;
}

uint64_t sub_1B6AEC1C8(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x3Fu;
  return result;
}

uint64_t sub_1B6AEC1D8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for BufferArgument()
{
  return &type metadata for BufferArgument;
}

unint64_t sub_1B6AEC200()
{
  unint64_t result = qword_1E9DD53C8;
  if (!qword_1E9DD53C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD53C8);
  }
  return result;
}

unint64_t sub_1B6AEC258()
{
  unint64_t result = qword_1E9DD53D0;
  if (!qword_1E9DD53D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD53D0);
  }
  return result;
}

unint64_t sub_1B6AEC2B0()
{
  unint64_t result = qword_1E9DD53D8;
  if (!qword_1E9DD53D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD53D8);
  }
  return result;
}

unint64_t sub_1B6AEC308()
{
  unint64_t result = qword_1E9DD53E0;
  if (!qword_1E9DD53E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD53E0);
  }
  return result;
}

unint64_t sub_1B6AEC360()
{
  unint64_t result = qword_1E9DD53E8;
  if (!qword_1E9DD53E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD53E8);
  }
  return result;
}

uint64_t sub_1B6AEC3B4(uint64_t result)
{
  if (result >= 0xB) {
    return 11;
  }
  else {
    return result;
  }
}

uint64_t sub_1B6AEC3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  if (qword_1EB97D6E8 != -1) {
    swift_once();
  }
  uint64_t v10 = a1 + 1272;
  if (byte_1EB99799C == 1 && (*(unsigned char *)(a1 + 1320) & 1) == 0)
  {
    sub_1B69A1D74(a2 + 40, (uint64_t)&v66);
    if (v67)
    {
      sub_1B62C15C4(&v66, (uint64_t)v68);
      if (*(unsigned char *)(a3 + 537) == 1)
      {
        uint64_t v11 = (void *)*sub_1B62C14BC(v68, v69);
        uint64_t v12 = qword_1E9DCC588;
        swift_unknownObjectRetain();
        if (v12 != -1) {
          swift_once();
        }
        uint64_t v13 = *(void *)(qword_1E9E49628 + 16);
        uint64_t v70 = v5;
        if (v13)
        {
          sub_1B62B2CE0(0xD000000000000019, 0x80000001B6F46690);
          if (v14) {
            swift_bridgeObjectRetain();
          }
        }
        uint64_t v15 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        id v16 = objc_msgSend(v11, sel_texture::, 7, v15);

        sub_1B62C1550((uint64_t)v68, (uint64_t)&v66);
        if (!v16)
        {
          char v17 = (void *)*sub_1B62C14BC(&v66, v67);
          if (*(void *)(qword_1E9E49628 + 16))
          {
            sub_1B62B2CE0(0x6E61696461727269, 0xEA00000000006563);
            if (v18) {
              swift_bridgeObjectRetain();
            }
          }
          uint64_t v19 = (void *)sub_1B6E31768();
          swift_bridgeObjectRelease();
          id v16 = objc_msgSend(v17, sel_texture::, 2, v19);

          if (!v16)
          {
            uint64_t v20 = *(void *)(a3 + 240);
            swift_retain();
            id v16 = sub_1B63575F4(0xD000000000000017, 0x80000001B6F466B0, v20, a3);
            swift_release();
          }
        }
        id v63 = v16;
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v66);
        uint64_t v21 = (void *)*sub_1B62C14BC(v68, v69);
        if (*(void *)(qword_1E9E49628 + 16))
        {
          sub_1B62B2CE0(0xD00000000000001ALL, 0x80000001B6F466D0);
          if (v22) {
            swift_bridgeObjectRetain();
          }
        }
        uint64_t v23 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        id v24 = objc_msgSend(v21, sel_texture::, 7, v23);

        sub_1B62C1550((uint64_t)v68, (uint64_t)v65);
        if (!v24)
        {
          unsigned __int8 v25 = (void *)*sub_1B62C14BC(v65, v65[3]);
          if (*(void *)(qword_1E9E49628 + 16))
          {
            sub_1B62B2CE0(0x65636E6169646172, 0xE800000000000000);
            if (v26) {
              swift_bridgeObjectRetain();
            }
          }
          int v27 = (void *)sub_1B6E31768();
          swift_bridgeObjectRelease();
          id v24 = objc_msgSend(v25, sel_texture::, 2, v27);

          if (!v24)
          {
            uint64_t v28 = *(void *)(a3 + 240);
            swift_retain();
            id v24 = sub_1B63575F4(0xD000000000000017, 0x80000001B6F466B0, v28, a3);
            swift_release();
          }
        }
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v65);
        uint64_t v29 = (void *)*sub_1B62C14BC(v68, v69);
        if (*(void *)(qword_1E9E49628 + 16))
        {
          sub_1B62B2CE0(0x74754C66647262, 0xE700000000000000);
          if (v30) {
            swift_bridgeObjectRetain();
          }
        }
        float v31 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        id v32 = objc_msgSend(v29, sel_texture::, 4, v31);

        if (!v32)
        {
          uint64_t v33 = *(void *)(a3 + 240);
          swift_retain();
          id v32 = (id)sub_1B635C9FC(0x46445242584656, 0xE700000000000000, v33);
          swift_release();
        }
        float v34 = (void **)sub_1B62C14BC(v68, v69);
        id v35 = sub_1B6B663A8(7u, 0x74736E6F436C6269, 0xEC00000073746E61, *v34);
        uint64_t v37 = v36;
        uint64_t v39 = v38;
        sub_1B62C1550((uint64_t)v68, (uint64_t)v64);
        if (v35)
        {
          id v62 = v35;
          uint64_t v60 = v39;
          uint64_t v61 = v37;
        }
        else
        {
          uint64_t v40 = (void **)sub_1B62C14BC(v64, v64[3]);
          id v62 = sub_1B6B663A8(3u, 0x74736E6F436C6269, 0xEC00000073746E61, *v40);
          uint64_t v60 = v42;
          uint64_t v61 = v41;
        }
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v64);
        uint64_t v43 = (void **)sub_1B62C14BC(v68, v69);
        id v44 = sub_1B6B663A8(3u, 0x6E6F43746867696CLL, 0xEE0073746E617473, *v43);
        uint64_t v58 = v46;
        uint64_t v59 = v45;
        swift_getObjectType();
        uint64_t v47 = swift_unknownObjectRetain();
        sub_1B6357350(v47, 20);
        swift_unknownObjectRelease();
        uint64_t v48 = swift_unknownObjectRetain();
        sub_1B6357350(v48, 21);
        swift_unknownObjectRelease();
        uint64_t v49 = swift_unknownObjectRetain();
        sub_1B6357350(v49, 22);
        swift_unknownObjectRelease();
        sub_1B63577E4();
        uint64_t v50 = swift_allocObject();
        *(_OWORD *)(v50 + 16) = xmmword_1B6E78160;
        *(void *)(v50 + 32) = v63;
        *(void *)(v50 + 40) = v24;
        *(void *)(v50 + 48) = v32;
        *(void *)&long long v66 = v50;
        sub_1B6E31C48();
        *(void *)(a1 + 1304) = v66;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B637289C((uint64_t)v62, v61, v60, 0, 10, (unint64_t *)(a1 + 1304));
        sub_1B637289C((uint64_t)v44, v59, v58, 0, 11, (unint64_t *)(a1 + 1304));
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v10 = a1 + 1272;
      }
      else
      {
        swift_unknownObjectRetain();
      }
      unint64_t v51 = (void *)*sub_1B62C14BC(v68, v69);
      if (qword_1E9DCC588 != -1) {
        swift_once();
      }
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0x614D776F64616873, 0xE900000000000070);
        if (v52) {
          swift_bridgeObjectRetain();
        }
      }
      int v53 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v54 = objc_msgSend(v51, sel_texture::, 2, v53);

      swift_getObjectType();
      sub_1B6357350((uint64_t)v54, 23);
      if (v54)
      {
        uint64_t v55 = swift_unknownObjectRetain();
        MEMORY[0x1BA9B3870](v55);
        if (*(void *)((*(void *)(a1 + 1304) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 1304) & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          sub_1B6E31C78();
        sub_1B6E31CC8();
        sub_1B6E31C48();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v68);
    }
    else
    {
      sub_1B69A1E04((uint64_t)&v66);
    }
    *(unsigned char *)(v10 + 48) = 1;
  }
  uint64_t v56 = *(void *)(a1 + 1288);
  *(_OWORD *)a4 = *(_OWORD *)v10;
  *(void *)(a4 + 16) = v56;
  return swift_unknownObjectRetain();
}

uint64_t sub_1B6AECCE0(uint64_t result)
{
  uint64_t v1 = result;
  _OWORD v26[2] = *MEMORY[0x1E4F143B8];
  if (qword_1EB97D6E8 != -1) {
    unint64_t result = swift_once();
  }
  if (byte_1EB99799C == 1)
  {
    uint64_t v2 = *(void **)(v1 + 88);
    if (v2)
    {
      swift_getObjectType();
      id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedLength);
      swift_retain();
      uint64_t v4 = sub_1B62F1868(0, (uint64_t)v3);
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      swift_unknownObjectRetain();
      swift_release();
      swift_unknownObjectRelease();
      *(void *)uint64_t v1 = v4;
      *(void *)(v1 + 8) = v6;
      *(void *)(v1 + 16) = v8;
      uint64_t v9 = swift_unknownObjectRetain();
      sub_1B62EC494(v9, v6, v8, 0);
      swift_unknownObjectRelease();
      if (*(_DWORD *)(v1 + 100))
      {
        uint64_t v10 = objc_msgSend(v2, sel_constantDataAtIndex_);
        long long v12 = *(_OWORD *)(v1 + 48);
        long long v11 = *(_OWORD *)(v1 + 64);
        *uint64_t v10 = *(_OWORD *)(v1 + 32);
        v10[1] = v12;
        _OWORD v10[2] = v11;
      }
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    int v13 = *(_DWORD *)(v1 + 32);
    __int16 v14 = *(_WORD *)(v1 + 36);
    __int16 v15 = *(_WORD *)(v1 + 38);
    long long v24 = *(_OWORD *)(v1 + 64);
    long long v25 = *(_OWORD *)(v1 + 48);
    swift_retain();
    id v16 = (id)sub_1B62F1868(0, 48);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v26[0] = 0;
      v26[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      int v21 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v26[0] = 0;
      swift_retain();
      sub_1B6B33E34(v21, v26, 0xD00000000000003ELL, 0x80000001B6F46B50);
      swift_release();
      swift_release();
    }
    else
    {
      char v22 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v16 = v16;
      uint64_t v23 = &v22[v18];
      *(_DWORD *)uint64_t v23 = v13;
      *((_WORD *)v23 + 2) = v14;
      *((_WORD *)v23 + 3) = v15;
      *((_OWORD *)v23 + 1) = v25;
      *((_OWORD *)v23 + 2) = v24;
    }
    swift_release();
    unint64_t result = swift_unknownObjectRelease();
    *(void *)uint64_t v1 = v16;
    *(void *)(v1 + 8) = v18;
    *(void *)(v1 + 16) = v20;
  }
  return result;
}

uint64_t sub_1B6AED034(uint64_t result)
{
  uint64_t v1 = result;
  _OWORD v17[2] = *MEMORY[0x1E4F143B8];
  if (qword_1EB97D6E8 != -1) {
    unint64_t result = swift_once();
  }
  if (byte_1EB99799C == 1)
  {
    uint64_t v2 = *(void **)(v1 + 32);
    if (v2)
    {
      swift_getObjectType();
      id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedLength);
      swift_retain();
      uint64_t v4 = sub_1B62F1868(0, (uint64_t)v3);
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      swift_unknownObjectRetain();
      swift_release();
      swift_unknownObjectRelease();
      *(void *)uint64_t v1 = v4;
      *(void *)(v1 + 8) = v6;
      *(void *)(v1 + 16) = v8;
      uint64_t v9 = swift_unknownObjectRetain();
      sub_1B62EC494(v9, v6, v8, 0);
      swift_unknownObjectRelease();
      if (*(_DWORD *)(v1 + 44)) {
        objc_msgSend(v2, sel_constantDataAtIndex_);
      }
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    swift_retain();
    uint64_t v10 = (void *)sub_1B62F1868(0, 0);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v17[0] = 0;
      v17[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      int v15 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v17[0] = 0;
      swift_retain();
      sub_1B6B33E34(v15, v17, 0xD00000000000003CLL, 0x80000001B6F46B10);
      swift_release();
      swift_release();
      swift_release();
      unint64_t result = swift_unknownObjectRelease();
      *(void *)uint64_t v1 = v10;
    }
    else
    {
      objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v16 = v10;
      swift_release();
      unint64_t result = swift_unknownObjectRelease();
      *(void *)uint64_t v1 = v16;
    }
    *(void *)(v1 + 8) = v12;
    *(void *)(v1 + 16) = v14;
  }
  return result;
}

uint64_t sub_1B6AED344(uint64_t result)
{
  uint64_t v1 = result;
  id v32[2] = *MEMORY[0x1E4F143B8];
  if (qword_1EB97D6E8 != -1) {
    unint64_t result = swift_once();
  }
  if (byte_1EB99799C == 1)
  {
    uint64_t v2 = *(void **)(v1 + 88);
    if (v2)
    {
      swift_getObjectType();
      id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedLength);
      swift_retain();
      uint64_t v4 = sub_1B62F1868(0, (uint64_t)v3);
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      swift_unknownObjectRetain();
      swift_release();
      swift_unknownObjectRelease();
      *(void *)uint64_t v1 = v4;
      *(void *)(v1 + 8) = v6;
      *(void *)(v1 + 16) = v8;
      uint64_t v9 = swift_unknownObjectRetain();
      sub_1B62EC494(v9, v6, v8, 0);
      swift_unknownObjectRelease();
      if (*(_DWORD *)(v1 + 100))
      {
        uint64_t v10 = objc_msgSend(v2, sel_constantDataAtIndex_);
        long long v12 = *(_OWORD *)(v1 + 48);
        long long v11 = *(_OWORD *)(v1 + 64);
        *uint64_t v10 = *(_OWORD *)(v1 + 32);
        v10[1] = v12;
        _OWORD v10[2] = v11;
      }
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __int16 v13 = *(_WORD *)(v1 + 32);
    char v14 = *(unsigned char *)(v1 + 34);
    char v15 = *(unsigned char *)(v1 + 35);
    int v16 = *(_DWORD *)(v1 + 36);
    __int16 v17 = *(_WORD *)(v1 + 40);
    __int16 v18 = *(_WORD *)(v1 + 42);
    long long v31 = *(_OWORD *)(v1 + 48);
    int v19 = *(_DWORD *)(v1 + 64);
    swift_retain();
    uint64_t v20 = (void *)sub_1B62F1868(0, 48);
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      uint64_t v25 = v24;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v32[0] = 0;
      v32[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      int v26 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v32[0] = 0;
      swift_retain();
      sub_1B6B33E34(v26, v32, 0xD00000000000003FLL, 0x80000001B6F46650);
      swift_release();
      swift_release();
      swift_release();
      unint64_t result = swift_unknownObjectRelease();
      *(void *)uint64_t v1 = v20;
      *(void *)(v1 + 8) = v22;
      *(void *)(v1 + 16) = v25;
    }
    else
    {
      uint64_t v30 = v24;
      int v27 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v28 = v20;
      uint64_t v29 = &v27[v22];
      *(_WORD *)uint64_t v29 = v13;
      _OWORD v29[2] = v14;
      v29[3] = v15;
      *((_DWORD *)v29 + 1) = v16;
      *((_WORD *)v29 + 4) = v17;
      *((_WORD *)v29 + 5) = v18;
      *((_OWORD *)v29 + 1) = v31;
      *((_DWORD *)v29 + 8) = v19;
      swift_release();
      unint64_t result = swift_unknownObjectRelease();
      *(void *)uint64_t v1 = v28;
      *(void *)(v1 + 8) = v22;
      *(void *)(v1 + 16) = v30;
    }
  }
  return result;
}

uint64_t sub_1B6AED6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __int16 v13 = (long long *)(a1 + 1432);
  uint64_t v14 = a2 + 40;
  sub_1B69A1D74(a2 + 40, (uint64_t)&v95);
  if (v96)
  {
    int v91 = a5;
    sub_1B62C15C4(&v95, (uint64_t)v97);
    if (*(void *)(a1 + 1456)
      && (uint64_t v99 = *(void *)(a1 + 1464)) != 0
      && (*(unsigned char *)(a3 + 537) & 1) != 0
      && (*((unsigned char *)v13 + 40) & 1) == 0)
    {
      char v77 = a4;
      uint64_t v78 = v13;
      long long v31 = (void *)*sub_1B62C14BC(v97, v98);
      swift_unknownObjectRetain();
      id v90 = sub_1B6B663A8(2u, 0x65626F7250766E65, 0xED0000656C626154, v31);
      uint64_t v75 = v33;
      uint64_t v76 = v32;
      id v88 = (id)*sub_1B62C14BC(v97, v98);
      if (qword_1E9DCC588 != -1) {
        swift_once();
      }
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0x4578614D63657073, 0xED000070614D7373);
        if (v34) {
          swift_bridgeObjectRetain();
        }
      }
      id v35 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v87 = objc_msgSend(v88, sel_texture::, 4, v35);

      uint64_t v36 = (void **)sub_1B62C14BC(v97, v98);
      id v89 = sub_1B6B663A8(4u, 0xD000000000000012, 0x80000001B6F46590, *v36);
      uint64_t v73 = v38;
      uint64_t v74 = v37;
      uint64_t v39 = (void **)sub_1B62C14BC(v97, v98);
      id v86 = sub_1B6B663A8(2u, 0xD000000000000011, 0x80000001B6F30AC0, *v39);
      uint64_t v71 = v41;
      uint64_t v72 = v40;
      uint64_t v42 = (void *)*sub_1B62C14BC(v97, v98);
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0xD000000000000010, 0x80000001B6F30A40);
        if (v43) {
          swift_bridgeObjectRetain();
        }
      }
      id v44 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v85 = objc_msgSend(v42, sel_texture::, 6, v44);

      uint64_t v45 = (void *)*sub_1B62C14BC(v97, v98);
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0xD000000000000011, 0x80000001B6F465B0);
        if (v46) {
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v47 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v84 = objc_msgSend(v45, sel_texture::, 2, v47);

      uint64_t v48 = (void *)*sub_1B62C14BC(v97, v98);
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0xD000000000000014, 0x80000001B6F465D0);
        if (v49) {
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v50 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v83 = objc_msgSend(v48, sel_texture::, 2, v50);

      id v81 = (id)*sub_1B62C14BC(v97, v98);
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0xD000000000000014, 0x80000001B6F465F0);
        if (v51) {
          swift_bridgeObjectRetain();
        }
      }
      char v52 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v82 = objc_msgSend(v81, sel_texture::, 2, v52);

      int v53 = (void **)sub_1B62C14BC(v97, v98);
      id v80 = sub_1B6B663A8(3u, 0xD000000000000014, 0x80000001B6F46610, *v53);
      uint64_t v69 = v55;
      uint64_t v70 = v54;
      uint64_t v56 = (void **)sub_1B62C14BC(v97, v98);
      id v79 = sub_1B6B663A8(3u, 0xD000000000000015, 0x80000001B6F46630, *v56);
      uint64_t v67 = v58;
      uint64_t v68 = v57;
      id v65 = (id)*sub_1B62C14BC(v97, v98);
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0x6D656E6F54707369, 0xED000054554C7061);
        if (v59) {
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v60 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v66 = objc_msgSend(v65, sel_texture::, 1, v60);

      uint64_t v61 = (void *)*sub_1B62C14BC(v97, v98);
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0x614D7265746C6966, 0xE900000000000070);
        if (v62) {
          swift_bridgeObjectRetain();
        }
      }
      id v63 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v64 = objc_msgSend(v61, sel_texture::, 2, v63);

      swift_getObjectType();
      sub_1B637289C((uint64_t)v90, v76, v75, 0, 500, (unint64_t *)(a1 + 1456));
      sub_1B62EC1A8((uint64_t)v87, 504, (unint64_t *)(a1 + 1456));
      sub_1B637289C((uint64_t)v89, v74, v73, 0, 505, (unint64_t *)(a1 + 1456));
      sub_1B637289C((uint64_t)v86, v72, v71, 0, 506, (unint64_t *)(a1 + 1456));
      sub_1B62EC1A8((uint64_t)v85, 507, (unint64_t *)(a1 + 1456));
      sub_1B62EC1A8((uint64_t)v84, 501, (unint64_t *)(a1 + 1456));
      sub_1B62EC1A8((uint64_t)v83, 502, (unint64_t *)(a1 + 1456));
      sub_1B62EC1A8((uint64_t)v82, 503, (unint64_t *)(a1 + 1456));
      sub_1B637289C((uint64_t)v80, v70, v69, 0, 526, (unint64_t *)(a1 + 1456));
      sub_1B637289C((uint64_t)v79, v68, v67, 0, 525, (unint64_t *)(a1 + 1456));
      sub_1B62EC1A8((uint64_t)v66, 513, (unint64_t *)(a1 + 1456));
      sub_1B62EC1A8((uint64_t)v64, 514, (unint64_t *)(a1 + 1456));
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      __int16 v13 = v78;
      *((unsigned char *)v78 + 40) = 1;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
      a4 = v77;
      a5 = v91;
    }
    else
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
    }
  }
  else
  {
    sub_1B69A1E04((uint64_t)&v95);
  }
  sub_1B69A1D74(v14, (uint64_t)&v95);
  if (v96)
  {
    char v15 = a4;
    sub_1B62C15C4(&v95, (uint64_t)v97);
    uint64_t v16 = *(void *)(a1 + 1592);
    if (v16)
    {
      swift_bridgeObjectRetain();
      sub_1B6A4E3F0(a1 + 1520, v16, v15);
      swift_bridgeObjectRelease();
    }
    *(_WORD *)(a1 + 1520) = sub_1B6D5E834(a5);
    sub_1B6AED344(a1 + 1488);
    if (*(void *)(a1 + 1576))
    {
      __int16 v17 = v13;
      __int16 v18 = (void *)*sub_1B62C14BC(v97, v98);
      uint64_t v19 = qword_1E9DCC588;
      swift_unknownObjectRetain();
      if (v19 != -1) {
        swift_once();
      }
      if (*(void *)(qword_1E9E49628 + 16))
      {
        sub_1B62B2CE0(0x6B73614D7442, 0xE600000000000000);
        if (v20) {
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v24 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v25 = objc_msgSend(v18, sel_texture::, 6, v24);

      uint64_t ObjectType = swift_getObjectType();
      sub_1B62EC1A8((uint64_t)v25, 570, (unint64_t *)(a1 + 1568));
      if ((a6 & 0x100000000) == 0)
      {
        LODWORD(v95) = a6;
        sub_1B62EC4C0((uint64_t)&v95, 553, ObjectType, MEMORY[0x1E4FBB470]);
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      __int16 v13 = v17;
    }
    uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
    if (*(void *)(a1 + 1408)) {
      goto LABEL_23;
    }
LABEL_18:
    uint64_t v22 = 0;
    long long v23 = 0uLL;
    goto LABEL_24;
  }
  uint64_t result = sub_1B69A1E04((uint64_t)&v95);
  if (!*(void *)(a1 + 1408)) {
    goto LABEL_18;
  }
LABEL_23:
  long long v92 = *(_OWORD *)(a1 + 1328);
  uint64_t v22 = *(void *)(a1 + 1344);
  uint64_t result = swift_unknownObjectRetain();
  long long v23 = v92;
LABEL_24:
  *(_OWORD *)a7 = v23;
  *(void *)(a7 + 16) = v22;
  if (*(void *)(a1 + 1456))
  {
    long long v93 = *v13;
    uint64_t v27 = *(void *)(a1 + 1448);
    uint64_t result = swift_unknownObjectRetain();
    long long v28 = v93;
  }
  else
  {
    uint64_t v27 = 0;
    long long v28 = 0uLL;
  }
  *(_OWORD *)(a7 + 24) = v28;
  *(void *)(a7 + 40) = v27;
  if (*(void *)(a1 + 1568))
  {
    long long v94 = *(_OWORD *)(a1 + 1488);
    uint64_t v29 = *(void *)(a1 + 1504);
    uint64_t result = swift_unknownObjectRetain();
    long long v30 = v94;
  }
  else
  {
    uint64_t v29 = 0;
    long long v30 = 0uLL;
  }
  *(_OWORD *)(a7 + 48) = v30;
  *(void *)(a7 + 64) = v29;
  *(void *)(a7 + 72) = 0;
  *(void *)(a7 + 80) = 0;
  *(void *)(a7 + 88) = 0;
  return result;
}

unint64_t sub_1B6AEE23C()
{
  unint64_t result = qword_1EB97D7C0;
  if (!qword_1EB97D7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D7C0);
  }
  return result;
}

unint64_t sub_1B6AEE290()
{
  unint64_t result = qword_1E9DD53F8;
  if (!qword_1E9DD53F8)
  {
    type metadata accessor for view_constants(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD53F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BindError()
{
  return &type metadata for BindError;
}

uint64_t sub_1B6AEE2E0()
{
  return type metadata accessor for MathNode(0);
}

uint64_t type metadata accessor for MathNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5400);
}

void sub_1B6AEE308()
{
}

uint64_t sub_1B6AEE354()
{
  return type metadata accessor for ArithmeticOperatorNode(0);
}

uint64_t type metadata accessor for ArithmeticOperatorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5410);
}

uint64_t sub_1B6AEE37C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_1B6AEE3A0(char a1)
{
  return (*(uint64_t (**)(void))(*(void *)v1 + 248))(a1 & 1);
}

__n128 sub_1B6AEE3C8@<Q0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E76B30;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v3 + 32) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v3 + 40) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v6 + 32) = v7 | 0x4000000000000000;
  uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v1 + 256))();
  uint64_t v9 = swift_allocObject();
  __n128 result = (__n128)xmmword_1B6E76B30;
  *(_OWORD *)(v9 + 16) = xmmword_1B6E76B30;
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = 0x8000000000000000;
  *a1 = v3;
  a1[1] = v6;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a1[2] = v9;
  a1[3] = v11;
  a1[4] = v11;
  a1[5] = v11;
  return result;
}

uint64_t sub_1B6AEE518()
{
  return type metadata accessor for ArithmeticBinaryOperatorNode(0);
}

uint64_t type metadata accessor for ArithmeticBinaryOperatorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5420);
}

uint64_t sub_1B6AEE540()
{
  return 6579265;
}

uint64_t sub_1B6AEE550()
{
  return 0x3125202B203025;
}

uint64_t sub_1B6AEE568()
{
  return type metadata accessor for AddNode(0);
}

uint64_t type metadata accessor for AddNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5430);
}

uint64_t sub_1B6AEE590()
{
  return 0x7463617274627553;
}

uint64_t sub_1B6AEE5A8()
{
  return 0x3125202D203025;
}

uint64_t sub_1B6AEE5C0()
{
  return type metadata accessor for SubNode(0);
}

uint64_t type metadata accessor for SubNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5440);
}

uint64_t sub_1B6AEE5E8()
{
  return 0x796C7069746C754DLL;
}

uint64_t sub_1B6AEE600()
{
  return 0x3125202A203025;
}

uint64_t sub_1B6AEE618()
{
  return type metadata accessor for MulNode(0);
}

uint64_t type metadata accessor for MulNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5450);
}

uint64_t sub_1B6AEE640()
{
  return 0x656469766944;
}

uint64_t sub_1B6AEE654(char a1)
{
  uint64_t v3 = v1[3];
  unint64_t v4 = *(void *)(v3 + 32);
  uint64_t v5 = *v1;
  sub_1B68289A0(v3);
  sub_1B67C52A4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B69AFB0C(v4, (uint64_t)&v9, 0.0);
  if (a1) {
    uint64_t v6 = 0x6C616D726F6E7369;
  }
  else {
    uint64_t v6 = 0x6E73695F67745F5FLL;
  }
  if (a1) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xED00006C616D726FLL;
  }
  sub_1B6C0AB84(v4, (uint64_t)&v9, a1 & 1, v5, (uint64_t)&off_1F0F8C1A8);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v9);
  if (v4 >> 60 == 1 && *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18) >> 60 != 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0x656C65735F786676;
    unint64_t v10 = 0xEB00000000287463;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((sub_1B69B18E4(v4, 0x8000000000000050) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0x203D3D203125;
    unint64_t v10 = 0xE600000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1B6E31948();
    goto LABEL_14;
  }
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v9 = v6;
  unint64_t v10 = v7;
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
LABEL_14:
  sub_1B678FC34(v4);
  return v9;
}

uint64_t sub_1B6AEE93C()
{
  return type metadata accessor for DivNode(0);
}

uint64_t type metadata accessor for DivNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5460);
}

uint64_t sub_1B6AEE964()
{
  return 0x65646E69616D6552;
}

uint64_t sub_1B6AEE980(char a1)
{
  uint64_t v3 = v1[3];
  unint64_t v4 = *(void *)(v3 + 32);
  uint64_t v5 = *v1;
  sub_1B68289A0(v3);
  sub_1B67C52A4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B69AFB0C(v4, (uint64_t)&v9, 0.0);
  if (a1) {
    uint64_t v6 = 0x6C616D726F6E7369;
  }
  else {
    uint64_t v6 = 0x6E73695F67745F5FLL;
  }
  if (a1) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xED00006C616D726FLL;
  }
  sub_1B6C0AB84(v4, (uint64_t)&v9, a1 & 1, v5, (uint64_t)&off_1F0F8C1A8);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v9);
  if (v4 >> 60 == 1 && *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18) >> 60 != 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0x656C65735F786676;
    unint64_t v10 = 0xEB00000000287463;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((sub_1B69B18E4(v4, 0x8000000000000050) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0x203D3D203125;
    unint64_t v10 = 0xE600000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1B6E31948();
    goto LABEL_14;
  }
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v9 = v6;
  unint64_t v10 = v7;
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
LABEL_14:
  sub_1B678FC34(v4);
  return v9;
}

uint64_t sub_1B6AEED14()
{
  return type metadata accessor for RemainderNode(0);
}

uint64_t type metadata accessor for RemainderNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5470);
}

uint64_t sub_1B6AEED3C()
{
  return 0x746E6569746F7551;
}

unint64_t sub_1B6AEED54()
{
  return 0xD000000000000017;
}

uint64_t sub_1B6AEED70()
{
  return type metadata accessor for QuotientNode(0);
}

uint64_t type metadata accessor for QuotientNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5480);
}

uint64_t sub_1B6AEED98()
{
  return 1685015878;
}

unint64_t sub_1B6AEEDA8()
{
  return 0x8000000000000020;
}

uint64_t sub_1B6AEEDB4(char a1)
{
  uint64_t v3 = *v1;
  char v4 = a1 & 1;
  uint64_t v5 = v1[3];
  unint64_t v6 = *(void *)(v5 + 32);
  sub_1B68289A0(v5);
  sub_1B67C52A4(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B69AFB0C(v6, (uint64_t)&v9, 0.0);
  sub_1B6C0AB84(v6, (uint64_t)&v9, v4, v3, (uint64_t)&off_1F0F8C1A8);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v9);
  if (a1)
  {
    swift_bridgeObjectRelease();
    sub_1B678FC34(v6);
    return 0x2C302528646F6D66;
  }
  else
  {
    unint64_t v7 = 0xD000000000000011;
    if (v6 >> 60 == 1 && *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x18) >> 60 != 1)
    {
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      uint64_t v9 = 0x656C65735F786676;
      unint64_t v10 = 0xEB00000000287463;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B678FC34(v6);
      return v9;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B678FC34(v6);
    }
  }
  return v7;
}

uint64_t sub_1B6AEEFC4()
{
  return type metadata accessor for FModNode(0);
}

uint64_t type metadata accessor for FModNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5490);
}

uint64_t sub_1B6AEEFEC()
{
  return 7235917;
}

uint64_t sub_1B6AEEFFC(char a1)
{
  if (a1) {
    return 0x202C3025286E696DLL;
  }
  else {
    return 0x286E696D5F786676;
  }
}

uint64_t sub_1B6AEF048()
{
  return type metadata accessor for MinNode(0);
}

uint64_t type metadata accessor for MinNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD54A0);
}

uint64_t sub_1B6AEF070()
{
  return 7889229;
}

uint64_t sub_1B6AEF080(char a1)
{
  if (a1) {
    return 0x202C30252878616DLL;
  }
  else {
    return 0x2878616D5F786676;
  }
}

uint64_t sub_1B6AEF0CC()
{
  return type metadata accessor for MaxNode(0);
}

uint64_t type metadata accessor for MaxNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD54B0);
}

uint64_t sub_1B6AEF0F4()
{
  return 7827280;
}

uint64_t sub_1B6AEF104()
{
  return 0x28776F705F786676;
}

uint64_t sub_1B6AEF128()
{
  return type metadata accessor for PowNode(0);
}

uint64_t type metadata accessor for PowNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD54C0);
}

uint64_t sub_1B6AEF150()
{
  return 1851872321;
}

unint64_t sub_1B6AEF160()
{
  return 0xD000000000000011;
}

uint64_t sub_1B6AEF17C()
{
  return type metadata accessor for ATan2Node(0);
}

uint64_t type metadata accessor for ATan2Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD54D0);
}

uint64_t sub_1B6AEF1A4()
{
  return 1885697107;
}

unint64_t sub_1B6AEF1B4()
{
  return 0xD000000000000010;
}

uint64_t sub_1B6AEF1D0()
{
  return type metadata accessor for StepNode(0);
}

uint64_t type metadata accessor for StepNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD54E0);
}

uint64_t sub_1B6AEF1F8()
{
  return 0x65636E6174736944;
}

unint64_t sub_1B6AEF210()
{
  return 0x8000000000000028;
}

unint64_t sub_1B6AEF21C()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6AEF238()
{
  return type metadata accessor for DistanceNode(0);
}

uint64_t type metadata accessor for DistanceNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD54F0);
}

uint64_t sub_1B6AEF260()
{
  return 0x65636E6174736944;
}

unint64_t sub_1B6AEF284()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1B6AEF2A0()
{
  return type metadata accessor for DistanceSquaredNode(0);
}

uint64_t type metadata accessor for DistanceSquaredNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5500);
}

uint64_t sub_1B6AEF2C8()
{
  return 0x74736F6D6C417349;
}

unint64_t sub_1B6AEF2EC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1B6AEF308()
{
  return type metadata accessor for IsAlmostEqualNode(0);
}

uint64_t type metadata accessor for IsAlmostEqualNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5510);
}

uint64_t sub_1B6AEF330()
{
  return 0x6F725073736F7243;
}

uint64_t sub_1B6AEF350()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v0 + 16) = v1 | 0x1000000000000000;
  return v0 | 0x6000000000000000;
}

uint64_t sub_1B6AEF3B0(char a1)
{
  if (a1) {
    return 0x30252873736F7263;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1B6AEF3F8()
{
  return type metadata accessor for CrossProductNode(0);
}

uint64_t type metadata accessor for CrossProductNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5520);
}

uint64_t sub_1B6AEF420()
{
  return 0x75646F7250746F44;
}

uint64_t sub_1B6AEF43C(char a1)
{
  if (a1) {
    return 0x202C302528746F64;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1B6AEF480()
{
  return type metadata accessor for DotProductNode(0);
}

uint64_t type metadata accessor for DotProductNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5530);
}

uint64_t sub_1B6AEF4A8()
{
  return 0x71536874676E654CLL;
}

uint64_t sub_1B6AEF4CC(char a1)
{
  if (a1) {
    return 0x202C302528746F64;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1B6AEF510()
{
  return type metadata accessor for LengthSquaredNode(0);
}

uint64_t type metadata accessor for LengthSquaredNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5540);
}

double sub_1B6AEF538@<D0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v3 + 32) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v5 + 32) = v6 | 0x4000000000000000;
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v1 + 256))();
  uint64_t v8 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v8 + 16) = xmmword_1B6E76B30;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = 0x8000000000000000;
  *a1 = v3;
  a1[1] = v5;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  a1[2] = v8;
  a1[3] = v10;
  a1[4] = v10;
  a1[5] = v10;
  return result;
}

double sub_1B6AEF66C@<D0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77D10;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v3 + 32) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v3 + 40) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v3 + 48) = v6 | 0x4000000000000000;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v7 + 32) = v8 | 0x4000000000000000;
  uint64_t v9 = (*(uint64_t (**)(void))(*(void *)v1 + 256))();
  uint64_t v10 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v10 + 16) = xmmword_1B6E76B30;
  *(void *)(v10 + 32) = v9;
  *(void *)(v10 + 40) = 0x8000000000000000;
  *a1 = v3;
  a1[1] = v7;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  a1[2] = v10;
  a1[3] = v12;
  a1[4] = v12;
  a1[5] = v12;
  return result;
}

uint64_t sub_1B6AEF7D0()
{
  return type metadata accessor for ArithmeticTernaryOperatorNode(0);
}

uint64_t type metadata accessor for ArithmeticTernaryOperatorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5550);
}

uint64_t sub_1B6AEF7F8()
{
  return 862873933;
}

unint64_t sub_1B6AEF808(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0xD00000000000001CLL;
  }
}

uint64_t sub_1B6AEF844()
{
  return type metadata accessor for Min3Node(0);
}

uint64_t type metadata accessor for Min3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5560);
}

uint64_t sub_1B6AEF86C()
{
  return 863527245;
}

unint64_t sub_1B6AEF87C(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0xD00000000000001CLL;
  }
}

uint64_t sub_1B6AEF8B8()
{
  return type metadata accessor for Max3Node(0);
}

uint64_t type metadata accessor for Max3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5570);
}

uint64_t sub_1B6AEF8E0()
{
  return 0x745368746F6F6D53;
}

unint64_t sub_1B6AEF8FC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B6AEF918()
{
  return type metadata accessor for SmoothStepNode(0);
}

uint64_t type metadata accessor for SmoothStepNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5580);
}

uint64_t sub_1B6AEF940()
{
  return 0x6464416C754DLL;
}

unint64_t sub_1B6AEF954()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6AEF970()
{
  return type metadata accessor for MulAddNode(0);
}

uint64_t type metadata accessor for MulAddNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5590);
}

uint64_t sub_1B6AEF998()
{
  return 0x706D616C43;
}

unint64_t sub_1B6AEF9AC()
{
  return 0xD000000000000015;
}

uint64_t sub_1B6AEF9C8()
{
  return type metadata accessor for ClampNode(0);
}

uint64_t type metadata accessor for ClampNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD55A0);
}

uint64_t sub_1B6AEF9F0()
{
  return type metadata accessor for ArithmeticUnaryOperatorNode(0);
}

uint64_t type metadata accessor for ArithmeticUnaryOperatorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD55B0);
}

uint64_t sub_1B6AEFA18()
{
  return 0x6E61696461526F54;
}

unint64_t sub_1B6AEFA34()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6AEFA50()
{
  return type metadata accessor for ToRadiansNode(0);
}

uint64_t type metadata accessor for ToRadiansNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD55C0);
}

uint64_t sub_1B6AEFA78()
{
  return 0x6565726765446F54;
}

uint64_t sub_1B6AEFA94()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x8000000000000050;
  return v0 | 0x6000000000000000;
}

unint64_t sub_1B6AEFACC()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6AEFAE8()
{
  return type metadata accessor for ToDegreesNode(0);
}

uint64_t type metadata accessor for ToDegreesNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD55D0);
}

uint64_t sub_1B6AEFB10()
{
  return 1953657171;
}

uint64_t sub_1B6AEFB20()
{
  return 0x747271735F786676;
}

uint64_t sub_1B6AEFB40()
{
  return type metadata accessor for SqrtNode(0);
}

uint64_t type metadata accessor for SqrtNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD55E0);
}

uint64_t sub_1B6AEFB68()
{
  return 0x7463617246;
}

uint64_t sub_1B6AEFB7C()
{
  return 0x636172665F786676;
}

uint64_t sub_1B6AEFBA0()
{
  return type metadata accessor for FractNode(0);
}

uint64_t type metadata accessor for FractNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD55F0);
}

uint64_t sub_1B6AEFBC8()
{
  return 0x73756E694D656E4FLL;
}

uint64_t sub_1B6AEFBE0(char a1)
{
  uint64_t v2 = *v1;
  char v3 = a1 & 1;
  uint64_t v4 = v1[3];
  unint64_t v5 = *(void *)(v4 + 32);
  sub_1B68289A0(v4);
  sub_1B67C52A4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B69AFB0C(v5, (uint64_t)v10, 1.0);
  uint64_t v6 = sub_1B6C0AB84(v5, (uint64_t)v10, v3, v2, (uint64_t)&off_1F0F8C1A8);
  uint64_t v8 = v7;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v10);
  swift_bridgeObjectRelease();
  v10[0] = v6;
  v10[1] = v8;
  sub_1B6E31948();
  sub_1B678FC34(v5);
  return v10[0];
}

uint64_t sub_1B6AEFCDC()
{
  return type metadata accessor for OneMinusNode(0);
}

uint64_t type metadata accessor for OneMinusNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5600);
}

uint64_t sub_1B6AEFD04()
{
  return 846688080;
}

uint64_t sub_1B6AEFD14()
{
  return 0x32776F705F786676;
}

uint64_t sub_1B6AEFD34()
{
  return type metadata accessor for Pow2Node(0);
}

uint64_t type metadata accessor for Pow2Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5610);
}

uint64_t sub_1B6AEFD5C()
{
  return 863465296;
}

uint64_t sub_1B6AEFD6C()
{
  return 0x33776F705F786676;
}

uint64_t sub_1B6AEFD8C()
{
  return type metadata accessor for Pow3Node(0);
}

uint64_t type metadata accessor for Pow3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5620);
}

uint64_t sub_1B6AEFDB4()
{
  return 0x646E756F52;
}

uint64_t sub_1B6AEFDC8(char a1)
{
  if (a1) {
    return 0x302528646E756F72;
  }
  else {
    return 0x252866646E756F72;
  }
}

uint64_t sub_1B6AEFE08()
{
  return type metadata accessor for RoundNode(0);
}

uint64_t type metadata accessor for RoundNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5630);
}

uint64_t sub_1B6AEFE30()
{
  return 1852270931;
}

uint64_t sub_1B6AEFE40()
{
  return 0x6E6769735F786676;
}

uint64_t sub_1B6AEFE60()
{
  return type metadata accessor for SignNode(0);
}

uint64_t type metadata accessor for SignNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5640);
}

uint64_t sub_1B6AEFE88()
{
  return 7561793;
}

uint64_t sub_1B6AEFE98(char a1)
{
  uint64_t v2 = 0x287362615F786676;
  if (a1)
  {
    uint64_t v3 = *(void *)(v1 + 24);
    unint64_t v4 = *(void *)(v3 + 32);
    sub_1B68289A0(v3);
    sub_1B67C52A4(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v5 = v4 + 0x7FFFFFFFFFFFFFD0 > 0x10 || ((1 << (v4 - 48)) & 0x10101) == 0;
    uint64_t v6 = 0x29302528736261;
    if (v5) {
      uint64_t v6 = 0x287362615F786676;
    }
    if (v4 >> 60 == 8) {
      uint64_t v2 = v6;
    }
    sub_1B678FC34(v4);
  }
  return v2;
}

uint64_t sub_1B6AEFF74()
{
  return type metadata accessor for AbsNode(0);
}

uint64_t type metadata accessor for AbsNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5650);
}

uint64_t sub_1B6AEFF9C()
{
  return 0x726F6F6C46;
}

uint64_t sub_1B6AEFFB0()
{
  return 0x6F6F6C665F786676;
}

uint64_t sub_1B6AEFFD4()
{
  return type metadata accessor for FloorNode(0);
}

uint64_t type metadata accessor for FloorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5660);
}

uint64_t sub_1B6AEFFFC()
{
  return 0x28676F6C5F786676;
}

uint64_t sub_1B6AF001C()
{
  return type metadata accessor for LogNode(0);
}

uint64_t type metadata accessor for LogNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5670);
}

uint64_t sub_1B6AF0044()
{
  return 7370821;
}

uint64_t sub_1B6AF0054()
{
  return 0x287078655F786676;
}

uint64_t sub_1B6AF0074()
{
  return type metadata accessor for ExpNode(0);
}

uint64_t type metadata accessor for ExpNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5680);
}

uint64_t sub_1B6AF009C()
{
  return 846231621;
}

uint64_t sub_1B6AF00AC()
{
  return 0x327078655F786676;
}

uint64_t sub_1B6AF00CC()
{
  return type metadata accessor for Exp2Node(0);
}

uint64_t type metadata accessor for Exp2Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5690);
}

uint64_t sub_1B6AF00F4()
{
  return 0x3031707845;
}

uint64_t sub_1B6AF0108()
{
  return 0x317078655F786676;
}

uint64_t sub_1B6AF012C()
{
  return type metadata accessor for Exp10Node(0);
}

uint64_t type metadata accessor for Exp10Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD56A0);
}

uint64_t sub_1B6AF0154()
{
  return 7565123;
}

uint64_t sub_1B6AF0164()
{
  return 0x28736F635F786676;
}

uint64_t sub_1B6AF0184()
{
  return type metadata accessor for CosNode(0);
}

uint64_t type metadata accessor for CosNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD56B0);
}

uint64_t sub_1B6AF01AC()
{
  return 7235923;
}

uint64_t sub_1B6AF01BC()
{
  return 0x286E69735F786676;
}

uint64_t sub_1B6AF01DC()
{
  return type metadata accessor for SinNode(0);
}

uint64_t type metadata accessor for SinNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD56C0);
}

uint64_t sub_1B6AF0204()
{
  return 1852396353;
}

uint64_t sub_1B6AF0214()
{
  return 0x6E6973615F786676;
}

uint64_t sub_1B6AF0234()
{
  return type metadata accessor for ASinNode(0);
}

uint64_t type metadata accessor for ASinNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD56D0);
}

uint64_t sub_1B6AF025C()
{
  return 1936671553;
}

uint64_t sub_1B6AF026C()
{
  return 0x736F63615F786676;
}

uint64_t sub_1B6AF028C()
{
  return type metadata accessor for ACosNode(0);
}

uint64_t type metadata accessor for ACosNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD56E0);
}

uint64_t sub_1B6AF02B4()
{
  return 1818846531;
}

uint64_t sub_1B6AF02C4()
{
  return 0x6C6965635F786676;
}

uint64_t sub_1B6AF02E4()
{
  return type metadata accessor for CeilNode(0);
}

uint64_t type metadata accessor for CeilNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD56F0);
}

uint64_t sub_1B6AF030C()
{
  return 7233876;
}

uint64_t sub_1B6AF031C()
{
  return 0x286E61745F786676;
}

uint64_t sub_1B6AF033C()
{
  return type metadata accessor for TanNode(0);
}

uint64_t type metadata accessor for TanNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5700);
}

uint64_t sub_1B6AF0364()
{
  return 0x6E6174615F786676;
}

uint64_t sub_1B6AF0384()
{
  return type metadata accessor for ATanNode(0);
}

uint64_t type metadata accessor for ATanNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5710);
}

uint64_t sub_1B6AF03AC()
{
  return 0x6874676E654CLL;
}

uint64_t sub_1B6AF03C0(char a1)
{
  if (a1) {
    return 0x25286874676E656CLL;
  }
  else {
    return 0x6E656C5F646D6973;
  }
}

uint64_t sub_1B6AF0408()
{
  return type metadata accessor for LengthNode(0);
}

uint64_t type metadata accessor for LengthNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5720);
}

uint64_t sub_1B6AF0430()
{
  return 0x74736F6D6C417349;
}

unint64_t sub_1B6AF0450()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6AF046C()
{
  return type metadata accessor for IsAlmostZeroNode(0);
}

uint64_t type metadata accessor for IsAlmostZeroNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5730);
}

unint64_t sub_1B6AF0494()
{
  return 0xD000000000000010;
}

uint64_t sub_1B6AF04B0()
{
  return type metadata accessor for SaturateNode(0);
}

uint64_t type metadata accessor for SaturateNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5740);
}

uint64_t sub_1B6AF04D8()
{
  return 0x615364656E676953;
}

uint64_t sub_1B6AF04FC(char a1)
{
  uint64_t v2 = *v1;
  char v3 = a1 & 1;
  uint64_t v4 = v1[3];
  unint64_t v5 = *(void *)(v4 + 32);
  sub_1B68289A0(v4);
  sub_1B67C52A4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B69AFB0C(v5, (uint64_t)v7, 1.0);
  sub_1B6C0AB84(v5, (uint64_t)v7, v3, v2, (uint64_t)&off_1F0F8C1A8);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  sub_1B69AFB0C(v5, (uint64_t)v7, -1.0);
  sub_1B6C0AB84(v5, (uint64_t)v7, v3, v2, (uint64_t)&off_1F0F8C1A8);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  strcpy((char *)v7, "vfx_clamp(%0, ");
  HIBYTE(v7[1]) = -18;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B678FC34(v5);
  return v7[0];
}

uint64_t sub_1B6AF06A8()
{
  return type metadata accessor for SignedSaturateNode(0);
}

uint64_t type metadata accessor for SignedSaturateNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5750);
}

uint64_t sub_1B6AF06D0()
{
  return 0x7A696C616D726F4ELL;
}

unint64_t sub_1B6AF06EC()
{
  return 0xD000000000000018;
}

uint64_t sub_1B6AF0708()
{
  return type metadata accessor for NormalizedNode(0);
}

uint64_t type metadata accessor for NormalizedNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5760);
}

unint64_t sub_1B6AF0730()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6AF074C()
{
  return type metadata accessor for QNormalizedNode(0);
}

uint64_t type metadata accessor for QNormalizedNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5770);
}

uint64_t sub_1B6AF0774()
{
  return 0x746167756A6E6F43;
}

uint64_t sub_1B6AF0790()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x8000000000000028;
  return v0 | 0x6000000000000000;
}

unint64_t sub_1B6AF07C8()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6AF07E4()
{
  return type metadata accessor for ConjugateNode(0);
}

uint64_t type metadata accessor for ConjugateNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5780);
}

uint64_t sub_1B6AF080C()
{
  return 28236;
}

uint64_t sub_1B6AF0818()
{
  return 0x746175715F786676;
}

uint64_t sub_1B6AF083C()
{
  return type metadata accessor for QLnNode(0);
}

uint64_t type metadata accessor for QLnNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5790);
}

uint64_t sub_1B6AF0864()
{
  return type metadata accessor for QExpNode(0);
}

uint64_t type metadata accessor for QExpNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD57A0);
}

uint64_t sub_1B6AF088C()
{
  return 0x676E4172656C7545;
}

double sub_1B6AF08AC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF0A7C((uint64_t)&unk_1F0F68698, a1, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF08C0()
{
  return 0xD000000000000015;
}

uint64_t sub_1B6AF08DC()
{
  return type metadata accessor for EulerAnglesNode(0);
}

uint64_t type metadata accessor for EulerAnglesNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD57B0);
}

uint64_t sub_1B6AF0904()
{
  return 0x6C676E4173697841;
}

double sub_1B6AF0920@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF0A7C((uint64_t)&unk_1F0F5E140, a1, (__n128)xmmword_1B6E8DAD0).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF0934()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B6AF0950()
{
  return type metadata accessor for AxisAngleNode(0);
}

uint64_t type metadata accessor for AxisAngleNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD57C0);
}

uint64_t sub_1B6AF0978()
{
  return 1936291905;
}

double sub_1B6AF0988@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF0A7C((uint64_t)&unk_1F0FA30D0, a1, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF099C()
{
  return 0xD000000000000011;
}

uint64_t sub_1B6AF09B8()
{
  return type metadata accessor for AxisNode(0);
}

uint64_t type metadata accessor for AxisNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD57D0);
}

uint64_t sub_1B6AF09E0()
{
  return 0x656C676E41;
}

uint64_t sub_1B6AF09F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF2C18(0x8000000000000050, (uint64_t)&unk_1F0F53800, a1);
}

unint64_t sub_1B6AF0A08()
{
  return 0xD000000000000012;
}

uint64_t sub_1B6AF0A24()
{
  return type metadata accessor for QAngleNode(0);
}

uint64_t type metadata accessor for QAngleNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD57E0);
}

uint64_t sub_1B6AF0A4C()
{
  return 0x78416C616D726F4ELL;
}

double sub_1B6AF0A68@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF0A7C((uint64_t)&unk_1F0F64AE0, a1, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

__n128 sub_1B6AF0A7C@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  sub_1B6A848B0();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0x8000000000000028;
  *(void *)(v5 + 32) = v6 | 0x6000000000000000;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = swift_allocObject();
  __n128 result = a3;
  *(__n128 *)(v9 + 16) = a3;
  *(void *)(v8 + 16) = v9 | 0x1000000000000000;
  *(void *)(v7 + 32) = v8 | 0x6000000000000000;
  *a2 = v5;
  a2[1] = v7;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a2[2] = a1;
  a2[3] = v11;
  a2[4] = v11;
  a2[5] = v11;
  return result;
}

unint64_t sub_1B6AF0B84()
{
  return 0xD000000000000024;
}

uint64_t sub_1B6AF0BA0()
{
  return type metadata accessor for NormalAxisNode(0);
}

uint64_t type metadata accessor for NormalAxisNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD57F0);
}

uint64_t sub_1B6AF0BC8()
{
  return 0x7553656375646552;
}

uint64_t sub_1B6AF0BE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF0C5C((uint64_t)&unk_1F0F61818, a1);
}

unint64_t sub_1B6AF0BF0()
{
  return 0xD000000000000012;
}

uint64_t sub_1B6AF0C0C()
{
  return type metadata accessor for ReduceSumNode(0);
}

uint64_t type metadata accessor for ReduceSumNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5800);
}

uint64_t sub_1B6AF0C34()
{
  return 0x754D656375646552;
}

uint64_t sub_1B6AF0C50@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF0C5C((uint64_t)&unk_1F0F617E8, a1);
}

uint64_t sub_1B6AF0C5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B6A848B0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v4 + 32) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000050;
  *(void *)(v6 + 32) = result | 0x6000000000000000;
  *a2 = v4;
  a2[1] = v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a2[2] = a1;
  a2[3] = v8;
  a2[4] = v8;
  a2[5] = v8;
  return result;
}

unint64_t sub_1B6AF0D34()
{
  return 0xD000000000000012;
}

uint64_t sub_1B6AF0D50()
{
  return type metadata accessor for ReduceMulNode(0);
}

uint64_t type metadata accessor for ReduceMulNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5810);
}

unint64_t sub_1B6AF0D78()
{
  return 0xD000000000000010;
}

__n128 sub_1B6AF0D94@<Q0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v3 + 16) = v4 | 0x1000000000000000;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E76B30;
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v6 + 16) = v7 | 0x1000000000000000;
  *(void *)(v5 + 32) = v6 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = swift_allocObject();
  __n128 result = (__n128)xmmword_1B6E8DAE0;
  *(_OWORD *)(v9 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v8 + 16) = v9 | 0x1000000000000000;
  *(void *)(v5 + 40) = v8 | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v5;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F80A80;
  a1[3] = v11;
  a1[4] = v11;
  a1[5] = v11;
  return result;
}

unint64_t sub_1B6AF0EFC()
{
  return 0xD0000000000000B0;
}

uint64_t sub_1B6AF0F18()
{
  return type metadata accessor for OrthonormalBasisNode(0);
}

uint64_t type metadata accessor for OrthonormalBasisNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5820);
}

uint64_t sub_1B6AF0F40()
{
  return 7891277;
}

double sub_1B6AF0F50@<D0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v2 + 32) = v3 | 0x4000000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v2 + 40) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 1;
  *(void *)(v2 + 48) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v6 + 32) = v7 | 0x4000000000000000;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0x8000000000000050;
  uint64_t v9 = v8 | 0x6000000000000000;
  uint64_t v10 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v10 + 16) = xmmword_1B6E76B30;
  *(void *)(v10 + 32) = 0x8000000000000020;
  *(void *)(v10 + 40) = v9;
  *a1 = v2;
  a1[1] = v6;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  a1[2] = v10;
  a1[3] = v12;
  a1[4] = v12;
  a1[5] = v12;
  return result;
}

unint64_t sub_1B6AF10A0()
{
  return 0xD000000000000013;
}

uint64_t sub_1B6AF10BC()
{
  return type metadata accessor for MixNode(0);
}

uint64_t type metadata accessor for MixNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5830);
}

uint64_t sub_1B6AF10E4()
{
  return 0x726F66736E617254;
}

double sub_1B6AF1100@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF2460((uint64_t)&unk_1F0F65000, a1).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF110C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1B6AF1128()
{
  return type metadata accessor for QTransformNode(0);
}

uint64_t type metadata accessor for QTransformNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5840);
}

uint64_t sub_1B6AF1150@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF2C18(0x8000000000000050, (uint64_t)&unk_1F0F56710, a1);
}

unint64_t sub_1B6AF1164()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6AF1180()
{
  return type metadata accessor for QLengthNode(0);
}

uint64_t type metadata accessor for QLengthNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5850);
}

uint64_t sub_1B6AF11A8()
{
  return 0x747265766E49;
}

uint64_t sub_1B6AF11BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF1294((uint64_t)&unk_1F0F558E0, a1);
}

uint64_t sub_1B6AF11C8()
{
  return 0x65766E695F786676;
}

uint64_t sub_1B6AF11EC()
{
  return type metadata accessor for InverseNode(0);
}

uint64_t type metadata accessor for InverseNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5860);
}

uint64_t sub_1B6AF1214@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF2C18(0x8000000000000028, (uint64_t)&unk_1F0F5AD30, a1);
}

unint64_t sub_1B6AF1228()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6AF1244()
{
  return type metadata accessor for QInverseNode(0);
}

uint64_t type metadata accessor for QInverseNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5870);
}

uint64_t sub_1B6AF126C()
{
  return 0x736F70736E617254;
}

uint64_t sub_1B6AF1288@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF1294((uint64_t)&unk_1F0F62328, a1);
}

uint64_t sub_1B6AF1294@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B6A848B0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v4 + 32) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v6 + 32) = result | 0x4000000000000000;
  *a2 = v4;
  a2[1] = v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a2[2] = a1;
  a2[3] = v8;
  a2[4] = v8;
  a2[5] = v8;
  return result;
}

unint64_t sub_1B6AF136C()
{
  return 0xD000000000000011;
}

uint64_t sub_1B6AF1388()
{
  return type metadata accessor for TransposeNode(0);
}

uint64_t type metadata accessor for TransposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5880);
}

uint64_t sub_1B6AF13B0()
{
  return 0x726F66736E617254;
}

double sub_1B6AF13D4@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF19DC(4, (uint64_t)&unk_1F0F7F778, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF13F4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1B6AF1410()
{
  return type metadata accessor for TransformNormalNode(0);
}

uint64_t type metadata accessor for TransformNormalNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5890);
}

unint64_t sub_1B6AF1438()
{
  return 0xD000000000000011;
}

double sub_1B6AF1454@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF19DC(3, (uint64_t)&unk_1F0F8E5F8, a1, (__n128)xmmword_1B6E8DAE0, (__n128)xmmword_1B6E8F480).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF1474()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1B6AF1490()
{
  return type metadata accessor for TransformPosition3Node(0);
}

uint64_t type metadata accessor for TransformPosition3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD58A0);
}

double sub_1B6AF14B8@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF19DC(4, (uint64_t)&unk_1F0F8E628, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

uint64_t sub_1B6AF14D8()
{
  return type metadata accessor for TransformPosition4Node(0);
}

uint64_t type metadata accessor for TransformPosition4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD58B0);
}

double sub_1B6AF1500@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF19DC(3, (uint64_t)&unk_1F0F622F8, a1, (__n128)xmmword_1B6E8DAE0, (__n128)xmmword_1B6E8F480).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF1520()
{
  return 0xD000000000000015;
}

uint64_t sub_1B6AF153C()
{
  return type metadata accessor for TransformNode(0);
}

uint64_t type metadata accessor for TransformNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD58C0);
}

uint64_t sub_1B6AF1564()
{
  return 0x74616C736E617254;
}

double sub_1B6AF1588@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF16D8(3, (uint64_t)&unk_1F0F84480, a1, (__n128)xmmword_1B6E8DAE0, (__n128)xmmword_1B6E8F480).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF15A8()
{
  return 0xD000000000000015;
}

uint64_t sub_1B6AF15C4()
{
  return type metadata accessor for TranslateMatrix3Node(0);
}

uint64_t type metadata accessor for TranslateMatrix3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD58D0);
}

double sub_1B6AF15EC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF16D8(4, (uint64_t)&unk_1F0F844B0, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

uint64_t sub_1B6AF160C()
{
  return type metadata accessor for TranslateMatrix4Node(0);
}

uint64_t type metadata accessor for TranslateMatrix4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD58E0);
}

uint64_t sub_1B6AF1634()
{
  return 0x74614D656C616353;
}

double sub_1B6AF1654@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF16D8(3, (uint64_t)&unk_1F0F6F368, a1, (__n128)xmmword_1B6E8DAE0, (__n128)xmmword_1B6E8F480).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF1674()
{
  return 0xD000000000000011;
}

uint64_t sub_1B6AF1690()
{
  return type metadata accessor for ScaleMatrix3Node(0);
}

uint64_t type metadata accessor for ScaleMatrix3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD58F0);
}

double sub_1B6AF16B8@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF16D8(4, (uint64_t)&unk_1F0F6F398, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

__n128 sub_1B6AF16D8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>)
{
  sub_1B6A848B0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E76B30;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  uint64_t v11 = swift_allocObject();
  *(__n128 *)(v11 + 16) = a4;
  *(void *)(v10 + 24) = v11 | 0x1000000000000000;
  *(void *)(v9 + 16) = v10 | 0x1000000000000000;
  *(void *)(v8 + 32) = v9 | 0x6000000000000000;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = swift_allocObject();
  *(__n128 *)(v13 + 16) = a5;
  *(void *)(v12 + 16) = v13 | 0x1000000000000000;
  *(void *)(v8 + 40) = v12 | 0x6000000000000000;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  uint64_t v17 = swift_allocObject();
  __n128 result = a4;
  *(__n128 *)(v17 + 16) = a4;
  *(void *)(v16 + 24) = v17 | 0x1000000000000000;
  *(void *)(v15 + 16) = v16 | 0x1000000000000000;
  *(void *)(v14 + 32) = v15 | 0x6000000000000000;
  *a3 = v8;
  a3[1] = v14;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  a3[2] = a2;
  a3[3] = v19;
  a3[4] = v19;
  a3[5] = v19;
  return result;
}

uint64_t sub_1B6AF188C()
{
  return type metadata accessor for ScaleMatrix4Node(0);
}

uint64_t type metadata accessor for ScaleMatrix4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5900);
}

uint64_t sub_1B6AF18B4()
{
  return 0x507463656A6F7250;
}

double sub_1B6AF18D8@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF19DC(4, (uint64_t)&unk_1F0F7EA58, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF18F8()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1B6AF1914()
{
  return type metadata accessor for ProjectPositionNode(0);
}

uint64_t type metadata accessor for ProjectPositionNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5910);
}

unint64_t sub_1B6AF193C()
{
  return 0xD000000000000012;
}

double sub_1B6AF1958@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF19DC(3, (uint64_t)&unk_1F0F91C58, a1, (__n128)xmmword_1B6E8DAE0, (__n128)xmmword_1B6E8F480).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF1978()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1B6AF1994()
{
  return type metadata accessor for TransformDirection3Node(0);
}

uint64_t type metadata accessor for TransformDirection3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5920);
}

double sub_1B6AF19BC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF19DC(4, (uint64_t)&unk_1F0F91C88, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

__n128 sub_1B6AF19DC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>)
{
  sub_1B6A848B0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E76B30;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  uint64_t v11 = swift_allocObject();
  *(__n128 *)(v11 + 16) = a4;
  *(void *)(v10 + 24) = v11 | 0x1000000000000000;
  *(void *)(v9 + 16) = v10 | 0x1000000000000000;
  *(void *)(v8 + 32) = v9 | 0x6000000000000000;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = swift_allocObject();
  *(__n128 *)(v13 + 16) = a5;
  *(void *)(v12 + 16) = v13 | 0x1000000000000000;
  *(void *)(v8 + 40) = v12 | 0x6000000000000000;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = swift_allocObject();
  __n128 result = a5;
  *(__n128 *)(v16 + 16) = a5;
  *(void *)(v15 + 16) = v16 | 0x1000000000000000;
  *(void *)(v14 + 32) = v15 | 0x6000000000000000;
  *a3 = v8;
  a3[1] = v14;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  a3[2] = a2;
  a3[3] = v18;
  a3[4] = v18;
  a3[5] = v18;
  return result;
}

uint64_t sub_1B6AF1B70()
{
  return type metadata accessor for TransformDirection4Node(0);
}

uint64_t type metadata accessor for TransformDirection4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5930);
}

__n128 sub_1B6AF1B98@<Q0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v4 + 24) = v5 | 0x1000000000000000;
  *(void *)(v3 + 16) = v4 | 0x1000000000000000;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77D10;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v7 + 16) = v8 | 0x1000000000000000;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x8000000000000028;
  *(void *)(v6 + 40) = v9 | 0x6000000000000000;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = swift_allocObject();
  __n128 result = (__n128)xmmword_1B6E8DAE0;
  *(_OWORD *)(v11 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v10 + 16) = v11 | 0x1000000000000000;
  *(void *)(v6 + 48) = v10 | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0FA2D30;
  a1[3] = v13;
  a1[4] = v13;
  a1[5] = v13;
  return result;
}

unint64_t sub_1B6AF1D54()
{
  return 0xD00000000000006DLL;
}

uint64_t sub_1B6AF1D70()
{
  return type metadata accessor for TRSNode(0);
}

uint64_t type metadata accessor for TRSNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5940);
}

uint64_t sub_1B6AF1D98()
{
  return 0x736E617254746547;
}

double sub_1B6AF1DBC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF2298(3, (uint64_t)&unk_1F0F7C968, a1, (__n128)xmmword_1B6E8DAE0, (__n128)xmmword_1B6E8F480).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF1DDC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B6AF1DF8()
{
  return type metadata accessor for GetTranslation3Node(0);
}

uint64_t type metadata accessor for GetTranslation3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5950);
}

double sub_1B6AF1E20@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF2298(4, (uint64_t)&unk_1F0F7C998, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF1E40()
{
  return 0xD000000000000017;
}

uint64_t sub_1B6AF1E5C()
{
  return type metadata accessor for GetTranslation4Node(0);
}

uint64_t type metadata accessor for GetTranslation4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5960);
}

uint64_t sub_1B6AF1E84()
{
  return 0x7461746F52746547;
}

double sub_1B6AF1EA4@<D0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v4 + 24) = v5 | 0x1000000000000000;
  *(void *)(v3 + 16) = v4 | 0x1000000000000000;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 3;
  uint64_t v9 = swift_allocObject();
  *(void *)&double result = 3;
  *(_OWORD *)(v9 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v8 + 24) = v9 | 0x1000000000000000;
  *(void *)(v7 + 16) = v8 | 0x1000000000000000;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F68738;
  a1[3] = v11;
  a1[4] = v11;
  a1[5] = v11;
  return result;
}

unint64_t sub_1B6AF2020()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6AF203C()
{
  return type metadata accessor for GetRotationNode(0);
}

uint64_t type metadata accessor for GetRotationNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5970);
}

uint64_t sub_1B6AF2064()
{
  return 0x6E6F697461746F52;
}

uint64_t sub_1B6AF207C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v4 + 24) = v5 | 0x1000000000000000;
  *(void *)(v3 + 16) = v4 | 0x1000000000000000;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000028;
  *(void *)(v6 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F5B370;
  a1[3] = v8;
  a1[4] = v8;
  a1[5] = v8;
  return result;
}

unint64_t sub_1B6AF21B8()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1B6AF21D4()
{
  return type metadata accessor for RotationNode(0);
}

uint64_t type metadata accessor for RotationNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5980);
}

uint64_t sub_1B6AF21FC()
{
  return 0x656C616353746547;
}

double sub_1B6AF2214@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF2298(3, (uint64_t)&unk_1F0F5FB08, a1, (__n128)xmmword_1B6E8DAE0, (__n128)xmmword_1B6E8F480).n128_u64[0];
  return result;
}

unint64_t sub_1B6AF2234()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6AF2250()
{
  return type metadata accessor for GetScale3Node(0);
}

uint64_t type metadata accessor for GetScale3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5990);
}

double sub_1B6AF2278@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF2298(4, (uint64_t)&unk_1F0F5FB38, a1, (__n128)xmmword_1B6E8DAD0, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

__n128 sub_1B6AF2298@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>)
{
  sub_1B6A848B0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  uint64_t v11 = swift_allocObject();
  *(__n128 *)(v11 + 16) = a4;
  *(void *)(v10 + 24) = v11 | 0x1000000000000000;
  *(void *)(v9 + 16) = v10 | 0x1000000000000000;
  *(void *)(v8 + 32) = v9 | 0x6000000000000000;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B6E77050;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = swift_allocObject();
  __n128 result = a5;
  *(__n128 *)(v14 + 16) = a5;
  *(void *)(v13 + 16) = v14 | 0x1000000000000000;
  *(void *)(v12 + 32) = v13 | 0x6000000000000000;
  *a3 = v8;
  a3[1] = v12;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  a3[2] = a2;
  a3[3] = v16;
  a3[4] = v16;
  a3[5] = v16;
  return result;
}

unint64_t sub_1B6AF23F0()
{
  return 0xD000000000000011;
}

uint64_t sub_1B6AF240C()
{
  return type metadata accessor for GetScale4Node(0);
}

uint64_t type metadata accessor for GetScale4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD59A0);
}

uint64_t sub_1B6AF2434()
{
  return 0x6556657461746F52;
}

double sub_1B6AF2454@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B6AF2460((uint64_t)&unk_1F0F6F1C8, a1).n128_u64[0];
  return result;
}

__n128 sub_1B6AF2460@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B6A848B0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E76B30;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000028;
  *(void *)(v4 + 32) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v6 + 16) = v7 | 0x1000000000000000;
  *(void *)(v4 + 40) = v6 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = swift_allocObject();
  __n128 result = (__n128)xmmword_1B6E8DAE0;
  *(_OWORD *)(v10 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v9 + 16) = v10 | 0x1000000000000000;
  *(void *)(v8 + 32) = v9 | 0x6000000000000000;
  *a2 = v4;
  a2[1] = v8;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  a2[2] = a1;
  a2[3] = v12;
  a2[4] = v12;
  a2[5] = v12;
  return result;
}

uint64_t sub_1B6AF25B4()
{
  return type metadata accessor for RotateVectorNode(0);
}

uint64_t type metadata accessor for RotateVectorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD59B0);
}

uint64_t sub_1B6AF25DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF299C(0x8000000000000050, (uint64_t)&unk_1F0FA7110, a1);
}

unint64_t sub_1B6AF25F0()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6AF260C()
{
  return type metadata accessor for QPowNode(0);
}

uint64_t type metadata accessor for QPowNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD59C0);
}

uint64_t sub_1B6AF2634@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF2D54(0x8000000000000028, (uint64_t)&unk_1F0F52D40, a1);
}

unint64_t sub_1B6AF2648()
{
  return 0xD000000000000019;
}

uint64_t sub_1B6AF2664()
{
  return type metadata accessor for LookAtNode(0);
}

uint64_t type metadata accessor for LookAtNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD59D0);
}

uint64_t sub_1B6AF268C()
{
  return 0x7072656C53;
}

uint64_t sub_1B6AF26A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF271C((uint64_t)&unk_1F0FA9B28, a1);
}

unint64_t sub_1B6AF26AC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B6AF26C8()
{
  return type metadata accessor for SlerpNode(0);
}

uint64_t type metadata accessor for SlerpNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD59E0);
}

uint64_t sub_1B6AF26F0()
{
  return 0x6E6F4C7072656C53;
}

uint64_t sub_1B6AF2710@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF271C((uint64_t)&unk_1F0F6F798, a1);
}

uint64_t sub_1B6AF271C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B6A848B0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77D10;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000028;
  *(void *)(v4 + 32) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0x8000000000000028;
  *(void *)(v4 + 40) = v6 | 0x6000000000000000;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000050;
  *(void *)(v4 + 48) = v7 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000028;
  *(void *)(v8 + 32) = result | 0x6000000000000000;
  *a2 = v4;
  a2[1] = v8;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  a2[2] = a1;
  a2[3] = v10;
  a2[4] = v10;
  a2[5] = v10;
  return result;
}

unint64_t sub_1B6AF2830()
{
  return 0xD000000000000022;
}

uint64_t sub_1B6AF284C()
{
  return type metadata accessor for SlerpLongestNode(0);
}

uint64_t type metadata accessor for SlerpLongestNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD59F0);
}

uint64_t sub_1B6AF2874()
{
  return 0x6461757153;
}

uint64_t sub_1B6AF2888@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF3080(0x8000000000000028, (uint64_t)&unk_1F0FA9E78, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], a1);
}

unint64_t sub_1B6AF28A8()
{
  return 0xD000000000000022;
}

uint64_t sub_1B6AF28C4()
{
  return type metadata accessor for SquadNode(0);
}

uint64_t type metadata accessor for SquadNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A00);
}

uint64_t sub_1B6AF28EC()
{
  return 0x7265697A6542;
}

uint64_t sub_1B6AF2900@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF3080(0x8000000000000028, (uint64_t)&unk_1F0F518E0, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], a1);
}

unint64_t sub_1B6AF2920()
{
  return 0xD000000000000023;
}

uint64_t sub_1B6AF293C()
{
  return type metadata accessor for BezierNode(0);
}

uint64_t type metadata accessor for BezierNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A10);
}

uint64_t sub_1B6AF2964()
{
  return 0x6E6F697461746F52;
}

uint64_t sub_1B6AF2988@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF299C(0x8000000000000028, (uint64_t)&unk_1F0F7F158, a1);
}

uint64_t sub_1B6AF299C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B6A848B0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E76B30;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000028;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v6 + 40) = v8 | 0x6000000000000000;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000028;
  *(void *)(v9 + 32) = result | 0x6000000000000000;
  *a3 = v6;
  a3[1] = v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a3[2] = a2;
  a3[3] = v11;
  a3[4] = v11;
  a3[5] = v11;
  return result;
}

unint64_t sub_1B6AF2A9C()
{
  return 0xD000000000000019;
}

uint64_t sub_1B6AF2B4C()
{
  return type metadata accessor for RotationBetweenNode(0);
}

uint64_t type metadata accessor for RotationBetweenNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A20);
}

unint64_t sub_1B6AF2B74()
{
  return 0xD000000000000013;
}

uint64_t sub_1B6AF2B90@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF2D54(0x8000000000000028, (uint64_t)&unk_1F0F91628, a1);
}

unint64_t sub_1B6AF2BA4()
{
  return 0xD000000000000027;
}

uint64_t sub_1B6AF2BC0()
{
  return type metadata accessor for RotationBetweenFastNode(0);
}

uint64_t type metadata accessor for RotationBetweenFastNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A30);
}

uint64_t sub_1B6AF2BE8()
{
  return 0x69746E6564497349;
}

uint64_t sub_1B6AF2C04@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF2C18(0x8000000000000010, (uint64_t)&unk_1F0F643B0, a1);
}

uint64_t sub_1B6AF2C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B6A848B0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000028;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(v8 + 32) = result | 0x6000000000000000;
  *a3 = v6;
  a3[1] = v8;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  a3[2] = a2;
  a3[3] = v10;
  a3[4] = v10;
  a3[5] = v10;
  return result;
}

unint64_t sub_1B6AF2CFC()
{
  return 0xD000000000000018;
}

uint64_t sub_1B6AF2D18()
{
  return type metadata accessor for IsIdentityNode(0);
}

uint64_t type metadata accessor for IsIdentityNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A40);
}

uint64_t sub_1B6AF2D40@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF2D54(0x8000000000000050, (uint64_t)&unk_1F0FA7E08, a1);
}

uint64_t sub_1B6AF2D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B6A848B0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E76B30;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v7 + 16) = v8 | 0x1000000000000000;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v9 + 16) = v10 | 0x1000000000000000;
  *(void *)(v6 + 40) = v9 | 0x6000000000000000;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(v11 + 32) = result | 0x6000000000000000;
  *a3 = v6;
  a3[1] = v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  a3[2] = a2;
  a3[3] = v13;
  a3[4] = v13;
  a3[5] = v13;
  return result;
}

unint64_t sub_1B6AF2EA4()
{
  return 0xD000000000000011;
}

uint64_t sub_1B6AF2EC0()
{
  return type metadata accessor for AngleNode(0);
}

uint64_t type metadata accessor for AngleNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A50);
}

uint64_t sub_1B6AF2EE8()
{
  return 0x313070616D6552;
}

uint64_t sub_1B6AF2F00@<X0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v2 + 32) = v3 | 0x4000000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v2 + 40) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v2 + 48) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v6 + 32) = result | 0x4000000000000000;
  *a1 = v2;
  a1[1] = v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F56970;
  a1[3] = v8;
  a1[4] = v8;
  a1[5] = v8;
  return result;
}

unint64_t sub_1B6AF3004()
{
  return 0xD000000000000018;
}

uint64_t sub_1B6AF3020()
{
  return type metadata accessor for Remap01Node(0);
}

uint64_t type metadata accessor for Remap01Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A60);
}

uint64_t sub_1B6AF3048()
{
  return 0x70616D6552;
}

uint64_t sub_1B6AF305C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6AF3080(0x8000000000000050, (uint64_t)&unk_1F0FA93F8, (uint64_t)&unk_1F0FA9358, (uint64_t)&unk_1F0FA93C8, a1);
}

uint64_t sub_1B6AF3080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_1B6A848B0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B6E76900;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v10 + 32) = v11 | 0x6000000000000000;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v10 + 40) = v12 | 0x6000000000000000;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v10 + 48) = v13 | 0x6000000000000000;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v10 + 56) = v14 | 0x6000000000000000;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0x8000000000000050;
  *(void *)(v10 + 64) = v15 | 0x6000000000000000;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(v16 + 32) = result | 0x6000000000000000;
  *a5 = v10;
  a5[1] = v16;
  a5[2] = a2;
  a5[3] = a3;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  a5[4] = a4;
  a5[5] = v18;
  return result;
}

unint64_t sub_1B6AF31DC()
{
  return 0xD000000000000029;
}

uint64_t sub_1B6AF31F8()
{
  return type metadata accessor for RemapNode(0);
}

uint64_t type metadata accessor for RemapNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A70);
}

uint64_t sub_1B6AF3220@<X0>(uint64_t *a1@<X8>)
{
  sub_1B6A848B0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v2 + 32) = v3 | 0x4000000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v2 + 40) = v4 | 0x4000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v2 + 48) = v5 | 0x4000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000010;
  *(void *)(v6 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F68998;
  a1[3] = v8;
  a1[4] = v8;
  a1[5] = v8;
  return result;
}

unint64_t sub_1B6AF3330()
{
  return 0xD000000000000010;
}

unint64_t sub_1B6AF334C()
{
  return 0xD000000000000018;
}

uint64_t sub_1B6AF3368()
{
  return type metadata accessor for IsInClosedRange(0);
}

uint64_t type metadata accessor for IsInClosedRange(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5A80);
}

uint64_t sub_1B6AF3390()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6AF33A0()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6AF33D8()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6AF3430(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 56;
    do
    {
      uint64_t v9 = *(void *)(v4 - 24);
      uint64_t v10 = *(void *)(v4 - 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = *(void *)(v11 + 16);
      unint64_t v5 = *(void *)(v11 + 24);
      if (v6 >= v5 >> 1) {
        sub_1B6C3C3B8(v5 > 1, v6 + 1, 1);
      }
      v4 += 32;
      *(void *)(v11 + 16) = v6 + 1;
      uint64_t v7 = v11 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B6AF3558()
{
  uint64_t v1 = v0;
  swift_retain();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1B6AFC318(v2, v0);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 224))
  {
    swift_retain();
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1B6AFC6CC(v3, v0);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(v0 + 208);
  if (*(void *)(v1 + 200)) {
    uint64_t v6 = *(void *)(v1 + 200);
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  if (v5) {
    uint64_t v7 = *(void *)(v1 + 208);
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B6AF64BC(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = v8 + 56;
    do
    {
      v10 += 32;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_1B6AFCAA8(v11, v1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v1 + 200);
  if (!v12) {
    goto LABEL_16;
  }
  if (*(void *)(v12 + 16) != 1)
  {
    uint64_t v14 = *(void *)(v1 + 200);
    goto LABEL_18;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1B6AFCE40(v13, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = *(void *)(v1 + 200);
  if (!v14) {
LABEL_16:
  }
    uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_18:
  if (*(void *)(v1 + 208)) {
    uint64_t v15 = *(void *)(v1 + 208);
  }
  else {
    uint64_t v15 = v4;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B6AF64BC(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = (uint64_t *)(v16 + 56);
    do
    {
      uint64_t v19 = *(v18 - 3);
      uint64_t v20 = *(v18 - 2);
      uint64_t v21 = *(v18 - 1);
      uint64_t v22 = *v18;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = swift_bridgeObjectRetain();
      sub_1B6AFD204(v23, v1, v21, v22, v19, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v18 += 4;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 192))
  {
    char v24 = sub_1B6919430(*(void **)(v1 + 192), qword_1F0F85420);
    swift_bridgeObjectRetain();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    if (v24)
    {
      *(void *)(v1 + 192) = *(void *)(v1 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_arrayDestroy();
  }
  uint64_t v25 = *(void *)(v1 + 216);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v41 = v25 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v30 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v42 = *(void *)(v1 + 216);
  swift_bridgeObjectRetain_n();
  uint64_t v31 = 0;
  if (!v29) {
    goto LABEL_33;
  }
LABEL_32:
  unint64_t v32 = __clz(__rbit64(v29));
  v29 &= v29 - 1;
  unint64_t v33 = v32 | (v31 << 6);
  while (1)
  {
    uint64_t v36 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v33);
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    sub_1B633AF88();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1B6E32678())
    {
      swift_release();
      swift_bridgeObjectRelease();
      char v39 = 1;
      goto LABEL_54;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_32;
    }
LABEL_33:
    uint64_t v34 = v31 + 1;
    if (v31 + 1 >= v30) {
      break;
    }
    unint64_t v35 = *(void *)(v41 + 8 * v34);
    if (!v35)
    {
      uint64_t v34 = v31 + 2;
      if (v31 + 2 >= v30) {
        break;
      }
      unint64_t v35 = *(void *)(v41 + 8 * v34);
      if (!v35)
      {
        uint64_t v34 = v31 + 3;
        if (v31 + 3 >= v30) {
          break;
        }
        unint64_t v35 = *(void *)(v41 + 8 * v34);
        if (!v35)
        {
          uint64_t v34 = v31 + 4;
          if (v31 + 4 >= v30) {
            break;
          }
          unint64_t v35 = *(void *)(v41 + 8 * v34);
          if (!v35)
          {
            uint64_t v34 = v31 + 5;
            if (v31 + 5 >= v30) {
              break;
            }
            unint64_t v35 = *(void *)(v41 + 8 * v34);
            if (!v35)
            {
              uint64_t v34 = v31 + 6;
              if (v31 + 6 >= v30) {
                break;
              }
              unint64_t v35 = *(void *)(v41 + 8 * v34);
              if (!v35)
              {
                while (v30 - 7 != v31)
                {
                  unint64_t v35 = *(void *)(v42 + 8 * v31++ + 120);
                  if (v35)
                  {
                    uint64_t v34 = v31 + 6;
                    goto LABEL_48;
                  }
                }
                break;
              }
            }
          }
        }
      }
    }
LABEL_48:
    unint64_t v29 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v34 << 6);
    uint64_t v31 = v34;
  }
  swift_release();
  swift_bridgeObjectRelease();
  char v39 = 0;
  uint64_t v38 = 0;
  uint64_t v37 = 0;
LABEL_54:
  uint64_t result = sub_1B6AFE528(v38, v37);
  *(unsigned char *)(v1 + 240) = v39;
  return result;
}

uint64_t sub_1B6AF3AD8()
{
  uint64_t v1 = (void *)v0;
  if ((*(unsigned char *)(v0 + 104) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 168);
    if (v2)
    {
      int64_t v3 = *(void *)(v2 + 16);
      if (v3)
      {
        uint64_t v38 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1B6C3C3B8(0, v3, 0);
        uint64_t v4 = (uint64_t *)(v2 + 40);
        do
        {
          uint64_t v6 = *(v4 - 1);
          uint64_t v5 = *v4;
          unint64_t v8 = *(void *)(v38 + 16);
          unint64_t v7 = *(void *)(v38 + 24);
          swift_bridgeObjectRetain();
          if (v8 >= v7 >> 1) {
            sub_1B6C3C3B8(v7 > 1, v8 + 1, 1);
          }
          v4 += 2;
          *(void *)(v38 + 16) = v8 + 1;
          uint64_t v9 = v38 + 16 * v8;
          *(void *)(v9 + 32) = v6;
          *(void *)(v9 + 40) = v5;
          --v3;
        }
        while (v3);
        swift_bridgeObjectRelease();
      }
      sub_1B63860D0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1B6646D3C();
      sub_1B6E31638();
      swift_bridgeObjectRelease();
      uint64_t v21 = v1[26];
      if (!v21) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v21 = *(void *)(v0 + 208);
      if (!v21)
      {
LABEL_30:
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        goto LABEL_43;
      }
    }
    int64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v40 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B6C3C3B8(0, v22, 0);
      uint64_t v23 = (uint64_t *)(v21 + 40);
      do
      {
        uint64_t v25 = *(v23 - 1);
        uint64_t v24 = *v23;
        unint64_t v27 = *(void *)(v40 + 16);
        unint64_t v26 = *(void *)(v40 + 24);
        swift_bridgeObjectRetain();
        if (v27 >= v26 >> 1) {
          sub_1B6C3C3B8(v26 > 1, v27 + 1, 1);
        }
        v23 += 2;
        *(void *)(v40 + 16) = v27 + 1;
        uint64_t v28 = v40 + 16 * v27;
        *(void *)(v28 + 32) = v25;
        *(void *)(v28 + 40) = v24;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
    }
    sub_1B63860D0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6646D3C();
    sub_1B6E31638();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 168);
  if (v11) {
    uint64_t v13 = v1[20];
  }
  else {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  if (v12) {
    uint64_t v14 = v1[21];
  }
  else {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1B6AF64BC(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    sub_1B6C3C3B8(0, v16, 0);
    uint64_t v17 = v15 + 56;
    do
    {
      uint64_t v39 = *(void *)(v17 - 24);
      uint64_t v41 = *(void *)(v17 - 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      if (v19 >= v18 >> 1) {
        sub_1B6C3C3B8(v18 > 1, v19 + 1, 1);
      }
      v17 += 32;
      *(void *)(v10 + 16) = v19 + 1;
      uint64_t v20 = v10 + 16 * v19;
      *(void *)(v20 + 32) = v39;
      *(void *)(v20 + 40) = v41;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1B63860D0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  if (v1[26]) {
    uint64_t v29 = v1[26];
  }
  else {
    uint64_t v29 = v10;
  }
  int64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    swift_bridgeObjectRetain();
    sub_1B6C3C3B8(0, v30, 0);
    uint64_t v31 = (uint64_t *)(v29 + 40);
    do
    {
      uint64_t v32 = *(v31 - 1);
      uint64_t v33 = *v31;
      unint64_t v35 = *(void *)(v10 + 16);
      unint64_t v34 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v35 >= v34 >> 1) {
        sub_1B6C3C3B8(v34 > 1, v35 + 1, 1);
      }
      v31 += 2;
      *(void *)(v10 + 16) = v35 + 1;
      uint64_t v36 = v10 + 16 * v35;
      *(void *)(v36 + 32) = v32;
      *(void *)(v36 + 40) = v33;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
LABEL_43:
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 40;
}

uint64_t sub_1B6AF4094(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 216);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(v1 + 216);
  *(void *)(v1 + 216) = 0x8000000000000000;
  sub_1B6AFB718(v3, (uint64_t)sub_1B6A2E334, 0, isUniquelyReferenced_nonNull_native, &v8);
  *(void *)(v1 + 216) = v8;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 224);
  if (*(void *)(v1 + 224))
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      char v7 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v8 = *(void *)(v1 + 224);
      *(void *)(v1 + 224) = 0x8000000000000000;
      sub_1B6AFB718(v6, (uint64_t)sub_1B6A2E334, 0, v7, &v8);
      *(void *)(v1 + 224) = v8;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(void *)(v1 + 224) = v6;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1B6AF41B8()
{
  uint64_t v1 = *(void **)(v0 + 144);
  if (v1)
  {
    long long v106 = *(void **)(v0 + 144);
    char v2 = sub_1B6919430(v1, qword_1F0F85808);
    swift_bridgeObjectRetain_n();
    swift_arrayDestroy();
    if (v2)
    {
      swift_bridgeObjectRelease();
      if (qword_1EB981168 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_1EB997F48;
      int64_t v4 = *(void *)(qword_1EB997F48 + 16);
      if (v4)
      {
        v110[0] = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1B6C3C3B8(0, v4, 0);
        uint64_t v5 = (void *)v110[0];
        uint64_t v6 = v3 + 32;
        do
        {
          sub_1B629C37C(v6, (uint64_t)v111);
          sub_1B68168F0(v111, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          uint64_t v7 = sub_1B6A3D8B8();
          uint64_t v9 = v8;
          sub_1B68168F0(v111, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          v110[0] = v5;
          unint64_t v11 = v5[2];
          unint64_t v10 = v5[3];
          if (v11 >= v10 >> 1)
          {
            sub_1B6C3C3B8(v10 > 1, v11 + 1, 1);
            uint64_t v5 = (void *)v110[0];
          }
          v5[2] = v11 + 1;
          uint64_t v12 = &v5[2 * v11];
          void v12[4] = v7;
          v12[5] = v9;
          v6 += 40;
          --v4;
        }
        while (v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
      }
      goto LABEL_99;
    }
    if ((sub_1B69EEF08(0x5F544E495F4C4C41, 0xED00005345505954, v1) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    uint64_t v13 = sub_1B6AFC1C8((uint64_t)v1, 0x5F544E495F4C4C41, 0xED00005345505954);
    swift_bridgeObjectRelease_n();
    long long v106 = (void *)v13;
    if (qword_1EB981168 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(qword_1EB997F48 + 16);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    if (v14)
    {
      int64_t v16 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      uint64_t v17 = MEMORY[0x1E4FBC860];
      do
      {
        unint64_t v21 = *(v16 - 3);
        if (v21 - 1 <= 8)
        {
          uint64_t v22 = *(v16 - 2);
          uint64_t v23 = *(v16 - 1);
          uint64_t v24 = *v16;
          uint64_t v101 = *(v16 - 4);
          sub_1B629C9E8(v101, v21);
          v111[0] = v17;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B6C3D3F8(0, *(void *)(v17 + 16) + 1, 1);
            uint64_t v17 = v111[0];
          }
          unint64_t v19 = *(void *)(v17 + 16);
          unint64_t v18 = *(void *)(v17 + 24);
          if (v19 >= v18 >> 1)
          {
            sub_1B6C3D3F8(v18 > 1, v19 + 1, 1);
            uint64_t v17 = v111[0];
          }
          *(void *)(v17 + 16) = v19 + 1;
          uint64_t v20 = (void *)(v17 + 40 * v19);
          _OWORD v20[4] = v101;
          v20[5] = v21;
          v20[6] = v22;
          v20[7] = v23;
          v20[8] = v24;
        }
        v16 += 5;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x1E4FBC860];
      int64_t v25 = *(void *)(v17 + 16);
      if (v25) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v17 = MEMORY[0x1E4FBC860];
      int64_t v25 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v25)
      {
LABEL_26:
        v110[0] = v15;
        sub_1B6C3C3B8(0, v25, 0);
        uint64_t v26 = v110[0];
        uint64_t v27 = v17 + 32;
        do
        {
          sub_1B629C37C(v27, (uint64_t)v111);
          sub_1B68168F0(v111, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          uint64_t v28 = sub_1B6A3D8B8();
          uint64_t v30 = v29;
          sub_1B68168F0(v111, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          v110[0] = v26;
          unint64_t v32 = *(void *)(v26 + 16);
          unint64_t v31 = *(void *)(v26 + 24);
          if (v32 >= v31 >> 1)
          {
            sub_1B6C3C3B8(v31 > 1, v32 + 1, 1);
            uint64_t v26 = v110[0];
          }
          *(void *)(v26 + 16) = v32 + 1;
          uint64_t v33 = v26 + 16 * v32;
          *(void *)(v33 + 32) = v28;
          *(void *)(v33 + 40) = v30;
          v27 += 40;
          --v25;
        }
        while (v25);
        swift_release();
        goto LABEL_33;
      }
    }
    swift_release();
    uint64_t v26 = MEMORY[0x1E4FBC860];
LABEL_33:
    sub_1B6641518(v26);
    uint64_t v1 = v106;
LABEL_34:
    if (sub_1B69EEF08(0xD000000000000014, 0x80000001B6F48890, v1))
    {
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v35 = sub_1B6AFC1C8(v34, 0xD000000000000014, 0x80000001B6F48890);
      swift_bridgeObjectRelease_n();
      long long v106 = (void *)v35;
      if (qword_1EB981168 != -1) {
        swift_once();
      }
      uint64_t v36 = *(void *)(qword_1EB997F48 + 16);
      uint64_t v37 = MEMORY[0x1E4FBC860];
      if (v36)
      {
        uint64_t v38 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
        uint64_t v39 = MEMORY[0x1E4FBC860];
        do
        {
          unint64_t v43 = *(v38 - 3);
          if (v43 - 5 <= 4)
          {
            uint64_t v44 = *(v38 - 2);
            uint64_t v45 = *(v38 - 1);
            uint64_t v46 = *v38;
            uint64_t v102 = *(v38 - 4);
            sub_1B629C9E8(v102, v43);
            v110[0] = v39;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B6C3D3F8(0, *(void *)(v39 + 16) + 1, 1);
              uint64_t v39 = v110[0];
            }
            unint64_t v41 = *(void *)(v39 + 16);
            unint64_t v40 = *(void *)(v39 + 24);
            if (v41 >= v40 >> 1)
            {
              sub_1B6C3D3F8(v40 > 1, v41 + 1, 1);
              uint64_t v39 = v110[0];
            }
            *(void *)(v39 + 16) = v41 + 1;
            uint64_t v42 = (void *)(v39 + 40 * v41);
            v42[4] = v102;
            _OWORD v42[5] = v43;
            v42[6] = v44;
            v42[7] = v45;
            v42[8] = v46;
          }
          v38 += 5;
          --v36;
        }
        while (v36);
        swift_bridgeObjectRelease();
        uint64_t v37 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v39 = MEMORY[0x1E4FBC860];
      }
      int64_t v47 = *(void *)(v39 + 16);
      if (v47)
      {
        v109[0] = v37;
        sub_1B6C3C3B8(0, v47, 0);
        uint64_t v48 = v109[0];
        uint64_t v49 = v39 + 32;
        do
        {
          sub_1B629C37C(v49, (uint64_t)v110);
          sub_1B68168F0(v110, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          uint64_t v50 = sub_1B6A3D8B8();
          uint64_t v52 = v51;
          sub_1B68168F0(v110, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          v109[0] = v48;
          unint64_t v54 = *(void *)(v48 + 16);
          unint64_t v53 = *(void *)(v48 + 24);
          if (v54 >= v53 >> 1)
          {
            sub_1B6C3C3B8(v53 > 1, v54 + 1, 1);
            uint64_t v48 = v109[0];
          }
          *(void *)(v48 + 16) = v54 + 1;
          uint64_t v55 = v48 + 16 * v54;
          *(void *)(v55 + 32) = v50;
          *(void *)(v55 + 40) = v52;
          v49 += 40;
          --v47;
        }
        while (v47);
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v48 = MEMORY[0x1E4FBC860];
      }
      sub_1B6641518(v48);
      uint64_t v1 = v106;
    }
    if (sub_1B69EEF08(0xD000000000000016, 0x80000001B6F488B0, v1))
    {
      uint64_t v56 = swift_bridgeObjectRetain();
      uint64_t v57 = sub_1B6AFC1C8(v56, 0xD000000000000016, 0x80000001B6F488B0);
      swift_bridgeObjectRelease_n();
      long long v106 = (void *)v57;
      if (qword_1EB981168 != -1) {
        swift_once();
      }
      uint64_t v58 = *(void *)(qword_1EB997F48 + 16);
      uint64_t v59 = MEMORY[0x1E4FBC860];
      if (v58)
      {
        uint64_t v60 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
        uint64_t v61 = MEMORY[0x1E4FBC860];
        do
        {
          unint64_t v65 = *(v60 - 3);
          if (v65 - 1 <= 3)
          {
            uint64_t v66 = *(v60 - 2);
            uint64_t v67 = *(v60 - 1);
            uint64_t v68 = *v60;
            uint64_t v103 = *(v60 - 4);
            sub_1B629C9E8(v103, v65);
            v109[0] = v61;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B6C3D3F8(0, *(void *)(v61 + 16) + 1, 1);
              uint64_t v61 = v109[0];
            }
            unint64_t v63 = *(void *)(v61 + 16);
            unint64_t v62 = *(void *)(v61 + 24);
            if (v63 >= v62 >> 1)
            {
              sub_1B6C3D3F8(v62 > 1, v63 + 1, 1);
              uint64_t v61 = v109[0];
            }
            *(void *)(v61 + 16) = v63 + 1;
            id v64 = (void *)(v61 + 40 * v63);
            v64[4] = v103;
            void v64[5] = v65;
            v64[6] = v66;
            v64[7] = v67;
            uint64_t v64[8] = v68;
          }
          v60 += 5;
          --v58;
        }
        while (v58);
        swift_bridgeObjectRelease();
        uint64_t v59 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v61 = MEMORY[0x1E4FBC860];
      }
      int64_t v69 = *(void *)(v61 + 16);
      if (v69)
      {
        v108[0] = v59;
        sub_1B6C3C3B8(0, v69, 0);
        uint64_t v70 = v108[0];
        uint64_t v71 = v61 + 32;
        do
        {
          sub_1B629C37C(v71, (uint64_t)v109);
          sub_1B68168F0(v109, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          uint64_t v72 = sub_1B6A3D8B8();
          uint64_t v74 = v73;
          sub_1B68168F0(v109, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          v108[0] = v70;
          unint64_t v76 = *(void *)(v70 + 16);
          unint64_t v75 = *(void *)(v70 + 24);
          if (v76 >= v75 >> 1)
          {
            sub_1B6C3C3B8(v75 > 1, v76 + 1, 1);
            uint64_t v70 = v108[0];
          }
          *(void *)(v70 + 16) = v76 + 1;
          uint64_t v77 = v70 + 16 * v76;
          *(void *)(v77 + 32) = v72;
          *(void *)(v77 + 40) = v74;
          v71 += 40;
          --v69;
        }
        while (v69);
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v70 = MEMORY[0x1E4FBC860];
      }
      sub_1B6641518(v70);
    }
    uint64_t v5 = v106;
    if ((sub_1B69EEF08(0xD000000000000010, 0x80000001B6F488D0, v106) & 1) == 0) {
      goto LABEL_99;
    }
    uint64_t v78 = swift_bridgeObjectRetain();
    uint64_t v79 = sub_1B6AFC1C8(v78, 0xD000000000000010, 0x80000001B6F488D0);
    swift_bridgeObjectRelease_n();
    uint64_t v107 = v79;
    if (qword_1EB981168 != -1) {
      swift_once();
    }
    uint64_t v80 = *(void *)(qword_1EB997F48 + 16);
    uint64_t v81 = MEMORY[0x1E4FBC860];
    if (v80)
    {
      id v82 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      uint64_t v83 = MEMORY[0x1E4FBC860];
      do
      {
        unint64_t v87 = *(v82 - 3);
        if (v87 - 17 <= 8)
        {
          uint64_t v88 = *(v82 - 2);
          uint64_t v89 = *(v82 - 1);
          uint64_t v90 = *v82;
          uint64_t v104 = *(v82 - 4);
          sub_1B629C9E8(v104, v87);
          v108[0] = v83;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B6C3D3F8(0, *(void *)(v83 + 16) + 1, 1);
            uint64_t v83 = v108[0];
          }
          unint64_t v85 = *(void *)(v83 + 16);
          unint64_t v84 = *(void *)(v83 + 24);
          if (v85 >= v84 >> 1)
          {
            sub_1B6C3D3F8(v84 > 1, v85 + 1, 1);
            uint64_t v83 = v108[0];
          }
          *(void *)(v83 + 16) = v85 + 1;
          id v86 = (void *)(v83 + 40 * v85);
          v86[4] = v104;
          v86[5] = v87;
          v86[6] = v88;
          v86[7] = v89;
          v86[8] = v90;
        }
        v82 += 5;
        --v80;
      }
      while (v80);
      swift_bridgeObjectRelease();
      uint64_t v81 = MEMORY[0x1E4FBC860];
      int64_t v91 = *(void *)(v83 + 16);
      if (v91) {
        goto LABEL_91;
      }
    }
    else
    {
      uint64_t v83 = MEMORY[0x1E4FBC860];
      int64_t v91 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v91)
      {
LABEL_91:
        uint64_t v105 = v81;
        sub_1B6C3C3B8(0, v91, 0);
        uint64_t v92 = v105;
        uint64_t v93 = v83 + 32;
        do
        {
          sub_1B629C37C(v93, (uint64_t)v108);
          sub_1B68168F0(v108, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          uint64_t v94 = sub_1B6A3D8B8();
          uint64_t v96 = v95;
          sub_1B68168F0(v108, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          unint64_t v98 = *(void *)(v105 + 16);
          unint64_t v97 = *(void *)(v105 + 24);
          if (v98 >= v97 >> 1) {
            sub_1B6C3C3B8(v97 > 1, v98 + 1, 1);
          }
          *(void *)(v105 + 16) = v98 + 1;
          unint64_t v99 = v105 + 16 * v98;
          *(void *)(v99 + 32) = v94;
          *(void *)(v99 + 40) = v96;
          v93 += 40;
          --v91;
        }
        while (v91);
        swift_release();
        goto LABEL_98;
      }
    }
    swift_release();
    uint64_t v92 = MEMORY[0x1E4FBC860];
LABEL_98:
    sub_1B6641518(v92);
    uint64_t v5 = (void *)v107;
LABEL_99:
    *(void *)(v100 + 144) = v5;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6AF4E00()
{
  uint64_t v1 = v0;
  sub_1B62E17B4();
  uint64_t v92 = v2;
  MEMORY[0x1F4188790](v2, v3);
  int64_t v91 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1B6E31098();
  MEMORY[0x1F4188790](v90, v5);
  uint64_t v89 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0[21];
  uint64_t v93 = v1;
  if (v8)
  {
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v80 = v6;
      uint64_t v83 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      swift_bridgeObjectRetain_n();
      uint64_t v79 = v8;
      unint64_t v10 = (uint64_t *)(v8 + 40);
      unint64_t v82 = 0x80000001B6F487C0;
      long long v81 = xmmword_1B6E77050;
      unint64_t v11 = v89;
      do
      {
        uint64_t v13 = *(v10 - 1);
        uint64_t v12 = *v10;
        swift_bridgeObjectRetain_n();
        sub_1B629C678(v13, v12, v96);
        sub_1B666BBB4((uint64_t)v96, (uint64_t)v101);
        if (v102 == 59)
        {
          unint64_t v85 = v10;
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v99 = 0;
          unint64_t v100 = 0xE000000000000000;
          uint64_t v87 = qword_1EB997FD0;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v88 = v12;
          sub_1B6E31948();
          sub_1B6E31948();
          uint64_t v14 = v99;
          unint64_t v15 = v100;
          char v16 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v86 = v9;
          uint64_t v17 = qword_1EB997FF0;
          uint64_t v18 = qword_1EB985528;
          swift_retain();
          if (v18 != -1) {
            swift_once();
          }
          sub_1B6AFDE58(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
          uint64_t v19 = swift_allocObject();
          *(_OWORD *)(v19 + 16) = v81;
          *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v19 + 64) = sub_1B678615C();
          *(void *)(v19 + 32) = v14;
          *(void *)(v19 + 40) = v15;
          swift_bridgeObjectRetain();
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          sub_1B6E31088();
          uint64_t v20 = (uint64_t)v91;
          uint64_t v21 = v92[12];
          uint64_t v22 = v14;
          uint64_t v23 = v92[16];
          uint64_t v24 = v92[20];
          uint64_t v84 = v17;
          int64_t v25 = &v91[v24];
          (*v83)(v91, v11, v90);
          *(unsigned char *)(v20 + v21) = v16;
          *(void *)(v20 + v23) = 0;
          *(void *)int64_t v25 = v22;
          *((void *)v25 + 1) = v15;
          swift_bridgeObjectRetain();
          sub_1B6E31368();
          swift_release();
          sub_1B67A3738(v20);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v1 = v93;
          unint64_t v10 = v85;
          uint64_t v9 = v86;
        }
        else
        {
          sub_1B629C37C((uint64_t)v101, (uint64_t)v103);
          sub_1B68168F0(v96, (void (*)(void, void, void, void, void))sub_1B666BC88);
          swift_bridgeObjectRelease();
        }
        v10 += 2;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease_n();
      uint64_t v6 = v80;
    }
  }
  uint64_t v26 = v1[26];
  if (v26)
  {
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v83 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      swift_bridgeObjectRetain_n();
      uint64_t v80 = v26;
      uint64_t v28 = (uint64_t *)(v26 + 40);
      unint64_t v82 = 0x80000001B6F487C0;
      long long v81 = xmmword_1B6E77050;
      uint64_t v29 = v89;
      do
      {
        uint64_t v30 = *(v28 - 1);
        uint64_t v31 = *v28;
        swift_bridgeObjectRetain_n();
        sub_1B629C678(v30, v31, v97);
        sub_1B666BBB4((uint64_t)v97, (uint64_t)v98);
        if (v98[1] == 59)
        {
          unint64_t v85 = v28;
          uint64_t v86 = v27;
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v94 = 0;
          unint64_t v95 = 0xE000000000000000;
          uint64_t v87 = qword_1EB997FD0;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          uint64_t v33 = v94;
          unint64_t v32 = v95;
          char v34 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v88 = v31;
          uint64_t v35 = qword_1EB997FF0;
          uint64_t v36 = qword_1EB985528;
          swift_retain();
          if (v36 != -1) {
            swift_once();
          }
          sub_1B6AFDE58(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = v81;
          *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v37 + 64) = sub_1B678615C();
          *(void *)(v37 + 32) = v33;
          *(void *)(v37 + 40) = v32;
          swift_bridgeObjectRetain();
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          sub_1B6E31088();
          uint64_t v38 = (uint64_t)v91;
          uint64_t v39 = v92[12];
          uint64_t v40 = v92[16];
          uint64_t v41 = v92[20];
          uint64_t v84 = v35;
          uint64_t v42 = (uint64_t *)&v91[v41];
          (*v83)(v91, v29, v90);
          *(unsigned char *)(v38 + v39) = v34;
          *(void *)(v38 + v40) = 0;
          *uint64_t v42 = v33;
          v42[1] = v32;
          swift_bridgeObjectRetain();
          sub_1B6E31368();
          swift_release();
          sub_1B67A3738(v38);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v1 = v93;
          uint64_t v28 = v85;
          uint64_t v27 = v86;
        }
        else
        {
          sub_1B629C37C((uint64_t)v98, (uint64_t)&v99);
          sub_1B68168F0(v97, (void (*)(void, void, void, void, void))sub_1B666BC88);
          swift_bridgeObjectRelease();
        }
        v28 += 2;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease_n();
    }
  }
  if (v1[20]) {
    unint64_t v43 = (void *)v1[20];
  }
  else {
    unint64_t v43 = (void *)MEMORY[0x1E4FBC860];
  }
  int64_t v91 = (char *)v1[25];
  if (v91)
  {
    uint64_t v44 = *((void *)v91 + 2);
    if (v44)
    {
      uint64_t v45 = v91 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v46 = 0;
      while (1)
      {
        int64_t v47 = &v45[16 * v46];
        uint64_t v49 = *(void *)v47;
        uint64_t v48 = *((void *)v47 + 1);
        uint64_t v50 = v43[2];
        if (!v50) {
          goto LABEL_45;
        }
        BOOL v51 = v43[4] == v49 && v43[5] == v48;
        if (!v51 && (sub_1B6E334B8() & 1) == 0)
        {
          if (v50 == 1) {
            goto LABEL_45;
          }
          BOOL v55 = v43[6] == v49 && v43[7] == v48;
          if (!v55 && (sub_1B6E334B8() & 1) == 0)
          {
            uint64_t v56 = v50 - 2;
            if (v50 == 2) {
              goto LABEL_45;
            }
            if ((v43[8] != v49 || v43[9] != v48) && (sub_1B6E334B8() & 1) == 0) {
              break;
            }
          }
        }
LABEL_37:
        if (++v46 == v44)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v1 = v93;
          goto LABEL_68;
        }
      }
      uint64_t v92 = (int *)v43;
      uint64_t v57 = v43 + 11;
      while (1)
      {
        --v56;
        unint64_t v43 = v92;
        if (!v56) {
          break;
        }
        if (*(v57 - 1) != v49 || *v57 != v48)
        {
          v57 += 2;
          if ((sub_1B6E334B8() & 1) == 0) {
            continue;
          }
        }
        unint64_t v43 = v92;
        goto LABEL_37;
      }
LABEL_45:
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v43 = sub_1B6335858(0, v50 + 1, 1, v43);
      }
      unint64_t v53 = v43[2];
      unint64_t v52 = v43[3];
      if (v53 >= v52 >> 1) {
        unint64_t v43 = sub_1B6335858(v52 > 1, v53 + 1, 1, v43);
      }
      _OWORD v43[2] = v53 + 1;
      unint64_t v54 = &v43[2 * v53];
      v54[4] = v49;
      v54[5] = v48;
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  swift_bridgeObjectRetain();
LABEL_68:
  if (*(void *)(v1[27] + 16))
  {
    uint64_t v59 = v43[2];
    if (v59)
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = 0;
      uint64_t v92 = (int *)v43;
      uint64_t v61 = v43 + 5;
      uint64_t v90 = 0x80000001B6F487A0;
      do
      {
        uint64_t v62 = *(v61 - 1);
        uint64_t v63 = *v61;
        swift_bridgeObjectRetain();
        uint64_t v64 = swift_bridgeObjectRetain();
        uint64_t v65 = sub_1B6AFD7EC(v64, v62, v63);
        swift_bridgeObjectRelease();
        uint64_t v66 = *(void *)(v65 + 16);
        swift_bridgeObjectRelease();
        if (v66)
        {
          int64_t v91 = v60;
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v94 = 0;
          unint64_t v95 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          uint64_t v94 = 0x6E6920726F727245;
          unint64_t v95 = 0xE900000000000020;
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          uint64_t v67 = swift_bridgeObjectRetain();
          MEMORY[0x1BA9B38A0](v67, MEMORY[0x1E4FBB1A0]);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = v94;
          uint64_t v69 = v95;
          int v70 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v94 = 0;
          swift_retain();
          sub_1B6B33E34(v70, &v94, v68, v69);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v60 = v91;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v61 += 2;
        --v59;
      }
      while (v59);
      swift_bridgeObjectRelease();
      uint64_t v1 = v93;
    }
  }
  if (v1[37])
  {
    uint64_t v71 = (void *)v1[20];
    if (v71)
    {
      if (sub_1B69EEF08(v1[36], v1[37], v71)) {
        goto LABEL_92;
      }
      uint64_t v72 = qword_1EB9852D0;
      swift_bridgeObjectRetain();
      if (v72 != -1) {
        swift_once();
      }
      uint64_t v94 = 0;
      unint64_t v95 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v73 = swift_bridgeObjectRetain();
      MEMORY[0x1BA9B38A0](v73, MEMORY[0x1E4FBB1A0]);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v74 = qword_1EB9852D0;
      swift_bridgeObjectRetain();
      if (v74 != -1) {
        swift_once();
      }
      uint64_t v94 = 0;
      unint64_t v95 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    uint64_t v75 = v94;
    uint64_t v76 = v95;
    int v77 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v94 = 0;
    swift_retain();
    sub_1B6B33E34(v77, &v94, v75, v76);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_92:
  sub_1B6AFB058();
  return swift_bridgeObjectRelease();
}

void sub_1B6AF5E48()
{
  if (!v0[18]) {
    return;
  }
  unint64_t v1 = v0[3];
  uint64_t v39 = v0[2];
  unint64_t v40 = v1;
  uint64_t v37 = 0x254550595425;
  unint64_t v38 = 0xE600000000000000;
  sub_1B633AF88();
  if (sub_1B6E32678()) {
    return;
  }
  uint64_t v33 = (uint64_t)&v33;
  char v34 = v0;
  uint64_t v2 = v0[27];
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v35 = v2 + 112;
  int64_t v36 = v7 - 6;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_7:
    uint64_t v12 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v11);
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    uint64_t v39 = v14;
    unint64_t v40 = v13;
    uint64_t v37 = 0x254550595425;
    unint64_t v38 = 0xE600000000000000;
    if (sub_1B6E32678()) {
      char v8 = 1;
    }
  }
  uint64_t v15 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v3 + 8 * v15);
  if (v16) {
    goto LABEL_23;
  }
  uint64_t v15 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v3 + 8 * v15);
  if (v16) {
    goto LABEL_23;
  }
  uint64_t v15 = v9 + 3;
  if (v9 + 3 >= v7) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v3 + 8 * v15);
  if (v16) {
    goto LABEL_23;
  }
  uint64_t v15 = v9 + 4;
  if (v9 + 4 >= v7) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v3 + 8 * v15);
  if (v16) {
    goto LABEL_23;
  }
  uint64_t v15 = v9 + 5;
  if (v9 + 5 >= v7) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v3 + 8 * v15);
  if (v16)
  {
LABEL_23:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v9 = v15;
    goto LABEL_7;
  }
  while (v36 != v9)
  {
    unint64_t v16 = *(void *)(v35 + 8 * v9++);
    if (v16)
    {
      uint64_t v15 = v9 + 5;
      goto LABEL_23;
    }
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = v34;
  if ((v8 & 1) == 0)
  {
    uint64_t v18 = v34[21];
    if (v18)
    {
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = 0;
        char v21 = 0;
LABEL_28:
        uint64_t v22 = (unint64_t *)(v18 + 40 + 16 * v20++);
        do
        {
          unint64_t v23 = *v22;
          uint64_t v39 = *(v22 - 1);
          unint64_t v40 = v23;
          uint64_t v37 = 0x254550595425;
          unint64_t v38 = 0xE600000000000000;
          if (sub_1B6E32678())
          {
            char v21 = 1;
            if (v20 != v19) {
              goto LABEL_28;
            }
LABEL_43:
            swift_bridgeObjectRelease();
            return;
          }
          v22 += 2;
          ++v20;
        }
        while (v20 - v19 != 1);
        swift_bridgeObjectRelease();
        uint64_t v17 = v34;
        if (v21) {
          return;
        }
      }
    }
    uint64_t v24 = v17[26];
    if (v24)
    {
      uint64_t v25 = *(void *)(v24 + 16);
      if (v25)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = 0;
        char v27 = 0;
LABEL_38:
        uint64_t v28 = (unint64_t *)(v24 + 40 + 16 * v26++);
        do
        {
          unint64_t v29 = *v28;
          uint64_t v39 = *(v28 - 1);
          unint64_t v40 = v29;
          uint64_t v37 = 0x254550595425;
          unint64_t v38 = 0xE600000000000000;
          if (sub_1B6E32678())
          {
            char v27 = 1;
            if (v26 != v25) {
              goto LABEL_38;
            }
            goto LABEL_43;
          }
          v28 += 2;
          ++v26;
        }
        while (v26 - v25 != 1);
        swift_bridgeObjectRelease();
        if (v27) {
          return;
        }
      }
    }
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v31 = v39;
    uint64_t v30 = v40;
    int v32 = sub_1B6E32158();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v39 = 0;
    swift_retain();
    sub_1B6B33E34(v32, &v39, v31, v30);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_1B6AF6338(char a1)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x6C6174656DLL;
    }
    else {
      uint64_t v2 = 0x7466697773;
    }
    uint64_t v3 = 0xE500000000000000;
  }
  else
  {
    uint64_t v3 = 0xE100000000000000;
    uint64_t v2 = 99;
  }
  uint64_t v4 = *(void *)(v1 + 216);
  if (*(void *)(v4 + 16) && (uint64_t v5 = sub_1B62B2CE0(v2, v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B6AF63E4(char a1)
{
  uint64_t v2 = *(void *)(v1 + 224);
  if (v2)
  {
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v3 = 0x6C6174656DLL;
      }
      else {
        uint64_t v3 = 0x7466697773;
      }
      uint64_t v4 = 0xE500000000000000;
      if (!*(void *)(v2 + 16)) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v4 = 0xE100000000000000;
      uint64_t v3 = 99;
      if (!*(void *)(v2 + 16)) {
        goto LABEL_12;
      }
    }
    uint64_t v5 = sub_1B62B2CE0(v3, v4);
    if (v6)
    {
      uint64_t v2 = *(void *)(*(void *)(v2 + 56) + 16 * v5);
      swift_bridgeObjectRetain();
LABEL_13:
      swift_bridgeObjectRelease();
      return v2;
    }
LABEL_12:
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  return v2;
}

uint64_t sub_1B6AF64A4(uint64_t a1, uint64_t a2)
{
  return sub_1B6AF64BC(a1, a2);
}

uint64_t sub_1B6AF64BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v41 = *(void *)(a2 + 16);
  unint64_t v38 = *(void *)(a1 + 16);
  if (v41 >= v38) {
    int64_t v4 = *(void *)(a1 + 16);
  }
  else {
    int64_t v4 = *(void *)(a2 + 16);
  }
  uint64_t v43 = MEMORY[0x1E4FBC860];
  sub_1B6C3C374(0, v4, 0);
  uint64_t v40 = v2;
  uint64_t v34 = a1;
  if (!v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    unint64_t v6 = 0;
    unint64_t v8 = v41;
    unint64_t v22 = v38;
    if (!v38) {
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  uint64_t v35 = v2 + 32;
  uint64_t v36 = a1 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = 0;
  unint64_t v8 = v41;
  unint64_t v9 = v38;
  do
  {
    uint64_t v10 = 0;
    char v11 = v5;
    char v5 = 1;
    if ((v11 & 1) != 0 || v7 == v9)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v12 = v7 + 1;
      if (v6 == v8)
      {
        uint64_t v10 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        unint64_t v6 = v8;
      }
      else
      {
        unint64_t v16 = (uint64_t *)(v36 + 16 * v7);
        uint64_t v10 = *v16;
        uint64_t v13 = v16[1];
        uint64_t v17 = (uint64_t *)(v35 + 16 * v6);
        uint64_t v14 = *v17;
        uint64_t v15 = v17[1];
        unint64_t v18 = v6 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v6 = v18;
        unint64_t v9 = v38;
        unint64_t v8 = v41;
        char v5 = 0;
      }
      uint64_t v7 = v12;
    }
    unint64_t v20 = *(void *)(v43 + 16);
    unint64_t v19 = *(void *)(v43 + 24);
    if (v20 >= v19 >> 1)
    {
      uint64_t v32 = v7;
      unint64_t v33 = v6;
      sub_1B6C3C374(v19 > 1, v20 + 1, 1);
      uint64_t v7 = v32;
      unint64_t v6 = v33;
      unint64_t v9 = v38;
      unint64_t v8 = v41;
    }
    *(void *)(v43 + 16) = v20 + 1;
    char v21 = (void *)(v43 + 32 * v20);
    v21[4] = v10;
    v21[5] = v13;
    v21[6] = v14;
    v21[7] = v15;
    --v4;
  }
  while (v4);
  if ((v5 & 1) == 0)
  {
    uint64_t v2 = v40;
    unint64_t v22 = v9 - v7;
    if (v9 != v7)
    {
LABEL_22:
      uint64_t v24 = 0;
      unint64_t v25 = v8 - v6;
      uint64_t v37 = v34 + 16 * v7;
      uint64_t v39 = v2 + 16 * v6;
      do
      {
        if (!v25) {
          break;
        }
        uint64_t v26 = *(void *)(v37 + v24 + 40);
        uint64_t v42 = *(void *)(v37 + v24 + 32);
        uint64_t v27 = *(void *)(v39 + v24 + 32);
        uint64_t v28 = *(void *)(v39 + v24 + 40);
        unint64_t v30 = *(void *)(v43 + 16);
        unint64_t v29 = *(void *)(v43 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30 >= v29 >> 1) {
          sub_1B6C3C374(v29 > 1, v30 + 1, 1);
        }
        *(void *)(v43 + 16) = v30 + 1;
        uint64_t v31 = (void *)(v43 + 32 * v30);
        _OWORD v31[4] = v42;
        _OWORD v31[5] = v26;
        v31[6] = v27;
        v31[7] = v28;
        v24 += 16;
        --v25;
        --v22;
      }
      while (v22);
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1B6AF6770(char a1)
{
  uint64_t v2 = *(void *)(v1 + 232);
  if (!v2) {
    goto LABEL_12;
  }
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6C6174656DLL;
    }
    else {
      uint64_t v3 = 0x7466697773;
    }
    uint64_t v4 = 0xE500000000000000;
    if (!*(void *)(v2 + 16)) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v5 = sub_1B62B2CE0(v3, v4);
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 16 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v7;
    }
    goto LABEL_11;
  }
  uint64_t v4 = 0xE100000000000000;
  uint64_t v3 = 99;
  if (*(void *)(v2 + 16)) {
    goto LABEL_9;
  }
LABEL_11:
  swift_bridgeObjectRelease();
LABEL_12:
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v11 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  int v8 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v10 = 0;
  swift_retain();
  sub_1B6B33E34(v8, &v10, 0, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return 0;
}

uint64_t sub_1B6AF6A18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v14[2] = a5;
  v14[1] = a4;
  sub_1B6AFE4C0(0, &qword_1E9DD5B48, (uint64_t (*)(void))sub_1B6AFE46C, (uint64_t)&_s17CodeSourceSnippetC9ParameterV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)v14 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AFE46C();
  sub_1B6E33A88();
  char v16 = 0;
  uint64_t v12 = v14[3];
  sub_1B6E32F48();
  if (!v12)
  {
    char v15 = 1;
    sub_1B6E32F48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6AF6BBC(char *a1, char *a2)
{
  return sub_1B6BB5A80(*a1, *a2);
}

uint64_t sub_1B6AF6BC8()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1B6AF6BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6AFDBE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6AF6C14(uint64_t a1)
{
  unint64_t v2 = sub_1B6AFE46C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AF6C50(uint64_t a1)
{
  unint64_t v2 = sub_1B6AFE46C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6AF6C8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6AFE230(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1B6AF6CBC(void *a1)
{
  return sub_1B6AF6A18(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1B6AF6CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  *(_OWORD *)(v28 + 48) = 0u;
  *(_OWORD *)(v28 + 64) = 0u;
  *(_OWORD *)(v28 + 32) = 0u;
  *(unsigned char *)(v28 + 80) = 2;
  *(void *)(v28 + 88) = 0;
  *(void *)(v28 + 96) = 0;
  *(_DWORD *)(v28 + 104) = 33686018;
  *(_DWORD *)(v28 + 107) = 33686018;
  *(_OWORD *)(v28 + 112) = 0u;
  *(_OWORD *)(v28 + 128) = 0u;
  *(_OWORD *)(v28 + 144) = 0u;
  *(_OWORD *)(v28 + 160) = 0u;
  *(_OWORD *)(v28 + 176) = 0u;
  *(_OWORD *)(v28 + 192) = 0u;
  *(void *)(v28 + 208) = 0;
  unint64_t v33 = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  *(void *)(v28 + 224) = 0;
  *(void *)(v28 + 232) = 0;
  *(void *)(v28 + 216) = v33;
  *(unsigned char *)(v28 + 240) = 0;
  *(_OWORD *)(v28 + 248) = xmmword_1B6EA5C20;
  *(void *)(v28 + 296) = 0;
  *(_OWORD *)(v28 + 264) = 0u;
  *(_OWORD *)(v28 + 280) = 0u;
  *(unsigned char *)(v28 + 304) = 2;
  *(_OWORD *)(v28 + 312) = 0u;
  *(_OWORD *)(v28 + 328) = 0u;
  *(void *)(v28 + 344) = 0xE000000000000000;
  *(void *)(v28 + 352) = &unk_1F0F859F8;
  *(void *)(v28 + 360) = 0;
  *(void *)(v28 + 16) = a1;
  *(void *)(v28 + 24) = a2;
  *(void *)(v28 + 32) = a3;
  *(void *)(v28 + 40) = a4;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 64) = a5;
  *(void *)(v28 + 72) = a6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 105) = a7;
  *(unsigned char *)(v28 + 106) = a8;
  *(_DWORD *)(v28 + 107) = a9;
  *(void *)(v28 + 112) = a10;
  *(void *)(v28 + 120) = a11;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 128) = a12;
  *(void *)(v28 + 136) = a13;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 152) = a14;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 184) = a15;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 192) = a16;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 160) = a17;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 168) = a18;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 200) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 208) = a20;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 216) = a21;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 224) = a22;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 88) = a23;
  swift_bridgeObjectRelease();
  *(void *)(v28 + 96) = a24;
  swift_bridgeObjectRelease();
  sub_1B6AFE56C(a25, v28 + 248);
  *(void *)(v28 + 288) = a26;
  *(void *)(v28 + 296) = a27;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 304) = a28;
  return v28;
}

uint64_t sub_1B6AF6F80()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  if (v3) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  if (v4) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1B6AF64BC(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6AF3430(v7);
  swift_bridgeObjectRelease();
  sub_1B63860D0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 200)) {
    uint64_t v8 = *(void *)(v1 + 200);
  }
  else {
    uint64_t v8 = v2;
  }
  if (*(void *)(v1 + 208)) {
    uint64_t v2 = *(void *)(v1 + 208);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B6AF64BC(v8, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6AF3430(v9);
  swift_bridgeObjectRelease();
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  sub_1B6E328C8();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 0;
}

unint64_t sub_1B6AF7200(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6562616CLL;
      break;
    case 2:
    case 6:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x54636972656E6567;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 1701080931;
      break;
    case 12:
      unint64_t result = 0x70795465756C6176;
      break;
    case 13:
      unint64_t result = 0xD000000000000012;
      break;
    case 14:
    case 15:
      unint64_t result = 0x7461636572706564;
      break;
    case 16:
      unint64_t result = 0xD000000000000012;
      break;
    case 17:
      unint64_t result = 0x65756C6156736168;
      break;
    case 18:
      unint64_t result = 0x656D617261506E69;
      break;
    case 19:
      unint64_t result = 0x6D6172615074756FLL;
      break;
    case 20:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0x6E6564646968;
      break;
    case 23:
      unint64_t result = 0x7069746C6F6F74;
      break;
    case 24:
      unint64_t result = 0x4370756E61656C63;
      break;
    case 25:
      unint64_t result = 0x7473655470696B73;
      break;
    case 26:
      unint64_t result = 0x65706544656D6974;
      break;
    case 27:
      unint64_t result = 0xD000000000000013;
      break;
    case 28:
      unint64_t result = 0x6574726F70707573;
      break;
    case 29:
      unint64_t result = 0x61656C6261736964;
      break;
    case 30:
      unint64_t result = 0xD000000000000012;
      break;
    case 31:
      unint64_t result = 0x53746C7561666564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6AF75D4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1B6AF7200(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B6AF7200(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6AF7660()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6AF7200(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6AF76C4()
{
  sub_1B6AF7200(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6AF7718()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6AF7200(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6AF7778@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6AFDB90();
  *a1 = result;
  return result;
}

unint64_t sub_1B6AF77A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B6AF7200(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B6AF77D4()
{
  return sub_1B6AF7200(*v0);
}

uint64_t sub_1B6AF77DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6AFDB90();
  *a1 = result;
  return result;
}

void sub_1B6AF7804(unsigned char *a1@<X8>)
{
  *a1 = 32;
}

uint64_t sub_1B6AF7810(uint64_t a1)
{
  unint64_t v2 = sub_1B6AFBC08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6AF784C(uint64_t a1)
{
  unint64_t v2 = sub_1B6AFBC08();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6AF7888(void *a1)
{
  uint64_t v140 = *(void *)v1;
  sub_1B6AFE4C0(0, &qword_1E9DD5A90, (uint64_t (*)(void))sub_1B6AFBC08, (uint64_t)&_s17CodeSourceSnippetC10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v138 = *(void *)(v3 - 8);
  uint64_t v139 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)v134 - v5;
  *(_OWORD *)(v1 + 32) = 0u;
  float32x4_t v137 = (uint64_t *)(v1 + 32);
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(unsigned char *)(v1 + 80) = 2;
  *(_DWORD *)(v1 + 104) = 33686018;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  uint64_t v7 = (uint64_t *)(v1 + 112);
  *(_DWORD *)(v1 + 107) = 33686018;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(void *)(v1 + 208) = 0;
  *(void *)(v1 + 216) = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  *(void *)(v1 + 224) = 0;
  *(void *)(v1 + 232) = 0;
  *(unsigned char *)(v1 + 240) = 0;
  *(_OWORD *)(v1 + 248) = xmmword_1B6EA5C20;
  *(void *)(v1 + 296) = 0;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 280) = 0u;
  *(unsigned char *)(v1 + 304) = 2;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(void *)(v1 + 344) = 0xE000000000000000;
  *(void *)(v1 + 352) = &unk_1F0F858A8;
  uint64_t v151 = v1;
  *(void *)(v1 + 360) = 0;
  uint64_t v8 = a1[3];
  int v141 = a1;
  sub_1B62C14BC(a1, v8);
  sub_1B6AFBC08();
  uint64_t v9 = v142;
  sub_1B6E33A48();
  if (v9)
  {
    uint64_t v12 = (void *)v151;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B666BC88(v12[31], v12[32]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    uint64_t v13 = (uint64_t)v141;
LABEL_4:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v13);
    return v12;
  }
  uint64_t v142 = (void *)(v1 + 224);
  uint64_t v135 = (uint64_t *)(v1 + 312);
  float32x4_t v136 = (char *)(v1 + 104);
  LOBYTE(v145) = 0;
  uint64_t v10 = sub_1B6E32D98();
  uint64_t v11 = v6;
  char v15 = (void *)v151;
  *(void *)(v151 + 16) = v10;
  v15[3] = v16;
  uint64_t v17 = sub_1B6E32E88();
  char v18 = sub_1B69EF2A4(9, v17);
  swift_bridgeObjectRelease();
  if (v18)
  {
    sub_1B6AFBE10(0, (unint64_t *)&qword_1EB980318, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
    LOBYTE(v143) = 9;
    sub_1B6AFBCE8();
    sub_1B6E32DF8();
    v15[25] = v145;
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = sub_1B6E32E88();
  char v20 = sub_1B69EF2A4(10, v19);
  swift_bridgeObjectRelease();
  if (v20)
  {
    sub_1B6AFBE10(0, (unint64_t *)&qword_1EB980318, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
    LOBYTE(v143) = 10;
    sub_1B6AFBCE8();
    sub_1B6E32DF8();
    v15[26] = v145;
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = sub_1B6E32E88();
  char v22 = sub_1B69EF2A4(11, v21);
  swift_bridgeObjectRelease();
  if (v22)
  {
    sub_1B6AFDEBC();
    LOBYTE(v143) = 11;
    sub_1B6AFE1D0(&qword_1E9DD5B18);
    sub_1B6E32DF8();
    uint64_t v23 = v145;
    swift_retain();
    sub_1B6AFDFE4(v23, (uint64_t)v15, (void (*)(void *, uint64_t))sub_1B6AF9288);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v24 = sub_1B6E32E88();
  char v25 = sub_1B69EF2A4(24, v24);
  swift_bridgeObjectRelease();
  if (v25)
  {
    uint64_t v26 = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
    void *v142 = v26;
    swift_bridgeObjectRelease();
    sub_1B6AFDE58(0, &qword_1E9DD5B00, (uint64_t (*)(uint64_t))sub_1B6AFDEBC, MEMORY[0x1E4FBB718]);
    LOBYTE(v143) = 24;
    sub_1B6AFDF20();
    sub_1B6E32DF8();
    uint64_t v27 = v145;
    swift_retain();
    sub_1B6AFDFE4(v27, (uint64_t)v15, (void (*)(void *, uint64_t))sub_1B6AF9AD8);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v28 = sub_1B6E32E88();
  char v29 = sub_1B69EF2A4(2, v28);
  swift_bridgeObjectRelease();
  if (v29)
  {
    sub_1B6AFBE10(0, (unint64_t *)&qword_1EB980318, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
    LOBYTE(v143) = 2;
    sub_1B6AFBCE8();
    sub_1B6E32DF8();
    uint64_t v30 = v151;
    *(void *)(v151 + 88) = v145;
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1B6AFDCB8(v31, v30);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v32 = sub_1B6E32E88();
  char v33 = sub_1B69EF2A4(17, v32);
  swift_bridgeObjectRelease();
  if (v33)
  {
    sub_1B63860D0(0, &qword_1E9DD3EB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB718]);
    LOBYTE(v143) = 17;
    sub_1B6AFBC5C();
    sub_1B6E32DF8();
    uint64_t v34 = v11;
    *(unsigned char *)(v151 + 80) = v145;
  }
  else
  {
    uint64_t v34 = v11;
  }
  uint64_t v35 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B63860D0(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  LOBYTE(v143) = 1;
  uint64_t v36 = sub_1B6AFBDA8(&qword_1EB980118, (unint64_t *)&qword_1EB980110, v35);
  sub_1B6E32D78();
  uint64_t v140 = v36;
  uint64_t v142 = v34;
  uint64_t v37 = v146;
  uint64_t v38 = v138;
  if (v146 == 1)
  {
    uint64_t v39 = *v137;
    uint64_t v37 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v39 = v145;
  }
  uint64_t v12 = (void *)v151;
  *(void *)(v151 + 32) = v39;
  v12[5] = v37;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 23;
  sub_1B6E32D78();
  uint64_t v40 = v146;
  float32x4_t v137 = 0;
  if (v146 == 1)
  {
    uint64_t v41 = v12[8];
    uint64_t v40 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v41 = v145;
  }
  v12[8] = v41;
  v12[9] = v40;
  swift_bridgeObjectRelease();
  sub_1B63860D0(0, &qword_1E9DD3EB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB718]);
  uint64_t v43 = v42;
  LOBYTE(v143) = 3;
  unint64_t v44 = sub_1B6AFBC5C();
  uint64_t v45 = v139;
  uint64_t v46 = v142;
  int64_t v47 = v137;
  sub_1B6E32D78();
  float32x4_t v137 = v47;
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v46, v45);
LABEL_27:
    swift_release();
LABEL_28:
    uint64_t v13 = (uint64_t)v141;
    goto LABEL_4;
  }
  v134[1] = v43;
  _OWORD v134[2] = v44;
  char v48 = v145;
  if (v145 == 3) {
    char v48 = *v136;
  }
  *float32x4_t v136 = v48;
  LOBYTE(v143) = 22;
  uint64_t v49 = v139;
  uint64_t v50 = v142;
  BOOL v51 = v137;
  sub_1B6E32D78();
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v50, v49);
    uint64_t v12 = (void *)v151;
    swift_release();
LABEL_36:
    uint64_t v13 = (uint64_t)v141;
    goto LABEL_4;
  }
  char v52 = v145;
  if (v145 == 3) {
    char v52 = *(unsigned char *)(v151 + 105);
  }
  *(unsigned char *)(v151 + 105) = v52;
  LOBYTE(v143) = 25;
  sub_1B6E32D78();
  char v53 = v145;
  if (v145 == 3) {
    char v53 = *(unsigned char *)(v151 + 106);
  }
  uint64_t v54 = v151;
  *(unsigned char *)(v151 + 106) = v53;
  LOBYTE(v143) = 29;
  sub_1B6E32D78();
  char v55 = v145;
  if (v145 == 3) {
    char v55 = *(unsigned char *)(v54 + 107);
  }
  *(unsigned char *)(v54 + 107) = v55;
  LOBYTE(v143) = 26;
  sub_1B6E32D78();
  char v56 = v145;
  if (v145 == 3) {
    char v56 = *(unsigned char *)(v151 + 108);
  }
  *(unsigned char *)(v151 + 108) = v56;
  LOBYTE(v143) = 27;
  sub_1B6E32D78();
  char v57 = v145;
  if (v145 == 3) {
    char v57 = *(unsigned char *)(v151 + 109);
  }
  *(unsigned char *)(v151 + 109) = v57;
  LOBYTE(v143) = 14;
  sub_1B6E32D78();
  char v58 = v145;
  if (v145 == 3) {
    char v58 = *(unsigned char *)(v151 + 110);
  }
  *(unsigned char *)(v151 + 110) = v58;
  LOBYTE(v143) = 15;
  sub_1B6E32D78();
  uint64_t v59 = v146;
  if (v146 == 1)
  {
    uint64_t v60 = *v7;
    uint64_t v59 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v60 = v145;
  }
  uint64_t v61 = v151;
  *(void *)(v151 + 112) = v60;
  *(void *)(v61 + 120) = v59;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 16;
  sub_1B6E32D78();
  uint64_t v62 = v146;
  if (v146 == 1)
  {
    uint64_t v63 = *(void *)(v151 + 128);
    uint64_t v62 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v63 = v145;
  }
  uint64_t v64 = v151;
  *(void *)(v151 + 128) = v63;
  *(void *)(v64 + 136) = v62;
  swift_bridgeObjectRelease();
  sub_1B6AFBE10(0, (unint64_t *)&qword_1EB980318, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
  LOBYTE(v143) = 4;
  sub_1B6AFBCE8();
  sub_1B6E32D78();
  uint64_t v65 = v145;
  if (v145 == 1) {
    uint64_t v65 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 144) = v65;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 5;
  sub_1B6E32D78();
  uint64_t v66 = v145;
  if (v145 == 1) {
    uint64_t v66 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 152) = v66;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 6;
  sub_1B6E32D78();
  uint64_t v67 = v145;
  if (v145 == 1) {
    uint64_t v67 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 160) = v67;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 7;
  sub_1B6E32D78();
  uint64_t v68 = v145;
  if (v145 == 1) {
    uint64_t v68 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 168) = v68;
  swift_bridgeObjectRelease();
  sub_1B6AFBE10(0, &qword_1E9DD5AB0, &qword_1E9DD5AB8, (uint64_t)&_s8MetadataVN);
  LOBYTE(v143) = 8;
  sub_1B6AFBE7C();
  sub_1B6E32D78();
  uint64_t v69 = v145;
  if (v145 == 1) {
    uint64_t v69 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 176) = v69;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 20;
  sub_1B6E32D78();
  uint64_t v70 = v145;
  if (v145 == 1) {
    uint64_t v70 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 184) = v70;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 21;
  sub_1B6E32D78();
  uint64_t v71 = v145;
  if (v145 == 1) {
    uint64_t v71 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 192) = v71;
  swift_bridgeObjectRelease();
  sub_1B63860D0(0, &qword_1E9DCDDB0, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB718]);
  LOBYTE(v143) = 12;
  sub_1B6AFBFC4();
  sub_1B6E32D78();
  unint64_t v72 = v146;
  if (v146 == 60)
  {
    uint64_t v73 = *(void *)(v151 + 248);
    unint64_t v72 = *(void *)(v151 + 256);
    uint64_t v74 = *(void *)(v151 + 264);
    uint64_t v75 = *(void *)(v151 + 272);
    uint64_t v76 = *(void *)(v151 + 280);
    sub_1B666BC3C(v73, v72);
  }
  else
  {
    uint64_t v73 = v145;
    uint64_t v74 = v147;
    uint64_t v75 = v148;
    uint64_t v76 = v149;
  }
  int v77 = (void *)v151;
  uint64_t v78 = *(void *)(v151 + 248);
  unint64_t v79 = *(void *)(v151 + 256);
  *(void *)(v151 + 248) = v73;
  v77[32] = v72;
  v77[33] = v74;
  v77[34] = v75;
  v77[35] = v76;
  sub_1B666BC88(v78, v79);
  LOBYTE(v143) = 13;
  sub_1B6E32D78();
  uint64_t v80 = v146;
  if (v146 == 1)
  {
    uint64_t v81 = *(void *)(v151 + 288);
    uint64_t v80 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v81 = v145;
  }
  uint64_t v82 = v151;
  *(void *)(v151 + 288) = v81;
  *(void *)(v82 + 296) = v80;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 28;
  sub_1B6E32D78();
  uint64_t v83 = v145;
  if (v145 == 1) {
    uint64_t v83 = swift_bridgeObjectRetain();
  }
  *(void *)(v151 + 96) = v83;
  swift_bridgeObjectRelease();
  LOBYTE(v143) = 31;
  sub_1B6E32D78();
  float32x4_t v137 = 0;
  char v84 = v145;
  if (v145 == 3) {
    char v84 = *(unsigned char *)(v151 + 304);
  }
  *(unsigned char *)(v151 + 304) = v84;
  uint64_t v85 = sub_1B6E32E88();
  char v86 = sub_1B69EF2A4(18, v85);
  swift_bridgeObjectRelease();
  if (v86)
  {
    sub_1B6AFBE10(0, &qword_1E9DD5AD8, &qword_1E9DD5AE0, (uint64_t)&_s17CodeSourceSnippetC9ParameterVN);
    LOBYTE(v143) = 18;
    sub_1B6AFC058();
    uint64_t v87 = v137;
    sub_1B6E32DF8();
    float32x4_t v137 = v87;
    if (v87)
    {
      (*(void (**)(void *, uint64_t))(v138 + 8))(v142, v139);
      uint64_t v12 = (void *)v151;
      goto LABEL_27;
    }
    uint64_t v88 = v135;
    uint64_t *v135 = v145;
    swift_bridgeObjectRelease();
    uint64_t v89 = *v88;
    if (*v88 && (uint64_t v90 = *(void *)(v89 + 16)) != 0)
    {
      swift_bridgeObjectRetain_n();
      int64_t v91 = (uint64_t *)(v89 + 56);
      uint64_t v92 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v93 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v94 = *(v91 - 2);
        uint64_t v140 = *(v91 - 3);
        uint64_t v95 = *v91;
        float32x4_t v136 = (char *)*(v91 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v93 = sub_1B6335858(0, v93[2] + 1, 1, v93);
        }
        unint64_t v97 = v93[2];
        unint64_t v96 = v93[3];
        if (v97 >= v96 >> 1) {
          uint64_t v93 = sub_1B6335858(v96 > 1, v97 + 1, 1, v93);
        }
        v93[2] = v97 + 1;
        unint64_t v98 = &v93[2 * v97];
        v98[4] = v136;
        void v98[5] = v95;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v92 = sub_1B6335858(0, v92[2] + 1, 1, v92);
        }
        unint64_t v100 = v92[2];
        unint64_t v99 = v92[3];
        if (v100 >= v99 >> 1) {
          uint64_t v92 = sub_1B6335858(v99 > 1, v100 + 1, 1, v92);
        }
        v91 += 4;
        _OWORD v92[2] = v100 + 1;
        uint64_t v101 = &v92[2 * v100];
        v101[4] = v140;
        v101[5] = v94;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v90;
      }
      while (v90);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v92 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v93 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v102 = v151;
    *(void *)(v151 + 168) = v93;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v102 + 160) = v92;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v102 + 312) = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v103 = sub_1B6E32E88();
  char v104 = sub_1B69EF2A4(19, v103);
  swift_bridgeObjectRelease();
  if (v104)
  {
    sub_1B6AFBE10(0, &qword_1E9DD5AD8, &qword_1E9DD5AE0, (uint64_t)&_s17CodeSourceSnippetC9ParameterVN);
    LOBYTE(v143) = 19;
    sub_1B6AFC058();
    uint64_t v105 = v137;
    sub_1B6E32DF8();
    float32x4_t v137 = v105;
    if (v105)
    {
      uint64_t v12 = (void *)v151;
      swift_release();
      (*(void (**)(void *, uint64_t))(v138 + 8))(v142, v139);
      goto LABEL_28;
    }
    uint64_t v106 = v151;
    *(void *)(v151 + 320) = v145;
    swift_bridgeObjectRelease();
    uint64_t v107 = *(void *)(v106 + 320);
    if (v107 && (uint64_t v108 = *(void *)(v107 + 16)) != 0)
    {
      swift_bridgeObjectRetain_n();
      long long v109 = (uint64_t *)(v107 + 56);
      long long v110 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v111 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v112 = *(v109 - 2);
        uint64_t v140 = *(v109 - 3);
        uint64_t v113 = *v109;
        float32x4_t v136 = (char *)*(v109 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v111 = sub_1B6335858(0, v111[2] + 1, 1, v111);
        }
        unint64_t v115 = v111[2];
        unint64_t v114 = v111[3];
        if (v115 >= v114 >> 1) {
          uint64_t v111 = sub_1B6335858(v114 > 1, v115 + 1, 1, v111);
        }
        v111[2] = v115 + 1;
        uint64_t v116 = &v111[2 * v115];
        v116[4] = v136;
        v116[5] = v113;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v110 = sub_1B6335858(0, v110[2] + 1, 1, v110);
        }
        unint64_t v118 = v110[2];
        unint64_t v117 = v110[3];
        if (v118 >= v117 >> 1) {
          long long v110 = sub_1B6335858(v117 > 1, v118 + 1, 1, v110);
        }
        v109 += 4;
        v110[2] = v118 + 1;
        int v119 = &v110[2 * v118];
        v119[4] = v140;
        v119[5] = v112;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v108;
      }
      while (v108);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      long long v110 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v111 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v120 = v151;
    *(void *)(v151 + 208) = v111;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v120 + 200) = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v120 + 320) = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B6AFBE10(0, &qword_1E9DD5AD8, &qword_1E9DD5AE0, (uint64_t)&_s17CodeSourceSnippetC9ParameterVN);
  LOBYTE(v143) = 30;
  sub_1B6AFC058();
  uint64_t v121 = v137;
  sub_1B6E32D78();
  if (v121)
  {
    uint64_t v12 = (void *)v151;
    swift_release();
    (*(void (**)(void *, uint64_t))(v138 + 8))(v142, v139);
    goto LABEL_36;
  }
  uint64_t v122 = v145;
  if (v145 == 1) {
    uint64_t v122 = swift_bridgeObjectRetain();
  }
  uint64_t v123 = v151;
  *(void *)(v151 + 328) = v122;
  swift_bridgeObjectRelease();
  unint64_t v124 = *(void *)(v123 + 40);
  if (v124)
  {
    uint64_t v125 = *(void *)(v151 + 32);
    uint64_t v126 = qword_1EB981168;
    swift_bridgeObjectRetain();
    if (v126 != -1) {
      swift_once();
    }
    uint64_t v127 = *(void *)(qword_1EB997F48 + 16);
    if (v127)
    {
      uint64_t v128 = qword_1EB997F48 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1B629C37C(v128, (uint64_t)v150);
        uint64_t v145 = v125;
        unint64_t v146 = v124;
        sub_1B68168F0(v150, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        uint64_t v143 = sub_1B6A3D8B8();
        uint64_t v144 = v129;
        sub_1B633AF88();
        char v130 = sub_1B6E32678();
        swift_bridgeObjectRelease();
        if (v130) {
          break;
        }
        sub_1B68168F0(v150, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        v128 += 40;
        if (!--v127)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_126;
        }
      }
      swift_bridgeObjectRelease_n();
      (*(void (**)(void *, uint64_t))(v138 + 8))(v142, v139);
      sub_1B68168F0(v150, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      swift_bridgeObjectRelease();
      uint64_t v132 = v151;
      uint64_t v133 = *(void *)(v151 + 24);
      *(void *)(v151 + 48) = *(void *)(v151 + 16);
      *(void *)(v132 + 56) = v133;
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_126:
      (*(void (**)(void *, uint64_t))(v138 + 8))(v142, v139);
      uint64_t v131 = v151;
      *(void *)(v151 + 48) = v125;
      *(void *)(v131 + 56) = v124;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v138 + 8))(v142, v139);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v141);
  return (void *)v151;
}

uint64_t sub_1B6AF9288(uint64_t *a1, uint64_t a2)
{
  uint64_t v75 = a2;
  sub_1B62E17B4();
  uint64_t v74 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v73 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1B6E31098();
  uint64_t v7 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72, v8);
  uint64_t v71 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v70 = a1[2];
  uint64_t v80 = a1[3];
  BOOL v12 = v10 == 42 && v11 == 0xE100000000000000;
  if (v12 || (sub_1B6E334B8() & 1) != 0)
  {
    uint64_t v81 = (void *)MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, 3, 0);
    uint64_t v13 = v81;
    if (byte_1F0F859F0)
    {
      unint64_t v14 = 0xE500000000000000;
      if (byte_1F0F859F0 == 1) {
        uint64_t v15 = 0x6C6174656DLL;
      }
      else {
        uint64_t v15 = 0x7466697773;
      }
    }
    else
    {
      unint64_t v14 = 0xE100000000000000;
      uint64_t v15 = 99;
    }
    unint64_t v17 = v81[2];
    unint64_t v16 = v81[3];
    unint64_t v18 = v17 + 1;
    if (v17 >= v16 >> 1)
    {
      sub_1B6C3C3B8(v16 > 1, v17 + 1, 1);
      uint64_t v13 = v81;
    }
    _OWORD v13[2] = v18;
    uint64_t v19 = &v13[2 * v17];
    v19[4] = v15;
    v19[5] = v14;
    if (byte_1F0F859F1)
    {
      unint64_t v20 = 0xE500000000000000;
      if (byte_1F0F859F1 == 1) {
        uint64_t v21 = 0x6C6174656DLL;
      }
      else {
        uint64_t v21 = 0x7466697773;
      }
    }
    else
    {
      unint64_t v20 = 0xE100000000000000;
      uint64_t v21 = 99;
    }
    uint64_t v81 = v13;
    unint64_t v22 = v13[3];
    if (v18 >= v22 >> 1)
    {
      sub_1B6C3C3B8(v22 > 1, v17 + 2, 1);
      uint64_t v13 = v81;
    }
    _OWORD v13[2] = v17 + 2;
    uint64_t v23 = &v13[2 * v18];
    void v23[4] = v21;
    __n128 v23[5] = v20;
    if (byte_1F0F859F2)
    {
      unint64_t v24 = 0xE500000000000000;
      if (byte_1F0F859F2 == 1) {
        uint64_t v25 = 0x6C6174656DLL;
      }
      else {
        uint64_t v25 = 0x7466697773;
      }
    }
    else
    {
      unint64_t v24 = 0xE100000000000000;
      uint64_t v25 = 99;
    }
    uint64_t v81 = v13;
    unint64_t v27 = v13[2];
    unint64_t v26 = v13[3];
    if (v27 >= v26 >> 1)
    {
      sub_1B6C3C3B8(v26 > 1, v27 + 1, 1);
      uint64_t v13 = v81;
    }
    _OWORD v13[2] = v27 + 1;
    uint64_t v28 = &v13[2 * v27];
    v28[4] = v25;
    v28[5] = v24;
    uint64_t v81 = v13;
    sub_1B63860D0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6646D3C();
    uint64_t v10 = sub_1B6E31638();
    unint64_t v11 = v29;
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v81 = (void *)v10;
  unint64_t v82 = v11;
  sub_1B633AF88();
  uint64_t v30 = sub_1B6E32688();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31) {
    return swift_bridgeObjectRelease();
  }
  v65[1] = v2;
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  v65[0] = v30;
  uint64_t v32 = (void *)(v30 + 56);
  unint64_t v67 = 0x80000001B6F48690;
  unint64_t v68 = 0x80000001B6F48670;
  long long v66 = xmmword_1B6E77050;
  uint64_t v33 = v75;
  while (1)
  {
    uint64_t v37 = *v32;
    swift_bridgeObjectRetain();
    uint64_t v83 = v37;
    uint64_t v38 = sub_1B6E32508();
    uint64_t v40 = v39;
    if ((unint64_t)sub_1B6E32CC8() > 2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      uint64_t v78 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      BOOL v51 = v81;
      unint64_t v50 = v82;
      char v52 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      int v77 = v32;
      uint64_t v79 = v31;
      uint64_t v53 = qword_1EB997FF0;
      uint64_t v54 = qword_1EB985528;
      swift_retain();
      if (v54 != -1) {
        swift_once();
      }
      sub_1B6AFDE58(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = v66;
      *(void *)(v55 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v55 + 64) = sub_1B678615C();
      *(void *)(v55 + 32) = v51;
      *(void *)(v55 + 40) = v50;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v53;
      char v56 = v71;
      sub_1B6E31088();
      uint64_t v57 = (uint64_t)v73;
      uint64_t v58 = v74[12];
      uint64_t v59 = v74[16];
      char v60 = v52;
      uint64_t v61 = &v73[v74[20]];
      (*v69)(v73, v56, v72);
      *(unsigned char *)(v57 + v58) = v60;
      *(void *)(v57 + v59) = 0;
      *(void *)uint64_t v61 = v51;
      *((void *)v61 + 1) = v50;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B67A3738(v57);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v33 = v75;
      uint64_t v31 = v79;
      uint64_t v32 = v77;
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v81 = *(void **)(v33 + 216);
    uint64_t v42 = v81;
    *(void *)(v33 + 216) = 0x8000000000000000;
    unint64_t v44 = sub_1B62B2CE0(v38, v40);
    char v45 = v43;
    uint64_t v46 = v42[2] + ((v43 & 1) == 0);
    if (v42[3] < v46) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v49 = v81;
      if (v43) {
        goto LABEL_48;
      }
    }
    else
    {
      sub_1B6ACBEF0();
      uint64_t v49 = v81;
      if (v45)
      {
LABEL_48:
        uint64_t v62 = (uint64_t *)(v49[7] + 16 * v44);
        swift_bridgeObjectRelease();
        uint64_t v63 = v80;
        *uint64_t v62 = v70;
        v62[1] = v63;
        goto LABEL_32;
      }
    }
LABEL_31:
    v49[(v44 >> 6) + 8] |= 1 << v44;
    uint64_t v34 = (uint64_t *)(v49[6] + 16 * v44);
    *uint64_t v34 = v38;
    v34[1] = v40;
    uint64_t v35 = (uint64_t *)(v49[7] + 16 * v44);
    uint64_t v36 = v80;
    *uint64_t v35 = v70;
    v35[1] = v36;
    ++v49[2];
    swift_bridgeObjectRetain();
LABEL_32:
    *(void *)(v33 + 216) = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    v32 += 4;
    if (!--v31)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  sub_1B6AB6018(v46, isUniquelyReferenced_nonNull_native);
  uint64_t v47 = sub_1B62B2CE0(v38, v40);
  if ((v45 & 1) == (v48 & 1))
  {
    unint64_t v44 = v47;
    uint64_t v49 = v81;
    if (v45) {
      goto LABEL_48;
    }
    goto LABEL_31;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6AF9AD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v75 = a2;
  sub_1B62E17B4();
  uint64_t v74 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v73 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1B6E31098();
  uint64_t v7 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72, v8);
  uint64_t v71 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v70 = a1[2];
  uint64_t v80 = a1[3];
  BOOL v12 = v10 == 42 && v11 == 0xE100000000000000;
  if (v12 || (sub_1B6E334B8() & 1) != 0)
  {
    uint64_t v81 = (void *)MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, 3, 0);
    uint64_t v13 = v81;
    if (byte_1F0F85960)
    {
      unint64_t v14 = 0xE500000000000000;
      if (byte_1F0F85960 == 1) {
        uint64_t v15 = 0x6C6174656DLL;
      }
      else {
        uint64_t v15 = 0x7466697773;
      }
    }
    else
    {
      unint64_t v14 = 0xE100000000000000;
      uint64_t v15 = 99;
    }
    unint64_t v17 = v81[2];
    unint64_t v16 = v81[3];
    unint64_t v18 = v17 + 1;
    if (v17 >= v16 >> 1)
    {
      sub_1B6C3C3B8(v16 > 1, v17 + 1, 1);
      uint64_t v13 = v81;
    }
    _OWORD v13[2] = v18;
    uint64_t v19 = &v13[2 * v17];
    v19[4] = v15;
    v19[5] = v14;
    if (byte_1F0F85961)
    {
      unint64_t v20 = 0xE500000000000000;
      if (byte_1F0F85961 == 1) {
        uint64_t v21 = 0x6C6174656DLL;
      }
      else {
        uint64_t v21 = 0x7466697773;
      }
    }
    else
    {
      unint64_t v20 = 0xE100000000000000;
      uint64_t v21 = 99;
    }
    uint64_t v81 = v13;
    unint64_t v22 = v13[3];
    if (v18 >= v22 >> 1)
    {
      sub_1B6C3C3B8(v22 > 1, v17 + 2, 1);
      uint64_t v13 = v81;
    }
    _OWORD v13[2] = v17 + 2;
    uint64_t v23 = &v13[2 * v18];
    void v23[4] = v21;
    __n128 v23[5] = v20;
    if (byte_1F0F85962)
    {
      unint64_t v24 = 0xE500000000000000;
      if (byte_1F0F85962 == 1) {
        uint64_t v25 = 0x6C6174656DLL;
      }
      else {
        uint64_t v25 = 0x7466697773;
      }
    }
    else
    {
      unint64_t v24 = 0xE100000000000000;
      uint64_t v25 = 99;
    }
    uint64_t v81 = v13;
    unint64_t v27 = v13[2];
    unint64_t v26 = v13[3];
    if (v27 >= v26 >> 1)
    {
      sub_1B6C3C3B8(v26 > 1, v27 + 1, 1);
      uint64_t v13 = v81;
    }
    _OWORD v13[2] = v27 + 1;
    uint64_t v28 = &v13[2 * v27];
    v28[4] = v25;
    v28[5] = v24;
    uint64_t v81 = v13;
    sub_1B63860D0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6646D3C();
    uint64_t v10 = sub_1B6E31638();
    unint64_t v11 = v29;
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v81 = (void *)v10;
  unint64_t v82 = v11;
  sub_1B633AF88();
  uint64_t v30 = sub_1B6E32688();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31) {
    return swift_bridgeObjectRelease();
  }
  v65[1] = v2;
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  v65[0] = v30;
  uint64_t v32 = (void *)(v30 + 56);
  unint64_t v67 = 0x80000001B6F48690;
  unint64_t v68 = 0x80000001B6F48670;
  long long v66 = xmmword_1B6E77050;
  uint64_t v33 = v75;
  while (1)
  {
    uint64_t v37 = *v32;
    swift_bridgeObjectRetain();
    uint64_t v83 = v37;
    uint64_t v38 = sub_1B6E32508();
    uint64_t v40 = v39;
    if ((unint64_t)sub_1B6E32CC8() > 2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      uint64_t v78 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      BOOL v51 = v81;
      unint64_t v50 = v82;
      char v52 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      int v77 = v32;
      uint64_t v79 = v31;
      uint64_t v53 = qword_1EB997FF0;
      uint64_t v54 = qword_1EB985528;
      swift_retain();
      if (v54 != -1) {
        swift_once();
      }
      sub_1B6AFDE58(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = v66;
      *(void *)(v55 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v55 + 64) = sub_1B678615C();
      *(void *)(v55 + 32) = v51;
      *(void *)(v55 + 40) = v50;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v53;
      char v56 = v71;
      sub_1B6E31088();
      uint64_t v57 = (uint64_t)v73;
      uint64_t v58 = v74[12];
      uint64_t v59 = v74[16];
      char v60 = v52;
      uint64_t v61 = &v73[v74[20]];
      (*v69)(v73, v56, v72);
      *(unsigned char *)(v57 + v58) = v60;
      *(void *)(v57 + v59) = 0;
      *(void *)uint64_t v61 = v51;
      *((void *)v61 + 1) = v50;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B67A3738(v57);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v33 = v75;
      uint64_t v31 = v79;
      uint64_t v32 = v77;
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v81 = *(void **)(v33 + 224);
    uint64_t v42 = v81;
    *(void *)(v33 + 224) = 0x8000000000000000;
    unint64_t v44 = sub_1B62B2CE0(v38, v40);
    char v45 = v43;
    uint64_t v46 = v42[2] + ((v43 & 1) == 0);
    if (v42[3] < v46) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v49 = v81;
      if (v43) {
        goto LABEL_48;
      }
    }
    else
    {
      sub_1B6ACBEF0();
      uint64_t v49 = v81;
      if (v45)
      {
LABEL_48:
        uint64_t v62 = (uint64_t *)(v49[7] + 16 * v44);
        swift_bridgeObjectRelease();
        uint64_t v63 = v80;
        *uint64_t v62 = v70;
        v62[1] = v63;
        goto LABEL_32;
      }
    }
LABEL_31:
    v49[(v44 >> 6) + 8] |= 1 << v44;
    uint64_t v34 = (uint64_t *)(v49[6] + 16 * v44);
    *uint64_t v34 = v38;
    v34[1] = v40;
    uint64_t v35 = (uint64_t *)(v49[7] + 16 * v44);
    uint64_t v36 = v80;
    *uint64_t v35 = v70;
    v35[1] = v36;
    ++v49[2];
    swift_bridgeObjectRetain();
LABEL_32:
    *(void *)(v33 + 224) = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    v32 += 4;
    if (!--v31)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  sub_1B6AB6018(v46, isUniquelyReferenced_nonNull_native);
  uint64_t v47 = sub_1B62B2CE0(v38, v40);
  if ((v45 & 1) == (v48 & 1))
  {
    unint64_t v44 = v47;
    uint64_t v49 = v81;
    if (v45) {
      goto LABEL_48;
    }
    goto LABEL_31;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t *sub_1B6AFA328(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *result;
  uint64_t v4 = result[1];
  uint64_t v5 = *(void *)(a2 + 216);
  uint64_t v40 = *result;
  if (!*(void *)(v5 + 16))
  {
LABEL_10:
    uint64_t v12 = *(void *)(v2 + 88);
    if (!v12) {
      return result;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B62B2CE0(v3, v4);
  if ((v7 & 1) == 0)
  {
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = (void *)v10;
  uint64_t v43 = v9;
  sub_1B633AF88();
  LOBYTE(v10) = sub_1B6E32678();
  uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_10;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v42 = 0;
  uint64_t v43 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  if (*(void *)(*(void *)(a2 + 216) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1B62B2CE0(v3, v4);
    if (v11) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t)v42;
  int v37 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v42 = 0;
  swift_retain();
  sub_1B6B33E34(v37, (uint64_t *)&v42, v36, v43);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t *)swift_release();
  uint64_t v2 = a2;
  uint64_t v3 = v40;
  uint64_t v12 = *(void *)(a2 + 88);
  if (v12)
  {
LABEL_11:
    uint64_t v13 = *(void *)(v12 + 16);
    if (!v13) {
      return result;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v14 = 40;
    uint64_t v38 = v12;
    while (1)
    {
      uint64_t v17 = *(void *)(v2 + 216);
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v44 = *(void *)(v12 + v14);
      if (v18)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1B62B2CE0(v3, v4);
        if (v20)
        {
          uint64_t v21 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v19);
          uint64_t v22 = *v21;
          uint64_t v23 = v21[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      uint64_t v22 = 0;
      uint64_t v23 = 0;
LABEL_21:
      uint64_t v42 = (void *)v22;
      uint64_t v43 = v23;
      sub_1B633AF88();
      uint64_t v24 = sub_1B6E32618();
      uint64_t v41 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = *(void **)(v2 + 216);
      uint64_t v27 = (uint64_t)v42;
      *(void *)(v2 + 216) = 0x8000000000000000;
      uint64_t v3 = v40;
      unint64_t v28 = sub_1B62B2CE0(v40, v4);
      char v30 = v29;
      uint64_t v31 = *(void *)(v27 + 16) + ((v29 & 1) == 0);
      if (*(void *)(v27 + 24) >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1B6ACBEF0();
        }
        uint64_t v3 = v40;
      }
      else
      {
        sub_1B6AB6018(v31, isUniquelyReferenced_nonNull_native);
        uint64_t v32 = sub_1B62B2CE0(v40, v4);
        if ((v30 & 1) != (v33 & 1))
        {
          uint64_t result = (uint64_t *)sub_1B6E33838();
          __break(1u);
          return result;
        }
        unint64_t v28 = v32;
      }
      uint64_t v12 = v38;
      uint64_t v34 = v42;
      if (v30)
      {
        uint64_t v35 = (uint64_t *)(v42[7] + 16 * v28);
        swift_bridgeObjectRelease();
        *uint64_t v35 = v24;
        v35[1] = v41;
      }
      else
      {
        v42[(v28 >> 6) + 8] |= 1 << v28;
        uint64_t v15 = (uint64_t *)(v34[6] + 16 * v28);
        *uint64_t v15 = v3;
        v15[1] = v4;
        unint64_t v16 = (uint64_t *)(v34[7] + 16 * v28);
        uint64_t *v16 = v24;
        v16[1] = v41;
        ++v34[2];
        swift_bridgeObjectRetain();
      }
      uint64_t v2 = a2;
      *(void *)(a2 + 216) = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 += 16;
      if (!--v13) {
        return (uint64_t *)swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1B6AFA850(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6AFE4C0(0, &qword_1E9DD5B20, (uint64_t (*)(void))sub_1B6AFBC08, (uint64_t)&_s17CodeSourceSnippetC10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)v20 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AFBC08();
  sub_1B6E33A88();
  LOBYTE(v21) = 0;
  swift_bridgeObjectRetain();
  sub_1B6E32F48();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v21 = *(void *)(v3 + 216);
    char v24 = 11;
    sub_1B6AFDEBC();
    uint64_t v13 = v12;
    sub_1B6AFE1D0(&qword_1E9DD5B28);
    sub_1B6E32FA8();
    uint64_t v14 = *(void *)(v3 + 200);
    v20[3] = v13;
    *(void *)&long long v21 = v14;
    char v24 = 9;
    sub_1B63860D0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t v16 = v15;
    unint64_t v17 = sub_1B6A4B310();
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 208);
    char v24 = 10;
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 88);
    char v24 = 2;
    sub_1B6E32F38();
    v20[1] = v17;
    _OWORD v20[2] = v16;
    LOBYTE(v21) = 17;
    sub_1B6E32F08();
    LOBYTE(v21) = 1;
    swift_bridgeObjectRetain();
    sub_1B6E32EF8();
    swift_bridgeObjectRelease();
    LOBYTE(v21) = 23;
    swift_bridgeObjectRetain();
    sub_1B6E32EF8();
    swift_bridgeObjectRelease();
    LOBYTE(v21) = 3;
    sub_1B6E32F08();
    LOBYTE(v21) = 22;
    sub_1B6E32F08();
    LOBYTE(v21) = 25;
    sub_1B6E32F08();
    LOBYTE(v21) = 29;
    sub_1B6E32F08();
    LOBYTE(v21) = 26;
    sub_1B6E32F08();
    LOBYTE(v21) = 27;
    sub_1B6E32F08();
    LOBYTE(v21) = 14;
    sub_1B6E32F08();
    LOBYTE(v21) = 15;
    swift_bridgeObjectRetain();
    sub_1B6E32EF8();
    swift_bridgeObjectRelease();
    LOBYTE(v21) = 16;
    swift_bridgeObjectRetain();
    sub_1B6E32EF8();
    swift_bridgeObjectRelease();
    *(void *)&long long v21 = *(void *)(v3 + 144);
    char v24 = 4;
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 160);
    char v24 = 6;
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 168);
    char v24 = 7;
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 176);
    char v24 = 8;
    sub_1B63860D0(0, &qword_1E9DD5AB8, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB320]);
    sub_1B6AFBF34(&qword_1E9DD5B30, (void (*)(void))sub_1B678C294);
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 184);
    char v24 = 20;
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 192);
    char v24 = 21;
    sub_1B6E32F38();
    uint64_t v18 = *(void *)(v3 + 280);
    long long v19 = *(_OWORD *)(v3 + 264);
    long long v21 = *(_OWORD *)(v3 + 248);
    long long v22 = v19;
    uint64_t v23 = v18;
    char v24 = 12;
    sub_1B6646C2C();
    sub_1B6E32F38();
    LOBYTE(v21) = 13;
    swift_bridgeObjectRetain();
    sub_1B6E32EF8();
    swift_bridgeObjectRelease();
    *(void *)&long long v21 = *(void *)(v3 + 224);
    char v24 = 24;
    sub_1B6E32F38();
    *(void *)&long long v21 = *(void *)(v3 + 96);
    char v24 = 28;
    sub_1B6E32F38();
    LOBYTE(v21) = 31;
    sub_1B6E32F08();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1B6AFB058()
{
  if (!*(void *)(v0 + 160)) {
    goto LABEL_8;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B6AFD98C(v1, (uint64_t)&unk_1F0F85840);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16))
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    unint64_t v11 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    MEMORY[0x1BA9B38A0](v2, MEMORY[0x1E4FBB1A0]);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    int v3 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v10 = 0;
    swift_retain();
    sub_1B6B33E34(v3, &v10, 0, 0xE000000000000000);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_8:
    if (*(void *)(v0 + 200)) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 200))
  {
LABEL_9:
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_1B6AFD98C(v4, (uint64_t)&unk_1F0F85840);
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    if (*(void *)(v5 + 16))
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      MEMORY[0x1BA9B38A0](v5, MEMORY[0x1E4FBB1A0]);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v7 = v10;
      uint64_t v6 = v11;
      int v8 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v10 = 0;
      swift_retain();
      sub_1B6B33E34(v8, &v10, v7, v6);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
LABEL_18:

  return swift_arrayDestroy();
}

uint64_t sub_1B6AFB504()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B666BC88(*(void *)(v0 + 248), *(void *)(v0 + 256));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B6AFB604()
{
  sub_1B6AFB504();

  return swift_deallocClassInstance();
}

uint64_t _s17CodeSourceSnippetCMa()
{
  return self;
}

ValueMetadata *_s17CodeSourceSnippetC9ParameterVMa()
{
  return &_s17CodeSourceSnippetC9ParameterVN;
}

uint64_t sub_1B6AFB66C(void **a1, void **a2)
{
  return sub_1B6AFBA40(*a1, *a2);
}

void *sub_1B6AFB678@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1B6AF7888(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B6AFB6D0(void *a1)
{
  return sub_1B6AFA850(a1);
}

uint64_t sub_1B6AFB6F4()
{
  return sub_1B6AF6F80();
}

uint64_t sub_1B6AFB718(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1B6A2E1A0();
  if (!v8) {
    goto LABEL_19;
  }
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  uint64_t v15 = (void *)*a5;
  unint64_t v17 = sub_1B62B2CE0(v7, v8);
  char v18 = v16;
  uint64_t v19 = v15[2] + ((v16 & 1) == 0);
  if (v15[3] >= v19)
  {
    if (a4)
    {
      long long v22 = (void *)*a5;
      if (v16) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_1B6ACBEF0();
      long long v22 = (void *)*a5;
      if (v18) {
        goto LABEL_8;
      }
    }
LABEL_10:
    v22[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v27 = (uint64_t *)(v22[6] + 16 * v17);
    *uint64_t v27 = v11;
    v27[1] = v12;
    unint64_t v28 = (void *)(v22[7] + 16 * v17);
    void *v28 = v13;
    v28[1] = v14;
    ++v22[2];
LABEL_11:
    uint64_t v29 = sub_1B6A2E1A0();
    if (v30)
    {
      uint64_t v33 = v29;
      uint64_t v34 = v30;
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      do
      {
        uint64_t v42 = (void *)*a5;
        unint64_t v43 = sub_1B62B2CE0(v33, v34);
        char v45 = v44;
        if (v42[3] < (int64_t)(v42[2] + ((v44 & 1) == 0)))
        {
          sub_1B6AB6018(v42[2] + ((v44 & 1) == 0), 1);
          unint64_t v43 = sub_1B62B2CE0(v33, v34);
          if ((v45 & 1) != (v46 & 1)) {
            goto LABEL_20;
          }
        }
        uint64_t v47 = (void *)*a5;
        uint64_t v48 = 16 * v43;
        if (v45)
        {
          uint64_t v49 = (uint64_t *)(v47[7] + v48);
          uint64_t v51 = *v49;
          uint64_t v50 = v49[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v52 = (void *)(v47[7] + v48);
          swift_bridgeObjectRelease();
          *char v52 = v51;
          v52[1] = v50;
        }
        else
        {
          v47[(v43 >> 6) + 8] |= 1 << v43;
          int v37 = (uint64_t *)(v47[6] + v48);
          *int v37 = v33;
          v37[1] = v34;
          uint64_t v38 = (void *)(v47[7] + v48);
          *uint64_t v38 = v35;
          v38[1] = v36;
          ++v47[2];
        }
        uint64_t v33 = sub_1B6A2E1A0();
        uint64_t v34 = v39;
        uint64_t v35 = v40;
        uint64_t v36 = v41;
      }
      while (v39);
    }
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B62BB588();
    return swift_release();
  }
  sub_1B6AB6018(v19, a4 & 1);
  uint64_t v20 = sub_1B62B2CE0(v11, v12);
  if ((v18 & 1) == (v21 & 1))
  {
    unint64_t v17 = v20;
    long long v22 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v23 = (uint64_t *)(v22[7] + 16 * v17);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v26 = (void *)(v22[7] + 16 * v17);
    swift_bridgeObjectRelease();
    *unint64_t v26 = v25;
    v26[1] = v24;
    goto LABEL_11;
  }
LABEL_20:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6AFBA40(void *a1, void *a2)
{
  if (a1[2] != a2[2] || a1[3] != a2[3])
  {
    LOBYTE(v5) = 0;
    if ((sub_1B6E334B8() & 1) == 0) {
      return v5 & 1;
    }
  }
  uint64_t v6 = (void *)a1[20];
  uint64_t v7 = (void *)a2[20];
  if (v6)
  {
    if (!v7 || (sub_1B6919430(v6, v7) & 1) == 0) {
      goto LABEL_34;
    }
  }
  else if (v7)
  {
    goto LABEL_34;
  }
  uint64_t v8 = (void *)a1[21];
  uint64_t v9 = (void *)a2[21];
  if (v8)
  {
    if (!v9 || (sub_1B6919430(v8, v9) & 1) == 0) {
      goto LABEL_34;
    }
  }
  else if (v9)
  {
    goto LABEL_34;
  }
  uint64_t v10 = (void *)a1[25];
  uint64_t v11 = (void *)a2[25];
  if (v10)
  {
    if (!v11 || (sub_1B6919430(v10, v11) & 1) == 0) {
      goto LABEL_34;
    }
  }
  else if (v11)
  {
    goto LABEL_34;
  }
  uint64_t v12 = (void *)a1[26];
  uint64_t v13 = (void *)a2[26];
  if (v12)
  {
    if (!v13 || (sub_1B6919430(v12, v13) & 1) == 0) {
      goto LABEL_34;
    }
  }
  else if (v13)
  {
    goto LABEL_34;
  }
  uint64_t v14 = a1[27];
  uint64_t v15 = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v16 = sub_1B6984E30(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v5 = a2[28];
  if (a1[28])
  {
    if (!v5) {
      return v5 & 1;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_bridgeObjectRetain();
    char v18 = sub_1B6984E30(v17, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_30;
    }
LABEL_34:
    LOBYTE(v5) = 0;
    return v5 & 1;
  }
  if (v5) {
    goto LABEL_34;
  }
LABEL_30:
  uint64_t v19 = sub_1B6AF3AD8();
  uint64_t v21 = v20;
  if (v19 == sub_1B6AF3AD8() && v21 == v22) {
    LOBYTE(v5) = 1;
  }
  else {
    LOBYTE(v5) = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1B6AFBC08()
{
  unint64_t result = qword_1E9DD5A98;
  if (!qword_1E9DD5A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5A98);
  }
  return result;
}

unint64_t sub_1B6AFBC5C()
{
  unint64_t result = qword_1E9DD5AA0;
  if (!qword_1E9DD5AA0)
  {
    sub_1B63860D0(255, &qword_1E9DD3EB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5AA0);
  }
  return result;
}

unint64_t sub_1B6AFBCE8()
{
  unint64_t result = qword_1E9DD5AA8;
  if (!qword_1E9DD5AA8)
  {
    sub_1B6AFBE10(255, (unint64_t *)&qword_1EB980318, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
    sub_1B6AFBDA8((unint64_t *)&qword_1EB980308, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5AA8);
  }
  return result;
}

uint64_t sub_1B6AFBDA8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B63860D0(255, a2, MEMORY[0x1E4FBB1A0], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B6AFBE10(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1B63860D0(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v5 = sub_1B6E324B8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1B6AFBE7C()
{
  unint64_t result = qword_1E9DD5AC0;
  if (!qword_1E9DD5AC0)
  {
    sub_1B6AFBE10(255, &qword_1E9DD5AB0, &qword_1E9DD5AB8, (uint64_t)&_s8MetadataVN);
    sub_1B6AFBF34(&qword_1E9DD5AC8, (void (*)(void))sub_1B678C0E4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5AC0);
  }
  return result;
}

uint64_t sub_1B6AFBF34(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B63860D0(255, &qword_1E9DD5AB8, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6AFBFC4()
{
  unint64_t result = qword_1E9DD5AD0;
  if (!qword_1E9DD5AD0)
  {
    sub_1B63860D0(255, &qword_1E9DCDDB0, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB718]);
    sub_1B629DD00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5AD0);
  }
  return result;
}

unint64_t sub_1B6AFC058()
{
  unint64_t result = qword_1E9DD5AE8;
  if (!qword_1E9DD5AE8)
  {
    sub_1B6AFBE10(255, &qword_1E9DD5AD8, &qword_1E9DD5AE0, (uint64_t)&_s17CodeSourceSnippetC9ParameterVN);
    sub_1B6AFC0E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5AE8);
  }
  return result;
}

unint64_t sub_1B6AFC0E0()
{
  unint64_t result = qword_1E9DD5AF0;
  if (!qword_1E9DD5AF0)
  {
    sub_1B63860D0(255, &qword_1E9DD5AE0, (uint64_t)&_s17CodeSourceSnippetC9ParameterVN, MEMORY[0x1E4FBB320]);
    sub_1B6AFC174();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5AF0);
  }
  return result;
}

unint64_t sub_1B6AFC174()
{
  unint64_t result = qword_1E9DD5AF8;
  if (!qword_1E9DD5AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5AF8);
  }
  return result;
}

uint64_t sub_1B6AFC1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 40;
  uint64_t v10 = -v5;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v21 = a1 + 40;
  do
  {
    for (uint64_t i = (uint64_t *)(v9 + 16 * v8++); ; i += 2)
    {
      uint64_t v13 = *(i - 1);
      uint64_t v14 = *i;
      BOOL v15 = v13 == a2 && v14 == a3;
      if (!v15 && (sub_1B6E334B8() & 1) == 0) {
        break;
      }
      ++v8;
      if (v10 + v8 == 1) {
        return v11;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1B6C3C3B8(0, *(void *)(v11 + 16) + 1, 1);
    }
    unint64_t v17 = *(void *)(v11 + 16);
    unint64_t v16 = *(void *)(v11 + 24);
    if (v17 >= v16 >> 1) {
      sub_1B6C3C3B8(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v11 + 16) = v17 + 1;
    uint64_t v18 = v11 + 16 * v17;
    *(void *)(v18 + 32) = v13;
    *(void *)(v18 + 40) = v14;
    uint64_t v4 = v20;
    uint64_t v9 = v21;
  }
  while (v10 + v8);
  return v11;
}

uint64_t sub_1B6AFC318(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v36 = v8 + 112;
  uint64_t v37 = v3;
  for (i = v8; ; uint64_t v2 = i)
  {
    while (1)
    {
      while (1)
      {
        if (v6)
        {
          unint64_t v10 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
          unint64_t v11 = v10 | (v9 << 6);
        }
        else
        {
          uint64_t v12 = v9 + 1;
          if (v9 + 1 >= v7) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v3 + 8 * v12);
          if (!v13)
          {
            uint64_t v12 = v9 + 2;
            if (v9 + 2 >= v7) {
              return swift_release();
            }
            unint64_t v13 = *(void *)(v3 + 8 * v12);
            if (!v13)
            {
              uint64_t v12 = v9 + 3;
              if (v9 + 3 >= v7) {
                return swift_release();
              }
              unint64_t v13 = *(void *)(v3 + 8 * v12);
              if (!v13)
              {
                uint64_t v12 = v9 + 4;
                if (v9 + 4 >= v7) {
                  return swift_release();
                }
                unint64_t v13 = *(void *)(v3 + 8 * v12);
                if (!v13)
                {
                  uint64_t v12 = v9 + 5;
                  if (v9 + 5 >= v7) {
                    return swift_release();
                  }
                  unint64_t v13 = *(void *)(v3 + 8 * v12);
                  if (!v13)
                  {
                    while (v7 - 6 != v9)
                    {
                      unint64_t v13 = *(void *)(v36 + 8 * v9++);
                      if (v13)
                      {
                        uint64_t v12 = v9 + 5;
                        goto LABEL_20;
                      }
                    }
                    return swift_release();
                  }
                }
              }
            }
          }
LABEL_20:
          unint64_t v6 = (v13 - 1) & v13;
          unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
          uint64_t v9 = v12;
        }
        uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v11);
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        swift_bridgeObjectRetain_n();
        unint64_t v17 = sub_1B6E32CC8();
        swift_bridgeObjectRelease();
        if (v17 <= 2)
        {
          uint64_t v18 = *(void *)(a2 + 216);
          if (*(void *)(v18 + 16)) {
            break;
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B62B2CE0(v16, v15);
      if (v20) {
        break;
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 16 * v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v39 = v23;
    uint64_t v40 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v41 = *(void **)(a2 + 216);
    *(void *)(a2 + 216) = 0x8000000000000000;
    unint64_t v26 = sub_1B62B2CE0(v16, v15);
    char v27 = v25;
    uint64_t v28 = v41[2] + ((v25 & 1) == 0);
    if (v41[3] < v28) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v31 = v41;
      if (v25) {
        goto LABEL_31;
      }
    }
    else
    {
      sub_1B6ACBEF0();
      uint64_t v31 = v41;
      if (v27)
      {
LABEL_31:
        uint64_t v32 = (void *)(v31[7] + 16 * v26);
        swift_bridgeObjectRelease();
        *uint64_t v32 = v39;
        v32[1] = v40;
        goto LABEL_34;
      }
    }
LABEL_33:
    v31[(v26 >> 6) + 8] |= 1 << v26;
    uint64_t v33 = (uint64_t *)(v31[6] + 16 * v26);
    *uint64_t v33 = v16;
    v33[1] = v15;
    uint64_t v34 = (void *)(v31[7] + 16 * v26);
    *uint64_t v34 = v39;
    v34[1] = v40;
    ++v31[2];
    swift_bridgeObjectRetain();
LABEL_34:
    *(void *)(a2 + 216) = v31;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v3 = v37;
  }
  sub_1B6AB6018(v28, isUniquelyReferenced_nonNull_native);
  uint64_t v29 = sub_1B62B2CE0(v16, v15);
  if ((v27 & 1) == (v30 & 1))
  {
    unint64_t v26 = v29;
    uint64_t v31 = v41;
    if (v27) {
      goto LABEL_31;
    }
    goto LABEL_33;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6AFC6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v36 = v8 + 112;
  uint64_t v37 = v3;
  for (i = v8; ; uint64_t v2 = i)
  {
    while (1)
    {
      while (1)
      {
        if (v6)
        {
          unint64_t v10 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
          unint64_t v11 = v10 | (v9 << 6);
        }
        else
        {
          uint64_t v12 = v9 + 1;
          if (v9 + 1 >= v7) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v3 + 8 * v12);
          if (!v13)
          {
            uint64_t v12 = v9 + 2;
            if (v9 + 2 >= v7) {
              return swift_release();
            }
            unint64_t v13 = *(void *)(v3 + 8 * v12);
            if (!v13)
            {
              uint64_t v12 = v9 + 3;
              if (v9 + 3 >= v7) {
                return swift_release();
              }
              unint64_t v13 = *(void *)(v3 + 8 * v12);
              if (!v13)
              {
                uint64_t v12 = v9 + 4;
                if (v9 + 4 >= v7) {
                  return swift_release();
                }
                unint64_t v13 = *(void *)(v3 + 8 * v12);
                if (!v13)
                {
                  uint64_t v12 = v9 + 5;
                  if (v9 + 5 >= v7) {
                    return swift_release();
                  }
                  unint64_t v13 = *(void *)(v3 + 8 * v12);
                  if (!v13)
                  {
                    while (v7 - 6 != v9)
                    {
                      unint64_t v13 = *(void *)(v36 + 8 * v9++);
                      if (v13)
                      {
                        uint64_t v12 = v9 + 5;
                        goto LABEL_20;
                      }
                    }
                    return swift_release();
                  }
                }
              }
            }
          }
LABEL_20:
          unint64_t v6 = (v13 - 1) & v13;
          unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
          uint64_t v9 = v12;
        }
        uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v11);
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        swift_bridgeObjectRetain_n();
        unint64_t v17 = sub_1B6E32CC8();
        swift_bridgeObjectRelease();
        if (v17 <= 2)
        {
          uint64_t v18 = *(void *)(a2 + 224);
          if (v18)
          {
            if (*(void *)(v18 + 16)) {
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B62B2CE0(v16, v15);
      if (v20) {
        break;
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 16 * v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(void *)(a2 + 224))
    {
      *(void *)(a2 + 224) = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v39 = v23;
    uint64_t v40 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v25 = *(void **)(a2 + 224);
    *(void *)(a2 + 224) = 0x8000000000000000;
    unint64_t v27 = sub_1B62B2CE0(v16, v15);
    char v28 = v26;
    uint64_t v29 = v25[2] + ((v26 & 1) == 0);
    if (v25[3] < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v26) {
        goto LABEL_34;
      }
    }
    else
    {
      sub_1B6ACBEF0();
      if (v28)
      {
LABEL_34:
        uint64_t v32 = (void *)(v25[7] + 16 * v27);
        swift_bridgeObjectRelease();
        *uint64_t v32 = v39;
        v32[1] = v40;
        goto LABEL_37;
      }
    }
LABEL_36:
    v25[(v27 >> 6) + 8] |= 1 << v27;
    uint64_t v33 = (uint64_t *)(v25[6] + 16 * v27);
    *uint64_t v33 = v16;
    v33[1] = v15;
    uint64_t v34 = (void *)(v25[7] + 16 * v27);
    *uint64_t v34 = v39;
    v34[1] = v40;
    ++v25[2];
    swift_bridgeObjectRetain();
LABEL_37:
    *(void *)(a2 + 224) = v25;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v3 = v37;
  }
  sub_1B6AB6018(v29, isUniquelyReferenced_nonNull_native);
  uint64_t v30 = sub_1B62B2CE0(v16, v15);
  if ((v28 & 1) == (v31 & 1))
  {
    unint64_t v27 = v30;
    if (v28) {
      goto LABEL_34;
    }
    goto LABEL_36;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6AFCAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v35 = v8 + 112;
  uint64_t v36 = v3;
  uint64_t v37 = v8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v6)
        {
          unint64_t v10 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
          unint64_t v11 = v10 | (v9 << 6);
        }
        else
        {
          uint64_t v12 = v9 + 1;
          if (v9 + 1 >= v7) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v3 + 8 * v12);
          if (!v13)
          {
            uint64_t v12 = v9 + 2;
            if (v9 + 2 >= v7) {
              return swift_release();
            }
            unint64_t v13 = *(void *)(v3 + 8 * v12);
            if (!v13)
            {
              uint64_t v12 = v9 + 3;
              if (v9 + 3 >= v7) {
                return swift_release();
              }
              unint64_t v13 = *(void *)(v3 + 8 * v12);
              if (!v13)
              {
                uint64_t v12 = v9 + 4;
                if (v9 + 4 >= v7) {
                  return swift_release();
                }
                unint64_t v13 = *(void *)(v3 + 8 * v12);
                if (!v13)
                {
                  uint64_t v12 = v9 + 5;
                  if (v9 + 5 >= v7) {
                    return swift_release();
                  }
                  unint64_t v13 = *(void *)(v3 + 8 * v12);
                  if (!v13)
                  {
                    while (v7 - 6 != v9)
                    {
                      unint64_t v13 = *(void *)(v35 + 8 * v9++);
                      if (v13)
                      {
                        uint64_t v12 = v9 + 5;
                        goto LABEL_20;
                      }
                    }
                    return swift_release();
                  }
                }
              }
            }
          }
LABEL_20:
          unint64_t v6 = (v13 - 1) & v13;
          unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
          uint64_t v9 = v12;
        }
        uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v11);
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        swift_bridgeObjectRetain_n();
        unint64_t v17 = sub_1B6E32CC8();
        swift_bridgeObjectRelease();
        if (v17 <= 2)
        {
          uint64_t v18 = *(void *)(a2 + 216);
          if (*(void *)(v18 + 16)) {
            break;
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B62B2CE0(v16, v15);
      if (v20) {
        break;
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 16 * v19);
    uint64_t v38 = *v21;
    uint64_t v39 = v21[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)(a2 + 232);
    if (!v22) {
      uint64_t v22 = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
    }
    *(void *)(a2 + 232) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *(void **)(a2 + 232);
    *(void *)(a2 + 232) = 0x8000000000000000;
    unint64_t v25 = sub_1B62B2CE0(v16, v15);
    char v27 = v26;
    uint64_t v28 = v24[2] + ((v26 & 1) == 0);
    if (v24[3] < v28) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1B6ACBEF0();
    }
LABEL_32:
    uint64_t v2 = v37;
    if (v27)
    {
      char v31 = (void *)(v24[7] + 16 * v25);
      swift_bridgeObjectRelease();
      *char v31 = v38;
      v31[1] = v39;
    }
    else
    {
      v24[(v25 >> 6) + 8] |= 1 << v25;
      uint64_t v32 = (uint64_t *)(v24[6] + 16 * v25);
      *uint64_t v32 = v16;
      v32[1] = v15;
      uint64_t v33 = (void *)(v24[7] + 16 * v25);
      *uint64_t v33 = v38;
      v33[1] = v39;
      ++v24[2];
      swift_bridgeObjectRetain();
    }
    *(void *)(a2 + 232) = v24;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v3 = v36;
  }
  sub_1B6AB6018(v28, isUniquelyReferenced_nonNull_native);
  uint64_t v29 = sub_1B62B2CE0(v16, v15);
  if ((v27 & 1) == (v30 & 1))
  {
    unint64_t v25 = v29;
    goto LABEL_32;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6AFCE40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  uint64_t v23 = v9 + 112;
  uint64_t v24 = v9;
  uint64_t v25 = v4;
  uint64_t v26 = a2;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_21;
    }
    uint64_t v13 = v10 + 1;
    if (v10 + 1 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v10 + 2;
      if (v10 + 2 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v10 + 3;
        if (v10 + 3 >= v8) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v10 + 4;
          if (v10 + 4 >= v8) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v4 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v10 + 5;
            if (v10 + 5 >= v8) {
              return swift_release();
            }
            unint64_t v14 = *(void *)(v4 + 8 * v13);
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v10 = v13;
LABEL_21:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_bridgeObjectRetain_n();
    unint64_t v18 = sub_1B6E32CC8();
    swift_bridgeObjectRelease();
    if (v18 <= 2 && *(void *)(*(void *)(a2 + 216) + 16))
    {
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(v16, v17);
      if (v19)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B633AF88();
        if (sub_1B6E32678())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        sub_1B6E31948();
        sub_1B666BDC4();
        sub_1B666BE18();
        char v20 = sub_1B6E31618();
        swift_bridgeObjectRelease();
        if (v20)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v24;
LABEL_29:
          uint64_t v4 = v25;
          a2 = v26;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v27 = *(void *)(v26 + 216);
          *(void *)(v26 + 216) = 0x8000000000000000;
          a2 = v26;
          sub_1B67E3B6C(36, 0xE100000000000000, v16, v17, isUniquelyReferenced_nonNull_native);
          *(void *)(v26 + 216) = v27;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v3 = v24;
          uint64_t v4 = v25;
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  while (v8 - 6 != v10)
  {
    unint64_t v14 = *(void *)(v23 + 8 * v10++);
    if (v14)
    {
      uint64_t v13 = v10 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B6AFD204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v56 = a4;
  uint64_t v55 = a3;
  uint64_t v72 = a2;
  sub_1B6AFDE58(0, (unint64_t *)&qword_1EB97D9D0, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v54 = (char *)&v49 - v11;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v62 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  unint64_t v16 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int64_t v63 = v16;
  unint64_t v51 = v16 - 6;
  uint64_t v50 = a1 + 112;
  uint64_t v58 = a6;
  uint64_t v52 = a1;
  uint64_t v53 = a5;
  while (1)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_21;
    }
    uint64_t v20 = v17 + 1;
    if (v17 + 1 >= v63) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v62 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v17 + 2;
      if (v17 + 2 >= v63) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v62 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v17 + 3;
        if (v17 + 3 >= v63) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v62 + 8 * v20);
        if (!v21)
        {
          uint64_t v20 = v17 + 4;
          if (v17 + 4 >= v63) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v62 + 8 * v20);
          if (!v21)
          {
            uint64_t v20 = v17 + 5;
            if (v17 + 5 >= v63) {
              return swift_release();
            }
            unint64_t v21 = *(void *)(v62 + 8 * v20);
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v17 = v20;
LABEL_21:
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v19);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    swift_bridgeObjectRetain_n();
    unint64_t v25 = sub_1B6E32CC8();
    swift_bridgeObjectRelease();
    if (v25 <= 2 && (uint64_t v26 = *(void *)(v72 + 216), *(void *)(v26 + 16)))
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1B62B2CE0(v24, v23);
      if (v28)
      {
        uint64_t v60 = v17;
        uint64_t v29 = (uint64_t *)(*(void *)(v26 + 56) + 16 * v27);
        uint64_t v30 = *v29;
        unint64_t v31 = v29[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v32 = v56;
        swift_bridgeObjectRetain();
        sub_1B629C678(v55, v32, (uint64_t *)v68);
        v70[0] = v68[0];
        v70[1] = v68[1];
        uint64_t v71 = v69;
        if ((v25 & 7) == 2)
        {
          uint64_t v66 = 544499052;
          unint64_t v67 = 0xE400000000000000;
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B68952E0((uint64_t)v70, 2u);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v66 = 0x2074736E6F63;
          unint64_t v67 = 0xE600000000000000;
          sub_1B68952E0((uint64_t)v70, v25);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
        }
        sub_1B68168F0(v68, (void (*)(void, void, void, void, void))sub_1B666BC88);
        uint64_t v57 = v66;
        unint64_t v59 = v67;
        uint64_t v66 = 36;
        unint64_t v67 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        uint64_t v33 = v66;
        unint64_t v34 = v67;
        uint64_t v66 = v30;
        unint64_t v67 = v31;
        uint64_t v64 = v33;
        unint64_t v65 = v34;
        uint64_t v35 = sub_1B6E31128();
        uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
        uint64_t v61 = v30;
        unint64_t v37 = v31;
        uint64_t v38 = (uint64_t)v54;
        v36(v54, 1, 1, v35);
        sub_1B633AF88();
        unint64_t v39 = sub_1B6E32658();
        unint64_t v41 = v40;
        char v43 = v42;
        sub_1B6816864(v38);
        if (v43)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v61 = sub_1B69CB890(v39, v41, v57, v59, v61, v37);
          unint64_t v45 = v44;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v37 = v45;
        }
        a1 = v52;
        uint64_t v46 = v72;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v66 = *(void *)(v46 + 216);
        *(void *)(v46 + 216) = 0x8000000000000000;
        sub_1B67E3B6C(v61, v37, v24, v23, isUniquelyReferenced_nonNull_native);
        *(void *)(v46 + 216) = v66;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v17 = v60;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  while (v51 != v17)
  {
    unint64_t v21 = *(void *)(v50 + 8 * v17++);
    if (v21)
    {
      uint64_t v20 = v17 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B6AFD7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 40;
  uint64_t v8 = -v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v18 = result;
    for (uint64_t i = (uint64_t *)(v7 + 16 * v6++); ; i += 2)
    {
      uint64_t v12 = *(i - 1);
      uint64_t v11 = *i;
      BOOL v13 = v12 == a2 && v11 == a3;
      if (v13 || (sub_1B6E334B8() & 1) != 0) {
        goto LABEL_4;
      }
      sub_1B666BDC4();
      sub_1B666BE18();
      swift_bridgeObjectRetain();
      if (sub_1B6E31618()) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_4:
      ++v6;
      if (v8 + v6 == 1) {
        return v18;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1B6C3C3B8(0, *(void *)(v18 + 16) + 1, 1);
    }
    uint64_t result = v18;
    unint64_t v15 = *(void *)(v18 + 16);
    unint64_t v14 = *(void *)(v18 + 24);
    if (v15 >= v14 >> 1)
    {
      sub_1B6C3C3B8(v14 > 1, v15 + 1, 1);
      uint64_t result = v18;
    }
    *(void *)(result + 16) = v15 + 1;
    uint64_t v16 = result + 16 * v15;
    *(void *)(v16 + 32) = v12;
    *(void *)(v16 + 40) = v11;
    uint64_t v7 = v17;
  }
  while (v8 + v6);
  return result;
}

uint64_t sub_1B6AFD98C(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = *(void *)(a1 + 16);
  if (!v23) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = a2;
  uint64_t v3 = 0;
  uint64_t v21 = a1 + 32;
  uint64_t v25 = a2 + 40;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v20 = v4;
    uint64_t v5 = v3;
    while (1)
    {
      uint64_t v6 = v5 + 1;
      uint64_t v7 = *(void *)(v2 + 16);
      if (v7) {
        break;
      }
LABEL_4:
      uint64_t v5 = v6;
      if (v6 == v23) {
        return v20;
      }
    }
    uint64_t v24 = v5 + 1;
    uint64_t v8 = (uint64_t *)(v21 + 16 * v5);
    uint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    sub_1B633AF88();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = -v7;
    char v13 = 1;
LABEL_7:
    uint64_t v14 = v25 + 16 * v11++;
    do
    {
      if (sub_1B6E32678())
      {
        char v13 = 0;
        if (v12 + v11) {
          goto LABEL_7;
        }
        uint64_t v2 = a2;
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      v14 += 16;
      ++v11;
    }
    while (v12 + v11 != 1);
    uint64_t v2 = a2;
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v24;
      goto LABEL_4;
    }
LABEL_15:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v20;
    uint64_t v3 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6C3C3B8(0, *(void *)(v20 + 16) + 1, 1);
      uint64_t v4 = v20;
    }
    unint64_t v17 = *(void *)(v4 + 16);
    unint64_t v16 = *(void *)(v4 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1B6C3C3B8(v16 > 1, v17 + 1, 1);
      uint64_t v4 = v20;
    }
    *(void *)(v4 + 16) = v17 + 1;
    uint64_t v18 = v4 + 16 * v17;
    *(void *)(v18 + 32) = v10;
    *(void *)(v18 + 40) = v9;
  }
  while (v24 != v23);
  return v4;
}

uint64_t sub_1B6AFDB90()
{
  unint64_t v0 = sub_1B6E337B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x20) {
    return 32;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6AFDBE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6AFDCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v12 = v11 | (v10 << 6);
  while (1)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v16 = v15[1];
    v18[0] = *v15;
    v18[1] = v16;
    swift_bridgeObjectRetain();
    sub_1B6AFA328(v18, a2);
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v13 = v10 + 1;
    if (v10 + 1 >= v9) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v10 + 2;
      if (v10 + 2 >= v9) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v5 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v10 + 3;
        if (v10 + 3 >= v9) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v5 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v10 + 4;
          if (v10 + 4 >= v9) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v5 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v10 + 5;
            if (v10 + 5 >= v9) {
              return swift_release();
            }
            unint64_t v14 = *(void *)(v5 + 8 * v13);
            if (!v14)
            {
              while (v9 - 6 != v10)
              {
                unint64_t v14 = *(void *)(a1 + 8 * v10++ + 112);
                if (v14)
                {
                  uint64_t v13 = v10 + 5;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v10 = v13;
  }
}

void sub_1B6AFDE58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B6AFDEBC()
{
  if (!qword_1E9DD5B08)
  {
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5B08);
    }
  }
}

unint64_t sub_1B6AFDF20()
{
  unint64_t result = qword_1E9DD5B10;
  if (!qword_1E9DD5B10)
  {
    sub_1B6AFDE58(255, &qword_1E9DD5B00, (uint64_t (*)(uint64_t))sub_1B6AFDEBC, MEMORY[0x1E4FBB718]);
    sub_1B6AFE1D0(&qword_1E9DD5B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B10);
  }
  return result;
}

uint64_t sub_1B6AFDFE4(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v13 = v12 | (v11 << 6);
  while (1)
  {
    uint64_t v16 = 16 * v13;
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    v24[0] = v18;
    v24[1] = v19;
    _OWORD v24[2] = v21;
    _OWORD v24[3] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3(v24, a2);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v14 = v11 + 1;
    if (v11 + 1 >= v10) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    if (!v15)
    {
      uint64_t v14 = v11 + 2;
      if (v11 + 2 >= v10) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v25 + 8 * v14);
      if (!v15)
      {
        uint64_t v14 = v11 + 3;
        if (v11 + 3 >= v10) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v25 + 8 * v14);
        if (!v15)
        {
          uint64_t v14 = v11 + 4;
          if (v11 + 4 >= v10) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v25 + 8 * v14);
          if (!v15)
          {
            uint64_t v14 = v11 + 5;
            if (v11 + 5 >= v10) {
              return swift_release();
            }
            unint64_t v15 = *(void *)(v25 + 8 * v14);
            if (!v15)
            {
              while (v10 - 6 != v11)
              {
                unint64_t v15 = *(void *)(a1 + 8 * v11++ + 112);
                if (v15)
                {
                  uint64_t v14 = v11 + 5;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v11 = v14;
  }
}

uint64_t sub_1B6AFE1D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6AFDEBC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6AFE230(void *a1)
{
  sub_1B6AFE4C0(0, &qword_1E9DD5B38, (uint64_t (*)(void))sub_1B6AFE46C, (uint64_t)&_s17CodeSourceSnippetC9ParameterV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6AFE46C();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    char v13 = 0;
    uint64_t v9 = sub_1B6E32D98();
    char v12 = 1;
    swift_bridgeObjectRetain();
    sub_1B6E32D98();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

unint64_t sub_1B6AFE46C()
{
  unint64_t result = qword_1E9DD5B40;
  if (!qword_1E9DD5B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B40);
  }
  return result;
}

void sub_1B6AFE4C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B6AFE528(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6AFE56C(uint64_t a1, uint64_t a2)
{
  sub_1B63860D0(0, &qword_1E9DCDDB0, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *_s17CodeSourceSnippetC9ParameterV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AFE6C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17CodeSourceSnippetC9ParameterV10CodingKeysOMa()
{
  return &_s17CodeSourceSnippetC9ParameterV10CodingKeysON;
}

uint64_t _s17CodeSourceSnippetC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE1) {
    goto LABEL_17;
  }
  if (a2 + 31 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 31) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 31;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x20;
  int v8 = v6 - 32;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17CodeSourceSnippetC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 31 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 31) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE0)
  {
    unsigned int v6 = ((a2 - 225) >> 8) + 1;
    *uint64_t result = a2 + 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6AFE854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 31;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17CodeSourceSnippetC10CodingKeysOMa()
{
  return &_s17CodeSourceSnippetC10CodingKeysON;
}

unint64_t sub_1B6AFE890()
{
  unint64_t result = qword_1E9DD5B50;
  if (!qword_1E9DD5B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B50);
  }
  return result;
}

unint64_t sub_1B6AFE8E8()
{
  unint64_t result = qword_1E9DD5B58;
  if (!qword_1E9DD5B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B58);
  }
  return result;
}

unint64_t sub_1B6AFE940()
{
  unint64_t result = qword_1E9DD5B60;
  if (!qword_1E9DD5B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B60);
  }
  return result;
}

unint64_t sub_1B6AFE998()
{
  unint64_t result = qword_1E9DD5B68;
  if (!qword_1E9DD5B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B68);
  }
  return result;
}

unint64_t sub_1B6AFE9F0()
{
  unint64_t result = qword_1E9DD5B70;
  if (!qword_1E9DD5B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B70);
  }
  return result;
}

unint64_t sub_1B6AFEA48()
{
  unint64_t result = qword_1E9DD5B78;
  if (!qword_1E9DD5B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B78);
  }
  return result;
}

void sub_1B6AFEA9C(void *a1@<X8>)
{
  *a1 = -1;
}

double sub_1B6AFEAA8()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B6662900(1, 1, 1, (uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1EB997968 = v1[0];
  unk_1EB997978 = v1[1];
  qword_1EB997988 = v2;
  return result;
}

uint64_t sub_1B6AFEB60()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB997A18;
  int v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  swift_retain();
  sub_1B6A6F930(1, (uint64_t)v2);
  swift_release();
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for LODCulled;
  *(void *)(inited + 40) = &off_1F0FA8B40;
  sub_1B62AD184(v3);
  swift_setDeallocating();
  xmmword_1EB997938 = v3[0];
  unk_1EB997948 = v3[1];
  qword_1EB997958 = v4;
  return sub_1B62CA064((uint64_t)v2);
}

ValueMetadata *type metadata accessor for MainCullGroup()
{
  return &type metadata for MainCullGroup;
}

uint64_t sub_1B6AFECA0(uint64_t a1)
{
  int v2 = 0;
  int v3 = 0;
  switch(a1)
  {
    case 10:
      int v3 = 0;
      int v2 = 4;
      break;
    case 11:
      int v3 = 0;
      int v2 = 5;
      break;
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
      goto LABEL_6;
    case 25:
      return v2 | (v3 << 8);
    case 55:
      int v3 = 0;
      int v2 = 1;
      break;
    case 70:
      int v3 = 0;
      int v2 = 6;
      break;
    case 71:
      int v3 = 0;
      int v2 = 7;
      break;
    case 80:
      int v3 = 0;
      int v2 = 8;
      break;
    case 81:
      int v3 = 0;
      int v2 = 9;
      break;
    default:
      if (a1 == 115)
      {
        int v3 = 0;
        int v2 = 2;
      }
      else if (a1 == 125)
      {
        int v3 = 0;
        int v2 = 3;
      }
      else
      {
LABEL_6:
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        v6[1] = 0x80000001B6F35710;
        _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(a1);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        int v4 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        v6[0] = 0;
        swift_retain();
        sub_1B6B33E34(v4, v6, 0xD00000000000001ALL, 0x80000001B6F35710);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        int v2 = 0;
        int v3 = 1;
      }
      break;
  }
  return v2 | (v3 << 8);
}