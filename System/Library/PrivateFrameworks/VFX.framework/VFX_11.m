uint64_t sub_1B68D82A4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 == 1) {
    sub_1B6E318B8();
  }
  else {
    sub_1B6E33928();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B68D8328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B68D8388(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B68DA1F8);
}

uint64_t sub_1B68D8340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B68D8388(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B68D7EB8);
}

uint64_t sub_1B68D8358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B68D8388(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B68D7F74);
}

uint64_t sub_1B68D8370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B68D8388(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B68D7DEC);
}

uint64_t sub_1B68D8388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1B68D83AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  int v5 = *((unsigned __int8 *)a2 + 16);
  if (*((unsigned char *)a1 + 16) != 1) {
    return (v3 == v4) & ~v5;
  }
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[1];
  if (v3 == v4 && v6 == a2[1]) {
    return 1;
  }
  else {
    return sub_1B6E334B8();
  }
}

uint64_t sub_1B68D840C()
{
  uint64_t v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 16) != 1)
  {
    if (qword_1EB97D7A0 != -1) {
      swift_once();
    }
    v2 = off_1EB97F978;
    if (!*((void *)off_1EB97F978 + 2)) {
      return 0;
    }
    unint64_t v3 = sub_1B62C1A30(v1);
    if ((v4 & 1) == 0) {
      return 0;
    }
    uint64_t v1 = *(void *)(v2[7] + 16 * v3);
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B68D84B4()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B62D6998(v0 + 32, (uint64_t)v3);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 == 1) {
    sub_1B6E318B8();
  }
  else {
    sub_1B6E33928();
  }
  sub_1B62D66DC();
  return sub_1B6E33988();
}

uint64_t sub_1B68D8550()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B62D6998(v0 + 32, (uint64_t)&v3);
  sub_1B6E33928();
  if (v1 == 1) {
    sub_1B6E318B8();
  }
  else {
    sub_1B6E33928();
  }
  return sub_1B62D66DC();
}

uint64_t sub_1B68D85E4()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B62D6998(v0 + 32, (uint64_t)v3);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 == 1) {
    sub_1B6E318B8();
  }
  else {
    sub_1B6E33928();
  }
  sub_1B62D66DC();
  return sub_1B6E33988();
}

uint64_t sub_1B68D868C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  int v5 = *((unsigned __int8 *)a1 + 16);
  sub_1B62D6998((uint64_t)(a1 + 4), (uint64_t)v15);
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = (uint64_t)(a2 + 4);
  char v9 = *((unsigned char *)a2 + 16);
  sub_1B62D6998(v8, (uint64_t)v16);
  if (v5 != 1)
  {
    if (v3 == v6) {
      char v13 = v9;
    }
    else {
      char v13 = 1;
    }
    if ((v13 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    char v12 = 0;
    return v12 & 1;
  }
  if ((v9 & 1) == 0) {
    goto LABEL_13;
  }
  BOOL v10 = v3 == v6 && v4 == v7;
  if (v10 || (char v11 = sub_1B6E334B8(), v12 = 0, (v11 & 1) != 0)) {
LABEL_14:
  }
    char v12 = sub_1B6790DC4((uint64_t)v15, (uint64_t)v16);
  return v12 & 1;
}

unint64_t sub_1B68D8754()
{
  unint64_t result = qword_1EB97EC30;
  if (!qword_1EB97EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EC30);
  }
  return result;
}

uint64_t sub_1B68D87A8(char *a1, unsigned __int8 *a2)
{
  return sub_1B6BB160C(*a1, *a2);
}

uint64_t sub_1B68D87B4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68D8848()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68D88C8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68D8958@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68DA2C4();
  *a1 = result;
  return result;
}

void sub_1B68D8988(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = 0x7865646E69;
  if (v2 != 1) {
    uint64_t v4 = 0x65756C6176;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 1701667182;
  }
  if (!v5) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1B68D89D8()
{
  uint64_t v1 = 0x7865646E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x65756C6176;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1B68D8A24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68DA2C4();
  *a1 = result;
  return result;
}

uint64_t sub_1B68D8A4C(uint64_t a1)
{
  unint64_t v2 = sub_1B68DA604();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68D8A88(uint64_t a1)
{
  unint64_t v2 = sub_1B68DA604();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68D8AC4(void *a1)
{
  uint64_t v3 = v1;
  sub_1B68DA720(0, &qword_1E9DD21C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  BOOL v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68DA604();
  sub_1B6E33A88();
  if (*(unsigned char *)(v3 + 16) == 1)
  {
    v13[0] = 0;
    swift_bridgeObjectRetain();
    sub_1B6E32F48();
    if (v2)
    {
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
      return sub_1B62D5730(v3);
    }
    sub_1B62D5730(v3);
    goto LABEL_7;
  }
  v13[0] = 1;
  sub_1B6E32F88();
  if (!v2)
  {
LABEL_7:
    sub_1B62D6998(v3 + 32, (uint64_t)v14);
    sub_1B62D6998((uint64_t)v14, (uint64_t)v13);
    v12[15] = 2;
    sub_1B68DA784();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

__n128 sub_1B68D8CD8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B68DA310(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(unsigned char *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1B68D8D2C(void *a1)
{
  return sub_1B68D8AC4(a1);
}

uint64_t sub_1B68D8D88()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1B62D6998(v0 + 32, (uint64_t)v6);
  uint64_t v5 = sub_1B68D80D0(v1, v2, v3);
  sub_1B6E31948();
  sub_1B62D5A28();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B68D8E8C()
{
  sub_1B68DA1A0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E8FAC0;
  *(_OWORD *)(v0 + 32) = xmmword_1B6E8FAD0;
  *(void *)(v0 + 48) = 0x80000001B6F3C1C0;
  *(_OWORD *)(v0 + 56) = xmmword_1B6E8FAE0;
  *(void *)(v0 + 72) = 0x80000001B6F3C1E0;
  *(_OWORD *)(v0 + 80) = xmmword_1B6E8FAF0;
  *(void *)(v0 + 96) = 0x80000001B6F3C200;
  *(_OWORD *)(v0 + 104) = xmmword_1B6E8FB00;
  *(void *)(v0 + 120) = 0x80000001B6F3C220;
  *(_OWORD *)(v0 + 128) = xmmword_1B6E8FB10;
  *(void *)(v0 + 144) = 0xEE006E6F6974704FLL;
  *(_OWORD *)(v0 + 152) = xmmword_1B6E8FB20;
  *(void *)(v0 + 168) = 0x80000001B6F3C240;
  *(_OWORD *)(v0 + 176) = xmmword_1B6E8FB30;
  *(void *)(v0 + 192) = 0x80000001B6F3C260;
  *(_OWORD *)(v0 + 200) = xmmword_1B6E8FB40;
  *(void *)(v0 + 216) = 0xEE003076755F7865;
  *(_OWORD *)(v0 + 224) = xmmword_1B6E8FB50;
  *(void *)(v0 + 240) = 0xEE003176755F7865;
  *(_OWORD *)(v0 + 248) = xmmword_1B6E8FB60;
  *(void *)(v0 + 264) = 0xEE003276755F7865;
  *(_OWORD *)(v0 + 272) = xmmword_1B6E8FB70;
  *(void *)(v0 + 288) = 0xEE003376755F7865;
  *(void *)(v0 + 296) = 406;
  *(void *)(v0 + 304) = 0xD000000000000010;
  *(void *)(v0 + 312) = 0x80000001B6F3C280;
  *(_OWORD *)(v0 + 320) = xmmword_1B6E8FB80;
  *(void *)(v0 + 336) = 0x80000001B6F3C2A0;
  *(void *)(v0 + 344) = 450;
  strcpy((char *)(v0 + 352), "gamma_blending");
  *(unsigned char *)(v0 + 367) = -18;
  *(_OWORD *)(v0 + 368) = xmmword_1B6E8FB90;
  *(void *)(v0 + 384) = 0xEB00000000736D72;
  *(void *)(v0 + 392) = 452;
  *(void *)(v0 + 400) = 0x635F656C62616E65;
  *(void *)(v0 + 408) = 0xEF676E697070696CLL;
  *(_OWORD *)(v0 + 416) = xmmword_1B6E8FBA0;
  *(void *)(v0 + 432) = 0x80000001B6F3C2C0;
  *(void *)(v0 + 440) = 455;
  *(void *)(v0 + 448) = 0xD000000000000011;
  *(void *)(v0 + 456) = 0x80000001B6F3C2E0;
  *(_OWORD *)(v0 + 464) = xmmword_1B6E8FBB0;
  *(void *)(v0 + 480) = 0x80000001B6F3C300;
  *(void *)(v0 + 488) = 457;
  *(void *)(v0 + 496) = 0xD000000000000011;
  *(void *)(v0 + 504) = 0x80000001B6F3C320;
  *(_OWORD *)(v0 + 512) = xmmword_1B6E8FBC0;
  *(void *)(v0 + 528) = 0x80000001B6F3C340;
  *(void *)(v0 + 536) = 459;
  *(void *)(v0 + 544) = 0xD000000000000014;
  *(void *)(v0 + 552) = 0x80000001B6F3C360;
  *(_OWORD *)(v0 + 560) = xmmword_1B6E8FBD0;
  *(void *)(v0 + 576) = 0x80000001B6F3C380;
  *(void *)(v0 + 584) = 461;
  strcpy((char *)(v0 + 592), "outputs_normal");
  *(unsigned char *)(v0 + 607) = -18;
  *(_OWORD *)(v0 + 608) = xmmword_1B6E8FBE0;
  *(void *)(v0 + 624) = 0xEE0065646F6D5F67;
  *(void *)(v0 + 632) = 463;
  *(void *)(v0 + 640) = 0xD000000000000018;
  *(void *)(v0 + 648) = 0x80000001B6F3C3A0;
  *(_OWORD *)(v0 + 656) = xmmword_1B6E8FBF0;
  *(void *)(v0 + 672) = 0xEC00000079746963;
  *(void *)(v0 + 680) = 501;
  *(void *)(v0 + 688) = 0x6567615F736168;
  *(void *)(v0 + 696) = 0xE700000000000000;
  *(_OWORD *)(v0 + 704) = xmmword_1B6E8FC00;
  *(void *)(v0 + 720) = 0xEC000000656D6974;
  *(void *)(v0 + 728) = 503;
  *(void *)(v0 + 736) = 0xD000000000000010;
  *(void *)(v0 + 744) = 0x80000001B6F3C3C0;
  *(_OWORD *)(v0 + 752) = xmmword_1B6E8FC10;
  *(void *)(v0 + 768) = 0xE900000000000072;
  *(void *)(v0 + 776) = 506;
  *(void *)(v0 + 784) = 0x6569726F5F736168;
  *(void *)(v0 + 792) = 0xEF6E6F697461746ELL;
  *(_OWORD *)(v0 + 800) = xmmword_1B6E8FC20;
  *(void *)(v0 + 816) = 0x80000001B6F3C3E0;
  *(void *)(v0 + 824) = 508;
  *(void *)(v0 + 832) = 0x6C676E615F736168;
  *(void *)(v0 + 840) = 0xE900000000000065;
  *(_OWORD *)(v0 + 848) = xmmword_1B6E8FC30;
  *(void *)(v0 + 864) = 0x80000001B6F3C400;
  *(void *)(v0 + 872) = 510;
  *(void *)(v0 + 880) = 0x6F7669705F736168;
  *(void *)(v0 + 888) = 0xE900000000000074;
  *(_OWORD *)(v0 + 896) = xmmword_1B6E8FC40;
  *(void *)(v0 + 912) = 0xEA00000000007465;
  *(void *)(v0 + 920) = 512;
  *(void *)(v0 + 928) = 0x7373616D5F736168;
  *(void *)(v0 + 936) = 0xE800000000000000;
  *(_OWORD *)(v0 + 944) = xmmword_1B6E8FC50;
  *(void *)(v0 + 960) = 0x80000001B6F3C420;
  *(void *)(v0 + 968) = 514;
  *(void *)(v0 + 976) = 0xD000000000000011;
  *(void *)(v0 + 984) = 0x80000001B6F3C440;
  *(_OWORD *)(v0 + 992) = xmmword_1B6E8FC60;
  *(void *)(v0 + 1008) = 0x80000001B6F3C460;
  *(void *)(v0 + 1016) = 516;
  *(void *)(v0 + 1024) = 0xD000000000000011;
  *(void *)(v0 + 1032) = 0x80000001B6F3C480;
  *(_OWORD *)(v0 + 1040) = xmmword_1B6E8FC70;
  *(void *)(v0 + 1056) = 0xEE0031617461645FLL;
  *(void *)(v0 + 1064) = 518;
  strcpy((char *)(v0 + 1072), "has_user_data2");
  *(unsigned char *)(v0 + 1087) = -18;
  *(_OWORD *)(v0 + 1088) = xmmword_1B6E8FC80;
  *(void *)(v0 + 1104) = 0xEE0033617461645FLL;
  *(void *)(v0 + 1112) = 520;
  strcpy((char *)(v0 + 1120), "has_user_data4");
  *(unsigned char *)(v0 + 1135) = -18;
  *(_OWORD *)(v0 + 1136) = xmmword_1B6E8FC90;
  *(void *)(v0 + 1152) = 0xEA00000000004431;
  *(void *)(v0 + 1160) = 522;
  *(void *)(v0 + 1168) = 0x657A69735F736168;
  *(void *)(v0 + 1176) = 0xEA00000000004432;
  *(_OWORD *)(v0 + 1184) = xmmword_1B6E8FCA0;
  *(void *)(v0 + 1200) = 0xEA00000000004433;
  *(void *)(v0 + 1208) = 524;
  *(void *)(v0 + 1216) = 0xD000000000000017;
  *(void *)(v0 + 1224) = 0x80000001B6F3C4A0;
  *(_OWORD *)(v0 + 1232) = xmmword_1B6E8FCB0;
  *(void *)(v0 + 1248) = 0xE800000000000000;
  *(void *)(v0 + 1256) = 527;
  *(void *)(v0 + 1264) = 0x747261705F736168;
  *(void *)(v0 + 1272) = 0xEF64695F656C6369;
  *(_OWORD *)(v0 + 1280) = xmmword_1B6E8FCC0;
  *(void *)(v0 + 1296) = 0xED000064695F746ELL;
  *(void *)(v0 + 1304) = 530;
  *(void *)(v0 + 1312) = 0xD000000000000013;
  *(void *)(v0 + 1320) = 0x80000001B6F3C4C0;
  *(_OWORD *)(v0 + 1328) = xmmword_1B6E8FCD0;
  *(void *)(v0 + 1344) = 0xED0000657A69735FLL;
  *(void *)(v0 + 1352) = 532;
  *(void *)(v0 + 1360) = 0xD000000000000014;
  *(void *)(v0 + 1368) = 0x80000001B6F3C4E0;
  *(_OWORD *)(v0 + 1376) = xmmword_1B6E8FCE0;
  *(void *)(v0 + 1392) = 0x80000001B6F3C500;
  *(void *)(v0 + 1400) = 534;
  *(void *)(v0 + 1408) = 0xD000000000000017;
  *(void *)(v0 + 1416) = 0x80000001B6F3C520;
  *(_OWORD *)(v0 + 1424) = xmmword_1B6E8FCF0;
  *(void *)(v0 + 1440) = 0x80000001B6F3C540;
  *(void *)(v0 + 1448) = 536;
  *(void *)(v0 + 1456) = 0xD00000000000001BLL;
  *(void *)(v0 + 1464) = 0x80000001B6F3C560;
  *(_OWORD *)(v0 + 1472) = xmmword_1B6E8FD00;
  *(void *)(v0 + 1488) = 0xEE00797469766172;
  *(void *)(v0 + 1496) = 538;
  *(void *)(v0 + 1504) = 0xD000000000000013;
  *(void *)(v0 + 1512) = 0x80000001B6F3C580;
  *(_OWORD *)(v0 + 1520) = xmmword_1B6E8FD10;
  *(void *)(v0 + 1536) = 0x80000001B6F3C5A0;
  *(void *)(v0 + 1544) = 540;
  *(void *)(v0 + 1552) = 0xD000000000000012;
  *(void *)(v0 + 1560) = 0x80000001B6F3C5C0;
  *(_OWORD *)(v0 + 1568) = xmmword_1B6E8FD20;
  *(void *)(v0 + 1584) = 0x80000001B6F3C5E0;
  *(void *)(v0 + 1592) = 542;
  *(void *)(v0 + 1600) = 0xD000000000000019;
  *(void *)(v0 + 1608) = 0x80000001B6F3C600;
  *(_OWORD *)(v0 + 1616) = xmmword_1B6E8FD30;
  *(void *)(v0 + 1632) = 0x80000001B6F3C620;
  *(void *)(v0 + 1640) = 544;
  *(void *)(v0 + 1648) = 0xD00000000000001CLL;
  *(void *)(v0 + 1656) = 0x80000001B6F3C640;
  *(_OWORD *)(v0 + 1664) = xmmword_1B6E8FD40;
  *(void *)(v0 + 1680) = 0x80000001B6F3C660;
  *(void *)(v0 + 1688) = 551;
  *(void *)(v0 + 1696) = 0xD000000000000020;
  *(void *)(v0 + 1704) = 0x80000001B6F3C690;
  *(_OWORD *)(v0 + 1712) = xmmword_1B6E8FD50;
  *(void *)(v0 + 1728) = 0x80000001B6F3C6C0;
  *(void *)(v0 + 1736) = 553;
  *(void *)(v0 + 1744) = 0xD000000000000026;
  *(void *)(v0 + 1752) = 0x80000001B6F3C6F0;
  *(_OWORD *)(v0 + 1760) = xmmword_1B6E8FD60;
  *(void *)(v0 + 1776) = 0x80000001B6F3C720;
  *(void *)(v0 + 1784) = 555;
  *(void *)(v0 + 1792) = 0xD000000000000020;
  *(void *)(v0 + 1800) = 0x80000001B6F3C740;
  *(_OWORD *)(v0 + 1808) = xmmword_1B6E8FD70;
  *(void *)(v0 + 1824) = 0xEE0065646F6D5F72;
  *(void *)(v0 + 1832) = 600;
  strcpy((char *)(v0 + 1840), "blending_mode");
  *(_WORD *)(v0 + 1854) = -4864;
  *(_OWORD *)(v0 + 1856) = xmmword_1B6E8FD80;
  *(void *)(v0 + 1872) = 0x80000001B6F3C770;
  *(void *)(v0 + 1880) = 602;
  *(void *)(v0 + 1888) = 0xD000000000000011;
  *(void *)(v0 + 1896) = 0x80000001B6F3C790;
  *(_OWORD *)(v0 + 1904) = xmmword_1B6E8FD90;
  *(void *)(v0 + 1920) = 0x80000001B6F3C7B0;
  *(void *)(v0 + 1928) = 604;
  *(void *)(v0 + 1936) = 0xD000000000000013;
  *(void *)(v0 + 1944) = 0x80000001B6F3C7D0;
  *(_OWORD *)(v0 + 1952) = xmmword_1B6E8FDA0;
  *(void *)(v0 + 1968) = 0x80000001B6F3C7F0;
  *(void *)(v0 + 1976) = 606;
  *(void *)(v0 + 1984) = 0xD000000000000021;
  *(void *)(v0 + 1992) = 0x80000001B6F3C810;
  *(_OWORD *)(v0 + 2000) = xmmword_1B6E8FDB0;
  *(void *)(v0 + 2016) = 0xEF6C656E6E616863;
  *(void *)(v0 + 2024) = 608;
  *(void *)(v0 + 2032) = 0xD000000000000016;
  *(void *)(v0 + 2040) = 0x80000001B6F3C840;
  *(_OWORD *)(v0 + 2048) = xmmword_1B6E8FDC0;
  *(void *)(v0 + 2064) = 0x80000001B6F3C860;
  *(void *)(v0 + 2072) = 610;
  *(void *)(v0 + 2080) = 0xD000000000000010;
  *(void *)(v0 + 2088) = 0x80000001B6F3C880;
  *(_OWORD *)(v0 + 2096) = xmmword_1B6E8FDD0;
  *(void *)(v0 + 2112) = 0x80000001B6F3C8A0;
  *(void *)(v0 + 2120) = 612;
  strcpy((char *)(v0 + 2128), "animation_mode");
  *(unsigned char *)(v0 + 2143) = -18;
  *(_OWORD *)(v0 + 2144) = xmmword_1B6E8FDE0;
  *(void *)(v0 + 2160) = 0x80000001B6F3C8C0;
  *(void *)(v0 + 2168) = 614;
  *(void *)(v0 + 2176) = 0xD000000000000011;
  *(void *)(v0 + 2184) = 0x80000001B6F3C8E0;
  *(_OWORD *)(v0 + 2192) = xmmword_1B6E8FDF0;
  *(void *)(v0 + 2208) = 0x80000001B6F3C900;
  *(void *)(v0 + 2216) = 616;
  *(void *)(v0 + 2224) = 0x6F6D5F6570616873;
  *(void *)(v0 + 2232) = 0xEA00000000006564;
  *(_OWORD *)(v0 + 2240) = xmmword_1B6E8FE00;
  *(void *)(v0 + 2256) = 0x80000001B6F3C920;
  *(void *)(v0 + 2264) = 618;
  strcpy((char *)(v0 + 2272), "enable_cutoff");
  *(_WORD *)(v0 + 2286) = -4864;
  *(_OWORD *)(v0 + 2288) = xmmword_1B6E8FE10;
  *(void *)(v0 + 2304) = 0xEE00676E6974726FLL;
  *(void *)(v0 + 2312) = 620;
  *(void *)(v0 + 2320) = 0xD000000000000012;
  *(void *)(v0 + 2328) = 0x80000001B6F3C940;
  *(_OWORD *)(v0 + 2336) = xmmword_1B6E8FE20;
  *(void *)(v0 + 2352) = 0x80000001B6F3C960;
  *(void *)(v0 + 2360) = 622;
  *(void *)(v0 + 2368) = 0xD000000000000013;
  *(void *)(v0 + 2376) = 0x80000001B6F3C980;
  *(_OWORD *)(v0 + 2384) = xmmword_1B6E8FE30;
  *(void *)(v0 + 2400) = 0x80000001B6F3C9A0;
  *(void *)(v0 + 2408) = 624;
  *(void *)(v0 + 2416) = 0xD000000000000015;
  *(void *)(v0 + 2424) = 0x80000001B6F3C9C0;
  *(_OWORD *)(v0 + 2432) = xmmword_1B6E8FE40;
  *(void *)(v0 + 2448) = 0xEF7974696361704FLL;
  *(void *)(v0 + 2456) = 626;
  strcpy((char *)(v0 + 2464), "voxelizeColor");
  *(_WORD *)(v0 + 2478) = -4864;
  *(_OWORD *)(v0 + 2480) = xmmword_1B6E8FE50;
  *(void *)(v0 + 2496) = 0x80000001B6F3C9E0;
  *(void *)(v0 + 2504) = 628;
  *(void *)(v0 + 2512) = 0xD000000000000016;
  *(void *)(v0 + 2520) = 0x80000001B6F3CA00;
  *(_OWORD *)(v0 + 2528) = xmmword_1B6E8FE60;
  *(void *)(v0 + 2544) = 0x80000001B6F3CA20;
  *(void *)(v0 + 2552) = 630;
  *(void *)(v0 + 2560) = 0xD000000000000019;
  *(void *)(v0 + 2568) = 0x80000001B6F3CA40;
  *(_OWORD *)(v0 + 2576) = xmmword_1B6E8FE70;
  *(void *)(v0 + 2592) = 0x80000001B6F3CA60;
  *(void *)(v0 + 2600) = 800;
  *(void *)(v0 + 2608) = 0xD000000000000012;
  *(void *)(v0 + 2616) = 0x80000001B6F3CA80;
  *(_OWORD *)(v0 + 2624) = xmmword_1B6E8FE80;
  *(void *)(v0 + 2640) = 0x80000001B6F3CAA0;
  *(void *)(v0 + 2648) = 20001;
  *(void *)(v0 + 2656) = 0xD000000000000017;
  *(void *)(v0 + 2664) = 0x80000001B6F3CAC0;
  *(_OWORD *)(v0 + 2672) = xmmword_1B6E8FE90;
  *(void *)(v0 + 2688) = 0x80000001B6F3CAE0;
  *(void *)(v0 + 2696) = 20003;
  *(void *)(v0 + 2704) = 0xD000000000000019;
  *(void *)(v0 + 2712) = 0x80000001B6F3CB00;
  *(_OWORD *)(v0 + 2720) = xmmword_1B6E8FEA0;
  *(void *)(v0 + 2736) = 0x80000001B6F3CB20;
  *(void *)(v0 + 2744) = 20050;
  *(void *)(v0 + 2752) = 0xD000000000000018;
  *(void *)(v0 + 2760) = 0x80000001B6F3CB40;
  *(_OWORD *)(v0 + 2768) = xmmword_1B6E8FEB0;
  *(void *)(v0 + 2784) = 0x80000001B6F3CB60;
  *(void *)(v0 + 2792) = 20052;
  *(void *)(v0 + 2800) = 0xD000000000000015;
  *(void *)(v0 + 2808) = 0x80000001B6F3CB80;
  *(_OWORD *)(v0 + 2816) = xmmword_1B6E8FEC0;
  *(void *)(v0 + 2832) = 0xEF64656469735F65;
  *(void *)(v0 + 2840) = 20054;
  *(void *)(v0 + 2848) = 0xD000000000000012;
  *(void *)(v0 + 2856) = 0x80000001B6F3CBA0;
  *(_OWORD *)(v0 + 2864) = xmmword_1B6E8FED0;
  *(void *)(v0 + 2880) = 0x80000001B6F3CBA0;
  *(void *)(v0 + 2888) = 20071;
  strcpy((char *)(v0 + 2896), "has_color_map");
  *(_WORD *)(v0 + 2910) = -4864;
  *(_OWORD *)(v0 + 2912) = xmmword_1B6E8FEE0;
  *(void *)(v0 + 2928) = 0xEE0070616D5F6C61;
  *(void *)(v0 + 2936) = 20073;
  *(void *)(v0 + 2944) = 0xD000000000000017;
  *(void *)(v0 + 2952) = 0x80000001B6F3CBC0;
  *(_OWORD *)(v0 + 2960) = xmmword_1B6E8FEF0;
  *(void *)(v0 + 2976) = 0x80000001B6F3CBE0;
  *(void *)(v0 + 2984) = 20101;
  *(void *)(v0 + 2992) = 0x666F44736168;
  *(void *)(v0 + 3000) = 0xE600000000000000;
  *(_OWORD *)(v0 + 3008) = xmmword_1B6E8FF00;
  *(void *)(v0 + 3024) = 0xEB0000000072756CLL;
  *(void *)(v0 + 3032) = 20103;
  strcpy((char *)(v0 + 3040), "hasVignetting");
  *(_WORD *)(v0 + 3054) = -4864;
  *(_OWORD *)(v0 + 3056) = xmmword_1B6E8FF10;
  *(void *)(v0 + 3072) = 0xEF676E6964617247;
  *(void *)(v0 + 3080) = 20105;
  *(void *)(v0 + 3088) = 0x6D6F6F6C42736168;
  *(void *)(v0 + 3096) = 0xE800000000000000;
  *(_OWORD *)(v0 + 3104) = xmmword_1B6E8FF20;
  *(void *)(v0 + 3120) = 0xED0000676E69726FLL;
  *(void *)(v0 + 3128) = 20107;
  *(void *)(v0 + 3136) = 0xD000000000000021;
  *(void *)(v0 + 3144) = 0x80000001B6F3CC00;
  *(_OWORD *)(v0 + 3152) = xmmword_1B6E8FF30;
  *(void *)(v0 + 3168) = 0xEB00000000424752;
  *(void *)(v0 + 3176) = 20109;
  strcpy((char *)(v0 + 3184), "hasClearColor");
  *(_WORD *)(v0 + 3198) = -4864;
  *(_OWORD *)(v0 + 3200) = xmmword_1B6E8FF40;
  *(void *)(v0 + 3216) = 0xED0000676E69646ELL;
  *(void *)(v0 + 3224) = 20300;
  strcpy((char *)(v0 + 3232), "useHighQuality");
  *(unsigned char *)(v0 + 3247) = -18;
  *(_OWORD *)(v0 + 3248) = xmmword_1B6E8FF50;
  *(void *)(v0 + 3264) = 0xE800000000000000;
  *(void *)(v0 + 3272) = 20302;
  *(void *)(v0 + 3280) = 0xD000000000000011;
  *(void *)(v0 + 3288) = 0x80000001B6F3CC30;
  *(_OWORD *)(v0 + 3296) = xmmword_1B6E8FF60;
  *(void *)(v0 + 3312) = 0xE900000000000042;
  *(void *)(v0 + 3320) = 20401;
  strcpy((char *)(v0 + 3328), "needsDithering");
  *(unsigned char *)(v0 + 3343) = -18;
  *(_OWORD *)(v0 + 3344) = xmmword_1B6E8FF70;
  *(void *)(v0 + 3360) = 0xEC00000073746E65;
  *(void *)(v0 + 3368) = 20501;
  *(void *)(v0 + 3376) = 0x4247525364616572;
  *(void *)(v0 + 3384) = 0xE800000000000000;
  *(_OWORD *)(v0 + 3392) = xmmword_1B6E8FF80;
  *(void *)(v0 + 3408) = 0x80000001B6F3CC50;
  *(void *)(v0 + 3416) = 20601;
  *(void *)(v0 + 3424) = 0xD000000000000015;
  *(void *)(v0 + 3432) = 0x80000001B6F3CC70;
  *(_OWORD *)(v0 + 3440) = xmmword_1B6E8FF90;
  *(void *)(v0 + 3456) = 0x80000001B6F3CC90;
  *(void *)(v0 + 3464) = 20603;
  *(void *)(v0 + 3472) = 0xD000000000000014;
  *(void *)(v0 + 3480) = 0x80000001B6F3CCB0;
  *(_OWORD *)(v0 + 3488) = xmmword_1B6E8FFA0;
  *(void *)(v0 + 3504) = 0xEC00000073726566;
  uint64_t v1 = sub_1B67F46F4(v0);
  swift_setDeallocating();
  sub_1B682BAF0();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  off_1EB97F978 = v1;
  return result;
}

void sub_1B68DA1A0()
{
  if (!qword_1EB980D58)
  {
    sub_1B682BAF0();
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980D58);
    }
  }
}

uint64_t sub_1B68DA1F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
  {
    if ((a6 & 1) == 0) {
      return a1 < a4;
    }
    return (a3 & 1u) < (a6 & 1u);
  }
  if ((a6 & 1) == 0) {
    return (a3 & 1u) < (a6 & 1u);
  }
  if (a1 == a4 && a2 == a5) {
    return 0;
  }
  char v7 = sub_1B6E334B8();
  uint64_t result = 0;
  if ((v7 & 1) == 0)
  {
    return sub_1B6E334B8();
  }
  return result;
}

uint64_t sub_1B68DA2C4()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B68DA310@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B68DA720(0, &qword_1E9DD21B0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  BOOL v10 = (char *)&v23 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68DA604();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v27) = 1;
  uint64_t v11 = sub_1B6E32D68();
  char v14 = v12;
  if ((v12 & 1) == 0)
  {
    uint64_t v17 = v11;
    uint64_t v26 = 0;
    goto LABEL_8;
  }
  LOBYTE(v27) = 0;
  uint64_t v15 = sub_1B6E32D28();
  if (!v16)
  {
    LOBYTE(v27) = 1;
    sub_1B6E32998();
    swift_allocError();
    sub_1B68DA658();
    sub_1B6E32968();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = v15;
  uint64_t v26 = v16;
LABEL_8:
  char v33 = 2;
  sub_1B68DA6CC();
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  long long v24 = v28;
  long long v25 = v27;
  long long v23 = v29;
  uint64_t v18 = v30;
  uint64_t v19 = v31;
  char v20 = v32;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t v21 = v26;
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v21;
  *(unsigned char *)(a2 + 16) = v14 & 1;
  long long v22 = v24;
  *(_OWORD *)(a2 + 32) = v25;
  *(_OWORD *)(a2 + 48) = v22;
  *(_OWORD *)(a2 + 64) = v23;
  *(void *)(a2 + 80) = v18;
  *(void *)(a2 + 88) = v19;
  *(unsigned char *)(a2 + 96) = v20;
  return result;
}

unint64_t sub_1B68DA604()
{
  unint64_t result = qword_1E9DD21B8;
  if (!qword_1E9DD21B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21B8);
  }
  return result;
}

unint64_t sub_1B68DA658()
{
  unint64_t result = qword_1E9DD21C0;
  if (!qword_1E9DD21C0)
  {
    sub_1B68DA720(255, &qword_1E9DD21B0, MEMORY[0x1E4FBBDC0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21C0);
  }
  return result;
}

unint64_t sub_1B68DA6CC()
{
  unint64_t result = qword_1EB980010;
  if (!qword_1EB980010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980010);
  }
  return result;
}

void sub_1B68DA720(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B68DA604();
    unint64_t v7 = a3(a1, &type metadata for FunctionConstant.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1B68DA784()
{
  unint64_t result = qword_1E9DD21D0;
  if (!qword_1E9DD21D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FunctionConstant.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68DA8A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FunctionConstant.CodingKeys()
{
  return &type metadata for FunctionConstant.CodingKeys;
}

uint64_t sub_1B68DA8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B62D5A18(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FunctionConstant.Key(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B62D5A18(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B62D66CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FunctionConstant.Key(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B62D66CC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FunctionConstant.Key()
{
  return &type metadata for FunctionConstant.Key;
}

unint64_t sub_1B68DA9E0()
{
  unint64_t result = qword_1E9DD21D8;
  if (!qword_1E9DD21D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21D8);
  }
  return result;
}

unint64_t sub_1B68DAA38()
{
  unint64_t result = qword_1E9DD21E0;
  if (!qword_1E9DD21E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21E0);
  }
  return result;
}

unint64_t sub_1B68DAA90()
{
  unint64_t result = qword_1E9DD21E8;
  if (!qword_1E9DD21E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21E8);
  }
  return result;
}

unint64_t sub_1B68DAAE8()
{
  unint64_t result = qword_1E9DD21F0;
  if (!qword_1E9DD21F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21F0);
  }
  return result;
}

uint64_t sub_1B68DAB3C(uint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a2);
  *(_OWORD *)unint64_t result = xmmword_1B6E90330;
  *(_DWORD *)(result + 16) = 0;
  *(_OWORD *)(result + 32) = xmmword_1B6E50340;
  *(_OWORD *)(result + 48) = xmmword_1B6E50340;
  *(_DWORD *)(result + 64) = 0;
  *(_OWORD *)(result + 72) = 0u;
  *(_OWORD *)(result + 88) = 0u;
  *(_OWORD *)(result + 97) = 0u;
  if (a2 != 0xFFFFFFFF)
  {
    swift_retain();
    if ((a2 & 0x80000000) == 0
      && (int)a2 < *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
      && ((uint64_t v7 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v6 == -1)
       || *(_DWORD *)(v7 + 12 * (int)a2 + 8) == v6))
    {
      unint64_t v11 = sub_1B6964E48(*(void *)(*(void *)(a3 + 136) + 8 * *(int *)(v7 + 12 * (int)a2) + 32), *(_DWORD *)(v7 + 12 * (int)a2), *(_WORD *)(v7 + 12 * (int)a2 + 4), 4, a3);
      swift_release();
      float v8 = 0.0;
      if ((v11 & 0x100000000) == 0)
      {
        float v8 = *(float *)&v11;
        *(_DWORD *)(v5 + 4) = v11;
      }
    }
    else
    {
      swift_release();
      float v8 = 0.0;
    }
    swift_retain();
    unint64_t v9 = sub_1B695E458(a2);
    unint64_t result = swift_release();
    if ((v9 & 0x100000000) == 0)
    {
      float v10 = *(float *)&v9;
      if (*(float *)&v9 < 0.0) {
        float v10 = INFINITY;
      }
      *(float *)(v5 + 8) = v8 + v10;
    }
  }
  return result;
}

double sub_1B68DACA4@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E90330;
  *(_DWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_1B6E50340;
  *(_OWORD *)(a1 + 48) = xmmword_1B6E50340;
  *(_DWORD *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 97) = 0u;
  return result;
}

uint64_t sub_1B68DACD8()
{
  return 0x566E776170736572;
}

uint64_t sub_1B68DACF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x566E776170736572 && a2 == 0xEC00000065756C61)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B68DADA8(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2E80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DADE4(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2E80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68DAE20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v14 = a2;
  sub_1B68E2ED4(0, &qword_1EB980920, (uint64_t (*)(void))sub_1B68E2E80, (uint64_t)&type metadata for ParticleRespawn.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  unint64_t v9 = (char *)&v13 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2E80();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  float v10 = v14;
  uint64_t v11 = sub_1B6E32DD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *float v10 = v11;
  return result;
}

uint64_t sub_1B68DAFCC(void *a1)
{
  sub_1B68E2ED4(0, &qword_1E9DD2290, (uint64_t (*)(void))sub_1B68E2E80, (uint64_t)&type metadata for ParticleRespawn.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2E80();
  sub_1B6E33A88();
  sub_1B6E32F88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B68DB130()
{
  return 0x6D695479616C6564;
}

uint64_t sub_1B68DB14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6D695479616C6564 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B68DB1F0(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2E2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DB22C(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2E2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68DB268@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1B68DB48C(a1, &qword_1EB9809E8, (uint64_t (*)(void))sub_1B68E2E2C, (uint64_t)&type metadata for ParticleSpawnDelay.CodingKeys, (void (*)(void))sub_1B68E2E2C, a2);
}

uint64_t sub_1B68DB2B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B68DB680(a1, a2, a3, &qword_1E9DD2288, (uint64_t (*)(void))sub_1B68E2E2C, (uint64_t)&type metadata for ParticleSpawnDelay.CodingKeys, (void (*)(void))sub_1B68E2E2C);
}

void sub_1B68DB308(_DWORD *a1@<X8>)
{
  *a1 = 1065353216;
}

uint64_t sub_1B68DB314()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1B68DB32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B68DB3C4(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2DD8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DB400(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2DD8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68DB43C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1B68DB48C(a1, &qword_1E9DD2270, (uint64_t (*)(void))sub_1B68E2DD8, (uint64_t)&type metadata for ParticleSpawnDuration.CodingKeys, (void (*)(void))sub_1B68E2DD8, a2);
}

uint64_t sub_1B68DB48C@<X0>(void *a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X5>, void (*a5)(void)@<X6>, _DWORD *a6@<X8>)
{
  char v20 = a6;
  sub_1B68E2ED4(0, a2, a3, a4, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v19 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v19 - v12;
  sub_1B62C14BC(a1, a1[3]);
  a5();
  sub_1B6E33A48();
  if (v6) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v15 = v19;
  char v14 = v20;
  sub_1B6E32DC8();
  int v17 = v16;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v10);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *char v14 = v17;
  return result;
}

uint64_t sub_1B68DB630(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B68DB680(a1, a2, a3, &qword_1E9DD2280, (uint64_t (*)(void))sub_1B68E2DD8, (uint64_t)&type metadata for ParticleSpawnDuration.CodingKeys, (void (*)(void))sub_1B68E2DD8);
}

uint64_t sub_1B68DB680(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B68E2ED4(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  char v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  sub_1B6E32F78();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B68DB7E0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68DB83C()
{
  return sub_1B6E318B8();
}

uint64_t sub_1B68DB85C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68DB8B4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B68DB908(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1B68DB92C()
{
  return 0x7265764F65746172;
}

uint64_t sub_1B68DB94C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B68DB9A4(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2B70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DB9E0(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2B70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68DBA1C(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1B6BF92C4(a1, a2, a1, a2);

  return swift_release();
}

uint64_t sub_1B68DBA84@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1B68E2ED4(0, &qword_1EB980A30, (uint64_t (*)(void))sub_1B68E2B70, (uint64_t)&type metadata for ParticleContinuousSpawn.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2B70();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v15;
  sub_1B6E32DC8();
  int v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *uint64_t v10 = v12;
  return result;
}

uint64_t sub_1B68DBC3C(void *a1)
{
  sub_1B68E2ED4(0, &qword_1E9DD2220, (uint64_t (*)(void))sub_1B68E2B70, (uint64_t)&type metadata for ParticleContinuousSpawn.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2B70();
  sub_1B6E33A88();
  sub_1B6E32F78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B68DBDA8()
{
  return type metadata accessor for ParticleContinousSpawnSystem();
}

void sub_1B68DBDC8(_DWORD *a1@<X8>)
{
  *a1 = 1092616192;
}

uint64_t sub_1B68DBDD4(uint64_t a1, uint64_t *a2, uint64_t a3, float a4, float a5)
{
  uint64_t result = sub_1B62F4D64(a1, a2, a4);
  if (result)
  {
    uint64_t v11 = a2[1];
    uint64_t result = sub_1B62D2EA4(v11, (uint64_t)&v18);
    if ((unint64_t)BYTE12(v18) << 32 == 0x200000000)
    {
LABEL_3:
      float v12 = (float)(a4 * a5) + *(float *)(a1 + 64);
      goto LABEL_11;
    }
    int v13 = v19;
    uint64_t result = sub_1B695E488(v11, &v18);
    uint64_t v14 = v18;
    if ((void)v18)
    {
      int v20 = v13;
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_1B68E1B28(v15);
      uint64_t v16 = *(void *)(v14 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      if (v20 != 2)
      {
        if (!v16) {
          return result;
        }
        goto LABEL_3;
      }
    }
    else
    {
      if (v13 != 2) {
        return result;
      }
      uint64_t v16 = 0;
    }
    float v12 = *(float *)(a1 + 64) + (float)((float)((float)v16 * a5) * a4);
LABEL_11:
    *(float *)(a1 + 64) = v12;
    if (v12 >= 1.0)
    {
      uint64_t v17 = a2[4];
      sub_1B62F6B80((uint64_t)a2);
      sub_1B6BFFFA4(v17, a3, a1, (uint64_t)a2);
      uint64_t result = sub_1B62F648C((uint64_t)a2);
      *(float *)(a1 + 64) = fminf(*(float *)(a1 + 64) - floorf(*(float *)(a1 + 64)), 1.0);
    }
  }
  return result;
}

uint64_t type metadata accessor for ParticleContinousSpawnSystem()
{
  return self;
}

uint64_t sub_1B68DBF88(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  sub_1B62F46E8();
  float v4 = v3;
  uint64_t v5 = a1[1];
  swift_retain();
  unint64_t v6 = sub_1B695E470(v5);
  swift_release();
  if ((v6 & 0x100000000) != 0) {
    float v7 = 10.0;
  }
  else {
    float v7 = *(float *)&v6;
  }
  sub_1B62F6B80((uint64_t)a1);
  swift_retain();
  sub_1B6C0234C(v5, v2, a1, v2, v4, v7);
  swift_release();
  sub_1B62F648C((uint64_t)a1);

  return swift_release();
}

const char *sub_1B68DC060()
{
  return "Continous Spawn";
}

uint64_t sub_1B68DC074(char *a1, unsigned __int8 *a2)
{
  return sub_1B6BB8354(*a1, *a2);
}

uint64_t sub_1B68DC080()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68DC120()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68DC1AC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68DC248@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E1038();
  *a1 = result;
  return result;
}

void sub_1B68DC280(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0x80000001B6F2F730;
  uint64_t v4 = 0x776F6C6C6F66;
  if (v2 != 1) {
    uint64_t v4 = 0x7261656E696CLL;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = 0xD000000000000010;
  }
  if (!v5) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

unint64_t sub_1B68DC2DC()
{
  uint64_t v1 = 0x776F6C6C6F66;
  if (*v0 != 1) {
    uint64_t v1 = 0x7261656E696CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1B68DC334@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E1038();
  *a1 = result;
  return result;
}

uint64_t sub_1B68DC364(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2BC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DC3A0(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2BC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68DC3DC(void *a1)
{
  sub_1B68E2ED4(0, &qword_1E9DD2238, (uint64_t (*)(void))sub_1B68E2BC4, (uint64_t)&type metadata for ParticleSpawnOverDistance.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v10[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2BC4();
  sub_1B6E33A88();
  v10[15] = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    v10[14] = 1;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B68DC580(uint64_t a1)
{
  uint64_t v3 = *(void *)a1;
  swift_retain();
  char v5 = 0;
  if (sub_1B6C085D4(*(void *)(a1 + 32), v3, v3, &v5))
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    sub_1B6BF0E10(*(void *)(a1 + 8), v3, &v5);
    sub_1B62F648C(a1);
    swift_release();
    return v1;
  }
  return result;
}

unint64_t sub_1B68DC6FC(unint64_t result, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v6 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v7 = (int *)(v3 + 36);
    do
    {
      uint64_t v8 = *(v7 - 1);
      int v9 = *v7;
      if ((v8 != -1 || v9 != 0) && (v8 & 0x80000000) == 0 && v6[1] > v8)
      {
        uint64_t v11 = *v6;
        if ((v9 == -1 || *(_DWORD *)(v11 + 12 * (int)v8 + 8) == v9)
          && *(unsigned char *)(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v11 + 12 * (int)v8) + 32) + 120) == 1)
        {
          uint64_t v12 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v11 + 12 * (int)v8 + 6) + 32) + 16);
          uint64_t v13 = *(void *)(v12 + 128);
          if (*(void *)(v13 + 16))
          {
            uint64_t result = sub_1B62C1A30((uint64_t)&type metadata for EmitterShape);
            if ((v14 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v12 + 24) + 16 * *(void *)(*(void *)(v13 + 56) + 8 * result) + 32) == &type metadata for EmitterShape)
            {
              *a3 = 1;
            }
          }
        }
      }
      v7 += 2;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_1B68DC83C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, float a5, float a6)
{
  uint64_t v7 = v6;
  uint64_t result = sub_1B62F4D64(a1, (uint64_t *)a2, a5);
  if ((result & 1) == 0) {
    return result;
  }
  if (a6 <= 0.0)
  {
    *(_OWORD *)(a1 + 32) = xmmword_1B6E50340;
    *(_OWORD *)(a1 + 48) = xmmword_1B6E50340;
    return result;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (sub_1B62EC0CC((uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EB40, v15))
  {
    uint64_t result = sub_1B6C02580(v15, a4, a1, a5, a6);
    Swift::Int v16 = (uint64_t)*(float *)(a1 + 64);
    if (v16 >= 1)
    {
      uint64_t v17 = *(void *)(a2 + 32);
      sub_1B62F6B80(a2);
      sub_1B6C00168(v17, a4, v16, (void *)a1, a2);
      uint64_t result = sub_1B62F648C(a2);
      *(float *)(a1 + 64) = *(float *)(a1 + 64) - (float)v16;
    }
    return result;
  }
  long long v18 = *(void **)(a2 + 32);
  sub_1B62E9D50(v18, (uint64_t)v136);
  sub_1B62D7790((uint64_t)v136, (uint64_t)v153, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
  if (v155 != 1)
  {
    float32x4_t v109 = v154;
    __n128 v110 = *(__n128 *)(a1 + 32);
    BOOL v20 = sub_1B684B994(v110);
    float32x4_t v21 = v109;
    BOOL v22 = v20;
    if (v20)
    {
      float32x4_t v23 = vsubq_f32((float32x4_t)v110, v109);
      float32x4_t v24 = vmulq_f32(v23, v23);
      float v25 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v24, 2), vaddq_f32(v24, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v24.f32, 1))).f32[0]);
      float v26 = 0.0;
      if (a3) {
        float v26 = 0.25;
      }
      float v27 = (float)(v25 * a6) - v26;
      float32x4_t v28 = *(float32x4_t *)(a1 + 48);
      float32x4_t v21 = (float32x4_t)v110;
    }
    else
    {
      *(float32x4_t *)(a1 + 32) = v109;
      *(float32x4_t *)(a1 + 48) = v109;
      float v27 = 0.0;
      float32x4_t v28 = v109;
    }
    float32x4_t v111 = v21;
    __n128 v132 = (__n128)vsubq_f32(v21, v28);
    if (sub_1B684B9D0(v132))
    {
      v29.i64[0] = 0x3F0000003F000000;
      v29.i64[1] = 0x3F0000003F000000;
      float32x4_t v30 = vmulq_f32(vsubq_f32(v109, v111), v29);
    }
    else
    {
      float32x4_t v31 = vsubq_f32(v111, v109);
      float32x4_t v32 = vmulq_f32(v31, v31);
      float32x4_t v33 = vmulq_f32((float32x4_t)v132, (float32x4_t)v132);
      v33.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v33, 2), vaddq_f32(v33, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v33.f32, 1))).u64[0];
      float32x4_t v34 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v33.f32, 0);
      v34.i32[3] = 0;
      float32x4_t v35 = vrsqrteq_f32(v34);
      float32x4_t v36 = vmulq_f32(v35, vrsqrtsq_f32(v34, vmulq_f32(v35, v35)));
      int32x4_t v37 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v33.f32[0] != 0.0)), 0x1FuLL));
      v37.i32[3] = 0;
      float32x4_t v30 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v37), (int8x16_t)vmulq_f32((float32x4_t)v132, vmulq_n_f32(vmulq_f32(v36, vrsqrtsq_f32(v34, vmulq_f32(v36, v36))), sqrtf(v32.f32[2] + vaddv_f32(*(float32x2_t *)v32.f32)) * 0.5)), (int8x16_t)v132);
    }
    float32x4_t v133 = v30;
    uint64_t v38 = (uint64_t)v27;
    if ((uint64_t)v27 >= 1)
    {
      sub_1B62F6B80(a2);
      sub_1B6C00168((uint64_t)v18, a4, (uint64_t)v27, (void *)a1, a2);
      sub_1B62F648C(a2);
    }
    float v39 = floorf(v27);
    if (v39 <= 0.0)
    {
      float v41 = 0.0;
      uint64_t v40 = v38;
      if ((a3 & v22 & 1) == 0)
      {
LABEL_28:
        long long v42 = *(_OWORD *)(a2 + 104);
        v160[0] = *(_OWORD *)(a2 + 88);
        v160[1] = v42;
        uint64_t v161 = *(void *)(a2 + 120);
        uint64_t result = *(void *)&v160[0];
        uint64_t v164 = *(void *)&v160[0];
        int v165 = DWORD2(v160[0]);
        char v166 = BYTE12(v160[0]);
        unint64_t v167 = v42 & 0xFFFFFFFFFFFFFFF7;
        char v168 = BYTE8(v42);
        uint64_t v169 = v161;
        if (v40 < 1) {
          return result;
        }
        swift_retain();
        sub_1B62C9DA8(a4, (uint64_t)&v164, 0x200000000, v137);
        sub_1B62D7790((uint64_t)v137, (uint64_t)v146, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        if (*(void *)&v146[0])
        {
          uint64_t v99 = v38;
          uint64_t v100 = a4;
          if (v152 >= 1)
          {
            uint64_t v108 = v149;
            if (v149)
            {
              uint64_t v43 = 0;
              float32x4_t v130 = vaddq_f32(v111, v133);
              float v44 = v41 / v39;
              v45 = v151;
              uint64_t v46 = v151[4];
              LODWORD(v170) = *(unsigned __int8 *)(v150 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
              uint64_t v47 = v152 - v40;
              v156[0] = v146[0];
              v156[1] = v146[1];
              uint64_t v157 = v147;
              uint64_t v105 = (uint64_t)(v151 + 6);
              uint64_t v106 = v148;
              uint64_t v103 = v152 - 1;
              v104 = v151 + 8;
              float32x4_t v48 = v109;
              v48.i32[3] = 1.0;
              float32x4_t v102 = v48;
              v48.f32[0] = v44;
              float32x4_t v126 = v48;
              float32x4_t v128 = vsubq_f32(v109, v111);
              __int16 v101 = a3;
              uint64_t v107 = v46;
              do
              {
                uint64_t v134 = v7;
                uint64_t v124 = v43;
                v49 = (unsigned int *)(v106 + 48 * v43);
                uint64_t v50 = *v49;
                uint64_t v51 = v49[2];
                v114 = (uint64_t *)*((void *)v49 + 2);
                uint64_t v52 = *((void *)v49 + 4);
                uint64_t v112 = v49[1];
                uint64_t v113 = *((void *)v49 + 3);
                uint64_t v53 = *((void *)v49 + 5);
                if (v170)
                {
                  v54 = *(os_unfair_lock_s **)(v53 + 376);
                  swift_retain_n();
                  os_unfair_lock_lock(v54);
                  os_unfair_lock_lock(*(os_unfair_lock_t *)(v53 + 344));
                  swift_release();
                }
                else
                {
                  swift_retain();
                }
                ecs_stack_allocator_push_snapshot(v46);
                sub_1B62D7790(v105, (uint64_t)v163, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
                uint64_t v55 = v45[4];
                uint64_t v56 = *(void *)(*(void *)(*(void *)(*(void *)(v53 + 40) + 16) + 32) + 16) + 1;
                swift_retain();
                v45[6] = ecs_stack_allocator_allocate(v55, 48 * v56, 8);
                v45[7] = v56;
                v104[1] = 0;
                v104[2] = 0;
                void *v104 = 0;
                swift_release();
                uint64_t v57 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v114, v113, v52, (uint64_t)v45);
                if (v58)
                {
                  uint64_t v59 = v134;
                  float32x4_t v61 = v120;
                  float32x4_t v60 = v122;
                  float32x4_t v62 = v126;
                  float32x4_t v64 = v117;
                  float32x4_t v63 = v118;
                  float32x4_t v66 = v115;
                  float32x4_t v65 = v116;
                }
                else
                {
                  uint64_t v59 = v134;
                  float32x4_t v61 = v120;
                  float32x4_t v60 = v122;
                  float32x4_t v62 = v126;
                  float32x4_t v64 = v117;
                  float32x4_t v63 = v118;
                  float32x4_t v66 = v115;
                  float32x4_t v65 = v116;
                  if (v50 != v112)
                  {
                    uint64_t v67 = v112 - v50;
                    v68 = (float32x4_t *)(v57 + 16 * v50);
                    do
                    {
                      if (v51 >= v47)
                      {
                        if (v103 == v51 && (v101 & 1) != 0)
                        {
                          float32x4_t *v68 = v102;
                          if (*(unsigned char *)(a1 + 112) == 1)
                          {
                            float32x4_t v69 = v109;
                            v69.i32[3] = v66.i32[3];
                            float32x4_t v70 = vsubq_f32(v109, v109);
                            v70.i32[3] = v65.i32[3];
                            float32x4_t v65 = v70;
                            v70.i32[3] = 1.0;
                            float32x4_t *v68 = v70;
                            float32x4_t v66 = v69;
                          }
                        }
                        else
                        {
                          *(_OWORD *)(a1 + 48) = *(_OWORD *)(a1 + 32);
                          if ((v101 & 0x100) != 0)
                          {
                            float32x4_t v71 = vmlaq_n_f32(v111, v128, v62.f32[0]);
                            v71.i32[3] = v61.i32[3];
                            float32x4_t v61 = v71;
                          }
                          else
                          {
                            float32x4_t v71 = vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v130, v62.f32[0] * (float)((float)(1.0 - v62.f32[0]) + (float)(1.0 - v62.f32[0]))), v111, (float)(1.0 - v62.f32[0]) * (float)(1.0 - v62.f32[0])), v109, v62.f32[0] * v62.f32[0]);
                            v71.i32[3] = v60.i32[3];
                            float32x4_t v60 = v71;
                          }
                          *(float32x4_t *)(a1 + 32) = v71;
                          float32x4_t v72 = v71;
                          v72.i32[3] = 1.0;
                          float32x4_t *v68 = v72;
                          if (*(unsigned char *)(a1 + 112) == 1)
                          {
                            float32x4_t v73 = vsubq_f32(v71, v109);
                            v71.i32[3] = v64.i32[3];
                            v73.i32[3] = v63.i32[3];
                            float32x4_t v63 = v73;
                            v73.i32[3] = 1.0;
                            float32x4_t *v68 = v73;
                            float32x4_t v64 = v71;
                          }
                          v62.f32[0] = v44 + v62.f32[0];
                        }
                      }
                      ++v51;
                      ++v68;
                      --v67;
                    }
                    while (v67);
                  }
                }
                float32x4_t v115 = v66;
                float32x4_t v116 = v65;
                float32x4_t v117 = v64;
                float32x4_t v118 = v63;
                float32x4_t v126 = v62;
                float32x4_t v120 = v61;
                float32x4_t v122 = v60;
                sub_1B6345178(v45, (unsigned __int16 **)v156, (uint64_t)v163);
                uint64_t v7 = v59;
                sub_1B634507C((char *)v53);
                uint64_t v46 = v107;
                ecs_stack_allocator_pop_snapshot(v107);
                if (v170)
                {
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 344));
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 376));
                }
                swift_release();
                uint64_t v43 = v124 + 1;
              }
              while (v124 + 1 != v108);
            }
          }
          sub_1B632F170(v137);
          uint64_t v38 = v99;
          a4 = v100;
        }
        if (v38 < 1) {
          return sub_1B62CA064((uint64_t)v160);
        }
        sub_1B62C9DA8(a4, (uint64_t)v160, 0x200000000, v138);
        sub_1B62D7790((uint64_t)v138, (uint64_t)v139, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        if (!*(void *)&v139[0]) {
          return sub_1B62CA064((uint64_t)v160);
        }
        if (v145 <= 0 || (uint64_t v129 = v142) == 0)
        {
LABEL_80:
          sub_1B62CA064((uint64_t)v160);
          return (uint64_t)sub_1B632F170(v138);
        }
        uint64_t v74 = 0;
        v75 = v144;
        uint64_t v76 = v144[4];
        int v77 = *(unsigned __int8 *)(v143 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v158[0] = v139[0];
        v158[1] = v139[1];
        uint64_t v125 = v141;
        uint64_t v127 = v76;
        uint64_t v159 = v140;
        uint64_t v123 = (uint64_t)(v144 + 6);
        v121 = v144 + 8;
        int v119 = v77;
        while (1)
        {
          uint64_t v135 = v7;
          v78 = (unsigned int *)(v125 + 48 * v74);
          uint64_t v79 = *v78;
          uint64_t v170 = v78[1];
          uint64_t v80 = *((void *)v78 + 3);
          v131 = (uint64_t *)*((void *)v78 + 2);
          uint64_t v81 = *((void *)v78 + 4);
          uint64_t v82 = *((void *)v78 + 5);
          if (v77)
          {
            v83 = *(os_unfair_lock_s **)(v82 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v83);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v82 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v76);
          sub_1B62D7790(v123, (uint64_t)v162, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v84 = v75[4];
          uint64_t v85 = *(void *)(*(void *)(*(void *)(*(void *)(v82 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v75[6] = ecs_stack_allocator_allocate(v84, 48 * v85, 8);
          v75[7] = v85;
          v121[1] = 0;
          v121[2] = 0;
          void *v121 = 0;
          swift_release();
          uint64_t v86 = sub_1B62C9024((uint64_t)&type metadata for ParticleParentID, (uint64_t)&off_1F0F6E0C8, v131, v80, v81, (uint64_t)v75);
          if (v87)
          {
            uint64_t v89 = v135;
            int v77 = v119;
          }
          else
          {
            uint64_t v88 = v170;
            uint64_t v89 = v135;
            int v77 = v119;
            if (v79 != v170)
            {
              uint64_t v90 = *(void *)(a1 + 104);
              if (v90 >= 0xFFFFFFFFLL) {
                uint64_t v90 = 0xFFFFFFFFLL;
              }
              unsigned int v91 = v90 & ~(v90 >> 63);
              uint64_t v92 = v170 - v79;
              if ((unint64_t)(v170 - v79) >= 8)
              {
                uint64_t v93 = (v92 & 0xFFFFFFFFFFFFFFF8) + v79;
                int32x4_t v94 = vdupq_n_s32(v91);
                v95 = (int32x4_t *)(v86 + 4 * v79 + 16);
                unint64_t v96 = v92 & 0xFFFFFFFFFFFFFFF8;
                do
                {
                  v95[-1] = v94;
                  int32x4_t *v95 = v94;
                  v95 += 2;
                  v96 -= 8;
                }
                while (v96);
                if (v92 == (v92 & 0xFFFFFFFFFFFFFFF8)) {
                  goto LABEL_77;
                }
              }
              else
              {
                uint64_t v93 = v79;
              }
              uint64_t v97 = v88 - v93;
              v98 = (unsigned int *)(v86 + 4 * v93);
              do
              {
                *v98++ = v91;
                --v97;
              }
              while (v97);
            }
          }
LABEL_77:
          sub_1B6345178(v75, (unsigned __int16 **)v158, (uint64_t)v162);
          uint64_t v7 = v89;
          sub_1B634507C((char *)v82);
          uint64_t v76 = v127;
          ecs_stack_allocator_pop_snapshot(v127);
          if (v77)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v82 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v82 + 376));
          }
          swift_release();
          if (++v74 == v129) {
            goto LABEL_80;
          }
        }
      }
    }
    else
    {
      uint64_t v40 = (uint64_t)v27;
      float v41 = v39 / v27;
      if ((a3 & 1) == 0 || !v22) {
        goto LABEL_28;
      }
    }
    uint64_t v40 = v38 + 1;
    goto LABEL_28;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v19 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&v146[0] = 0;
  swift_retain();
  sub_1B6B33E34(v19, (uint64_t *)v146, 0xD000000000000042, 0x80000001B6F3CF60);
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for ParticleSpawnOverDistance.ParticleSpawnOverDistanceSystem()
{
  return self;
}

uint64_t sub_1B68DD2E8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B68DC580(a1);
  return v2;
}

uint64_t sub_1B68DD328(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  sub_1B62F46E8();
  float v4 = v3;
  unint64_t v5 = a1[1];
  swift_retain();
  uint64_t v6 = sub_1B695E4A0(v5);
  swift_release();
  if ((v6 & 0xFF00000000) == 0x200000000) {
    float v7 = 10.0;
  }
  else {
    float v7 = *(float *)&v6;
  }
  sub_1B62F6B80((uint64_t)a1);
  if (((v6 & 0xFF00000000) != 0x200000000) & BYTE5(v6)) {
    __int16 v8 = 256;
  }
  else {
    __int16 v8 = 0;
  }
  __int16 v9 = v8 | BYTE4(v6) & 1;
  swift_retain();
  sub_1B6C02798(v5, v2, (uint64_t)a1, v9, v2, v4, v7);
  swift_release();
  sub_1B62F648C((uint64_t)a1);

  return swift_release();
}

const char *sub_1B68DD430()
{
  return "Spawn Over Distance";
}

void sub_1B68DD444(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v5 = sub_1B68E1178(a1);
  if (!v2)
  {
    *(float *)a2 = v5;
    *(unsigned char *)(a2 + 4) = v4 & 1;
    *(unsigned char *)(a2 + 5) = HIBYTE(v4) & 1;
  }
}

uint64_t sub_1B68DD480(void *a1)
{
  return sub_1B68DC3DC(a1);
}

uint64_t sub_1B68DD4B4()
{
  return type metadata accessor for ParticleSpawnOverDistance.ParticleSpawnOverDistanceSystem();
}

void sub_1B68DD4D4(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1092616192;
  *(_WORD *)(a1 + 4) = 0;
}

uint64_t sub_1B68DD4E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB64F0(*a1, *a2);
}

uint64_t sub_1B68DD4F0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68DD5A0()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68DD63C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68DD6E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E1038();
  *a1 = result;
  return result;
}

void sub_1B68DD720(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC000000656D6954;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6E6F697461727564;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6954746165706572;
    unint64_t v4 = 0xEA0000000000656DLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7265764F65746172;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B68DD78C()
{
  uint64_t v1 = 0x6E6F697461727564;
  if (*v0 != 1) {
    uint64_t v1 = 0x6954746165706572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265764F65746172;
  }
}

uint64_t sub_1B68DD7F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E1038();
  *a1 = result;
  return result;
}

uint64_t sub_1B68DD824(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2C18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DD860(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2C18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68DD89C(void *a1)
{
  unint64_t v3 = v1;
  sub_1B68E2ED4(0, &qword_1E9DD2250, (uint64_t (*)(void))sub_1B68E2C18, (uint64_t)&type metadata for ParticleVariableSpawn.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2C18();
  sub_1B6E33A88();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980410);
  sub_1B62AA64C(qword_1E9DD02C8);
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v14 = v3[1];
    char v13 = 1;
    sub_1B6E32FA8();
    uint64_t v14 = v3[2];
    char v13 = 2;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B68DDAE0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B68E1388(a1, &v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B68DDB24(void *a1)
{
  return sub_1B68DD89C(a1);
}

uint64_t sub_1B68DDB3C()
{
  return type metadata accessor for ParticleVariableSpawnSystem();
}

double sub_1B68DDB5C@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E90340;
  double result = 2.00000047;
  *(void *)(a1 + 16) = 0x400000003F800000;
  return result;
}

uint64_t sub_1B68DDB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5)
{
  int v5 = *(_DWORD *)(a3 + 12);
  uint64_t v6 = *(int *)(a3 + 8);
  BOOL v7 = v6 == -1 && v5 == 0;
  if (v7 || (v6 & 0x80000000) != 0 || *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v6) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  BOOL v9 = v5 == -1 || *(_DWORD *)(v8 + 12 * (int)v6 + 8) == v5;
  if (!v9
    || (uint64_t v14 = (int *)(v8 + 12 * (int)v6),
        uint64_t v15 = *(void *)(*(void *)(a2 + 136) + 8 * *v14 + 32),
        __int16 v16 = *((_WORD *)v14 + 2),
        sub_1B62F6B80(a3),
        LOBYTE(a4) = sub_1B6C003CC(v15, v16, 128, a4, a1, (uint64_t *)a3, a5),
        uint64_t result = sub_1B62F648C(a3),
        (a4 & 1) == 0))
  {
LABEL_13:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68DDD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, float a5)
{
  uint64_t result = sub_1B6358DE0(*(void *)(a2 + 8), 0, *(void *)a2, 0, a1, a5, *(float *)(a2 + 16), *(float *)(a2 + 20), a3 + 8, a4);
  if (result)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
    float v9 = *(float *)(a1 + 16);
    if (v9 > 0.0)
    {
      float v10 = (float)(v9 * a5) + *(float *)(a1 + 64);
      *(float *)(a1 + 64) = v10;
      uint64_t v11 = (uint64_t)v10;
      if ((uint64_t)v10 >= 1)
      {
        uint64_t result = sub_1B6919F58((uint64_t)v10, (void *)a1, (uint64_t)a4);
        *(float *)(a1 + 64) = *(float *)(a1 + 64) - (float)v11;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ParticleVariableSpawnSystem()
{
  return self;
}

uint64_t sub_1B68DDE54(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  sub_1B62F46E8();
  float v4 = v3;
  unint64_t v5 = a1[1];
  swift_retain();
  uint64_t v6 = sub_1B695E55C(v5);
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  unint64_t v13 = HIDWORD(v8);
  if (v12) {
    int v14 = 1092616192;
  }
  else {
    int v14 = v6;
  }
  if (v12) {
    int v15 = 1101004800;
  }
  else {
    int v15 = HIDWORD(v6);
  }
  if (v12) {
    int v16 = 1065353216;
  }
  else {
    int v16 = v8;
  }
  if (v12)
  {
    LODWORD(v13) = 0x40000000;
    int v17 = 1065353216;
  }
  else
  {
    int v17 = v10;
  }
  if (v12) {
    int v18 = 0x40000000;
  }
  else {
    int v18 = HIDWORD(v10);
  }
  v21[0] = v14;
  v21[1] = v15;
  v21[2] = v16;
  v21[3] = v13;
  v21[4] = v17;
  v21[5] = v18;
  uint64_t v19 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B6C004BC(v19, v2, v2, (uint64_t)a1, (uint64_t)v21, v4);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

const char *sub_1B68DDF6C()
{
  return "Variable Spawn";
}

uint64_t sub_1B68DDF80(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B68E2ED4(0, &qword_1E9DD2258, (uint64_t (*)(void))sub_1B68E2C6C, (uint64_t)&type metadata for ParticleBurstSpawn.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  char v11 = (char *)v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2C6C();
  sub_1B6E33A88();
  v13[0] = a2;
  v13[1] = a3;
  sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980420);
  sub_1B68E2D0C(&qword_1E9DD2260);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B68DE144()
{
  return 0x746E756F63;
}

uint64_t sub_1B68DE158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B68DE1E8(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2C6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DE224(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2C6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B68DE260@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B68E1628(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B68DE28C(void *a1)
{
  return sub_1B68DDF80(a1, *v1, v1[1]);
}

double sub_1B68DE2A8@<D0>(_OWORD *a1@<X8>)
{
  *(void *)&double result = 10;
  *a1 = xmmword_1B6E90350;
  return result;
}

uint64_t sub_1B68DE2B8(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v9 = *a1;
  unint64_t v10 = *(void *)(*a1 + 16);
  char v11 = (char *)a1[6];
  int32x4_t v37 = a1 + 6;
  unint64_t v12 = *((void *)v11 + 2);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > *((void *)v11 + 3) >> 1)
  {
    if (v12 <= v10) {
      uint64_t v14 = v10;
    }
    else {
      uint64_t v14 = v12;
    }
    char v11 = sub_1B6397840(isUniquelyReferenced_nonNull_native, v14, 0, v11);
  }
  *int32x4_t v37 = (uint64_t)v11;
  uint64_t result = v10 - v12;
  if (v10 >= v12)
  {
    if (v12 < v10) {
      uint64_t result = sub_1B6641F9C(result, 0);
    }
  }
  else
  {
    uint64_t result = sub_1B68DEB58(v12 - v10);
  }
  uint64_t v16 = *(void *)(v9 + 16);
  if (v16)
  {
    Swift::Int v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = *v37;
    unint64_t v20 = a3 - a2;
    unint64_t v38 = a2 - a3;
    do
    {
      uint64_t v21 = a3;
      if (a3 != a2)
      {
        uint64_t v22 = a4[1];
        uint64_t v23 = a4[2];
        uint64_t v24 = 9 * __ROR8__(5 * v23, 57);
        uint64_t v25 = a4[3] ^ v22;
        uint64_t v26 = a4[4] ^ v23;
        uint64_t v27 = v25 ^ v23;
        uint64_t v28 = v26 ^ v22;
        a4[1] = v28;
        a4[2] = v25 ^ v23;
        uint64_t v29 = __ROR8__(v26, 19);
        uint64_t v30 = v25 ^ (v23 << 17);
        a4[3] = v30;
        a4[4] = v29;
        uint64_t v31 = ((unint64_t)v24 * (unsigned __int128)v20) >> 64;
        if (v20 > v24 * v20 && v38 % v20 > v24 * v20)
        {
          do
          {
            uint64_t v32 = 9 * __ROR8__(5 * v27, 57);
            uint64_t v33 = v28 ^ v30;
            uint64_t v34 = v27 ^ v29;
            v30 ^= v28 ^ (v27 << 17);
            v27 ^= v33;
            v28 ^= v34;
            uint64_t v29 = __ROR8__(v34, 19);
          }
          while (v38 % v20 > v32 * v20);
          a4[1] = v28;
          a4[2] = v27;
          uint64_t v31 = ((unint64_t)v32 * (unsigned __int128)v20) >> 64;
          a4[3] = v30;
          a4[4] = v29;
        }
        uint64_t v21 = v31 + a2;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B6C1683C(v19);
        uint64_t v19 = result;
      }
      *(float *)(v19 + 4 * v18 + 32) = (float)v21;
      v17 += v21;
      ++v18;
    }
    while (v18 != v16);
    *int32x4_t v37 = v19;
    if (v17 > 0) {
      return sub_1B6919F58(v17, a5, a6);
    }
  }
  return result;
}

uint64_t sub_1B68DE4B4(void *a1, unint64_t a2, uint64_t a3, float a4, float a5)
{
  sub_1B68E2ED4(0, &qword_1E9DD2268, (uint64_t (*)(void))sub_1B68E2D84, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v13);
  int v15 = (char *)v18 - v14;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2D84();
  sub_1B6E33A88();
  unint64_t v19 = a2;
  uint64_t v20 = a3;
  char v21 = 0;
  sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980420);
  sub_1B68E2D0C(&qword_1E9DD2260);
  uint64_t v16 = v18[1];
  sub_1B6E32FA8();
  if (!v16)
  {
    unint64_t v19 = __PAIR64__(LODWORD(a5), LODWORD(a4));
    char v21 = 1;
    sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980410);
    sub_1B62AA64C(qword_1E9DD02C8);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_1B68DE710(char *a1, char *a2)
{
  return sub_1B6BB8454(*a1, *a2);
}

uint64_t sub_1B68DE71C()
{
  if (*v0) {
    return 0x6954746165706572;
  }
  else {
    return 0x746E756F63;
  }
}

uint64_t sub_1B68DE758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B68E1080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B68DE780(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2D84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68DE7BC(uint64_t a1)
{
  unint64_t v2 = sub_1B68E2D84();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B68DE7F8(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v6 = sub_1B68E1830(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(float *)(a2 + 16) = v6;
    *(_DWORD *)(a2 + 20) = v7;
  }
}

uint64_t sub_1B68DE828(void *a1)
{
  return sub_1B68DE4B4(a1, *(void *)v1, *(void *)(v1 + 8), *(float *)(v1 + 16), *(float *)(v1 + 20));
}

uint64_t sub_1B68DE848()
{
  return type metadata accessor for ParticlePeriodicBurstSpawnSystem();
}

double sub_1B68DE868@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E90350;
  double result = 2.00000047;
  *(void *)(a1 + 16) = 0x400000003F800000;
  return result;
}

uint64_t type metadata accessor for ParticlePeriodicBurstSpawnSystem()
{
  return self;
}

const char *sub_1B68DE8A8()
{
  return "Periodic Burst Spawn";
}

void *sub_1B68DE8BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1B68DE93C(a1, a2, a3, (void *(*)(long long *__return_ptr, void, void, uint64_t, __n128))sub_1B632B84C, (void (*)(long long *__return_ptr, uint64_t))sub_1B6335480, a4);
}

void *sub_1B68DE8FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1B68DE93C(a1, a2, a3, (void *(*)(long long *__return_ptr, void, void, uint64_t, __n128))sub_1B6BFF824, (void (*)(long long *__return_ptr, uint64_t))sub_1B6346CF0, a4);
}

void *sub_1B68DE93C@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *(*a4)(long long *__return_ptr, void, void, uint64_t, __n128)@<X3>, void (*a5)(long long *__return_ptr, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  if (*((unsigned char *)result + 56) == 1)
  {
    long long v7 = 0uLL;
    if (a3 == 0xFFFFFFFFLL)
    {
      char v8 = 1;
    }
    else
    {
      char v8 = 1;
      if (a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
        && (int)a3 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
      {
        uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        if (HIDWORD(a3) == -1 || *(_DWORD *)(v14 + 12 * (int)a3 + 8) == HIDWORD(a3))
        {
          double result = a4(&v19, *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v14 + 12 * (int)a3) + 32), *(unsigned __int16 *)(v14 + 12 * (int)a3 + 4), 64, (__n128)0);
          long long v7 = v19;
          long long v13 = v20;
          long long v11 = v21;
          long long v12 = v22;
          char v8 = v23;
          goto LABEL_10;
        }
      }
    }
    long long v13 = 0uLL;
    long long v11 = 0uLL;
    long long v12 = 0uLL;
  }
  else
  {
    uint64_t v10 = swift_retain();
    a5(&v19, v10);
    long long v17 = v20;
    long long v18 = v19;
    long long v15 = v22;
    long long v16 = v21;
    char v8 = v23;
    double result = (void *)swift_release();
    long long v12 = v15;
    long long v11 = v16;
    long long v13 = v17;
    long long v7 = v18;
  }
LABEL_10:
  *(_OWORD *)a6 = v7;
  *(_OWORD *)(a6 + 16) = v13;
  *(_OWORD *)(a6 + 32) = v11;
  *(_OWORD *)(a6 + 48) = v12;
  *(unsigned char *)(a6 + 64) = v8;
  return result;
}

void sub_1B68DEA98(void *a1@<X8>)
{
  *a1 = &unk_1F0F6E908;
}

uint64_t sub_1B68DEAA8()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B68DEB08()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B68DEB58(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = *(void *)(*(void *)v1 + 16);
    if (-result < 1)
    {
      uint64_t v4 = 0;
      if (-result < -v2)
      {
LABEL_9:
        uint64_t v3 = v4;
        return sub_1B68E9708(v3, v2);
      }
    }
    else if (!v2)
    {
      uint64_t v3 = 0;
      return sub_1B68E9708(v3, v2);
    }
    uint64_t v4 = v2 - result;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1B68DEB9C(uint64_t result)
{
  if (result)
  {
    sub_1B6E318F8();
    return sub_1B6E31868();
  }
  return result;
}

uint64_t sub_1B68DEC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  float v6 = v2 + 7;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v6;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B68E9818(0, *(void *)(v8 + 16));
  }
  else
  {
    *float v6 = (uint64_t)sub_1B67857EC(0, *(void *)(v8 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = *v6;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *float v6 = v9;
  if (!result || a1 > *(void *)(v9 + 24) >> 1)
  {
    if (*(void *)(v9 + 16) <= a1) {
      uint64_t v11 = a1;
    }
    else {
      uint64_t v11 = *(void *)(v9 + 16);
    }
    uint64_t result = (uint64_t)sub_1B62B7EA0(result, v11, 0, (char *)v9);
    uint64_t v9 = result;
  }
  v3[7] = v9;
  uint64_t v12 = v3[6];
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = v3;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B6C1683C(v12);
      uint64_t v12 = result;
    }
    uint64_t v14 = 0;
    uint64_t v15 = v12 + 32;
    while (1)
    {
      float v16 = *(float *)(v15 + 4 * v14);
      float v17 = v16 + 0.0;
      float v18 = truncf(v16);
      int v19 = LODWORD(v16) & 0x7F800000;
      if ((LODWORD(v16) & 0x7F800000) == 0x7F800000) {
        float v20 = 0.0;
      }
      else {
        float v20 = v16 - v18;
      }
      if (v19 != 2139095040) {
        float v17 = v18;
      }
      *(float *)(v15 + 4 * v14) = v20;
      uint64_t v21 = (uint64_t)v17;
      if ((uint64_t)v17)
      {
        uint64_t v22 = *v6;
        uint64_t v23 = *(void *)(*v6 + 16);
        if (v23 == a1)
        {
LABEL_28:
          v31[6] = v12;
          return result;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *float v6 = v22;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1B62B7EA0(0, v23 + 1, 1, (char *)v22);
          uint64_t v22 = result;
        }
        while (1)
        {
          *float v6 = v22;
          unint64_t v25 = *(void *)(v22 + 16);
          unint64_t v24 = *(void *)(v22 + 24);
          unint64_t v26 = v25 + 1;
          if (v25 >= v24 >> 1)
          {
            uint64_t result = (uint64_t)sub_1B62B7EA0(v24 > 1, v25 + 1, 1, (char *)v22);
            uint64_t v22 = result;
          }
          *(void *)(v22 + 16) = v26;
          *(_DWORD *)(v22 + 4 * v25 + 32) = v14;
          *float v6 = v22;
          if (!--v21) {
            break;
          }
          if (v26 == a1) {
            goto LABEL_28;
          }
        }
      }
      if (++v14 == v13) {
        goto LABEL_28;
      }
    }
  }
  if (a1)
  {
    uint64_t v27 = *(void *)(a2 + 72);
    uint64_t v28 = *(void *)(*v3 + 16);
    do
    {
      *float v6 = v9;
      unint64_t v30 = *(void *)(v9 + 16);
      unint64_t v29 = *(void *)(v9 + 24);
      if (v30 >= v29 >> 1)
      {
        uint64_t result = (uint64_t)sub_1B62B7EA0(v29 > 1, v30 + 1, 1, (char *)v9);
        uint64_t v9 = result;
      }
      *(void *)(v9 + 16) = v30 + 1;
      *(_DWORD *)(v9 + 4 * v30 + 32) = v27 % v28;
      *float v6 = v9;
      ++v27;
      --a1;
    }
    while (a1);
  }
  return result;
}

double sub_1B68DEE80@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = v1;
  *(void *)(a1 + 48) = v1;
  *(void *)(a1 + 56) = v1;
  return result;
}

uint64_t sub_1B68DEEA4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)a3;
  int v9 = *(_DWORD *)(a3 + 36);
  uint64_t v10 = *(int *)(a3 + 32);
  swift_retain();
  BOOL v11 = v10 == -1 && v9 == 0;
  if (v11 || (v10 & 0x80000000) != 0 || *(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v10) {
    goto LABEL_16;
  }
  uint64_t v12 = *(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v9 != -1 && *(_DWORD *)(v12 + 12 * (int)v10 + 8) != v9) {
    goto LABEL_16;
  }
  uint64_t v14 = (int *)(v12 + 12 * (int)v10);
  uint64_t v15 = *(void *)(*(void *)(v8 + 136) + 8 * *v14 + 32);
  __int16 v16 = *((_WORD *)v14 + 2);
  swift_retain();
  sub_1B62F6B80(a3);
  char v17 = sub_1B6BFFD2C(v15, v16, 656, v8, a3, v4, a2, a1);
  sub_1B62F648C(a3);
  swift_release();
  if ((v17 & 1) == 0)
  {
LABEL_16:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    return swift_release();
  }
  return result;
}

void sub_1B68DF0D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, void *a5, uint64_t a6)
{
  long long v7 = v6;
  long long v10 = *(_OWORD *)(a1 + 8);
  long long v11 = *(_OWORD *)(a1 + 24);
  uint64_t v12 = a4[1];
  uint64_t v13 = (int)*a4;
  if (v13 == -1 && v12 == 0)
  {
LABEL_15:
    char v108 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    char v25 = 1;
    goto LABEL_40;
  }
  char v108 = 0;
  if ((v13 & 0x80000000) != 0 || *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v13)
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    char v25 = 1;
    goto LABEL_40;
  }
  if (v12 != -1
    && *(_DWORD *)(*(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v13 + 8) != v12)
  {
    goto LABEL_15;
  }
  uint64_t v123 = a6;
  long long v89 = *(_OWORD *)(a1 + 24);
  long long v91 = *(_OWORD *)(a1 + 8);
  uint64_t v16 = *a4;
  unint64_t v17 = *(unsigned int *)(a3 + 32) | ((unint64_t)*(unsigned int *)(a3 + 36) << 32);
  swift_retain();
  sub_1B6BFF7F8(v17, a2, a2, v17, (uint64_t)v127);
  float v18 = v7;
  uint64_t v19 = v127[0];
  uint64_t v113 = v127[1];
  uint64_t v107 = v127[3];
  uint64_t v109 = v127[2];
  uint64_t v104 = v127[5];
  uint64_t v106 = v127[4];
  uint64_t v100 = v127[7];
  uint64_t v102 = v127[6];
  char v98 = v128;
  swift_release();
  swift_retain();
  sub_1B6BFFAA8(v16 | (v12 << 32), a2, a2, v16 | (v12 << 32), (uint64_t)v129);
  uint64_t v125 = v18;
  uint64_t v120 = v129[0];
  uint64_t v117 = v129[1];
  uint64_t v20 = v129[3];
  uint64_t v114 = v129[2];
  uint64_t v22 = v129[4];
  uint64_t v21 = v129[5];
  uint64_t v23 = v129[6];
  uint64_t v24 = v129[7];
  char v25 = v130;
  swift_release();
  sub_1B633C598((uint64_t)v127, (uint64_t)v147);
  if (v148)
  {
    sub_1B633C598((uint64_t)v129, (uint64_t)&v142);
    if (v146)
    {
      char v108 = 0;
      long long v11 = v89;
      long long v10 = v91;
      a6 = v123;
      long long v7 = v125;
      uint64_t v26 = v120;
      uint64_t v27 = v117;
      uint64_t v28 = v114;
      goto LABEL_40;
    }
    uint64_t v26 = v120;
    v29.i64[0] = v120;
    uint64_t v27 = v117;
    v29.i64[1] = v117;
    uint64_t v28 = v114;
    v30.i64[0] = v114;
    v30.i64[1] = v20;
    v31.i64[0] = v22;
    v31.i64[1] = v21;
  }
  else
  {
    float32x4_t v96 = (float32x4_t)v147[0];
    float32x4_t v115 = (float32x4_t)v147[1];
    float32x4_t v118 = (float32x4_t)v147[2];
    float32x4_t v121 = (float32x4_t)v147[3];
    sub_1B633C598((uint64_t)v129, (uint64_t)&v142);
    if (v146)
    {
      v29.i64[0] = v19;
      uint64_t v27 = v113;
      v29.i64[1] = v113;
      uint64_t v20 = v107;
      uint64_t v28 = v109;
      v30.i64[0] = v109;
      v30.i64[1] = v107;
      uint64_t v21 = v104;
      uint64_t v22 = v106;
      v31.i64[0] = v106;
      uint64_t v26 = v19;
      v31.i64[1] = v104;
      uint64_t v24 = v100;
      uint64_t v23 = v102;
      char v25 = v98;
    }
    else
    {
      char v25 = 0;
      float32x4_t v29 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v142.f32[0]), v115, *(float32x2_t *)v142.f32, 1), v118, v142, 2), v121, v142, 3);
      float32x4_t v30 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v143.f32[0]), v115, *(float32x2_t *)v143.f32, 1), v118, v143, 2), v121, v143, 3);
      float32x4_t v31 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v144.f32[0]), v115, *(float32x2_t *)v144.f32, 1), v118, v144, 2), v121, v144, 3);
      float32x4_t v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v145.f32[0]), v115, *(float32x2_t *)v145.f32, 1), v118, v145, 2), v121, v145, 3);
      uint64_t v27 = v29.i64[1];
      uint64_t v26 = v29.i64[0];
      uint64_t v20 = v30.i64[1];
      uint64_t v28 = v30.i64[0];
      uint64_t v21 = v31.i64[1];
      uint64_t v22 = v31.i64[0];
      uint64_t v24 = v32.i64[1];
      uint64_t v23 = v32.i64[0];
    }
  }
  long long v11 = v89;
  long long v10 = v91;
  a6 = v123;
  int32x4_t v33 = (int32x4_t)vmulq_f32(v29, v29);
  int32x4_t v34 = (int32x4_t)vmulq_f32(v30, v30);
  int32x4_t v35 = (int32x4_t)vmulq_f32(v31, v31);
  int32x4_t v36 = vzip2q_s32(v33, v35);
  float32x4_t v37 = (float32x4_t)vzip1q_s32(vzip1q_s32(v33, v35), v34);
  float32x4_t v38 = (float32x4_t)vtrn2q_s32(v33, v34);
  v38.i32[2] = v35.i32[1];
  float32x4_t v39 = vaddq_f32((float32x4_t)vzip1q_s32(v36, vdupq_laneq_s32(v34, 2)), vaddq_f32(v37, v38));
  v38.i64[0] = 0x80000000800000;
  v38.i64[1] = 0x80000000800000;
  int32x4_t v40 = vcgeq_f32(v38, v39);
  v39.i32[3] = 0;
  float32x4_t v41 = vrsqrteq_f32(v39);
  float32x4_t v42 = vmulq_f32(v41, vrsqrtsq_f32(v39, vmulq_f32(v41, v41)));
  int32x4_t v43 = v40;
  v43.i32[3] = 0;
  float32x4_t v44 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v43), (int8x16_t)v39, (int8x16_t)vmulq_f32(v42, vrsqrtsq_f32(v39, vmulq_f32(v42, v42))));
  float32x4_t v45 = vmulq_n_f32(v29, v44.f32[0]);
  float32x4_t v46 = vmulq_lane_f32(v30, *(float32x2_t *)v44.f32, 1);
  float32x4_t v47 = vmulq_laneq_f32(v31, v44, 2);
  int8x16_t v48 = (int8x16_t)vuzp1q_s32((int32x4_t)v47, (int32x4_t)v47);
  int8x16_t v49 = (int8x16_t)vuzp1q_s32((int32x4_t)v46, (int32x4_t)v46);
  int32x4_t v50 = (int32x4_t)v45;
  if (v40.i32[0])
  {
    int32x4_t v51 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v48, (int8x16_t)v47, 0xCuLL), vnegq_f32(v46)), v47, (float32x4_t)vextq_s8(v49, (int8x16_t)v46, 0xCuLL));
    int32x4_t v50 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v51, v51), (int8x16_t)v51, 0xCuLL);
  }
  int8x16_t v52 = (int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45);
  float32x4_t v53 = v46;
  long long v7 = v125;
  if (v40.i32[1])
  {
    int32x4_t v54 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v52, (int8x16_t)v45, 0xCuLL), vnegq_f32(v47)), v45, (float32x4_t)vextq_s8(v48, (int8x16_t)v47, 0xCuLL));
    float32x4_t v53 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v54, v54), (int8x16_t)v54, 0xCuLL);
  }
  if (v40.i32[2])
  {
    int32x4_t v40 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v49, (int8x16_t)v46, 0xCuLL), vnegq_f32(v45)), v46, (float32x4_t)vextq_s8(v52, (int8x16_t)v45, 0xCuLL));
    float32x4_t v47 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v40, v40), (int8x16_t)v40, 0xCuLL);
  }
  float v55 = (float)(*(float *)v50.i32 + v53.f32[1]) + v47.f32[2];
  if (v55 > 0.0)
  {
    float32x4_t v56 = (float32x4_t)vzip2q_s32((int32x4_t)v53, vuzp1q_s32((int32x4_t)v53, (int32x4_t)v47));
    v56.i32[2] = v50.i32[1];
    float v57 = sqrtf(v55 + 1.0);
    float32x4_t v58 = (float32x4_t)vtrn2q_s32((int32x4_t)v47, vzip2q_s32((int32x4_t)v47, v50));
    v58.i32[2] = v53.i32[0];
    float32x4_t v60 = vsubq_f32(v56, v58);
    v56.f32[3] = v57;
    v58.f32[3] = v57;
    float32x4_t v59 = vmulq_f32(v56, v58);
    v60.i32[3] = v59.i32[3];
LABEL_38:
    v59.f32[0] = 0.5 / v57;
    float32x4_t v70 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v59.f32, 0);
    goto LABEL_39;
  }
  if (*(float *)v50.i32 < v53.f32[1] || *(float *)v50.i32 < v47.f32[2])
  {
    if (v53.f32[1] <= v47.f32[2])
    {
      float v57 = sqrtf((float)((float)(v47.f32[2] + 1.0) - *(float *)v50.i32) - v53.f32[1]);
      *(float32x2_t *)v60.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v50, (int32x4_t)v53), *(float32x2_t *)v47.f32);
      float32x2_t v71 = (float32x2_t)__PAIR64__(v50.u32[1], LODWORD(v57));
      float32x2_t v72 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v53.f32, 0);
      *(float32x2_t *)v59.f32 = vsub_f32(*(float32x2_t *)v50.i8, v72);
      v72.f32[0] = v57;
      v72.i32[0] = vmul_f32(v71, v72).u32[0];
      v72.i32[1] = v59.i32[1];
      *(float32x2_t *)&v60.u32[2] = v72;
      goto LABEL_38;
    }
    float v64 = sqrtf((float)((float)(v53.f32[1] + 1.0) - *(float *)v50.i32) - v47.f32[2]);
    *(int32x2_t *)v40.i8 = vdup_laneq_s32((int32x4_t)v53, 2);
    int8x16_t v62 = (int8x16_t)v40;
    *(float *)v62.i32 = v64;
    v62.i32[0] = vmul_f32(*(float32x2_t *)v62.i8, (float32x2_t)__PAIR64__(v47.u32[1], LODWORD(v64))).u32[0];
    v62.i32[1] = vadd_f32(*(float32x2_t *)&v40, *(float32x2_t *)&v47).i32[1];
    int8x16_t v63 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v50.i8, 1), v53);
    int32x2_t v69 = (int32x2_t)vsubq_f32(v47, (float32x4_t)vdupq_laneq_s32(v50, 2)).u64[0];
    float32x4_t v70 = (float32x4_t)vextq_s8(vextq_s8(v63, v63, 4uLL), v62, 0xCuLL);
    v70.i32[3] = v69.i32[0];
  }
  else
  {
    float v64 = sqrtf((float)((float)(*(float *)v50.i32 + 1.0) - v53.f32[1]) - v47.f32[2]);
    float32x2_t v65 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v53.f32, 0);
    float32x2_t v66 = vadd_f32(*(float32x2_t *)v50.i8, v65);
    v65.f32[0] = v64;
    v70.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v50.u32[1], LODWORD(v64)), v65).u32[0];
    v70.i32[1] = v66.i32[1];
    float32x2_t v67 = (float32x2_t)vzip2q_s32(v50, (int32x4_t)v53).u64[0];
    LODWORD(v68) = vadd_f32(v67, *(float32x2_t *)v47.f32).u32[0];
    int32x2_t v69 = (int32x2_t)vsub_f32(v67, *(float32x2_t *)v47.f32);
    HIDWORD(v68) = v69.i32[1];
    v70.i64[1] = v68;
  }
  *(float *)v69.i32 = 0.5 / v64;
  float32x4_t v60 = (float32x4_t)vdupq_lane_s32(v69, 0);
LABEL_39:
  char v108 = vmulq_f32(v60, v70).u8[0];
LABEL_40:
  v161[0] = v26;
  v161[1] = v27;
  v161[2] = v28;
  v161[3] = v20;
  v161[4] = v22;
  v161[5] = v21;
  v161[6] = v23;
  v161[7] = v24;
  char v162 = v25;
  if (!*(void *)(*a5 + 16))
  {
LABEL_54:
    *(_OWORD *)(a1 + 8) = v10;
    *(_OWORD *)(a1 + 24) = v11;
    return;
  }
  long long v90 = v11;
  long long v92 = v10;
  int v105 = *((unsigned __int8 *)a4 + 20);
  uint64_t v101 = *(void *)(a6 + 96);
  uint64_t v103 = *(void *)(a6 + 88);
  sub_1B62F46E8();
  float v74 = v73;
  long long v75 = *(_OWORD *)(a3 + 104);
  v153[0] = *(_OWORD *)(a3 + 88);
  v153[1] = v75;
  uint64_t v154 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v153, 0x200000000, v131);
  sub_1B62D7790((uint64_t)v131, (uint64_t)v132, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v132[0])
  {
LABEL_53:
    long long v11 = v90;
    long long v10 = v92;
    goto LABEL_54;
  }
  long long v139 = v132[0];
  long long v140 = v132[1];
  uint64_t v141 = v133;
  uint64_t v99 = v138;
  if (v138 < 1 || (uint64_t v76 = v135) == 0)
  {
LABEL_52:
    sub_1B632F170(v131);
    goto LABEL_53;
  }
  int v77 = v137;
  uint64_t v78 = v137[4];
  uint64_t v97 = v136;
  int v79 = *(unsigned __int8 *)(v136 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v93 = v137 + 8;
  uint64_t v94 = (uint64_t)(v137 + 6);
  uint64_t v80 = (uint64_t *)(v134 + 24);
  int v95 = v79;
  while (1)
  {
    uint64_t v124 = v76;
    float32x4_t v126 = v7;
    uint64_t v82 = *((unsigned int *)v80 - 6);
    uint64_t v81 = *((unsigned int *)v80 - 5);
    uint64_t v83 = *((unsigned int *)v80 - 4);
    uint64_t v84 = v80[2];
    uint64_t v122 = *(v80 - 1);
    uint64_t v119 = *v80;
    uint64_t v116 = v80[1];
    if (v79)
    {
      uint64_t v85 = *(os_unfair_lock_s **)(v84 + 376);
      swift_retain();
      os_unfair_lock_lock(v85);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v84 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v78);
    sub_1B62D7790(v94, (uint64_t)v155, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v86 = v77[4];
    uint64_t v87 = *(void *)(*(void *)(*(void *)(*(void *)(v84 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v77[6] = ecs_stack_allocator_allocate(v86, 48 * v87, 8);
    v77[7] = v87;
    v93[1] = 0;
    v93[2] = 0;
    *uint64_t v93 = 0;
    swift_release();
    v156[0] = v97;
    v156[1] = v84;
    _OWORD v156[2] = v77;
    v156[3] = v83;
    v156[4] = (v81 - v82 + v83);
    v156[5] = v99;
    v156[6] = v82;
    v156[7] = v81;
    v156[8] = 0;
    v156[9] = 0;
    char v157 = 1;
    uint64_t v158 = v122;
    uint64_t v159 = v119;
    uint64_t v160 = v116;
    sub_1B68DF9CC((uint64_t)v156, v103, v101, a5, v105 == 2, (void *)a1, (uint64_t)v161, (uint64_t)a4, v74, v88, v108);
    if (v126) {
      break;
    }
    v151[0] = v139;
    v151[1] = v140;
    uint64_t v152 = v141;
    sub_1B6345178(v77, (unsigned __int16 **)v151, (uint64_t)v155);
    long long v7 = 0;
    sub_1B634507C((char *)v84);
    ecs_stack_allocator_pop_snapshot(v78);
    int v79 = v95;
    if (v95)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 376));
    }
    swift_release();
    v80 += 6;
    uint64_t v76 = v124 - 1;
    if (v124 == 1) {
      goto LABEL_52;
    }
  }

  v149[0] = v139;
  v149[1] = v140;
  uint64_t v150 = v141;
  sub_1B6345178(v77, (unsigned __int16 **)v149, (uint64_t)v155);
  sub_1B634507C((char *)v84);
  ecs_stack_allocator_pop_snapshot(v78);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 376));
  __break(1u);
}

uint64_t sub_1B68DF9CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, void *a6, uint64_t a7, uint64_t a8, float a9, float32x4_t a10, char a11)
{
  uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 16));
  uint64_t v18 = sub_1B67A8284();
  char v91 = v19;
  uint64_t v99 = sub_1B67A819C();
  char v21 = v20;
  uint64_t v96 = sub_1B67A82F8();
  char v87 = v22;
  uint64_t v93 = sub_1B67A836C();
  char v78 = v23;
  uint64_t v82 = sub_1B67A83E0();
  char v75 = v24;
  uint64_t v79 = sub_1B6345A6C();
  char v88 = v25;
  uint64_t result = sub_1B67A8210();
  uint64_t v28 = *(void *)(a1 + 24);
  uint64_t v29 = *(void *)(a1 + 32);
  if (v28 <= a2) {
    uint64_t v30 = a2;
  }
  else {
    uint64_t v30 = *(void *)(a1 + 24);
  }
  if (v29 >= a3) {
    uint64_t v29 = a3;
  }
  if (v29 >= v30)
  {
    uint64_t v110 = v29 - v30;
    if (v29 != v30)
    {
      char v31 = v27;
      uint64_t v32 = v17;
      uint64_t v33 = 0;
      uint64_t v34 = *(void *)(a1 + 48) - v28 + v30;
      char v98 = *(unsigned char *)(a8 + 12);
      char v97 = *(unsigned char *)(a8 + 15);
      uint64_t v35 = v18;
      char v36 = *(unsigned char *)(a8 + 14);
      uint64_t v37 = a4[2];
      uint64_t v95 = v37;
      uint64_t v86 = v37 + 32;
      char v85 = *(unsigned char *)(a8 + 13);
      _S9 = a10.i32[3];
      char v39 = (v37 == 0) | v91;
      uint64_t v77 = v79 + 16 * v34;
      uint64_t v40 = v32 + 16 * v34;
      uint64_t v41 = a4[7] - 4 * a2 + 4 * v30 + 32;
      uint64_t v74 = v35 + 16 * v34;
      uint64_t v76 = v99 + 16 * v34;
      float32x4_t v70 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a10, (int32x4_t)a10), (int8x16_t)a10, 0xCuLL);
      float32x4_t v71 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a10, 3);
      float32x4_t v69 = vnegq_f32(a10);
      uint64_t v73 = v96 + 4 * v34;
      uint64_t v68 = v93 + 8 * v34;
      uint64_t v67 = v82 + 16 * v34;
      uint64_t v94 = result + 4 * v34;
      int v83 = v88 & 1;
      int v89 = v21 & 1;
      while (1)
      {
        uint64_t v43 = *(int *)(v41 + 4 * v33);
        if ((v39 & 1) != 0 || *(void *)(v95 + 16) <= v43)
        {
          float32x4_t v101 = *(float32x4_t *)(*a4 + 16 * v43 + 32);
          uint64_t result = sub_1B633C598(a7, (uint64_t)v108);
          if (v109)
          {
            float32x4_t v49 = v101;
            v49.i32[3] = 1.0;
            *(float32x4_t *)(v40 + 16 * v33) = v49;
            if (v98) {
              goto LABEL_31;
            }
          }
          else
          {
            float32x4_t v50 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v108[3], v108[2], v101, 2), v108[1], *(float32x2_t *)v101.f32, 1), v108[0], v101.f32[0]);
            v50.i32[3] = 1.0;
            *(float32x4_t *)(v40 + 16 * v33) = v50;
            if (v98) {
              goto LABEL_31;
            }
          }
          goto LABEL_38;
        }
        float32x4_t v100 = *(float32x4_t *)(v86 + 16 * v43);
        float32x4_t v92 = *(float32x4_t *)(*a4 + 16 * v43 + 32);
        if (a5)
        {
          uint64_t v45 = a6[1];
          uint64_t v44 = a6[2];
          uint64_t v46 = a6[3] ^ v45;
          uint64_t v47 = a6[4] ^ v44;
          a6[1] = v47 ^ v45;
          a6[2] = v46 ^ v44;
          a6[3] = v46 ^ (v44 << 17);
          a6[4] = __ROR8__(v47, 19);
          float v80 = (float)((float)((9 * ((((unint64_t)(5 * v44) >> 32) >> 25) | (640 * v44))) & 0xFFFFFF)
                      * 0.000000059605)
              * a9;
          uint64_t result = sub_1B633C598(a7, (uint64_t)v104);
          if (v105)
          {
            float32x4_t v48 = vaddq_f32(v92, vmulq_n_f32(v100, v80));
          }
          else
          {
            float32x4_t v51 = vaddq_f32(v92, vmulq_n_f32(v100, v80));
            float32x4_t v48 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v104[3], v104[2], v51, 2), v104[1], *(float32x2_t *)v51.f32, 1), v104[0], v51.f32[0]);
          }
        }
        else
        {
          uint64_t result = sub_1B633C598(a7, (uint64_t)v106);
          if (v107)
          {
            float32x4_t v48 = v92;
          }
          else
          {
            float32x4_t v52 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v106[3], v106[2], v92, 2), v106[1], *(float32x2_t *)v92.f32, 1), v106[0], v92.f32[0]);
            v52.i32[3] = v72;
            float32x4_t v48 = v52;
          }
        }
        v48.i32[3] = 1.0;
        *(float32x4_t *)(v40 + 16 * v33) = v48;
        if ((v85 & 1) == 0) {
          goto LABEL_30;
        }
        uint64_t result = sub_1B633C598(a7, (uint64_t)v102);
        if (v103) {
          break;
        }
        float32x4_t v57 = vmulq_n_f32(v100, *(float *)(a8 + 16));
        float32x4_t v58 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v102[2], v57, 2), v102[1], *(float32x2_t *)v57.f32, 1), v102[0], v57.f32[0]);
        v58.i32[3] = 0;
        *(float32x4_t *)(v74 + 16 * v33) = v58;
        if (v98)
        {
LABEL_31:
          uint64_t v54 = a4[3];
          if (v54)
          {
            if (*(void *)(v54 + 16) && v89 == 0) {
              *(_OWORD *)(v76 + 16 * v33) = *(_OWORD *)(v54 + 16 * v43 + 32);
            }
          }
        }
LABEL_38:
        if (v97)
        {
          uint64_t v56 = a4[4];
          if (v56)
          {
            if (*(void *)(v56 + 16))
            {
              if (v87)
              {
                if (v78)
                {
                  if ((v75 & 1) == 0) {
                    *(_OWORD *)(v67 + 16 * v33) = *(_OWORD *)(v56 + 16 * v43 + 32);
                  }
                }
                else
                {
                  *(void *)(v68 + 8 * v33) = *(void *)(v56 + 16 * v43 + 32);
                }
              }
              else
              {
                *(_DWORD *)(v73 + 4 * v33) = *(_DWORD *)(v56 + 16 * v43 + 32);
              }
            }
          }
        }
        if (v36)
        {
          uint64_t v59 = a4[1];
          if (v59)
          {
            if (*(void *)(v59 + 16) && !v83)
            {
              _Q0 = *(float32x4_t *)(v59 + 16 * v43 + 32);
              if ((a11 & 1) == 0)
              {
                int32x4_t v61 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL), v69), _Q0, v70);
                __asm { FMLA            S2, S9, V0.S[3] }
                _Q0 = vaddq_f32(vmlaq_f32(vmulq_laneq_f32(a10, _Q0, 3), v71, _Q0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v61, v61), (int8x16_t)v61, 0xCuLL));
                _Q0.i32[3] = _S2;
              }
              *(float32x4_t *)(v77 + 16 * v33) = _Q0;
            }
          }
        }
        if ((v31 & 1) == 0)
        {
          uint64_t v66 = a4[5];
          if (*(void *)(v66 + 16) > v43) {
            int v42 = *(_DWORD *)(v66 + 4 * v43 + 32);
          }
          else {
            int v42 = 0;
          }
          *(_DWORD *)(v94 + 4 * v33) = v42;
        }
        if (v110 == ++v33) {
          return result;
        }
      }
      float32x4_t v53 = vmulq_n_f32(v100, *(float *)(a8 + 16));
      v53.i32[3] = 0;
      *(float32x4_t *)(v74 + 16 * v33) = v53;
LABEL_30:
      if (v98) {
        goto LABEL_31;
      }
      goto LABEL_38;
    }
  }
  return result;
}

unint64_t sub_1B68DFFC0(char a1)
{
  unint64_t result = 0x6E45746E65726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C696261626F7270;
      break;
    case 2:
      unint64_t result = 0x4374697265686E69;
      break;
    case 3:
      unint64_t result = 0x5674697265686E69;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x797469636F6C6576;
      break;
    case 6:
      unint64_t result = 1701080941;
      break;
    case 7:
      unint64_t result = 0x5374697265686E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B68E00F8(char a1)
{
  unint64_t result = 0x6E45746E65726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C696261626F7270;
      break;
    case 2:
      unint64_t result = 0x4374697265686E69;
      break;
    case 3:
      unint64_t result = 0x5674697265686E69;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x797469636F6C6576;
      break;
    case 6:
      unint64_t result = 1701080941;
      break;
    case 7:
      unint64_t result = 0x5374697265686E69;
      break;
    default:
      return result;
  }
  return result;
}

double sub_1B68E0230@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)a1 = 0xFFFFFFFFLL;
  *(void *)(a1 + 8) = 1065353216;
  *(_DWORD *)(a1 + 16) = 1065353216;
  *(unsigned char *)(a1 + 20) = 0;
  return result;
}

uint64_t sub_1B68E024C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB1BA8(*a1, *a2);
}

uint64_t sub_1B68E0258()
{
  return sub_1B69EB87C();
}

uint64_t sub_1B68E0264()
{
  return sub_1B69EA160();
}

uint64_t sub_1B68E026C()
{
  return sub_1B69EB87C();
}

uint64_t sub_1B68E0274@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E0FEC();
  *a1 = result;
  return result;
}

unint64_t sub_1B68E02A4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B68DFFC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B68E02D0()
{
  return sub_1B68E00F8(*v0);
}

uint64_t sub_1B68E02D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E0FEC();
  *a1 = result;
  return result;
}

uint64_t sub_1B68E0300(uint64_t a1)
{
  unint64_t v2 = sub_1B68E1F58();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68E033C(uint64_t a1)
{
  unint64_t v2 = sub_1B68E1F58();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68E0378(void *a1)
{
  uint64_t v3 = v1;
  sub_1B68E2ED4(0, &qword_1E9DD21F8, (uint64_t (*)(void))sub_1B68E1F58, (uint64_t)&type metadata for ParticleSubSpawn.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  long long v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E1F58();
  sub_1B6E33A88();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1B6E32F78();
    LOBYTE(v14) = 2;
    sub_1B6E32F58();
    LOBYTE(v14) = 3;
    sub_1B6E32F58();
    LOBYTE(v14) = 4;
    sub_1B6E32F58();
    LOBYTE(v14) = 5;
    sub_1B6E32F78();
    LOBYTE(v14) = *((unsigned char *)v3 + 20);
    char v13 = 6;
    sub_1B66C53D4();
    sub_1B6E32FA8();
    LOBYTE(v14) = 7;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B68E0630@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B68E1BC8(a1, (uint64_t)v5);
  if (!v2)
  {
    double result = v5[0];
    *(_OWORD *)a2 = *(_OWORD *)v5;
    *(double *)(a2 + 13) = *(double *)((char *)&v5[1] + 5);
  }
  return result;
}

uint64_t sub_1B68E0674(void *a1)
{
  return sub_1B68E0378(a1);
}

void sub_1B68E068C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 16));
  uint64_t v5 = sub_1B67A8284();
  uint64_t v49 = v6;
  uint64_t v50 = v5;
  char v8 = v7;
  if (*(unsigned char *)(a2 + 12) == 1)
  {
    uint64_t v9 = sub_1B67A819C();
    uint64_t v46 = v10;
    uint64_t v47 = v9;
    char v12 = v11 & 1;
  }
  else
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    char v12 = 1;
  }
  char v45 = v12;
  if (*(unsigned char *)(a2 + 14) == 1)
  {
    uint64_t v44 = sub_1B6345A6C();
    uint64_t v43 = v13;
    char v15 = v14 & 1;
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v43 = 0;
    char v15 = 1;
  }
  char v42 = v15;
  char v48 = v8 & 1;
  if (*(unsigned char *)(a2 + 15) == 1)
  {
    uint64_t v16 = sub_1B67A82F8();
    uint64_t v40 = v17;
    uint64_t v41 = v16;
    char v39 = v18 & 1;
    if (*(unsigned char *)(a2 + 15) == 1)
    {
      uint64_t v19 = sub_1B67A836C();
      uint64_t v37 = v20;
      uint64_t v38 = v19;
      char v22 = v21 & 1;
      if (*(unsigned char *)(a2 + 15) == 1)
      {
        uint64_t v23 = sub_1B67A83E0();
        uint64_t v25 = v24;
        char v27 = v26 & 1;
        goto LABEL_15;
      }
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v23 = 0;
      uint64_t v25 = 0;
      char v22 = 1;
    }
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    char v22 = 1;
    char v39 = 1;
  }
  char v27 = 1;
LABEL_15:
  uint64_t v28 = sub_1B67A8454();
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  float v33 = *(float *)(a2 + 8);
  unint64_t v35 = *(void *)(a1 + 48);
  uint64_t v34 = *(void *)(a1 + 56);
  if (v33 >= 1.0)
  {
    for (; v34 != v35; ++v35)
      sub_1B68E201C(v35, a3, v51, v50, v49, v48, v44, v43, v42, v47, v46, v45, v41, v40, v39, v38, v37, v22, v23,
        v25,
        v27,
        v28,
        v30,
        v32);
  }
  else
  {
    for (; v34 != v35; ++v35)
    {
      if (v33 > 0.0)
      {
        float v36 = drand48();
        if (v33 > v36) {
          sub_1B68E201C(v35, a3, v51, v50, v49, v48, v44, v43, v42, v47, v46, v45, v41, v40, v39, v38, v37, v22, v23,
        }
            v25,
            v27,
            v28,
            v30,
            v32);
      }
    }
  }
}

const char *sub_1B68E0974()
{
  return "Sub Spawn Update/Die/Collision";
}

BOOL sub_1B68E0988(char a1)
{
  return a1 != 0;
}

uint64_t type metadata accessor for ParticleSubSpawnSystemPostUpdate()
{
  return self;
}

const char *sub_1B68E09BC()
{
  return "Sub Spawn Birth";
}

uint64_t type metadata accessor for ParticleSubSpawnSystemPostInit()
{
  return self;
}

uint64_t destroy for ParticleSubSpawn.State()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ParticleSubSpawn.State(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ParticleSubSpawn.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ParticleSubSpawn.State(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticleSubSpawn.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSubSpawn.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn.State()
{
  return &type metadata for ParticleSubSpawn.State;
}

__n128 initializeBufferWithCopyOfBuffer for ParticleSubSpawn(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleSubSpawn(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 12);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSubSpawn(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 21) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 12) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn()
{
  return &type metadata for ParticleSubSpawn;
}

uint64_t sub_1B68E0DD8(unint64_t a1)
{
  uint64_t v3 = sub_1B6D27950();
  unint64_t v4 = v3 * a1;
  uint64_t result = ((unint64_t)v3 * (unsigned __int128)a1) >> 64;
  if (v4 < a1)
  {
    unint64_t v6 = -(uint64_t)a1 % a1;
    if (v6 > v4)
    {
      uint64_t v7 = v1[2];
      uint64_t v8 = v1[3];
      uint64_t v9 = *v1;
      uint64_t v10 = v1[1];
      do
      {
        uint64_t v11 = 9 * __ROR8__(5 * v10, 57);
        uint64_t v12 = v9 ^ v7;
        uint64_t v13 = v10 ^ v8;
        v7 ^= v9 ^ (v10 << 17);
        v10 ^= v12;
        v9 ^= v13;
        uint64_t v8 = __ROR8__(v13, 19);
      }
      while (v6 > v11 * a1);
      *uint64_t v1 = v9;
      v1[1] = v10;
      uint64_t result = ((unint64_t)v11 * (unsigned __int128)a1) >> 64;
      v1[2] = v7;
      v1[3] = v8;
    }
  }
  return result;
}

uint64_t sub_1B68E0E64(uint64_t result, uint64_t a2, float a3, float a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    unint64_t v7 = *(void *)(v4 + 16);
    uint64_t v8 = (char **)(result + 48);
    uint64_t v9 = *(char **)(result + 48);
    unint64_t v10 = *((void *)v9 + 2);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v7 > *((void *)v9 + 3) >> 1)
    {
      if (v10 <= v7) {
        uint64_t v12 = v7;
      }
      else {
        uint64_t v12 = v10;
      }
      uint64_t v9 = sub_1B6397840(isUniquelyReferenced_nonNull_native, v12, 0, v9);
    }
    *uint64_t v8 = v9;
    if (v7 >= v10)
    {
      if (v10 < v7) {
        sub_1B6641F9C(v7 - v10, 0);
      }
    }
    else
    {
      sub_1B68DEB58(v10 - v7);
    }
    uint64_t v13 = *(void *)(v4 + 16);
    if (v13)
    {
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = *v8;
      do
      {
        float32x4_t v22 = *(float32x4_t *)(v4 + 16 * v15 + 32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1B6C1683C((uint64_t)v16);
        }
        float32x4_t v17 = vmulq_n_f32(v22, a3);
        float32x4_t v18 = vmulq_f32(v17, v17);
        uint64_t v19 = &v16[4 * v15];
        v18.f32[0] = (float)(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v18, 2), vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v18.f32, 1))).f32[0])* a4)+ *((float *)v19 + 8);
        *((_DWORD *)v19 + 8) = v18.i32[0];
        v14 += (uint64_t)v18.f32[0];
        ++v15;
      }
      while (v13 != v15);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v8 = v16;
      float v20 = (float)v14;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      float v20 = 0.0;
    }
    *(float *)(a2 + 64) = v20 + *(float *)(a2 + 64);
  }
  return result;
}

uint64_t sub_1B68E0FEC()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B68E1038()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B68E1080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6954746165706572 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

float sub_1B68E1178(void *a1)
{
  sub_1B68E2ED4(0, &qword_1E9DD2228, (uint64_t (*)(void))sub_1B68E2BC4, (uint64_t)&type metadata for ParticleSpawnOverDistance.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = &v12[-v8];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2BC4();
  sub_1B6E33A48();
  if (!v1)
  {
    v12[15] = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    v12[14] = 1;
    sub_1B6E32D38();
    v12[13] = 2;
    sub_1B6E32D38();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B68E1388@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B68E2ED4(0, &qword_1E9DD2240, (uint64_t (*)(void))sub_1B68E2C18, (uint64_t)&type metadata for ParticleVariableSpawn.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v17 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2C18();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v6;
  sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980410);
  char v18 = 0;
  sub_1B62AA64C((unint64_t *)&qword_1EB980418);
  uint64_t v11 = v17;
  sub_1B6E32DF8();
  uint64_t v12 = v19;
  char v18 = 1;
  sub_1B6E32DF8();
  uint64_t v13 = v19;
  char v18 = 2;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v14 = v19;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v12;
  a2[1] = v13;
  a2[2] = v14;
  return result;
}

void *sub_1B68E1628(void *a1)
{
  sub_1B68E2ED4(0, &qword_1EB9809D8, (uint64_t (*)(void))sub_1B68E2C6C, (uint64_t)&type metadata for ParticleBurstSpawn.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2C6C();
  uint64_t v10 = v9;
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980420);
    sub_1B68E2D0C(&qword_1EB980428);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v10 = v12;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

float sub_1B68E1830(void *a1)
{
  sub_1B68E2ED4(0, &qword_1EB980A60, (uint64_t (*)(void))sub_1B68E2D84, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E2D84();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980420);
    char v12 = 0;
    sub_1B68E2D0C(&qword_1EB980428);
    sub_1B6E32DF8();
    sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980410);
    char v12 = 1;
    sub_1B62AA64C((unint64_t *)&qword_1EB980418);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    float v2 = *(float *)&v11;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B68E1AD4()
{
  unint64_t result = qword_1EB97ECC8;
  if (!qword_1EB97ECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ECC8);
  }
  return result;
}

uint64_t sub_1B68E1B28(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B68E1BC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_1B68E2ED4(0, (unint64_t *)&unk_1EB980950, (uint64_t (*)(void))sub_1B68E1F58, (uint64_t)&type metadata for ParticleSubSpawn.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v25 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E1F58();
  uint64_t v9 = v8;
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v5;
  uint64_t v11 = v28;
  char v30 = 0;
  sub_1B62B1EA8();
  uint64_t v12 = v29;
  uint64_t v13 = v9;
  sub_1B6E32DF8();
  uint64_t v14 = v31;
  LOBYTE(v31) = 1;
  sub_1B6E32DC8();
  uint64_t v15 = (uint64_t)a1;
  int v17 = v16;
  LOBYTE(v31) = 2;
  char v18 = sub_1B6E32DA8();
  LOBYTE(v31) = 3;
  char v20 = sub_1B6E32DA8();
  LOBYTE(v31) = 4;
  int v21 = sub_1B6E32DA8();
  LOBYTE(v31) = 5;
  sub_1B6E32DC8();
  int v23 = v22;
  char v30 = 6;
  sub_1B66C5380();
  sub_1B6E32DF8();
  int v27 = v21;
  LOBYTE(v21) = v20;
  int v26 = v31;
  LOBYTE(v31) = 7;
  char v24 = sub_1B6E32D38();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v12);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v15);
  *(void *)uint64_t v11 = v14;
  *(_DWORD *)(v11 + 8) = v17;
  *(unsigned char *)(v11 + 12) = v18 & 1;
  *(unsigned char *)(v11 + 13) = v21 & 1;
  *(unsigned char *)(v11 + 14) = v27 & 1;
  *(unsigned char *)(v11 + 15) = v24 & 1;
  *(_DWORD *)(v11 + 16) = v23;
  *(unsigned char *)(v11 + 20) = v26;
  return result;
}

unint64_t sub_1B68E1F58()
{
  unint64_t result = qword_1EB97ECB0;
  if (!qword_1EB97ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ECB0);
  }
  return result;
}

void sub_1B68E1FAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1B62C5560(255, (unint64_t *)&qword_1EB97E840);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B68E201C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,char a24)
{
  int32x4_t v63 = *(int32x4_t *)(a3 + 16 * a1);
  uint64_t v29 = *(char **)a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)a2 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v29 = sub_1B68C0EA8(0, *((void *)v29 + 2) + 1, 1, v29);
    *(void *)a2 = v29;
  }
  unint64_t v32 = *((void *)v29 + 2);
  unint64_t v31 = *((void *)v29 + 3);
  if (v32 >= v31 >> 1) {
    uint64_t v29 = sub_1B68C0EA8(v31 > 1, v32 + 1, 1, v29);
  }
  *((void *)v29 + 2) = v32 + 1;
  int32x4_t v33 = v63;
  *(int32x4_t *)&v29[16 * v32 + 32] = v63;
  *(void *)a2 = v29;
  if ((a6 & 1) == 0)
  {
    uint64_t v34 = *(char **)(a2 + 16);
    if (v34)
    {
      int32x4_t v64 = *(int32x4_t *)(a4 + 16 * a1);
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a2 + 16) = v34;
      if ((v35 & 1) == 0)
      {
        uint64_t v34 = sub_1B68C0EA8(0, *((void *)v34 + 2) + 1, 1, v34);
        *(void *)(a2 + 16) = v34;
      }
      unint64_t v37 = *((void *)v34 + 2);
      unint64_t v36 = *((void *)v34 + 3);
      if (v37 >= v36 >> 1) {
        uint64_t v34 = sub_1B68C0EA8(v36 > 1, v37 + 1, 1, v34);
      }
      *((void *)v34 + 2) = v37 + 1;
      int32x4_t v33 = v64;
      *(int32x4_t *)&v34[16 * v37 + 32] = v64;
      *(void *)(a2 + 16) = v34;
    }
  }
  if ((a9 & 1) == 0)
  {
    uint64_t v38 = *(char **)(a2 + 8);
    if (v38)
    {
      int32x4_t v65 = *(int32x4_t *)(a7 + 16 * a1);
      char v39 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a2 + 8) = v38;
      if ((v39 & 1) == 0)
      {
        uint64_t v38 = sub_1B68C384C(0, *((void *)v38 + 2) + 1, 1, v38);
        *(void *)(a2 + 8) = v38;
      }
      unint64_t v41 = *((void *)v38 + 2);
      unint64_t v40 = *((void *)v38 + 3);
      if (v41 >= v40 >> 1) {
        uint64_t v38 = sub_1B68C384C(v40 > 1, v41 + 1, 1, v38);
      }
      *((void *)v38 + 2) = v41 + 1;
      int32x4_t v33 = v65;
      *(int32x4_t *)&v38[16 * v41 + 32] = v65;
      *(void *)(a2 + 8) = v38;
    }
  }
  if ((a12 & 1) == 0)
  {
    char v42 = *(char **)(a2 + 24);
    if (v42)
    {
      int32x4_t v66 = *(int32x4_t *)(a10 + 16 * a1);
      char v43 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a2 + 24) = v42;
      if ((v43 & 1) == 0)
      {
        char v42 = sub_1B629CE28(0, *((void *)v42 + 2) + 1, 1, v42);
        *(void *)(a2 + 24) = v42;
      }
      unint64_t v45 = *((void *)v42 + 2);
      unint64_t v44 = *((void *)v42 + 3);
      if (v45 >= v44 >> 1) {
        char v42 = sub_1B629CE28(v44 > 1, v45 + 1, 1, v42);
      }
      *((void *)v42 + 2) = v45 + 1;
      int32x4_t v33 = v66;
      *(int32x4_t *)&v42[16 * v45 + 32] = v66;
      *(void *)(a2 + 24) = v42;
    }
  }
  if ((a15 & 1) == 0)
  {
    uint64_t v46 = *(char **)(a2 + 32);
    if (!v46) {
      goto LABEL_45;
    }
    v33.i32[0] = *(_DWORD *)(a13 + 4 * a1);
    int32x2_t v67 = *(int32x2_t *)v33.i8;
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a2 + 32) = v46;
    if ((v47 & 1) == 0)
    {
      uint64_t v46 = sub_1B68C0EA8(0, *((void *)v46 + 2) + 1, 1, v46);
      *(void *)(a2 + 32) = v46;
    }
    unint64_t v49 = *((void *)v46 + 2);
    unint64_t v48 = *((void *)v46 + 3);
    if (v49 >= v48 >> 1) {
      uint64_t v46 = sub_1B68C0EA8(v48 > 1, v49 + 1, 1, v46);
    }
    int32x4_t v50 = vdupq_lane_s32(v67, 0);
    v50.i32[3] = 0;
    *((void *)v46 + 2) = v49 + 1;
    uint64_t v51 = (int32x4_t *)&v46[16 * v49];
    goto LABEL_44;
  }
  if ((a18 & 1) == 0)
  {
    uint64_t v46 = *(char **)(a2 + 32);
    if (!v46) {
      goto LABEL_45;
    }
    v33.i64[0] = *(void *)(a16 + 8 * a1);
    goto LABEL_39;
  }
  if ((a21 & 1) == 0)
  {
    uint64_t v46 = *(char **)(a2 + 32);
    if (v46)
    {
      int32x4_t v33 = *(int32x4_t *)(a19 + 16 * a1);
LABEL_39:
      int32x4_t v68 = v33;
      char v52 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a2 + 32) = v46;
      if ((v52 & 1) == 0)
      {
        uint64_t v46 = sub_1B68C0EA8(0, *((void *)v46 + 2) + 1, 1, v46);
        *(void *)(a2 + 32) = v46;
      }
      unint64_t v54 = *((void *)v46 + 2);
      unint64_t v53 = *((void *)v46 + 3);
      if (v54 >= v53 >> 1) {
        uint64_t v46 = sub_1B68C0EA8(v53 > 1, v54 + 1, 1, v46);
      }
      *((void *)v46 + 2) = v54 + 1;
      uint64_t v51 = (int32x4_t *)&v46[16 * v54];
      int32x4_t v50 = v68;
LABEL_44:
      v51[2] = v50;
      *(void *)(a2 + 32) = v46;
    }
  }
LABEL_45:
  if (a24)
  {
    if ((a1 & 0x8000000000000000) != 0 || HIDWORD(a1))
    {
      sub_1B6E32BD8();
      __break(1u);
      JUMPOUT(0x1B68E2584);
    }
    uint64_t v60 = *(void *)(a2 + 40);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a2 + 40) = v60;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B68C370C(0, *(void *)(v60 + 16) + 1, 1, (char *)v60);
      uint64_t v60 = result;
      *(void *)(a2 + 40) = result;
    }
    unint64_t v62 = *(void *)(v60 + 16);
    unint64_t v61 = *(void *)(v60 + 24);
    if (v62 >= v61 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B68C370C(v61 > 1, v62 + 1, 1, (char *)v60);
      uint64_t v60 = result;
    }
    *(void *)(v60 + 16) = v62 + 1;
    *(_DWORD *)(v60 + 4 * v62 + 32) = a1;
    *(void *)(a2 + 40) = v60;
  }
  else
  {
    int v55 = *(_DWORD *)(a22 + 4 * a1);
    uint64_t v56 = *(void *)(a2 + 40);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a2 + 40) = v56;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B68C370C(0, *(void *)(v56 + 16) + 1, 1, (char *)v56);
      uint64_t v56 = result;
      *(void *)(a2 + 40) = result;
    }
    unint64_t v59 = *(void *)(v56 + 16);
    unint64_t v58 = *(void *)(v56 + 24);
    if (v59 >= v58 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B68C370C(v58 > 1, v59 + 1, 1, (char *)v56);
      uint64_t v56 = result;
    }
    *(void *)(v56 + 16) = v59 + 1;
    *(_DWORD *)(v56 + 4 * v59 + 32) = v55;
    *(void *)(a2 + 40) = v56;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticleSubSpawn.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68E2660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn.CodingKeys()
{
  return &type metadata for ParticleSubSpawn.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ParticleSpawnState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 113)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 112);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSpawnState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 113) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 112) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSpawnState()
{
  return &type metadata for ParticleSpawnState;
}

ValueMetadata *type metadata accessor for ParticleContinuousSpawn()
{
  return &type metadata for ParticleContinuousSpawn;
}

uint64_t initializeBufferWithCopyOfBuffer for ParticleSpawnOverDistance(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleSpawnOverDistance(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 6)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSpawnOverDistance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 6) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 6) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSpawnOverDistance()
{
  return &type metadata for ParticleSpawnOverDistance;
}

ValueMetadata *type metadata accessor for ParticleVariableSpawn()
{
  return &type metadata for ParticleVariableSpawn;
}

ValueMetadata *type metadata accessor for ParticleBurstSpawn()
{
  return &type metadata for ParticleBurstSpawn;
}

ValueMetadata *type metadata accessor for ParticlePeriodicBurstSpawn()
{
  return &type metadata for ParticlePeriodicBurstSpawn;
}

ValueMetadata *type metadata accessor for ParticleSpawnDuration()
{
  return &type metadata for ParticleSpawnDuration;
}

ValueMetadata *type metadata accessor for ParticleSpawnDelay()
{
  return &type metadata for ParticleSpawnDelay;
}

ValueMetadata *type metadata accessor for ParticleRespawn()
{
  return &type metadata for ParticleRespawn;
}

unsigned char *storeEnumTagSinglePayload for ParticleSubSpawn.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68E2958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn.Mode()
{
  return &type metadata for ParticleSubSpawn.Mode;
}

unint64_t sub_1B68E2994()
{
  unint64_t result = qword_1E9DD2200;
  if (!qword_1E9DD2200)
  {
    sub_1B62D8620(255, &qword_1E9DD2208, (uint64_t)&type metadata for ParticleSubSpawn.Mode, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2200);
  }
  return result;
}

unint64_t sub_1B68E2A14()
{
  unint64_t result = qword_1E9DD2210;
  if (!qword_1E9DD2210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2210);
  }
  return result;
}

unint64_t sub_1B68E2A6C()
{
  unint64_t result = qword_1E9DD2218;
  if (!qword_1E9DD2218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2218);
  }
  return result;
}

unint64_t sub_1B68E2AC4()
{
  unint64_t result = qword_1EB97ECC0;
  if (!qword_1EB97ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ECC0);
  }
  return result;
}

unint64_t sub_1B68E2B1C()
{
  unint64_t result = qword_1EB97ECB8;
  if (!qword_1EB97ECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ECB8);
  }
  return result;
}

unint64_t sub_1B68E2B70()
{
  unint64_t result = qword_1EB97F820;
  if (!qword_1EB97F820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F820);
  }
  return result;
}

unint64_t sub_1B68E2BC4()
{
  unint64_t result = qword_1E9DD2230;
  if (!qword_1E9DD2230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2230);
  }
  return result;
}

unint64_t sub_1B68E2C18()
{
  unint64_t result = qword_1E9DD2248;
  if (!qword_1E9DD2248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2248);
  }
  return result;
}

unint64_t sub_1B68E2C6C()
{
  unint64_t result = qword_1EB97F0D0;
  if (!qword_1EB97F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F0D0);
  }
  return result;
}

void sub_1B68E2CC0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B6E320E8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1B68E2D0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B68E2CC0(255, (unint64_t *)&qword_1EB980420);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B68E2D84()
{
  unint64_t result = qword_1EB97F9C0;
  if (!qword_1EB97F9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F9C0);
  }
  return result;
}

unint64_t sub_1B68E2DD8()
{
  unint64_t result = qword_1E9DD2278;
  if (!qword_1E9DD2278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2278);
  }
  return result;
}

unint64_t sub_1B68E2E2C()
{
  unint64_t result = qword_1EB97F1C8;
  if (!qword_1EB97F1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F1C8);
  }
  return result;
}

unint64_t sub_1B68E2E80()
{
  unint64_t result = qword_1EB97EB28;
  if (!qword_1EB97EB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EB28);
  }
  return result;
}

void sub_1B68E2ED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ParticleRespawn.CodingKeys()
{
  return &type metadata for ParticleRespawn.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleSpawnDelay.CodingKeys()
{
  return &type metadata for ParticleSpawnDelay.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleSpawnDuration.CodingKeys()
{
  return &type metadata for ParticleSpawnDuration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ParticlePeriodicBurstSpawn.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68E303CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticlePeriodicBurstSpawn.CodingKeys()
{
  return &type metadata for ParticlePeriodicBurstSpawn.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleBurstSpawn.CodingKeys()
{
  return &type metadata for ParticleBurstSpawn.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleVariableSpawn.CodingKeys()
{
  return &type metadata for ParticleVariableSpawn.CodingKeys;
}

unsigned char *_s3VFX21ParticleVariableSpawnV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68E3164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSpawnOverDistance.CodingKeys()
{
  return &type metadata for ParticleSpawnOverDistance.CodingKeys;
}

unsigned char *_s3VFX15ParticleRespawnV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B68E3238);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleContinuousSpawn.CodingKeys()
{
  return &type metadata for ParticleContinuousSpawn.CodingKeys;
}

unint64_t sub_1B68E3274()
{
  unint64_t result = qword_1E9DD2298;
  if (!qword_1E9DD2298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2298);
  }
  return result;
}

unint64_t sub_1B68E32CC()
{
  unint64_t result = qword_1E9DD22A0;
  if (!qword_1E9DD22A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22A0);
  }
  return result;
}

unint64_t sub_1B68E3324()
{
  unint64_t result = qword_1E9DD22A8;
  if (!qword_1E9DD22A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22A8);
  }
  return result;
}

unint64_t sub_1B68E337C()
{
  unint64_t result = qword_1E9DD22B0;
  if (!qword_1E9DD22B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22B0);
  }
  return result;
}

unint64_t sub_1B68E33D4()
{
  unint64_t result = qword_1E9DD22B8;
  if (!qword_1E9DD22B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22B8);
  }
  return result;
}

unint64_t sub_1B68E342C()
{
  unint64_t result = qword_1E9DD22C0;
  if (!qword_1E9DD22C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22C0);
  }
  return result;
}

unint64_t sub_1B68E3484()
{
  unint64_t result = qword_1E9DD22C8;
  if (!qword_1E9DD22C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22C8);
  }
  return result;
}

unint64_t sub_1B68E34DC()
{
  unint64_t result = qword_1E9DD22D0;
  if (!qword_1E9DD22D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22D0);
  }
  return result;
}

unint64_t sub_1B68E3534()
{
  unint64_t result = qword_1EB97EB38;
  if (!qword_1EB97EB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EB38);
  }
  return result;
}

unint64_t sub_1B68E358C()
{
  unint64_t result = qword_1EB97EB30;
  if (!qword_1EB97EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EB30);
  }
  return result;
}

unint64_t sub_1B68E35E4()
{
  unint64_t result = qword_1EB97F1D8;
  if (!qword_1EB97F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F1D8);
  }
  return result;
}

unint64_t sub_1B68E363C()
{
  unint64_t result = qword_1EB97F1D0;
  if (!qword_1EB97F1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F1D0);
  }
  return result;
}

unint64_t sub_1B68E3694()
{
  unint64_t result = qword_1E9DD22D8;
  if (!qword_1E9DD22D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22D8);
  }
  return result;
}

unint64_t sub_1B68E36EC()
{
  unint64_t result = qword_1E9DD22E0;
  if (!qword_1E9DD22E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22E0);
  }
  return result;
}

unint64_t sub_1B68E3744()
{
  unint64_t result = qword_1EB97F9D0;
  if (!qword_1EB97F9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F9D0);
  }
  return result;
}

unint64_t sub_1B68E379C()
{
  unint64_t result = qword_1EB97F9C8;
  if (!qword_1EB97F9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F9C8);
  }
  return result;
}

unint64_t sub_1B68E37F4()
{
  unint64_t result = qword_1EB97F0E0;
  if (!qword_1EB97F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F0E0);
  }
  return result;
}

unint64_t sub_1B68E384C()
{
  unint64_t result = qword_1EB97F0D8;
  if (!qword_1EB97F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F0D8);
  }
  return result;
}

unint64_t sub_1B68E38A4()
{
  unint64_t result = qword_1E9DD22E8;
  if (!qword_1E9DD22E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22E8);
  }
  return result;
}

unint64_t sub_1B68E38FC()
{
  unint64_t result = qword_1E9DD22F0;
  if (!qword_1E9DD22F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22F0);
  }
  return result;
}

unint64_t sub_1B68E3954()
{
  unint64_t result = qword_1E9DD22F8;
  if (!qword_1E9DD22F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD22F8);
  }
  return result;
}

unint64_t sub_1B68E39AC()
{
  unint64_t result = qword_1E9DD2300;
  if (!qword_1E9DD2300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2300);
  }
  return result;
}

unint64_t sub_1B68E3A04()
{
  unint64_t result = qword_1EB97F830;
  if (!qword_1EB97F830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F830);
  }
  return result;
}

unint64_t sub_1B68E3A5C()
{
  unint64_t result = qword_1EB97F828;
  if (!qword_1EB97F828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F828);
  }
  return result;
}

unint64_t sub_1B68E3AB0(char a1)
{
  unint64_t result = 0x656372756F73;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x654C6E6F62626972;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x6F666E49676F6CLL;
      break;
    case 6:
      unint64_t result = 0x6963697473616C65;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B68E3BA0(char a1)
{
  unint64_t result = 0x656372756F73;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x654C6E6F62626972;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x6F666E49676F6CLL;
      break;
    case 6:
      unint64_t result = 0x6963697473616C65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68E3C90(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB4F0C(*a1, *a2);
}

uint64_t sub_1B68E3C9C()
{
  return sub_1B69EAE54();
}

uint64_t sub_1B68E3CA8()
{
  return sub_1B69E9914();
}

uint64_t sub_1B68E3CB0()
{
  return sub_1B69EAE54();
}

uint64_t sub_1B68E3CB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E57C0();
  *a1 = result;
  return result;
}

unint64_t sub_1B68E3CE8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B68E3AB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B68E3D14()
{
  return sub_1B68E3BA0(*v0);
}

uint64_t sub_1B68E3D1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68E57C0();
  *a1 = result;
  return result;
}

uint64_t sub_1B68E3D44(uint64_t a1)
{
  unint64_t v2 = sub_1B68E5C18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68E3D80(uint64_t a1)
{
  unint64_t v2 = sub_1B68E5C18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68E3DBC(void *a1)
{
  int v3 = v1;
  sub_1B68E5CF8(0, &qword_1E9DD2318, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = &v13[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E5C18();
  sub_1B6E33A88();
  uint64_t v14 = *v3;
  v13[7] = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBB550];
    sub_1B62D7810((uint64_t)(v3 + 1), (uint64_t)v15, &qword_1EB9803E0, MEMORY[0x1E4FBB550]);
    sub_1B62D7810((uint64_t)v15, (uint64_t)&v16, &qword_1EB9803E0, v11);
    if ((v17 & 1) == 0)
    {
      LOBYTE(v14) = 1;
      sub_1B6E32F88();
    }
    LOBYTE(v14) = 2;
    sub_1B6E32F78();
    LOBYTE(v14) = 3;
    sub_1B6E32F58();
    LOBYTE(v14) = 4;
    sub_1B6E32F58();
    LOBYTE(v14) = 5;
    sub_1B6E32F58();
    LOBYTE(v14) = 6;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B68E4050()
{
  return type metadata accessor for ParticleRibbonTrailsSystem();
}

double sub_1B68E4070@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B68E58B4(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B68E40AC(void *a1)
{
  return sub_1B68E3DBC(a1);
}

double sub_1B68E40E0@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)a1 = 0xFFFFFFFFLL;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 20) = 1065353216;
  *(_WORD *)(a1 + 24) = 257;
  *(unsigned char *)(a1 + 26) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  return result;
}

uint64_t sub_1B68E4110(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)a1;
  swift_retain();
  uint64_t v5 = *(void *)(a1 + 8);
  swift_retain();
  sub_1B695E574(v5, &v139);
  swift_release();
  if (v141 == 2)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    LODWORD(v8) = 0;
    float v9 = 1.0;
    char v10 = 1;
    unsigned __int32 v11 = -1;
    int v12 = 1;
    float v13 = 0.0;
    LOBYTE(v14) = 1;
  }
  else
  {
    unint64_t v7 = v139.n128_u64[1];
    unsigned __int32 v11 = v139.n128_u32[0];
    uint64_t v6 = v139.n128_u32[1];
    char v10 = v140 & 1;
    float v9 = *((float *)&v140 + 1);
    int v12 = v141 & 1;
    uint64_t v14 = (v141 >> 8) & 1;
    uint64_t v8 = (v141 >> 16) & 1;
    float v13 = *((float *)&v141 + 1);
  }
  v148[0] = v11;
  v148[1] = v6;
  uint64_t v85 = v6;
  unint64_t v149 = v7;
  char v89 = v10;
  char v150 = v10;
  float v151 = v9;
  char v152 = v12;
  char v153 = v14;
  char v154 = v8;
  float v155 = v13;
  if (v9 < 0.0) {
    float v15 = 0.0;
  }
  else {
    float v15 = v9;
  }
  if (v13 < 0.0) {
    float v16 = 0.0;
  }
  else {
    float v16 = v13;
  }
  if (v8)
  {
    sub_1B62D866C(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B6E77050;
    *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v17 + 32) = 0xD00000000000001DLL;
    *(void *)(v17 + 40) = 0x80000001B6F3D100;
    sub_1B6E338E8();
    swift_bridgeObjectRelease();
  }
  long long v18 = *(_OWORD *)(a1 + 104);
  long long v129 = *(_OWORD *)(a1 + 88);
  long long v130 = v18;
  uint64_t v131 = *(void *)(a1 + 120);
  sub_1B67CE420((uint64_t)v93);
  v127[0] = v93[0];
  v127[1] = v93[1];
  uint64_t v128 = v94;
  sub_1B62C9DA8(v4, (uint64_t)v127, 0x200000000, v95);
  char v78 = (unsigned __int16 *)v95[0];
  uint64_t v79 = v95[2];
  uint64_t v74 = v95[1];
  uint64_t v75 = v97;
  uint64_t v87 = v98;
  uint64_t v88 = v99;
  uint64_t v19 = v101;
  char v76 = v96;
  uint64_t v77 = v100;
  uint64_t v91 = v102;
  sub_1B62D7810((uint64_t)v95, (uint64_t)&v116, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  unint64_t v20 = v116;
  if (v116)
  {
    int v84 = v12;
    float v80 = v19;
    uint64_t v83 = v7;
    if (!v8)
    {
      uint64_t v35 = v126;
      uint64_t v34 = v125;
      long long v32 = v123;
      long long v33 = v124;
      uint64_t v31 = v122;
      uint64_t v30 = v121;
      char v29 = v120;
      uint64_t v28 = v119;
      unsigned __int8 v27 = v118;
      uint64_t v22 = v91;
      unsigned __int32 v26 = v117;
      goto LABEL_23;
    }
    uint64_t v81 = v2;
    char v21 = v8;
    uint64_t v22 = v91;
  }
  else
  {
    if ((v8 & 1) == 0) {
      goto LABEL_73;
    }
    uint64_t v83 = v7;
    int v84 = v12;
    float v80 = v19;
    uint64_t v81 = v2;
    char v21 = v8;
    uint64_t v22 = 0;
  }
  sub_1B62D866C(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1B6E77050;
  v139.n128_u64[0] = 0;
  v139.n128_u64[1] = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  v139.n128_u64[0] = 0xD000000000000026;
  v139.n128_u64[1] = 0x80000001B6F3D0B0;
  sub_1B62D7810((uint64_t)v95, (uint64_t)v115, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v115[0]) {
    unint64_t v24 = v115[10];
  }
  else {
    unint64_t v24 = 0;
  }
  unint64_t v104 = v24;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  __n128 v25 = v139;
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
  *(__n128 *)(v23 + 32) = v25;
  sub_1B6E338E8();
  swift_bridgeObjectRelease();
  sub_1B62D7810((uint64_t)v95, (uint64_t)&v104, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  unint64_t v20 = v104;
  if (!v104)
  {
    LOBYTE(v8) = v21;
    goto LABEL_25;
  }
  unsigned __int32 v26 = v105;
  unsigned __int8 v27 = v106;
  uint64_t v28 = v107;
  char v29 = v108;
  uint64_t v30 = v109;
  uint64_t v31 = v110;
  long long v32 = v111;
  long long v33 = v112;
  uint64_t v34 = v113;
  uint64_t v35 = v114;
  LOBYTE(v8) = v21;
  uint64_t v2 = v81;
LABEL_23:
  v139.n128_u64[0] = v20;
  v139.n128_u32[2] = v26;
  v139.n128_u8[12] = v27;
  uint64_t v140 = v28;
  LOBYTE(v141) = v29;
  uint64_t v142 = v30;
  uint64_t v143 = v31;
  long long v144 = v32;
  long long v145 = v33;
  uint64_t v146 = v34;
  uint64_t v147 = v35;
  swift_retain();
  swift_retain();
  sub_1B632F1C4(v95, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  sub_1B6845E6C((uint64_t)&v139, v22, v148, v11 | (unint64_t)(v85 << 32), v4, v8, v83, v89, v15, v16, v2, v14);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
LABEL_25:
  int v36 = v84;
  if (v22 <= 0) {
    int v36 = 0;
  }
  if (v36 == 1)
  {
    sub_1B62D7810((uint64_t)v95, (uint64_t)v103, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v103[0])
    {
      v103[8] = v103[2];
      v103[9] = v103[3];
      v103[10] = v103[4];
      v103[11] = v103[5];
      v103[6] = v103[0];
      v103[7] = v103[1];
      if (sub_1B6845CF8((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, 0))
      {
        if (v91 >= 1 && v88)
        {
          char v73 = v8;
          uint64_t v37 = v80[4];
          int v38 = *(unsigned __int8 *)(v77 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          __n128 v132 = v78;
          int v133 = v74;
          char v134 = BYTE4(v74);
          uint64_t v135 = v79;
          char v136 = v76;
          uint64_t v137 = v75;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v39 = 0;
          uint64_t v40 = 0;
          int v86 = v38;
          uint64_t v82 = v37;
          while (1)
          {
            uint64_t v90 = v40;
            uint64_t v92 = v39;
            unint64_t v41 = (unsigned int *)(v87 + 48 * v39);
            uint64_t v43 = *v41;
            uint64_t v42 = v41[1];
            uint64_t v44 = *((void *)v41 + 2);
            uint64_t v45 = *((void *)v41 + 4);
            uint64_t v46 = *((void *)v41 + 5);
            if (v38)
            {
              char v47 = *(os_unfair_lock_s **)(v46 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v47);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v37);
            sub_1B62D7810((uint64_t)(v80 + 6), (uint64_t)v138, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v48 = v80[4];
            uint64_t v49 = *(void *)(*(void *)(*(void *)(*(void *)(v46 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v80[6] = ecs_stack_allocator_allocate(v48, 48 * v49, 8);
            v80[7] = v49;
            v80[9] = 0;
            v80[10] = 0;
            v80[8] = 0;
            swift_release();
            if (v44)
            {
              if (v45)
              {
                uint64_t v50 = 0;
                uint64_t v51 = *(void *)(v46 + 48);
                uint64_t v52 = *(void *)(v51 + 16) - 1;
                uint64_t v37 = v82;
                do
                {
                  if (*(ValueMetadata **)(v51 + 32) == &type metadata for Velocity)
                  {
                    uint64_t v53 = 0;
                  }
                  else
                  {
                    uint64_t v53 = 0;
                    uint64_t v55 = v52;
                    do
                    {
                      uint64_t v56 = *(ValueMetadata **)(v51 + 72 + v53);
                      v53 += 40;
                      --v55;
                    }
                    while (v56 != &type metadata for Velocity);
                  }
                  unint64_t v54 = (void *)(*(void *)(v46 + 128)
                                 + *(void *)(v51 + 56 + v53)
                                 + 16 * *(void *)(v44 + 8 * v50));
                  void *v54 = 0;
                  v54[1] = 0;
                  ++v50;
                }
                while (v50 != v45);
                goto LABEL_48;
              }
            }
            else if (v43 != v42)
            {
              uint64_t v65 = *(void *)(v46 + 48);
              uint64_t v66 = *(void *)(v65 + 16) - 1;
              uint64_t v37 = v82;
              do
              {
                if (*(ValueMetadata **)(v65 + 32) == &type metadata for Velocity)
                {
                  uint64_t v67 = 0;
                }
                else
                {
                  uint64_t v67 = 0;
                  uint64_t v69 = v66;
                  do
                  {
                    float32x4_t v70 = *(ValueMetadata **)(v65 + 72 + v67);
                    v67 += 40;
                    --v69;
                  }
                  while (v70 != &type metadata for Velocity);
                }
                int32x4_t v68 = (void *)(*(void *)(v46 + 128) + *(void *)(v65 + 56 + v67) + 16 * v43);
                void *v68 = 0;
                v68[1] = 0;
                ++v43;
              }
              while (v43 != v42);
              goto LABEL_48;
            }
            uint64_t v37 = v82;
LABEL_48:
            uint64_t v40 = v90;
            sub_1B6345178(v80, &v132, (uint64_t)v138);
            if (*(void *)(v80[13] + 16))
            {
              uint64_t v57 = swift_bridgeObjectRetain();
              sub_1B639147C(v57, v46);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v59 = v80[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v59 + 16));
              }
              else
              {
                uint64_t v60 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v59 + 24) >= 2uLL)
                {
                  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                  uint64_t v60 = (void *)swift_allocObject();
                  size_t v61 = j__malloc_size(v60);
                  v60[2] = 0;
                  v60[3] = 2 * ((uint64_t)(v61 - 32) / 72);
                }
                v80[13] = v60;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v80[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                unint64_t v62 = *(char **)(v46 + 232);
                int32x4_t v63 = *(char **)(v46 + 256);
                if (v62 == v63)
                {
                  int32x4_t v64 = *(char **)(v46 + 240);
                }
                else
                {
                  sub_1B666018C(v63, v62);
                  int32x4_t v63 = *(char **)(v46 + 232);
                  int32x4_t v64 = *(char **)(v46 + 240);
                  if (v64 == v63)
                  {
                    int32x4_t v64 = 0;
                    int32x4_t v63 = 0;
                    *(void *)(v46 + 232) = 0;
                    *(void *)(v46 + 240) = 0;
                  }
                }
                *(void *)(v46 + 248) = v64;
                *(void *)(v46 + 256) = v63;
              }
            }
            ecs_stack_allocator_pop_snapshot(v37);
            int v38 = v86;
            if (v86)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 376));
            }
            swift_release();
            uint64_t v39 = v92 + 1;
            if (v92 + 1 == v88)
            {
              sub_1B632F1C4(v95, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
              LOBYTE(v8) = v73;
              break;
            }
          }
        }
      }
    }
  }
  if (v8)
  {
    sub_1B62D866C(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_1B6E77050;
    *(void *)(v71 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v71 + 32) = 0xD000000000000010;
    *(void *)(v71 + 40) = 0x80000001B6F3D0E0;
    sub_1B6E338E8();
    sub_1B632F1C4(v95, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    swift_release();
    sub_1B62CA064((uint64_t)v93);
    return swift_bridgeObjectRelease();
  }
  sub_1B632F1C4(v95, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_73:
  swift_release();
  return sub_1B62CA064((uint64_t)v93);
}

void *sub_1B68E4B8C(void *result, uint64_t a2, uint64_t a3, _DWORD *a4, unint64_t a5, uint64_t a6, char a7, uint64_t a8, float a9, float a10, char a11, uint64_t a12, char a13)
{
  int v16 = a5;
  long long v18 = result;
  if (*a4 == -1 && !a4[1])
  {
    if (a7)
    {
      sub_1B62D866C(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_1B6E77050;
      *(void *)(v65 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v65 + 32) = 0xD000000000000039;
      *(void *)(v65 + 40) = 0x80000001B6F3D150;
      sub_1B6E338E8();
      double result = (void *)swift_bridgeObjectRelease();
    }
    if ((a13 & 1) == 0 || !a2) {
      return result;
    }
    uint64_t v66 = 0;
    uint64_t v67 = v18 + 4;
    uint64_t v68 = v18[2];
    while (1)
    {
      if (v68)
      {
        uint64_t v70 = 0;
        uint64_t v71 = v68;
        while (1)
        {
          while (1)
          {
            uint64_t v69 = v70 + (v71 - v70) / 2;
            uint64_t v72 = v67[3 * v69 + 2];
            if (v66 >= v72) {
              break;
            }
            uint64_t v71 = v70 + (v71 - v70) / 2;
            if (v70 >= v69) {
              goto LABEL_62;
            }
          }
          if (v66 < v67[3 * v69 + 1] + v72) {
            break;
          }
          uint64_t v70 = v69 + 1;
          if (v69 + 1 >= v71) {
            goto LABEL_62;
          }
        }
      }
      else
      {
LABEL_62:
        uint64_t v69 = 0;
      }
      *(_OWORD *)(v67[3 * v69] + 16 * (v66 - v67[3 * v69 + 2])) = xmmword_1B6E4F370;
      if (++v66 == a2) {
        return result;
      }
    }
  }
  unint64_t v19 = HIDWORD(a5);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v130 = qword_1EB997A18;
  int v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  char v134 = 2;
  uint64_t v135 = 0;
  swift_retain();
  sub_1B6A6ED00(1, (uint64_t)v118);
  swift_release();
  sub_1B62F6E08();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1B6E77050;
  *(void *)(v20 + 56) = &type metadata for EmitterReference;
  *(void *)(v20 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v20 + 32) = v16;
  *(_DWORD *)(v20 + 36) = v19;
  sub_1B62A1250(v20, (uint64_t)v119);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v118);
  v126[0] = v119[0];
  v126[1] = v119[1];
  uint64_t v127 = v120;
  sub_1B62C9DA8(a6, (uint64_t)v126, 0x200000000, v121);
  if (a7)
  {
    sub_1B62D866C(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1B6E77050;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v113 = 0xD000000000000026;
    unint64_t v114 = 0x80000001B6F3D120;
    sub_1B62D7810((uint64_t)v121, (uint64_t)v125, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v125[0]) {
      uint64_t v22 = v125[10];
    }
    else {
      uint64_t v22 = 0;
    }
    v124[0] = v22;
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    unint64_t v23 = v113;
    unint64_t v24 = v114;
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v24;
    sub_1B6E338E8();
    swift_bridgeObjectRelease();
  }
  if (!a2)
  {
    sub_1B632F1C4(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    return (void *)sub_1B62CA064((uint64_t)v119);
  }
  sub_1B62D7810((uint64_t)v121, (uint64_t)v124, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v124[0]) {
    return (void *)sub_1B62CA064((uint64_t)v119);
  }
  uint64_t v25 = v124[7];
  uint64_t v112 = v124[10];
  uint64_t v107 = v124[8];
  char v108 = (unsigned int *)v124[5];
  if (a11)
  {
    long long v54 = *(_OWORD *)(a12 + 32);
    v128[0] = *(_OWORD *)(a12 + 16);
    v128[1] = v54;
    uint64_t v129 = *(void *)(a12 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B62C9DA8(a6, (uint64_t)v128, 0x200000000, v122);
    sub_1B62D7810((uint64_t)v122, (uint64_t)v123, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!*(void *)&v123[0]) {
      goto LABEL_46;
    }
    v123[8] = v123[2];
    v123[9] = v123[3];
    v123[10] = v123[4];
    v123[11] = v123[5];
    v123[6] = v123[0];
    v123[7] = v123[1];
    uint64_t v55 = sub_1B6845C80();
    char v57 = v56;
    sub_1B632F1C4(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    if (v57) {
      goto LABEL_46;
    }
    sub_1B695E638(v55, (uint64_t)&v113);
    if ((unint64_t)v115 << 40 == 0x20000000000) {
      goto LABEL_46;
    }
    uint64_t v28 = v116;
    if (!v116)
    {
      uint64_t v106 = v117;
      if (v117 <= 1) {
        uint64_t v106 = 1;
      }
      uint64_t v28 = a3 / v106;
    }
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v28 = a8;
  }
  if (v28 < 2 || (uint64_t v29 = v28 * v112, v28 * v112 > a2))
  {
LABEL_46:
    if ((a13 & 1) == 0) {
      goto LABEL_109;
    }
    uint64_t v58 = 0;
    uint64_t v59 = v18 + 4;
    uint64_t v60 = v18[2];
    while (1)
    {
      if (v60)
      {
        uint64_t v62 = 0;
        uint64_t v63 = v60;
        while (1)
        {
          while (1)
          {
            uint64_t v61 = v62 + (v63 - v62) / 2;
            uint64_t v64 = v59[3 * v61 + 2];
            if (v58 >= v64) {
              break;
            }
            uint64_t v63 = v62 + (v63 - v62) / 2;
            if (v62 >= v61) {
              goto LABEL_48;
            }
          }
          if (v58 < v59[3 * v61 + 1] + v64) {
            break;
          }
          uint64_t v62 = v61 + 1;
          if (v61 + 1 >= v63) {
            goto LABEL_48;
          }
        }
      }
      else
      {
LABEL_48:
        uint64_t v61 = 0;
      }
      *(_OWORD *)(v59[3 * v61] + 16 * (v58 - v59[3 * v61 + 2])) = xmmword_1B6E4F370;
      if (++v58 == a2) {
        goto LABEL_109;
      }
    }
  }
  if (!v112) {
    goto LABEL_97;
  }
  uint64_t v30 = 0;
  uint64_t v31 = v18 + 4;
  uint64_t v32 = *(void *)(v107 + 136) + 32;
  uint64_t v33 = v18[2];
  do
  {
    uint64_t v35 = v25;
    int v36 = v108;
    if (v25)
    {
      while (1)
      {
        uint64_t v39 = v36[2];
        if (v30 >= v39)
        {
          uint64_t v40 = *v36;
          if (v30 < v39 - v40 + v36[1]) {
            break;
          }
        }
        v36 += 12;
        if (!--v35) {
          goto LABEL_21;
        }
      }
      uint64_t v41 = *((void *)v36 + 2);
      if (v41) {
        uint64_t v37 = *(void *)(v41 + 8 * (v30 - v39));
      }
      else {
        uint64_t v37 = v30 + v40 - v39;
      }
      int v38 = *(_DWORD *)(*((void *)v36 + 5) + 188);
    }
    else
    {
LABEL_21:
      uint64_t v37 = -1;
      int v38 = -1;
    }
    uint64_t v42 = *(void *)(v32 + 8 * v38);
    uint64_t v43 = *(void *)(v42 + 48);
    uint64_t v44 = v43 + 32;
    if (*(ValueMetadata **)(v43 + 32) == &type metadata for Position)
    {
      uint64_t v45 = 0;
      uint64_t v50 = v30 * v28;
      if (!v33) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v45 = 0;
      uint64_t v46 = *(void *)(v43 + 16);
      uint64_t v47 = v43 + 72;
      uint64_t v48 = v46 - 1;
      do
      {
        uint64_t v49 = *(ValueMetadata **)(v47 + v45);
        v45 += 40;
        --v48;
      }
      while (v49 != &type metadata for Position);
      uint64_t v50 = v30 * v28;
      if (!v33)
      {
LABEL_18:
        uint64_t v34 = 0;
        goto LABEL_19;
      }
    }
    uint64_t v51 = 0;
    uint64_t v52 = v33;
    while (1)
    {
      while (1)
      {
        uint64_t v34 = v51 + (v52 - v51) / 2;
        uint64_t v53 = v31[3 * v34 + 2];
        if (v50 >= v53) {
          break;
        }
        uint64_t v52 = v51 + (v52 - v51) / 2;
        if (v51 >= v34) {
          goto LABEL_18;
        }
      }
      if (v50 < v31[3 * v34 + 1] + v53) {
        break;
      }
      uint64_t v51 = v34 + 1;
      if (v34 + 1 >= v52) {
        goto LABEL_18;
      }
    }
LABEL_19:
    ++v30;
    *(_OWORD *)(v31[3 * v34] + 16 * (v50 - v31[3 * v34 + 2])) = *(_OWORD *)(*(void *)(v42 + 128)
                                                                          + *(void *)(v44 + v45 + 24)
                                                                          + 16 * v37);
  }
  while (v30 != v112);
  if (a9 > 0.00000011921)
  {
    uint64_t v73 = 0;
    float v74 = a9 / (float)(v28 - 1);
    do
    {
      uint64_t v75 = v73 * v28;
      ++v73;
      uint64_t v76 = v28 - 1 + v75;
      uint64_t v77 = v18[2];
      do
      {
        __int32 v78 = v26.i32[3];
        __int32 v79 = v27.i32[3];
        uint64_t v80 = v75 + 1;
        if (v77)
        {
          uint64_t v81 = 0;
          uint64_t v82 = v77;
          do
          {
            while (1)
            {
              uint64_t v83 = v81 + (v82 - v81) / 2;
              uint64_t v84 = v31[3 * v83 + 2];
              if (v75 >= v84) {
                break;
              }
              uint64_t v82 = v81 + (v82 - v81) / 2;
              if (v81 >= v83) {
                goto LABEL_82;
              }
            }
            if (v75 < v31[3 * v83 + 1] + v84) {
              goto LABEL_83;
            }
            uint64_t v81 = v83 + 1;
          }
          while (v83 + 1 < v82);
LABEL_82:
          uint64_t v83 = 0;
          uint64_t v84 = v18[6];
LABEL_83:
          uint64_t v85 = 0;
          uint64_t v86 = v31[3 * v83];
          uint64_t v87 = v77;
          do
          {
            while (1)
            {
              uint64_t v88 = v85 + (v87 - v85) / 2;
              uint64_t v89 = v31[3 * v88 + 2];
              if (v80 >= v89) {
                break;
              }
              uint64_t v87 = v85 + (v87 - v85) / 2;
              if (v85 >= v88) {
                goto LABEL_88;
              }
            }
            if (v80 < v31[3 * v88 + 1] + v89) {
              goto LABEL_89;
            }
            uint64_t v85 = v88 + 1;
          }
          while (v88 + 1 < v87);
LABEL_88:
          uint64_t v88 = 0;
LABEL_89:
          uint64_t v90 = v31[3 * v88];
        }
        else
        {
          uint64_t v88 = 0;
          uint64_t v90 = v18[4];
          uint64_t v84 = v18[6];
          uint64_t v86 = v90;
        }
        uint64_t v91 = v75 - v84;
        uint64_t v92 = v80 - v31[3 * v88 + 2];
        float32x4_t v93 = *(float32x4_t *)(v90 + 16 * v92);
        float32x4_t v26 = v93;
        v26.i32[3] = v78;
        float32x4_t v94 = *(float32x4_t *)(v86 + 16 * v91);
        float32x4_t v27 = v94;
        v27.i32[3] = v79;
        float32x4_t v95 = vsubq_f32(v26, v27);
        float32x4_t v96 = vmulq_f32(v95, v95);
        float v97 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v96, 2), vaddq_f32(v96, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v96.f32, 1))).f32[0];
        if (v97 > 0.000001)
        {
          float v98 = sqrtf(v97);
          if (v74 < v98)
          {
            float32x4_t v93 = vaddq_f32(v27, vmulq_n_f32(v95, v74 / v98));
            v93.i32[3] = 1.0;
            *(float32x4_t *)(v90 + 16 * v92) = v93;
          }
          if (a10 != 0.0 && v97 < (float)((float)(v74 * v74) + 0.01))
          {
            float32x4_t v99 = vaddq_f32(vmulq_n_f32(v94, a10), vmulq_n_f32(v93, 1.0 - a10));
            v99.i32[3] = 1.0;
            *(float32x4_t *)(v90 + 16 * v92) = v99;
          }
        }
        uint64_t v75 = v80;
      }
      while (v80 != v76);
    }
    while (v73 != v112);
  }
LABEL_97:
  if ((a13 & 1) != 0 && v29 < a2)
  {
    uint64_t v100 = v18 + 4;
    uint64_t v101 = v18[2];
    do
    {
      if (v101)
      {
        uint64_t v103 = 0;
        uint64_t v104 = v101;
        while (1)
        {
          while (1)
          {
            uint64_t v102 = v103 + (v104 - v103) / 2;
            uint64_t v105 = v100[3 * v102 + 2];
            if (v29 >= v105) {
              break;
            }
            uint64_t v104 = v103 + (v104 - v103) / 2;
            if (v103 >= v102) {
              goto LABEL_100;
            }
          }
          if (v29 < v100[3 * v102 + 1] + v105) {
            break;
          }
          uint64_t v103 = v102 + 1;
          if (v102 + 1 >= v104) {
            goto LABEL_100;
          }
        }
      }
      else
      {
LABEL_100:
        uint64_t v102 = 0;
      }
      *(_OWORD *)(v100[3 * v102] + 16 * (v29 - v100[3 * v102 + 2])) = xmmword_1B6E4F370;
      ++v29;
    }
    while (v29 != a2);
  }
LABEL_109:
  sub_1B632F1C4(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B62CA064((uint64_t)v119);
  return sub_1B632F1C4(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t type metadata accessor for ParticleRibbonTrailsSystem()
{
  return self;
}

uint64_t sub_1B68E56B8()
{
  uint64_t v0 = swift_allocObject();
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleRibbonRenderer;
  *(void *)(inited + 40) = &off_1F0F8D6C8;
  uint64_t v2 = sub_1B62F79C8(1, 1uLL);
  sub_1B6A82404(inited, v2, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  long long v3 = v5[1];
  *(_OWORD *)(v0 + 16) = v5[0];
  *(_OWORD *)(v0 + 32) = v3;
  *(void *)(v0 + 48) = v6;
  return v0;
}

const char *sub_1B68E57AC()
{
  return "ParticleRibbonTrails";
}

uint64_t sub_1B68E57C0()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t getEnumTagSinglePayload for ParticleRibbonTrails(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleRibbonTrails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)double result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleRibbonTrails()
{
  return &type metadata for ParticleRibbonTrails;
}

uint64_t sub_1B68E58B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B68E5CF8(0, &qword_1E9DD2308, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)&v22 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68E5C18();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v30 = 0;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  uint64_t v11 = v27;
  sub_1B62D866C(0, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
  char v30 = 1;
  sub_1B68E5C6C();
  sub_1B6E32D78();
  int v26 = v28;
  int v12 = v29;
  if (v29) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = v27;
  }
  LOBYTE(v27) = 2;
  sub_1B6E32DC8();
  int v15 = v14;
  int v24 = v12;
  uint64_t v25 = v13;
  LOBYTE(v27) = 3;
  char v16 = sub_1B6E32DA8();
  LOBYTE(v27) = 4;
  int v17 = sub_1B6E32DA8();
  LOBYTE(v27) = 5;
  int v23 = sub_1B6E32DA8();
  LOBYTE(v27) = 6;
  uint64_t v19 = sub_1B6E32D58();
  HIDWORD(v22) = v17;
  char v20 = v24 | v26;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if ((v19 & 0x100000000) != 0) {
    float v21 = 0.0;
  }
  else {
    float v21 = *(float *)&v19;
  }
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v25;
  *(unsigned char *)(a2 + 16) = v20 & 1;
  *(_DWORD *)(a2 + 20) = v15;
  *(unsigned char *)(a2 + 24) = v16 & 1;
  *(unsigned char *)(a2 + 25) = BYTE4(v22) & 1;
  *(unsigned char *)(a2 + 26) = v23 & 1;
  *(float *)(a2 + 28) = v21;
  return result;
}

unint64_t sub_1B68E5C18()
{
  unint64_t result = qword_1E9DD2310;
  if (!qword_1E9DD2310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2310);
  }
  return result;
}

unint64_t sub_1B68E5C6C()
{
  unint64_t result = qword_1EB9803F0;
  if (!qword_1EB9803F0)
  {
    sub_1B62D866C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9803F0);
  }
  return result;
}

void sub_1B68E5CF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B68E5C18();
    unint64_t v7 = a3(a1, &type metadata for ParticleRibbonTrails.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleRibbonTrails.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68E5E28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleRibbonTrails.CodingKeys()
{
  return &type metadata for ParticleRibbonTrails.CodingKeys;
}

unint64_t sub_1B68E5E64()
{
  unint64_t result = qword_1E9DD2320;
  if (!qword_1E9DD2320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2320);
  }
  return result;
}

unint64_t sub_1B68E5EBC()
{
  unint64_t result = qword_1E9DD2328;
  if (!qword_1E9DD2328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2328);
  }
  return result;
}

unint64_t sub_1B68E5F14()
{
  unint64_t result = qword_1E9DD2330;
  if (!qword_1E9DD2330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2330);
  }
  return result;
}

uint64_t destroy for ChunksStorage()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ChunksStorage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 28) = *(void *)(a2 + 28);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ChunksStorage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  return a1;
}

uint64_t assignWithTake for ChunksStorage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 28) = *(void *)(a2 + 28);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  return a1;
}

ValueMetadata *type metadata accessor for ChunksStorage()
{
  return &type metadata for ChunksStorage;
}

ValueMetadata *type metadata accessor for ChunksStorage.FilteredChunk()
{
  return &type metadata for ChunksStorage.FilteredChunk;
}

uint64_t sub_1B68E6104(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v3 = *v2;
    uint64_t v4 = 8 * (result >> 6);
    uint64_t v5 = *(void *)(*v2 + v4);
    uint64_t v6 = a2 >> 6;
    uint64_t v7 = 1 << a2;
    if ((*(void *)(*v2 + 8 * (a2 >> 6)) & (1 << a2)) != 0) {
      uint64_t v8 = v5 | (1 << result);
    }
    else {
      uint64_t v8 = v5 & ~(1 << result);
    }
    *(void *)(v3 + v4) = v8;
    if ((v5 & (1 << result)) != 0) {
      uint64_t v9 = *(void *)(v3 + 8 * v6) | v7;
    }
    else {
      uint64_t v9 = *(void *)(v3 + 8 * v6) & ~v7;
    }
    *(void *)(v3 + 8 * v6) = v9;
  }
  return result;
}

uint64_t sub_1B68E6168(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *v2;
    uint64_t v6 = *v2 + 32;
    int v7 = *(_DWORD *)(v6 + 4 * result);
    int v8 = *(_DWORD *)(v6 + 4 * a2);
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_1B6315450(v5);
      uint64_t v5 = result;
    }
    *(_DWORD *)(v5 + 32 + 4 * v4) = v8;
    *(_DWORD *)(v5 + 32 + 4 * a2) = v7;
    uint64_t *v2 = v5;
  }
  return result;
}

void sub_1B68E61E4(uint64_t a1, char a2, int a3)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 128));
  int v7 = *(void **)(v3 + 96);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 96) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    *(void *)(v3 + 96) = sub_1B6C16694(v7);
  }
  sub_1B68E6D60(a1, a2 & 1);
  if (*(unsigned char *)(*(void *)(*(void *)(v3 + 80) + 8 * a3 + 32) + 200) == 1) {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  }
  uint64_t v9 = *(os_unfair_lock_s **)(v3 + 128);

  os_unfair_lock_unlock(v9);
}

BOOL sub_1B68E62A8(int a1)
{
  uint64_t v2 = *(void *)(*(void *)(v1 + 96) + 40 * a1 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = (int *)(v2 + 32);
  uint64_t v5 = v3 - 1;
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 32 + 8 * v6);
    uint64_t v9 = *(void *)(v7 + 232);
    uint64_t v8 = *(void *)(v7 + 240);
    BOOL result = v8 != v9;
  }
  while (v8 == v9 && v5-- != 0);
  return result;
}

void sub_1B68E62FC(int a1, uint64_t a2, int a3, char a4)
{
  uint64_t v5 = v4;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 128));
  uint64_t v9 = *(void **)(v4 + 96);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 96) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    *(void *)(v4 + 96) = sub_1B6C16694(v9);
  }
  sub_1B68E6CB8(a1, a4 & 1);
  int v11 = a3;
  uint64_t v12 = *(void *)(v4 + 96) + 32;
  uint64_t v13 = (char **)(v12 + 40 * a3);
  if (a4)
  {
    int v14 = *v13;
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v13 = v14;
    if ((v15 & 1) == 0)
    {
      int v14 = sub_1B62B7EA0(0, *((void *)v14 + 2) + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    unint64_t v17 = *((void *)v14 + 2);
    unint64_t v16 = *((void *)v14 + 3);
    if (v17 >= v16 >> 1)
    {
      int v14 = sub_1B62B7EA0(v16 > 1, v17 + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    *((void *)v14 + 2) = v17 + 1;
    *(_DWORD *)&v14[4 * v17 + 32] = a1;
    *(_DWORD *)(v12 + 40 * a3 + 32) = a1;
  }
  else
  {
    uint64_t v18 = v12 + 40 * a3;
    uint64_t v19 = *(void *)(v18 + 8);
    sub_1B68E84A8(v19, v19, a1);
    *(void *)(v18 + 8) = v19 + 1;
    *(_DWORD *)(v18 + 36) = a1;
  }
  *(unsigned char *)(v12 + 40 * v11 + 24) = 1;
  char v20 = *(os_unfair_lock_s **)(v5 + 128);

  os_unfair_lock_unlock(v20);
}

uint64_t sub_1B68E6474(int a1)
{
  uint64_t v2 = *(void *)(*(void *)(v1 + 96) + 40 * a1 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v1 + 136) + 32;
  if (v3 == 1)
  {
    uint64_t v5 = 0;
    uint64_t result = 0;
LABEL_8:
    uint64_t v13 = v3 - v5;
    int v14 = (int *)(v2 + 4 * v5 + 32);
    do
    {
      uint64_t v15 = *v14++;
      result += *(void *)(*(void *)(v4 + 8 * v15) + 240) - *(void *)(*(void *)(v4 + 8 * v15) + 232);
      --v13;
    }
    while (v13);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v5 = v3 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v9 = (int *)(v2 + 36);
  uint64_t v10 = v3 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    uint64_t v11 = *(void *)(v4 + 8 * *(v9 - 1));
    uint64_t v12 = *(void *)(v4 + 8 * *v9);
    v7 += *(void *)(v11 + 240) - *(void *)(v11 + 232);
    v8 += *(void *)(v12 + 240) - *(void *)(v12 + 232);
    v9 += 2;
    v10 -= 2;
  }
  while (v10);
  uint64_t result = v8 + v7;
  if (v3 != v5) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1B68E652C(int a1)
{
  uint64_t v2 = v1;
  int v3 = a1;
  if (*(unsigned char *)(v1 + 121))
  {
    uint64_t v4 = *(void *)(v1 + 88);
    uint64_t v5 = *(void *)(v1 + 240);
    if (v4 - v5 <= 0)
    {
      uint64_t v6 = *(void *)(v1 + 256);
      if (v4 - v5 + v6 < 2)
      {
        uint64_t v10 = *(void *)(v1 + 128);
        if (v10) {
          size_t v50 = *(void *)(v1 + 136) - v10;
        }
        else {
          size_t v50 = 0;
        }
        char v11 = 0;
        uint64_t v47 = v1;
        do
        {
          uint64_t v12 = *(void *)(*(void *)(*(void *)(v2 + 40) + 16) + 32);
          int64_t v13 = *(void *)(v12 + 16);
          if (v13)
          {
            uint64_t v59 = MEMORY[0x1E4FBC860];
            swift_retain();
            sub_1B637ED84(0, v13, 0);
            sub_1B637ED20(0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
            sub_1B637ED20(0, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
            for (uint64_t i = 0; i != v13; ++i)
            {
              long long v53 = *(_OWORD *)(v12 + 16 * i + 32);
              swift_dynamicCast();
              long long v51 = v60;
              uint64_t v15 = v59;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B637ED84(0, *(void *)(v59 + 16) + 1, 1);
                uint64_t v15 = v59;
              }
              unint64_t v17 = *(void *)(v15 + 16);
              unint64_t v16 = *(void *)(v15 + 24);
              if (v17 >= v16 >> 1)
              {
                sub_1B637ED84(v16 > 1, v17 + 1, 1);
                uint64_t v15 = v59;
              }
              *(void *)(v15 + 16) = v17 + 1;
              *(_OWORD *)(v15 + 16 * v17 + 32) = v51;
            }
            swift_release();
            uint64_t v2 = v47;
          }
          else
          {
            uint64_t v15 = MEMORY[0x1E4FBC860];
          }
          v50 *= 2;
          sub_1B62CEB80(v15, v50, 0, (*(unsigned char *)(v2 + 184) & 1) == 0, (uint64_t)&v60);
          long long v18 = v60;
          uint64_t v19 = v61;
          long long v20 = v62;
          long long v21 = *(_OWORD *)v63;
          uint64_t v52 = *(void *)&v63[16];
          char v48 = v64;
          if (v11)
          {
            swift_release();
            swift_release();
            swift_release();
          }
          char v11 = 1;
        }
        while ((uint64_t)(v21 - *(void *)(v2 + 240)) < 1);
        uint64_t v42 = *(void *)(v2 + 16);
        task_t v22 = *(_DWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity);
        swift_retain();
        swift_retain();
        swift_retain();
        vfx_allocate_memory_entry(v50, 0x40uLL, v22, (uint64_t)&v60);
        uint64_t v23 = v60;
        char v43 = BYTE4(v61);
        int v44 = v61;
        uint64_t v45 = *((void *)&v60 + 1);
        uint64_t v24 = v60 + *((void *)&v60 + 1);
        if (!(void)v60) {
          uint64_t v24 = 0;
        }
        uint64_t v41 = v24;
        uint64_t v25 = *(void *)(v2 + 56);
        uint64_t v26 = *(void *)(v2 + 64);
        uint64_t v27 = *(void *)(v2 + 104);
        char v28 = *(unsigned char *)(v2 + 112);
        *(void *)&long long v60 = *(void *)(v2 + 48);
        *((void *)&v60 + 1) = v25;
        uint64_t v61 = v26;
        long long v62 = *(_OWORD *)(v2 + 72);
        *(_OWORD *)uint64_t v63 = *(_OWORD *)(v2 + 88);
        *(void *)&v63[16] = v27;
        char v64 = v28;
        uint64_t v49 = *(void *)(v2 + 128);
        uint64_t v40 = *(void *)(v2 + 256);
        uint64_t v39 = *(void *)(v2 + 240);
        long long v53 = v18;
        uint64_t v54 = v19;
        long long v55 = v20;
        long long v56 = v21;
        uint64_t v57 = v52;
        char v58 = v48;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B6D66060(v49, v40, v39, 0, v23, (uint64_t)&v53);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (*(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
          vfx_counters.add(_:_:)(*(_DWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 64), (*(void *)(v2 + 240) - *(void *)(v2 + 256)) * *(void *)(v2 + 72));
        }
        vfx_deallocate_memory_entry(v2 + 144);
        *(void *)(v2 + 144) = v23;
        *(void *)(v2 + 152) = v45;
        *(_DWORD *)(v2 + 160) = v44;
        *(unsigned char *)(v2 + 164) = v43;
        *(void *)(v2 + 128) = v23;
        *(void *)(v2 + 136) = v41;
        *(_OWORD *)(v2 + 48) = v18;
        *(void *)(v2 + 64) = v19;
        *(_OWORD *)(v2 + 72) = v20;
        *(_OWORD *)(v2 + 88) = v21;
        *(void *)(v2 + 104) = v52;
        *(unsigned char *)(v2 + 112) = v48;
        swift_release();
        swift_release();
        swift_release();
        int v3 = a1;
      }
      else
      {
        uint64_t v7 = *(void *)(v1 + 64);
        char v8 = *(unsigned char *)(v1 + 112);
        long long v60 = *(_OWORD *)(v1 + 48);
        uint64_t v61 = v7;
        long long v62 = *(_OWORD *)(v1 + 72);
        *(void *)uint64_t v63 = v4;
        *(_OWORD *)&v63[8] = *(_OWORD *)(v1 + 96);
        char v64 = v8;
        sub_1B6D65F50(*(void *)(v1 + 128), v6, v5, 0);
        uint64_t v9 = *(void *)(v1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
        if (*(void *)v9) {
          vfx_counters.add(_:_:)(*(_DWORD *)(v9 + 64), (*(void *)(v1 + 240) - *(void *)(v1 + 256)) * *(void *)(v1 + 72));
        }
      }
      uint64_t v30 = *(void *)(v2 + 248);
      uint64_t v29 = *(void *)(v2 + 256);
      uint64_t v5 = *(void *)(v2 + 240) - v29;
      *(void *)(v2 + 232) -= v29;
      *(void *)(v2 + 248) = v30 - v29;
      *(void *)(v2 + 256) = 0;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 240);
  }
  uint64_t v31 = *(void *)(v2 + 88);
  if (v31 - v5 >= 1) {
    uint64_t v32 = 1;
  }
  else {
    uint64_t v32 = v31 - v5;
  }
  if (*(unsigned char *)(v2 + 184))
  {
    uint64_t v33 = v32 + v5;
  }
  else
  {
    uint64_t v33 = v5;
    if (v32)
    {
      uint64_t v34 = *(void *)(v2 + 168);
      uint64_t v33 = v5;
      do
        *(_DWORD *)(v34 + 4 * v33++) = v3;
      while (v31 - v5 < 1);
    }
  }
  *(void *)(v2 + 240) = v33;
  uint64_t v35 = *(void *)(v2 + 64);
  char v36 = *(unsigned char *)(v2 + 112);
  long long v60 = *(_OWORD *)(v2 + 48);
  uint64_t v61 = v35;
  long long v62 = *(_OWORD *)(v2 + 72);
  *(void *)uint64_t v63 = v31;
  *(_OWORD *)&v63[8] = *(_OWORD *)(v2 + 96);
  char v64 = v36;
  sub_1B62FCEB0(*(void *)(v2 + 128), v5, v33);
  uint64_t v37 = *(void *)(v2 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  if (*(void *)v37) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v37 + 72), *(void *)(v2 + 72) * (v33 - v5));
  }
  ++*(_DWORD *)(v2 + 116);
  return v5;
}

uint64_t sub_1B68E6AE4(int a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = 0;
  if (a4 < 0) {
    return v5;
  }
  uint64_t v6 = *(void *)(*(void *)(v4 + 96) + 40 * a3 + 48);
  if (*(void *)(v6 + 16) <= a4) {
    return v5;
  }
  uint64_t v7 = *(void *)(v6 + 8 * a4 + 32);
  uint64_t v5 = *(void *)(v7 + 16);
  if (!v5) {
    return v5;
  }
  for (uint64_t i = (void *)(v7 + 40);
        *((_DWORD *)i - 2) != a1 || *i && (*(void *)(*i + 8 * (a2 >> 6)) & (1 << a2)) == 0;
        i += 3)
  {
    if (!--v5) {
      return v5;
    }
  }
  return 1;
}

uint64_t sub_1B68E6B68(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  char v11 = (uint64_t *)(v4 + 16);
  uint64_t v10 = *(void *)(v4 + 16);
  if (*(void *)(v10 + 16) <= (int64_t)a4)
  {
    sub_1B6E32A08();
    sub_1B6E32A28();
    do
    {
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
      uint64_t v10 = *v11;
    }
    while (*(void *)(*v11 + 16) <= a4);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *char v11 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1B6D67280();
  }
  uint64_t v13 = v10 + 8 * a4;
  uint64_t v16 = *(void *)(v13 + 32);
  int v14 = (uint64_t *)(v13 + 32);
  uint64_t v15 = v16;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  *int v14 = v16;
  if ((v17 & 1) == 0)
  {
    sub_1B6C3D6EC(0, *(void *)(v15 + 16) + 1, 1);
    uint64_t v15 = *v14;
  }
  unint64_t v19 = *(void *)(v15 + 16);
  unint64_t v18 = *(void *)(v15 + 24);
  if (v19 >= v18 >> 1)
  {
    sub_1B6C3D6EC(v18 > 1, v19 + 1, 1);
    uint64_t v15 = *v14;
  }
  *(void *)(v15 + 16) = v19 + 1;
  uint64_t v20 = v15 + 24 * v19;
  *(_DWORD *)(v20 + 32) = a1;
  *(void *)(v20 + 40) = a2;
  *(void *)(v20 + 48) = a3;
  uint64_t result = sub_1B6E32A28();
  *(unsigned char *)(v5 + 24) = 1;
  return result;
}

uint64_t sub_1B68E6CB8(int a1, char a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  if (a2)
  {
    uint64_t v6 = sub_1B6A000A4(a1, v4 + 32, v2[1], (2 * *(void *)(v4 + 16)) | 1);
    uint64_t result = sub_1B69F00BC(v6);
    if (*((_DWORD *)v2 + 8) == a1) {
      *((_DWORD *)v2 + 8) = -1;
    }
  }
  else
  {
    uint64_t v8 = sub_1B6A000A4(a1, v4 + 32, 0, (2 * v5) | 1);
    uint64_t result = sub_1B69F00BC(v8);
    v2[1] = v5 - 1;
    if (*((_DWORD *)v2 + 9) == a1) {
      *((_DWORD *)v2 + 9) = -1;
    }
  }
  *((unsigned char *)v2 + 24) = 1;
  return result;
}

uint64_t sub_1B68E6D60(uint64_t result, char a2)
{
  int v3 = result;
  uint64_t v4 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  if (a2)
  {
    uint64_t v6 = (_DWORD *)(v4 + 32);
    if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0 && *v6 != result)
    {
      uint64_t v7 = 0;
      while ((v5 & 0x7FFFFFFFFFFFFFFFLL) - 1 != v7)
      {
        int v12 = *(_DWORD *)(v4 + 36 + 4 * v7++);
        if (v12 == result) {
          goto LABEL_5;
        }
      }
    }
    uint64_t v7 = 0;
LABEL_5:
    uint64_t v8 = v5 - 1;
    *(void *)(v2 + 8) = v8;
    if (v7 != v8)
    {
      int v9 = v6[v7];
      int v10 = v6[v8];
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B6315450(v4);
        uint64_t v4 = result;
      }
      *(_DWORD *)(v4 + 32 + 4 * v7) = v10;
      *(_DWORD *)(v4 + 32 + 4 * v8) = v9;
      *(void *)uint64_t v2 = v4;
    }
    if (*(_DWORD *)(v2 + 36) == v3)
    {
      *(_DWORD *)(v2 + 32) = v3;
      *(_DWORD *)(v2 + 36) = -1;
    }
  }
  else
  {
    uint64_t v11 = sub_1B6A000A4(result, v4 + 32, *(void *)(v2 + 8), (2 * *(void *)(v4 + 16)) | 1);
    uint64_t result = sub_1B68E6168(v11, v5);
    *(void *)(v2 + 8) = v5 + 1;
    if (*(_DWORD *)(v2 + 32) == v3)
    {
      *(_DWORD *)(v2 + 32) = -1;
      *(_DWORD *)(v2 + 36) = v3;
    }
  }
  return result;
}

void sub_1B68E6E80(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a4 + 80) + 8 * a1 + 32) + 200) == 1) {
    *(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a4 + 128));
  uint64_t v11 = *(void *)(a4 + 96);
  uint64_t v12 = *(void *)(v11 + 40 * a1 + 32);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    int v14 = (int *)(v12 + 32);
    while (1)
    {
      uint64_t v15 = *v14++;
      uint64_t v16 = *(void *)(*(void *)(a4 + 136) + 32 + 8 * v15);
      if (*(void *)(v16 + 240) != *(void *)(v16 + 232)) {
        break;
      }
      if (!--v13) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    sub_1B6358028(a1);
    uint64_t v11 = *(void *)(a4 + 96);
  }
  uint64_t v17 = v11 + 40 * a1;
  uint64_t v18 = 36;
  if (a3) {
    uint64_t v18 = 32;
  }
  int v19 = *(_DWORD *)(v17 + v18 + 32);
  uint64_t v20 = HIDWORD(a2) & 1;
  if (v19 == -1)
  {
    uint64_t v21 = a2;
  }
  else
  {
    uint64_t v21 = a2;
    sub_1B68E7420(*(void *)(*(void *)(a4 + 136) + 8 * v19 + 32), a2 | (unint64_t)(v20 << 32), a5, &v36);
    if (v36)
    {
      task_t v22 = *(os_unfair_lock_s **)(a4 + 128);
      os_unfair_lock_unlock(v22);
      return;
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  uint64_t v23 = (void *)(a4 + 136);
  swift_retain();
  int v24 = sub_1B628A6F0((uint64_t *)(a4 + 136), a4, v21 | (v20 << 32), a1, a3 & 1);
  swift_release();
  uint64_t v25 = *(void **)(a4 + 96);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a4 + 96) = v25;
  uint64_t v27 = a5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v25 = sub_1B6C16694(v25);
    *(void *)(a4 + 96) = v25;
  }
  char v28 = v25 + 4;
  uint64_t v29 = (char **)&v25[5 * a1 + 4];
  if (a3)
  {
    uint64_t v30 = *v29;
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v29 = v30;
    if ((v31 & 1) == 0)
    {
      uint64_t v30 = sub_1B62B7EA0(0, *((void *)v30 + 2) + 1, 1, v30);
      *uint64_t v29 = v30;
    }
    unint64_t v33 = *((void *)v30 + 2);
    unint64_t v32 = *((void *)v30 + 3);
    if (v33 >= v32 >> 1)
    {
      uint64_t v30 = sub_1B62B7EA0(v32 > 1, v33 + 1, 1, v30);
      *uint64_t v29 = v30;
    }
    *((void *)v30 + 2) = v33 + 1;
    *(_DWORD *)&v30[4 * v33 + 32] = v24;
    LODWORD(v28[5 * a1 + 4]) = v24;
  }
  else
  {
    uint64_t v34 = &v28[5 * a1];
    uint64_t v35 = v34[1];
    sub_1B68E84A8(v35, v35, v24);
    v34[1] = v35 + 1;
    *((_DWORD *)v34 + 9) = v24;
  }
  LOBYTE(v28[5 * a1 + 3]) = 1;
  sub_1B68E7700(*(void *)(*v23 + 8 * v24 + 32), a3 & 1, v27);
}

void sub_1B68E7150(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X4>, char *a5@<X8>)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    char v9 = 0;
    if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != a2) {
      goto LABEL_13;
    }
  }
  if (!os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
LABEL_10:
    char v9 = 0;
    goto LABEL_13;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
  {
    sub_1B63BACC8(a1, a3, a4);
    char v9 = 1;
  }
  else
  {
    char v9 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
LABEL_13:
  *a5 = v9;
}

uint64_t sub_1B68E7230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, int a4@<W4>, _DWORD *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, __int16 a9, __int16 a10, char a11)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0)
    {
LABEL_10:
      uint64_t result = swift_release();
      char v18 = 0;
      goto LABEL_15;
    }
  }
  else if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != a2)
  {
    goto LABEL_10;
  }
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
    {
      sub_1B6B22884(a1, a3, a4, a5, a6, a7, a9, a11 & 1);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  else
  {
    char v18 = 0;
  }
  uint64_t result = swift_release();
LABEL_15:
  *a8 = v18;
  return result;
}

void sub_1B68E7340(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X4>, char *a5@<X8>)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    char v9 = 0;
    if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != a2) {
      goto LABEL_13;
    }
  }
  if (!os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
LABEL_10:
    char v9 = 0;
    goto LABEL_13;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
  {
    sub_1B68E77D8(a1, a3, a4);
    char v9 = 1;
  }
  else
  {
    char v9 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
LABEL_13:
  *a5 = v9;
}

void sub_1B68E7420(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, char *a4@<X8>)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    char v7 = 0;
    if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != a2) {
      goto LABEL_13;
    }
  }
  if (!os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
LABEL_10:
    char v7 = 0;
    goto LABEL_13;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
  {
    sub_1B68E786C(a1, a3);
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
LABEL_13:
  *a4 = v7;
}

uint64_t sub_1B68E74E8(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, _DWORD *a5, uint64_t a6, uint64_t a7, __int16 a8, char a9)
{
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
    {
      sub_1B6B22884(a1, a3, a4, a5, a6, a7, a8, a9 & 1);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return swift_release();
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  swift_release();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B68E7610(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
    {
      sub_1B68E77D8(a1, a3, a4);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B68E7700(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
    {
      sub_1B68E786C(a1, a3);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B68E77D8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = sub_1B62FC834(*a2, a2[1], a2[2]);
  uint64_t v8 = a2[1];
  uint64_t v9 = v6 - v7;
  uint64_t v10 = v8 - *a2;
  if (v6 - v7 < 1)
  {
    if (v10 > 0 || v9 >= v10) {
      goto LABEL_9;
    }
  }
  else if (v10 < 0 || v10 >= (unint64_t)v9)
  {
LABEL_9:
    uint64_t v8 = v9 + *a2;
  }
  *a2 = v8;
  return a3(a1, v7, v6);
}

uint64_t sub_1B68E786C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = sub_1B62FC834(*a2, a2[1], a2[2]);
  uint64_t v4 = a2[1];
  uint64_t v6 = v5 - result;
  uint64_t v7 = v4 - *a2;
  if (v5 - result < 1)
  {
    if (v7 > 0 || v6 >= v7) {
      goto LABEL_9;
    }
  }
  else if (v7 < 0 || v7 >= (unint64_t)v6)
  {
LABEL_9:
    uint64_t v4 = v6 + *a2;
  }
  *a2 = v4;
  return result;
}

void sub_1B68E78D4(uint64_t *a1)
{
  uint64_t v2 = v1;
  lock = *(os_unfair_lock_s **)(v1 + 128);
  os_unfair_lock_lock(lock);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 40));
  uint64_t v5 = *a1;
  if (!sub_1B62C9FE4(*(void *)(*a1 + 32), *(void *)(v4 + 48))) {
    sub_1B62B6A68(v1, v5);
  }
  uint64_t v7 = v6;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v102 = *(void *)(v7 + 16);
  if (!v102) {
    goto LABEL_93;
  }
  uint64_t v8 = 0;
  uint64_t v9 = *(void **)(v1 + 96);
  uint64_t v101 = v7 + 32;
  uint64_t v107 = (void *)(v1 + 96);
  char v108 = (uint64_t *)(v1 + 144);
  uint64_t v109 = v1;
  uint64_t v99 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  do
  {
    signed int v10 = *(_DWORD *)(v101 + 4 * v8);
    uint64_t v11 = v9[5 * v10 + 4];
    signed int v104 = v10;
    uint64_t v111 = *(void *)(v11 + 16);
    if (!v111)
    {
      if (LOBYTE(v9[5 * v10 + 7]) == 1) {
        goto LABEL_71;
      }
LABEL_74:
      sub_1B68EAB9C(0, &qword_1EB9801D0, (uint64_t)&type metadata for ChunksStorage, MEMORY[0x1E4FBB320]);
      sub_1B63141D0();
      uint64_t v76 = sub_1B6314158();
      int v77 = *(_DWORD *)(v75 + 28);
      BOOL v78 = __OFSUB__(v77, 1);
      int v79 = v77 - 1;
      if (v79 < 0 != v78 || (*(_DWORD *)(v75 + 28) = v79) != 0)
      {
        ((void (*)(uint64_t *, void))v76)(&v115, 0);
        goto LABEL_77;
      }
      ((void (*)(uint64_t *, void))v76)(&v115, 0);
      uint64_t v81 = *(void *)(*v107 + 40 * v104 + 32);
      unint64_t v82 = *(void *)(v81 + 16);
      if (!v82)
      {
LABEL_92:
        sub_1B6381C7C(v2, v104);
        goto LABEL_77;
      }
      uint64_t v83 = *(void *)(v2 + 136) + 32;
      if (v82 == 1)
      {
        uint64_t v84 = 0;
        uint64_t v85 = 0;
      }
      else
      {
        uint64_t v86 = 0;
        uint64_t v87 = 0;
        uint64_t v84 = v82 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v88 = (int *)(v81 + 36);
        uint64_t v89 = v82 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          uint64_t v90 = *(void *)(v83 + 8 * *(v88 - 1));
          uint64_t v91 = *(void *)(v83 + 8 * *v88);
          v86 += *(void *)(v90 + 240) - *(void *)(v90 + 232);
          v87 += *(void *)(v91 + 240) - *(void *)(v91 + 232);
          v88 += 2;
          v89 -= 2;
        }
        while (v89);
        uint64_t v85 = v87 + v86;
        if (v82 == v84) {
          goto LABEL_89;
        }
      }
      unint64_t v92 = v82 - v84;
      float32x4_t v93 = (int *)(v81 + 4 * v84 + 32);
      do
      {
        uint64_t v94 = *v93++;
        v85 += *(void *)(*(void *)(v83 + 8 * v94) + 240) - *(void *)(*(void *)(v83 + 8 * v94) + 232);
        --v92;
      }
      while (v92);
LABEL_89:
      if (v85 > 0) {
        goto LABEL_77;
      }
      if (v82 >= 2)
      {
        uint64_t v95 = *(void *)(v2 + v99);
        uint64_t v115 = 0;
        unint64_t v116 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E32B18();
        uint64_t v96 = v115;
        unint64_t v97 = v116;
        uint64_t v98 = sub_1B6E32148();
        uint64_t v115 = 0;
        (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(void *)v95 + 88))(v98, &v115, v96, v97);
        swift_release();
        swift_bridgeObjectRelease();
      }
      goto LABEL_92;
    }
    uint64_t v103 = v8;
    uint64_t v110 = v11 + 32;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    char v13 = 1;
    do
    {
      while (1)
      {
        char v112 = v13;
        uint64_t v14 = *(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v110 + 4 * v12) + 32);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 376));
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
        uint64_t v15 = *(void *)(v14 + 256);
        uint64_t v16 = *(void *)(v14 + 232);
        uint64_t v17 = v16 - v15;
        if (v16 == v15)
        {
          uint64_t v18 = *(void *)(v14 + 240);
        }
        else
        {
          uint64_t v113 = v12;
          uint64_t v19 = *(void *)(v14 + 56);
          uint64_t v20 = *(void *)(v19 + 16);
          if (v20)
          {
            swift_retain();
            swift_retain_n();
            swift_retain();
            uint64_t v21 = v19 + 56;
            do
            {
              sub_1B633B0E8();
              v21 += 40;
              --v20;
            }
            while (v20);
            swift_release();
            swift_release();
            swift_release_n();
          }
          if ((*(unsigned char *)(v14 + 184) & 1) == 0)
          {
            uint64_t v105 = *(void *)(v14 + 168);
            uint64_t v22 = *(void *)(v14 + 16);
            uint64_t v23 = *(os_unfair_lock_s **)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_lock(v23);
            swift_release();
            uint64_t v24 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
            uint64_t v25 = OBJC_IVAR____TtC3VFX13EntityManager_entityCount;
            uint64_t v26 = *(void *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            uint64_t v106 = v15 + *(void *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
            int v27 = *(_DWORD *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
            swift_retain();
            char v28 = (int *)(v105 + 4 * v15);
            do
            {
              int v29 = *v28++;
              uint64_t v30 = (_DWORD *)(v26 + 12 * v29);
              *uint64_t v30 = v27;
              v30[1] = -1;
              ++v30[2];
              *(_DWORD *)(v22 + v24) = v29;
              int v27 = v29;
              --v17;
            }
            while (v17);
            *(void *)(v22 + v25) = v106 - v16;
            swift_release();
            char v31 = *(os_unfair_lock_s **)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_unlock(v31);
            swift_release();
          }
          uint64_t v32 = *(void *)(v14 + 192);
          if (v32)
          {
            uint64_t v33 = *(void *)(v14 + 208);
            sub_1B62C9D00(v15, v16, v32);
            sub_1B62C9D00(v15, v16, v33);
          }
          uint64_t v15 = *(void *)(v14 + 232);
          uint64_t v18 = *(void *)(v14 + 240);
          uint64_t v2 = v109;
          uint64_t v12 = v113;
          if (v18 == v15)
          {
            uint64_t v18 = 0;
            uint64_t v15 = 0;
            *(void *)(v14 + 232) = 0;
            *(void *)(v14 + 240) = 0;
          }
        }
        ++v12;
        *(void *)(v14 + 248) = v18;
        *(void *)(v14 + 256) = v15;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
        if (*(void *)(v14 + 240) == *(void *)(v14 + 232)) {
          break;
        }
        char v13 = 0;
        if (v12 == v111)
        {
          swift_bridgeObjectRelease();
          uint64_t v8 = v103;
          goto LABEL_77;
        }
      }
      uint64_t v114 = v12;
      int v34 = *(_DWORD *)(v14 + 24);
      int v35 = *(_DWORD *)(v14 + 188);
      int v36 = *(unsigned __int8 *)(v14 + 120);
      uint64_t v37 = (void *)*v107;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v107 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v37 = sub_1B6C16694(v37);
        *uint64_t v107 = v37;
      }
      uint64_t v39 = v37 + 4;
      uint64_t v40 = (char **)&v39[5 * v34];
      if (v36)
      {
        uint64_t v41 = *v40;
        uint64_t v42 = v39[5 * v34 + 1];
        uint64_t v43 = *((void *)*v40 + 2);
        if (v42 == v43)
        {
LABEL_27:
          uint64_t v44 = 0;
          goto LABEL_42;
        }
        if (*(_DWORD *)&v41[4 * v42 + 32] == v35)
        {
          uint64_t v44 = v39[5 * v34 + 1];
        }
        else
        {
          uint64_t v44 = v42 + 1;
          if (v42 + 1 == v43) {
            goto LABEL_27;
          }
          if (*(_DWORD *)&v41[4 * v44 + 32] != v35)
          {
            uint64_t v68 = v43 - 2;
            while (v68 != v42)
            {
              int v69 = *(_DWORD *)&v41[4 * v42++ + 40];
              if (v69 == v35)
              {
                uint64_t v44 = v42 + 1;
                goto LABEL_42;
              }
            }
            goto LABEL_27;
          }
        }
LABEL_42:
        char v58 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v40 = v41;
        if ((v58 & 1) == 0)
        {
          uint64_t v41 = sub_1B6315450((uint64_t)v41);
          *uint64_t v40 = v41;
        }
        uint64_t v59 = *((void *)v41 + 2) - 1;
        if (v59 - v44 < 0) {
          goto LABEL_94;
        }
        memmove(&v41[4 * v44 + 32], &v41[4 * v44 + 36], 4 * (v59 - v44));
        *((void *)v41 + 2) = v59;
        *uint64_t v40 = v41;
        long long v60 = &v39[5 * v34];
        int v61 = *((_DWORD *)v60 + 8);
        long long v56 = v60 + 4;
        if (v61 == v35) {
          goto LABEL_46;
        }
        goto LABEL_47;
      }
      uint64_t v45 = &v39[5 * v34];
      uint64_t v48 = v45[1];
      uint64_t v46 = v45 + 1;
      uint64_t v47 = v48;
      uint64_t v49 = *v40;
      uint64_t v50 = v48 & 0x7FFFFFFFFFFFFFFFLL;
      if ((v48 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
        goto LABEL_34;
      }
      if (v50 == 1 || *((_DWORD *)v49 + 8) == v35) {
        goto LABEL_34;
      }
      if (*((_DWORD *)v49 + 9) != v35)
      {
        uint64_t v70 = 0;
        uint64_t v71 = v50 - 2;
        while (v71 != v70)
        {
          int v72 = *(_DWORD *)&v49[4 * v70++ + 40];
          if (v72 == v35)
          {
            uint64_t v52 = v70 + 1;
            goto LABEL_35;
          }
        }
LABEL_34:
        uint64_t v52 = 0;
        goto LABEL_35;
      }
      uint64_t v52 = 1;
LABEL_35:
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v40 = v49;
      if ((v53 & 1) == 0)
      {
        uint64_t v49 = sub_1B6315450((uint64_t)v49);
        *uint64_t v40 = v49;
      }
      uint64_t v54 = *((void *)v49 + 2) - 1;
      if (v54 - v52 < 0)
      {
LABEL_94:
        sub_1B6E32C88();
        __break(1u);
        return;
      }
      memmove(&v49[4 * v52 + 32], &v49[4 * v52 + 36], 4 * (v54 - v52));
      *((void *)v49 + 2) = v54;
      *uint64_t v40 = v49;
      *uint64_t v46 = v47 - 1;
      long long v55 = &v39[5 * v34];
      int v57 = *((_DWORD *)v55 + 9);
      long long v56 = (_DWORD *)v55 + 9;
      if (v57 == v35) {
LABEL_46:
      }
        *long long v56 = -1;
LABEL_47:
      LOBYTE(v39[5 * v34 + 3]) = 1;
      uint64_t v2 = v109;
      uint64_t v62 = *(void *)(v109 + 136);
      char v63 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v109 + 136) = v62;
      if ((v63 & 1) == 0) {
        uint64_t v62 = sub_1B6D671CC(v62);
      }
      *(void *)(v62 + 8 * v35 + 32) = 0;
      *(void *)(v109 + 136) = v62;
      uint64_t v64 = *(void *)(v109 + 144);
      char v65 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v109 + 144) = v64;
      if ((v65 & 1) == 0)
      {
        sub_1B6397798(0, *(void *)(v64 + 16) + 1, 1);
        uint64_t v64 = *v108;
      }
      unint64_t v67 = *(void *)(v64 + 16);
      unint64_t v66 = *(void *)(v64 + 24);
      if (v67 >= v66 >> 1)
      {
        sub_1B6397798(v66 > 1, v67 + 1, 1);
        uint64_t v64 = *v108;
      }
      *(void *)(v64 + 16) = v67 + 1;
      *(_DWORD *)(v64 + 4 * v67 + 32) = v35;
      *char v108 = v64;
      char v13 = (*(void *)(v14 + 240) == *(void *)(v14 + 232)) & v112;
      vfx_swift_deimmortalize(v14);
      vfx_swift_release_dealloc((void *)v14);
      uint64_t v12 = v114;
    }
    while (v114 != v111);
    swift_bridgeObjectRelease();
    uint64_t v8 = v103;
    if (v13)
    {
LABEL_71:
      uint64_t v73 = (void *)*v107;
      char v74 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v107 = v73;
      if ((v74 & 1) == 0) {
        uint64_t v73 = sub_1B6C16694(v73);
      }
      HIDWORD(v73[5 * v104 + 7]) = 15;
      *uint64_t v107 = v73;
      goto LABEL_74;
    }
LABEL_77:
    uint64_t v9 = (void *)*v107;
    char v80 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v107 = v9;
    if ((v80 & 1) == 0) {
      uint64_t v9 = sub_1B6C16694(v9);
    }
    ++v8;
    LOBYTE(v9[5 * v104 + 7]) = 0;
    *uint64_t v107 = v9;
  }
  while (v8 != v102);
LABEL_93:
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(lock);
}

uint64_t sub_1B68E831C(uint64_t a1, void *a2)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 376));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  uint64_t v4 = *(char **)(a1 + 232);
  uint64_t v5 = *(char **)(a1 + 256);
  if (v4 == v5)
  {
    uint64_t v6 = *(char **)(a1 + 240);
  }
  else
  {
    sub_1B666018C(v5, v4);
    uint64_t v5 = *(char **)(a1 + 232);
    uint64_t v6 = *(char **)(a1 + 240);
    if (v6 == v5)
    {
      uint64_t v6 = 0;
      uint64_t v5 = 0;
      *(void *)(a1 + 232) = 0;
      *(void *)(a1 + 240) = 0;
    }
  }
  *(void *)(a1 + 248) = v6;
  *(void *)(a1 + 256) = v5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  int v7 = *(_DWORD *)(a1 + 188);
  char v8 = *(unsigned char *)(a1 + 120);
  uint64_t v9 = (void *)a2[12];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  a2[12] = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    a2[12] = sub_1B6C16694(v9);
  }
  sub_1B68E6CB8(v7, v8);
  uint64_t v11 = a2[17];
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  a2[17] = v11;
  if ((v12 & 1) == 0) {
    uint64_t v11 = sub_1B6D671CC(v11);
  }
  *(void *)(v11 + 8 * v7 + 32) = 0;
  uint64_t v15 = a2[18];
  uint64_t v14 = a2 + 18;
  uint64_t v13 = v15;
  *(v14 - 1) = v11;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v14 = v15;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1B6397798(0, *(void *)(v13 + 16) + 1, 1);
    uint64_t v13 = *v14;
  }
  unint64_t v18 = *(void *)(v13 + 16);
  unint64_t v17 = *(void *)(v13 + 24);
  if (v18 >= v17 >> 1)
  {
    uint64_t result = sub_1B6397798(v17 > 1, v18 + 1, 1);
    uint64_t v13 = *v14;
  }
  *(void *)(v13 + 16) = v18 + 1;
  *(_DWORD *)(v13 + 4 * v18 + 32) = v7;
  *uint64_t v14 = v13;
  return result;
}

char *sub_1B68E84A8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = a1 - a2 + 1;
  char v8 = *v3;
  uint64_t v9 = *((void *)*v3 + 2);
  uint64_t v10 = v9 + v7;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > *((void *)v8 + 3) >> 1)
  {
    if (v9 <= v10) {
      uint64_t v12 = v9 + v7;
    }
    else {
      uint64_t v12 = v9;
    }
    uint64_t result = sub_1B62B7EA0((char)result, v12, 1, v8);
    char v8 = result;
  }
  uint64_t v13 = v8 + 32;
  uint64_t v14 = &v8[4 * a1 + 32];
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v15 = *((void *)v8 + 2);
  if (v15 - a2 >= 0)
  {
    uint64_t result = v14 + 4;
    uint64_t v16 = &v13[4 * a2];
    unint64_t v17 = (unint64_t)&v13[4 * v15];
    if (v14 + 4 != v16 || (unint64_t)result >= v17) {
      uint64_t result = (char *)memmove(result, v16, 4 * (v15 - a2));
    }
    *((void *)v8 + 2) += v7;
LABEL_16:
    *(_DWORD *)uint64_t v14 = a3;
    *int v3 = v8;
    return result;
  }
  uint64_t result = (char *)sub_1B6E32C88();
  __break(1u);
  return result;
}

void *sub_1B68E85C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = a2 - a1;
  uint64_t v10 = 1 - (a2 - a1);
  uint64_t v11 = *(void **)v4;
  uint64_t v12 = *(void *)(*(void *)v4 + 16);
  uint64_t v13 = v12 + v10;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v11[3] >> 1)
  {
    if (v12 <= v13) {
      uint64_t v15 = v12 + v10;
    }
    else {
      uint64_t v15 = v12;
    }
    uint64_t v11 = sub_1B6335858(isUniquelyReferenced_nonNull_native, v15, 1, v11);
  }
  uint64_t v16 = v11 + 4;
  unint64_t v17 = &v11[2 * a1 + 4];
  uint64_t result = (void *)swift_arrayDestroy();
  if (v9 == 1) {
    goto LABEL_16;
  }
  uint64_t v19 = v11[2];
  uint64_t v20 = v19 - a2;
  if (v19 - a2 >= 0)
  {
    uint64_t result = v17 + 2;
    uint64_t v21 = &v16[2 * a2];
    unint64_t v22 = (unint64_t)&v16[2 * v19];
    if (v17 + 2 != v21 || (unint64_t)result >= v22) {
      uint64_t result = memmove(result, v21, 16 * v20);
    }
    v11[2] += v10;
LABEL_16:
    *unint64_t v17 = a3;
    v17[1] = a4;
    *(void *)uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)sub_1B6E32C88();
  __break(1u);
  return result;
}

void *sub_1B68E8710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a2 - a1;
  uint64_t v12 = 1 - (a2 - a1);
  uint64_t v13 = *(void **)v6;
  uint64_t v14 = *(void *)(*(void *)v6 + 16);
  uint64_t v15 = v14 + v12;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v15 > v13[3] >> 1)
  {
    if (v14 <= v15) {
      uint64_t v17 = v14 + v12;
    }
    else {
      uint64_t v17 = v14;
    }
    uint64_t v13 = sub_1B68C2464(isUniquelyReferenced_nonNull_native, v17, 1, v13);
  }
  unint64_t v18 = v13 + 4;
  uint64_t v19 = &v13[4 * a1 + 4];
  uint64_t result = (void *)swift_arrayDestroy();
  if (v11 == 1) {
    goto LABEL_16;
  }
  uint64_t v21 = v13[2];
  uint64_t v22 = v21 - a2;
  if (v21 - a2 >= 0)
  {
    uint64_t result = v19 + 4;
    uint64_t v23 = &v18[4 * a2];
    unint64_t v24 = (unint64_t)&v18[4 * v21];
    if (v19 + 4 != v23 || (unint64_t)result >= v24) {
      uint64_t result = memmove(result, v23, 32 * v22);
    }
    v13[2] += v12;
LABEL_16:
    *uint64_t v19 = a3;
    v19[1] = a4;
    v19[2] = a5;
    v19[3] = a6;
    *(void *)uint64_t v6 = v13;
    return result;
  }
  uint64_t result = (void *)sub_1B6E32C88();
  __break(1u);
  return result;
}

char *sub_1B68E8868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2 - a1;
  uint64_t v8 = 1 - (a2 - a1);
  uint64_t v9 = *(void **)v3;
  uint64_t v10 = *(void *)(*(void *)v3 + 16);
  uint64_t v11 = v10 + v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11) {
      uint64_t v13 = v10 + v8;
    }
    else {
      uint64_t v13 = v10;
    }
    uint64_t v9 = sub_1B68C257C(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  uint64_t v14 = (uint64_t)&v9[5 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (v7 == 1) {
    goto LABEL_13;
  }
  uint64_t v16 = v9[2] - a2;
  if (v16 >= 0)
  {
    uint64_t result = (char *)(v14 + 40);
    uint64_t v17 = (char *)&v9[5 * a2 + 4];
    size_t v18 = 40 * v16;
    if ((char *)(v14 + 40) != v17 || result >= &v17[v18]) {
      uint64_t result = (char *)memmove(result, v17, v18);
    }
    v9[2] += v8;
LABEL_13:
    long long v19 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)a3;
    *(_OWORD *)(v14 + 16) = v19;
    *(_DWORD *)(v14 + 31) = *(_DWORD *)(a3 + 31);
    *(void *)uint64_t v3 = v9;
    return result;
  }
  uint64_t result = (char *)sub_1B6E32C88();
  __break(1u);
  return result;
}

void *sub_1B68E89C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2 - a1;
  uint64_t v8 = 1 - (a2 - a1);
  uint64_t v9 = *(void **)v3;
  uint64_t v10 = *(void *)(*(void *)v3 + 16);
  uint64_t v11 = v10 + v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11) {
      uint64_t v13 = v10 + v8;
    }
    else {
      uint64_t v13 = v10;
    }
    uint64_t v9 = sub_1B68C4CC4(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  uint64_t v14 = v9 + 4;
  uint64_t v15 = (uint64_t)&v9[5 * a1 + 4];
  sub_1B62E9854(0, &qword_1E9DCFD50);
  uint64_t result = (void *)swift_arrayDestroy();
  if (v7 == 1) {
    goto LABEL_13;
  }
  uint64_t v17 = v9[2];
  if (v17 - a2 >= 0)
  {
    uint64_t result = (void *)(v15 + 40);
    size_t v18 = &v14[5 * a2];
    if ((void *)(v15 + 40) != v18 || result >= &v14[5 * v17]) {
      uint64_t result = memmove(result, v18, 40 * (v17 - a2));
    }
    v9[2] += v8;
LABEL_13:
    long long v19 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)a3;
    *(_OWORD *)(v15 + 16) = v19;
    *(void *)(v15 + 32) = *(void *)(a3 + 32);
    *(void *)uint64_t v3 = v9;
    return result;
  }
  uint64_t result = (void *)sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E8B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1 - a2 + 1;
  uint64_t v8 = *v3;
  uint64_t v9 = *((void *)*v3 + 2);
  uint64_t v10 = v9 + v7;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > *((void *)v8 + 3) >> 1)
  {
    if (v9 <= v10) {
      uint64_t v12 = v9 + v7;
    }
    else {
      uint64_t v12 = v9;
    }
    uint64_t v8 = sub_1B68C1E4C(isUniquelyReferenced_nonNull_native, v12, 1, v8);
  }
  uint64_t v13 = (uint64_t)&v8[80 * a1 + 32];
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v14 = *((void *)v8 + 2) - a2;
  if (v14 >= 0)
  {
    uint64_t v15 = (char *)(v13 + 80);
    uint64_t v16 = &v8[80 * a2 + 32];
    if ((char *)(v13 + 80) != v16 || v15 >= &v16[80 * v14]) {
      memmove(v15, v16, 80 * v14);
    }
    *((void *)v8 + 2) += v7;
LABEL_16:
    sub_1B634F71C(a3, (uint64_t)v19);
    uint64_t result = sub_1B634F71C((uint64_t)v19, v13);
    *uint64_t v3 = v8;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

char *sub_1B68E8C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1 - a2 + 1;
  uint64_t v8 = *v3;
  int64_t v9 = *((void *)*v3 + 2);
  int64_t v10 = v9 + v7;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > *((void *)v8 + 3) >> 1)
  {
    if (v9 <= v10) {
      int64_t v12 = v9 + v7;
    }
    else {
      int64_t v12 = v9;
    }
    uint64_t result = (char *)sub_1B68C5ABC((char)result, v12, 1, v8);
    uint64_t v8 = result;
  }
  uint64_t v13 = (uint64_t)&v8[112 * a1 + 32];
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v14 = *((void *)v8 + 2) - a2;
  if (v14 >= 0)
  {
    uint64_t result = (char *)(v13 + 112);
    uint64_t v15 = &v8[112 * a2 + 32];
    if ((char *)(v13 + 112) != v15 || result >= &v15[112 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 112 * v14);
    }
    *((void *)v8 + 2) += v7;
LABEL_16:
    long long v17 = *(_OWORD *)(a3 + 80);
    *(_OWORD *)(v13 + 64) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(v13 + 80) = v17;
    *(void *)(v13 + 96) = *(void *)(a3 + 96);
    long long v18 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)a3;
    *(_OWORD *)(v13 + 16) = v18;
    long long v19 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v13 + 48) = v19;
    *uint64_t v3 = v8;
    return result;
  }
  uint64_t result = (char *)sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E8DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t v6 = sub_1B68C09C8(isUniquelyReferenced_nonNull_native, v10, 1, (unint64_t)v6);
  }
  sub_1B629A550(0);
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_14;
  }
  uint64_t v12 = v6[2];
  if (v12 - a2 >= 0)
  {
    if (a2 > a1 || v12 <= a1) {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    v6[2] -= v5;
LABEL_14:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E8F08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t v6 = sub_1B68C0888(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_10;
  }
  uint64_t v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[5 * a1 + 4], &v6[5 * a2 + 4], 40 * v12);
    v6[2] -= v5;
LABEL_10:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E9030(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B68C0634(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 24 * a1), (const void *)(v6 + 32 + 24 * a2), 24 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    uint64_t *v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E9148(uint64_t a1, uint64_t a2)
{
  return sub_1B68EAD70(a1, a2, (uint64_t (*)(void))sub_1B6397958, (unint64_t *)&qword_1EB97E840);
}

uint64_t sub_1B68E9170(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5, int a6, _DWORD *a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a4 + 80) + 8 * a1 + 32) + 200) == 1) {
    *(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  }
  long long v18 = *(os_unfair_lock_s **)(a4 + 128);
  swift_retain_n();
  os_unfair_lock_lock(v18);
  uint64_t v19 = *(void *)(a4 + 96);
  uint64_t v20 = *(void *)(v19 + 40 * a1 + 32);
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v22 = (int *)(v20 + 32);
    while (1)
    {
      uint64_t v23 = *v22++;
      uint64_t v24 = *(void *)(*(void *)(a4 + 136) + 32 + 8 * v23);
      if (*(void *)(v24 + 240) != *(void *)(v24 + 232)) {
        break;
      }
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    sub_1B6358028(a1);
    uint64_t v19 = *(void *)(a4 + 96);
  }
  uint64_t v25 = v19 + 40 * a1;
  char v50 = a3;
  uint64_t v26 = 36;
  if (a3) {
    uint64_t v26 = 32;
  }
  int v27 = *(_DWORD *)(v25 + v26 + 32);
  uint64_t v28 = HIDWORD(a2) & 1;
  if (v27 == -1)
  {
    char v45 = a12;
    __int16 v46 = a10;
    uint64_t v30 = a2;
  }
  else
  {
    uint64_t v29 = *(void *)(*(void *)(a4 + 136) + 8 * v27 + 32);
    swift_retain();
    uint64_t v30 = a2;
    sub_1B68E7230(v29, a2 | (unint64_t)(v28 << 32), a5, a6, a7, a8, a9, &v51, a10, a11, a12 & 1);
    if (v51)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
      return swift_release_n();
    }
    char v45 = a12;
    __int16 v46 = a10;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  char v31 = (void *)(a4 + 136);
  swift_retain();
  int v32 = sub_1B628A6F0((uint64_t *)(a4 + 136), a4, v30 | (v28 << 32), a1, v50 & 1);
  swift_release();
  uint64_t v33 = *(void **)(a4 + 96);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a4 + 96) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v33 = sub_1B6C16694(v33);
    *(void *)(a4 + 96) = v33;
  }
  int v35 = v33 + 4;
  int v36 = (char **)&v33[5 * a1 + 4];
  if (v50)
  {
    uint64_t v37 = *v36;
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    *int v36 = v37;
    if ((v38 & 1) == 0)
    {
      uint64_t v37 = sub_1B62B7EA0(0, *((void *)v37 + 2) + 1, 1, v37);
      *int v36 = v37;
    }
    unint64_t v40 = *((void *)v37 + 2);
    unint64_t v39 = *((void *)v37 + 3);
    if (v40 >= v39 >> 1)
    {
      uint64_t v37 = sub_1B62B7EA0(v39 > 1, v40 + 1, 1, v37);
      *int v36 = v37;
    }
    *((void *)v37 + 2) = v40 + 1;
    *(_DWORD *)&v37[4 * v40 + 32] = v32;
    LODWORD(v35[5 * a1 + 4]) = v32;
  }
  else
  {
    uint64_t v41 = &v35[5 * a1];
    uint64_t v42 = v41[1];
    sub_1B68E84A8(v42, v42, v32);
    v41[1] = v42 + 1;
    *((_DWORD *)v41 + 9) = v32;
  }
  LOBYTE(v35[5 * a1 + 3]) = 1;
  uint64_t v43 = *(void *)(*v31 + 8 * v32 + 32);
  swift_retain();
  sub_1B68E74E8(v43, v50 & 1, a5, a6, a7, a8, a9, v46, v45 & 1);
  return swift_release_n();
}

uint64_t sub_1B68E94AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B68C17A0(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    uint64_t *v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E95BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t v6 = sub_1B6335858(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_10;
  }
  uint64_t v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[2 * a1 + 4], &v6[2 * a2 + 4], 16 * v12);
    v6[2] -= v5;
LABEL_10:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E96D8(uint64_t a1, uint64_t a2)
{
  return sub_1B68E9830(a1, a2, (uint64_t (*)(void))sub_1B68C370C);
}

uint64_t sub_1B68E96F0(uint64_t a1, uint64_t a2)
{
  return sub_1B68E9960(a1, a2, (uint64_t (*)(void))sub_1B629CE28);
}

uint64_t sub_1B68E9708(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B6397840(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 4 * a1), (const void *)(v6 + 32 + 4 * a2), 4 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    uint64_t *v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E9818(uint64_t a1, uint64_t a2)
{
  return sub_1B68E9830(a1, a2, (uint64_t (*)(void))sub_1B62B7EA0);
}

uint64_t sub_1B68E9830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v7 = a1 - a2;
  uint64_t v8 = *v3;
  uint64_t v9 = *(void *)(*v3 + 16) + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v8 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t result = a3();
    uint64_t v8 = result;
    if (a1 == a2)
    {
LABEL_8:
      *uint64_t v3 = v8;
      return result;
    }
  }
  uint64_t v11 = *(void *)(v8 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v8 + 32 + 4 * a1), (const void *)(v8 + 32 + 4 * a2), 4 * v11);
    *(void *)(v8 + 16) += v7;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E9948(uint64_t a1, uint64_t a2)
{
  return sub_1B68E9960(a1, a2, (uint64_t (*)(void))sub_1B68C0EA8);
}

uint64_t sub_1B68E9960(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v7 = a1 - a2;
  uint64_t v8 = *v3;
  uint64_t v9 = *(void *)(*v3 + 16) + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v8 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t result = a3();
    uint64_t v8 = result;
    if (a1 == a2)
    {
LABEL_8:
      *uint64_t v3 = v8;
      return result;
    }
  }
  uint64_t v11 = *(void *)(v8 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v8 + 32 + 16 * a1), (const void *)(v8 + 32 + 16 * a2), 16 * v11);
    *(void *)(v8 + 16) += v7;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E9A78(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 96) + 40 * (int)result + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(int *)(v3 + 4 * v7++ + 32);
      uint64_t v9 = *(void **)(*(void *)(a2 + 136) + 8 * v8 + 32);
      sub_1B68E831C((uint64_t)v9, a3);
      vfx_swift_deimmortalize((uint64_t)v9);
      vfx_swift_release_dealloc(v9);
    }
    while (v4 != v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B68E9B58(uint64_t a1, uint64_t a2)
{
  return sub_1B68EA1F4(a1, a2, (void (*)(void))type metadata accessor for VFXEffect);
}

void sub_1B68E9B70(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  if (*(unsigned char *)(*(void *)(*(void *)(a4 + 80) + 8 * a1 + 32) + 200) == 1) {
    *(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a4 + 128));
  uint64_t v12 = *(void *)(a4 + 96);
  uint64_t v13 = *(void *)(v12 + 40 * a1 + 32);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = (int *)(v13 + 32);
    while (1)
    {
      uint64_t v16 = *v15++;
      uint64_t v17 = *(void *)(*(void *)(a4 + 136) + 32 + 8 * v16);
      if (*(void *)(v17 + 240) != *(void *)(v17 + 232)) {
        break;
      }
      if (!--v14) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    sub_1B6358028(a1);
    uint64_t v12 = *(void *)(a4 + 96);
  }
  uint64_t v18 = v12 + 40 * a1;
  uint64_t v19 = 36;
  if (a3) {
    uint64_t v19 = 32;
  }
  int v20 = *(_DWORD *)(v18 + v19 + 32);
  uint64_t v21 = HIDWORD(a2) & 1;
  if (v20 == -1)
  {
    uint64_t v22 = a2;
  }
  else
  {
    uint64_t v22 = a2;
    sub_1B68E7340(*(void *)(*(void *)(a4 + 136) + 8 * v20 + 32), a2 | (unint64_t)(v21 << 32), a5, a6, &v38);
    if (v38)
    {
      uint64_t v23 = *(os_unfair_lock_s **)(a4 + 128);
      os_unfair_lock_unlock(v23);
      return;
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  uint64_t v24 = (void *)(a4 + 136);
  swift_retain();
  int v25 = sub_1B628A6F0((uint64_t *)(a4 + 136), a4, v22 | (v21 << 32), a1, a3 & 1);
  swift_release();
  uint64_t v26 = *(void **)(a4 + 96);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a4 + 96) = v26;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v26 = sub_1B6C16694(v26);
    *(void *)(a4 + 96) = v26;
  }
  uint64_t v28 = v26 + 4;
  uint64_t v29 = (char **)&v26[5 * a1 + 4];
  if (a3)
  {
    uint64_t v30 = *v29;
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v29 = v30;
    int v32 = a6;
    if ((v31 & 1) == 0)
    {
      uint64_t v30 = sub_1B62B7EA0(0, *((void *)v30 + 2) + 1, 1, v30);
      *uint64_t v29 = v30;
    }
    unint64_t v34 = *((void *)v30 + 2);
    unint64_t v33 = *((void *)v30 + 3);
    if (v34 >= v33 >> 1)
    {
      uint64_t v30 = sub_1B62B7EA0(v33 > 1, v34 + 1, 1, v30);
      *uint64_t v29 = v30;
    }
    *((void *)v30 + 2) = v34 + 1;
    *(_DWORD *)&v30[4 * v34 + 32] = v25;
    LODWORD(v28[5 * a1 + 4]) = v25;
  }
  else
  {
    int v32 = a6;
    int v35 = &v28[5 * a1];
    uint64_t v36 = v35[1];
    sub_1B68E84A8(v36, v36, v25);
    v35[1] = v36 + 1;
    *((_DWORD *)v35 + 9) = v25;
  }
  LOBYTE(v28[5 * a1 + 3]) = 1;
  sub_1B68E7610(*(void *)(*v24 + 8 * v25 + 32), a3 & 1, a5, v32);
}

uint64_t sub_1B68E9E60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B68C18B8(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    uint64_t *v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68E9F70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t v6 = sub_1B68C257C(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_10;
  }
  uint64_t v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[5 * a1 + 4], &v6[5 * a2 + 4], 40 * v12);
    v6[2] -= v5;
LABEL_10:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

char *sub_1B68EA098(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *((void *)*v2 + 2);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *((void *)v6 + 3) >> 1)
  {
    if (a1 == a2)
    {
LABEL_14:
      uint64_t *v2 = v6;
      return result;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = sub_1B68C60D8((char)result, v10, 1, v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_14;
    }
  }
  uint64_t v11 = *((void *)v6 + 2) - a2;
  if (v11 >= 0)
  {
    uint64_t result = &v6[32 * a1 + 32];
    uint64_t v12 = &v6[32 * a2 + 32];
    size_t v13 = 32 * v11;
    if (32 * a1 != 32 * a2 || result >= &v12[v13]) {
      uint64_t result = (char *)memmove(result, v12, v13);
    }
    *((void *)v6 + 2) += v5;
    goto LABEL_14;
  }
  uint64_t result = (char *)sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68EA1C4(uint64_t a1, uint64_t a2)
{
  return sub_1B68EA1F4(a1, a2, (void (*)(void))type metadata accessor for AuthoringNode);
}

uint64_t sub_1B68EA1DC(uint64_t a1, uint64_t a2)
{
  return sub_1B68EA1F4(a1, a2, (void (*)(void))type metadata accessor for InputEvent);
}

uint64_t sub_1B68EA1F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  unint64_t v7 = *v3;
  if (*v3 >> 62 && (swift_bridgeObjectRetain(), sub_1B6E32C18(), swift_bridgeObjectRelease(), unint64_t v7 = *v3, *v3 >> 62))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    unint64_t v7 = *v3;
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = a2 - a1;
  uint64_t v10 = v8 - (a2 - a1);
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v7;
  uint64_t v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_13;
    }
    uint64_t v12 = 1;
  }
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v10) {
    uint64_t v14 = v10;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x1BA9B4590](v12, v14, 1, v7);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_13:
  uint64_t v15 = (void *)(v13 + 32 + 8 * a1);
  a3(0);
  swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_19;
  }
  if (!(v7 >> 62))
  {
    uint64_t v16 = *(void *)(v13 + 16) - a2;
    if (v16 >= 0) {
      goto LABEL_16;
    }
LABEL_26:
    sub_1B6E32C88();
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  uint64_t v16 = v19 - a2;
  if (v19 - a2 < 0) {
    goto LABEL_26;
  }
LABEL_16:
  memmove(v15, (const void *)(v13 + 32 + 8 * a2), 8 * v16);
  if (v7 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v17 = *(void *)(v13 + 16);
LABEL_18:
  *(void *)(v13 + 16) = v17 - v9;
LABEL_19:

  return sub_1B6E31C48();
}

uint64_t sub_1B68EA478(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B68C384C(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    uint64_t *v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68EA588(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t v6 = sub_1B68C2928(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_10;
  }
  uint64_t v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[4 * a1 + 4], &v6[4 * a2 + 4], 32 * v12);
    v6[2] -= v5;
LABEL_10:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68EA6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t v6 = sub_1B68C3A9C(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  sub_1B62C55B0(0, (unint64_t *)&qword_1EB97E288);
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_10;
  }
  uint64_t v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[2 * a1 + 4], &v6[2 * a2 + 4], 16 * v12);
    v6[2] -= v5;
LABEL_10:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68EA7D8(uint64_t a1, uint64_t a2)
{
  return sub_1B68EA828(a1, a2, (uint64_t (*)(void))sub_1B68C4CC4, &qword_1E9DCFD50);
}

uint64_t sub_1B68EA800(uint64_t a1, uint64_t a2)
{
  return sub_1B68EA828(a1, a2, (uint64_t (*)(void))sub_1B68C4CEC, (unint64_t *)&unk_1E9DCFD40);
}

uint64_t sub_1B68EA828(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  uint64_t v9 = a2 - a1;
  uint64_t v10 = *v4;
  uint64_t v11 = *(void *)(*v4 + 16) - (a2 - a1);
  if (!swift_isUniquelyReferenced_nonNull_native() || v11 > *(void *)(v10 + 24) >> 1) {
    uint64_t v10 = a3();
  }
  sub_1B62E9854(0, a4);
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v10 + 16) - a2;
  if (v13 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v10 + 32 + 40 * a1), (const void *)(v10 + 32 + 40 * a2), 40 * v13);
    *(void *)(v10 + 16) -= v9;
LABEL_7:
    *uint64_t v4 = v10;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68EA974(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B68C59A4(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    uint64_t *v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68EAA84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *(void **)v2;
  int64_t v7 = *(void *)(*(void *)v2 + 16);
  int64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= v6[3] >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      int64_t v10 = v8;
    }
    else {
      int64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B68C5ABC(result, v10, 1, v6);
    uint64_t v6 = (void *)result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = v6[2] - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[14 * a1 + 4], &v6[14 * a2 + 4], 112 * v11);
    v6[2] += v5;
LABEL_11:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

void sub_1B68EAB9C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_1B68EABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2 - a1;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  uint64_t v9 = *(void **)v3;
  uint64_t v10 = *(void *)(*(void *)v3 + 16);
  uint64_t v11 = v10 + v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11) {
      uint64_t v13 = v10 + v8;
    }
    else {
      uint64_t v13 = v10;
    }
    uint64_t v9 = sub_1B62CACA8(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  uint64_t v14 = v9 + 4;
  uint64_t v15 = (uint64_t)&v9[2 * a1 + 4];
  sub_1B62CB664();
  uint64_t result = (void *)swift_arrayDestroy();
  if (v7 != v6)
  {
    uint64_t v17 = v9[2];
    uint64_t v18 = v17 - a2;
    if (v17 - a2 < 0)
    {
      uint64_t result = (void *)sub_1B6E32C88();
      __break(1u);
      return result;
    }
    uint64_t result = (void *)(v15 + 16 * v7);
    uint64_t v19 = &v14[2 * a2];
    unint64_t v20 = (unint64_t)&v14[2 * v17];
    if (result != v19 || (unint64_t)result >= v20) {
      uint64_t result = memmove(result, v19, 16 * v18);
    }
    v9[2] += v8;
  }
  if (v7) {
    uint64_t result = (void *)swift_arrayInitWithCopy();
  }
  *(void *)uint64_t v3 = v9;
  return result;
}

uint64_t sub_1B68EAD48(uint64_t a1, uint64_t a2)
{
  return sub_1B68EAD70(a1, a2, (uint64_t (*)(void))sub_1B62C5898, (unint64_t *)&qword_1EB97EAE0);
}

uint64_t sub_1B68EAD70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  uint64_t v9 = a2 - a1;
  uint64_t v10 = *v4;
  uint64_t v11 = *(void *)(*v4 + 16) - (a2 - a1);
  if (!swift_isUniquelyReferenced_nonNull_native() || v11 > *(void *)(v10 + 24) >> 1) {
    uint64_t v10 = a3();
  }
  sub_1B62C55B0(0, a4);
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v10 + 16) - a2;
  if (v13 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v10 + 32 + 40 * a1), (const void *)(v10 + 32 + 40 * a2), 40 * v13);
    *(void *)(v10 + 16) -= v9;
LABEL_7:
    *uint64_t v4 = v10;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t destroy for ClassComponentStorage()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClassComponentStorage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClassComponentStorage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClassComponentStorage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassComponentStorage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassComponentStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassComponentStorage()
{
  return &type metadata for ClassComponentStorage;
}

__CFString *sub_1B68EB19C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  *(unsigned char *)(a1 + 24) = 2;
  *(void *)(a1 + 32) = &unk_1F0F62668;
  *(_WORD *)(a1 + 40) = 0;
  unint64_t v2 = (int *)type metadata accessor for TriggerScript(0);
  uint64_t v3 = a1 + v2[10];
  uint64_t v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(a1 + v2[12]) = 0;
  uint64_t v5 = a1 + v2[13];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  *(void *)(a1 + v2[11]) = @"VFXTriggerTypeKeyDown";

  return @"VFXTriggerTypeKeyDown";
}

uint64_t sub_1B68EB284(unint64_t a1)
{
  if (a1 >> 60 == 9)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B6E32738();
    if (swift_conformsToProtocol2())
    {
      uint64_t v1 = sub_1B6890B0C();
      swift_release();
      swift_bridgeObjectRelease();
      return v1;
    }
    __break(1u);
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68EB40C(unint64_t a1)
{
  if (a1 >> 60 != 9) {
    return 0;
  }
  uint64_t v1 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
  if ((*(_WORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x3A) & 0x80) != 0 || (v1 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v3 = sub_1B6E32738();
  if (swift_conformsToProtocol2()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  if (!v4) {
    goto LABEL_15;
  }
  uint64_t v5 = sub_1B6E32738();
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (!sub_1B62CA808(v5)) {
      goto LABEL_15;
    }
    uint64_t v7 = sub_1B6E32738();
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v8 = sub_1B62CD84C(v7);
      sub_1B62CB508(v2, v2);
      if (v8 == v9)
      {
        swift_release();
        uint64_t v1 = 0;
LABEL_16:
        swift_bridgeObjectRelease();
        return v1;
      }
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1B68EB57C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      unint64_t result = sub_1B6E33928();
      break;
    default:
      sub_1B6E33928();
      sub_1B67C52A4(a4);
      sub_1B6E318B8();
      sub_1B69B2FF4(a1, a4);
      unint64_t result = sub_1B678FC34(a4);
      break;
  }
  return result;
}

uint64_t sub_1B68EB698()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v3 = v0[2];
  sub_1B6E33918();
  sub_1B68EB57C((uint64_t)v5, v1, v2, v3);
  return sub_1B6E33988();
}

unint64_t sub_1B68EB6F4(uint64_t a1)
{
  return sub_1B68EB57C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1B68EB700()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v3 = v0[2];
  sub_1B6E33918();
  sub_1B68EB57C((uint64_t)v5, v1, v2, v3);
  return sub_1B6E33988();
}

uint64_t sub_1B68EB758(uint64_t a1, uint64_t a2)
{
  return sub_1B6902230(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

unint64_t sub_1B68EB774(unsigned __int8 a1)
{
  int v1 = a1 - 5;
  unint64_t result = 0x8000000000000050;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = 4;
      uint64_t v4 = swift_allocObject();
      long long v5 = xmmword_1B6E8DAD0;
      goto LABEL_3;
    case 6:
    case 7:
      uint64_t v6 = swift_allocObject();
      long long v7 = xmmword_1B6E8F480;
      goto LABEL_7;
    case 8:
      return 0x8000000000000038;
    case 9:
    case 10:
    case 11:
    case 14:
      return result;
    case 12:
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = 3;
      uint64_t v4 = swift_allocObject();
      long long v5 = xmmword_1B6E8DAE0;
LABEL_3:
      *(_OWORD *)(v4 + 16) = v5;
      *(void *)(v3 + 24) = v4 | 0x1000000000000000;
      return v3 | 0x1000000000000000;
    case 13:
      return 0x80000000000000C0;
    case 15:
    case 16:
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 3;
      *(void *)(v8 + 24) = 0xD000000000000011;
      *(void *)(v8 + 32) = 0x80000001B6F3D320;
      goto LABEL_11;
    case 17:
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 1;
      *(void *)(v8 + 24) = 0x3265727574786574;
      *(void *)(v8 + 32) = 0xEF3E666C61683C64;
LABEL_11:
      unint64_t result = v8 | 0x7000000000000000;
      break;
    default:
      uint64_t v6 = swift_allocObject();
      long long v7 = xmmword_1B6E8DAE0;
LABEL_7:
      *(_OWORD *)(v6 + 16) = v7;
      unint64_t result = v6 | 0x1000000000000000;
      break;
  }
  return result;
}

uint64_t sub_1B68EB978(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      uint64_t result = sub_1B6E33928();
      break;
    default:
      sub_1B6E33928();
      uint64_t result = sub_1B6E33938();
      break;
  }
  return result;
}

uint64_t sub_1B68EBAB8()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B68EB978((uint64_t)v3, v1);
  return sub_1B6E33988();
}

uint64_t sub_1B68EBB00(uint64_t a1)
{
  return sub_1B68EB978(a1, *v1);
}

uint64_t sub_1B68EBB08()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B68EB978((uint64_t)v3, v1);
  return sub_1B6E33988();
}

BOOL sub_1B68EBB4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6901134(*a1, *a2);
}

ValueMetadata *sub_1B68EBB58()
{
  sub_1B6906CE8(v0, (uint64_t)&v15);
  char v1 = &type metadata for vfx_virtual.texture;
  switch(v18)
  {
    case 1:
      sub_1B6906DA8(&v15, (uint64_t)&v19);
      sub_1B6906DA8(&v19, (uint64_t)&v20);
      switch(v21)
      {
        case 0uLL:
          long long v5 = (unint64_t *)&qword_1EB980EF0;
          uint64_t v6 = MEMORY[0x1E4FBB470];
          long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
          goto LABEL_7;
        case 1uLL:
          long long v5 = (unint64_t *)&qword_1EB980EB0;
          uint64_t v6 = MEMORY[0x1E4FBB470];
          long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
          goto LABEL_7;
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
          long long v5 = &qword_1EB980E90;
          uint64_t v6 = MEMORY[0x1E4FBB470];
          long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
LABEL_7:
          sub_1B6906D40(0, v5, (uint64_t (*)(void))sub_1B6645830, v6, v7);
          char v1 = v8;
          goto LABEL_8;
        case 6uLL:
        case 8uLL:
          sub_1B6906D00((uint64_t)v0, (void (*)(void, void, void, void, void))sub_1B67C511C);
          goto LABEL_14;
        case 7uLL:
          sub_1B6906D00((uint64_t)v0, (void (*)(void, void, void, void, void))sub_1B67C511C);
          return &type metadata for vfx_virtual.half3;
        default:
          unint64_t v13 = v22;
          sub_1B6906D00((uint64_t)v0, (void (*)(void, void, void, void, void))sub_1B67C51E0);
          sub_1B67C52A4(v13);
          sub_1B69B27D0(v13);
          if (!v14) {
            goto LABEL_29;
          }
          char v1 = v14;
          sub_1B678FC34(v13);
LABEL_8:
          sub_1B6906D00((uint64_t)v0, (void (*)(void, void, void, void, void))sub_1B67C511C);
          break;
      }
      return v1;
    case 2:
      char v1 = &type metadata for vfx_virtual.half4;
      switch((char)v15)
      {
        case 1:
        case 4:
          goto LABEL_10;
        case 2:
          char v1 = (ValueMetadata *)MEMORY[0x1E4FBB470];
          break;
        case 3:
          char v1 = (ValueMetadata *)MEMORY[0x1E4FBB390];
          break;
        case 5:
          char v1 = (ValueMetadata *)MEMORY[0x1E4FBC4C0];
          break;
        default:
          return v1;
      }
      return v1;
    case 3:
      return *(ValueMetadata **)(v15 + 40);
    case 4:
      return v1;
    case 5:
      unint64_t v9 = sub_1B68EB774(v15);
      sub_1B69B27D0(v9);
      if (!v10)
      {
        uint64_t v20 = 0;
        unint64_t v21 = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        *(void *)&long long v19 = v9;
        sub_1B6E32B18();
        while (1)
        {
LABEL_28:
          sub_1B6E32BE8();
          __break(1u);
LABEL_29:
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B6E32B18();
        }
      }
      char v1 = v10;
      sub_1B678FC34(v9);
      break;
    case 6:
      if (!(v16 | v17 | (unint64_t)v15 | *((void *)&v15 + 1))) {
        goto LABEL_28;
      }
LABEL_14:
      char v1 = &type metadata for vfx_virtual.half4;
      break;
    default:
      switch((char)v15)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          uint64_t v2 = &qword_1EB980E90;
          uint64_t v3 = MEMORY[0x1E4FBB470];
          uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
          break;
        case 5:
        case 7:
          uint64_t v2 = (unint64_t *)&qword_1EB980EF0;
          uint64_t v3 = MEMORY[0x1E4FBB470];
          uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
          break;
        default:
LABEL_10:
          uint64_t v2 = (unint64_t *)&qword_1EB980EB0;
          uint64_t v3 = MEMORY[0x1E4FBB470];
          uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
          break;
      }
      sub_1B6906D40(0, v2, (uint64_t (*)(void))sub_1B6645830, v3, v4);
      return (ValueMetadata *)v11;
  }
  return v1;
}

uint64_t sub_1B68EC0AC(uint64_t a1)
{
  sub_1B6906CE8(v1, (uint64_t)v10);
  uint64_t v3 = v10[0];
  unint64_t v4 = v10[1];
  unint64_t v5 = v10[2];
  sub_1B6906CE8(v1, (uint64_t)&v11);
  uint64_t v6 = v11;
  switch(v15)
  {
    case 1:
      uint64_t v8 = v12;
      unint64_t v9 = v13;
      sub_1B6E33928();
      sub_1B67C525C(v3, v4, v5);
      sub_1B68EB57C(a1, v6, v8, v9);
      return sub_1B6906D00((uint64_t)v1, (void (*)(void, void, void, void, void))sub_1B67C511C);
    case 3:
      sub_1B6E33928();
      swift_retain();
      sub_1B6E32738();
      if (!swift_conformsToProtocol2())
      {
        __break(1u);
        JUMPOUT(0x1B68EC2E4);
      }
      sub_1B6E33928();
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      return sub_1B6906D00((uint64_t)v1, (void (*)(void, void, void, void, void))sub_1B67C511C);
    case 4:
      sub_1B6E33928();
      sub_1B6E318B8();
      return sub_1B6E318B8();
    case 5:
      sub_1B6E33928();
      return sub_1B68EB978(a1, v6);
    case 6:
      if (v13 | v14 | v11 | v12) {
        goto LABEL_9;
      }
      return sub_1B6E33928();
    default:
LABEL_9:
      sub_1B6E33928();
      return sub_1B6E33928();
  }
}

uint64_t sub_1B68EC300()
{
  sub_1B6906CE8(v0, (uint64_t)v3);
  sub_1B6E33918();
  sub_1B68EC0AC((uint64_t)&v2);
  return sub_1B6E33988();
}

uint64_t sub_1B68EC350(uint64_t a1)
{
  sub_1B6906CE8(v1, (uint64_t)v4);
  return sub_1B68EC0AC(a1);
}

uint64_t sub_1B68EC390()
{
  sub_1B6906CE8(v0, (uint64_t)v3);
  sub_1B6E33918();
  sub_1B68EC0AC((uint64_t)&v2);
  return sub_1B6E33988();
}

uint64_t sub_1B68EC3E4(long long *a1, long long *a2)
{
  sub_1B6906CE8(a1, (uint64_t)v4);
  sub_1B6906CE8(a2, (uint64_t)v5);
  return sub_1B69012F0(v4, v5) & 1;
}

uint64_t sub_1B68EC430()
{
  return sub_1B6E31BD8();
}

uint64_t sub_1B68EC490()
{
  return sub_1B6E31B38();
}

uint64_t sub_1B68EC4E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB039C(*a1, *a2);
}

uint64_t sub_1B68EC4EC()
{
  uint64_t v1 = 1752457584;
  if (*v0 != 1) {
    uint64_t v1 = 0x746E6572727563;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746365726964;
  }
}

uint64_t sub_1B68EC53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6902628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B68EC564(uint64_t a1)
{
  unint64_t v2 = sub_1B6905568();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68EC5A0(uint64_t a1)
{
  unint64_t v2 = sub_1B6905568();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68EC5DC(uint64_t a1)
{
  unint64_t v2 = sub_1B690546C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68EC618(uint64_t a1)
{
  unint64_t v2 = sub_1B690546C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68EC654()
{
  return 12383;
}

uint64_t sub_1B68EC664(uint64_t a1)
{
  unint64_t v2 = sub_1B6905514();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68EC6A0(uint64_t a1)
{
  unint64_t v2 = sub_1B6905514();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68EC6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B68EC75C(uint64_t a1)
{
  unint64_t v2 = sub_1B69054C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68EC798(uint64_t a1)
{
  unint64_t v2 = sub_1B69054C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68EC7D4()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B6E33918();
  if (v1)
  {
    sub_1B6E33928();
    if (v1 == 1) {
      sub_1B6E318B8();
    }
  }
  else
  {
    sub_1B6E33928();
    sub_1B6E33958();
    sub_1B6E33958();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B68EC880()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1)
    {
      sub_1B6E33928();
      return sub_1B6E318B8();
    }
    else
    {
      return sub_1B6E33928();
    }
  }
  else
  {
    sub_1B6E33928();
    sub_1B6E33958();
    return sub_1B6E33958();
  }
}

uint64_t sub_1B68EC920()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B6E33918();
  if (v1)
  {
    sub_1B6E33928();
    if (v1 == 1) {
      sub_1B6E318B8();
    }
  }
  else
  {
    sub_1B6E33928();
    sub_1B6E33958();
    sub_1B6E33958();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B68EC9C8(uint64_t a1, uint64_t a2)
{
  return sub_1B69021B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void sub_1B68EC9E4(unint64_t a1)
{
  switch(a1 >> 60)
  {
    case 7uLL:
      int v2 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x21);
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x21))
      {
        if (v2 == 1)
        {
          type metadata accessor for __vfx_sampler2d(0);
        }
        else
        {
          if (v2 != 2)
          {
            sub_1B6E32BE8();
            __break(1u);
            JUMPOUT(0x1B68ECBB4);
          }
          type metadata accessor for __vfx_sampler3d(0);
        }
      }
      else
      {
        type metadata accessor for __vfx_sampler1d(0);
      }
      break;
    case 0xDuLL:
      sub_1B6906CE8((long long *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 16), (uint64_t)v3);
      sub_1B6906D00((uint64_t)v3, (void (*)(void, void, void, void, void))sub_1B67C51E0);
      sub_1B68EBB58();
      sub_1B6906D00((uint64_t)v3, (void (*)(void, void, void, void, void))sub_1B67C511C);
      break;
    case 0xEuLL:
      uint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B665A7E8(v1);
      break;
    case 0xFuLL:
      if (a1 == 0xF000000000000000) {
        type metadata accessor for frame_constants(0);
      }
      break;
    default:
      return;
  }
}

uint64_t sub_1B68ECBF4(unint64_t a1)
{
  sub_1B6E33998();
  switch(a1 >> 60)
  {
    case 1uLL:
    case 3uLL:
    case 0xAuLL:
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 2uLL:
    case 8uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xFuLL:
      sub_1B6E33928();
      break;
    case 4uLL:
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E318B8();
      sub_1B6E33938();
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 6uLL:
      sub_1B6E33928();
      sub_1B6E318B8();
      break;
    case 7uLL:
      int v2 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B6E33928();
      if (v2)
      {
        sub_1B6E33928();
        if (v2 == 1) {
          sub_1B6E318B8();
        }
      }
      else
      {
        sub_1B6E33928();
        sub_1B6E33958();
        sub_1B6E33958();
      }
      sub_1B6E33938();
      sub_1B6E33938();
      sub_1B6E33938();
      break;
    case 9uLL:
      int v3 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E318B8();
      if (v3 != 5) {
        sub_1B6E33938();
      }
      sub_1B6E33938();
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 0xDuLL:
      sub_1B6906CE8((long long *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 16), (uint64_t)v12);
      sub_1B6E33928();
      sub_1B6906D00((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1B67C51E0);
      sub_1B68EC0AC((uint64_t)v5);
      sub_1B6906D00((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1B67C511C);
      break;
    case 0xEuLL:
      sub_1B6E33928();
      sub_1B6E318B8();
      sub_1B6E33928();
      break;
    default:
      sub_1B6E33928();
      sub_1B6E33928();
      break;
  }
  long long v9 = v5[2];
  long long v10 = v5[3];
  uint64_t v11 = v6;
  long long v7 = v5[0];
  long long v8 = v5[1];
  return sub_1B6E33978();
}

uint64_t sub_1B68ED020(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 60)
  {
    case 1uLL:
      sub_1B664D9F0((a2 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v7);
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      sub_1B6E32738();
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      sub_1B66490B8((uint64_t)v7);
      swift_release();
      return swift_bridgeObjectRelease();
    case 2uLL:
      sub_1B664D9F0((a2 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v7);
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      return sub_1B66490B8((uint64_t)v7);
    case 3uLL:
      sub_1B6E33928();
      sub_1B6E33958();
      sub_1B6E33958();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E32738();
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_release();
      return swift_bridgeObjectRelease_n();
    case 4uLL:
      sub_1B6E33928();
      sub_1B6E33958();
      sub_1B6E33958();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E32738();
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    case 5uLL:
      sub_1B6E33928();
      sub_1B6E33928();
      goto LABEL_32;
    case 6uLL:
      sub_1B6E33928();
      sub_1B6E33928();
      goto LABEL_15;
    case 7uLL:
      int v4 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B6E33928();
      if (v4)
      {
        sub_1B6E33928();
        if (v4 == 1) {
          sub_1B6E318B8();
        }
      }
      else
      {
        sub_1B6E33928();
        sub_1B6E33958();
        sub_1B6E33958();
      }
      sub_1B6E33938();
      sub_1B6E33938();
      return sub_1B6E33938();
    case 8uLL:
      int v5 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B6E33928();
      if (!v5) {
        goto LABEL_22;
      }
      if (v5 != 1) {
        goto LABEL_32;
      }
      sub_1B6E33928();
LABEL_15:
      uint64_t result = sub_1B6E318B8();
      break;
    case 9uLL:
      int v6 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E32738();
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      if (v6 != 5) {
        sub_1B6E33938();
      }
LABEL_26:
      sub_1B6E33938();
      swift_release();
      return swift_bridgeObjectRelease();
    case 0xAuLL:
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E32738();
      sub_1B6E33928();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_release();
      return swift_bridgeObjectRelease_n();
    case 0xBuLL:
    case 0xCuLL:
LABEL_22:
      sub_1B6E33928();
      sub_1B6E33958();
      return sub_1B6E33958();
    case 0xDuLL:
      sub_1B6906CE8((long long *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 16), (uint64_t)v7);
      sub_1B6E33928();
      sub_1B6906D00((uint64_t)v7, (void (*)(void, void, void, void, void))sub_1B67C51E0);
      sub_1B68EC0AC(a1);
      return sub_1B6906D00((uint64_t)v7, (void (*)(void, void, void, void, void))sub_1B67C511C);
    case 0xEuLL:
      sub_1B6E33928();
      sub_1B6E318B8();
      goto LABEL_32;
    case 0xFuLL:
      goto LABEL_32;
    default:
      sub_1B6E33928();
LABEL_32:
      uint64_t result = sub_1B6E33928();
      break;
  }
  return result;
}

uint64_t sub_1B68ED704(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v38 = a4;
  uint64_t v34 = a3;
  uint64_t v35 = a2;
  int v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1B6906D40(0, &qword_1E9DD2388, (uint64_t (*)(void))sub_1B690546C, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v29 = (char *)&v27 - v8;
  sub_1B6906D40(0, &qword_1E9DD2390, (uint64_t (*)(void))sub_1B69054C0, (uint64_t)&type metadata for ScriptLocation.EntityLocator.PathCodingKeys, v5);
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v27 - v11;
  sub_1B6906D40(0, &qword_1E9DD2398, (uint64_t (*)(void))sub_1B6905514, (uint64_t)&type metadata for ScriptLocation.EntityLocator.DirectCodingKeys, v5);
  uint64_t v14 = v13;
  uint64_t v28 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v27 - v16;
  sub_1B6906D40(0, &qword_1E9DD23A0, (uint64_t (*)(void))sub_1B6905568, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CodingKeys, v5);
  uint64_t v19 = v18;
  uint64_t v36 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20);
  unint64_t v22 = (char *)&v27 - v21;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6905568();
  sub_1B6E33A88();
  if (!(_BYTE)v38)
  {
    uint64_t v24 = v28;
    char v39 = 0;
    sub_1B6905514();
    sub_1B6E32ED8();
    uint64_t v37 = v35;
    sub_1B6657A10();
    sub_1B6E32FA8();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v22, v19);
  }
  if (v38 == 1)
  {
    char v40 = 1;
    sub_1B69054C0();
    sub_1B6E32ED8();
    uint64_t v23 = v31;
    sub_1B6E32F48();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v22, v19);
  }
  char v41 = 2;
  sub_1B690546C();
  uint64_t v26 = v29;
  sub_1B6E32ED8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v22, v19);
}

uint64_t sub_1B68EDB94()
{
  unint64_t v1 = *v0;
  sub_1B6E33918();
  sub_1B68ED020((uint64_t)v3, v1);
  return sub_1B6E33988();
}

uint64_t sub_1B68EDBDC(uint64_t a1)
{
  return sub_1B68ED020(a1, *v1);
}

uint64_t sub_1B68EDBE4()
{
  unint64_t v1 = *v0;
  sub_1B6E33918();
  sub_1B68ED020((uint64_t)v3, v1);
  return sub_1B6E33988();
}

uint64_t sub_1B68EDC28(unint64_t *a1, unint64_t *a2)
{
  return sub_1B690176C(*a1, *a2);
}

uint64_t sub_1B68EDC34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6904DE8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B68EDC64(void *a1)
{
  return sub_1B68ED704(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1B68EDC84(void *a1, unint64_t a2)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  switch(a2 >> 60)
  {
    case 1uLL:
      uint64_t v4 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v5 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 16;
      uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v40 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      long long v45 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      char v8 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x58);
      __int16 v9 = *(_WORD *)(v4 + 90);
      sub_1B664D9F0(v5, (uint64_t)v57);
      sub_1B62C550C((uint64_t)v58, v59);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E332A8();
      if (!v2)
      {
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B6649174();
        sub_1B6E332B8();
        uint64_t v51 = v40;
        uint64_t v52 = v6;
        long long v53 = v45;
        uint64_t v54 = v7;
        char v55 = v8;
        __int16 v56 = v9;
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B690622C();
        sub_1B6E332B8();
      }
      sub_1B66490B8((uint64_t)v57);
      goto LABEL_30;
    case 2uLL:
      sub_1B664D9F0((a2 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v51);
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6E332A8();
      if (!v2)
      {
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B6649174();
        sub_1B6E332B8();
      }
      sub_1B66490B8((uint64_t)&v51);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
    case 3uLL:
      uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v42 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      long long v47 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      char v18 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      __int16 v19 = *(_WORD *)(v15 + 66);
      sub_1B62C550C((uint64_t)v58, v59);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E332A8();
      if (!v2)
      {
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B6657A10();
        sub_1B6E332B8();
        uint64_t v51 = v42;
        uint64_t v52 = v16;
        long long v53 = v47;
        uint64_t v54 = v17;
        char v55 = v18;
        __int16 v56 = v19;
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B690622C();
        sub_1B6E332B8();
      }
      goto LABEL_24;
    case 4uLL:
      uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v48 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v39 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v43 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v21 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      __int16 v22 = *(_WORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x42);
      char v23 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x44);
      sub_1B62C550C((uint64_t)v58, v59);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E332A8();
      if (!v2)
      {
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B6657A10();
        sub_1B6E332B8();
        uint64_t v51 = v43;
        uint64_t v52 = v20;
        long long v53 = v48;
        uint64_t v54 = v39;
        char v55 = v21;
        __int16 v56 = v22;
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B690622C();
        sub_1B6E332B8();
        LOBYTE(v51) = v23;
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B66C6494();
        sub_1B6E332B8();
      }
LABEL_30:
      swift_release();
      goto LABEL_31;
    case 7uLL:
      uint64_t v24 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v49 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      char v26 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x23);
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6E332A8();
      if (v2) {
        return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
      }
      uint64_t v51 = v24;
      uint64_t v52 = v25;
      LOBYTE(v53) = v49;
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6906368();
      sub_1B6E332B8();
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B688050C();
      sub_1B6E332B8();
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B66C63C0();
      sub_1B6E332B8();
      LOBYTE(v51) = v26;
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B66C6340();
      break;
    case 8uLL:
      uint64_t v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v29 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6E332A8();
      if (v2) {
        return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
      }
      uint64_t v51 = v27;
      uint64_t v52 = v28;
      LOBYTE(v53) = v29;
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6906368();
      break;
    case 9uLL:
      uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v41 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v46 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      char v12 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      __int16 v38 = *(_WORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x3A);
      char v13 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
      sub_1B62C550C((uint64_t)v58, v59);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E332A8();
      if (!v2)
      {
        uint64_t v51 = v41;
        uint64_t v52 = v10;
        long long v53 = v46;
        uint64_t v54 = v11;
        char v55 = v12;
        __int16 v56 = v38;
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B690622C();
        sub_1B6E332B8();
        LOBYTE(v51) = v13;
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B62D86B8(0, &qword_1E9DD23D0, (uint64_t)&type metadata for EntitySpace, MEMORY[0x1E4FBB718]);
        sub_1B69062D4();
        sub_1B6E332B8();
      }
      goto LABEL_24;
    case 0xAuLL:
      uint64_t v30 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v31 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v32 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v44 = v31;
      long long v50 = *(_OWORD *)(v30 + 32);
      uint64_t v33 = *(void *)(v30 + 48);
      char v34 = *(unsigned char *)(v30 + 56);
      __int16 v35 = *(_WORD *)(v30 + 58);
      sub_1B62C550C((uint64_t)v58, v59);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E332A8();
      if (!v2)
      {
        uint64_t v51 = v44;
        uint64_t v52 = v32;
        long long v53 = v50;
        uint64_t v54 = v33;
        char v55 = v34;
        __int16 v56 = v35;
        sub_1B62C550C((uint64_t)v58, v59);
        sub_1B690622C();
        sub_1B6E332B8();
      }
LABEL_24:
      swift_release();
LABEL_31:
      swift_bridgeObjectRelease();
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
    case 0xBuLL:
    case 0xCuLL:
      uint64_t v36 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6E332A8();
      if (v2) {
        return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
      }
      uint64_t v51 = v36;
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6657A10();
      break;
    case 0xEuLL:
      uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6E332A8();
      if (v2) {
        return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
      }
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6E33268();
      uint64_t v51 = v14;
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6906280();
      break;
    case 0xFuLL:
      sub_1B62C550C((uint64_t)v58, v59);
      sub_1B6E332A8();
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
    default:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B68EE774);
  }
  sub_1B6E332B8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
}

unint64_t sub_1B68EE7B4@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1B69055BC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B68EE7E0(void *a1)
{
  return sub_1B68EDC84(a1, *v1);
}

uint64_t sub_1B68EE7FC()
{
  return sub_1B6E31BD8();
}

uint64_t sub_1B68EE85C()
{
  return sub_1B6E31B38();
}

uint64_t sub_1B68EE8AC()
{
  unsigned int v1 = *v0 - 1;
  if (v1 <= 2) {
    return qword_1B6E93D50[(char)v1];
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68EE928(void *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v16 = a5;
  int v17 = a3;
  v15[1] = a4;
  sub_1B6906D40(0, &qword_1E9DD2408, (uint64_t (*)(void))sub_1B6906640, (uint64_t)&type metadata for ScriptParameter.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  char v13 = (char *)v15 - v12;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906640();
  sub_1B6E33A88();
  uint64_t v22 = a2;
  char v21 = 0;
  sub_1B690673C();
  sub_1B6E32FA8();
  if (!v5)
  {
    char v20 = v17;
    char v19 = 1;
    sub_1B6906790();
    sub_1B6E32FA8();
    char v18 = 2;
    sub_1B6E32F28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B68EEB24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB0E28(*a1, *a2);
}

uint64_t sub_1B68EEB30()
{
  unint64_t v1 = 0x737365636361;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_1B68EEB8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6902768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B68EEBB4(uint64_t a1)
{
  unint64_t v2 = sub_1B6906640();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68EEBF0(uint64_t a1)
{
  unint64_t v2 = sub_1B6906640();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68EEC2C()
{
  unint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33918();
  sub_1B68ED020((uint64_t)v4, v1);
  sub_1B6E33938();
  sub_1B6E33938();
  if (v2 != 1) {
    sub_1B6E33928();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B68EECC8(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 24);
  sub_1B68ED020(a1, *(void *)v1);
  sub_1B6E33938();
  if (v2 == 1) {
    return sub_1B6E33938();
  }
  sub_1B6E33938();
  return sub_1B6E33928();
}

uint64_t sub_1B68EED34()
{
  unint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33918();
  sub_1B68ED020((uint64_t)v4, v1);
  sub_1B6E33938();
  sub_1B6E33938();
  if (v2 != 1) {
    sub_1B6E33928();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B68EEDCC(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  int v5 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 24);
  char v8 = sub_1B690176C(*(void *)a1, *(void *)a2);
  uint64_t result = 0;
  if ((v8 & 1) != 0 && v2 == v5)
  {
    if (v4)
    {
      if (v7) {
        return 1;
      }
    }
    else
    {
      if (v3 == v6) {
        char v10 = v7;
      }
      else {
        char v10 = 1;
      }
      if ((v10 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B68EEE58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1B69063BC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_1B68EEE94(void *a1)
{
  return sub_1B68EE928(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1B68EEEBC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, void *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v11 = v10;
  uint64_t v12 = a5;
  unsigned __int8 v13 = a3;
  uint64_t v45 = result;
  uint64_t v14 = a9;
  uint64_t v15 = a10;
  int64_t v16 = *(void *)(a6 + 16);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (v16)
  {
    char v39 = a8;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1B6C3C728(0, v16, 0);
    uint64_t v17 = v48;
    char v19 = (unsigned char *)(a6 + 56);
    do
    {
      unint64_t v20 = *((void *)v19 - 3);
      char v21 = *(v19 - 16);
      uint64_t v22 = *((void *)v19 - 1);
      char v23 = *v19;
      unint64_t result = sub_1B62C6AA8(v20);
      unint64_t v25 = *(void *)(v48 + 16);
      unint64_t v24 = *(void *)(v48 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t result = sub_1B6C3C728(v24 > 1, v25 + 1, 1);
      }
      *(void *)(v48 + 16) = v25 + 1;
      uint64_t v26 = v48 + 32 * v25;
      *(void *)(v26 + 32) = v20;
      *(unsigned char *)(v26 + 40) = v21;
      *(void *)(v26 + 48) = v22;
      *(unsigned char *)(v26 + 56) = v23;
      v19 += 64;
      --v16;
    }
    while (v16);
    uint64_t v14 = a9;
    uint64_t v11 = v10;
    uint64_t v15 = a10;
    uint64_t v12 = a5;
    unsigned __int8 v13 = a3;
    a8 = v39;
  }
  if (a10 != 2)
  {
    if (a8)
    {
      uint64_t v32 = sub_1B6B10FB0(a4, v12, a6, v13);
      if (v11) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v12 = v33;
      a4 = v32;
      int v34 = v13;
      if (!v13) {
        goto LABEL_17;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      int v34 = v13;
      if (!v13)
      {
LABEL_17:
        uint64_t v36 = v17;
        uint64_t v37 = type metadata accessor for CScriptCodeGen();
        goto LABEL_18;
      }
    }
    if (v34 == 1)
    {
      uint64_t v35 = type metadata accessor for MetalScriptCodeGen();
      uint64_t v36 = v17;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v35 + 128))(&v49, v45, a2, a4, v12, 1, a7 & 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v36 = v17;
    uint64_t v37 = type metadata accessor for SwiftScriptCodeGen();
LABEL_18:
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v37 + 128))(&v49, v45, a2, a4, v12, 1, a7 & 1, v36, v15);
    swift_bridgeObjectRelease();
    char v38 = sub_1B6E334B8();
    unint64_t result = swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      unint64_t v28 = *((void *)&v51 + 1);
      uint64_t v31 = v51;
      unint64_t v29 = *((void *)&v50 + 1);
      uint64_t v27 = v50;
      uint64_t v30 = v49;
      goto LABEL_21;
    }
LABEL_19:
    sub_1B67BD9F0((uint64_t)&v49, 2, a10 == 0, v52);
    uint64_t v55 = v49;
    sub_1B62D8C3C((uint64_t)&v55);
    long long v54 = v50;
    sub_1B62C7BF4((uint64_t)&v54);
    long long v53 = v51;
    unint64_t result = sub_1B62C7BF4((uint64_t)&v53);
    uint64_t v31 = v52[3];
    unint64_t v28 = v52[4];
    uint64_t v27 = v52[1];
    unint64_t v29 = v52[2];
    uint64_t v30 = v52[0];
LABEL_21:
    uint64_t v17 = v36;
    goto LABEL_22;
  }
  uint64_t v27 = 0;
  unint64_t v28 = 0xE200000000000000;
  unint64_t v29 = 0xE000000000000000;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v31 = 11565;
LABEL_22:
  *uint64_t v14 = v30;
  v14[1] = v27;
  v14[2] = v29;
  v14[3] = v31;
  v14[4] = v28;
  v14[5] = v17;
  v14[6] = 0;
  return result;
}

uint64_t sub_1B68EF1F8()
{
  sub_1B6E33998();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B67519BC();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1B6CE208C((uint64_t)v14, inited);
  swift_setDeallocating();
  sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 32);
  sub_1B6E33928();
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B62B7EB4(0, v3, 0);
    uint64_t v5 = 32;
    uint64_t v4 = v13;
    do
    {
      unint64_t v6 = *(void *)(v2 + v5);
      sub_1B6E33998();
      sub_1B62C6AA8(v6);
      sub_1B68ECBF4(v6);
      sub_1B6E33928();
      long long v23 = v18;
      long long v24 = v19;
      uint64_t v25 = v20;
      long long v21 = v16;
      long long v22 = v17;
      uint64_t v7 = sub_1B6E33978();
      sub_1B62C6A70(v6);
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v8 = *(void *)(v13 + 24);
      if (v9 >= v8 >> 1) {
        sub_1B62B7EB4(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v13 + 16) = v9 + 1;
      *(void *)(v13 + 8 * v9 + 32) = v7;
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1B6E33928();
  uint64_t v10 = *(void *)(v4 + 16);
  if (v10)
  {
    uint64_t v11 = v4 + 32;
    do
    {
      v11 += 8;
      sub_1B6E33928();
      --v10;
    }
    while (v10);
  }
  swift_bridgeObjectRelease();
  long long v17 = v14[1];
  long long v18 = v14[2];
  long long v19 = v14[3];
  uint64_t v20 = v15;
  long long v16 = v14[0];
  return sub_1B6E33978();
}

void *sub_1B68EF498()
{
  uint64_t v1 = *(void *)(v0 + 32);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    long long v16 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3D508(0, v2, 0);
    int64_t v3 = v16;
    uint64_t v4 = (unsigned char *)(v1 + 56);
    do
    {
      unint64_t v5 = *((void *)v4 - 3);
      char v6 = *(v4 - 16);
      uint64_t v7 = *((void *)v4 - 1);
      char v8 = *v4;
      sub_1B62C6AA8(v5);
      unint64_t v10 = v16[2];
      unint64_t v9 = v16[3];
      if (v10 >= v9 >> 1) {
        sub_1B6C3D508(v9 > 1, v10 + 1, 1);
      }
      v16[2] = v10 + 1;
      uint64_t v11 = &v16[8 * v10];
      v11[4] = v5;
      *((unsigned char *)v11 + 40) = v6;
      v11[6] = v7;
      *((unsigned char *)v11 + 56) = v8;
      v4 += 32;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void **)(v0 + 24);
    if (v12[2])
    {
      uint64_t v13 = v12[4];
      uint64_t v14 = v12[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
    int64_t v3 = sub_1B6B10C0C(v13, v14, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)v0, 1, 3);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1B68EF604@<X0>(unsigned __int8 a1@<W0>, void *a2@<X8>)
{
  long long v23 = a2;
  unint64_t v5 = *(void **)(v2 + 24);
  if (v5[2])
  {
    uint64_t v7 = v5[4];
    uint64_t v6 = v5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  unsigned __int8 v8 = *(unsigned char *)v2;
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v11 = sub_1B68EF498();
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  sub_1B68EEEBC(v7, v6, v8, v10, v9, (uint64_t)v11, 1, *(void *)(*(void *)(v2 + 32) + 16) == 0, v20, a1);
  uint64_t v13 = v20[0];
  uint64_t v14 = v20[1];
  uint64_t v15 = v20[2];
  uint64_t v16 = v20[3];
  long long v19 = v21;
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  long long v18 = v23;
  *long long v23 = v13;
  v18[1] = v14;
  void v18[2] = v15;
  v18[3] = v16;
  *((_OWORD *)v18 + 2) = v19;
  v18[6] = v17;
  return result;
}

void sub_1B68EF71C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1B69005F4(a1, v2, ObjectType, a2);
}

uint64_t sub_1B68EF760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 32) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a2 + 40) = 0;
  uint64_t v3 = a2 + *(int *)(a1 + 36);
  uint64_t v4 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(a2 + 8) = 0xD0000000000000BFLL;
  *(void *)(a2 + 16) = 0x80000001B6F33DE0;
  *(void *)(a2 + 24) = &unk_1F0F797D0;
  return result;
}

void sub_1B68EF804()
{
}

uint64_t sub_1B68EF860()
{
  sub_1B6E33998();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B6E33928();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 32);
  sub_1B6E33928();
  int64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B62B7EB4(0, v5, 0);
    uint64_t v7 = 32;
    uint64_t v6 = v15;
    do
    {
      unint64_t v8 = *(void *)(v4 + v7);
      sub_1B6E33998();
      sub_1B62C6AA8(v8);
      sub_1B68ECBF4(v8);
      sub_1B6E33928();
      uint64_t v9 = sub_1B6E33978();
      sub_1B62C6A70(v8);
      unint64_t v11 = *(void *)(v15 + 16);
      unint64_t v10 = *(void *)(v15 + 24);
      if (v11 >= v10 >> 1) {
        sub_1B62B7EB4(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v15 + 16) = v11 + 1;
      *(void *)(v15 + 8 * v11 + 32) = v9;
      v7 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_1B6E33928();
  uint64_t v12 = *(void *)(v6 + 16);
  if (v12)
  {
    uint64_t v13 = v6 + 32;
    do
    {
      v13 += 8;
      sub_1B6E33928();
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  return sub_1B6E33978();
}

void *sub_1B68EFAD8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3D508(0, v2, 0);
    uint64_t v3 = v16;
    uint64_t v4 = (unsigned char *)(v1 + 56);
    do
    {
      unint64_t v5 = *((void *)v4 - 3);
      char v6 = *(v4 - 16);
      uint64_t v7 = *((void *)v4 - 1);
      char v8 = *v4;
      sub_1B62C6AA8(v5);
      unint64_t v10 = v16[2];
      unint64_t v9 = v16[3];
      if (v10 >= v9 >> 1) {
        sub_1B6C3D508(v9 > 1, v10 + 1, 1);
      }
      v16[2] = v10 + 1;
      unint64_t v11 = &v16[8 * v10];
      v11[4] = v5;
      *((unsigned char *)v11 + 40) = v6;
      v11[6] = v7;
      *((unsigned char *)v11 + 56) = v8;
      v4 += 32;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void **)(v0 + 16);
    if (v12[2])
    {
      uint64_t v13 = v12[4];
      uint64_t v14 = v12[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
    uint64_t v3 = sub_1B6B10C0C(v13, v14, *(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 24), 1, 3);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1B68EFC44@<X0>(unsigned __int8 a1@<W0>, void *a2@<X8>)
{
  long long v23 = a2;
  unint64_t v5 = *(void **)(v2 + 16);
  if (v5[2])
  {
    uint64_t v7 = v5[4];
    uint64_t v6 = v5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  unsigned __int8 v8 = *(unsigned char *)(v2 + 24);
  uint64_t v10 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  unint64_t v11 = sub_1B68EFAD8();
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  sub_1B68EEEBC(v7, v6, v8, v10, v9, (uint64_t)v11, 0, *(void *)(*(void *)(v2 + 32) + 16) == 0, v20, a1);
  uint64_t v13 = v20[0];
  uint64_t v14 = v20[1];
  uint64_t v15 = v20[2];
  uint64_t v16 = v20[3];
  long long v19 = v21;
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  long long v18 = v23;
  *long long v23 = v13;
  v18[1] = v14;
  void v18[2] = v15;
  v18[3] = v16;
  *((_OWORD *)v18 + 2) = v19;
  v18[6] = v17;
  return result;
}

void sub_1B68EFD5C()
{
}

uint64_t sub_1B68EFDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a2 + 40) = 0;
  uint64_t v3 = a2 + *(int *)(a1 + 36);
  uint64_t v4 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)a2 = 0xD0000000000000C3;
  *(void *)(a2 + 8) = 0x80000001B6F33F20;
  *(void *)(a2 + 16) = &unk_1F0F830B0;
  return result;
}

uint64_t sub_1B68EFE5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB3AB4(*a1, *a2);
}

uint64_t sub_1B68EFE68()
{
  return sub_1B6BCF674(*v0);
}

uint64_t sub_1B68EFE70(uint64_t a1)
{
  return sub_1B69E9910(a1, *v1);
}

uint64_t sub_1B68EFE78(uint64_t a1)
{
  return sub_1B69EAE50(a1, *v1);
}

uint64_t sub_1B68EFE80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B68EFEC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B68EFEF0(uint64_t a1)
{
  unint64_t v2 = sub_1B69067E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68EFF2C(uint64_t a1)
{
  unint64_t v2 = sub_1B69067E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68EFF68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  sub_1B6906D40(0, &qword_1EB9809E0, (uint64_t (*)(void))sub_1B69067E4, (uint64_t)&type metadata for ParticleInitScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v45 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v43 - v6;
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1F4188790](inited - 8, v9);
  unint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *unint64_t v11 = 0;
  *((void *)v11 + 4) = MEMORY[0x1E4FBC860];
  v11[40] = 0;
  uint64_t v13 = *(int *)(v12 + 44);
  uint64_t v48 = v11;
  uint64_t v14 = (uint64_t)&v11[v13];
  uint64_t v15 = type metadata accessor for ScriptIndex();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v18 = v16 + 56;
  long long v46 = (void *)v14;
  v17(v14, 1, 1, v15);
  uint64_t v19 = a1[3];
  long long v47 = a1;
  sub_1B62C14BC(a1, v19);
  sub_1B69067E4();
  uint64_t v20 = v49;
  sub_1B6E33A48();
  if (v20)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v47);
    uint64_t v25 = (uint64_t)v46;
    swift_bridgeObjectRelease();
    return sub_1B6907254(v25, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v43[1] = v18;
    long long v21 = v17;
    uint64_t v49 = v15;
    uint64_t v22 = v45;
    LOBYTE(v50) = 0;
    uint64_t v23 = sub_1B6E32D98();
    uint64_t v24 = v4;
    uint64_t v27 = (uint64_t)v48;
    *((void *)v48 + 1) = v23;
    *(void *)(v27 + 16) = v28;
    char v52 = 4;
    sub_1B639E88C();
    sub_1B6E32D78();
    uint64_t v29 = v22;
    char v30 = v50;
    if (v50 == 3) {
      char v30 = 2;
    }
    *(unsigned char *)uint64_t v27 = v30;
    LOBYTE(v50) = 5;
    *(unsigned char *)(v27 + 40) = sub_1B6E32D38() & 1;
    uint64_t v31 = v47;
    uint64_t v32 = v47[3];
    uint64_t v33 = v47[4];
    sub_1B62C14BC(v47, v32);
    if (sub_1B62BF5E0(1091, v32, v33))
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1B6E77050;
      LOBYTE(v50) = 2;
      uint64_t v35 = v7;
      uint64_t v36 = sub_1B6E32D98();
      uint64_t v37 = v49;
      *(void *)(v34 + 32) = v36;
      *(void *)(v34 + 40) = v38;
      *(void *)(v27 + 24) = v34;
    }
    else
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      char v52 = 1;
      sub_1B6906838((unint64_t *)&qword_1EB980308);
      uint64_t v35 = v7;
      sub_1B6E32DF8();
      uint64_t v37 = v49;
      *(void *)(v27 + 24) = v50;
    }
    char v52 = 3;
    sub_1B62B1EA8();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v24);
    uint64_t v39 = v44;
    if ((v51 & 1) == 0)
    {
      uint64_t v40 = v50;
      uint64_t v41 = v21;
      uint64_t v42 = v46;
      sub_1B6907254((uint64_t)v46, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *uint64_t v42 = v40;
      swift_storeEnumTagMultiPayload();
      v41((uint64_t)v42, 0, 1, v37);
    }
    sub_1B633A1CC(v27, v39, type metadata accessor for ParticleInitScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
    return sub_1B633A09C(v27, type metadata accessor for ParticleInitScript);
  }
}

uint64_t sub_1B68F0560(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScriptIndex();
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v25 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v25 - v9;
  sub_1B6906D40(0, &qword_1E9DD2428, (uint64_t (*)(void))sub_1B69067E4, (uint64_t)&type metadata for ParticleInitScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B69067E4();
  sub_1B6E33A88();
  uint64_t v17 = v2;
  LOBYTE(v30) = 0;
  uint64_t v18 = v28;
  sub_1B6E32F48();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  uint64_t v20 = v13;
  uint64_t v21 = v27;
  uint64_t v30 = *(void *)(v17 + 24);
  char v29 = 1;
  sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
  sub_1B6E32FA8();
  LOBYTE(v30) = *(unsigned char *)v17;
  char v29 = 4;
  sub_1B687BE68();
  sub_1B6E32FA8();
  LOBYTE(v30) = 5;
  sub_1B6E32F58();
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  sub_1B67BA970(v17 + *(int *)(inited + 36), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v21) == 1)
  {
    sub_1B6907254((uint64_t)v10, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    uint64_t v23 = v25;
    sub_1B633A1CC((uint64_t)v10, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B633A09C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      sub_1B633A09C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    }
    else
    {
      uint64_t v24 = *v23;
      sub_1B633A09C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      uint64_t v30 = v24;
      char v29 = 3;
      sub_1B6657A10();
      sub_1B6E32FA8();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v12);
}

uint64_t sub_1B68F0A10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68EFF68(a1, a2);
}

uint64_t sub_1B68F0A28(void *a1)
{
  return sub_1B68F0560(a1);
}

uint64_t sub_1B68F0A40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028FC();
  *a1 = result;
  return result;
}

void sub_1B68F0A78(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701080931;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED000073656D614ELL;
      uint64_t v3 = 0x6E6F6974636E7566;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "functionName");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000011;
      *(void *)(a1 + 8) = 0x80000001B6F2E5A0;
      break;
    case 4:
      *(void *)a1 = 0x65676175676E616CLL;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x5668706172477369;
      *(void *)(a1 + 8) = 0xE900000000000032;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_1B68F0B68()
{
  unint64_t result = 1701080931;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0x6E6F6974636E7566;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x65676175676E616CLL;
      break;
    case 5:
      unint64_t result = 0x5668706172477369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68F0C34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F0C64(uint64_t a1)
{
  unint64_t v2 = sub_1B69068BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68F0CA0(uint64_t a1)
{
  unint64_t v2 = sub_1B69068BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68F0CDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  sub_1B6906D40(0, &qword_1E9DD2430, (uint64_t (*)(void))sub_1B69068BC, (uint64_t)&type metadata for ParticleUpdateScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v40 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v38 - v6;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  MEMORY[0x1F4188790](updated - 8, v9);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v11 + 2) = &unk_1F0F82ED0;
  v11[24] = 0;
  *((void *)v11 + 4) = MEMORY[0x1E4FBC860];
  v11[40] = 0;
  uint64_t v13 = *(int *)(v12 + 44);
  uint64_t v42 = (uint64_t *)v11;
  uint64_t v14 = (uint64_t)&v11[v13];
  uint64_t v15 = type metadata accessor for ScriptIndex();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v18 = v16 + 56;
  uint64_t v41 = (void *)v14;
  v17(v14, 1, 1, v15);
  uint64_t v19 = a1[3];
  uint64_t v44 = a1;
  sub_1B62C14BC(a1, v19);
  sub_1B69068BC();
  uint64_t v20 = v43;
  sub_1B6E33A48();
  if (v20)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v44);
    uint64_t v24 = (uint64_t)v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B6907254(v24, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v38[1] = v18;
    uint64_t v43 = v17;
    uint64_t v21 = v40;
    LOBYTE(v45) = 0;
    uint64_t v22 = sub_1B6E32D98();
    uint64_t v23 = v7;
    uint64_t v26 = (uint64_t)v42;
    *uint64_t v42 = v22;
    *(void *)(v26 + 8) = v27;
    uint64_t v28 = v44[3];
    uint64_t v29 = v44[4];
    sub_1B62C14BC(v44, v28);
    if (sub_1B62BF5E0(1091, v28, v29))
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1B6E77050;
      LOBYTE(v45) = 2;
      *(void *)(v30 + 32) = sub_1B6E32D98();
      *(void *)(v30 + 40) = v31;
      *(void *)(v26 + 16) = v30;
      uint64_t v23 = v7;
    }
    else
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      char v47 = 1;
      sub_1B6906838((unint64_t *)&qword_1EB980308);
      sub_1B6E32DF8();
      *(void *)(v26 + 16) = v45;
    }
    uint64_t v32 = v15;
    uint64_t v33 = v43;
    char v47 = 4;
    sub_1B639E88C();
    sub_1B6E32D78();
    char v34 = v45;
    if (v45 == 3) {
      char v34 = 2;
    }
    *(unsigned char *)(v26 + 24) = v34;
    LOBYTE(v45) = 5;
    *(unsigned char *)(v26 + 40) = sub_1B6E32D38() & 1;
    char v47 = 3;
    sub_1B62B1EA8();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v4);
    uint64_t v35 = v39;
    if ((v46 & 1) == 0)
    {
      uint64_t v36 = v45;
      uint64_t v37 = v41;
      sub_1B6907254((uint64_t)v41, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *uint64_t v37 = v36;
      swift_storeEnumTagMultiPayload();
      v33((uint64_t)v37, 0, 1, v32);
    }
    sub_1B633A1CC(v26, v35, type metadata accessor for ParticleUpdateScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v44);
    return sub_1B633A09C(v26, type metadata accessor for ParticleUpdateScript);
  }
}

uint64_t sub_1B68F12AC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v30 = type metadata accessor for ScriptIndex();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30, v4);
  uint64_t v27 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v29 = (char *)&v26 - v8;
  sub_1B6906D40(0, &qword_1E9DD2440, (uint64_t (*)(void))sub_1B69068BC, (uint64_t)&type metadata for ParticleUpdateScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)&v26 - v13;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B69068BC();
  sub_1B6E33A88();
  uint64_t v15 = v2;
  LOBYTE(v32) = *(unsigned char *)(v2 + 24);
  char v33 = 4;
  sub_1B687BE68();
  uint64_t v16 = v31;
  sub_1B6E32FA8();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  uint64_t v18 = (uint64_t)v29;
  uint64_t v19 = v30;
  uint64_t v20 = v11;
  LOBYTE(v32) = 0;
  sub_1B6E32F48();
  uint64_t v32 = *(void *)(v15 + 16);
  char v33 = 1;
  sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
  sub_1B6E32FA8();
  LOBYTE(v32) = 5;
  sub_1B6E32F58();
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  uint64_t v22 = v18;
  sub_1B67BA970(v15 + *(int *)(updated + 36), v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v18, 1, v19) == 1)
  {
    sub_1B6907254(v18, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    uint64_t v23 = v18;
    uint64_t v24 = v27;
    sub_1B633A1CC(v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B633A09C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      sub_1B633A09C(v22, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    }
    else
    {
      uint64_t v25 = *v24;
      sub_1B633A09C(v22, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      uint64_t v32 = v25;
      char v33 = 3;
      sub_1B6657A10();
      sub_1B6E32FA8();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v10);
}

uint64_t sub_1B68F1768@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68F0CDC(a1, a2);
}

uint64_t sub_1B68F1780(void *a1)
{
  return sub_1B68F12AC(a1);
}

uint64_t sub_1B68F179C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B68F8B58(a1, a2);
}

uint64_t sub_1B68F17B4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B68F17E4(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1B6900BD8(a1, v2, ObjectType, a2);
}

void sub_1B68F1834()
{
}

uint64_t sub_1B68F1890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0xE000000000000000;
  *(unsigned char *)(a2 + 24) = 2;
  *(void *)(a2 + 32) = &unk_1F0F55708;
  *(_WORD *)(a2 + 40) = 0;
  uint64_t v2 = a2 + *(int *)(a1 + 40);
  uint64_t v3 = type metadata accessor for ScriptIndex();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(v2, 1, 1, v3);
}

uint64_t sub_1B68F192C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAD854(*a1, *a2);
}

uint64_t sub_1B68F1938()
{
  return sub_1B6BCED1C();
}

uint64_t sub_1B68F1940()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68F1A44()
{
  return sub_1B69EC0F8();
}

uint64_t sub_1B68F1A4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028FC();
  *a1 = result;
  return result;
}

void sub_1B68F1A84(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701080931;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED000073656D614ELL;
      uint64_t v3 = 0x6E6F6974636E7566;
      goto LABEL_3;
    case 2:
      *a1 = 0x65676175676E616CLL;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6574656D61726170;
      a1[1] = 0xEA00000000007372;
      break;
    case 4:
      *a1 = 0x6567617473;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x5668706172477369;
      a1[1] = 0xE900000000000032;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B68F1B68()
{
  uint64_t result = 1701080931;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F6974636E7566;
      break;
    case 2:
      uint64_t result = 0x65676175676E616CLL;
      break;
    case 3:
      uint64_t result = 0x6574656D61726170;
      break;
    case 4:
      uint64_t result = 0x6567617473;
      break;
    case 5:
      uint64_t result = 0x5668706172477369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68F1C38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F1C68(uint64_t a1)
{
  unint64_t v2 = sub_1B6906910();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68F1CA4(uint64_t a1)
{
  unint64_t v2 = sub_1B6906910();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68F1CE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1B6906D40(0, &qword_1E9DD2448, (uint64_t (*)(void))sub_1B6906910, (uint64_t)&type metadata for GraphScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v23 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for GraphScript(0);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = MEMORY[0x1E4FBC860];
  *((void *)v12 + 1) = 0;
  *((void *)v12 + 2) = 0xE000000000000000;
  v12[24] = 2;
  *((void *)v12 + 4) = &unk_1F0F555C0;
  *((_WORD *)v12 + 20) = 0;
  uint64_t v14 = &v12[*(int *)(v13 + 48)];
  uint64_t v15 = type metadata accessor for ScriptIndex();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906910();
  sub_1B6E33A48();
  if (!v2)
  {
    uint64_t v17 = v22;
    uint64_t v16 = v23;
    LOBYTE(v24) = 0;
    *((void *)v12 + 1) = sub_1B6E32D98();
    *((void *)v12 + 2) = v18;
    char v25 = 2;
    sub_1B639E88C();
    sub_1B6E32DF8();
    v12[24] = v24;
    sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    char v25 = 1;
    sub_1B6906838((unint64_t *)&qword_1EB980308);
    sub_1B6E32DF8();
    *((void *)v12 + 4) = v24;
    sub_1B62D86B8(0, &qword_1E9DD1268, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB320]);
    char v25 = 3;
    sub_1B69069B8(&qword_1E9DD2458, (void (*)(void))sub_1B6906964);
    sub_1B6E32DF8();
    *(void *)uint64_t v12 = v24;
    LOBYTE(v24) = 5;
    char v20 = sub_1B6E32D38();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v16);
    v12[41] = v20 & 1;
    sub_1B633A1CC((uint64_t)v12, v17, type metadata accessor for GraphScript);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B633A09C((uint64_t)v12, type metadata accessor for GraphScript);
}

uint64_t sub_1B68F2124(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6906D40(0, &qword_1E9DD2468, (uint64_t (*)(void))sub_1B6906910, (uint64_t)&type metadata for GraphScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906910();
  sub_1B6E33A88();
  LOBYTE(v14) = 0;
  sub_1B6E32F48();
  if (!v2)
  {
    uint64_t v14 = v3[4];
    char v13 = 1;
    sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
    sub_1B6E32FA8();
    LOBYTE(v14) = *((unsigned char *)v3 + 24);
    char v13 = 2;
    sub_1B687BE68();
    sub_1B6E32FA8();
    uint64_t v14 = *v3;
    char v13 = 3;
    sub_1B62D86B8(0, &qword_1E9DD1268, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB320]);
    sub_1B69069B8(&qword_1E9DD2470, (void (*)(void))sub_1B6906A48);
    sub_1B6E32FA8();
    LOBYTE(v14) = 5;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B68F2428@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68F1CE0(a1, a2);
}

uint64_t sub_1B68F2440(void *a1)
{
  return sub_1B68F2124(a1);
}

uint64_t sub_1B68F2458()
{
  sub_1B6E33998();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B6E33928();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33978();
}

uint64_t sub_1B68F259C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (void *)*((void *)v2 + 3);
  if (v5[2])
  {
    uint64_t v7 = v5[4];
    uint64_t v6 = v5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  unint64_t v8 = *((void *)v2 + 1);
  unint64_t v9 = *((void *)v2 + 2);
  int v10 = *v2;
  uint64_t v11 = sub_1B6B10C0C(v7, v6, v8, v9, *v2, 0, 3);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    uint64_t v40 = v8;
    uint64_t v41 = v9;
    int64_t v13 = v11[2];
    uint64_t v14 = MEMORY[0x1E4FBC860];
    if (v13)
    {
      int v37 = v10;
      uint64_t v38 = v5;
      unsigned int v39 = a1;
      uint64_t v45 = MEMORY[0x1E4FBC860];
      sub_1B6C3C728(0, v13, 0);
      uint64_t v14 = v45;
      uint64_t v15 = v11 + 7;
      do
      {
        unint64_t v16 = *((void *)v15 - 3);
        char v17 = *(v15 - 16);
        uint64_t v18 = *((void *)v15 - 1);
        char v19 = *v15;
        sub_1B62C6AA8(v16);
        uint64_t v45 = v14;
        unint64_t v21 = *(void *)(v14 + 16);
        unint64_t v20 = *(void *)(v14 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1B6C3C728(v20 > 1, v21 + 1, 1);
          uint64_t v14 = v45;
        }
        *(void *)(v14 + 16) = v21 + 1;
        uint64_t v22 = v14 + 32 * v21;
        *(void *)(v22 + 32) = v16;
        *(unsigned char *)(v22 + 40) = v17;
        *(void *)(v22 + 48) = v18;
        *(unsigned char *)(v22 + 56) = v19;
        v15 += 64;
        --v13;
      }
      while (v13);
      uint64_t v23 = a2;
      uint64_t v24 = v39;
      uint64_t v5 = v38;
      int v10 = v37;
    }
    else
    {
      uint64_t v24 = a1;
      uint64_t v23 = a2;
    }
    if (v24 == 2)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      unint64_t v26 = 0xE200000000000000;
      unint64_t v27 = 0xE000000000000000;
      uint64_t v28 = MEMORY[0x1E4FBC860];
      uint64_t v29 = 11565;
    }
    else
    {
      uint64_t v30 = v14;
      if (v5[2]) {
        swift_bridgeObjectRetain();
      }
      uint64_t v31 = sub_1B6B10FB0(v40, v41, (uint64_t)v11, v10);
      uint64_t v43 = v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v10)
      {
        if (v10 == 1) {
          uint64_t v33 = type metadata accessor for MetalScriptCodeGen();
        }
        else {
          uint64_t v33 = type metadata accessor for SwiftScriptCodeGen();
        }
      }
      else
      {
        uint64_t v33 = type metadata accessor for CScriptCodeGen();
      }
      uint64_t v34 = v33;
      if (v5[2])
      {
        uint64_t v36 = v5[4];
        uint64_t v35 = v5[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v36 = 0;
        uint64_t v35 = 0;
      }
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v34 + 128))(v44, v36, v35, v31, v43, 0, 0, v30, v24);
      uint64_t v14 = v30;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v29 = v44[3];
      unint64_t v26 = v44[4];
      uint64_t v25 = v44[1];
      unint64_t v27 = v44[2];
      uint64_t v28 = v44[0];
    }
    *uint64_t v23 = v28;
    v23[1] = v25;
    v23[2] = v27;
    v23[3] = v29;
    v23[4] = v26;
    v23[5] = v14;
    v23[6] = 0;
  }
  return result;
}

void sub_1B68F2898()
{
}

uint64_t sub_1B68F28F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 32) = 0;
  uint64_t v3 = a2 + *(int *)(a1 + 32);
  uint64_t v4 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(a2 + 8) = 0xD0000000000000C0;
  *(void *)(a2 + 16) = 0x80000001B6F33C80;
  *(void *)(a2 + 24) = &unk_1F0F5ED18;
  return result;
}

uint64_t sub_1B68F298C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BAE804(*a1, *a2);
}

uint64_t sub_1B68F2998()
{
  return sub_1B6BCF048(*v0);
}

uint64_t sub_1B68F29A4(uint64_t a1)
{
  return sub_1B69EBD24(a1, *v1);
}

uint64_t sub_1B68F29AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F29E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F2A14(uint64_t a1)
{
  unint64_t v2 = sub_1B6906A9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68F2A50(uint64_t a1)
{
  unint64_t v2 = sub_1B6906A9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68F2A8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  sub_1B6906D40(0, &qword_1E9DD2480, (uint64_t (*)(void))sub_1B6906A9C, (uint64_t)&type metadata for EmitterScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)v33 - v5;
  uint64_t v7 = type metadata accessor for EmitterScript(0);
  MEMORY[0x1F4188790](v7 - 8, v8);
  int v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *int v10 = 0;
  v10[32] = 0;
  uint64_t v12 = (uint64_t)&v10[*(int *)(v11 + 40)];
  uint64_t v13 = type metadata accessor for ScriptIndex();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = v14 + 56;
  int v37 = (void *)v12;
  v15(v12, 1, 1, v13);
  uint64_t v17 = a1[3];
  uint64_t v38 = a1;
  sub_1B62C14BC(a1, v17);
  sub_1B6906A9C();
  uint64_t v18 = v39;
  sub_1B6E33A48();
  if (v18)
  {
    uint64_t v21 = (uint64_t)v37;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
    return sub_1B6907254(v21, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v33[1] = v16;
    unsigned int v39 = v15;
    uint64_t v19 = v35;
    uint64_t v20 = v36;
    LOBYTE(v40) = 0;
    uint64_t v23 = (uint64_t)v10;
    *((void *)v10 + 1) = sub_1B6E32D98();
    *((void *)v10 + 2) = v24;
    char v42 = 4;
    sub_1B639E88C();
    sub_1B6E32D78();
    char v25 = v40;
    if (v40 == 3) {
      char v25 = 0;
    }
    *int v10 = v25;
    unint64_t v26 = v38;
    uint64_t v27 = v38[3];
    uint64_t v28 = v38[4];
    sub_1B62C14BC(v38, v27);
    if (sub_1B62BF5E0(1091, v27, v28))
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1B6E77050;
      LOBYTE(v40) = 2;
      *(void *)(v29 + 32) = sub_1B6E32D98();
      *(void *)(v29 + 40) = v30;
      *(void *)(v23 + 24) = v29;
    }
    else
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      char v42 = 1;
      sub_1B6906838((unint64_t *)&qword_1EB980308);
      sub_1B6E32DF8();
      *(void *)(v23 + 24) = v40;
    }
    char v42 = 3;
    sub_1B62B1EA8();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
    if ((v41 & 1) == 0)
    {
      uint64_t v31 = v40;
      uint64_t v32 = v37;
      sub_1B6907254((uint64_t)v37, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *uint64_t v32 = v31;
      swift_storeEnumTagMultiPayload();
      v39((uint64_t)v32, 0, 1, v13);
    }
    sub_1B633A1CC(v23, v34, type metadata accessor for EmitterScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
    return sub_1B633A09C(v23, type metadata accessor for EmitterScript);
  }
}

uint64_t sub_1B68F3024(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScriptIndex();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  MEMORY[0x1F4188790](v4, v5);
  unint64_t v26 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8, v8);
  int v10 = (char *)&v26 - v9;
  sub_1B6906D40(0, &qword_1E9DD2490, (uint64_t (*)(void))sub_1B6906A9C, (uint64_t)&type metadata for EmitterScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v26 - v15;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906A9C();
  sub_1B6E33A88();
  uint64_t v17 = v2;
  LOBYTE(v31) = 0;
  uint64_t v18 = v29;
  sub_1B6E32F48();
  if (!v18)
  {
    uint64_t v19 = (uint64_t)v10;
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    uint64_t v31 = *(void *)(v17 + 24);
    char v30 = 1;
    sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
    sub_1B6E32FA8();
    LOBYTE(v31) = *(unsigned char *)v17;
    char v30 = 4;
    sub_1B687BE68();
    sub_1B6E32FA8();
    uint64_t v22 = type metadata accessor for EmitterScript(0);
    sub_1B67BA970(v17 + *(int *)(v22 + 32), v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v21) == 1)
    {
      sub_1B6907254(v19, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
    }
    else
    {
      uint64_t v23 = v26;
      sub_1B633A1CC(v19, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1B633A09C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
        sub_1B633A09C(v19, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      }
      else
      {
        uint64_t v24 = *v23;
        sub_1B633A09C(v19, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
        uint64_t v31 = v24;
        char v30 = 3;
        sub_1B6657A10();
        sub_1B6E32FA8();
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1B68F3490@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68F2A8C(a1, a2);
}

uint64_t sub_1B68F34A8(void *a1)
{
  return sub_1B68F3024(a1);
}

void sub_1B68F34C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 16);
  if (v4)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1B6C166E4(v3);
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (uint64_t)(v3 + 4);
    do
    {
      uint64_t v8 = swift_unknownObjectRetain();
      sub_1B6900694(v8, v7, ObjectType, a2);
      swift_unknownObjectRelease();
      v7 += 32;
      --v4;
    }
    while (v4);
    *(void *)uint64_t v2 = v3;
  }
}

uint64_t sub_1B68F3564()
{
  sub_1B6E33998();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[3];
  sub_1B6E33928();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B6E33928();
  uint64_t v4 = *v0;
  sub_1B6E33928();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 32;
    do
    {
      unint64_t v7 = *(void *)(v4 + v6);
      sub_1B6E33998();
      sub_1B62C6AA8(v7);
      sub_1B68ECBF4(v7);
      sub_1B6E33928();
      sub_1B6E33978();
      sub_1B6E33928();
      sub_1B62C6A70(v7);
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return sub_1B6E33978();
}

void *sub_1B68F374C()
{
  uint64_t v1 = *(void *)v0;
  int64_t v2 = *(void *)(*(void *)v0 + 16);
  if (v2)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3D508(0, v2, 0);
    uint64_t v3 = v16;
    uint64_t v4 = (unsigned char *)(v1 + 56);
    do
    {
      unint64_t v5 = *((void *)v4 - 3);
      char v6 = *(v4 - 16);
      uint64_t v7 = *((void *)v4 - 1);
      char v8 = *v4;
      sub_1B62C6AA8(v5);
      unint64_t v10 = v16[2];
      unint64_t v9 = v16[3];
      if (v10 >= v9 >> 1) {
        sub_1B6C3D508(v9 > 1, v10 + 1, 1);
      }
      v16[2] = v10 + 1;
      uint64_t v11 = &v16[8 * v10];
      v11[4] = v5;
      *((unsigned char *)v11 + 40) = v6;
      v11[6] = v7;
      *((unsigned char *)v11 + 56) = v8;
      v4 += 32;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = (void *)*((void *)v0 + 3);
    if (v12[2])
    {
      uint64_t v13 = v12[4];
      uint64_t v14 = v12[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
    uint64_t v3 = sub_1B6B10C0C(v13, v14, *((void *)v0 + 1), *((void *)v0 + 2), v0[32], 1, 3);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1B68F38B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (a1 != 2)
  {
    uint64_t v12 = a1;
    if (*(void *)(*(void *)v2 + 16))
    {
      uint64_t v14 = *(void *)(v2 + 8);
      uint64_t v13 = *(void *)(v2 + 16);
      int v15 = *(unsigned __int8 *)(v2 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (*(void *)(*(void *)(v2 + 24) + 16)) {
        swift_bridgeObjectRetain();
      }
      uint64_t v29 = *(void *)(v2 + 8);
      uint64_t v30 = *(void *)(v2 + 16);
      uint64_t v31 = sub_1B68F374C();
      if (v3) {
        return swift_bridgeObjectRelease();
      }
      int v15 = *(unsigned __int8 *)(v2 + 32);
      uint64_t v14 = sub_1B6B10FB0(v29, v30, (uint64_t)v31, *(unsigned char *)(v5 + 32));
      uint64_t v13 = v33;
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v15)
    {
      if (v15 == 1) {
        uint64_t v16 = type metadata accessor for MetalScriptCodeGen();
      }
      else {
        uint64_t v16 = type metadata accessor for SwiftScriptCodeGen();
      }
    }
    else
    {
      uint64_t v16 = type metadata accessor for CScriptCodeGen();
    }
    uint64_t v17 = v16;
    uint64_t v18 = *(void **)(v5 + 24);
    if (v18[2])
    {
      uint64_t v39 = v18[4];
      uint64_t v41 = v18[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v41 = 0;
    }
    uint64_t v19 = sub_1B68F374C();
    if (!v4)
    {
      uint64_t v37 = v17;
      uint64_t v38 = v14;
      int64_t v20 = v19[2];
      if (v20)
      {
        uint64_t v40 = v13;
        unsigned int v34 = v12;
        uint64_t v35 = a2;
        uint64_t v36 = v19;
        uint64_t v44 = v7;
        sub_1B6C3C728(0, v20, 0);
        uint64_t v21 = v7;
        uint64_t v22 = v36 + 7;
        do
        {
          unint64_t v23 = *((void *)v22 - 3);
          char v42 = *(v22 - 16);
          uint64_t v24 = *((void *)v22 - 1);
          char v25 = *v22;
          sub_1B62C6AA8(v23);
          uint64_t v44 = v21;
          unint64_t v27 = *(void *)(v21 + 16);
          unint64_t v26 = *(void *)(v21 + 24);
          if (v27 >= v26 >> 1)
          {
            sub_1B6C3C728(v26 > 1, v27 + 1, 1);
            uint64_t v21 = v44;
          }
          *(void *)(v21 + 16) = v27 + 1;
          uint64_t v28 = v21 + 32 * v27;
          *(void *)(v28 + 32) = v23;
          *(unsigned char *)(v28 + 40) = v42;
          *(void *)(v28 + 48) = v24;
          *(unsigned char *)(v28 + 56) = v25;
          v22 += 64;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        a2 = v35;
        uint64_t v12 = v34;
        uint64_t v13 = v40;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = MEMORY[0x1E4FBC860];
      }
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v37 + 128))(v43, v39, v41, v38, v13, 0, 0, v21, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v43[3];
      unint64_t v9 = v43[4];
      uint64_t v8 = v43[1];
      unint64_t v10 = v43[2];
      uint64_t v7 = v43[0];
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = 0;
  unint64_t v9 = 0xE200000000000000;
  unint64_t v10 = 0xE000000000000000;
  uint64_t v11 = 11565;
LABEL_28:
  uint64_t result = swift_bridgeObjectRetain();
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v11;
  a2[4] = v9;
  a2[5] = result;
  a2[6] = 0;
  return result;
}

uint64_t sub_1B68F3BB8()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1B68F3BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0xE000000000000000;
  *(void *)(a2 + 24) = &unk_1F0F5C3B8;
  *(_WORD *)(a2 + 32) = 2;
  uint64_t v2 = a2 + *(int *)(a1 + 36);
  uint64_t v3 = type metadata accessor for ScriptIndex();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(v2, 1, 1, v3);
}

uint64_t sub_1B68F3C58()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68F3D38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

void sub_1B68F3D70(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701080931;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED000073656D614ELL;
      uint64_t v3 = 0x6E6F6974636E7566;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "functionName");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000011;
      *(void *)(a1 + 8) = 0x80000001B6F2E5A0;
      break;
    case 4:
      *(void *)a1 = 0x65676175676E616CLL;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_1B68F3E3C()
{
  unint64_t result = 1701080931;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0x6E6F6974636E7566;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x65676175676E616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68F3EE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F3F18(uint64_t a1)
{
  unint64_t v2 = sub_1B6906AF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68F3F54(uint64_t a1)
{
  unint64_t v2 = sub_1B6906AF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68F3F90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  sub_1B6906D40(0, &qword_1E9DD2498, (uint64_t (*)(void))sub_1B6906AF0, (uint64_t)&type metadata for SimpleScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v45 = v3;
  uint64_t v43 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  char v6 = (char *)&v37 - v5;
  uint64_t v7 = type metadata accessor for SimpleScript(0);
  MEMORY[0x1F4188790](v7 - 8, v8);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v10 = MEMORY[0x1E4FBC860];
  *((void *)v10 + 1) = 0;
  *((void *)v10 + 2) = 0xE000000000000000;
  *((void *)v10 + 3) = &unk_1F0F5C2C0;
  *((_WORD *)v10 + 16) = 2;
  uint64_t v12 = &v10[*(int *)(v11 + 44)];
  uint64_t v13 = type metadata accessor for ScriptIndex();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = v14 + 56;
  char v42 = v12;
  v15(v12, 1, 1, v13);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906AF0();
  uint64_t v44 = v6;
  uint64_t v17 = v46;
  sub_1B6E33A48();
  if (!v17)
  {
    uint64_t v39 = v16;
    uint64_t v40 = v13;
    char v46 = v15;
    uint64_t v18 = v42;
    uint64_t v19 = v43;
    LOBYTE(v47) = 0;
    int64_t v20 = v44;
    uint64_t v21 = v45;
    *((void *)v10 + 1) = sub_1B6E32D98();
    *((void *)v10 + 2) = v22;
    char v49 = 4;
    sub_1B639E88C();
    sub_1B6E32D78();
    uint64_t v24 = v20;
    char v25 = v47;
    if (v47 == 3) {
      char v25 = 2;
    }
    v10[32] = v25;
    uint64_t v26 = a1[3];
    uint64_t v27 = a1[4];
    sub_1B62C14BC(a1, v26);
    if (sub_1B62BF5E0(1091, v26, v27))
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1B6E77050;
      LOBYTE(v47) = 2;
      uint64_t v28 = v21;
      uint64_t v29 = v24;
      uint64_t v30 = sub_1B6E32D98();
      uint64_t v31 = v18;
      uint64_t v32 = v40;
      uint64_t v33 = v38;
      *(void *)(v38 + 32) = v30;
      *(void *)(v33 + 40) = v34;
      *((void *)v10 + 3) = v33;
    }
    else
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      char v49 = 1;
      sub_1B6906838((unint64_t *)&qword_1EB980308);
      uint64_t v28 = v21;
      uint64_t v29 = v24;
      sub_1B6E32DF8();
      *((void *)v10 + 3) = v47;
      uint64_t v31 = v18;
      uint64_t v32 = v40;
    }
    char v49 = 3;
    sub_1B62B1EA8();
    sub_1B6E32D78();
    uint64_t v35 = v46;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v29, v28);
    if ((v48 & 1) == 0)
    {
      uint64_t v36 = v47;
      sub_1B6907254((uint64_t)v31, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *(void *)uint64_t v31 = v36;
      swift_storeEnumTagMultiPayload();
      v35(v31, 0, 1, v32);
    }
    sub_1B633A1CC((uint64_t)v10, v41, type metadata accessor for SimpleScript);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B633A09C((uint64_t)v10, type metadata accessor for SimpleScript);
}

uint64_t sub_1B68F44CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScriptIndex();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v26 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8, v8);
  unint64_t v10 = (char *)&v26 - v9;
  sub_1B6906D40(0, &qword_1E9DD24A8, (uint64_t (*)(void))sub_1B6906AF0, (uint64_t)&type metadata for SimpleScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v26 - v15;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906AF0();
  sub_1B6E33A88();
  uint64_t v17 = v2;
  LOBYTE(v31) = 0;
  uint64_t v18 = v29;
  sub_1B6E32F48();
  if (!v18)
  {
    uint64_t v19 = (uint64_t)v10;
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    uint64_t v31 = *(void *)(v17 + 24);
    char v30 = 1;
    sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
    sub_1B6E32FA8();
    LOBYTE(v31) = *(unsigned char *)(v17 + 32);
    char v30 = 4;
    sub_1B687BE68();
    sub_1B6E32FA8();
    uint64_t v22 = type metadata accessor for SimpleScript(0);
    sub_1B67BA970(v17 + *(int *)(v22 + 36), v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v21) == 1)
    {
      sub_1B6907254(v19, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
    }
    else
    {
      unint64_t v23 = v26;
      sub_1B633A1CC(v19, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1B633A09C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
        sub_1B633A09C(v19, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      }
      else
      {
        uint64_t v24 = *v23;
        sub_1B633A09C(v19, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
        uint64_t v31 = v24;
        char v30 = 3;
        sub_1B6657A10();
        sub_1B6E32FA8();
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1B68F4938@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68F3F90(a1, a2);
}

uint64_t sub_1B68F4950(void *a1)
{
  return sub_1B68F44CC(a1);
}

uint64_t sub_1B68F4968()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B68F49C8()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B68F4A18@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = (int *)type metadata accessor for MetalFunctionScript(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(unsigned char *)(a1 + v2[8]) = 0;
  *(void *)(a1 + v2[7]) = &unk_1F0F7CEE0;
  *(void *)a1 = 0xD000000000000129;
  *(void *)(a1 + 8) = 0x80000001B6F3D5A0;
  return result;
}

uint64_t sub_1B68F4AD0()
{
  return sub_1B68F5A48(type metadata accessor for MetalFunctionScript);
}

uint64_t sub_1B68F4AE8@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  if (a1 == 2)
  {
    unint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
    uint64_t result = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v8 = *(void **)((char *)v2 + *(int *)(type metadata accessor for MetalFunctionScript(0) + 28));
    if (v8[2])
    {
      uint64_t v9 = v8[4];
      uint64_t v10 = v8[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
    uint64_t v11 = sub_1B67BB7B4(v9, v10, *v2, v2[1], 1, 1);
    uint64_t v13 = v12;
    unint64_t v4 = v14;
    unint64_t v5 = v15;
    swift_bridgeObjectRelease();
    if (!a1)
    {
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000004CLL;
      unint64_t v5 = 0x80000001B6F3D550;
    }
    sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B6E77050;
    *(void *)(result + 32) = v11;
    *(void *)(result + 40) = v13;
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = 11565;
  a2[4] = 0xE200000000000000;
  return result;
}

uint64_t sub_1B68F4C5C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB3E5C(*a1, *a2);
}

uint64_t sub_1B68F4C68()
{
  return sub_1B6BCF678();
}

uint64_t sub_1B68F4C70()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68F4D44()
{
  return sub_1B69EB2E4();
}

uint64_t sub_1B68F4D4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

void sub_1B68F4D84(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  unint64_t v3 = 1701080931;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001B6F2E5A0;
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_3;
    case 2:
      unint64_t v4 = 0xED000073656D614ELL;
      goto LABEL_8;
    case 3:
      uint64_t v5 = 1701667150;
      goto LABEL_7;
    case 4:
      uint64_t v5 = 1701869908;
LABEL_7:
      unint64_t v4 = v5 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
LABEL_8:
      *a1 = 0x6E6F6974636E7566;
      a1[1] = v4;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1B68F4E2C()
{
  unint64_t result = 1701080931;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
    case 3:
    case 4:
      unint64_t result = 0x6E6F6974636E7566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68F4ECC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F4EFC(uint64_t a1)
{
  unint64_t v2 = sub_1B6906B44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68F4F38(uint64_t a1)
{
  unint64_t v2 = sub_1B6906B44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68F4F74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  sub_1B6906D40(0, &qword_1E9DD24B0, (uint64_t (*)(void))sub_1B6906B44, (uint64_t)&type metadata for MetalFunctionScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v40 - v5;
  uint64_t v7 = type metadata accessor for MetalFunctionScript(0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned char v10[16] = 1;
  uint64_t v44 = v11;
  uint64_t v12 = &v10[*(int *)(v11 + 24)];
  uint64_t v13 = type metadata accessor for ScriptIndex();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = v14 + 56;
  char v48 = v12;
  v15(v12, 1, 1, v13);
  uint64_t v17 = a1[3];
  uint64_t v47 = a1;
  sub_1B62C14BC(a1, v17);
  sub_1B6906B44();
  uint64_t v18 = v49;
  sub_1B6E33A48();
  if (v18)
  {
    uint64_t v21 = (uint64_t)v48;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v47);
    return sub_1B6907254(v21, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    uint64_t v42 = v16;
    char v49 = v15;
    uint64_t v19 = v45;
    uint64_t v20 = v46;
    LOBYTE(v50) = 0;
    *(void *)uint64_t v10 = sub_1B6E32D98();
    *((void *)v10 + 1) = v23;
    uint64_t v24 = v6;
    LOBYTE(v50) = 4;
    char v25 = sub_1B6E32E98();
    if (v25)
    {
      char v52 = 4;
      sub_1B6906B98();
      sub_1B6E32DF8();
      uint64_t v26 = v20;
      uint64_t v27 = v10;
      v10[*(int *)(v44 + 32)] = v50;
      uint64_t v28 = v47;
      uint64_t v29 = v48;
    }
    else
    {
      uint64_t v26 = v20;
      v10[*(int *)(v44 + 32)] = 0;
      uint64_t v28 = v47;
      uint64_t v29 = v48;
      uint64_t v27 = v10;
    }
    char v52 = 1;
    sub_1B62B1EA8();
    sub_1B6E32D78();
    uint64_t v30 = v26;
    uint64_t v40 = (uint64_t)v27;
    uint64_t v41 = v24;
    if ((v51 & 1) == 0)
    {
      uint64_t v31 = v50;
      sub_1B6907254((uint64_t)v29, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *(void *)uint64_t v29 = v31;
      swift_storeEnumTagMultiPayload();
      v49(v29, 0, 1, v13);
    }
    uint64_t v32 = v28[3];
    uint64_t v33 = v28[4];
    sub_1B62C14BC(v28, v32);
    if (sub_1B62BF5E0(1091, v32, v33))
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1B6E77050;
      LOBYTE(v50) = 3;
      uint64_t v35 = v41;
      uint64_t v36 = sub_1B6E32D98();
      uint64_t v37 = v40;
      *(void *)(v34 + 32) = v36;
      *(void *)(v34 + 40) = v39;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v35, v30);
      *(void *)(v37 + *(int *)(v44 + 28)) = v34;
    }
    else
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      char v52 = 2;
      sub_1B6906838((unint64_t *)&qword_1EB980308);
      uint64_t v38 = v41;
      sub_1B6E32DF8();
      uint64_t v37 = v40;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v38, v30);
      *(void *)(v37 + *(int *)(v44 + 28)) = v50;
    }
    sub_1B633A1CC(v37, v43, type metadata accessor for MetalFunctionScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
    return sub_1B633A09C(v37, type metadata accessor for MetalFunctionScript);
  }
}

uint64_t sub_1B68F553C(void *a1)
{
  uint64_t v2 = type metadata accessor for ScriptIndex();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)&v24 - v8;
  sub_1B6906D40(0, &qword_1E9DD24C8, (uint64_t (*)(void))sub_1B6906B44, (uint64_t)&type metadata for MetalFunctionScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v13);
  unint64_t v15 = (char *)&v24 - v14;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906B44();
  uint64_t v16 = v26;
  sub_1B6E33A88();
  LOBYTE(v29) = 0;
  uint64_t v17 = v27;
  sub_1B6E32F48();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  uint64_t v19 = v11;
  uint64_t v27 = v12;
  uint64_t v20 = (int *)type metadata accessor for MetalFunctionScript(0);
  sub_1B67BA970(v16 + v20[6], (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v25) == 1)
  {
    sub_1B6907254((uint64_t)v9, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    sub_1B633A1CC((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v23 = *v5;
      sub_1B633A09C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      uint64_t v29 = v23;
      char v28 = 1;
      sub_1B6657A10();
      uint64_t v22 = v19;
      sub_1B6E32FA8();
      uint64_t v21 = v27;
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    sub_1B633A09C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v21 = v27;
  uint64_t v22 = v19;
LABEL_8:
  uint64_t v29 = *(void *)(v16 + v20[7]);
  char v28 = 2;
  sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
  sub_1B6E32FA8();
  LOBYTE(v29) = *(unsigned char *)(v16 + v20[8]);
  char v28 = 4;
  sub_1B6906BEC();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, v22);
}

uint64_t sub_1B68F59D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68F4F74(a1, a2);
}

uint64_t sub_1B68F59E8(void *a1)
{
  return sub_1B68F553C(a1);
}

uint64_t sub_1B68F5A00()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B68F5A30()
{
  return sub_1B68F5A48(type metadata accessor for ShaderScript);
}

uint64_t sub_1B68F5A48(uint64_t (*a1)(void))
{
  sub_1B6E33998();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + *(int *)(a1(0) + 28));
  sub_1B6E33928();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33978();
}

uint64_t sub_1B68F5BA0@<X0>(char a1@<W0>, void *a2@<X8>)
{
  uint64_t v110 = v2;
  uint64_t v3 = *(unint64_t *)((char *)v2 + *(int *)(type metadata accessor for ShaderScript(0) + 28));
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    goto LABEL_19;
  }
  sub_1B633AF88();
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t *)(v3 + 40);
  do
  {
    uint64_t v6 = *v5;
    unint64_t v115 = *(v5 - 1);
    unint64_t v116 = v6;
    uint64_t v113 = 0x746E656D67617266;
    uint64_t v114 = 0xE800000000000000;
    char v7 = sub_1B6E32678();
    if (v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(v3 + 16);
      if (!v8)
      {
LABEL_12:
        unint64_t v11 = *v2;
        unint64_t v12 = v110[1];
        unint64_t v115 = *v110;
        unint64_t v116 = v12;
        swift_bridgeObjectRetain();
        char v13 = 0;
        uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_13;
      }
      goto LABEL_8;
    }
    v5 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v3 + 16);
  if (!v8) {
    goto LABEL_19;
  }
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v9 = (uint64_t *)(v3 + 40);
  while (1)
  {
    uint64_t v10 = *v9;
    unint64_t v115 = *(v9 - 1);
    unint64_t v116 = v10;
    uint64_t v113 = 0x786574726576;
    uint64_t v114 = 0xE600000000000000;
    if (sub_1B6E32678()) {
      break;
    }
    v9 += 2;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_12;
      }
LABEL_19:
      sub_1B67C5B68();
      swift_allocError();
      *uint64_t v19 = 0xD00000000000002CLL;
      v19[1] = 0x80000001B6F3D340;
      return swift_willThrow();
    }
  }
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    goto LABEL_19;
  }
  unint64_t v12 = v2[1];
  unint64_t v115 = *v2;
  unint64_t v11 = v115;
  unint64_t v116 = v12;
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1B6B10C0C(0x6D5F786574726576, 0xEB000000006E6961, v115, v12, 1u, 1, 0);
  uint64_t v15 = v108;
  if (v108) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = v17;
  swift_bridgeObjectRelease();
  if (a1 == 2)
  {
    char v13 = 1;
    goto LABEL_14;
  }
  uint64_t v113 = v115;
  uint64_t v114 = v12;
  uint64_t v21 = v14[2];
  signed int v104 = v14;
  unint64_t v105 = v12;
  if (v21)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = &v14[8 * v21];
    do
    {
      if (v22[3])
      {
        unint64_t v25 = *(v22 - 4);
        char v26 = *((unsigned char *)v22 - 24);
        sub_1B62C6AA8(v25);
        swift_bridgeObjectRetain();
        sub_1B62C6AA8(v25);
        sub_1B6B06858(v25, v26, (uint64_t)&v117);
        long long v126 = v118;
        if ((*((void *)&v118 + 1) & 0x2000000000000000) != 0) {
          uint64_t v27 = HIBYTE(*((void *)&v126 + 1)) & 0xFLL;
        }
        else {
          uint64_t v27 = v126 & 0xFFFFFFFFFFFFLL;
        }
        if (v27)
        {
          long long v112 = v118;
          swift_bridgeObjectRetain();
          sub_1B62C7C20((uint64_t)&v126);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B62C7BF4((uint64_t)&v126);
          unint64_t v24 = *((void *)&v112 + 1);
          uint64_t v23 = v112;
        }
        else
        {
          sub_1B62C7BF4((uint64_t)&v126);
          uint64_t v23 = 0;
          unint64_t v24 = 0xE000000000000000;
        }
        *(void *)&long long v112 = v23;
        *((void *)&v112 + 1) = v24;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6906E30();
        sub_1B6E31878();
        sub_1B62C6A70(v25);
        sub_1B62C6A70(v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v22 -= 8;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v14 = v104;
    swift_bridgeObjectRelease();
    uint64_t v28 = v104[2];
    unint64_t v11 = v113;
    unint64_t v115 = v113;
    unint64_t v116 = v114;
    unint64_t v105 = v114;
    if (v28)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = v104 + 11;
      uint64_t v30 = v28;
      do
      {
        unint64_t v73 = *(v29 - 7);
        if (v73 >> 60 == 13)
        {
          uint64_t v74 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          unint64_t v76 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v75 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          if (*(unsigned char *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x30) == 1)
          {
            switch(*(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
            {
              case 0:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 0;
                goto LABEL_57;
              case 1:
                sub_1B62C6AA8(*(v29 - 7));
                swift_bridgeObjectRetain();
                char v78 = 1;
                sub_1B67C511C(v74, 1uLL, v76, v75, 1);
                sub_1B67C511C(v74, 1uLL, v76, v75, 1);
                sub_1B62C6A70(v73);
                int v77 = v104;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_70;
              case 2:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 2;
                goto LABEL_57;
              case 3:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 3;
                goto LABEL_57;
              case 4:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 4;
                goto LABEL_57;
              case 5:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 5;
                goto LABEL_57;
              case 6:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 6;
                goto LABEL_57;
              case 7:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 7;
                goto LABEL_57;
              case 8:
                uint64_t v71 = *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v72 = 8;
LABEL_57:
                sub_1B67C511C(v71, v72, *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x20), *(void *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 0x28), 1);
                break;
              default:
                break;
            }
          }
        }
        v29 += 8;
        --v30;
      }
      while (v30);
      int v77 = v104;
      swift_bridgeObjectRelease();
      char v78 = 0;
LABEL_70:
      swift_bridgeObjectRetain();
      int v79 = v77 + 11;
      do
      {
        unint64_t v82 = *(v79 - 7);
        if (v82 >> 60 == 13)
        {
          uint64_t v83 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          unint64_t v85 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v84 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          if (*(unsigned char *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x30) == 1)
          {
            switch(*(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
            {
              case 0:
                sub_1B62C6AA8(*(v79 - 7));
                swift_bridgeObjectRetain();
                sub_1B67C511C(v83, 0, v85, v84, 1);
                uint64_t v103 = v83;
                char v13 = 1;
                sub_1B67C511C(v103, 0, v85, v84, 1);
                sub_1B62C6A70(v82);
                uint64_t v14 = v104;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v15 = v108;
                if ((v78 & 1) == 0) {
                  goto LABEL_86;
                }
                unint64_t v12 = v114;
                goto LABEL_14;
              case 1:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 1;
                goto LABEL_72;
              case 2:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 2;
                goto LABEL_72;
              case 3:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 3;
                goto LABEL_72;
              case 4:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 4;
                goto LABEL_72;
              case 5:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 5;
                goto LABEL_72;
              case 6:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 6;
                goto LABEL_72;
              case 7:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 7;
                goto LABEL_72;
              case 8:
                uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v81 = 8;
LABEL_72:
                sub_1B67C511C(v80, v81, *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x20), *(void *)((v82 & 0xFFFFFFFFFFFFFFFLL) + 0x28), 1);
                break;
              default:
                break;
            }
          }
        }
        v79 += 8;
        --v28;
      }
      while (v28);
      uint64_t v14 = v104;
      swift_bridgeObjectRelease();
      if (v78)
      {
        char v13 = 1;
        uint64_t v15 = v108;
        unint64_t v12 = v114;
        goto LABEL_14;
      }
    }
  }
  else
  {
    unint64_t v116 = v12;
  }
LABEL_86:
  swift_bridgeObjectRetain();
  sub_1B6B076CC(0x6D5F786574726576, 0xEB000000006E6961, v11, v105, 1u);
  uint64_t v108 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v86 = sub_1B6E31A78();
  unint64_t v88 = v87;
  swift_bridgeObjectRelease();
  if (v88 >> 14 == v86 >> 14)
  {
    swift_bridgeObjectRelease();
    uint64_t v89 = 1;
    goto LABEL_110;
  }
  swift_bridgeObjectRetain();
  uint64_t v90 = 0;
  do
  {
    uint64_t v92 = sub_1B6E32568();
    unint64_t v94 = v93;
    unint64_t v95 = sub_1B6E32528();
    if ((v94 & 0x2000000000000000) != 0) {
      uint64_t v96 = HIBYTE(v94) & 0xF;
    }
    else {
      uint64_t v96 = v92 & 0xFFFFFFFFFFFFLL;
    }
    if (!v96)
    {
      swift_bridgeObjectRelease();
LABEL_100:
      uint64_t v91 = 0;
      goto LABEL_90;
    }
    if ((v94 & 0x1000000000000000) != 0)
    {
      int v97 = sub_1B6E328B8();
    }
    else
    {
      if ((v94 & 0x2000000000000000) != 0)
      {
        uint64_t v113 = v92;
        uint64_t v114 = v94 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v92 & 0x1000000000000000) == 0)
      {
        sub_1B6E329D8();
      }
      int v97 = sub_1B6E329E8();
    }
    int v98 = v97;
    swift_bridgeObjectRelease();
    if ((v98 - 14) >= 0xFFFFFFFC || (v98 - 8232) < 2)
    {
      uint64_t v91 = 1;
      goto LABEL_90;
    }
    uint64_t v91 = 1;
    if (v98 != 133) {
      goto LABEL_100;
    }
LABEL_90:
    v90 += v91;
  }
  while (v88 >> 14 != v95 >> 14);
  swift_bridgeObjectRelease_n();
  uint64_t v89 = v90 + 1;
  uint64_t v14 = v104;
LABEL_110:
  uint64_t v113 = 0;
  uint64_t v114 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  *(void *)&long long v112 = v89;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  MEMORY[0x1BA9B3580](0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  char v13 = 1;
  unint64_t v11 = v115;
  unint64_t v12 = v116;
LABEL_13:
  uint64_t v15 = v108;
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B6B10C0C(0x746E656D67617266, 0xED00006E69616D5FLL, v11, v12, 1u, 1, 1);
  if (v15)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = (uint64_t)v16;
  swift_bridgeObjectRelease();
  if (a1 != 2)
  {
    uint64_t v31 = sub_1B6B10FB0(v11, v12, v20, 1);
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    unint64_t v115 = v31;
    unint64_t v116 = v33;
  }
  char v109 = v13;
  int64_t v34 = v14[2];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (v34)
  {
    *(void *)&long long v112 = MEMORY[0x1E4FBC860];
    sub_1B6C3C728(0, v34, 0);
    uint64_t v36 = v112;
    uint64_t v37 = v14 + 7;
    do
    {
      unint64_t v38 = *((void *)v37 - 3);
      char v39 = *(v37 - 16);
      uint64_t v40 = *((void *)v37 - 1);
      char v41 = *v37;
      sub_1B62C6AA8(v38);
      *(void *)&long long v112 = v36;
      unint64_t v43 = *(void *)(v36 + 16);
      unint64_t v42 = *(void *)(v36 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1B6C3C728(v42 > 1, v43 + 1, 1);
        uint64_t v36 = v112;
      }
      *(void *)(v36 + 16) = v43 + 1;
      unint64_t v44 = v36 + 32 * v43;
      *(void *)(v44 + 32) = v38;
      *(unsigned char *)(v44 + 40) = v39;
      *(void *)(v44 + 48) = v40;
      *(unsigned char *)(v44 + 56) = v41;
      v37 += 64;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  uint64_t v113 = v36;
  int64_t v45 = *(void *)(v20 + 16);
  if (v45)
  {
    uint64_t v128 = v35;
    sub_1B6C3C728(0, v45, 0);
    uint64_t v35 = v128;
    uint64_t v46 = (unsigned char *)(v20 + 56);
    char v47 = a1;
    do
    {
      unint64_t v48 = *((void *)v46 - 3);
      char v49 = *(v46 - 16);
      uint64_t v50 = *((void *)v46 - 1);
      char v111 = *v46;
      sub_1B62C6AA8(v48);
      uint64_t v128 = v35;
      unint64_t v52 = *(void *)(v35 + 16);
      unint64_t v51 = *(void *)(v35 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_1B6C3C728(v51 > 1, v52 + 1, 1);
        char v47 = a1;
        uint64_t v35 = v128;
      }
      *(void *)(v35 + 16) = v52 + 1;
      uint64_t v53 = v35 + 32 * v52;
      *(void *)(v53 + 32) = v48;
      *(unsigned char *)(v53 + 40) = v49;
      *(void *)(v53 + 48) = v50;
      *(unsigned char *)(v53 + 56) = v111;
      v46 += 64;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v47 = a1;
  }
  *(void *)&long long v112 = v35;
  uint64_t v54 = sub_1B69036F0((uint64_t)&v113);
  uint64_t v55 = sub_1B69036F0((uint64_t)&v112);
  if (v47 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v56 = 0;
    unint64_t v57 = 0xE200000000000000;
    unint64_t v58 = 0xE000000000000000;
    uint64_t v59 = MEMORY[0x1E4FBC860];
    uint64_t v60 = 11565;
  }
  else
  {
    uint64_t v61 = v113;
    uint64_t v62 = v112;
    uint64_t v128 = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v63 = swift_bridgeObjectRetain();
    sub_1B6641AD8(v63);
    uint64_t v64 = sub_1B6903D8C(v128);
    swift_bridgeObjectRelease();
    uint64_t v128 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6641AD8(v62);
    uint64_t v65 = sub_1B69042E4(v128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6D48B40(0xD00000000000001BLL, 0x80000001B6F36440, v64);
    swift_bridgeObjectRelease_n();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6D48B58(28521, 0xE200000000000000, v65);
    swift_bridgeObjectRelease_n();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    if (v109)
    {
      type metadata accessor for MetalScriptCodeGen();
      uint64_t v67 = v115;
      uint64_t v66 = v116;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v68 = a1;
      sub_1B67BBC48(0x6D5F786574726576, 0xEB000000006E6961, v67, v66, 0, v54, v61, 0, &v119, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v69 = v120;
      unint64_t v115 = v120;
      unint64_t v116 = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = v119;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = MEMORY[0x1E4FBC860];
      uint64_t v69 = v115;
      char v68 = a1;
    }
    type metadata accessor for MetalScriptCodeGen();
    sub_1B67BBC48(0x746E656D67617266, 0xED00006E69616D5FLL, v69, v116, 0, v55, v62, 1, v122, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v100 = v122[1];
    uint64_t v99 = v122[2];
    uint64_t v101 = v122[0];
    uint64_t v128 = v70;
    swift_bridgeObjectRetain();
    sub_1B6641518(v101);
    uint64_t v102 = v128;
    long long v125 = v123;
    sub_1B62C7BF4((uint64_t)&v125);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v127[0] = v102;
    v127[1] = v100;
    _OWORD v127[2] = v99;
    v127[3] = 11565;
    v127[4] = 0xE200000000000000;
    sub_1B67BD9F0((uint64_t)v127, 1, v68 == 0, v124);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v60 = v124[3];
    unint64_t v57 = v124[4];
    uint64_t v56 = v124[1];
    unint64_t v58 = v124[2];
    uint64_t v59 = v124[0];
  }
  *a2 = v59;
  a2[1] = v56;
  a2[2] = v58;
  a2[3] = v60;
  a2[4] = v57;
  a2[5] = v54;
  a2[6] = v55;
  return result;
}

uint64_t sub_1B68F6D68()
{
  sub_1B63BCED0(0, &qword_1EB97D9E0, (uint64_t (*)(uint64_t))sub_1B6907220, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8, v2);
  unint64_t v51 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4, v5);
  char v7 = (char *)&v44 - v6;
  sub_1B63BCED0(0, &qword_1EB97DA00, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  char v47 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v50 = (char *)&v44 - v15;
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v19 = (char *)&v44 - v18;
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = sub_1B6B07288(*v0, v0[1]);
  uint64_t v26 = v25;
  sub_1B6E31248();
  unint64_t v52 = v0;
  sub_1B6E31218();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v19, v9);
  uint64_t v48 = v24;
  uint64_t v49 = v26;
  sub_1B6E311C8();
  v27(v23, v9);
  sub_1B6907220(0);
  uint64_t v29 = v28;
  int64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  int v46 = v45(v7, 1, v28);
  sub_1B6907254((uint64_t)v7, &qword_1EB97D9E0, (uint64_t (*)(uint64_t))sub_1B6907220);
  uint64_t v30 = v47;
  sub_1B6E31248();
  uint64_t v31 = v50;
  sub_1B6E31218();
  v27(v30, v9);
  uint64_t v32 = (uint64_t)v51;
  sub_1B6E311C8();
  v27(v31, v9);
  int v33 = v45((char *)v32, 1, v29);
  sub_1B6907254(v32, &qword_1EB97D9E0, (uint64_t (*)(uint64_t))sub_1B6907220);
  swift_bridgeObjectRelease();
  if (v46 == 1)
  {
    int64_t v34 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v35 = v52;
    if (v33 == 1) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  int64_t v34 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  uint64_t v35 = v52;
  if (v37 >= v36 >> 1) {
    int64_t v34 = sub_1B6335858(v36 > 1, v37 + 1, 1, v34);
  }
  v34[2] = v37 + 1;
  unint64_t v38 = (char *)&v34[2 * v37];
  strcpy(v38 + 32, "fragment_main");
  *((_WORD *)v38 + 23) = -4864;
  if (v33 != 1)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v34 = sub_1B6335858(0, v34[2] + 1, 1, v34);
    }
    unint64_t v40 = v34[2];
    unint64_t v39 = v34[3];
    if (v40 >= v39 >> 1) {
      int64_t v34 = sub_1B6335858(v39 > 1, v40 + 1, 1, v34);
    }
    v34[2] = v40 + 1;
    char v41 = &v34[2 * v40];
    v41[4] = 0x6D5F786574726576;
    v41[5] = 0xEB000000006E6961;
  }
LABEL_12:
  uint64_t v42 = *(int *)(type metadata accessor for ShaderScript(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v35 + v42) = (uint64_t)v34;
  return result;
}

uint64_t sub_1B68F72B4()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1B68F72BC()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B68F72EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)(a2 + *(int *)(a1 + 28)) = &unk_1F0F5C108;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  return result;
}

uint64_t sub_1B68F7380(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAE654(*a1, *a2);
}

uint64_t sub_1B68F738C()
{
  return sub_1B6BCEF6C();
}

uint64_t sub_1B68F7394()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68F7458()
{
  return sub_1B69EBEF4();
}

uint64_t sub_1B68F7460@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6902590();
  *a1 = result;
  return result;
}

void sub_1B68F7490(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  unint64_t v3 = 1701080931;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001B6F2E5A0;
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_3;
    case 2:
      unint64_t v4 = 0xED000073656D614ELL;
      goto LABEL_6;
    case 3:
      unint64_t v4 = 0xEC000000656D614ELL;
LABEL_6:
      *a1 = 0x6E6F6974636E7566;
      a1[1] = v4;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1B68F7528()
{
  unint64_t result = 1701080931;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
    case 3:
      unint64_t result = 0x6E6F6974636E7566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68F75B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6902590();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F75E0(uint64_t a1)
{
  unint64_t v2 = sub_1B6906C40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68F761C(uint64_t a1)
{
  unint64_t v2 = sub_1B6906C40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68F7658@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  sub_1B6906D40(0, &qword_1EB9808B8, (uint64_t (*)(void))sub_1B6906C40, (uint64_t)&type metadata for ShaderScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v46 = v3;
  uint64_t v44 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v42 - v5;
  uint64_t v7 = type metadata accessor for ShaderScript(0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned char v10[16] = 1;
  uint64_t v43 = v11;
  uint64_t v12 = (uint64_t)&v10[*(int *)(v11 + 24)];
  uint64_t v13 = type metadata accessor for ScriptIndex();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = v14 + 56;
  uint64_t v49 = (void *)v12;
  v15(v12, 1, 1, v13);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906C40();
  char v47 = v6;
  uint64_t v17 = v48;
  sub_1B6E33A48();
  if (v17)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return sub_1B6907254((uint64_t)v49, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    uint64_t v42 = v16;
    uint64_t v18 = v13;
    uint64_t v48 = v15;
    uint64_t v20 = v44;
    uint64_t v19 = v45;
    LOBYTE(v50) = 0;
    uint64_t v21 = v46;
    uint64_t v23 = (uint64_t)v10;
    *(void *)uint64_t v10 = sub_1B6E32D98();
    *((void *)v10 + 1) = v24;
    char v52 = 1;
    sub_1B62B1EA8();
    sub_1B6E32D78();
    uint64_t v25 = a1;
    if ((v51 & 1) == 0)
    {
      uint64_t v27 = v49;
      uint64_t v26 = v50;
      sub_1B6907254((uint64_t)v49, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *uint64_t v27 = v26;
      swift_storeEnumTagMultiPayload();
      v48((uint64_t)v27, 0, 1, v18);
    }
    uint64_t v28 = v19;
    uint64_t v29 = v25[3];
    uint64_t v30 = v25[4];
    sub_1B62C14BC(v25, v29);
    uint64_t v31 = v20;
    if (sub_1B62BF5E0(1091, v29, v30))
    {
      uint64_t v32 = v28;
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1B6E77050;
      LOBYTE(v50) = 3;
      uint64_t v34 = v21;
      uint64_t v35 = v47;
      uint64_t v36 = sub_1B6E32D98();
      uint64_t v37 = v43;
      *(void *)(v33 + 32) = v36;
      *(void *)(v33 + 40) = v41;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v34);
      *(void *)(v23 + *(int *)(v37 + 28)) = v33;
      uint64_t v28 = v32;
    }
    else
    {
      sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      char v52 = 2;
      sub_1B6906838((unint64_t *)&qword_1EB980308);
      uint64_t v38 = v21;
      unint64_t v39 = v47;
      sub_1B6E32DF8();
      uint64_t v40 = v43;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v39, v38);
      *(void *)(v23 + *(int *)(v40 + 28)) = v50;
    }
    sub_1B633A1CC(v23, v28, type metadata accessor for ShaderScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v25);
    return sub_1B633A09C(v23, type metadata accessor for ShaderScript);
  }
}

uint64_t sub_1B68F7BB8(void *a1)
{
  uint64_t v2 = type metadata accessor for ScriptIndex();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)&v23 - v8;
  sub_1B6906D40(0, &qword_1E9DD24D8, (uint64_t (*)(void))sub_1B6906C40, (uint64_t)&type metadata for ShaderScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)&v23 - v14;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906C40();
  uint64_t v16 = v27;
  sub_1B6E33A88();
  LOBYTE(v30) = 0;
  uint64_t v17 = v28;
  sub_1B6E32F48();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  uint64_t v28 = v11;
  uint64_t v24 = v12;
  uint64_t v19 = type metadata accessor for ShaderScript(0);
  sub_1B67BA970(v16 + *(int *)(v19 + 24), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v26) == 1)
  {
    sub_1B6907254((uint64_t)v9, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    sub_1B633A1CC((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B633A09C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      sub_1B633A09C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    }
    else
    {
      uint64_t v20 = *v5;
      sub_1B633A09C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      uint64_t v30 = v20;
      char v29 = 1;
      sub_1B6657A10();
      sub_1B6E32FA8();
    }
  }
  uint64_t v21 = v24;
  uint64_t v30 = *(void *)(v16 + *(int *)(v19 + 28));
  char v29 = 2;
  sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
  uint64_t v22 = v28;
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, v22);
}

uint64_t sub_1B68F8024@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68F7658(a1, a2);
}

uint64_t sub_1B68F803C(void *a1)
{
  return sub_1B68F7BB8(a1);
}

unint64_t sub_1B68F8054()
{
  if (qword_1E9DCC498 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain_n();
  char v0 = sub_1B6E31A08();
  swift_bridgeObjectRelease();
  if (v0)
  {
    do
    {
      swift_bridgeObjectRetain();
      sub_1B6E318E8();
      swift_bridgeObjectRelease();
      sub_1B6E31958();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      char v1 = sub_1B6E31A08();
      swift_bridgeObjectRelease();
    }
    while ((v1 & 1) != 0);
  }
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 0xD00000000000001ELL;
}

void *sub_1B68F81FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B6909770(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B68F8228(void *a1)
{
  uint64_t v2 = *v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v6 = v2;
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B69098C8(0, &qword_1E9DD2690, MEMORY[0x1E4FBAEA0]);
  sub_1B6909988(&qword_1E9DD26A8, (void (*)(void))sub_1B6909A28, (void (*)(void))sub_1B6657A10);
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B68F8338(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_unknownObjectRetain();
  uint64_t v6 = sub_1B6902388(v5, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  uint64_t *v2 = (uint64_t)v6;
  return result;
}

void *sub_1B68F83A8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1B67F4314(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t sub_1B68F83D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v44 = (char *)&v43 - v7;
  uint64_t v8 = type metadata accessor for ScriptIndex();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v46 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v48 = (uint64_t)&v43 - v14;
  sub_1B63BCED0(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], v4);
  MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v49 = (char *)&v43 - v17;
  uint64_t v18 = sub_1B6E31118();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v45 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v23 = (void *)*v2;
  uint64_t v24 = *(void *)(*v2 + 16);
  if (v24)
  {
    uint64_t v47 = v19;
    uint64_t v25 = v18;
    uint64_t v26 = v9;
    uint64_t v27 = v8;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v23 = sub_1B6C166E4(v23);
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v29 = (uint64_t)(v23 + 4);
    do
    {
      uint64_t v30 = swift_unknownObjectRetain();
      sub_1B6900694(v30, v29, ObjectType, a2);
      swift_unknownObjectRelease();
      v29 += 32;
      --v24;
    }
    while (v24);
    *uint64_t v22 = v23;
    uint64_t v8 = v27;
    uint64_t v9 = v26;
    uint64_t v18 = v25;
    uint64_t v19 = v47;
  }
  uint64_t v50 = v9;
  uint64_t v31 = swift_getObjectType();
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  uint64_t result = v32(v31, a2);
  if (result)
  {
    uint64_t v34 = (uint64_t)v22 + *(int *)(type metadata accessor for TriggerScript(0) + 40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v34, 1, v8))
    {
      uint64_t v35 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v49, 1, 1, v18);
      return sub_1B6907254(v35, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
    }
    uint64_t v47 = v8;
    uint64_t v43 = v34;
    uint64_t v36 = v48;
    sub_1B633A1CC(v34, v48, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    uint64_t v37 = v46;
    sub_1B633A1CC(v36, v46, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v49, v37, v18);
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
      uint64_t v35 = (uint64_t)v49;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v35, v38, 1, v18);
    sub_1B633A09C(v48, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v35, 1, v18) == 1) {
      return sub_1B6907254(v35, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
    }
    unint64_t v39 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v45, v35, v18);
    if (v32(v31, a2))
    {
      uint64_t v40 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, unint64_t, uint64_t (*)(), void, uint64_t, uint64_t))(a2 + 24))(v39, 0x6E49747069726353, 0xEB00000000786564, sub_1B6C117A8, 0, v31, a2);
    }
    else
    {
      uint64_t v40 = (uint64_t)v44;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v44, v39, v18);
    }
    uint64_t v41 = v50;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v39, v18);
    uint64_t v42 = v47;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v40, 0, 1, v42);
    return sub_1B69072C4(v40, v43);
  }
  return result;
}

uint64_t sub_1B68F8970()
{
  sub_1B6E33998();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[4];
  sub_1B6E33928();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B6E33928();
  uint64_t v4 = *v0;
  sub_1B6E33928();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 32;
    do
    {
      unint64_t v7 = *(void *)(v4 + v6);
      sub_1B6E33998();
      sub_1B62C6AA8(v7);
      sub_1B68ECBF4(v7);
      sub_1B6E33928();
      sub_1B6E33978();
      sub_1B6E33928();
      sub_1B62C6A70(v7);
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return sub_1B6E33978();
}

uint64_t sub_1B68F8B58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  if (a1 == 2)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE200000000000000;
    unint64_t v7 = 0xE000000000000000;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v9 = 11565;
  }
  else
  {
    if (*(unsigned char *)(v3 + 24))
    {
      if (*(unsigned char *)(v3 + 24) == 1) {
        uint64_t v11 = type metadata accessor for MetalScriptCodeGen();
      }
      else {
        uint64_t v11 = type metadata accessor for SwiftScriptCodeGen();
      }
    }
    else
    {
      uint64_t v11 = type metadata accessor for CScriptCodeGen();
    }
    uint64_t v12 = v11;
    uint64_t v13 = *(void **)(v3 + 32);
    if (v13[2])
    {
      uint64_t v15 = v13[4];
      uint64_t v14 = v13[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v14 = 0;
    }
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void, void, void, void, void, uint64_t))(v12 + 128))(v17, v15, v14, *(void *)(v3 + 8), *(void *)(v3 + 16), 0, 0, *(void *)v3, a1);
    swift_bridgeObjectRelease();
    uint64_t v9 = v17[3];
    unint64_t v6 = v17[4];
    uint64_t v5 = v17[1];
    unint64_t v7 = v17[2];
    uint64_t v8 = v17[0];
  }
  uint64_t result = swift_bridgeObjectRetain();
  *a2 = v8;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v9;
  a2[4] = v6;
  a2[5] = result;
  a2[6] = 0;
  return result;
}

uint64_t sub_1B68F8C94(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAFAA0(*a1, *a2);
}

uint64_t sub_1B68F8CA0()
{
  return sub_1B69EBADC();
}

uint64_t sub_1B68F8CAC()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68F8DD4()
{
  return sub_1B69EBADC();
}

uint64_t sub_1B68F8DDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69025DC();
  *a1 = result;
  return result;
}

void sub_1B68F8E0C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701080931;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED000073656D614ELL;
      uint64_t v3 = 0x6E6F6974636E7566;
      goto LABEL_3;
    case 2:
      *a1 = 0x65676175676E616CLL;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6574656D61726170;
      a1[1] = 0xEA00000000007372;
      break;
    case 4:
      *a1 = 0x6567617473;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x5668706172477369;
      a1[1] = 0xE900000000000032;
      break;
    case 6:
      *a1 = 0x5472656767697274;
      a1[1] = 0xEB00000000657079;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B68F8F18()
{
  uint64_t result = 1701080931;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F6974636E7566;
      break;
    case 2:
      uint64_t result = 0x65676175676E616CLL;
      break;
    case 3:
      uint64_t result = 0x6574656D61726170;
      break;
    case 4:
      uint64_t result = 0x6567617473;
      break;
    case 5:
      uint64_t result = 0x5668706172477369;
      break;
    case 6:
      uint64_t result = 0x5472656767697274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68F900C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69025DC();
  *a1 = result;
  return result;
}

uint64_t sub_1B68F9034(uint64_t a1)
{
  unint64_t v2 = sub_1B6906C94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68F9070(uint64_t a1)
{
  unint64_t v2 = sub_1B6906C94();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B68F90AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  sub_1B6906D40(0, &qword_1E9DD24E0, (uint64_t (*)(void))sub_1B6906C94, (uint64_t)&type metadata for TriggerScript.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  unint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = (int *)type metadata accessor for TriggerScript(0);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = MEMORY[0x1E4FBC860];
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0xE000000000000000;
  v11[24] = 2;
  *((void *)v11 + 4) = &unk_1F0F62560;
  *((_WORD *)v11 + 20) = 0;
  uint64_t v13 = &v11[*(int *)(v12 + 40)];
  uint64_t v14 = type metadata accessor for ScriptIndex();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v31 = (uint64_t)v13;
  v15(v13, 1, 1, v14);
  uint64_t v30 = v8[12];
  *(void *)&v11[v30] = 0;
  uint64_t v16 = &v11[v8[13]];
  *(_DWORD *)uint64_t v16 = 0;
  v16[4] = 1;
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v32 = a1;
  uint64_t v18 = (void *)a1;
  uint64_t v19 = v7;
  sub_1B62C14BC(v18, v17);
  sub_1B6906C94();
  uint64_t v20 = v33;
  sub_1B6E33A48();
  if (v20)
  {
    uint64_t v24 = v31;
    uint64_t v25 = v30;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6907254(v24, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    uint64_t v21 = v28;
    uint64_t v22 = v29;
    LOBYTE(v34) = 0;
    *((void *)v11 + 1) = sub_1B6E32D98();
    *((void *)v11 + 2) = v23;
    char v35 = 2;
    sub_1B639E88C();
    sub_1B6E32DF8();
    v11[24] = (char)v34;
    sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    char v35 = 1;
    sub_1B6906838((unint64_t *)&qword_1EB980308);
    sub_1B6E32DF8();
    *((void *)v11 + 4) = v34;
    sub_1B62D86B8(0, &qword_1E9DD1268, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB320]);
    char v35 = 3;
    sub_1B69069B8(&qword_1E9DD2458, (void (*)(void))sub_1B6906964);
    sub_1B6E32DF8();
    *(void *)uint64_t v11 = v34;
    LOBYTE(v34) = 5;
    v11[41] = sub_1B6E32D38() & 1;
    type metadata accessor for VFXTriggerType(0);
    char v35 = 6;
    sub_1B6907408(&qword_1E9DD24F0);
    sub_1B6E32D78();
    uint64_t v26 = v34;
    if (!v34) {
      uint64_t v26 = @"VFXTriggerTypeKeyDown";
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v4);
    *(void *)&v11[v8[11]] = v26;
    sub_1B633A1CC((uint64_t)v11, v22, type metadata accessor for TriggerScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v32);
    sub_1B633A09C((uint64_t)v11, type metadata accessor for TriggerScript);
  }
}

uint64_t sub_1B68F961C(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6906D40(0, &qword_1E9DD24F8, (uint64_t (*)(void))sub_1B6906C94, (uint64_t)&type metadata for TriggerScript.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6906C94();
  sub_1B6E33A88();
  LOBYTE(v14) = 0;
  sub_1B6E32F48();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v14 = v3[4];
  char v13 = 1;
  sub_1B62D86B8(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6906838((unint64_t *)&qword_1E9DCFE00);
  sub_1B6E32FA8();
  LOBYTE(v14) = *((unsigned char *)v3 + 24);
  char v13 = 2;
  sub_1B687BE68();
  sub_1B6E32FA8();
  uint64_t v14 = *v3;
  char v13 = 3;
  sub_1B62D86B8(0, &qword_1E9DD1268, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB320]);
  sub_1B69069B8(&qword_1E9DD2470, (void (*)(void))sub_1B6906A48);
  sub_1B6E32FA8();
  LOBYTE(v14) = 5;
  sub_1B6E32F58();
  type metadata accessor for TriggerScript(0);
  sub_1B6E31798();
  LOBYTE(v14) = 6;
  sub_1B6E32F48();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_bridgeObjectRelease();
}

void sub_1B68F9980(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B68F9998(void *a1)
{
  return sub_1B68F961C(a1);
}

uint64_t sub_1B68F99B0()
{
  return sub_1B6E31B98();
}

uint64_t sub_1B68F9A2C()
{
  return sub_1B6E31AF8();
}

uint64_t sub_1B68F9A98(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v9 = a3[10];
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    uint64_t v11 = type metadata accessor for ScriptIndex();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v10;
    uint64_t v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v14, 1, v15))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v14, v17);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(__dst, v14, *(void *)(v12 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v18 = a3[11];
    uint64_t v19 = a3[12];
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)(v7 + v18) = v20;
    uint64_t v21 = *(void **)((char *)a2 + v19);
    *(void *)(v7 + v19) = v21;
    uint64_t v22 = a3[13];
    uint64_t v23 = v7 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    *(unsigned char *)(v23 + 4) = *(unsigned char *)(v24 + 4);
    id v25 = v20;
    id v26 = v21;
  }
  return v7;
}

void sub_1B68F9D18(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }

  uint64_t v7 = *(void **)(a1 + a2[12]);
}

uint64_t sub_1B68F9E18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v7 = a3[10];
  __dst = (void *)(a1 + v7);
  uint64_t v8 = (const void *)(a2 + v7);
  *(void *)(a1 + 32) = v6;
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(__dst, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(__dst, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v14 = a3[11];
  uint64_t v15 = a3[12];
  uint64_t v16 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v16;
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  uint64_t v18 = a3[13];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  id v21 = v16;
  id v22 = v17;
  return a1;
}

uint64_t sub_1B68FA044(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    goto LABEL_14;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v18 = a3[11];
  uint64_t v19 = *(void **)(a2 + v18);
  uint64_t v20 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = v19;
  id v21 = v19;

  uint64_t v22 = a3[12];
  uint64_t v23 = *(void **)(a1 + v22);
  uint64_t v24 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v24;
  id v25 = v24;

  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(a2 + v26);
  int v29 = *v28;
  *(unsigned char *)(v27 + 4) = *((unsigned char *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  return a1;
}

uint64_t sub_1B68FA36C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[13];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  return a1;
}

uint64_t sub_1B68FA560(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    goto LABEL_14;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  uint64_t v19 = a3[11];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = a3[12];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);

  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  return a1;
}

uint64_t sub_1B68FA860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B68FA874);
}

uint64_t sub_1B68FA878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B68FA88C);
}

void sub_1B68FA890()
{
  sub_1B63BCED0(319, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1B68FA9A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ScriptIndex();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = sub_1B6E31118();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(v12 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B68FABC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B68FAD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    goto LABEL_14;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B68FB044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1B68FB1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    goto LABEL_14;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B68FB49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B68FB4B0);
}

uint64_t sub_1B68FB4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B68FB4C8);
}

void sub_1B68FB4CC()
{
  sub_1B63BCED0(319, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1B68FB5A8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ScriptIndex();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = sub_1B6E31118();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(v12 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B68FB7CC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68FB8B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B68FBA84(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    goto LABEL_14;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B68FBD48(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_1B68FBF08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    goto LABEL_14;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B68FC1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B68FC1C8);
}

uint64_t sub_1B68FC1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B68FC2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B68FC2C0);
}

uint64_t sub_1B68FC2C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B68FC39C()
{
  sub_1B63BCED0(319, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1B68FC484(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = a2[3];
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for ScriptIndex();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_1B6E31118();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_1B68FC6A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v7 = sub_1B6E31118();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B68FC790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1B68FC95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B68FCC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ScriptIndex();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B68FCDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B68FD088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B68FD09C);
}

uint64_t sub_1B68FD09C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B68FD17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B68FD190);
}

void *sub_1B68FD190(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B68FD268()
{
}

void *sub_1B68FD288(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = a2[3];
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = type metadata accessor for ScriptIndex();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_1B6E31118();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1B68FD4A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v7 = sub_1B6E31118();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B68FD588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for ScriptIndex();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v6, v7, *(void *)(v9 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1B68FD754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B68FDA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ScriptIndex();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B68FDBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B68FDE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B68FDE74);
}

uint64_t sub_1B68FDE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B68FDF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B68FDF68);
}

uint64_t sub_1B68FDF68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B68FE040()
{
  sub_1B63BCED0(319, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1B68FE128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B68FE3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ScriptIndex();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B68FE5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B68FE864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B68FE944(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B68FEA1C()
{
  sub_1B63BCED0(319, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1B68FEB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B68FEDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ScriptIndex();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B68FEF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B68FF23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B68FF31C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B68FF3F4()
{
}

void sub_1B68FF414()
{
  sub_1B63BCED0(319, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t *initializeBufferWithCopyOfBuffer for ScriptLocation(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1B62C6AA8(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ScriptLocation(unint64_t *a1)
{
  return sub_1B62C6A70(*a1);
}

unint64_t *assignWithCopy for ScriptLocation(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1B62C6AA8(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1B62C6A70(v4);
  return a1;
}

unint64_t *assignWithTake for ScriptLocation(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1B62C6A70(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x71 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 113);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x70) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ScriptLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x70)
  {
    *(void *)uint64_t result = a2 - 113;
    if (a3 >= 0x71) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x71) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B68FF63C(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 == 15) {
    return (*a1 >> 3) + 15;
  }
  else {
    return v1;
  }
}

void *sub_1B68FF658(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1B68FF668(unint64_t *result, uint64_t a2)
{
  if (a2 < 0xF)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 15);
    unint64_t v3 = 0xF000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation()
{
  return &type metadata for ScriptLocation;
}

ValueMetadata *type metadata accessor for ScriptLocation.TextureType()
{
  return &type metadata for ScriptLocation.TextureType;
}

uint64_t initializeWithCopy for ScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1B62C6AA8(*(void *)a2);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for ScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1B62C6AA8(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_1B62C6A70(v5);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  return a1;
}

uint64_t assignWithTake for ScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_1B62C6A70(v4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptParameter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x71 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 113);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x70) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ScriptParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x70)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 113;
    if (a3 >= 0x71) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x71) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptParameter()
{
  return &type metadata for ScriptParameter;
}

void *assignWithCopy for ParticleScriptRuntime(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ParticleScriptRuntime()
{
  return &type metadata for ParticleScriptRuntime;
}

uint64_t sub_1B68FF8F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    uint64_t v10 = type metadata accessor for ScriptIndex();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_1B6E31118();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_1B68FFB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B68FFDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ScriptIndex();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(v8 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B68FFFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScriptIndex();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v17 = *(void *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1B633A09C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
LABEL_7:
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B6900264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B6900278);
}

uint64_t sub_1B690027C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B690035C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B6900370);
}

void *sub_1B6900374(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B690044C()
{
  sub_1B63BCED0(319, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1B6900548()
{
  unint64_t result = qword_1E9DD2338;
  if (!qword_1E9DD2338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2338);
  }
  return result;
}

unint64_t sub_1B69005A0()
{
  unint64_t result = qword_1E9DD2340;
  if (!qword_1E9DD2340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2340);
  }
  return result;
}

void sub_1B69005F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = v4[2];
  if (v5)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_1B6C166E4(v4);
    }
    uint64_t v9 = (uint64_t)(v4 + 4);
    do
    {
      uint64_t v10 = swift_unknownObjectRetain();
      sub_1B6900694(v10, v9, a3, a4);
      swift_unknownObjectRelease();
      v9 += 32;
      --v5;
    }
    while (v5);
    *(void *)(a2 + 32) = v4;
  }
}

unint64_t sub_1B6900694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = *(void *)a2;
  uint64_t v8 = swift_unknownObjectRetain();
  unint64_t v9 = sub_1B690070C(v8, v7, a3, a4);
  swift_unknownObjectRelease();
  unint64_t result = sub_1B62C6A70(v7);
  *(void *)a2 = v9;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

unint64_t sub_1B690070C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a2;
  switch(a2 >> 60)
  {
    case 1uLL:
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      char v11 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x58);
      __int16 v12 = *(_WORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x5A);
      long long v56 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      sub_1B664D9F0((a2 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v59);
      uint64_t v13 = swift_allocObject();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6B1BF04((uint64_t)v59, a3, a4, v13 + 16);
      sub_1B66490B8((uint64_t)v59);
      *(void *)(v13 + 48) = v9;
      *(void *)(v13 + 56) = v8;
      *(_OWORD *)(v13 + 64) = v56;
      *(void *)(v13 + 80) = v10;
      *(unsigned char *)(v13 + 88) = v11;
      unint64_t v6 = v13 | 0x1000000000000000;
      *(_WORD *)(v13 + 90) = v12;
      break;
    case 2uLL:
      sub_1B664D9F0((a2 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v59);
      uint64_t v14 = swift_allocObject();
      sub_1B6B1BF04((uint64_t)v59, a3, a4, v14 + 16);
      sub_1B66490B8((uint64_t)v59);
      unint64_t v6 = v14 | 0x2000000000000000;
      break;
    case 3uLL:
      uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      char v20 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      __int16 v57 = *(_WORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x42);
      uint64_t v21 = swift_allocObject();
      swift_bridgeObjectRetain();
      long long v54 = *(_OWORD *)(v15 + 40);
      swift_retain();
      sub_1B6B1BF68(v16, 0, a3, a4);
      *(void *)(v21 + 16) = v16;
      *(void *)(v21 + 24) = v17;
      *(void *)(v21 + 32) = v18;
      *(_OWORD *)(v21 + 40) = v54;
      *(void *)(v21 + 56) = v19;
      *(unsigned char *)(v21 + 64) = v20;
      unint64_t v6 = v21 | 0x3000000000000000;
      *(_WORD *)(v21 + 66) = v57;
      break;
    case 4uLL:
      uint64_t v22 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v23 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v26 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      char v27 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      __int16 v55 = *(_WORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x42);
      char v58 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x44);
      uint64_t v28 = swift_allocObject();
      swift_bridgeObjectRetain();
      long long v53 = *(_OWORD *)(v22 + 40);
      swift_retain();
      sub_1B6B1BF68(v23, 0, a3, a4);
      *(void *)(v28 + 16) = v23;
      *(void *)(v28 + 24) = v24;
      *(void *)(v28 + 32) = v25;
      *(_OWORD *)(v28 + 40) = v53;
      *(void *)(v28 + 56) = v26;
      *(unsigned char *)(v28 + 64) = v27;
      *(_WORD *)(v28 + 66) = v55;
      unint64_t v6 = v28 | 0x4000000000000000;
      *(unsigned char *)(v28 + 68) = v58;
      break;
    case 7uLL:
      uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      __int16 v31 = *(_WORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x21);
      char v32 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x23);
      char v33 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = swift_unknownObjectRetain();
      uint64_t v36 = sub_1B6900B5C(v35, v29, v30, v33, a3, a4);
      uint64_t v38 = v37;
      LOBYTE(v29) = v39;
      swift_unknownObjectRelease();
      *(void *)(v34 + 16) = v36;
      *(void *)(v34 + 24) = v38;
      *(unsigned char *)(v34 + 32) = v29;
      *(_WORD *)(v34 + 33) = v31;
      unint64_t v6 = v34 | 0x7000000000000000;
      *(unsigned char *)(v34 + 35) = v32;
      break;
    case 8uLL:
      uint64_t v40 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v41 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v42 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v43 = swift_allocObject();
      uint64_t v44 = swift_unknownObjectRetain();
      uint64_t v45 = sub_1B6900B5C(v44, v40, v41, v42, a3, a4);
      uint64_t v47 = v46;
      LOBYTE(v41) = v48;
      swift_unknownObjectRelease();
      *(void *)(v43 + 16) = v45;
      *(void *)(v43 + 24) = v47;
      unint64_t v6 = v43 | 0x8000000000000000;
      *(unsigned char *)(v43 + 32) = v41;
      break;
    case 0xBuLL:
      uint64_t v49 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = swift_allocObject();
      sub_1B6B1BF68(v49, 0, a3, a4);
      *(void *)(v50 + 16) = v49;
      unint64_t v6 = v50 | 0xB000000000000000;
      break;
    case 0xCuLL:
      uint64_t v51 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v52 = swift_allocObject();
      sub_1B6B1BF68(v51, 0, a3, a4);
      *(void *)(v52 + 16) = v51;
      unint64_t v6 = v52 | 0xC000000000000000;
      break;
    case 0xFuLL:
      if (a2 != 0xF000000000000000) {
        unint64_t v6 = 0xF000000000000008;
      }
      break;
    default:
      swift_retain();
      break;
  }
  return v6;
}

uint64_t sub_1B6900B5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a2;
  if (a4)
  {
    if (a4 == 1) {
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    sub_1B6B1BF68(a2, 0, a5, a6);
    return a2;
  }
  return v6;
}

uint64_t sub_1B6900BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v43 = (char *)&v43 - v10;
  uint64_t v11 = type metadata accessor for ScriptIndex();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v18 = (char *)&v43 - v17;
  sub_1B63BCED0(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], v7);
  MEMORY[0x1F4188790](v19 - 8, v20);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v23 = sub_1B6E31118();
  uint64_t v45 = *(void *)(v23 - 8);
  uint64_t v46 = v23;
  v25.n128_f64[0] = MEMORY[0x1F4188790](v23, v24);
  uint64_t v44 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v27 = *(void **)a2;
  uint64_t v28 = *(void *)(*(void *)a2 + 16);
  if (v28)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v27 = sub_1B6C166E4(v27);
    }
    uint64_t v29 = (uint64_t)(v27 + 4);
    do
    {
      uint64_t v30 = swift_unknownObjectRetain();
      sub_1B6900694(v30, v29, a3, a4);
      swift_unknownObjectRelease();
      v29 += 32;
      --v28;
    }
    while (v28);
    *(void *)a2 = v27;
  }
  __int16 v31 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 32);
  uint64_t result = v31(a3, a4, v25);
  if (result)
  {
    uint64_t v33 = a2 + *(int *)(type metadata accessor for GraphScript(0) + 40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v33, 1, v48))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v22, 1, 1, v46);
      return sub_1B6907254((uint64_t)v22, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
    }
    sub_1B633A1CC(v33, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    sub_1B633A1CC((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = v45;
      uint64_t v35 = v14;
      uint64_t v36 = v46;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v22, v35, v46);
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v37 = 1;
      uint64_t v34 = v45;
      uint64_t v36 = v46;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v22, v37, 1, v36);
    sub_1B633A09C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v36) == 1) {
      return sub_1B6907254((uint64_t)v22, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
    }
    uint64_t v38 = v44;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v44, v22, v36);
    char v39 = ((uint64_t (*)(uint64_t, uint64_t))v31)(a3, a4);
    uint64_t v40 = v36;
    uint64_t v41 = (uint64_t)v43;
    if (v39) {
      (*(void (**)(char *, uint64_t, unint64_t, uint64_t (*)(), void, uint64_t, uint64_t))(a4 + 24))(v38, 0x6E49747069726353, 0xEB00000000786564, sub_1B6C117A8, 0, a3, a4);
    }
    else {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v43, v38, v40);
    }
    uint64_t v42 = v48;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v40);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v41, 0, 1, v42);
    return sub_1B69072C4(v41, v33);
  }
  return result;
}

unint64_t sub_1B690110C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 24) = v5;
  return sub_1B62C6AA8(v2);
}

BOOL sub_1B6901134(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 5u:
      if (a2 != 5) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 6u:
      if (a2 != 6) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 7u:
      if (a2 != 7) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 8u:
      if (a2 != 8) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 9u:
      if (a2 != 9) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0xAu:
      if (a2 != 10) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0xBu:
      if (a2 != 11) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0xCu:
      if (a2 != 12) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0xDu:
      if (a2 != 13) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0xEu:
      if (a2 != 14) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0xFu:
      if (a2 != 15) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0x10u:
      if (a2 != 16) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0x11u:
      if (a2 != 17) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0x12u:
      if (a2 != 18) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0x13u:
      if (a2 != 19) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0x14u:
      if (a2 != 20) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0x15u:
      if (a2 != 21) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    case 0x16u:
      if (a2 != 22) {
        goto LABEL_40;
      }
      BOOL result = 1;
      break;
    default:
      if (a2 - 5 < 0x12) {
LABEL_40:
      }
        BOOL result = 0;
      else {
        BOOL result = a1 == a2;
      }
      break;
  }
  return result;
}

uint64_t sub_1B69012F0(long long *a1, long long *a2)
{
  sub_1B6906CE8(a1, (uint64_t)&v27);
  uint64_t v4 = (void *)v27;
  switch(v30)
  {
    case 1:
      sub_1B6906DA8(&v27, (uint64_t)&v31);
      sub_1B6906CE8(a2, (uint64_t)&v24);
      if (v26 != 1) {
        goto LABEL_33;
      }
      sub_1B6906DA8((long long *)v24.i8, (uint64_t)&v20);
      sub_1B6906DA8(&v31, (uint64_t)&v32);
      uint64_t v5 = v33;
      switch(v33)
      {
        case 0:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 0;
          goto LABEL_44;
        case 1:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 1;
          goto LABEL_44;
        case 2:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 2;
          goto LABEL_44;
        case 3:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 3;
          goto LABEL_44;
        case 4:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 4;
          goto LABEL_44;
        case 5:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 5;
          goto LABEL_44;
        case 6:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 6;
          goto LABEL_44;
        case 7:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 7;
          goto LABEL_44;
        case 8:
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          BOOL v6 = v22 == 8;
LABEL_44:
          char v7 = v6;
          sub_1B6906D00((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1B67C511C);
          return v7 & 1;
        default:
          uint64_t v17 = v32;
          unint64_t v18 = v34;
          sub_1B6906DA8(&v20, (uint64_t)&v21);
          if (v22 < 9) {
            goto LABEL_33;
          }
          unint64_t v19 = v23;
          if (v17 != v21 || v5 != v22)
          {
            char v7 = 0;
            if ((sub_1B6E334B8() & 1) == 0) {
              return v7 & 1;
            }
          }
          sub_1B6906D00((uint64_t)a2, (void (*)(void, void, void, void, void))sub_1B67C51E0);
          sub_1B6906D00((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1B67C51E0);
          sub_1B67C52A4(v18);
          sub_1B67C52A4(v19);
          char v7 = sub_1B69B18E4(v18, v19);
          sub_1B678FC34(v19);
          sub_1B678FC34(v18);
          break;
      }
      goto LABEL_11;
    case 2:
      sub_1B6906CE8(a2, (uint64_t)&v24);
      if (v26 == 2) {
        goto LABEL_8;
      }
      goto LABEL_33;
    case 3:
      sub_1B6906CE8(a2, (uint64_t)&v24);
      if (v26 != 3) {
        goto LABEL_33;
      }
      uint64_t v8 = (void *)v24.i64[0];
      sub_1B6906D00((uint64_t)a2, (void (*)(void, void, void, void, void))sub_1B67C51E0);
      sub_1B6906D00((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1B67C51E0);
      char v7 = sub_1B6A5F07C(v4, v8);
LABEL_11:
      sub_1B6906D00((uint64_t)a2, (void (*)(void, void, void, void, void))sub_1B67C511C);
      sub_1B6906D00((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1B67C511C);
      return v7 & 1;
    case 4:
      uint64_t v9 = *((void *)&v27 + 1);
      sub_1B6906CE8(a2, (uint64_t)&v24);
      if (v26 != 4) {
        goto LABEL_33;
      }
      if (v4 == (void *)v24.i64[0] && v9 == v24.i64[1]) {
        goto LABEL_35;
      }
      char v11 = sub_1B6E334B8();
LABEL_20:
      char v7 = v11;
      return v7 & 1;
    case 5:
      sub_1B6906CE8(a2, (uint64_t)&v24);
      if (v26 != 5) {
        goto LABEL_33;
      }
      char v11 = sub_1B6901134(v4, v24.u8[0]);
      goto LABEL_20;
    case 6:
      if (v28 | v29 | (unint64_t)v27 | *((void *)&v27 + 1))
      {
        sub_1B6906CE8(a2, (uint64_t)&v24);
        if (v26 != 6 || (v24.i64[0] == 1 ? (BOOL v12 = (v25.i64[0] | v25.i64[1] | v24.i64[1]) == 0) : (BOOL v12 = 0), !v12))
        {
LABEL_33:
          char v7 = 0;
          return v7 & 1;
        }
      }
      else
      {
        sub_1B6906CE8(a2, (uint64_t)&v24);
        int8x16_t v13 = vorrq_s8(v24, v25);
        int8x8_t v14 = vorr_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL));
        if (v26 != 6 || *(void *)&v14 != 0) {
          goto LABEL_33;
        }
      }
LABEL_35:
      char v7 = 1;
      return v7 & 1;
    default:
      sub_1B6906CE8(a2, (uint64_t)&v24);
      if (v26) {
        goto LABEL_33;
      }
LABEL_8:
      char v7 = v24.u8[0] == v4;
      return v7 & 1;
  }
}

uint64_t sub_1B690176C(unint64_t a1, unint64_t a2)
{
  switch(a1 >> 60)
  {
    case 1uLL:
      if (a2 >> 60 != 1) {
        goto LABEL_106;
      }
      uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      sub_1B664D9F0((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v73);
      sub_1B664D9F0((a2 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v70);
      BOOL v8 = v74 == v71 && v75 == v72;
      if (v8 || (char v3 = 0, (sub_1B6E334B8() & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v9 = sub_1B6E32738();
        if (v9 == sub_1B6E32738())
        {
          if (v5 == v7 && v4 == v6) {
            char v3 = 1;
          }
          else {
            char v3 = sub_1B6E334B8();
          }
        }
        else
        {
          char v3 = 0;
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      goto LABEL_140;
    case 2uLL:
      if (a2 >> 60 != 2) {
        goto LABEL_106;
      }
      sub_1B664D9F0((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v73);
      sub_1B664D9F0((a2 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v70);
      if (v74 == v71 && v75 == v72) {
        char v3 = 1;
      }
      else {
        char v3 = sub_1B6E334B8();
      }
LABEL_140:
      sub_1B66490B8((uint64_t)&v70);
      sub_1B66490B8((uint64_t)&v73);
      return v3 & 1;
    case 3uLL:
      if (a2 >> 60 != 3) {
        goto LABEL_106;
      }
      if (*(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        || *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x14) != *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x14))
      {
        goto LABEL_106;
      }
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v16 = sub_1B6E32738();
      if (v16 != sub_1B6E32738()) {
        goto LABEL_84;
      }
      if (v12 != v15 || v13 != v14) {
        goto LABEL_136;
      }
      goto LABEL_94;
    case 4uLL:
      if (a2 >> 60 != 4) {
        goto LABEL_106;
      }
      if (*(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        || *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x14) != *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x14))
      {
        goto LABEL_106;
      }
      uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      int v20 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x44);
      uint64_t v22 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      int v23 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x44);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v24 = sub_1B6E32738();
      if (v24 != sub_1B6E32738()) {
        goto LABEL_48;
      }
      if (v19 == v22 && v18 == v21)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v69 = sub_1B6E334B8();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        char v3 = 0;
        if ((v69 & 1) == 0) {
          return v3 & 1;
        }
      }
      char v3 = v20 == v23;
      return v3 & 1;
    case 5uLL:
      if (a2 >> 60 != 5
        || *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10))
      {
        goto LABEL_106;
      }
      char v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      return v3 & 1;
    case 6uLL:
      if (a2 >> 60 != 6) {
        goto LABEL_106;
      }
      uint64_t v47 = a1 & 0xFFFFFFFFFFFFFFFLL;
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)) {
        goto LABEL_106;
      }
      uint64_t v48 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v49 = *(void *)(v47 + 32);
      uint64_t v50 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v51 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      goto LABEL_75;
    case 7uLL:
      if (a2 >> 60 != 7) {
        goto LABEL_106;
      }
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v27 = *(unsigned __int8 *)(v25 + 33);
      int v28 = *(unsigned __int8 *)(v25 + 34);
      char v29 = *(unsigned char *)(v25 + 35);
      uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v31 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      int v32 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x21);
      int v33 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x22);
      char v34 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x23);
      if (*(unsigned char *)(v25 + 32))
      {
        uint64_t v35 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        if (*(unsigned char *)(v25 + 32) == 1)
        {
          if (v31 != 1) {
            goto LABEL_106;
          }
          if (v26 == v30 && *(void *)(v25 + 24) == v35)
          {
            char v3 = 0;
          }
          else
          {
            char v3 = 0;
            if ((sub_1B6E334B8() & 1) == 0) {
              return v3 & 1;
            }
          }
          if (v27 == v32 && v28 == v33) {
            goto LABEL_146;
          }
          return v3 & 1;
        }
        if (v31 != 2) {
          goto LABEL_106;
        }
        BOOL v61 = (v35 | v30) == 0;
      }
      else
      {
        if (*(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20)) {
          goto LABEL_106;
        }
        BOOL v61 = v26 == v30;
      }
      if (v61 && v27 == v32 && v28 == v33)
      {
LABEL_146:
        char v3 = v29 ^ v34 ^ 1;
        return v3 & 1;
      }
LABEL_106:
      char v3 = 0;
      return v3 & 1;
    case 8uLL:
      if (a2 >> 60 != 8) {
        goto LABEL_106;
      }
      uint64_t v52 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v48 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v53 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      if (!*(unsigned char *)(v52 + 32))
      {
        if (*(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20)) {
          BOOL v64 = 0;
        }
        else {
          BOOL v64 = v48 == v50;
        }
        char v3 = v64;
        return v3 & 1;
      }
      uint64_t v51 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (*(unsigned char *)(v52 + 32) != 1)
      {
        char v3 = v53 == 2 && (v51 | v50) == 0;
        return v3 & 1;
      }
      if (v53 != 1) {
        goto LABEL_106;
      }
      uint64_t v49 = *(void *)(v52 + 24);
LABEL_75:
      if (v48 == v50 && v49 == v51)
      {
LABEL_87:
        char v3 = 1;
        return v3 & 1;
      }
      return sub_1B6E334B8();
    case 9uLL:
      if (a2 >> 60 != 9) {
        goto LABEL_106;
      }
      uint64_t v38 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v37 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      int v39 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
      uint64_t v41 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      int v42 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v43 = sub_1B6E32738();
      if (v43 != sub_1B6E32738())
      {
LABEL_48:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_106;
      }
      if (v38 == v41 && v37 == v40)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v66 = sub_1B6E334B8();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        char v3 = 0;
        if ((v66 & 1) == 0) {
          return v3 & 1;
        }
      }
      BOOL v68 = v42 != 5 && v39 == v42;
      if (v39 == 5) {
        char v3 = v42 == 5;
      }
      else {
        char v3 = v68;
      }
      return v3 & 1;
    case 0xAuLL:
      if (a2 >> 60 != 10) {
        goto LABEL_106;
      }
      uint64_t v57 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v56 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v58 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v59 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v60 = sub_1B6E32738();
      if (v60 == sub_1B6E32738())
      {
        if (v57 == v58 && v56 == v59) {
LABEL_94:
        }
          char v3 = 1;
        else {
LABEL_136:
        }
          char v3 = sub_1B6E334B8();
      }
      else
      {
LABEL_84:
        char v3 = 0;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v3 & 1;
    case 0xBuLL:
      if (a2 >> 60 != 11) {
        goto LABEL_106;
      }
      goto LABEL_52;
    case 0xCuLL:
      if (a2 >> 60 != 12) {
        goto LABEL_106;
      }
LABEL_52:
      if (*(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)) {
        goto LABEL_106;
      }
      char v3 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x14) == *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
      return v3 & 1;
    case 0xDuLL:
      sub_1B6906CE8((long long *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 16), (uint64_t)&v70);
      if (a2 >> 60 != 13) {
        goto LABEL_106;
      }
      sub_1B6906CE8((long long *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 16), (uint64_t)&v73);
      sub_1B6906D00((uint64_t)&v70, (void (*)(void, void, void, void, void))sub_1B67C51E0);
      sub_1B6906D00((uint64_t)&v73, (void (*)(void, void, void, void, void))sub_1B67C51E0);
      char v3 = sub_1B69012F0(&v70, &v73);
      sub_1B6906D00((uint64_t)&v73, (void (*)(void, void, void, void, void))sub_1B67C511C);
      sub_1B6906D00((uint64_t)&v70, (void (*)(void, void, void, void, void))sub_1B67C511C);
      return v3 & 1;
    case 0xEuLL:
      if (a2 >> 60 != 14) {
        goto LABEL_106;
      }
      uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v45 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      BOOL v46 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
         && *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (v46 || (char v3 = 0, (sub_1B6E334B8() & 1) != 0)) {
        char v3 = v44 == v45;
      }
      return v3 & 1;
    case 0xFuLL:
      if (a1 != 0xF000000000000000 || a2 != 0xF000000000000000) {
        goto LABEL_106;
      }
      goto LABEL_87;
    default:
      if (a2 >> 60) {
        goto LABEL_106;
      }
      char v3 = *(unsigned char *)(a1 + 16) ^ *(unsigned char *)(a2 + 16) ^ 1;
      return v3 & 1;
  }
}

uint64_t sub_1B69021B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6) {
      return a1 == a4;
    }
    return 0;
  }
  if (a3 != 1) {
    return a6 == 2 && !(a5 | a4);
  }
  if (a6 != 1) {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return sub_1B6E334B8();
  }
}

uint64_t sub_1B6902230(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  switch(a2)
  {
    case 0:
      if (a5) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 1:
      if (a5 != 1) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 2:
      if (a5 != 2) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 3:
      if (a5 != 3) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 4:
      if (a5 != 4) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 5:
      if (a5 != 5) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 6:
      if (a5 != 6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 7:
      if (a5 != 7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 8:
      if (a5 != 8) {
        goto LABEL_21;
      }
LABEL_19:
      uint64_t result = 1;
      break;
    default:
      if (a5 >= 9)
      {
        if (a1 == a4 && a2 == a5 || (char v9 = sub_1B6E334B8(), result = 0, (v9 & 1) != 0))
        {
          sub_1B67C52A4(a3);
          sub_1B67C52A4(a6);
          char v10 = sub_1B69B18E4(a3, a6);
          sub_1B678FC34(a6);
          sub_1B678FC34(a3);
          uint64_t result = v10 & 1;
        }
      }
      else
      {
LABEL_21:
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

void *sub_1B6902388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B69098C8(0, (unint64_t *)&qword_1E9DD0A58, MEMORY[0x1E4FBBD58]);
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = (void *)v4;
  uint64_t v6 = 0;
  uint64_t v25 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v13 = v4 + 64;
  uint64_t v23 = v8;
  int64_t v24 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v22 = v8 + 40;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_5;
    }
    uint64_t v19 = v6 + 1;
    if (v6 + 1 >= v24) {
      return v5;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v24) {
        return v5;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v24) {
          return v5;
        }
        unint64_t v20 = *(void *)(v23 + 8 * v19);
        if (!v20)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v24) {
            return v5;
          }
          unint64_t v20 = *(void *)(v23 + 8 * v19);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v6 = v19;
LABEL_5:
    char v16 = *(unsigned char *)(*(void *)(v25 + 48) + v15);
    uint64_t v17 = *(void *)(*(void *)(v25 + 56) + 8 * v15);
    uint64_t ObjectType = swift_getObjectType();
    sub_1B6B1BF68(v17, 1, ObjectType, a3);
    *(void *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(v5[6] + v15) = v16;
    *(void *)(v5[7] + 8 * v15) = v17;
    ++v5[2];
  }
  while (v24 - 5 != v6)
  {
    unint64_t v20 = *(void *)(v22 + 8 * v6++);
    if (v20)
    {
      uint64_t v19 = v6 + 4;
      goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_1B6902590()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B69025DC()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6902628(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746365726964 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E6572727563 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B6902768(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737365636361 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B6F3D7D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B69028B4()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B69028FC()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6902944()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B690297C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v33[13] = *MEMORY[0x1E4F143B8];
  sub_1B6339768(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8, v10);
  unint64_t v12 = (char *)v29 - v11;
  sub_1B6339678(a1, (uint64_t)v29 - v11, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
  uint64_t v13 = *(void *)&v12[v9[10]];
  if (v13)
  {
    unint64_t v14 = *(void (**)(void *))(v13 + 32);
    sub_1B6339544((uint64_t)v12, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
    uint64_t v15 = v9[14];
    char v16 = (uint64_t *)(a1 + v9[15]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = *(void *)(a1 + v15);
    char v20 = *(unsigned char *)(a1 + v15 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    double v21 = sub_1B633A2F4(v17, v18, v19, v20, a4, 0, (uint64_t)v33);
    uint64_t v22 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
    uint64_t v23 = (void *)thread_worker_index(&thread_worker_index, v21);
    uint64_t v24 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if (sub_1B62C6548(*(void *)(v24 + 8 * *v23 + 8)))
    {
      uint64_t v25 = *(void *)(*(void *)(v24 + 8 * *(void *)v22(&thread_worker_index) + 8) + 32);
      uint64_t v26 = v33[0];
      int v27 = sub_1B633A8FC(MEMORY[0x1E4FBC860]);
      v29[0] = a2;
      v29[1] = a3;
      v29[3] = 0;
      v29[4] = 0;
      v29[2] = v25;
      char v30 = 1;
      uint64_t v31 = v26;
      int v32 = v27;
      v14(v29);
      swift_bridgeObjectRelease();
      sub_1B633A414((uint64_t)v33, a1, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6902C68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  unint64_t v44 = a3;
  v55[13] = *MEMORY[0x1E4F143B8];
  sub_1B6339768(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v12);
  unint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = type metadata accessor for SimpleScript(0);
  MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v18 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v23 = v7[13];
  int v24 = *(unsigned __int8 *)(a1 + v23);
  sub_1B633A1CC(a1, (uint64_t)&v43 - v21, type metadata accessor for SimpleScript);
  int v25 = v22[33];
  sub_1B633A09C((uint64_t)v22, type metadata accessor for SimpleScript);
  if (v24 != 1) {
    goto LABEL_4;
  }
  if (v25 == 1) {
    return 0;
  }
  if (!v25) {
LABEL_4:
  }
    *(unsigned char *)(a1 + v23) = 1;
  sub_1B6339678(a1, (uint64_t)v14, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
  uint64_t v26 = *(void *)&v14[v7[10]];
  if (v26)
  {
    uint64_t v43 = *(void (**)(uint64_t *))(v26 + 32);
    sub_1B6339544((uint64_t)v14, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
    sub_1B6339678(a1, (uint64_t)v10, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
    sub_1B633A1CC((uint64_t)v10, (uint64_t)v18, type metadata accessor for SimpleScript);
    sub_1B6339544((uint64_t)v10, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
    uint64_t v27 = *v18;
    swift_bridgeObjectRetain();
    sub_1B633A09C((uint64_t)v18, type metadata accessor for SimpleScript);
    uint64_t v28 = v7[14];
    uint64_t v29 = *(void *)(a1 + v7[15] + 8);
    uint64_t v30 = *(void *)(a1 + v28);
    char v31 = *(unsigned char *)(a1 + v28 + 8);
    swift_bridgeObjectRetain();
    double v32 = sub_1B633A2F4(v27, v29, v30, v31, v45, 0, (uint64_t)v55);
    int v33 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
    char v34 = (void *)thread_worker_index(&thread_worker_index, v32);
    uint64_t v35 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if (sub_1B62C6548(*(void *)(v35 + 8 * *v34 + 8)))
    {
      int v36 = v44;
      unint64_t v37 = HIDWORD(v44);
      uint64_t v38 = *(void *)(*(void *)(v35 + 8 * *(void *)v33(&thread_worker_index) + 8) + 32);
      uint64_t v39 = v55[0];
      uint64_t v40 = sub_1B633A8FC(MEMORY[0x1E4FBC860]);
      uint64_t v46 = a2;
      int v47 = v36;
      int v48 = v37;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v49 = v38;
      uint64_t v41 = 1;
      char v52 = 1;
      uint64_t v53 = v39;
      long long v54 = v40;
      v43(&v46);
      swift_bridgeObjectRelease();
      sub_1B633A414((uint64_t)v55, a1, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v41;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6903120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a5;
  uint64_t v46 = a4;
  uint64_t v44 = a3;
  v56[13] = *MEMORY[0x1E4F143B8];
  sub_1B6339768(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = type metadata accessor for TriggerScript(0);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v19 = (uint64_t *)((char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)&v42 - v22;
  uint64_t v24 = v8[13];
  int v25 = *(unsigned __int8 *)(a1 + v24);
  sub_1B633A1CC(a1, (uint64_t)&v42 - v22, type metadata accessor for TriggerScript);
  int v26 = v23[40];
  sub_1B633A09C((uint64_t)v23, type metadata accessor for TriggerScript);
  if (v25 != 1) {
    goto LABEL_4;
  }
  if (v26 == 1) {
    return 0;
  }
  if (!v26) {
LABEL_4:
  }
    *(unsigned char *)(a1 + v24) = 1;
  sub_1B6339678(a1, (uint64_t)v15, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
  uint64_t v27 = *(void *)&v15[v8[10]];
  if (v27)
  {
    uint64_t v43 = *(void (**)(uint64_t *))(v27 + 32);
    sub_1B6339544((uint64_t)v15, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
    sub_1B6339678(a1, (uint64_t)v11, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
    sub_1B633A1CC((uint64_t)v11, (uint64_t)v19, type metadata accessor for TriggerScript);
    sub_1B6339544((uint64_t)v11, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
    uint64_t v28 = *v19;
    swift_bridgeObjectRetain();
    sub_1B633A09C((uint64_t)v19, type metadata accessor for TriggerScript);
    uint64_t v29 = v8[14];
    uint64_t v30 = *(void *)(a1 + v8[15] + 8);
    uint64_t v31 = *(void *)(a1 + v29);
    char v32 = *(unsigned char *)(a1 + v29 + 8);
    swift_bridgeObjectRetain();
    double v33 = sub_1B633A2F4(v28, v30, v31, v32, v46, 0, (uint64_t)v56);
    char v34 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
    uint64_t v35 = (void *)thread_worker_index(&thread_worker_index, v33);
    uint64_t v36 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if (sub_1B62C6548(*(void *)(v36 + 8 * *v35 + 8)))
    {
      uint64_t v37 = *(void *)(*(void *)(v36 + 8 * *(void *)v34(&thread_worker_index) + 8) + 32);
      uint64_t v47 = a2;
      int v48 = v39;
      int v49 = v38;
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v50 = v37;
      uint64_t v40 = 1;
      char v53 = 1;
      uint64_t v54 = v56[0];
      uint64_t v55 = v45;
      v43(&v47);
      sub_1B633A414((uint64_t)v56, a1, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v40;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

unint64_t sub_1B69035D0(uint64_t a1)
{
  swift_retain();
  unint64_t v2 = sub_1B6C316A0(a1, (uint64_t)&type metadata for IsSubEntityOf);
  char v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B636A9A0(v2);
    uint64_t v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000016;
}

uint64_t sub_1B69036F0(uint64_t a1)
{
  unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  char v3 = sub_1B67DEA90(MEMORY[0x1E4FBC860]);
  char v4 = sub_1B67DEB7C((uint64_t)v2);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (v6)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_1B6C166E4(v5);
    }
    uint64_t v7 = 0;
    uint64_t v56 = a1;
    while (1)
    {
      *(void *)a1 = v5;
      unint64_t v9 = v5[v7 + 4];
      switch(v9 >> 60)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
          goto LABEL_9;
        case 8uLL:
          if (*(unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x20) < 2u) {
            goto LABEL_9;
          }
          goto LABEL_7;
        case 0xDuLL:
          if (*(unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x30) - 1 < 5) {
            goto LABEL_7;
          }
          if (*(unsigned char *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x30))
          {
            if (*(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x20) | *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x28) | *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10) | *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18)) {
              goto LABEL_7;
            }
LABEL_9:
            swift_retain();
          }
          else
          {
            uint64_t v39 = swift_allocObject();
            *(_OWORD *)(v39 + 16) = 0u;
            *(_OWORD *)(v39 + 32) = 0u;
            *(unsigned char *)(v39 + 48) = 6;
            unint64_t v9 = v39 | 0xD000000000000000;
          }
LABEL_10:
          if (!v4[2] || (unint64_t v10 = sub_1B69FAEA8(v9), (v11 & 1) == 0))
          {
            uint64_t v19 = &v5[v7];
            uint64_t v58 = v2[2];
            uint64_t v60 = v2;
            v19[6] = v58;
            *((unsigned char *)v19 + 56) = 0;
            char v20 = v5[v7 + 5];
            sub_1B6906E84(v9);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v22 = sub_1B69FAEA8(v9);
            char v24 = v23;
            uint64_t v25 = v3[2] + ((v23 & 1) == 0);
            if (v3[3] >= v25)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_1B6ACF1D4();
              }
            }
            else
            {
              sub_1B6ABBEB0(v25, isUniquelyReferenced_nonNull_native);
              unint64_t v26 = sub_1B69FAEA8(v9);
              if ((v24 & 1) != (v27 & 1)) {
                goto LABEL_69;
              }
              unint64_t v22 = v26;
            }
            int v28 = (v20 & 2) >> 1;
            if (v24)
            {
              *(unsigned char *)(v3[7] + v22) = v28;
            }
            else
            {
              v3[(v22 >> 6) + 8] |= 1 << v22;
              *(void *)(v3[6] + 8 * v22) = v9;
              *(unsigned char *)(v3[7] + v22) = v28;
              ++v3[2];
              sub_1B62C6AA8(v9);
            }
            swift_bridgeObjectRelease();
            char v29 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v31 = sub_1B69FAEA8(v9);
            char v32 = v30;
            uint64_t v33 = v4[2] + ((v30 & 1) == 0);
            if (v4[3] >= v33)
            {
              if (v29)
              {
                unint64_t v2 = v60;
                if ((v30 & 1) == 0) {
                  goto LABEL_28;
                }
              }
              else
              {
                sub_1B6ACF03C();
                unint64_t v2 = v60;
                if ((v32 & 1) == 0) {
                  goto LABEL_28;
                }
              }
            }
            else
            {
              sub_1B6ABBBEC(v33, v29);
              unint64_t v34 = sub_1B69FAEA8(v9);
              if ((v32 & 1) != (v35 & 1))
              {
LABEL_69:
                sub_1B6E33838();
                __break(1u);
                JUMPOUT(0x1B6903D4CLL);
              }
              unint64_t v31 = v34;
              unint64_t v2 = v60;
              if ((v32 & 1) == 0)
              {
LABEL_28:
                v4[(v31 >> 6) + 8] |= 1 << v31;
                uint64_t v36 = 8 * v31;
                *(void *)(v4[6] + v36) = v9;
                *(void *)(v4[7] + v36) = v58;
                ++v4[2];
                sub_1B62C6AA8(v9);
LABEL_32:
                swift_bridgeObjectRelease();
                sub_1B68D46AC(v9);
                a1 = v56;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v2 = sub_1B68C32A0(0, v2[2] + 1, 1, v2);
                }
                unint64_t v38 = v2[2];
                unint64_t v37 = v2[3];
                if (v38 >= v37 >> 1) {
                  unint64_t v2 = sub_1B68C32A0(v37 > 1, v38 + 1, 1, v2);
                }
                v2[2] = v38 + 1;
                v2[v38 + 4] = v9;
                goto LABEL_7;
              }
            }
            *(void *)(v4[7] + 8 * v31) = v58;
            goto LABEL_32;
          }
          uint64_t v12 = *(void *)(v4[7] + 8 * v10);
          if ((v5[v7 + 5] & 2) != 0)
          {
            uint64_t v59 = v2;
            char v57 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v14 = sub_1B69FAEA8(v9);
            char v15 = v13;
            uint64_t v16 = v3[2] + ((v13 & 1) == 0);
            if (v3[3] >= v16)
            {
              if (v57)
              {
                if ((v13 & 1) == 0) {
                  goto LABEL_16;
                }
              }
              else
              {
                sub_1B6ACF1D4();
                if ((v15 & 1) == 0) {
                  goto LABEL_16;
                }
              }
            }
            else
            {
              sub_1B6ABBEB0(v16, v57);
              unint64_t v17 = sub_1B69FAEA8(v9);
              if ((v15 & 1) != (v18 & 1)) {
                goto LABEL_69;
              }
              unint64_t v14 = v17;
              if ((v15 & 1) == 0)
              {
LABEL_16:
                v3[(v14 >> 6) + 8] |= 1 << v14;
                *(void *)(v3[6] + 8 * v14) = v9;
                *(unsigned char *)(v3[7] + v14) = 1;
                ++v3[2];
                sub_1B62C6AA8(v9);
LABEL_48:
                swift_bridgeObjectRelease();
                sub_1B68D46AC(v9);
                unint64_t v2 = v59;
                a1 = v56;
                goto LABEL_6;
              }
            }
            *(unsigned char *)(v3[7] + v14) = 1;
            goto LABEL_48;
          }
          sub_1B68D46AC(v9);
LABEL_6:
          uint64_t v8 = &v5[v7];
          v8[6] = v12;
          *((unsigned char *)v8 + 56) = 0;
LABEL_7:
          uint64_t v5 = *(void **)a1;
          v7 += 4;
          if (!--v6) {
            goto LABEL_55;
          }
          break;
        case 0xFuLL:
          BOOL v40 = v9 == 0xF000000000000000;
          unint64_t v9 = 0xF000000000000000;
          if (!v40) {
            goto LABEL_7;
          }
          goto LABEL_10;
        default:
          goto LABEL_7;
      }
    }
  }
LABEL_55:
  int64_t v41 = v2[2];
  uint64_t v42 = MEMORY[0x1E4FBC860];
  if (v41)
  {
    uint64_t v61 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C728(0, v41, 0);
    uint64_t v43 = 0;
    uint64_t v42 = v61;
    uint64_t v44 = v2;
    while (1)
    {
      int64_t v45 = v41;
      unint64_t v46 = v2[v43 + 4];
      uint64_t v47 = v3[2];
      sub_1B62C6AA8(v46);
      if (v47)
      {
        sub_1B62C6AA8(v46);
        unint64_t v48 = sub_1B69FAEA8(v46);
        if (v49)
        {
          char v50 = *(unsigned char *)(v3[7] + v48);
          sub_1B62C6A70(v46);
          if (v50) {
            char v51 = 3;
          }
          else {
            char v51 = 1;
          }
          goto LABEL_64;
        }
        sub_1B62C6A70(v46);
      }
      char v51 = 1;
LABEL_64:
      unint64_t v53 = *(void *)(v61 + 16);
      unint64_t v52 = *(void *)(v61 + 24);
      if (v53 >= v52 >> 1) {
        sub_1B6C3C728(v52 > 1, v53 + 1, 1);
      }
      *(void *)(v61 + 16) = v53 + 1;
      uint64_t v54 = v61 + 32 * v53;
      *(void *)(v54 + 32) = v46;
      ++v43;
      *(unsigned char *)(v54 + 40) = v51;
      *(void *)(v54 + 48) = 0;
      *(unsigned char *)(v54 + 56) = 1;
      int64_t v41 = v45;
      unint64_t v2 = v44;
      if (v45 == v43)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1B6903D8C(uint64_t a1)
{
  unint64_t v2 = (void *)sub_1B68CD61C(MEMORY[0x1E4FBC860]);
  uint64_t v39 = v3;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v35 = sub_1B68C7950((uint64_t)v2, (uint64_t)v39, (void (*)(unint64_t *__return_ptr, uint64_t *))sub_1B690110C);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v35;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (unsigned char *)(a1 + 56);
  while (1)
  {
    unint64_t v9 = *((void *)v5 - 3);
    if (v9 >> 60 != 13) {
      goto LABEL_5;
    }
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    int v11 = *(unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
    if (v11 == 4)
    {
      uint64_t v41 = *((void *)v5 - 1);
      char v43 = *v5;
      uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    }
    else
    {
      if (v11 != 3) {
        goto LABEL_5;
      }
      uint64_t v41 = *((void *)v5 - 1);
      char v43 = *v5;
      uint64_t v13 = v10 + 16;
      uint64_t v10 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v13 + 8);
    }
    char v42 = *(v5 - 16);
    swift_bridgeObjectRetain();
    uint64_t v38 = v10;
    if (!v2[2]) {
      break;
    }
    sub_1B62C6AA8(v9);
    swift_bridgeObjectRetain();
    sub_1B62B2CE0(v10, v12);
    char v15 = v14;
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_17;
    }
    if (v2[2])
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1B62B2CE0(v10, v12);
      if (v17)
      {
        unint64_t v18 = *(void *)(v2[7] + 32 * v16);
        sub_1B62C6AA8(v18);
      }
      else
      {
        unint64_t v18 = 0xF000000000000007;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v18 = 0xF000000000000007;
    }
    swift_retain();
    char v34 = sub_1B690176C(v18, v9);
    sub_1B62C6A70(v9);
    sub_1B68D46AC(v18);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B67C5B68();
      swift_allocError();
      *unint64_t v37 = 0xD000000000000013;
      v37[1] = 0x80000001B6F3D4D0;
      swift_willThrow();
      sub_1B62C6A70(v9);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1B62C6A70(v9);
LABEL_5:
    v5 += 32;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  swift_retain();
LABEL_17:
  unint64_t v40 = v9;
  swift_retain_n();
  uint64_t v19 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v22 = sub_1B62B2CE0(v10, v12);
  uint64_t v23 = v10;
  char v24 = v21;
  uint64_t v25 = v19[2] + ((v21 & 1) == 0);
  if (v19[3] >= v25)
  {
    uint64_t v26 = v12;
    if (isUniquelyReferenced_nonNull_native)
    {
      unint64_t v2 = v19;
      if (v21) {
        goto LABEL_3;
      }
    }
    else
    {
      sub_1B6ACF36C();
      unint64_t v2 = v19;
      if (v24) {
        goto LABEL_3;
      }
    }
LABEL_23:
    v2[(v22 >> 6) + 8] |= 1 << v22;
    char v29 = (uint64_t *)(v2[6] + 16 * v22);
    *char v29 = v38;
    v29[1] = v26;
    uint64_t v30 = v2[7] + 32 * v22;
    *(void *)uint64_t v30 = v40;
    *(unsigned char *)(v30 + 8) = v42;
    *(void *)(v30 + 16) = v41;
    *(unsigned char *)(v30 + 24) = v43;
    ++v2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v39 = sub_1B6335858(0, v39[2] + 1, 1, v39);
    }
    unint64_t v32 = v39[2];
    unint64_t v31 = v39[3];
    if (v32 >= v31 >> 1) {
      uint64_t v39 = sub_1B6335858(v31 > 1, v32 + 1, 1, v39);
    }
    v39[2] = v32 + 1;
    uint64_t v33 = &v39[2 * v32];
    v33[4] = v38;
    v33[5] = v26;
    swift_bridgeObjectRelease();
    sub_1B62C6A70(v40);
    sub_1B62C6A70(v40);
    unint64_t v8 = v40;
    goto LABEL_4;
  }
  sub_1B6ABC16C(v25, isUniquelyReferenced_nonNull_native);
  uint64_t v26 = v12;
  uint64_t v27 = sub_1B62B2CE0(v23, v12);
  if ((v24 & 1) == (v28 & 1))
  {
    unint64_t v22 = v27;
    unint64_t v2 = v19;
    if ((v24 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_3:
    uint64_t v6 = v2[7] + 32 * v22;
    unint64_t v7 = *(void *)v6;
    *(void *)uint64_t v6 = v40;
    *(unsigned char *)(v6 + 8) = v42;
    *(void *)(v6 + 16) = v41;
    *(unsigned char *)(v6 + 24) = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62C6A70(v40);
    sub_1B62C6A70(v7);
    sub_1B62C6A70(v40);
    unint64_t v8 = v40;
LABEL_4:
    sub_1B62C6A70(v8);
    goto LABEL_5;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B69042E4(uint64_t a1)
{
  unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  char v3 = sub_1B67DEC6C(MEMORY[0x1E4FBC860]);
  uint64_t v65 = MEMORY[0x1E4FBC870];
  uint64_t v57 = *(void *)(a1 + 16);
  if (v57)
  {
    uint64_t v56 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = v3;
    while (1)
    {
      uint64_t v6 = v56 + 32 * v4;
      unint64_t v7 = *(void *)v6;
      char v61 = *(unsigned char *)(v6 + 8);
      uint64_t v62 = *(void *)(v6 + 16);
      char v8 = *(unsigned char *)(v6 + 24);
      if (*(void *)v6 >> 60 != 13
        || ((unint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x30) == 1)
          ? (BOOL v10 = v9 >= 9)
          : (BOOL v10 = 0),
            !v10))
      {
        uint64_t v11 = v65;
        if (!*(void *)(v65 + 16))
        {
          sub_1B62C6AA8(v7);
          goto LABEL_19;
        }
        char v58 = *(unsigned char *)(v6 + 24);
        sub_1B6E33918();
        sub_1B62C6AA8(v7);
        swift_bridgeObjectRetain();
        sub_1B68ED020((uint64_t)&v63, v7);
        uint64_t v12 = sub_1B6E33988();
        uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
        unint64_t v14 = v12 & ~v13;
        if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_18;
        }
        unint64_t v15 = *(void *)(*(void *)(v11 + 48) + 8 * v14);
        sub_1B62C6AA8(v15);
        char v16 = sub_1B690176C(v15, v7);
        sub_1B62C6A70(v15);
        if ((v16 & 1) == 0)
        {
          uint64_t v17 = ~v13;
          while (1)
          {
            unint64_t v14 = (v14 + 1) & v17;
            if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
              break;
            }
            unint64_t v18 = *(void *)(*(void *)(v11 + 48) + 8 * v14);
            sub_1B62C6AA8(v18);
            char v19 = sub_1B690176C(v18, v7);
            sub_1B62C6A70(v18);
            if (v19) {
              goto LABEL_3;
            }
          }
LABEL_18:
          swift_bridgeObjectRelease();
          char v8 = v58;
LABEL_19:
          sub_1B62C6AA8(v7);
          sub_1B67EA238((unint64_t *)&v63, v7);
          sub_1B62C6A70((unint64_t)v63);
          sub_1B62C6AA8(v7);
LABEL_20:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v2 = sub_1B68C0FD8(0, v2[2] + 1, 1, v2);
          }
          unint64_t v21 = v2[2];
          unint64_t v20 = v2[3];
          if (v21 >= v20 >> 1) {
            unint64_t v2 = sub_1B68C0FD8(v20 > 1, v21 + 1, 1, v2);
          }
          v2[2] = v21 + 1;
          unint64_t v22 = &v2[4 * v21];
          v22[4] = v7;
          *((unsigned char *)v22 + 40) = v61;
          v22[6] = v62;
          *((unsigned char *)v22 + 56) = v8;
          goto LABEL_4;
        }
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      uint64_t v60 = v2;
      uint64_t v23 = v5;
      uint64_t v24 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v26 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v25 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      sub_1B62C6AA8(v7);
      sub_1B67C51E0(v24, v9, v26, v25, 1);
      unint64_t v27 = v26;
      uint64_t v28 = v24;
      unint64_t v29 = (unint64_t)v23;
      sub_1B678FC34(v27);
      uint64_t v55 = v24;
      if (v23[2])
      {
        swift_bridgeObjectRetain();
        sub_1B62B2CE0(v24, v9);
        char v31 = v30;
        swift_bridgeObjectRelease();
        if (v31)
        {
          uint64_t v54 = v23;
          if (v23[2])
          {
            swift_bridgeObjectRetain();
            uint64_t v32 = sub_1B62B2CE0(v28, v9);
            if (v33)
            {
              unint64_t v34 = *(void *)(v23[7] + 32 * v32);
              sub_1B62C6AA8(v34);
            }
            else
            {
              unint64_t v34 = 0xF000000000000007;
            }
            unint64_t v2 = v60;
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v34 = 0xF000000000000007;
            unint64_t v2 = v60;
          }
          swift_retain();
          char v45 = sub_1B690176C(v34, v7);
          sub_1B62C6A70(v7);
          sub_1B68D46AC(v34);
          if ((v45 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v63 = 0;
            unint64_t v64 = 0xE000000000000000;
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v63 = (void *)0xD000000000000015;
            unint64_t v64 = 0x80000001B6F3D4B0;
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            unint64_t v51 = (unint64_t)v63;
            unint64_t v52 = v64;
            sub_1B67C5B68();
            swift_allocError();
            *unint64_t v53 = v51;
            v53[1] = v52;
            swift_willThrow();
            sub_1B62C6A70(v7);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (uint64_t)v2;
          }
          swift_bridgeObjectRelease();
          uint64_t v5 = v54;
          goto LABEL_4;
        }
      }
      char v59 = v8;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v63 = (void *)v29;
      uint64_t v36 = v28;
      unint64_t v38 = sub_1B62B2CE0(v28, v9);
      char v39 = v37;
      uint64_t v40 = *(void *)(v29 + 16) + ((v37 & 1) == 0);
      if (*(void *)(v29 + 24) >= v40)
      {
        char v43 = isUniquelyReferenced_nonNull_native;
        unint64_t v2 = v60;
        if (v43)
        {
          uint64_t v5 = v63;
          if (v37) {
            goto LABEL_36;
          }
        }
        else
        {
          sub_1B6ACF36C();
          uint64_t v5 = v63;
          if (v39) {
            goto LABEL_36;
          }
        }
      }
      else
      {
        sub_1B6ABC16C(v40, isUniquelyReferenced_nonNull_native);
        uint64_t v41 = sub_1B62B2CE0(v36, v9);
        unint64_t v2 = v60;
        if ((v39 & 1) != (v42 & 1))
        {
          uint64_t result = sub_1B6E33838();
          __break(1u);
          return result;
        }
        unint64_t v38 = v41;
        uint64_t v5 = v63;
        if (v39)
        {
LABEL_36:
          uint64_t v44 = v5[7] + 32 * v38;
          sub_1B62C6A70(*(void *)v44);
          *(void *)uint64_t v44 = v7;
          *(unsigned char *)(v44 + 8) = v61;
          *(void *)(v44 + 16) = v62;
          char v8 = v59;
          *(unsigned char *)(v44 + 24) = v59;
          goto LABEL_44;
        }
      }
      v5[(v38 >> 6) + 8] |= 1 << v38;
      unint64_t v46 = (uint64_t *)(v5[6] + 16 * v38);
      *unint64_t v46 = v55;
      v46[1] = v9;
      uint64_t v47 = v5[7] + 32 * v38;
      *(void *)uint64_t v47 = v7;
      *(unsigned char *)(v47 + 8) = v61;
      *(void *)(v47 + 16) = v62;
      char v8 = v59;
      *(unsigned char *)(v47 + 24) = v59;
      ++v5[2];
      swift_bridgeObjectRetain();
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v65;
      sub_1B62C6AA8(v7);
      swift_bridgeObjectRetain();
      char v49 = sub_1B677F9DC(v7, v48);
      swift_bridgeObjectRelease();
      sub_1B62C6A70(v7);
      if ((v49 & 1) == 0)
      {
        swift_retain();
        sub_1B67EA238((unint64_t *)&v63, v7);
        sub_1B62C6A70((unint64_t)v63);
        swift_retain();
        goto LABEL_20;
      }
LABEL_4:
      ++v4;
      sub_1B62C6A70(v7);
      if (v4 == v57)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v2;
}

unint64_t sub_1B6904998(uint64_t a1)
{
  swift_retain();
  unint64_t v2 = sub_1B6C316A0(a1, (uint64_t)&type metadata for IsSubEntityOf);
  char v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B636A9A0(v2);
    uint64_t v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000015;
}

unint64_t sub_1B6904AA8(uint64_t a1)
{
  swift_retain();
  unint64_t v2 = sub_1B6C316A0(a1, (uint64_t)&type metadata for IsSubEntityOf);
  char v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B636A9A0(v2);
    uint64_t v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000018;
}

unint64_t sub_1B6904BC8(uint64_t a1)
{
  swift_retain();
  unint64_t v2 = sub_1B6C316A0(a1, (uint64_t)&type metadata for IsSubEntityOf);
  char v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B636A9A0(v2);
    uint64_t v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD00000000000001ELL;
}

unint64_t sub_1B6904CD8(uint64_t a1)
{
  swift_retain();
  unint64_t v2 = sub_1B6C316A0(a1, (uint64_t)&type metadata for IsSubEntityOf);
  char v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B636A9A0(v2);
    uint64_t v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000016;
}

uint64_t sub_1B6904DE8(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1B6906D40(0, &qword_1E9DD2348, (uint64_t (*)(void))sub_1B690546C, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v38 = v3;
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v41 = (char *)&v32 - v5;
  sub_1B6906D40(0, &qword_1E9DD2358, (uint64_t (*)(void))sub_1B69054C0, (uint64_t)&type metadata for ScriptLocation.EntityLocator.PathCodingKeys, v2);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  uint64_t v37 = v7;
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v40 = (char *)&v32 - v9;
  sub_1B6906D40(0, &qword_1E9DD2368, (uint64_t (*)(void))sub_1B6905514, (uint64_t)&type metadata for ScriptLocation.EntityLocator.DirectCodingKeys, v2);
  uint64_t v11 = v10;
  uint64_t v34 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  unint64_t v14 = (char *)&v32 - v13;
  sub_1B6906D40(0, &qword_1E9DD2378, (uint64_t (*)(void))sub_1B6905568, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CodingKeys, v2);
  uint64_t v16 = v15;
  uint64_t v39 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  char v19 = (char *)&v32 - v18;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6905568();
  uint64_t v20 = (uint64_t)v42;
  sub_1B6E33A48();
  if (v20) {
    goto LABEL_7;
  }
  uint64_t v33 = v11;
  unint64_t v21 = v40;
  unint64_t v22 = v41;
  char v42 = a1;
  uint64_t v23 = sub_1B6E32E88();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v11 = sub_1B6E32998();
    swift_allocError();
    unint64_t v29 = v28;
    sub_1B6835D08();
    *unint64_t v29 = &type metadata for ScriptLocation.EntityLocator;
    sub_1B6E32D08();
    sub_1B6E32978();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v11);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v16);
    a1 = v42;
LABEL_7:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v11;
  }
  if (*(unsigned char *)(v23 + 32))
  {
    if (*(unsigned char *)(v23 + 32) == 1)
    {
      char v45 = 1;
      sub_1B69054C0();
      sub_1B6E32CF8();
      uint64_t v24 = v36;
      uint64_t v25 = sub_1B6E32D98();
      unint64_t v26 = v21;
      uint64_t v27 = v39;
      uint64_t v11 = v25;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v16);
    }
    else
    {
      char v46 = 2;
      sub_1B690546C();
      sub_1B6E32CF8();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v16);
      uint64_t v11 = 0;
    }
  }
  else
  {
    char v44 = 0;
    sub_1B6905514();
    sub_1B6E32CF8();
    sub_1B62B1EA8();
    uint64_t v31 = v33;
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v16);
    uint64_t v11 = v43;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
  return v11;
}

unint64_t sub_1B690546C()
{
  unint64_t result = qword_1E9DD2350;
  if (!qword_1E9DD2350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2350);
  }
  return result;
}

unint64_t sub_1B69054C0()
{
  unint64_t result = qword_1E9DD2360;
  if (!qword_1E9DD2360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2360);
  }
  return result;
}

unint64_t sub_1B6905514()
{
  unint64_t result = qword_1E9DD2370;
  if (!qword_1E9DD2370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2370);
  }
  return result;
}

unint64_t sub_1B6905568()
{
  unint64_t result = qword_1E9DD2380;
  if (!qword_1E9DD2380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2380);
  }
  return result;
}

unint64_t sub_1B69055BC(void *a1)
{
  unint64_t v3 = (unint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1)
  {
LABEL_3:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C550C((uint64_t)v65, v66);
    unint64_t v3 = 0xF000000000000000;
    switch(sub_1B6E33148())
    {
      case 0:
        break;
      case 1:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B62B1EA8();
        sub_1B6E33168();
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B690601C();
        sub_1B6E33168();
        uint64_t v5 = v59;
        uint64_t v6 = *(void *)&v60[16];
        uint64_t v7 = v61;
        char v8 = v62;
        __int16 v9 = v63;
        long long v53 = *(_OWORD *)v60;
        uint64_t v10 = swift_allocObject();
        *(void *)(v10 + 16) = v59;
        *(void *)(v10 + 24) = v5;
        *(_OWORD *)(v10 + 32) = v53;
        *(void *)(v10 + 48) = v6;
        *(void *)(v10 + 56) = v7;
        *(unsigned char *)(v10 + 64) = v8;
        unint64_t v3 = v10 | 0x3000000000000000;
        *(_WORD *)(v10 + 66) = v9;
        break;
      case 2:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B62B1EA8();
        sub_1B6E33168();
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B690601C();
        sub_1B6E33168();
        uint64_t v13 = v59;
        uint64_t v12 = *(void *)v60;
        long long v54 = *(_OWORD *)&v60[8];
        uint64_t v14 = v61;
        char v15 = v62;
        __int16 v52 = v63;
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B66C6440();
        sub_1B6E33168();
        char v16 = v59;
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v59;
        *(void *)(v17 + 24) = v13;
        *(void *)(v17 + 32) = v12;
        *(_OWORD *)(v17 + 40) = v54;
        *(void *)(v17 + 56) = v14;
        *(unsigned char *)(v17 + 64) = v15;
        *(_WORD *)(v17 + 66) = v52;
        unint64_t v3 = v17 | 0x4000000000000000;
        *(unsigned char *)(v17 + 68) = v16;
        break;
      case 3:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B69061B8();
        sub_1B6E33168();
        uint64_t v18 = *(void *)v60;
        char v19 = v60[8];
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B68804B8();
        sub_1B6E33168();
        char v20 = v59;
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B62AAB40();
        sub_1B6E33168();
        char v55 = v59;
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B66C62EC();
        sub_1B6E33168();
        char v50 = v59;
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = v59;
        *(void *)(v51 + 24) = v18;
        *(unsigned char *)(v51 + 32) = v19;
        *(unsigned char *)(v51 + 33) = v20;
        *(unsigned char *)(v51 + 34) = v55;
        unint64_t v3 = v51 | 0x7000000000000000;
        *(unsigned char *)(v51 + 35) = v50;
        break;
      case 4:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B69061B8();
        sub_1B6E33168();
        uint64_t v21 = *(void *)v60;
        char v22 = v60[8];
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v59;
        *(void *)(v23 + 24) = v21;
        *(unsigned char *)(v23 + 32) = v22;
        unint64_t v3 = v23 | 0x8000000000000000;
        break;
      case 5:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B690601C();
        sub_1B6E33168();
        uint64_t v24 = *(void *)v60;
        long long v56 = *(_OWORD *)&v60[8];
        uint64_t v25 = v61;
        char v26 = v62;
        __int16 v27 = v63;
        uint64_t v28 = a1[3];
        uint64_t v29 = a1[4];
        sub_1B62C14BC(a1, v28);
        if (sub_1B62BF5E0(2023, v28, v29))
        {
          sub_1B62C550C((uint64_t)v65, v66);
          sub_1B66C6440();
          sub_1B6E33168();
          char v48 = v59;
        }
        else
        {
          char v48 = 5;
        }
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = v59;
        *(void *)(v49 + 24) = v24;
        *(_OWORD *)(v49 + 32) = v56;
        *(void *)(v49 + 48) = v25;
        *(unsigned char *)(v49 + 56) = v26;
        *(_WORD *)(v49 + 58) = v27;
        unint64_t v3 = v49 | 0x9000000000000000;
        *(unsigned char *)(v49 + 60) = v48;
        break;
      case 6:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B690601C();
        sub_1B6E33168();
        uint64_t v30 = *(void *)&v60[16];
        uint64_t v31 = v61;
        char v32 = v62;
        __int16 v33 = v63;
        long long v57 = *(_OWORD *)v60;
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v59;
        *(_OWORD *)(v34 + 24) = v57;
        *(void *)(v34 + 40) = v30;
        *(void *)(v34 + 48) = v31;
        *(unsigned char *)(v34 + 56) = v32;
        unint64_t v3 = v34 | 0xA000000000000000;
        *(_WORD *)(v34 + 58) = v33;
        break;
      case 7:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B62B1EA8();
        sub_1B6E33168();
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = v59;
        unint64_t v3 = v35 | 0xB000000000000000;
        break;
      case 8:
        unint64_t v3 = 0xF000000000000008;
        break;
      case 9:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B62B1EA8();
        sub_1B6E33168();
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v59;
        unint64_t v3 = v36 | 0xC000000000000000;
        break;
      case 10:
        sub_1B62C550C((uint64_t)v65, v66);
        uint64_t v37 = sub_1B6E33108();
        uint64_t v39 = v38;
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B69060C0();
        sub_1B6E33168();
        uint64_t v41 = v59;
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = v37;
        *(void *)(v42 + 24) = v39;
        *(void *)(v42 + 32) = v41;
        unint64_t v3 = v42 | 0xE000000000000000;
        break;
      case 11:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B6648FB4();
        sub_1B6E33168();
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B690601C();
        sub_1B6E33168();
        uint64_t v43 = *(void *)&v60[16];
        uint64_t v44 = v61;
        char v45 = v62;
        __int16 v46 = v63;
        long long v58 = *(_OWORD *)v60;
        uint64_t v47 = swift_allocObject();
        sub_1B6649008((uint64_t)v64, v47 + 16);
        *(void *)(v47 + 48) = v59;
        *(_OWORD *)(v47 + 56) = v58;
        *(void *)(v47 + 72) = v43;
        *(void *)(v47 + 80) = v44;
        *(unsigned char *)(v47 + 88) = v45;
        unint64_t v3 = v47 | 0x1000000000000000;
        *(_WORD *)(v47 + 90) = v46;
        break;
      case 12:
        sub_1B62C550C((uint64_t)v65, v66);
        sub_1B6648FB4();
        sub_1B6E33168();
        uint64_t v40 = swift_allocObject();
        sub_1B6649008((uint64_t)&v59, v40 + 16);
        unint64_t v3 = v40 | 0x2000000000000000;
        break;
      default:
        sub_1B67CD358();
        swift_allocError();
        *(void *)uint64_t v11 = 0xD000000000000024;
        *(void *)(v11 + 8) = 0x80000001B6F3D2D0;
        *(unsigned char *)(v11 + 16) = 96;
        swift_willThrow();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v65);
        goto LABEL_3;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v65);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1B6905FDC()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_1B690601C()
{
  unint64_t result = qword_1E9DD23A8;
  if (!qword_1E9DD23A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23A8);
  }
  return result;
}

uint64_t sub_1B6906070()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 92, 7);
}

unint64_t sub_1B69060C0()
{
  unint64_t result = qword_1E9DD23B0;
  if (!qword_1E9DD23B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23B0);
  }
  return result;
}

uint64_t sub_1B6906114()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B690614C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B690615C()
{
  return sub_1B690616C(60);
}

uint64_t sub_1B6906164()
{
  return sub_1B690616C(61);
}

uint64_t sub_1B690616C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

unint64_t sub_1B69061B8()
{
  unint64_t result = qword_1E9DD23B8;
  if (!qword_1E9DD23B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23B8);
  }
  return result;
}

uint64_t sub_1B690620C()
{
  return sub_1B6654748(33);
}

uint64_t sub_1B6906214()
{
  return sub_1B6654748(36);
}

uint64_t sub_1B690621C()
{
  return sub_1B66547A0(69);
}

uint64_t sub_1B6906224()
{
  return sub_1B66547A0(68);
}

unint64_t sub_1B690622C()
{
  unint64_t result = qword_1E9DD23C0;
  if (!qword_1E9DD23C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23C0);
  }
  return result;
}

unint64_t sub_1B6906280()
{
  unint64_t result = qword_1E9DD23C8;
  if (!qword_1E9DD23C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23C8);
  }
  return result;
}

unint64_t sub_1B69062D4()
{
  unint64_t result = qword_1E9DD23D8;
  if (!qword_1E9DD23D8)
  {
    sub_1B62D86B8(255, &qword_1E9DD23D0, (uint64_t)&type metadata for EntitySpace, MEMORY[0x1E4FBB718]);
    sub_1B66C6494();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23D8);
  }
  return result;
}

unint64_t sub_1B6906368()
{
  unint64_t result = qword_1E9DD23E0;
  if (!qword_1E9DD23E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23E0);
  }
  return result;
}

unint64_t sub_1B69063BC(void *a1)
{
  sub_1B6906D40(0, &qword_1E9DD23E8, (uint64_t (*)(void))sub_1B6906640, (uint64_t)&type metadata for ScriptParameter.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  char v8 = &v11[-v7];
  unint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6906640();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    v11[15] = 0;
    sub_1B6906694();
    sub_1B6E32DF8();
    unint64_t v9 = v12;
    v11[13] = 1;
    sub_1B62C6AA8(v12);
    sub_1B69066E8();
    sub_1B6E32DF8();
    v11[12] = 2;
    sub_1B6E32D68();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    sub_1B62C6A70(v9);
  }
  return v9;
}

unint64_t sub_1B6906640()
{
  unint64_t result = qword_1E9DD23F0;
  if (!qword_1E9DD23F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23F0);
  }
  return result;
}

unint64_t sub_1B6906694()
{
  unint64_t result = qword_1E9DD23F8;
  if (!qword_1E9DD23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD23F8);
  }
  return result;
}

unint64_t sub_1B69066E8()
{
  unint64_t result = qword_1E9DD2400;
  if (!qword_1E9DD2400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2400);
  }
  return result;
}

unint64_t sub_1B690673C()
{
  unint64_t result = qword_1E9DD2410;
  if (!qword_1E9DD2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2410);
  }
  return result;
}

unint64_t sub_1B6906790()
{
  unint64_t result = qword_1E9DD2418;
  if (!qword_1E9DD2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2418);
  }
  return result;
}

unint64_t sub_1B69067E4()
{
  unint64_t result = qword_1EB97F190;
  if (!qword_1EB97F190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F190);
  }
  return result;
}

uint64_t sub_1B6906838(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D86B8(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B69068BC()
{
  unint64_t result = qword_1E9DD2438;
  if (!qword_1E9DD2438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2438);
  }
  return result;
}

unint64_t sub_1B6906910()
{
  unint64_t result = qword_1E9DD2450;
  if (!qword_1E9DD2450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2450);
  }
  return result;
}

unint64_t sub_1B6906964()
{
  unint64_t result = qword_1E9DD2460;
  if (!qword_1E9DD2460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2460);
  }
  return result;
}

uint64_t sub_1B69069B8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D86B8(255, &qword_1E9DD1268, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6906A48()
{
  unint64_t result = qword_1E9DD2478;
  if (!qword_1E9DD2478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2478);
  }
  return result;
}

unint64_t sub_1B6906A9C()
{
  unint64_t result = qword_1E9DD2488;
  if (!qword_1E9DD2488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2488);
  }
  return result;
}

unint64_t sub_1B6906AF0()
{
  unint64_t result = qword_1E9DD24A0;
  if (!qword_1E9DD24A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD24A0);
  }
  return result;
}

unint64_t sub_1B6906B44()
{
  unint64_t result = qword_1E9DD24B8;
  if (!qword_1E9DD24B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD24B8);
  }
  return result;
}

unint64_t sub_1B6906B98()
{
  unint64_t result = qword_1E9DD24C0;
  if (!qword_1E9DD24C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD24C0);
  }
  return result;
}

unint64_t sub_1B6906BEC()
{
  unint64_t result = qword_1E9DD24D0;
  if (!qword_1E9DD24D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD24D0);
  }
  return result;
}

unint64_t sub_1B6906C40()
{
  unint64_t result = qword_1EB97E2B0;
  if (!qword_1EB97E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E2B0);
  }
  return result;
}

unint64_t sub_1B6906C94()
{
  unint64_t result = qword_1E9DD24E8;
  if (!qword_1E9DD24E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD24E8);
  }
  return result;
}

uint64_t sub_1B6906CE8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1B6906D00(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void sub_1B6906D40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B6906DA8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(void *)(a2 + 16) = *((void *)a1 + 2);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1B6906DC0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B6906DF8()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1B6906E30()
{
  unint64_t result = qword_1E9DD2500;
  if (!qword_1E9DD2500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2500);
  }
  return result;
}

unint64_t sub_1B6906E84(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1B62C6AA8(result);
  }
  return result;
}

uint64_t sub_1B6906E98()
{
  sub_1B67C511C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1B6906ED8()
{
  sub_1B62D86B8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B6E77050;
  long long v2 = *(void **)(v0 + *(int *)(type metadata accessor for MetalFunctionScript(0) + 28));
  if (v2[2])
  {
    uint64_t v4 = v2[4];
    uint64_t v3 = v2[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  uint64_t v5 = sub_1B67BB7B4(v4, v3, 0, 0xE000000000000000, 1, 1);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v7;
  return v1;
}

void *sub_1B6906FBC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ShaderScript(0) + 28));
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B633AF88();
  swift_bridgeObjectRetain();
  uint64_t v3 = v1 + 40;
  while ((sub_1B6E32678() & 1) == 0)
  {
    v3 += 16;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = *(void *)(v1 + 16);
      if (!v5) {
        return v4;
      }
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1) {
    uint64_t v4 = sub_1B6335858(v6 > 1, v7 + 1, 1, v4);
  }
  long long v4[2] = v7 + 1;
  char v8 = &v4[2 * v7];
  v8[4] = 0xD000000000000029;
  v8[5] = 0x80000001B6F3D520;
  uint64_t v5 = *(void *)(v1 + 16);
  if (!v5) {
    return v4;
  }
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v9 = v1 + 40;
  while ((sub_1B6E32678() & 1) == 0)
  {
    v9 += 16;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1B6335858(0, v4[2] + 1, 1, v4);
  }
  unint64_t v11 = v4[2];
  unint64_t v10 = v4[3];
  if (v11 >= v10 >> 1) {
    uint64_t v4 = sub_1B6335858(v10 > 1, v11 + 1, 1, v4);
  }
  long long v4[2] = v11 + 1;
  unint64_t v12 = &v4[2 * v11];
  v12[4] = 0xD00000000000002BLL;
  v12[5] = 0x80000001B6F3D4F0;
  return v4;
}

void sub_1B6907220(uint64_t a1)
{
}

uint64_t sub_1B6907254(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B63BCED0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B69072C4(uint64_t a1, uint64_t a2)
{
  sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6907358(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  sub_1B62D1BAC(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_1B69073B4()
{
  unint64_t result = qword_1E9DD2518;
  if (!qword_1E9DD2518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2518);
  }
  return result;
}

uint64_t sub_1B6907408(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VFXTriggerType(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptsHolder()
{
  return &type metadata for ScriptsHolder;
}

ValueMetadata *type metadata accessor for GraphScript.Info()
{
  return &type metadata for GraphScript.Info;
}

ValueMetadata *type metadata accessor for ShaderScript.Info()
{
  return &type metadata for ShaderScript.Info;
}

uint64_t _s17CodeSourceSnippetC9ParameterVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s17CodeSourceSnippetC9ParameterVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s17CodeSourceSnippetC9ParameterVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s17CodeSourceSnippetC9ParameterVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TriggerScript.Info()
{
  return &type metadata for TriggerScript.Info;
}

uint64_t getEnumTagSinglePayload for ShaderScriptParameter.BuiltinProperty(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEA)
  {
    unsigned int v2 = a2 + 22;
    if (a2 + 22 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 22;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B6907688);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 22;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 5) {
    unsigned int v8 = v7 - 4;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 0x13) {
    return v8 - 18;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ShaderScriptParameter.BuiltinProperty(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 22;
  if (a3 + 22 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xEA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v7 = ((a2 - 234) >> 8) + 1;
    *uint64_t result = a2 + 22;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1B6907770);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

uint64_t sub_1B6907798(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 5) {
    return v1 - 4;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1B69077AC(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.BuiltinProperty()
{
  return &type metadata for ShaderScriptParameter.BuiltinProperty;
}

unint64_t destroy for ShaderScriptParameter.VertexOutProperty(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    unint64_t v3 = *(void *)(a1 + 16);
    return sub_1B678FC34(v3);
  }
  return result;
}

uint64_t _s3VFX21ShaderScriptParameterO17VertexOutPropertyOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    unint64_t v4 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    sub_1B67C52A4(v4);
    *(void *)(a1 + 16) = v4;
  }
  return a1;
}

void *assignWithCopy for ShaderScriptParameter.VertexOutProperty(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      unint64_t v7 = a2[2];
      swift_bridgeObjectRetain();
      sub_1B67C52A4(v7);
      a1[2] = v7;
      return a1;
    }
LABEL_7:
    long long v8 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_1B678FC34(a1[2]);
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v5 = a2[2];
  sub_1B67C52A4(v5);
  unint64_t v6 = a1[2];
  a1[2] = v5;
  sub_1B678FC34(v6);
  return a1;
}

uint64_t assignWithTake for ShaderScriptParameter.VertexOutProperty(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_1B678FC34(*(void *)(a1 + 16));
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_1B678FC34(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderScriptParameter.VertexOutProperty(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF6 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483639);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 8;
  if (v4 >= 0xA) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ShaderScriptParameter.VertexOutProperty(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF7)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483639;
    if (a3 >= 0x7FFFFFF7) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF7) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 8;
    }
  }
  return result;
}

uint64_t sub_1B6907A94(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1B6907AAC(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.VertexOutProperty()
{
  return &type metadata for ShaderScriptParameter.VertexOutProperty;
}

unsigned char *_s3VFX14ScriptLocationO11TextureTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6907BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerScript.CodingKeys()
{
  return &type metadata for TriggerScript.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ShaderScript.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6907CB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderScript.CodingKeys()
{
  return &type metadata for ShaderScript.CodingKeys;
}

ValueMetadata *type metadata accessor for MetalFunctionScript.CodingKeys()
{
  return &type metadata for MetalFunctionScript.CodingKeys;
}

ValueMetadata *type metadata accessor for SimpleScript.CodingKeys()
{
  return &type metadata for SimpleScript.CodingKeys;
}

unsigned char *_s3VFX19MetalFunctionScriptV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6907DDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmitterScript.CodingKeys()
{
  return &type metadata for EmitterScript.CodingKeys;
}

ValueMetadata *type metadata accessor for GraphScript.CodingKeys()
{
  return &type metadata for GraphScript.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleUpdateScript.CodingKeys()
{
  return &type metadata for ParticleUpdateScript.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleInitScript.CodingKeys()
{
  return &type metadata for ParticleInitScript.CodingKeys;
}

ValueMetadata *type metadata accessor for ScriptParameter.CodingKeys()
{
  return &type metadata for ScriptParameter.CodingKeys;
}

unsigned char *_s3VFX15ScriptParameterV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6907F2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.CodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.CodingKeys;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.DirectCodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.DirectCodingKeys;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.PathCodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.PathCodingKeys;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.CurrentCodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys;
}

ValueMetadata *type metadata accessor for vfx_virtual.texture()
{
  return &type metadata for vfx_virtual.texture;
}

ValueMetadata *type metadata accessor for vfx_virtual.half4()
{
  return &type metadata for vfx_virtual.half4;
}

ValueMetadata *type metadata accessor for vfx_virtual.half3()
{
  return &type metadata for vfx_virtual.half3;
}

ValueMetadata *type metadata accessor for vfx_virtual.half2()
{
  return &type metadata for vfx_virtual.half2;
}

ValueMetadata *type metadata accessor for vfx_virtual.half()
{
  return &type metadata for vfx_virtual.half;
}

uint64_t destroy for MetalFunctionScript.Info()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MetalFunctionScript.Info(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetalFunctionScript.Info(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MetalFunctionScript.Info(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MetalFunctionScript.Info()
{
  return &type metadata for MetalFunctionScript.Info;
}

ValueMetadata *type metadata accessor for ParticleUpdateScript.Info()
{
  return &type metadata for ParticleUpdateScript.Info;
}

ValueMetadata *type metadata accessor for ParticleInitScript.Info()
{
  return &type metadata for ParticleInitScript.Info;
}

ValueMetadata *type metadata accessor for EmitterScript.Info()
{
  return &type metadata for EmitterScript.Info;
}

ValueMetadata *type metadata accessor for ShaderScriptRuntime()
{
  return &type metadata for ShaderScriptRuntime;
}

ValueMetadata *type metadata accessor for MetalFunctionScript.FunctionType()
{
  return &type metadata for MetalFunctionScript.FunctionType;
}

void destroy for ShaderScriptParameter(uint64_t a1)
{
}

uint64_t initializeWithCopy for ShaderScriptParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1B67C51E0(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ShaderScriptParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1B67C51E0(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  unint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1B67C511C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ShaderScriptParameter(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1B67C511C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderScriptParameter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderScriptParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B69083A4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 5u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_1B69083BC(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)unint64_t result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter()
{
  return &type metadata for ShaderScriptParameter;
}

uint64_t sub_1B69083EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ScriptLocation.EntityLocator(uint64_t a1)
{
  return sub_1B6654718(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s3VFX14ScriptLocationO13EntityLocatorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B69083EC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ScriptLocation.EntityLocator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B69083EC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B6654718(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ScriptLocation.EntityLocator(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B6654718(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptLocation.EntityLocator(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_1B6908548(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1B6908560(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator()
{
  return &type metadata for ScriptLocation.EntityLocator;
}

unsigned char *_s3VFX14ScriptLocationO15BuiltinPropertyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6908654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation.BuiltinProperty()
{
  return &type metadata for ScriptLocation.BuiltinProperty;
}

ValueMetadata *type metadata accessor for ScriptAccess()
{
  return &type metadata for ScriptAccess;
}

unint64_t sub_1B69086A0()
{
  unint64_t result = qword_1E9DD2528;
  if (!qword_1E9DD2528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2528);
  }
  return result;
}

unint64_t sub_1B69086F8()
{
  unint64_t result = qword_1E9DD2530;
  if (!qword_1E9DD2530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2530);
  }
  return result;
}

unint64_t sub_1B6908750()
{
  unint64_t result = qword_1E9DD2538;
  if (!qword_1E9DD2538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2538);
  }
  return result;
}

unint64_t sub_1B69087A8()
{
  unint64_t result = qword_1E9DD2540;
  if (!qword_1E9DD2540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2540);
  }
  return result;
}

unint64_t sub_1B6908800()
{
  unint64_t result = qword_1E9DD2548;
  if (!qword_1E9DD2548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2548);
  }
  return result;
}

unint64_t sub_1B6908858()
{
  unint64_t result = qword_1E9DD2550;
  if (!qword_1E9DD2550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2550);
  }
  return result;
}

unint64_t sub_1B69088B0()
{
  unint64_t result = qword_1E9DD2558;
  if (!qword_1E9DD2558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2558);
  }
  return result;
}

unint64_t sub_1B6908908()
{
  unint64_t result = qword_1E9DD2560;
  if (!qword_1E9DD2560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2560);
  }
  return result;
}

unint64_t sub_1B6908960()
{
  unint64_t result = qword_1E9DD2568;
  if (!qword_1E9DD2568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2568);
  }
  return result;
}

unint64_t sub_1B69089B8()
{
  unint64_t result = qword_1E9DD2570;
  if (!qword_1E9DD2570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2570);
  }
  return result;
}

unint64_t sub_1B6908A10()
{
  unint64_t result = qword_1E9DD2578;
  if (!qword_1E9DD2578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2578);
  }
  return result;
}

unint64_t sub_1B6908A68()
{
  unint64_t result = qword_1E9DD2580;
  if (!qword_1E9DD2580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2580);
  }
  return result;
}

unint64_t sub_1B6908AC0()
{
  unint64_t result = qword_1E9DD2588;
  if (!qword_1E9DD2588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2588);
  }
  return result;
}

unint64_t sub_1B6908B18()
{
  unint64_t result = qword_1E9DD2590;
  if (!qword_1E9DD2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2590);
  }
  return result;
}

unint64_t sub_1B6908B70()
{
  unint64_t result = qword_1E9DD2598;
  if (!qword_1E9DD2598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2598);
  }
  return result;
}

unint64_t sub_1B6908BC8()
{
  unint64_t result = qword_1E9DD25A0;
  if (!qword_1E9DD25A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25A0);
  }
  return result;
}

unint64_t sub_1B6908C20()
{
  unint64_t result = qword_1E9DD25A8;
  if (!qword_1E9DD25A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25A8);
  }
  return result;
}

unint64_t sub_1B6908C78()
{
  unint64_t result = qword_1E9DD25B0;
  if (!qword_1E9DD25B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25B0);
  }
  return result;
}

unint64_t sub_1B6908CD0()
{
  unint64_t result = qword_1E9DD25B8;
  if (!qword_1E9DD25B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25B8);
  }
  return result;
}

unint64_t sub_1B6908D28()
{
  unint64_t result = qword_1E9DD25C0;
  if (!qword_1E9DD25C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25C0);
  }
  return result;
}

unint64_t sub_1B6908D80()
{
  unint64_t result = qword_1E9DD25C8;
  if (!qword_1E9DD25C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25C8);
  }
  return result;
}

unint64_t sub_1B6908DD8()
{
  unint64_t result = qword_1E9DD25D0;
  if (!qword_1E9DD25D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25D0);
  }
  return result;
}

unint64_t sub_1B6908E30()
{
  unint64_t result = qword_1E9DD25D8;
  if (!qword_1E9DD25D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25D8);
  }
  return result;
}

unint64_t sub_1B6908E88()
{
  unint64_t result = qword_1E9DD25E0;
  if (!qword_1E9DD25E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25E0);
  }
  return result;
}

unint64_t sub_1B6908EE0()
{
  unint64_t result = qword_1EB97E2C0;
  if (!qword_1EB97E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E2C0);
  }
  return result;
}

unint64_t sub_1B6908F38()
{
  unint64_t result = qword_1EB97E2B8;
  if (!qword_1EB97E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E2B8);
  }
  return result;
}

unint64_t sub_1B6908F90()
{
  unint64_t result = qword_1E9DD25E8;
  if (!qword_1E9DD25E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25E8);
  }
  return result;
}

unint64_t sub_1B6908FE8()
{
  unint64_t result = qword_1E9DD25F0;
  if (!qword_1E9DD25F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25F0);
  }
  return result;
}

unint64_t sub_1B6909040()
{
  unint64_t result = qword_1E9DD25F8;
  if (!qword_1E9DD25F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD25F8);
  }
  return result;
}

unint64_t sub_1B6909098()
{
  unint64_t result = qword_1E9DD2600;
  if (!qword_1E9DD2600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2600);
  }
  return result;
}

unint64_t sub_1B69090F0()
{
  unint64_t result = qword_1E9DD2608;
  if (!qword_1E9DD2608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2608);
  }
  return result;
}

unint64_t sub_1B6909148()
{
  unint64_t result = qword_1E9DD2610;
  if (!qword_1E9DD2610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2610);
  }
  return result;
}

unint64_t sub_1B69091A0()
{
  unint64_t result = qword_1E9DD2618;
  if (!qword_1E9DD2618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2618);
  }
  return result;
}

unint64_t sub_1B69091F8()
{
  unint64_t result = qword_1E9DD2620;
  if (!qword_1E9DD2620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2620);
  }
  return result;
}

unint64_t sub_1B6909250()
{
  unint64_t result = qword_1E9DD2628;
  if (!qword_1E9DD2628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2628);
  }
  return result;
}

unint64_t sub_1B69092A8()
{
  unint64_t result = qword_1E9DD2630;
  if (!qword_1E9DD2630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2630);
  }
  return result;
}

unint64_t sub_1B6909300()
{
  unint64_t result = qword_1EB97F1A0;
  if (!qword_1EB97F1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F1A0);
  }
  return result;
}

unint64_t sub_1B6909358()
{
  unint64_t result = qword_1EB97F198;
  if (!qword_1EB97F198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F198);
  }
  return result;
}

unint64_t sub_1B69093B0()
{
  unint64_t result = qword_1E9DD2638;
  if (!qword_1E9DD2638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2638);
  }
  return result;
}

unint64_t sub_1B6909408()
{
  unint64_t result = qword_1E9DD2640;
  if (!qword_1E9DD2640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2640);
  }
  return result;
}

unint64_t sub_1B6909460()
{
  unint64_t result = qword_1E9DD2648;
  if (!qword_1E9DD2648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2648);
  }
  return result;
}

unint64_t sub_1B69094B8()
{
  unint64_t result = qword_1E9DD2650;
  if (!qword_1E9DD2650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2650);
  }
  return result;
}

unint64_t sub_1B6909510()
{
  unint64_t result = qword_1E9DD2658;
  if (!qword_1E9DD2658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2658);
  }
  return result;
}

unint64_t sub_1B6909568()
{
  unint64_t result = qword_1E9DD2660;
  if (!qword_1E9DD2660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2660);
  }
  return result;
}

unint64_t sub_1B69095C0()
{
  unint64_t result = qword_1E9DD2668;
  if (!qword_1E9DD2668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2668);
  }
  return result;
}

unint64_t sub_1B6909618()
{
  unint64_t result = qword_1E9DD2670;
  if (!qword_1E9DD2670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2670);
  }
  return result;
}

unint64_t sub_1B6909670()
{
  unint64_t result = qword_1E9DD2678;
  if (!qword_1E9DD2678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2678);
  }
  return result;
}

unint64_t sub_1B69096C8()
{
  unint64_t result = qword_1E9DD2680;
  if (!qword_1E9DD2680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2680);
  }
  return result;
}

unint64_t sub_1B690971C()
{
  unint64_t result = qword_1E9DD2688;
  if (!qword_1E9DD2688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2688);
  }
  return result;
}

void *sub_1B6909770(void *a1)
{
  sub_1B67F4314(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  int v3 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v1)
  {
    sub_1B62C14BC(v6, v6[3]);
    sub_1B69098C8(0, &qword_1E9DD2690, MEMORY[0x1E4FBAEA0]);
    sub_1B6909988(&qword_1E9DD2698, (void (*)(void))sub_1B6909934, (void (*)(void))sub_1B62B1EA8);
    sub_1B6E33518();
    int v3 = v5;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

void sub_1B69098C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6654918();
    unint64_t v7 = a3(a1, &type metadata for ScriptScheduling, &type metadata for Entity, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1B6909934()
{
  unint64_t result = qword_1E9DD26A0;
  if (!qword_1E9DD26A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD26A0);
  }
  return result;
}

uint64_t sub_1B6909988(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B69098C8(255, &qword_1E9DD2690, MEMORY[0x1E4FBAEA0]);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6909A28()
{
  unint64_t result = qword_1E9DD26B0;
  if (!qword_1E9DD26B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD26B0);
  }
  return result;
}

unsigned char *_s3VFX21ShaderScriptParameterO19FragmentOutPropertyOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6909B18);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.FragmentOutProperty()
{
  return &type metadata for ShaderScriptParameter.FragmentOutProperty;
}

unsigned char *_s3VFX21ShaderScriptParameterO18FragmentInPropertyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6909C1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.FragmentInProperty()
{
  return &type metadata for ShaderScriptParameter.FragmentInProperty;
}

unsigned char *storeEnumTagSinglePayload for ShaderScriptParameter.VertexProperty(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6909D20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.VertexProperty()
{
  return &type metadata for ShaderScriptParameter.VertexProperty;
}

unint64_t sub_1B6909D5C()
{
  unint64_t result = qword_1E9DD26B8;
  if (!qword_1E9DD26B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD26B8);
  }
  return result;
}

unint64_t sub_1B6909DB4()
{
  unint64_t result = qword_1E9DD26C0;
  if (!qword_1E9DD26C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD26C0);
  }
  return result;
}

unint64_t sub_1B6909E0C()
{
  unint64_t result = qword_1E9DD26C8;
  if (!qword_1E9DD26C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD26C8);
  }
  return result;
}

uint64_t sub_1B6909E98(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    if (v6)
    {
      while (1)
      {
LABEL_3:
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x1BA9B4580](v7, a3);
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * v7 + 32);
          swift_retain();
        }
        uint64_t v11 = v8;
        char v9 = a1(&v11);
        swift_release();
        if (v3 || (v9 & 1) != 0) {
          break;
        }
        if (v6 == ++v7) {
          return 0;
        }
      }
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = 0;
    if (v6) {
      goto LABEL_3;
    }
  }
  return v7;
}

id sub_1B6909FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1B6E31118();
  uint64_t v9 = *(void *)(v8 - 8);
  double v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock, v11);
  sub_1B6E31108();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, a3, v8);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_onUserTemplatesChanged;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *(void *)(v4 + v16);
  *(void *)(v4 + v16) = 0x8000000000000000;
  sub_1B67E4A14((uint64_t)sub_1B6377A84, v15, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v16) = v20;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  return objc_msgSend(*(id *)(v4 + v14), sel_unlock);
}

id sub_1B690A158()
{
  sub_1B62E17B4();
  int v97 = v1;
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v96 = (char *)v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1B6E31098();
  uint64_t v4 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95, v5);
  unint64_t v94 = (char *)v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B6E31808();
  MEMORY[0x1F4188790](v7 - 8, v8);
  v88[7] = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B6E30F48();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BE100();
  double v17 = MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v19 = (char *)v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock, v17);
  uint64_t v100 = v0;
  uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_bundle);
  uint64_t v21 = (void *)sub_1B6E31768();
  char v22 = (void *)sub_1B6E31768();
  id v23 = objc_msgSend(v20, sel_URLsForResourcesWithExtension_subdirectory_, v21, v22);

  if (v23)
  {
    uint64_t v24 = sub_1B6E31C28();

    uint64_t v25 = *(void *)(v24 + 16);
    v88[4] = v24;
    if (v25)
    {
      uint64_t v26 = 0;
      id v91 = 0;
      uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      uint64_t v27 = v11 + 16;
      unint64_t v111 = v24 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
      long long v112 = v28;
      uint64_t v110 = *(void *)(v27 + 56);
      uint64_t v108 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 32);
      unint64_t v105 = (void (**)(char *, uint64_t))(v27 - 8);
      uint64_t v106 = (void (**)(char *, char *, uint64_t))(v27 + 16);
      uint64_t v90 = (void (**)(char *, char *, uint64_t))(v4 + 32);
      char v109 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 40);
      v88[0] = (v27 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v88[3] = "than one output paramter: ";
      v88[6] = 0x80000001B6F3DB10;
      v88[5] = 0x80000001B6F3DB40;
      long long v89 = xmmword_1B6E77050;
      v88[2] = 0x80000001B6F3DB60;
      uint64_t v102 = v19;
      uint64_t v103 = v10;
      uint64_t v101 = v14;
      uint64_t v99 = v27;
      uint64_t v98 = v25;
      v28(v19, v111, v10);
      while (1)
      {
        uint64_t v107 = *v109;
        v107(v19, 0, 1, v10);
        if ((*v108)(v19, 1, v10) == 1) {
          goto LABEL_46;
        }
        (*v106)(v14, v19, v10);
        uint64_t v117 = sub_1B6E30E18();
        unint64_t v118 = v29;
        uint64_t v115 = 1600285036;
        unint64_t v116 = 0xE400000000000000;
        sub_1B666BDC4();
        sub_1B666BE18();
        char v30 = sub_1B6E31618();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
          (*v105)(v14, v10);
          goto LABEL_5;
        }
        uint64_t v117 = sub_1B6E30E58();
        unint64_t v118 = v31;
        sub_1B633AF88();
        uint64_t v32 = sub_1B6E32688();
        swift_bridgeObjectRelease();
        int64_t v33 = *(void *)(v32 + 16);
        uint64_t v104 = v26;
        if (v33)
        {
          uint64_t v117 = MEMORY[0x1E4FBC860];
          sub_1B6C3C3B8(0, v33, 0);
          uint64_t v34 = (void *)v117;
          uint64_t v35 = (uint64_t *)(v32 + 56);
          do
          {
            uint64_t v36 = *(v35 - 3);
            uint64_t v37 = *(v35 - 2);
            uint64_t v38 = *(v35 - 1);
            uint64_t v39 = *v35;
            swift_bridgeObjectRetain();
            uint64_t v40 = MEMORY[0x1BA9B34C0](v36, v37, v38, v39);
            uint64_t v42 = v41;
            swift_bridgeObjectRelease();
            uint64_t v117 = (uint64_t)v34;
            unint64_t v44 = v34[2];
            unint64_t v43 = v34[3];
            if (v44 >= v43 >> 1)
            {
              sub_1B6C3C3B8(v43 > 1, v44 + 1, 1);
              uint64_t v34 = (void *)v117;
            }
            v34[2] = v44 + 1;
            char v45 = &v34[2 * v44];
            v45[4] = v40;
            v45[5] = v42;
            v35 += 4;
            --v33;
          }
          while (v33);
          swift_bridgeObjectRelease();
          uint64_t v19 = v102;
          uint64_t v10 = v103;
          uint64_t v14 = v101;
          uint64_t v26 = v104;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v34 = (void *)MEMORY[0x1E4FBC860];
        }
        if (v34[2] != 3)
        {
          (*v105)(v14, v10);
          swift_bridgeObjectRelease();
LABEL_30:
          uint64_t v25 = v98;
          goto LABEL_5;
        }
        unint64_t v46 = v34[5];
        uint64_t v117 = v34[4];
        unint64_t v118 = v46;
        uint64_t v115 = 1600285036;
        unint64_t v116 = 0xE400000000000000;
        uint64_t v113 = 0;
        unint64_t v114 = 0xE000000000000000;
        uint64_t v47 = sub_1B6E32618();
        uint64_t v49 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unint64_t v50 = sub_1B6E32CC8();
        swift_bridgeObjectRelease();
        if (v50 >= 3) {
          LOBYTE(v50) = 3;
        }
        uint64_t v51 = *(void *)(v100 + 32);
        if (!*(void *)(v51 + 16)) {
          goto LABEL_33;
        }
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1B62B2CE0(v47, v49);
        if ((v53 & 1) == 0) {
          break;
        }
        uint64_t v54 = *(void *)(*(void *)(v51 + 56) + 8 * v52);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E317E8();
        id v55 = v91;
        uint64_t v56 = sub_1B6E31738();
        id v91 = v55;
        if (!v55)
        {
          uint64_t v81 = v56;
          uint64_t v82 = v57;
          if (!*(void *)(v54 + 56))
          {
            *(void *)(v54 + 56) = sub_1B67DE0CC(MEMORY[0x1E4FBC860]);
            swift_bridgeObjectRelease();
          }
          uint64_t v83 = sub_1B666B578(v81, v82);
          uint64_t v85 = v84;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v117 = *(void *)(v54 + 56);
          *(void *)(v54 + 56) = 0x8000000000000000;
          sub_1B67E47C4(v83, v85, v50, isUniquelyReferenced_nonNull_native);
          *(void *)(v54 + 56) = v117;
          swift_release();
          swift_bridgeObjectRelease();
          (*v105)(v14, v10);
          goto LABEL_30;
        }
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v117 = 0;
        unint64_t v118 = 0xE000000000000000;
        uint64_t v93 = qword_1EB997FD0;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B69108D0((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v59 = v117;
        unint64_t v58 = v118;
        char v60 = sub_1B6E32158();
        uint64_t v61 = MEMORY[0x1E4FBB1A0];
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        v88[1] = v54;
        uint64_t v62 = qword_1EB985528;
        swift_retain();
        if (v62 != -1) {
          swift_once();
        }
        sub_1B67A36D0();
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = v89;
        *(void *)(v63 + 56) = v61;
        *(void *)(v63 + 64) = sub_1B678615C();
        *(void *)(v63 + 32) = v59;
        *(void *)(v63 + 40) = v58;
        swift_bridgeObjectRetain();
        sub_1B6E31258();
        swift_bridgeObjectRelease();
        swift_retain();
        unint64_t v64 = v94;
        sub_1B6E31088();
        uint64_t v65 = v97[12];
        uint64_t v66 = v59;
        uint64_t v67 = v97[16];
        uint64_t v68 = (uint64_t)v96;
        char v69 = &v96[v97[20]];
        (*v90)(v96, v64, v95);
        *(unsigned char *)(v68 + v65) = v60;
        *(void *)(v68 + v67) = 0;
        *(void *)char v69 = v66;
        *((void *)v69 + 1) = v58;
        swift_bridgeObjectRetain();
        sub_1B6E31368();
        swift_release();
        sub_1B6910918(v68, (uint64_t (*)(void))sub_1B62E17B4);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();

        swift_release();
        uint64_t v14 = v101;
        uint64_t v10 = v103;
        (*v105)(v101, v103);
        id v91 = 0;
LABEL_40:
        uint64_t v19 = v102;
        uint64_t v25 = v98;
        uint64_t v26 = v104;
LABEL_5:
        if (++v26 == v25)
        {
          v107(v19, 1, 1, v10);
          goto LABEL_46;
        }
        v112(v19, v111 + v110 * v26, v10);
      }
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      uint64_t v70 = MEMORY[0x1E4FBB1A0];
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v117 = 0;
      unint64_t v118 = 0xE000000000000000;
      uint64_t v93 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B69108D0((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v71 = v117;
      unint64_t v72 = v118;
      char v73 = sub_1B6E32158();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v74 = qword_1EB985528;
      swift_retain();
      if (v74 != -1) {
        swift_once();
      }
      sub_1B67A36D0();
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = v89;
      *(void *)(v75 + 56) = v70;
      *(void *)(v75 + 64) = sub_1B678615C();
      *(void *)(v75 + 32) = v71;
      *(void *)(v75 + 40) = v72;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      unint64_t v76 = v94;
      sub_1B6E31088();
      uint64_t v77 = v97[12];
      uint64_t v78 = v97[16];
      uint64_t v79 = (uint64_t)v96;
      uint64_t v80 = &v96[v97[20]];
      (*v90)(v96, v76, v95);
      *(unsigned char *)(v79 + v77) = v73;
      *(void *)(v79 + v78) = 0;
      *(void *)uint64_t v80 = v71;
      *((void *)v80 + 1) = v72;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B6910918(v79, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v101;
      uint64_t v10 = v103;
      (*v105)(v101, v103);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
LABEL_46:
    swift_bridgeObjectRelease();
  }
  return objc_msgSend(*(id *)(v100 + v92), sel_unlock, v88[0]);
}

id sub_1B690AF88()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = MEMORY[0x1E4FBC868];
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = &selRef_setToShift_;
  if (!*(void *)(v3 + 16)) {
    return objc_msgSend(*(id *)(v1 + v2), v4[406], v50, v51, v52, v53, v54);
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B62B2CE0(0x69737265766E6F43, 0xEA00000000006E6FLL);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return objc_msgSend(*(id *)(v1 + v2), v4[406], v50, v51, v52, v53, v54);
  }
  uint64_t v57 = v2;
  uint64_t v7 = *(void *)(*(void *)(v3 + 56) + 8 * v5);
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v7 + 40);
  v66[0] = MEMORY[0x1E4FBC860];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B6E32C18();
    uint64_t v55 = v7;
    if (v9) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v55 = v7;
    if (v9)
    {
LABEL_5:
      uint64_t v10 = 0;
      while (1)
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x1BA9B4580](v10, v8);
        }
        else
        {
          uint64_t v11 = *(void *)(v8 + 32 + 8 * v10);
          swift_retain();
        }
        uint64_t v12 = *(void **)(v11 + 168);
        uint64_t v13 = *(void **)(v11 + 208);
        if (v12)
        {
          if (v13)
          {
            uint64_t v14 = v12[2];
            if (v14 == v13[2])
            {
              if (!v14 || v12 == v13)
              {
LABEL_27:
                swift_release();
                goto LABEL_8;
              }
              BOOL v15 = v12[4] == v13[4] && v12[5] == v13[5];
              if (v15 || (sub_1B6E334B8() & 1) != 0)
              {
                if (v14 == 1) {
                  goto LABEL_27;
                }
                if (v12[6] == v13[6] && v12[7] == v13[7] || (sub_1B6E334B8() & 1) != 0)
                {
                  uint64_t v16 = v14 - 2;
                  if (!v16) {
                    goto LABEL_27;
                  }
                  double v17 = v13 + 9;
                  uint64_t v18 = v12 + 9;
                  while (1)
                  {
                    BOOL v19 = *(v18 - 1) == *(v17 - 1) && *v18 == *v17;
                    if (!v19 && (sub_1B6E334B8() & 1) == 0) {
                      break;
                    }
                    v17 += 2;
                    v18 += 2;
                    if (!--v16) {
                      goto LABEL_27;
                    }
                  }
                }
              }
            }
          }
        }
        else if (!v13)
        {
          goto LABEL_27;
        }
        sub_1B6E32A08();
        sub_1B6E32A68();
        sub_1B6E32A78();
        sub_1B6E32A28();
LABEL_8:
        if (++v10 == v9)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = v66[0];
          uint64_t v7 = v55;
          goto LABEL_40;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_40:
  *(void *)(v7 + 40) = v20;
  swift_bridgeObjectRelease();
  unint64_t v21 = *(void *)(v7 + 40);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v22)
  {
LABEL_79:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v57;
    uint64_t v4 = &selRef_setToShift_;
    return objc_msgSend(*(id *)(v1 + v2), v4[406], v50, v51, v52, v53, v54);
  }
LABEL_42:
  uint64_t v23 = 0;
  while ((v21 & 0xC000000000000001) != 0)
  {
    uint64_t v24 = MEMORY[0x1BA9B4580](v23, v21);
    uint64_t v25 = *(void **)(v24 + 168);
    if (v25) {
      goto LABEL_50;
    }
LABEL_45:
    swift_release();
    if (v22 == ++v23) {
      goto LABEL_79;
    }
  }
  uint64_t v24 = *(void *)(v21 + 8 * v23 + 32);
  swift_retain();
  uint64_t v25 = *(void **)(v24 + 168);
  if (!v25) {
    goto LABEL_45;
  }
LABEL_50:
  uint64_t v26 = *(void **)(v24 + 208);
  if (!v26) {
    goto LABEL_45;
  }
  int v27 = *(unsigned __int8 *)(v24 + 304);
  BOOL v28 = v27 != 2 && (v27 & 1) == 0;
  if (v28 || v26[2] != 1 || v25[2] != 1) {
    goto LABEL_45;
  }
  uint64_t v29 = v25[4];
  uint64_t v30 = v25[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B629C678(v29, v30, v60);
  uint64_t v53 = v60[1];
  uint64_t v54 = v60[0];
  uint64_t v51 = v60[3];
  uint64_t v52 = v60[2];
  uint64_t v50 = v60[4];
  uint64_t v31 = v26[4];
  uint64_t v32 = v26[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B629C678(v31, v32, &v61);
  uint64_t v33 = v61;
  v66[0] = v61;
  v66[1] = v62;
  unint64_t v56 = v62;
  v66[2] = v63;
  v66[3] = v64;
  v66[4] = v65;
  objc_msgSend(*(id *)(v1 + v57), sel_lock);
  if (!*(void *)(*(void *)(v1 + 48) + 16))
  {
    objc_msgSend(*(id *)(v1 + v57), sel_unlock);
    goto LABEL_61;
  }
  swift_bridgeObjectRetain();
  sub_1B69FACD8((uint64_t)v66);
  char v35 = v34;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v1 + v57), sel_unlock);
  if ((v35 & 1) == 0)
  {
LABEL_61:
    sub_1B629C9E8(v33, v56);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = *(void *)(v1 + 48);
    *(void *)(v1 + 48) = 0x8000000000000000;
    sub_1B67E48F0(MEMORY[0x1E4FBC860], (uint64_t)v66, isUniquelyReferenced_nonNull_native);
    *(void *)(v1 + 48) = v58;
    swift_bridgeObjectRelease();
    sub_1B6910894(&v61, (void (*)(void, void, void, void, void))sub_1B666BC88);
  }
  sub_1B6910894(&v61, (void (*)(void, void, void, void, void))sub_1B666BC3C);
  swift_retain();
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = *(void **)(v1 + 48);
  uint64_t v59 = v38;
  *(void *)(v1 + 48) = 0x8000000000000000;
  sub_1B629C9E8(v33, v56);
  unint64_t v40 = sub_1B69FACD8((uint64_t)v66);
  char v41 = v39;
  uint64_t v42 = v38[2] + ((v39 & 1) == 0);
  if (v38[3] >= v42)
  {
    if (v37)
    {
      if ((v39 & 1) == 0) {
        goto LABEL_70;
      }
    }
    else
    {
      sub_1B6ACDD78();
      if ((v41 & 1) == 0) {
        goto LABEL_70;
      }
    }
    goto LABEL_68;
  }
  sub_1B6AB98F4(v42, v37);
  unint64_t v43 = sub_1B69FACD8((uint64_t)v66);
  if ((v41 & 1) == (v44 & 1))
  {
    unint64_t v40 = v43;
    if ((v41 & 1) == 0)
    {
LABEL_70:
      char v45 = 0;
      goto LABEL_71;
    }
LABEL_68:
    char v45 = *(void **)(v38[7] + 8 * v40);
LABEL_71:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v45 = sub_1B68C1D40(0, v45[2] + 1, 1, v45);
    }
    unint64_t v47 = v45[2];
    unint64_t v46 = v45[3];
    if (v47 >= v46 >> 1) {
      char v45 = sub_1B68C1D40(v46 > 1, v47 + 1, 1, v45);
    }
    v45[2] = v47 + 1;
    uint64_t v48 = &v45[6 * v47];
    v48[4] = v54;
    v48[5] = v53;
    v48[6] = v52;
    v48[7] = v51;
    v48[8] = v50;
    v48[9] = v24;
    if (v41)
    {
      *(void *)(v59[7] + 8 * v40) = v45;
      sub_1B6910894(&v61, (void (*)(void, void, void, void, void))sub_1B666BC88);
    }
    else
    {
      v59[(v40 >> 6) + 8] |= 1 << v40;
      sub_1B629C37C((uint64_t)v66, v59[6] + 40 * v40);
      *(void *)(v59[7] + 8 * v40) = v45;
      ++v59[2];
    }
    *(void *)(v1 + 48) = v59;
    sub_1B6910894(&v61, (void (*)(void, void, void, void, void))sub_1B666BC88);
    sub_1B6910894(&v61, (void (*)(void, void, void, void, void))sub_1B666BC88);
    goto LABEL_45;
  }
  id result = (id)sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B690B6A4()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = MEMORY[0x1E4FBC868];
  v1[7] = MEMORY[0x1E4FBC868];
  uint64_t result = swift_bridgeObjectRelease();
  v1[8] = v2;
  uint64_t v4 = v1[4];
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1B62B2CE0(0x7469736F706D6F43, 0xEB000000006E6F69);
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v7 + 40);
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = sub_1B6E32C18();
        if (v9)
        {
LABEL_5:
          uint64_t v10 = 0;
          do
          {
            if ((v8 & 0xC000000000000001) != 0)
            {
              uint64_t v11 = MEMORY[0x1BA9B4580](v10, v8);
            }
            else
            {
              uint64_t v11 = *(void *)(v8 + 8 * v10 + 32);
              swift_retain();
            }
            ++v10;
            uint64_t v12 = v11;
            sub_1B690B840(&v12, (uint64_t)v1);
            swift_release();
          }
          while (v9 != v10);
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v9) {
          goto LABEL_5;
        }
      }
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1B690B840(void *result, uint64_t a2)
{
  uint64_t v2 = (void *)*result;
  int v3 = *(unsigned __int8 *)(*result + 304);
  if (v3 != 2 && (v3 & 1) == 0) {
    return result;
  }
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  BOOL v8 = v6 == 0x65736F706D6F43 && v7 == 0xE700000000000000;
  if (v8 || (sub_1B6E334B8() & 1) != 0)
  {
    uint64_t v9 = v2[25];
    if (v9 && *(void *)(v9 + 16) == 1)
    {
      uint64_t v10 = (void *)v2[26];
      if (v10[2])
      {
        uint64_t v12 = v10[4];
        uint64_t v11 = v10[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v11 = 0;
      }
      sub_1B629C678(v12, v11, (uint64_t *)&v24);
      long long v27 = v24;
      long long v28 = v25;
      uint64_t v29 = v26;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = *(void *)(a2 + 56);
      *(void *)(a2 + 56) = 0x8000000000000000;
      sub_1B67E6B34((uint64_t)v2, (uint64_t)&v27, isUniquelyReferenced_nonNull_native);
      *(void *)(a2 + 56) = v22;
LABEL_32:
      swift_bridgeObjectRelease();
      return sub_1B6910894(&v24, (void (*)(void, void, void, void, void))sub_1B666BC88);
    }
    if (qword_1EB9852D0 == -1) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
  BOOL v15 = v6 == 0x736F706D6F636544 && v7 == 0xE900000000000065;
  if (!v15 && (sub_1B6E334B8() & 1) == 0)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *((void *)&v27 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6AF6F80();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    int v13 = sub_1B6E32148();
    goto LABEL_16;
  }
  uint64_t v16 = v2[20];
  if (v16 && *(void *)(v16 + 16) == 1)
  {
    double v17 = (void *)v2[21];
    if (v17[2])
    {
      uint64_t v19 = v17[4];
      uint64_t v18 = v17[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v18 = 0;
    }
    sub_1B629C678(v19, v18, (uint64_t *)&v24);
    long long v27 = v24;
    long long v28 = v25;
    uint64_t v29 = v26;
    swift_retain();
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *(void *)(a2 + 64);
    *(void *)(a2 + 64) = 0x8000000000000000;
    sub_1B67E6B34((uint64_t)v2, (uint64_t)&v27, v21);
    *(void *)(a2 + 64) = v23;
    goto LABEL_32;
  }
  if (qword_1EB9852D0 != -1) {
LABEL_39:
  }
    swift_once();
LABEL_15:
  *((void *)&v27 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6AF6F80();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  int v13 = sub_1B6E32158();
LABEL_16:
  int v14 = v13;
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&long long v27 = 0;
  swift_retain();
  sub_1B6B33E34(v14, (uint64_t *)&v27, 0, 0xE000000000000000);
  swift_release();
  swift_bridgeObjectRelease();
  return (void *)swift_release();
}

uint64_t sub_1B690BCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v69 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v67 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v66 = (char *)v56 - v9;
  sub_1B63BE100();
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v68 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B6E30E58();
  uint64_t v15 = v14;
  _s7LibraryCMa();
  swift_allocObject();
  uint64_t v16 = sub_1B666717C(v13, v15);
  id v17 = objc_msgSend(self, sel_defaultManager);
  uint64_t v18 = (void *)sub_1B6E30E78();
  id v76 = 0;
  id v19 = objc_msgSend(v17, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v18, 0, 0, &v76);

  id v20 = v76;
  if (v19)
  {
    uint64_t v57 = a2;
    uint64_t v21 = sub_1B6E31C28();
    id v22 = v20;

    uint64_t v23 = sub_1B691003C(v21);
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v65 = v16;
      uint64_t v71 = *(void (**)(char *, unint64_t, uint64_t))(v69 + 16);
      uint64_t v72 = v2;
      unint64_t v25 = v23 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
      uint64_t v26 = *(void *)(v69 + 72);
      unint64_t v27 = v69 + 56;
      uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
      char v60 = (void (**)(char *, char *, uint64_t))(v69 + 32);
      uint64_t v61 = v26;
      uint64_t v28 = v69 + 16;
      uint64_t v59 = (void (**)(char *, uint64_t))(v69 + 8);
      v56[1] = v23;
      swift_bridgeObjectRetain();
      uint64_t v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v27;
      v56[0] = v27 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v29 = v68;
      uint64_t v69 = v28;
      uint64_t v62 = v4;
      uint64_t v30 = v66;
      while (1)
      {
        v71(v29, v25, v4);
        uint64_t v31 = *v64;
        (*v64)(v29, 0, 1, v4);
        if ((*v63)(v29, 1, v4) == 1) {
          break;
        }
        uint64_t v58 = v31;
        (*v60)(v30, v29, v4);
        uint64_t v32 = (void *)sub_1B6E30E58();
        uint64_t v70 = v24;
        id v76 = v32;
        unint64_t v77 = v33;
        strcpy(v75, ".template.json");
        v75[15] = -18;
        uint64_t v73 = 0;
        unint64_t v74 = 0xE000000000000000;
        sub_1B633AF88();
        uint64_t v34 = sub_1B6E32618();
        uint64_t v36 = v35;
        swift_bridgeObjectRelease();
        uint64_t v37 = (uint64_t)v67;
        v71(v67, (unint64_t)v30, v4);
        _s11TemplateSetCMa();
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1B6C86738(v34, v36, v37);
        swift_bridgeObjectRetain();
        swift_retain();
        char v39 = v65;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v76 = (id)v39[6];
        v39[6] = 0x8000000000000000;
        sub_1B67E6C58((uint64_t)v38, v34, v36, isUniquelyReferenced_nonNull_native);
        v39[6] = v76;
        swift_bridgeObjectRelease();
        uint64_t v41 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v41, v42);
        uint64_t v43 = swift_bridgeObjectRetain();
        uint64_t v44 = v72;
        uint64_t v4 = v62;
        sub_1B666B3D0(v43, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6910888);
        uint64_t v72 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = v70;
        swift_release();
        uint64_t v29 = v68;
        (*v59)(v30, v4);
        v25 += v61;
        uint64_t v24 = v45 - 1;
        if (!v24)
        {
          uint64_t v16 = v65;
          v58(v29, 1, 1, v4);
          goto LABEL_10;
        }
      }
      uint64_t v16 = v65;
    }
    else
    {
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56);
      swift_bridgeObjectRetain();
      v48(v68, 1, 1, v4);
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    if (*(void *)(v16[6] + 16))
    {
      uint64_t v49 = v16[2];
      uint64_t v50 = v16[3];
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v51 = v57;
      char v52 = swift_isUniquelyReferenced_nonNull_native();
      id v76 = *(id *)(v51 + 40);
      *(void *)(v51 + 40) = 0x8000000000000000;
      sub_1B67E4BBC((uint64_t)v16, v49, v50, v52);
      *(void *)(v51 + 40) = v76;
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      id v76 = 0;
      unint64_t v77 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v53 = (uint64_t)v76;
      uint64_t v54 = v77;
      int v55 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      id v76 = 0;
      swift_retain();
      sub_1B6B33E34(v55, (uint64_t *)&v76, v53, v54);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    id v46 = v76;
    sub_1B6E30D78();

    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_1B690C47C()
{
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6A12880(1919251285, 0xE400000000000000);
  swift_bridgeObjectRelease();
  long long v4 = xmmword_1E9DD3E90;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  uint64_t v0 = v4;
  uint64_t v5 = (ValueMetadata *)MEMORY[0x1E4FBB550];
  *(void *)&long long v4 = 1;
  sub_1B6A3C3B0(v0, *((uint64_t *)&v4 + 1), (uint64_t)&v4);
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v4);
  uint64_t v1 = aCategory_1[0];
  uint64_t v2 = aCategory_1[1];
  uint64_t v5 = &_s8TemplateV8CategoryON;
  LOBYTE(v4) = 2;
  swift_bridgeObjectRetain();
  sub_1B6A3C3B0(v1, v2, (uint64_t)&v4);
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v4);
}

void sub_1B690C5CC(uint64_t a1)
{
  uint64_t v73 = 0;
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  sub_1B63BE100();
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v62 - v9;
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = sub_1B6E30F48();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  id v19 = (void (*)(char *, unint64_t, uint64_t))((char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)&v62 - v22;
  MEMORY[0x1F4188790](v24, v25);
  unint64_t v27 = (char *)&v62 - v26;
  sub_1B663AB08(a1, (uint64_t)v14);
  uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v72 = v16 + 48;
  if (v71(v14, 1, v15) == 1)
  {
    sub_1B6910918((uint64_t)v14, (uint64_t (*)(void))sub_1B63BE100);
    id v28 = objc_msgSend(self, sel_defaultManager);
    id v29 = objc_msgSend(v28, sel_URLsForDirectory_inDomains_, 5, 1);

    uint64_t v30 = sub_1B6E31C28();
    uint64_t v31 = *(void *)(v30 + 16);
    if (v31)
    {
      uint64_t v70 = v1;
      unint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
      uint64_t v32 = v16 + 16;
      uint64_t v34 = (void (*)(uint64_t, char *, uint64_t))v30;
      unint64_t v35 = v30 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
      uint64_t v67 = *(void *)(v32 + 56);
      uint64_t v68 = v33;
      unint64_t v36 = v32 + 40;
      uint64_t v37 = (void (**)(void, char *, uint64_t))(v32 + 16);
      uint64_t v69 = v32;
      uint64_t v38 = (void (**)(void (*)(char *, unint64_t, uint64_t), uint64_t))(v32 - 8);
      uint64_t v66 = v34;
      swift_bridgeObjectRetain();
      unint64_t v65 = v36 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v68(v6, v35, v15);
        char v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v36;
        (*(void (**)(char *, void, uint64_t, uint64_t))v36)(v6, 0, 1, v15);
        if (v71(v6, 1, v15) == 1) {
          break;
        }
        (*v37)(v19, v6, v15);
        unint64_t v40 = v73;
        sub_1B690CE7C(v19, 0x6475745320584656, 0xEA00000000006F69, 0x6D65546870617247, 0xEE00736574616C70, v70);
        uint64_t v73 = v40;
        if (v40)
        {
          (*v38)(v19, v15);
          swift_bridgeObjectRelease_n();
          uint64_t v50 = v73;
          goto LABEL_24;
        }
        (*v38)(v19, v15);
        v35 += v67;
        if (!--v31) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      char v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      swift_bridgeObjectRetain();
LABEL_16:
      v39(v6, 1, 1, v15);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    unint64_t v65 = v16 + 32;
    v64(v27, v14, v15);
    uint64_t v70 = v1;
    uint64_t v41 = v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir;
    sub_1B6910918(v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir, (uint64_t (*)(void))sub_1B63BE100);
    uint64_t v66 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 16);
    uint64_t v67 = v16 + 16;
    v66(v41, v27, v15);
    uint64_t v68 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v68)(v41, 0, 1, v15);
    id v42 = objc_msgSend(self, sel_defaultManager);
    uint64_t v63 = v27;
    uint64_t v43 = (void *)sub_1B6E30E78();
    id v74 = 0;
    id v44 = objc_msgSend(v42, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v43, 0, 0, &v74);

    id v45 = v74;
    if (v44)
    {
      uint64_t v46 = sub_1B6E31C28();
      id v47 = v45;

      uint64_t v48 = v73;
      uint64_t v49 = sub_1B690F5E0(v46, (uint64_t)&unk_1F0F87D80);
      uint64_t v50 = v48;
      swift_arrayDestroy();
      uint64_t v51 = *(void *)(v49 + 16);
      uint64_t v69 = v16;
      uint64_t v73 = (void *)v49;
      if (v51)
      {
        unint64_t v52 = v49 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
        uint64_t v53 = *(void *)(v16 + 72);
        uint64_t v54 = (void (**)(char *, uint64_t))(v16 + 8);
        swift_bridgeObjectRetain();
        uint64_t v62 = (unint64_t)v54 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        while (1)
        {
          v66((uint64_t)v10, (char *)v52, v15);
          ((void (*)(char *, void, uint64_t, uint64_t))v68)(v10, 0, 1, v15);
          if (v71(v10, 1, v15) == 1) {
            break;
          }
          v64(v23, v10, v15);
          sub_1B690BCC0((uint64_t)v23, v70);
          if (v48)
          {
            unint64_t v56 = *v54;
            (*v54)(v23, v15);
            swift_bridgeObjectRelease_n();
            v56(v63, v15);
            goto LABEL_24;
          }
          (*v54)(v23, v15);
          v52 += v53;
          if (!--v51) {
            goto LABEL_19;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_19:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v68)(v10, 1, 1, v15);
      }
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v63, v15);
    }
    else
    {
      id v55 = v74;
      uint64_t v50 = (void *)sub_1B6E30D78();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v63, v15);
LABEL_24:
      id v77 = v50;
      sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
      sub_1B6910848();
      swift_dynamicCast();
      uint64_t v57 = v76;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      id v74 = 0;
      unint64_t v75 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      id v74 = (id)0xD00000000000002CLL;
      unint64_t v75 = 0x80000001B6F3D970;
      id v58 = objc_msgSend(v57, sel_localizedDescription);
      sub_1B6E31798();

      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v59 = (uint64_t)v74;
      uint64_t v60 = v75;
      int v61 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      id v74 = 0;
      swift_retain();
      sub_1B6B33E34(v61, (uint64_t *)&v74, v59, v60);

      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_1B690CE7C(void (*a1)(char *, unint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a5;
  uint64_t v62 = a6;
  uint64_t v60 = a4;
  v64[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B63BE100();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v63 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B6E30F48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v59 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v17);
  id v19 = (char *)v53 - v18;
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_defaultManager);
  uint64_t v57 = a1;
  uint64_t v22 = (void *)sub_1B6E30E78();
  v64[0] = 0;
  id v23 = objc_msgSend(v21, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v22, 0, 0, v64);

  id v24 = v64[0];
  if (!v23) {
    goto LABEL_12;
  }
  uint64_t v25 = sub_1B6E31C28();
  id v26 = v24;

  swift_bridgeObjectRetain();
  uint64_t v27 = swift_bridgeObjectRetain();
  id v28 = (void (**)(uint64_t, uint64_t))v58;
  BOOL v29 = sub_1B690F9DC(v27, a2, a3);
  uint64_t v30 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
    unint64_t v56 = v28;
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v20, sel_defaultManager);
    uint64_t v58 = a2;
    sub_1B6E30EB8();
    sub_1B6E30EF8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    uint64_t v32 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    v64[0] = 0;
    unsigned int v33 = objc_msgSend(v31, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v32, 1, 0, v64);

    id v34 = v64[0];
    if (!v33)
    {
      uint64_t v51 = v34;
      sub_1B6E30D78();

      return swift_willThrow();
    }
    id v35 = objc_msgSend(v20, sel_defaultManager);
    unint64_t v36 = (void *)sub_1B6E30E78();
    v64[0] = 0;
    id v37 = objc_msgSend(v35, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v36, 0, 0, v64);

    id v24 = v64[0];
    if (v37)
    {
      uint64_t v25 = sub_1B6E31C28();
      id v38 = v24;

      a2 = v58;
      uint64_t v30 = v56;
      goto LABEL_6;
    }
LABEL_12:
    id v50 = v24;
    sub_1B6E30D78();

    return swift_willThrow();
  }
LABEL_6:
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1B690FCAC(v25, a2, a3);
  unint64_t v40 = v30;
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v39 + 16);
  if (v41)
  {
    uint64_t v57 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    uint64_t v58 = v13 + 16;
    unint64_t v42 = v39 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v43 = *(void *)(v13 + 72);
    v53[1] = v39;
    uint64_t v54 = v43;
    id v44 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    id v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    id v55 = (void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    unint64_t v56 = (void (**)(uint64_t, uint64_t))(v13 + 8);
    v53[0] = (v13 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v46 = (uint64_t)v59;
    while (1)
    {
      uint64_t v47 = v12;
      uint64_t v48 = v63;
      v57(v63, v42, v47);
      uint64_t v49 = *v44;
      (*v44)(v48, 0, 1, v47);
      if ((*v45)(v48, 1, v47) == 1) {
        break;
      }
      (*v55)(v46, v48, v47);
      sub_1B690D3DC(v46, v60, v61, v62);
      uint64_t v12 = v47;
      if (v40)
      {
        (*v56)(v46, v47);
        return swift_bridgeObjectRelease();
      }
      (*v56)(v46, v47);
      v42 += v54;
      if (!--v41) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
LABEL_16:
    v49(v63, 1, 1, v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B690D3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v91 = a4;
  v95[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B63BE100();
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v93 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v82 = (char *)v74 - v11;
  uint64_t v12 = sub_1B6E30F48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  unint64_t v86 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v84 = (char *)v74 - v18;
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)v74 - v21;
  id v83 = self;
  id v23 = objc_msgSend(v83, sel_defaultManager);
  id v24 = (void *)sub_1B6E30E78();
  v95[0] = 0;
  id v25 = objc_msgSend(v23, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v24, 0, 0, v95);

  id v26 = v95[0];
  if (!v25) {
    goto LABEL_20;
  }
  uint64_t v27 = sub_1B6E31C28();
  id v28 = v26;

  swift_bridgeObjectRetain();
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v30 = v94;
  BOOL v31 = sub_1B690F9DC(v29, a2, a3);
  uint64_t v32 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v31)
  {
    uint64_t v92 = v30;
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v83, sel_defaultManager);
    unint64_t v94 = (unsigned int (**)(void, void, void))a2;
    sub_1B6E30EB8();
    sub_1B6E30EF8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
    id v34 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    v95[0] = 0;
    unsigned int v35 = objc_msgSend(v33, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v34, 1, 0, v95);

    id v36 = v95[0];
    if (!v35)
    {
      uint64_t v71 = v36;
      sub_1B6E30D78();

      return swift_willThrow();
    }
    id v37 = objc_msgSend(v83, sel_defaultManager);
    id v38 = (void *)sub_1B6E30E78();
    v95[0] = 0;
    id v39 = objc_msgSend(v37, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v38, 0, 0, v95);

    id v26 = v95[0];
    if (v39)
    {
      uint64_t v27 = sub_1B6E31C28();
      id v40 = v26;

      a2 = (uint64_t)v94;
      uint64_t v32 = v92;
      goto LABEL_6;
    }
LABEL_20:
    id v68 = v26;
    sub_1B6E30D78();

    return swift_willThrow();
  }
LABEL_6:
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1B690FCAC(v27, a2, a3);
  unint64_t v42 = v32;
  swift_bridgeObjectRelease();
  uint64_t v77 = *(void *)(v41 + 16);
  if (v77)
  {
    uint64_t v43 = 0;
    uint64_t v46 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    uint64_t v45 = v13 + 16;
    id v44 = v46;
    unint64_t v47 = (*(unsigned __int8 *)(v45 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 64);
    v74[2] = v41;
    unint64_t v75 = v47;
    unint64_t v80 = v41 + v47;
    uint64_t v79 = v91 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir;
    uint64_t v85 = *(void *)(v45 + 56);
    uint64_t v48 = (void *)(v45 + 40);
    uint64_t v92 = (unsigned int (**)(void, void, void))(v45 + 32);
    uint64_t v90 = (void (**)(void))(v45 + 16);
    uint64_t v78 = (void (**)(char *, uint64_t))(v45 - 8);
    v74[1] = (v45 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v49 = v82;
    unint64_t v88 = v46;
    uint64_t v89 = v45;
    while (1)
    {
      v44(v49, v80 + v85 * v43, v12);
      id v50 = (void (*)(char *, void, uint64_t, uint64_t))*v48;
      ((void (*)(char *, void, uint64_t, uint64_t))*v48)(v49, 0, 1, v12);
      unint64_t v87 = (unsigned int (*)(char *, uint64_t, uint64_t))*v92;
      if (v87(v49, 1, v12) == 1) {
        break;
      }
      uint64_t v51 = v49;
      uint64_t v81 = v43;
      unint64_t v52 = *v90;
      uint64_t v53 = v84;
      ((void (*)(char *, char *, uint64_t))*v90)(v84, v51, v12);
      unint64_t v94 = (unsigned int (**)(void, void, void))v50;
      uint64_t v54 = v79;
      sub_1B6910918(v79, (uint64_t (*)(void))sub_1B63BE100);
      v44((char *)v54, (unint64_t)v53, v12);
      id v55 = v48;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v94)(v54, 0, 1, v12);
      id v56 = objc_msgSend(v83, sel_defaultManager);
      uint64_t v57 = (void *)sub_1B6E30E78();
      v95[0] = 0;
      id v58 = objc_msgSend(v56, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v57, 0, 0, v95);

      id v59 = v95[0];
      uint64_t v60 = v78;
      if (!v58)
      {
        id v73 = v95[0];
        sub_1B6E30D78();

        swift_willThrow();
        (*v60)(v84, v12);
        return swift_bridgeObjectRelease();
      }
      uint64_t v76 = (unint64_t)v78 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v61 = sub_1B6E31C28();
      id v62 = v59;

      uint64_t v63 = sub_1B690F5E0(v61, (uint64_t)&unk_1F0F87DD0);
      swift_arrayDestroy();
      uint64_t v64 = *(void *)(v63 + 16);
      if (v64)
      {
        unint64_t v65 = v63 + v75;
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v66 = v93;
          v88(v93, v65, v12);
          ((void (*)(char *, void, uint64_t, uint64_t))v94)(v66, 0, 1, v12);
          if (v87(v66, 1, v12) == 1) {
            break;
          }
          uint64_t v67 = (uint64_t)v86;
          v52();
          sub_1B690BCC0(v67, v91);
          if (v42)
          {
            uint64_t v69 = v67;
            uint64_t v70 = *v60;
            (*v60)((char *)v69, v12);
            swift_bridgeObjectRelease_n();
            v70(v84, v12);
            return swift_bridgeObjectRelease();
          }
          (*v60)((char *)v67, v12);
          v65 += v85;
          if (!--v64) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_17:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v94)(v93, 1, 1, v12);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v43 = v81 + 1;
      (*v60)(v84, v12);
      uint64_t v49 = v82;
      id v44 = v88;
      uint64_t v48 = v55;
      if (v43 == v77)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v94)(v82, 1, 1, v12);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v82, 1, 1, v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B690DC44()
{
  uint64_t v1 = sub_1B6E30F48();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  id v37 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)v35 - v7;
  sub_1B63BE100();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v0;
  uint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_bundle);
  uint64_t v14 = (void *)sub_1B6E31768();
  uint64_t v15 = (void *)sub_1B6E31768();
  id v16 = objc_msgSend(v13, sel_URLsForResourcesWithExtension_subdirectory_, v14, v15);

  if (v16)
  {
    uint64_t v17 = sub_1B6E31C28();

    uint64_t v18 = *(void *)(v17 + 16);
    v35[2] = v17;
    if (v18)
    {
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
      uint64_t v19 = v2 + 16;
      unint64_t v21 = v17 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
      uint64_t v41 = *(void *)(v19 + 56);
      unint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
      id v39 = (void (**)(char *, uint64_t))(v19 - 8);
      id v40 = (void (**)(char *, char *, uint64_t))(v19 + 16);
      uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
      id v44 = v20;
      v35[1] = (v19 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v35[3] = v19;
      id v36 = v12;
      v20(v12, (char *)v21, v1);
      while (1)
      {
        uint64_t v22 = *v43;
        (*v43)(v12, 0, 1, v1);
        if ((*v42)(v12, 1, v1) == 1) {
          break;
        }
        (*v40)(v8, v12, v1);
        uint64_t v47 = sub_1B6E30E18();
        uint64_t v48 = v23;
        uint64_t v45 = 1600285036;
        unint64_t v46 = 0xE400000000000000;
        sub_1B666BDC4();
        sub_1B666BE18();
        char v24 = sub_1B6E31618();
        swift_bridgeObjectRelease();
        if (v24)
        {
          uint64_t v25 = (uint64_t)v37;
          v44(v37, v8, v1);
          _s7LibraryCMa();
          swift_allocObject();
          id v26 = sub_1B6667D9C(v25);
          uint64_t v28 = v26[2];
          uint64_t v27 = v26[3];
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v29 = v1;
          uint64_t v30 = v8;
          uint64_t v31 = v38;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v47 = *(void *)(v31 + 32);
          *(void *)(v31 + 32) = 0x8000000000000000;
          sub_1B67E4BBC((uint64_t)v26, v28, v27, isUniquelyReferenced_nonNull_native);
          *(void *)(v31 + 32) = v47;
          uint64_t v8 = v30;
          uint64_t v1 = v29;
          uint64_t v12 = v36;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B66681D8();
          swift_release();
        }
        (*v39)(v8, v1);
        v21 += v41;
        if (!--v18)
        {
          v22(v12, 1, 1, v1);
          break;
        }
        v44(v12, (char *)v21, v1);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v12, 1, 1, v1);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = swift_bridgeObjectRetain();
  sub_1B666B3D0(v33, sub_1B6910834);
  return swift_bridgeObjectRelease();
}

void sub_1B690E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a3;
  uint64_t v5 = sub_1B6E30F48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  id v58 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  id v62 = (char *)v49 - v11;
  sub_1B63BE100();
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *(void **)(a4 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_bundle);
  uint64_t v17 = (void *)sub_1B6E31768();
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v66 = 1600285036;
  unint64_t v67 = 0xE400000000000000;
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t v18 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_URLsForResourcesWithExtension_subdirectory_, v17, v18);

  if (v19)
  {
    uint64_t v20 = sub_1B6E31C28();

    uint64_t v21 = sub_1B691003C(v20);
    uint64_t v22 = *(void *)(v21 + 16);
    v49[2] = v21;
    if (v22)
    {
      uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      unint64_t v24 = v21 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = v6 + 56;
      id v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      uint64_t v53 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v54 = v25;
      uint64_t v27 = v6 + 16;
      unint64_t v52 = (void (**)(char *, uint64_t))(v27 - 8);
      swift_bridgeObjectRetain();
      uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v26;
      v49[1] = v26 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v55 = v5;
      uint64_t v51 = v15;
      while (1)
      {
        v23(v15, v24, v5);
        uint64_t v28 = *v57;
        (*v57)(v15, 0, 1, v5);
        if ((*v56)(v15, 1, v5) == 1) {
          break;
        }
        id v50 = v28;
        uint64_t v29 = v62;
        (*v53)(v62, v15, v5);
        uint64_t v61 = v22;
        uint64_t v30 = v29;
        uint64_t v66 = sub_1B6E30E18();
        unint64_t v67 = v31;
        strcpy(v65, ".template.json");
        v65[15] = -18;
        uint64_t v63 = 0;
        unint64_t v64 = 0xE000000000000000;
        sub_1B633AF88();
        uint64_t v32 = sub_1B6E32618();
        unint64_t v60 = v24;
        uint64_t v33 = v32;
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        uint64_t v36 = (uint64_t)v58;
        id v37 = v30;
        uint64_t v38 = v27;
        v23(v58, (unint64_t)v37, v5);
        _s11TemplateSetCMa();
        swift_allocObject();
        swift_bridgeObjectRetain();
        id v39 = sub_1B6C86738(v33, v35, v36);
        swift_bridgeObjectRetain();
        swift_retain();
        id v40 = v23;
        uint64_t v41 = v59;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v66 = *(void *)(v41 + 48);
        *(void *)(v41 + 48) = 0x8000000000000000;
        sub_1B67E6C58((uint64_t)v39, v33, v35, isUniquelyReferenced_nonNull_native);
        *(void *)(v41 + 48) = v66;
        swift_bridgeObjectRelease();
        uint64_t v43 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v43, v44);
        uint64_t v23 = v40;
        unint64_t v45 = v60;
        uint64_t v46 = swift_bridgeObjectRetain();
        uint64_t v27 = v38;
        uint64_t v15 = v51;
        sub_1B666B3D0(v46, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B691083C);
        swift_bridgeObjectRelease();
        uint64_t v47 = v61;
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v5 = v55;
        (*v52)(v62, v55);
        unint64_t v24 = v45 + v54;
        uint64_t v22 = v47 - 1;
        if (!v22)
        {
          v50(v15, 1, 1, v5);
          break;
        }
      }
    }
    else
    {
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      swift_bridgeObjectRetain();
      v48(v15, 1, 1, v5);
    }
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1B690E5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6A12880(0x6E69746C697542, 0xE700000000000000);
  swift_bridgeObjectRelease();
  long long v12 = xmmword_1E9DD3E90;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  uint64_t v5 = v12;
  uint64_t v13 = (ValueMetadata *)MEMORY[0x1E4FBB550];
  *(void *)&long long v12 = 1;
  sub_1B6A3C3B0(v5, *((uint64_t *)&v12 + 1), (uint64_t)&v12);
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
  uint64_t v6 = aCategory_1[0];
  uint64_t v7 = aCategory_1[1];
  uint64_t v13 = &_s8TemplateV8CategoryON;
  LOBYTE(v12) = 1;
  swift_bridgeObjectRetain();
  sub_1B6A3C3B0(v6, v7, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
  uint64_t v8 = *(void *)(a4 + 32);
  v9.i64[0] = *(void *)(v8 + 32);
  v9.i32[2] = *(_DWORD *)(v8 + 40);
  v9.i32[3] = 1.0;
  int v10 = sub_1B67487EC(v9);
  uint64_t v13 = &type metadata for ColorU8;
  LODWORD(v12) = v10;
  sub_1B6A3C3B0(0x726F6C6F63, 0xE500000000000000, (uint64_t)&v12);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
}

id sub_1B690E77C(char a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  if (*(unsigned char *)(v2 + 72))
  {
    uint64_t v6 = *(void **)(v2 + v5);
    return objc_msgSend(v6, sel_unlock);
  }
  else
  {
    *(unsigned char *)(v2 + 72) = 1;
    sub_1B690DC44();
    sub_1B690C5CC(a2);
    sub_1B690A158();
    sub_1B690AF88();
    uint64_t v8 = sub_1B690B6A4();
    if (a1)
    {
      MEMORY[0x1F4188790](v8, v9);
      uint64_t v10 = swift_bridgeObjectRetain();
      sub_1B666B3D0(v10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6910818);
      uint64_t v11 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v11, v12);
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_1B666B3D0(v13, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6910820);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return objc_msgSend(*(id *)(v2 + v5), sel_unlock);
  }
}

uint64_t sub_1B690E920()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1B666B3D0(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B69109B0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B690E98C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1B666B3D0(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6910828);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B690E9F8()
{
  uint64_t v1 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1B666B3D0(v2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B69107EC);
  uint64_t v3 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1B666B3D0(v5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B69107F8);
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v0 + v1), sel_unlock);
  return 0;
}

uint64_t sub_1B690EB44(uint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if ((*a4 & 1) == 0)
  {
    MEMORY[0x1F4188790](result, a2);
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_1B666B3D0(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6910804);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B690EC24()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1B666B3D0(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6910804);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B690ECC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  if (!a6)
  {
    if (*(void *)(*(void *)(v6 + 32) + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(a1, a2);
      if (v28)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = sub_1B666A660(a3, a4, a5, 0);
        swift_release();
LABEL_27:
        objc_msgSend(*(id *)(v6 + v14), sel_unlock);
        return v29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v29 = 0;
    goto LABEL_27;
  }
  uint64_t v48 = v14;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v15 = *(void *)(v6 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_codeSourceSnippetRemapping);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v49 = a1;
    uint64_t v50 = a2;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    if (!*(void *)(v15 + 16)) {
      break;
    }
    uint64_t v16 = sub_1B62B2CE0(v49, v50);
    if ((v17 & 1) == 0) {
      break;
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v15 + 56) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B691055C(v19, v20, &v53, &v51, &v55);
    swift_bridgeObjectRelease();
    a1 = v53;
    a2 = v54;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v7
                  + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_codeSourceSnippetRemappingWithValueTransfer);
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (*(void *)(v21 + 16))
  {
    uint64_t v22 = sub_1B62B2CE0(v49, v50);
    uint64_t v23 = v48;
    if (v24)
    {
      uint64_t v25 = (uint64_t *)(*(void *)(v21 + 56) + 16 * v22);
      uint64_t v26 = *v25;
      uint64_t v27 = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B691055C(v26, v27, &v53, &v51, &v55);
      swift_bridgeObjectRelease();
      a2 = v54;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = v48;
  }
  uint64_t v30 = *(void *)(v7 + 32);
  if (!*(void *)(v30 + 16)) {
    goto LABEL_22;
  }
  uint64_t v31 = v53;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1B62B2CE0(v31, a2);
  if ((v33 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v34 = *(void *)(*(void *)(v30 + 56) + 8 * v32);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_bridgeObjectRelease();
  uint64_t v36 = v52;
  uint64_t v37 = v56;
  unint64_t v38 = *(void *)(v34 + 40);
  MEMORY[0x1F4188790](v35, v39);
  v47[2] = v40;
  v47[3] = v36;
  v47[4] = v41;
  v47[5] = v37;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1B6909E98((uint64_t (*)(uint64_t *))sub_1B6910538, (uint64_t)v47, v38);
  char v44 = v43;
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
  {
    uint64_t v45 = *(void *)(v34 + 40);
    if ((v45 & 0xC000000000000001) != 0)
    {
      uint64_t v29 = MEMORY[0x1BA9B4580](v42);
    }
    else
    {
      uint64_t v29 = *(void *)(v45 + 8 * v42 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_24;
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v29 = 0;
LABEL_24:
  objc_msgSend(*(id *)(v7 + v23), sel_unlock, v48);
  return v29;
}

uint64_t sub_1B690F14C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  uint64_t v5 = *(void *)(v1 + 48);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_11;
  }
  sub_1B6910894(a1, (void (*)(void, void, void, void, void))sub_1B629C9E8);
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1B69FACD8((uint64_t)a1);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1B6910894(a1, (void (*)(void, void, void, void, void))sub_1B629DCAC);
LABEL_11:
    objc_msgSend(*(id *)(v2 + v4), sel_unlock);
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B6910894(a1, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t *)(v8 + 72);
    while (1)
    {
      sub_1B629C37C((uint64_t)(v10 - 5), (uint64_t)v18);
      uint64_t v11 = *v10;
      sub_1B6910894(v18, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      swift_retain();
      uint64_t v12 = sub_1B6A3D8B8();
      uint64_t v14 = v13;
      if (v12 == sub_1B6A3D8B8() && v14 == v15) {
        break;
      }
      char v16 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_15;
      }
      sub_1B6910894(v18, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      swift_release();
      v10 += 6;
      if (!--v9)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    swift_bridgeObjectRelease_n();
    sub_1B6910894(v18, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v11 = 0;
  }
  objc_msgSend(*(id *)(v2 + v4), sel_unlock);
  return v11;
}

uint64_t sub_1B690F3A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6910918(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir, (uint64_t (*)(void))sub_1B63BE100);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B690F468()
{
  sub_1B690F3A4();

  return swift_deallocClassInstance();
}

uint64_t sub_1B690F4C0()
{
  return _s9ResourcesCMa();
}

uint64_t _s9ResourcesCMa()
{
  uint64_t result = qword_1E9DD26E0;
  if (!qword_1E9DD26E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B690F514()
{
  sub_1B63BE100();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1B690F5E0(uint64_t a1, uint64_t a2)
{
  sub_1B63BE100();
  MEMORY[0x1F4188790](v4 - 8, v5);
  char v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B6E30F48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v40 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.n128_f64[0] = MEMORY[0x1F4188790](v12, v13);
  char v16 = (char *)v37 - v15;
  uint64_t v51 = MEMORY[0x1E4FBC860];
  uint64_t v46 = *(void *)(a1 + 16);
  v37[1] = a1;
  if (v46)
  {
    uint64_t v17 = 0;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v18 = v9 + 16;
    unint64_t v38 = (*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64);
    uint64_t v44 = a1 + v38;
    uint64_t v45 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 40);
    uint64_t v48 = v20;
    uint64_t v42 = v7;
    char v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 32);
    uint64_t v49 = a2;
    uint64_t v50 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v39 = (void (**)(char *, uint64_t))(v18 - 8);
    v37[0] = a2 + 56;
    uint64_t v41 = v18;
    v19(v7, a1 + v38, v8, v14);
    while (1)
    {
      uint64_t v22 = *v47;
      ((void (*)(char *, void, uint64_t, uint64_t))*v47)(v7, 0, 1, v8);
      if ((*v43)(v7, 1, v8) == 1) {
        goto LABEL_26;
      }
      uint64_t v23 = *v50;
      (*v50)(v16, v7, v8);
      char v24 = v16;
      uint64_t v25 = sub_1B6E30E58();
      uint64_t v27 = v26;
      uint64_t v28 = *(void *)(a2 + 16);
      if (v28)
      {
        uint64_t v29 = v25;
        if (*(void *)(v49 + 32) == v25 && *(void *)(v49 + 40) == v26 || (sub_1B6E334B8() & 1) != 0) {
          goto LABEL_3;
        }
        uint64_t v30 = v28 - 1;
        if (v28 != 1) {
          break;
        }
      }
LABEL_19:
      swift_bridgeObjectRelease();
      char v16 = v24;
      v23(v40, v24, v8);
      uint64_t v33 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D418(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v51;
      }
      unint64_t v35 = *(void *)(v33 + 16);
      unint64_t v34 = *(void *)(v33 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1B6C3D418(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v51;
      }
      *(void *)(v33 + 16) = v35 + 1;
      v23((char *)(v33 + v38 + v35 * v48), v40, v8);
      uint64_t v51 = v33;
LABEL_4:
      ++v17;
      a2 = v49;
      char v7 = v42;
      if (v17 == v46)
      {
        v22(v42, 1, 1, v8, v21);
        goto LABEL_26;
      }
      v45(v42, v44 + v48 * v17, v8, v21);
    }
    uint64_t v31 = (void *)v37[0];
    while (1)
    {
      BOOL v32 = *(v31 - 1) == v29 && *v31 == v27;
      if (v32 || (sub_1B6E334B8() & 1) != 0) {
        break;
      }
      v31 += 2;
      if (!--v30) {
        goto LABEL_19;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    char v16 = v24;
    (*v39)(v24, v8);
    goto LABEL_4;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v7, 1, 1, v8, v14);
LABEL_26:
  swift_bridgeObjectRelease();
  sub_1B6910918((uint64_t)v7, (uint64_t (*)(void))sub_1B63BE100);
  return v51;
}

BOOL sub_1B690F9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v30 = a2;
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v31 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BE100();
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  v22[2] = a1;
  if (v12)
  {
    __n128 v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v28 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v23 = *(void *)(v13 + 56);
    char v24 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v25 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v26 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    swift_bridgeObjectRetain();
    uint64_t v27 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v22[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v28(v11, v15, v4);
      char v16 = *v27;
      (*v27)(v11, 0, 1, v4);
      int v17 = (*v26)(v11, 1, v4);
      BOOL v18 = v17 != 1;
      if (v17 == 1) {
        break;
      }
      (*v24)(v31, v11, v4);
      if (sub_1B6E30E58() == v30 && v19 == v29)
      {
        swift_bridgeObjectRelease();
        (*v25)(v31, v4);
        BOOL v18 = 1;
        break;
      }
      char v20 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      (*v25)(v31, v4);
      if (v20) {
        break;
      }
      v15 += v23;
      if (!--v12) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    char v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
LABEL_10:
    v16(v11, 1, 1, v4);
    BOOL v18 = 0;
  }
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1B690FCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a2;
  sub_1B63BE100();
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  char v43 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = MEMORY[0x1F4188790](v13, v14);
  uint64_t v44 = (char *)v32 - v16;
  uint64_t v45 = MEMORY[0x1E4FBC860];
  uint64_t v17 = *(void *)(a1 + 16);
  v32[2] = a1;
  if (v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
    uint64_t v18 = v10 + 16;
    unint64_t v34 = (*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64);
    unint64_t v35 = v8;
    uint64_t v20 = a1 + v34;
    uint64_t v36 = *(void *)(v18 + 56);
    uint64_t v37 = v18;
    uint64_t v38 = a3;
    uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 32);
    __n128 v21 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t))(v18 - 8);
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 40);
    uint64_t v41 = v19;
    v32[1] = (v18 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v19(v8, v20, v9, v15);
    while (1)
    {
      char v24 = *v40;
      ((void (*)(char *, void, uint64_t, uint64_t))*v40)(v8, 0, 1, v9);
      if ((*v39)(v8, 1, v9) == 1) {
        goto LABEL_18;
      }
      uint64_t v25 = *v21;
      (*v21)(v44, v8, v9);
      if (sub_1B6E30E58() == v42 && v26 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v27 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
          (*v33)(v44, v9);
          uint64_t v23 = v36;
          goto LABEL_4;
        }
      }
      v25(v43, v44, v9);
      uint64_t v28 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D418(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = v45;
      }
      unint64_t v30 = *(void *)(v28 + 16);
      unint64_t v29 = *(void *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1B6C3D418(v29 > 1, v30 + 1, 1);
        uint64_t v28 = v45;
      }
      *(void *)(v28 + 16) = v30 + 1;
      uint64_t v23 = v36;
      v25((char *)(v28 + v34 + v30 * v36), v43, v9);
      uint64_t v45 = v28;
      uint64_t v8 = v35;
LABEL_4:
      v20 += v23;
      --v17;
      a3 = v38;
      if (!v17)
      {
        v24(v8, 1, 1, v9, v22);
        goto LABEL_18;
      }
      v41(v8, v20, v9, v22);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v15);
LABEL_18:
  swift_bridgeObjectRelease();
  sub_1B6910918((uint64_t)v8, (uint64_t (*)(void))sub_1B63BE100);
  return v45;
}

uint64_t sub_1B691003C(uint64_t a1)
{
  sub_1B63BE100();
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v42 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.n128_f64[0] = MEMORY[0x1F4188790](v10, v11);
  uint64_t v14 = (char *)v30 - v12;
  uint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v15 = *(void *)(a1 + 16);
  v30[1] = a1;
  if (v15)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
    uint64_t v16 = v7 + 16;
    unint64_t v33 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
    unint64_t v34 = (char *)v30 - v12;
    uint64_t v18 = a1 + v33;
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v38 = v16;
    uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v31 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v32 = v6;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 40);
    uint64_t v41 = v17;
    v30[0] = (v16 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v35 = v5;
    char v43 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v37 = v19;
    v17(v5, a1 + v33, v6, v13);
    while (1)
    {
      uint64_t v36 = *v40;
      ((void (*)(char *, void, uint64_t, uint64_t))v36)(v5, 0, 1, v6);
      if ((*v39)(v5, 1, v6) == 1) {
        break;
      }
      uint64_t v23 = *v20;
      (*v20)(v14, v5, v6);
      sub_1B6E30E58();
      char v24 = v14;
      char v25 = sub_1B6E31A08();
      swift_bridgeObjectRelease();
      if (v25)
      {
        v23(v42, v24, v6);
        uint64_t v26 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B6C3D418(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v44;
        }
        uint64_t v22 = v37;
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        uint64_t v6 = v32;
        if (v28 >= v27 >> 1)
        {
          sub_1B6C3D418(v27 > 1, v28 + 1, 1);
          uint64_t v26 = v44;
        }
        *(void *)(v26 + 16) = v28 + 1;
        v23((char *)(v26 + v33 + v28 * v22), v42, v6);
        uint64_t v44 = v26;
        uint64_t v14 = v34;
        uint64_t v5 = v35;
      }
      else
      {
        (*v31)(v24, v6);
        uint64_t v14 = v24;
        uint64_t v22 = v37;
      }
      v18 += v22;
      --v15;
      uint64_t v20 = v43;
      if (!v15)
      {
        v36(v5, 1, 1, v6, v21);
        break;
      }
      v41(v5, v18, v6, v21);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v13);
  }
  swift_bridgeObjectRelease();
  sub_1B6910918((uint64_t)v5, (uint64_t (*)(void))sub_1B63BE100);
  return v44;
}

uint64_t sub_1B69103DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1B62B2CE0(a2, a3);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v14);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v16 + 48);
  if (!*(void *)(v17 + 16)) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1B62B2CE0(a4, a5);
  if ((v19 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v20 + 40);
  if (!*(void *)(v21 + 16))
  {
LABEL_12:
    swift_release();
LABEL_13:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1B62B2CE0(a6, a7);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
  swift_retain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v24;
}

uint64_t sub_1B6910538(uint64_t a1)
{
  return sub_1B666A768(a1, v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t sub_1B691055C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B633AF88();
  uint64_t v8 = (void *)sub_1B6E32688();
  uint64_t v9 = v8[4];
  uint64_t v10 = v8[5];
  uint64_t v11 = v8[6];
  uint64_t v12 = v8[7];
  swift_bridgeObjectRetain();
  uint64_t v13 = MEMORY[0x1BA9B34C0](v9, v10, v11, v12);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *a3 = v13;
  a3[1] = v15;
  uint64_t v16 = v8[8];
  uint64_t v17 = v8[9];
  uint64_t v18 = v8[10];
  uint64_t v19 = v8[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x1BA9B34C0](v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1B6E32688();
  swift_bridgeObjectRelease();
  uint64_t v21 = v20[2];
  if (v21)
  {
    uint64_t v22 = v20[4];
    uint64_t v23 = v20[5];
    uint64_t v25 = v20[6];
    uint64_t v24 = v20[7];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    uint64_t v24 = 0;
  }
  sub_1B68EA588(0, v21 != 0);
  uint64_t v26 = MEMORY[0x1BA9B34C0](v22, v23, v25, v24);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  *a4 = v26;
  a4[1] = v28;
  sub_1B6910794();
  sub_1B69108D0((unint64_t *)&qword_1E9DD26F8, (void (*)(uint64_t))sub_1B6910794);
  sub_1B6655408();
  uint64_t v29 = sub_1B6E31AD8();
  uint64_t v31 = v30;
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v29;
  a5[1] = v31;
  return result;
}

void sub_1B6910794()
{
  if (!qword_1E9DD26F0)
  {
    unint64_t v0 = sub_1B6E31D18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD26F0);
    }
  }
}

uint64_t sub_1B69107EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B690EB44(a1, a2, a3, *(unsigned char **)(v3 + 16));
}

uint64_t sub_1B69107F8()
{
  return sub_1B690EC24();
}

uint64_t sub_1B6910808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6668C60(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(void *)(v3 + 40), *(uint64_t **)(v3 + 48));
}

uint64_t sub_1B6910818()
{
  return sub_1B690E920();
}

uint64_t sub_1B6910820()
{
  return sub_1B690E98C();
}

uint64_t sub_1B6910828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6668D20(a1, a2, a3);
}

void sub_1B6910834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B690E078(a1, a2, a3, v3);
}

uint64_t sub_1B691083C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B690E5D0(a1, a2, a3, *(void *)(v3 + 16));
}

unint64_t sub_1B6910848()
{
  unint64_t result = qword_1E9DD2700;
  if (!qword_1E9DD2700)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD2700);
  }
  return result;
}

uint64_t sub_1B6910888()
{
  return sub_1B690C47C();
}

void *sub_1B6910894(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B69108D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6910918(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B6910978()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B69109B4(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6297AA8(0, &qword_1E9DD2708, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6297B0C();
  sub_1B6E33A88();
  uint64_t v13 = *v3;
  HIBYTE(v12) = 0;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v13 = v3[1];
    HIBYTE(v12) = 1;
    sub_1B6E32FA8();
    uint64_t v13 = v3[2];
    HIBYTE(v12) = 2;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6910BB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB2B5C(*a1, *a2);
}

uint64_t sub_1B6910BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B69115B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6910BEC(uint64_t a1)
{
  unint64_t v2 = sub_1B6297B0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6910C28(uint64_t a1)
{
  unint64_t v2 = sub_1B6297B0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6910C64(void *a1)
{
  return sub_1B69109B4(a1);
}

uint64_t sub_1B6910C7C()
{
  return type metadata accessor for ParticleOrientationInit.System();
}

double sub_1B6910C9C()
{
  sub_1B62D2D24(0, (unint64_t *)&qword_1EB980BA0, (void (*)(uint64_t))sub_1B663C11C);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for Orientation;
  *(void *)(v0 + 40) = &off_1F0F560A8;
  return result;
}

double sub_1B6910D00@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E93DF0;
  double result = 50.1238633;
  *(void *)(a1 + 16) = 0x40490FDAC0490FDALL;
  return result;
}

void sub_1B6910D1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  long long v6 = *(_OWORD *)(a3 + 104);
  v54[0] = *(_OWORD *)(a3 + 88);
  v54[1] = v6;
  uint64_t v55 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v54, 0x200000000, v39);
  sub_1B62D7910((uint64_t)v39, (uint64_t)v40, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v40[0])
  {
    long long v47 = v40[0];
    long long v48 = v40[1];
    uint64_t v49 = v41;
    uint64_t v32 = v46;
    if (v46 >= 1 && (uint64_t v7 = v43) != 0)
    {
      uint64_t v8 = v45;
      uint64_t v62 = v45[4];
      uint64_t v31 = v44;
      int v9 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v27 = v45 + 13;
      uint64_t v28 = v45 + 8;
      uint64_t v29 = (uint64_t)(v45 + 6);
      uint64_t v10 = (uint64_t *)(v42 + 24);
      int v30 = v9;
      while (1)
      {
        uint64_t v11 = *((unsigned int *)v10 - 6);
        uint64_t v12 = *((unsigned int *)v10 - 5);
        uint64_t v13 = *((unsigned int *)v10 - 4);
        uint64_t v36 = *v10;
        uint64_t v37 = *(v10 - 1);
        uint64_t v14 = v10[2];
        uint64_t v35 = v10[1];
        uint64_t v38 = v7;
        uint64_t v15 = v5;
        if (v9)
        {
          uint64_t v16 = *(os_unfair_lock_s **)(v14 + 376);
          swift_retain();
          os_unfair_lock_lock(v16);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v62);
        sub_1B62D7910(v29, (uint64_t)v56, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v17 = v8[4];
        uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v8[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
        v8[7] = v18;
        v28[1] = 0;
        v28[2] = 0;
        *uint64_t v28 = 0;
        swift_release();
        v57[0] = v31;
        v57[1] = v14;
        v57[2] = v8;
        v57[3] = v13;
        v57[4] = (v12 - v11 + v13);
        v57[5] = v32;
        v57[6] = v11;
        v57[7] = v12;
        v57[8] = 0;
        v57[9] = 0;
        char v58 = 1;
        uint64_t v59 = v37;
        uint64_t v60 = v36;
        uint64_t v61 = v35;
        sub_1B6911158((uint64_t)v57, a4, a1);
        if (v15) {
          break;
        }
        v52[0] = v47;
        v52[1] = v48;
        uint64_t v53 = v49;
        sub_1B6345178(v8, (unsigned __int16 **)v52, (uint64_t)v56);
        uint64_t v5 = 0;
        if (*(void *)(v8[13] + 16))
        {
          uint64_t v19 = swift_bridgeObjectRetain();
          sub_1B639147C(v19, v14);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v21 = v8[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v21 + 16));
          }
          else
          {
            uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v21 + 24) >= 2uLL)
            {
              sub_1B62D2D24(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v22 = (void *)swift_allocObject();
              size_t v23 = j__malloc_size(v22);
              v22[2] = 0;
              void v22[3] = 2 * ((uint64_t)(v23 - 32) / 72);
            }
            *uint64_t v27 = v22;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v8[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            uint64_t v24 = *(char **)(v14 + 232);
            uint64_t v25 = *(char **)(v14 + 256);
            if (v24 == v25)
            {
              uint64_t v26 = *(char **)(v14 + 240);
            }
            else
            {
              sub_1B666018C(v25, v24);
              uint64_t v25 = *(char **)(v14 + 232);
              uint64_t v26 = *(char **)(v14 + 240);
              if (v26 == v25)
              {
                uint64_t v26 = 0;
                uint64_t v25 = 0;
                *(void *)(v14 + 232) = 0;
                *(void *)(v14 + 240) = 0;
              }
            }
            *(void *)(v14 + 248) = v26;
            *(void *)(v14 + 256) = v25;
          }
        }
        ecs_stack_allocator_pop_snapshot(v62);
        int v9 = v30;
        if (v30)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
        }
        swift_release();
        v10 += 6;
        uint64_t v7 = v38 - 1;
        if (v38 == 1) {
          goto LABEL_24;
        }
      }

      v50[0] = v47;
      v50[1] = v48;
      uint64_t v51 = v49;
      sub_1B6345178(v8, (unsigned __int16 **)v50, (uint64_t)v56);
      sub_1B634507C((char *)v14);
      ecs_stack_allocator_pop_snapshot(v62);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
      __break(1u);
    }
    else
    {
LABEL_24:
      sub_1B632F170(v39);
    }
  }
}

void sub_1B6911158(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 16));
  uint64_t v8 = v6;
  _Q4.i32[0] = *(_DWORD *)a2;
  float v9 = *(float *)(a2 + 4);
  if (*(float *)a2 == v9 && *(float *)(a2 + 8) == *(float *)(a2 + 12) && *(float *)(a2 + 16) == *(float *)(a2 + 20))
  {
    _Q4.i32[1] = *(_DWORD *)(a2 + 8);
    _Q4.i32[2] = *(_DWORD *)(a2 + 16);
    v11.i64[0] = 0x3F0000003F000000;
    v11.i64[1] = 0x3F0000003F000000;
    simd_float4 v12 = (simd_float4)vmulq_f32(_Q4, v11);
    v12.i32[3] = 0;
    simd_float4 x = v12;
    float32x4_t v58 = (float32x4_t)_simd_cos_f4(v12);
    _Q0 = _simd_sin_f4(x);
    uint64_t v14 = *(void *)(a1 + 48);
    uint64_t v15 = *(void *)(a1 + 56) - v14;
    if (v15)
    {
      _Q7 = v58;
      float v17 = vmuls_lane_f32(v58.f32[1], v58, 2);
      float v18 = vmuls_lane_f32(_Q0.f32[1], (float32x4_t)_Q0, 2);
      *(float *)&long long v27 = vmlas_n_f32(-(float)(v58.f32[0] * v18), v17, _Q0.f32[0]);
      _S4 = vmuls_lane_f32(v58.f32[0], *(float32x2_t *)_Q0.f32, 1);
      __asm { FMLA            S5, S4, V7.S[2] }
      _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
      __asm { FMLA            S6, S4, V0.S[2] }
      DWORD1(v27) = _S5;
      *((void *)&v27 + 1) = __PAIR64__(COERCE_UNSIGNED_INT(vmlas_n_f32(v18 * _Q0.f32[0], v17, v58.f32[0])), _S6);
      uint64_t v28 = (_OWORD *)(v8 + 16 * v14);
      do
      {
        *v28++ = v27;
        --v15;
      }
      while (v15);
    }
  }
  else
  {
    uint64_t v29 = *(void *)(a1 + 48);
    uint64_t v30 = *(void *)(a1 + 56);
    uint64_t v31 = v30 - v29;
    if (v30 != v29)
    {
      uint64_t v32 = a3[3];
      uint64_t v33 = a3[4];
      uint64_t v35 = a3[1];
      uint64_t v34 = a3[2];
      float v36 = v9 - _Q4.f32[0];
      float v37 = *(float *)(a2 + 8);
      float v38 = *(float *)(a2 + 12) - v37;
      float v39 = *(float *)(a2 + 16);
      float v40 = *(float *)(a2 + 20) - v39;
      uint64_t v41 = (_OWORD *)(v6 + 16 * v29);
      __int32 v57 = *(_DWORD *)a2;
      do
      {
        uint64_t v42 = v35 ^ v32 ^ v34;
        uint64_t v43 = v35 ^ v34 ^ v33;
        uint64_t v44 = v35 ^ v32 ^ (v34 << 17) ^ v43;
        uint64_t v45 = v42 ^ __ROR8__(v34 ^ v33, 19);
        uint64_t v46 = v45 ^ v43;
        v7.f32[0] = _Q4.f32[0]
                  + (float)(v36
                          * (float)((float)((9
                                           * ((((unint64_t)(5 * v34) >> 32) >> 25) | (640 * v34))) & 0xFFFFFF)
                                  * 0.000000059605));
        uint64_t v47 = v44 ^ (v42 << 17) ^ v46;
        uint64_t v48 = v44 ^ v42 ^ __ROR8__(v45, 19);
        uint64_t v34 = v47 ^ v44 ^ v42;
        uint64_t v32 = v47 ^ ((v44 ^ v42) << 17);
        v7.f32[1] = v37
                  + (float)(v38
                          * (float)((float)((9
                                           * ((((unint64_t)(5 * v42) >> 32) >> 25) | (640 * v42))) & 0xFFFFFF)
                                  * 0.000000059605));
        uint64_t v33 = __ROR8__(v48, 19);
        v7.f32[2] = v39
                  + (float)(v40
                          * (float)((float)((9
                                           * ((((5 * (v44 ^ (unint64_t)v42)) >> 32) >> 25) | (640 * (v44 ^ v42)))) & 0xFFFFFF)
                                  * 0.000000059605));
        v49.i64[0] = 0x3F0000003F000000;
        v49.i64[1] = 0x3F0000003F000000;
        simd_float4 v50 = (simd_float4)vmulq_f32(v7, v49);
        v50.i32[3] = 0;
        simd_float4 v59 = v50;
        uint64_t v35 = v48 ^ v46;
        float32x4_t xa = (float32x4_t)_simd_cos_f4(v50);
        _Q0 = _simd_sin_f4(v59);
        _Q7 = xa;
        v7.f32[0] = vmuls_lane_f32(xa.f32[1], xa, 2);
        float v53 = vmuls_lane_f32(_Q0.f32[1], (float32x4_t)_Q0, 2);
        _Q4.f32[0] = vmuls_lane_f32(xa.f32[0], *(float32x2_t *)_Q0.f32, 1);
        *(float *)&long long v54 = vmlas_n_f32(-(float)(xa.f32[0] * v53), v7.f32[0], _Q0.f32[0]);
        __asm { FMLA            S5, S4, V7.S[2] }
        _Q4.f32[0] = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
        __asm { FMLA            S6, S4, V0.S[2] }
        _Q4.i32[0] = v57;
        DWORD1(v54) = _S5;
        *((void *)&v54 + 1) = __PAIR64__(COERCE_UNSIGNED_INT(vmlas_n_f32(v53 * _Q0.f32[0], v7.f32[0], xa.f32[0])), _S6);
        *v41++ = v54;
        --v31;
      }
      while (v31);
      a3[1] = v35;
      a3[2] = v34;
      a3[3] = v32;
      a3[4] = v33;
    }
  }
}

uint64_t type metadata accessor for ParticleOrientationInit.System()
{
  return self;
}

uint64_t sub_1B6911454(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  swift_retain_n();
  unint64_t v4 = sub_1B695E70C(v3);
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  unint64_t v11 = HIDWORD(v4);
  unint64_t v12 = HIDWORD(v6);
  if (v10) {
    int v13 = -1068953638;
  }
  else {
    int v13 = v4;
  }
  if (v10)
  {
    LODWORD(v11) = 1078530010;
    int v14 = -1068953638;
  }
  else
  {
    int v14 = v6;
  }
  if (v10)
  {
    LODWORD(v12) = 1078530010;
    int v15 = -1068953638;
  }
  else
  {
    int v15 = v8;
  }
  if (v10) {
    int v16 = 1078530010;
  }
  else {
    int v16 = HIDWORD(v8);
  }
  v19[0] = v13;
  v19[1] = v11;
  v19[2] = v14;
  v19[3] = v12;
  v19[4] = v15;
  v19[5] = v16;
  uint64_t v17 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B6C00690(v17, v2, v2, (uint64_t)a1, (uint64_t)v19);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

const char *sub_1B6911548()
{
  return "SetOrientation.CPU";
}

uint64_t type metadata accessor for ParticleOrientationInit.GPUSystem()
{
  return self;
}

const char *sub_1B6911584()
{
  return "SetOrientation.GPU";
}

uint64_t sub_1B6911598()
{
  return type metadata accessor for ParticleOrientationInit.GPUSystem();
}

uint64_t sub_1B69115B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65676E615278 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E615279 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E61527ALL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B69116D8(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  swift_retain();
  unint64_t v5 = sub_1B695E70C(v3);
  unint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  unint64_t v12 = HIDWORD(v5);
  unint64_t v13 = HIDWORD(v7);
  if (v11) {
    int v14 = -1068953638;
  }
  else {
    int v14 = v5;
  }
  if (v11)
  {
    LODWORD(v12) = 1078530010;
    int v15 = -1068953638;
  }
  else
  {
    int v15 = v7;
  }
  if (v11)
  {
    LODWORD(v13) = 1078530010;
    int v16 = -1068953638;
  }
  else
  {
    int v16 = v9;
  }
  if (v11) {
    int v17 = 1078530010;
  }
  else {
    int v17 = HIDWORD(v9);
  }
  v26[0] = v14;
  v26[1] = v12;
  v26[2] = v15;
  v26[3] = v13;
  v26[4] = v16;
  v26[5] = v17;
  uint64_t v18 = *a1;
  if (*a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_orientation_uniforms(0);
    sub_1B6B594A8((uint64_t)v26, 1, ObjectType, v20, v21, v22, v23, v24);
  }
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v2, v18 == 0, 0, (uint64_t)a1, 0xD000000000000018, 0x80000001B6F3DC00, 0);
  sub_1B6786A7C((uint64_t)a1);
  return swift_release();
}

ValueMetadata *type metadata accessor for ParticleOrientationInit()
{
  return &type metadata for ParticleOrientationInit;
}

unsigned char *storeEnumTagSinglePayload for ParticleOrientationInit.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6911900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleOrientationInit.CodingKeys()
{
  return &type metadata for ParticleOrientationInit.CodingKeys;
}

unint64_t sub_1B691193C()
{
  unint64_t result = qword_1E9DD2710;
  if (!qword_1E9DD2710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2710);
  }
  return result;
}

uint64_t sub_1B6911990(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v1, 0);
    uint64_t v2 = v23;
    unint64_t v4 = sub_1B6860A50(a1);
    uint64_t v5 = 0;
    uint64_t v19 = a1 + 64;
    int64_t v18 = v1;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8 * v4);
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B633D260(*(void *)(v7 + 16), *(void *)(v7 + 32), v20);
      sub_1B6E32B18();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v20);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v9 = v21;
      unint64_t v8 = v22;
      uint64_t v23 = v2;
      unint64_t v11 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1B6C3C3B8(v10 > 1, v11 + 1, 1);
        uint64_t v2 = v23;
      }
      *(void *)(v2 + 16) = v11 + 1;
      uint64_t v12 = v2 + 16 * v11;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      unint64_t v13 = v4 >> 6;
      if ((*(void *)(v19 + 8 * (v4 >> 6)) & (-2 << v4)) != 0)
      {
        unint64_t v4 = __clz(__rbit64(*(void *)(v19 + 8 * (v4 >> 6)) & (-2 << v4))) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v6 = v18;
      }
      else
      {
        unint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
        unint64_t v14 = v13 + 1;
        unint64_t v15 = (v4 + 63) >> 6;
        int64_t v6 = v18;
        if (v13 + 1 < v15)
        {
          unint64_t v16 = *(void *)(v19 + 8 * v14);
          if (!v16)
          {
            unint64_t v14 = v13 + 2;
            if (v13 + 2 >= v15) {
              goto LABEL_4;
            }
            unint64_t v16 = *(void *)(v19 + 8 * v14);
            if (!v16)
            {
              while (v15 - 3 != v13)
              {
                unint64_t v16 = *(void *)(a1 + 88 + 8 * v13++);
                if (v16)
                {
                  unint64_t v14 = v13 + 2;
                  goto LABEL_10;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_10:
          unint64_t v4 = __clz(__rbit64(v16)) + (v14 << 6);
        }
      }
LABEL_4:
      ++v5;
    }
    while (v5 != v6);
  }
  return v2;
}

uint64_t sub_1B6911BE8()
{
  return sub_1B6E31BD8();
}

uint64_t sub_1B6911C48()
{
  return sub_1B6E31B38();
}

uint64_t sub_1B6911C98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  sub_1B62B57B8(0, &qword_1E9DD2798, (uint64_t (*)(void))sub_1B6914420, (uint64_t)&type metadata for Bindings.Value.EnumInfo.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)&v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6914420();
  sub_1B6E33A88();
  char v18 = 0;
  uint64_t v11 = v15;
  sub_1B6E32F48();
  if (!v11)
  {
    uint64_t v16 = v14;
    char v17 = 1;
    sub_1B62D8588(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6914474((unint64_t *)&qword_1E9DCFE00);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6911EA0(char *a1, char *a2)
{
  return sub_1B6BBA2BC(*a1, *a2);
}

uint64_t sub_1B6911EAC()
{
  if (*v0) {
    return 0x73657361436C6C61;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1B6911EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6913E4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6911F08(uint64_t a1)
{
  unint64_t v2 = sub_1B6914420();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6911F44(uint64_t a1)
{
  unint64_t v2 = sub_1B6914420();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6911F80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6913FE4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B6911FB0(void *a1)
{
  return sub_1B6911C98(a1, *v1, v1[1], v1[2]);
}

void *sub_1B6911FD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char v17 = v16;
  int v54 = a7;
  uint64_t v61 = a4;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v58 = a16;
  simd_float4 v59 = a1;
  uint64_t v57 = a15;
  uint64_t v55 = a8;
  uint64_t v56 = a14;
  uint64_t v52 = a6;
  uint64_t v53 = a13;
  uint64_t v51 = a12;
  int v49 = a11;
  int v50 = a5;
  uint64_t v48 = a10;
  int v47 = a9;
  sub_1B62B5820();
  MEMORY[0x1F4188790](v18 - 8, v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1B6E31118();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22, v24);
  uint64_t v60 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id;
  sub_1B6E31108();
  uint64_t v44 = OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility;
  *((unsigned char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility) = 0;
  uint64_t v26 = (void *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
  *(_OWORD *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic) = xmmword_1B6E50D30;
  long long v27 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min;
  *(void *)long long v27 = 0;
  v27[8] = 1;
  uint64_t v28 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max;
  *(void *)uint64_t v28 = 0;
  v28[8] = 1;
  uint64_t v29 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step;
  *(void *)uint64_t v29 = 0;
  v29[8] = 1;
  uint64_t v30 = (void *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
  *uint64_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = (void *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
  v31[1] = 0;
  v31[2] = 0;
  *uint64_t v31 = 0;
  sub_1B678FED0(v61, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1B6E31108();
    sub_1B678FF34((uint64_t)v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v60, v21, v22);
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v43, v60, v22);
  uint64_t v32 = v46;
  *uint64_t v26 = v45;
  v26[1] = v32;
  uint64_t v33 = v59;
  sub_1B62C14BC(v59, v59[3]);
  v17[4] = swift_getDynamicType();
  *((unsigned char *)v17 + v44) = v50;
  *(void *)long long v27 = v52;
  v27[8] = v54 & 1;
  *(void *)uint64_t v28 = v55;
  v28[8] = v47 & 1;
  *(void *)uint64_t v29 = v48;
  v29[8] = v49 & 1;
  uint64_t v34 = v53;
  *uint64_t v30 = v51;
  v30[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *v31;
  uint64_t v36 = v31[1];
  uint64_t v37 = v57;
  *uint64_t v31 = v56;
  v31[1] = v37;
  v31[2] = v58;
  sub_1B677C3D4(v35, v36);
  uint64_t v38 = v17[4];
  uint64_t v39 = sub_1B62B5950(v38);
  float v40 = (unsigned char *)swift_slowAlloc();
  v17[2] = v40;
  v17[3] = &v40[v39];
  sub_1B62CA888((uint64_t)v33, v40, v38);
  sub_1B678FF34(v61);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
  return v17;
}

uint64_t sub_1B6912350()
{
  uint64_t v1 = v0;
  sub_1B633D2CC();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2) {
    MEMORY[0x1BA9B84C0](v2, -1, -1);
  }
  uint64_t v3 = v0 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id;
  uint64_t v4 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  sub_1B677C3D4(*(void *)(v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo), *(void *)(v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 8));
  return v1;
}

uint64_t sub_1B6912410()
{
  sub_1B6912350();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6912468()
{
  return type metadata accessor for Bindings.Value();
}

uint64_t type metadata accessor for Bindings.Value()
{
  uint64_t result = qword_1EB97FED8;
  if (!qword_1EB97FED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B69124BC()
{
  uint64_t result = sub_1B6E31118();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Bindings.Value.EnumInfo()
{
  return &type metadata for Bindings.Value.EnumInfo;
}

unsigned char *storeEnumTagSinglePayload for Bindings.Visibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6912670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Bindings.Visibility()
{
  return &type metadata for Bindings.Visibility;
}

uint64_t assignWithCopy for Bindings(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Bindings(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Bindings()
{
  return &type metadata for Bindings;
}

uint64_t sub_1B6912770(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x6369746E616D6573;
      break;
    case 3:
      uint64_t result = 7235949;
      break;
    case 4:
      uint64_t result = 7889261;
      break;
    case 5:
      uint64_t result = 1885697139;
      break;
    case 6:
      uint64_t result = 0x756E614D72657375;
      break;
    case 7:
      uint64_t result = 0x63696C6275507369;
      break;
    case 8:
      uint64_t result = 0x696C696269736976;
      break;
    case 9:
      uint64_t result = 0x6F666E496D756E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6912890(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x6369746E616D6573;
      break;
    case 3:
      uint64_t result = 7235949;
      break;
    case 4:
      uint64_t result = 7889261;
      break;
    case 5:
      uint64_t result = 1885697139;
      break;
    case 6:
      uint64_t result = 0x756E614D72657375;
      break;
    case 7:
      uint64_t result = 0x63696C6275507369;
      break;
    case 8:
      uint64_t result = 0x696C696269736976;
      break;
    case 9:
      uint64_t result = 0x6F666E496D756E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B69129B0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1B6912890(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B6912890(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6912A3C()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6912770(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6912AA0()
{
  sub_1B6912770(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6912AF4()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6912770(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6912B54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6913E00();
  *a1 = result;
  return result;
}

uint64_t sub_1B6912B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B6912770(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B6912BB0()
{
  return sub_1B6912890(*v0);
}

uint64_t sub_1B6912BB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6913E00();
  *a1 = result;
  return result;
}

void sub_1B6912BE0(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1B6912BEC(uint64_t a1)
{
  unint64_t v2 = sub_1B69135BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6912C28(uint64_t a1)
{
  unint64_t v2 = sub_1B69135BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6912C64(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B6E31118();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62B57B8(0, &qword_1E9DD2728, (uint64_t (*)(void))sub_1B69135BC, (uint64_t)&type metadata for Bindings.Value.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v29 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B633D260(*(void *)(v2 + 16), *(void *)(v2 + 32), (uint64_t *)&v33);
  sub_1B62C550C((uint64_t)v35, v36);
  sub_1B691370C();
  uint64_t v13 = v32;
  sub_1B6E332B8();
  if (v13)
  {
    sub_1B6913760((uint64_t)&v33);
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v14 = v31;
    sub_1B6913760((uint64_t)&v33);
    uint64_t v15 = a1[3];
    uint64_t v16 = a1[4];
    sub_1B62C14BC(a1, v15);
    LODWORD(v15) = *(unsigned __int8 *)(sub_1B6C71584(v15, v16) + 81);
    swift_release();
    if (v15 == 1)
    {
      sub_1B62C550C((uint64_t)v35, v36);
      sub_1B69135BC();
      char v17 = v12;
      sub_1B6E33248();
      uint64_t v18 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id, v4);
      LOBYTE(v33) = 0;
      sub_1B62A6E68(&qword_1E9DD17C8, MEMORY[0x1E4F27990]);
      uint64_t v19 = v9;
      uint64_t v20 = v32;
      sub_1B6E32FA8();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v18);
      if (v20)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v9);
      }
      else
      {
        long long v33 = *(_OWORD *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
        char v37 = 2;
        sub_1B69137B4();
        sub_1B6E32FA8();
        LOBYTE(v33) = *(unsigned char *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility);
        char v37 = 8;
        sub_1B6913808();
        sub_1B6E32FA8();
        uint64_t v22 = v30;
        char v23 = *(unsigned char *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min + 8);
        *(void *)&long long v33 = *(void *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
        BYTE8(v33) = v23;
        char v37 = 3;
        uint64_t v24 = MEMORY[0x1E4FBB3D0];
        sub_1B62D8588(0, &qword_1E9DD2740, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
        sub_1B691385C(&qword_1E9DD2748, &qword_1E9DD2740, v24);
        sub_1B6E32FA8();
        char v25 = *(unsigned char *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max + 8);
        *(void *)&long long v33 = *(void *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
        BYTE8(v33) = v25;
        char v37 = 4;
        sub_1B6E32FA8();
        char v26 = *(unsigned char *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step + 8);
        *(void *)&long long v33 = *(void *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
        BYTE8(v33) = v26;
        char v37 = 5;
        sub_1B6E32FA8();
        long long v33 = *(_OWORD *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
        char v37 = 6;
        uint64_t v27 = MEMORY[0x1E4FBB1A0];
        sub_1B62D8588(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
        sub_1B691385C(&qword_1E9DD2750, (unint64_t *)&qword_1EB980110, v27);
        sub_1B6E32FA8();
        uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 16);
        long long v33 = *(_OWORD *)(v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
        uint64_t v34 = v28;
        char v37 = 9;
        sub_1B62D8588(0, &qword_1E9DD2758, (uint64_t)&type metadata for Bindings.Value.EnumInfo, MEMORY[0x1E4FBB718]);
        sub_1B69138D4();
        sub_1B6E32FA8();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v19);
      }
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v35);
}

uint64_t sub_1B69132EC(void *a1)
{
  return sub_1B6912C64(a1);
}

void *sub_1B6913314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = sub_1B62A6EF4(MEMORY[0x1E4FBC860]);
  uint64_t result = sub_1B62A6F14(v2);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B691336C()
{
  unint64_t result = qword_1E9DD2718;
  if (!qword_1E9DD2718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2718);
  }
  return result;
}

uint64_t sub_1B69133C0(void *a1)
{
  uint64_t v2 = *v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v6 = v2;
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B62A6F34();
  sub_1B62A6E68(&qword_1E9DD2780, (void (*)(uint64_t))sub_1B62A6F34);
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B69134A0()
{
  return 0x73676E69646E6942;
}

void *sub_1B69134B8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1B69FEFE8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B69134F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6913DA0(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1B69134FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6913F30(a1, a2, a3, *v3);
}

uint64_t sub_1B6913504()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1B6911990(v0);
  swift_bridgeObjectRelease();
  sub_1B62D8588(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  uint64_t v1 = sub_1B6E31638();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1B69135BC()
{
  unint64_t result = qword_1EB97FEB0;
  if (!qword_1EB97FEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FEB0);
  }
  return result;
}

unint64_t sub_1B6913610()
{
  unint64_t result = qword_1EB97F220;
  if (!qword_1EB97F220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F220);
  }
  return result;
}

unint64_t sub_1B6913664()
{
  unint64_t result = qword_1E9DD2720;
  if (!qword_1E9DD2720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2720);
  }
  return result;
}

unint64_t sub_1B69136B8()
{
  unint64_t result = qword_1EB94A1C8;
  if (!qword_1EB94A1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB94A1C8);
  }
  return result;
}

unint64_t sub_1B691370C()
{
  unint64_t result = qword_1E9DD2730;
  if (!qword_1E9DD2730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2730);
  }
  return result;
}

uint64_t sub_1B6913760(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B69137B4()
{
  unint64_t result = qword_1E9DD30B0;
  if (!qword_1E9DD30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD30B0);
  }
  return result;
}

unint64_t sub_1B6913808()
{
  unint64_t result = qword_1E9DD2738;
  if (!qword_1E9DD2738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2738);
  }
  return result;
}

uint64_t sub_1B691385C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D8588(255, a2, a3, MEMORY[0x1E4FBB718]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B69138D4()
{
  unint64_t result = qword_1E9DD2760;
  if (!qword_1E9DD2760)
  {
    sub_1B62D8588(255, &qword_1E9DD2758, (uint64_t)&type metadata for Bindings.Value.EnumInfo, MEMORY[0x1E4FBB718]);
    sub_1B6913968();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2760);
  }
  return result;
}

unint64_t sub_1B6913968()
{
  unint64_t result = qword_1E9DD2768;
  if (!qword_1E9DD2768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2768);
  }
  return result;
}

uint64_t sub_1B69139BC()
{
  sub_1B62B5820();
  MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B62A6EF4(MEMORY[0x1E4FBC860]);
  uint64_t v34 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = *(void *)(*v0 + 64);
  uint64_t v37 = *v0 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  unint64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  int64_t v38 = v10;
  unint64_t v36 = v10 - 5;
  uint64_t v40 = v11;
  uint64_t v35 = v11 + 104;
  uint64_t v13 = (uint64_t)v39;
  while (1)
  {
    uint64_t v52 = v4;
    if (v9)
    {
      uint64_t v50 = (v9 - 1) & v9;
      uint64_t v51 = v12;
      unint64_t v14 = __clz(__rbit64(v9)) | (v12 << 6);
      goto LABEL_5;
    }
    uint64_t v30 = v12 + 1;
    if (v12 + 1 >= v38) {
      goto LABEL_19;
    }
    unint64_t v31 = *(void *)(v37 + 8 * v30);
    if (!v31)
    {
      uint64_t v30 = v12 + 2;
      if (v12 + 2 >= v38) {
        goto LABEL_19;
      }
      unint64_t v31 = *(void *)(v37 + 8 * v30);
      if (!v31)
      {
        uint64_t v30 = v12 + 3;
        if (v12 + 3 >= v38) {
          goto LABEL_19;
        }
        unint64_t v31 = *(void *)(v37 + 8 * v30);
        if (!v31)
        {
          uint64_t v30 = v12 + 4;
          if (v12 + 4 >= v38) {
            goto LABEL_19;
          }
          unint64_t v31 = *(void *)(v37 + 8 * v30);
          if (!v31) {
            break;
          }
        }
      }
    }
LABEL_18:
    uint64_t v50 = (v31 - 1) & v31;
    uint64_t v51 = v30;
    unint64_t v14 = __clz(__rbit64(v31)) + (v30 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(v40 + 56);
    uint64_t v16 = (uint64_t *)(*(void *)(v40 + 48) + 16 * v14);
    uint64_t v17 = v16[1];
    uint64_t v49 = *v16;
    uint64_t v18 = *(void *)(v15 + 8 * v14);
    sub_1B633D260(*(void *)(v18 + 16), *(void *)(v18 + 32), v53);
    uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
    uint64_t v47 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic + 8);
    uint64_t v48 = v19;
    uint64_t v20 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
    uint64_t v46 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
    int v45 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min + 8);
    uint64_t v44 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
    int v43 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max + 8);
    uint64_t v42 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
    int v41 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step + 8);
    uint64_t v21 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual + 8);
    uint64_t v23 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
    uint64_t v24 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 8);
    uint64_t v25 = *(void *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 16);
    int v26 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility);
    type metadata accessor for Bindings.Value();
    uint64_t v27 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B62B2DF0(v23, v24);
    sub_1B6911FD0(v53, v48, v47, v13, v26, v46, v45, v44, v43, v42, v41, v21, v22, v23, v24, v25);
    uint64_t v28 = (uint64_t)v52;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v53[0] = v28;
    sub_1B67E4BFC(v27, v49, v17, isUniquelyReferenced_nonNull_native);
    uint64_t v4 = (void *)v53[0];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v9 = v50;
    uint64_t v12 = v51;
  }
  while (v36 != v12)
  {
    unint64_t v31 = *(void *)(v35 + 8 * v12++);
    if (v31)
    {
      uint64_t v30 = v12 + 4;
      goto LABEL_18;
    }
  }
LABEL_19:
  swift_release();
  uint64_t v32 = v34;
  swift_bridgeObjectRelease();
  *uint64_t v32 = (uint64_t)v4;
  *((unsigned char *)v32 + 8) = 1;
  return sub_1B62B2474();
}

uint64_t sub_1B6913DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = MEMORY[0x1BA9B34C0]();
  if (*(void *)(a5 + 16) && (uint64_t v8 = sub_1B62B2CE0(v6, v7), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(*(void *)(a5 + 56) + 8 * v8);
    swift_retain();
  }
  else
  {
    uint64_t v10 = 0;
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B6913E00()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6913E4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657361436C6C61 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6913F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B62B2CE0(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 56) + 8 * v8);
  swift_retain();
  swift_bridgeObjectRelease();
  if (*(void *)(v10 + 32) != a3 && a3 != MEMORY[0x1E4FBC840] + 8)
  {
    swift_release();
    return 0;
  }
  uint64_t v12 = *(void *)(v10 + 16);
  swift_release();
  return v12;
}

uint64_t sub_1B6913FE4(void *a1)
{
  sub_1B62B57B8(0, &qword_1E9DD2788, (uint64_t (*)(void))sub_1B6914420, (uint64_t)&type metadata for Bindings.Value.EnumInfo.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v11[-v7];
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6914420();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    v11[31] = 0;
    uint64_t v9 = sub_1B6E32D98();
    sub_1B62D8588(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    v11[30] = 1;
    sub_1B6914474((unint64_t *)&qword_1EB980308);
    swift_bridgeObjectRetain();
    sub_1B6E32DF8();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

unint64_t sub_1B6914288()
{
  unint64_t result = qword_1E9DD2778;
  if (!qword_1E9DD2778)
  {
    sub_1B69143AC(255, &qword_1E9DD2770, (uint64_t (*)(uint64_t))type metadata accessor for Bindings.Value, MEMORY[0x1E4FBAEA0]);
    sub_1B62A6E68(&qword_1EB97FED0, (void (*)(uint64_t))type metadata accessor for Bindings.Value);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2778);
  }
  return result;
}

uint64_t sub_1B6914360()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1B69143AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1B6914420()
{
  unint64_t result = qword_1E9DD2790;
  if (!qword_1E9DD2790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2790);
  }
  return result;
}

uint64_t sub_1B6914474(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D8588(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B69144F8()
{
  unint64_t result = qword_1E9DD27A0;
  if (!qword_1E9DD27A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD27A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Bindings.Value.EnumInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6914618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Bindings.Value.EnumInfo.CodingKeys()
{
  return &type metadata for Bindings.Value.EnumInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Bindings.Value.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B691471CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Bindings.Value.CodingKeys()
{
  return &type metadata for Bindings.Value.CodingKeys;
}

unint64_t sub_1B6914758()
{
  unint64_t result = qword_1E9DD27A8;
  if (!qword_1E9DD27A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD27A8);
  }
  return result;
}

unint64_t sub_1B69147B0()
{
  unint64_t result = qword_1E9DD27B0;
  if (!qword_1E9DD27B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD27B0);
  }
  return result;
}

unint64_t sub_1B6914808()
{
  unint64_t result = qword_1E9DD27B8;
  if (!qword_1E9DD27B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD27B8);
  }
  return result;
}

unint64_t sub_1B6914860()
{
  unint64_t result = qword_1E9DD27C0[0];
  if (!qword_1E9DD27C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9DD27C0);
  }
  return result;
}

unint64_t sub_1B69148B8()
{
  unint64_t result = qword_1EB97FEC0;
  if (!qword_1EB97FEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FEC0);
  }
  return result;
}

unint64_t sub_1B6914910()
{
  unint64_t result = qword_1EB97FEB8;
  if (!qword_1EB97FEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FEB8);
  }
  return result;
}

uint64_t sub_1B6914964(uint64_t a1, char a2, char a3)
{
  sub_1B6299E70(0xFFFFFFFF);
  uint64_t v33 = v3;
  uint64_t v8 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                 + 8 * *(void *)thread_worker_index(&thread_worker_index, v6)
                 + 8);
  BOOL v9 = v7 == dword_1E9E49870;
  unsigned int v34 = v7;
  if (v7 == dword_1E9E49870) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v7;
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v12 = sub_1B62FF544(MEMORY[0x1E4FBC860]);
  type metadata accessor for RemapContext();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 24) = sub_1B62FF544(v11);
  unint64_t v14 = sub_1B67DD1D8(v11);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v14;
  *(unsigned char *)(v13 + 16) = 1;
  swift_retain();
  swift_retain();
  sub_1B69E2F54(a1, a1, v13);
  swift_release();
  swift_release();
  LOBYTE(v41) = v9;
  char v35 = a3;
  sub_1B6B1FB1C(v13, a1, v10 | ((unint64_t)v9 << 32), a3, v8);
  swift_bridgeObjectRetain();
  swift_release();
  swift_getKeyPath();
  uint64_t v15 = *(void *)(a1 + 176);
  swift_retain();
  uint64_t v16 = (void *)sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v15, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0);
  swift_release();
  swift_release();
  if (v16)
  {
    uint64_t v17 = *(void **)(a1 + 176);
    swift_retain();
    uint64_t v18 = sub_1B6304AB4((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1F0F685A0, v17);
    swift_release();
    unsigned int v19 = sub_1B6A02E6C(v18);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v20 = v33;
    uint64_t v21 = *(void *)(v33 + 176);
    swift_retain();
    uint64_t v22 = (void *)sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v21, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0);
    swift_release();
    swift_release();
    uint64_t v23 = v34;
    if (v22)
    {
      sub_1B69932C8(v34, v19, (uint64_t)v16);
    }
  }
  else
  {
    uint64_t v20 = v33;
    uint64_t v23 = v34;
  }
  uint64_t v24 = *(void **)(v20 + 176);
  swift_retain();
  uint64_t v25 = sub_1B6304AB4((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1F0F685A0, v24);
  swift_release();
  *(void *)&long long v41 = v25;
  uint64_t v26 = sub_1B67EA3D8(v40, v23);
  MEMORY[0x1F4188790](v26, v27);
  uint64_t v28 = *(void **)(v20 + 176);
  MEMORY[0x1F4188790](v29, v30);
  swift_retain();
  sub_1B636E6CC((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1F0F685A0, v28, (void (*)(uint64_t))sub_1B63957FC);
  swift_bridgeObjectRelease();
  swift_release();
  if (v23 == dword_1E9E49870) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = v23;
  }
  sub_1B6A99838(v31 | ((unint64_t)(v23 == dword_1E9E49870) << 33));
  if (v35)
  {
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    uint64_t v49 = qword_1EB997A18;
    int v50 = 0;
    char v51 = 2;
    uint64_t v52 = 0;
    char v53 = 2;
    uint64_t v54 = 0;
    swift_retain();
    sub_1B62A068C(1, (uint64_t)v37);
    swift_release();
    v47[0] = v37[0];
    v47[1] = v37[1];
    uint64_t v48 = v38;
    sub_1B62C9DA8(v20, (uint64_t)v47, 0x200000000, v39);
    sub_1B6309B40((uint64_t)v39, (uint64_t)v40);
    if (!*(void *)&v40[0])
    {
      sub_1B62CA064((uint64_t)v37);
      if ((a2 & 1) == 0) {
        return v23;
      }
      goto LABEL_18;
    }
    long long v43 = v40[2];
    long long v44 = v40[3];
    long long v45 = v40[4];
    long long v46 = v40[5];
    long long v41 = v40[0];
    long long v42 = v40[1];
    sub_1B68457BC();
    sub_1B62CA064((uint64_t)v37);
    sub_1B632F170(v39);
  }
  if (a2) {
LABEL_18:
  }
    sub_1B6A99274();
  return v23;
}

uint64_t sub_1B6914E48(void *a1)
{
  return sub_1B67C9C04(a1, *(void *)(v1 + 16));
}

unint64_t sub_1B6914E50(unint64_t result, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(result);
  if (a2) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = 2;
  }
  if (result == 0xFFFFFFFF) {
    return result;
  }
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  int64_t v9 = result << 32;
  int v10 = result;
  if ((uint64_t)(result << 32) >= (uint64_t)0xFFFFFFFF00000001 && (int)result < v8[1])
  {
    uint64_t v11 = *v8;
    if (HIDWORD(result) == -1 || *(_DWORD *)(v11 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v12 = (int *)(v11 + 12 * (int)result);
      uint64_t v13 = *((__int16 *)v12 + 2);
      uint64_t v14 = *(void *)(*(void *)(v2 + 136) + 8 * *v12 + 32);
      if (*(void *)(v14 + 232) <= v13 && *(void *)(v14 + 240) > v13)
      {
        uint64_t v54 = v7;
        uint64_t v52 = v2;
        uint64_t v16 = **(void **)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v17 = *(os_unfair_lock_s **)(v14 + 344);
        swift_retain();
        os_unfair_lock_lock(v17);
        uint64_t v53 = v16;
        uint64_t v18 = *(void *)(v16 + 32);
        ecs_stack_allocator_push_snapshot(v18);
        uint64_t v19 = *(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 128);
        if (*(void *)(v19 + 16)
          && (uint64_t v51 = v18,
              uint64_t v20 = *(void *)(*(void *)(v14 + 40) + 16),
              unint64_t v21 = sub_1B62C1A30((uint64_t)&type metadata for TextureLoadingOptions),
              uint64_t v22 = v20,
              uint64_t v18 = v51,
              (v23 & 1) != 0)
          && *(ValueMetadata **)(*(void *)(v22 + 24) + 16 * *(void *)(*(void *)(v19 + 56) + 8 * v21) + 32) == &type metadata for TextureLoadingOptions)
        {
          swift_retain();
          uint64_t v3 = v52;
        }
        else
        {
          swift_retain();
          uint64_t v24 = ecs_stack_allocator_allocate(v18, 8, 8);
          uint64_t v25 = v24;
          *uint64_t v24 = v13;
          uint64_t v26 = *(void *)(v14 + 192);
          if (v26) {
            sub_1B6BFB238(v24, 1, 1, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 1, v26, *(void *)(v14 + 200), *(void *)(v14 + 208));
          }
          int v50 = v25;
          sub_1B6BFB510(*(void *)(v14 + 40), v14, v25, 1, 1);
          int v27 = *(_DWORD *)(v14 + 24);
          swift_retain();
          uint64_t v59 = 0;
          memset(v58, 0, sizeof(v58));
          uint64_t v57 = 0;
          memset(v56, 0, sizeof(v56));
          int v55 = sub_1B637F628(v27, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 0, 0, (uint64_t)v58, (uint64_t)v56);
          swift_release();
          sub_1B631E7CC((uint64_t)v56, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
          sub_1B631E7CC((uint64_t)v58, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
          uint64_t v3 = v52;
          if ((uint64_t)(*(void *)(v14 + 240) - *(void *)(v14 + 232)) < 2)
          {
            if (sub_1B63B4340(v55))
            {
              sub_1B66603E4(v55);
            }
            else
            {
              uint64_t v30 = *(void *)(v14 + 232);
              uint64_t v31 = *(void *)(v14 + 240);
              char v32 = *(unsigned char *)(v14 + 120);
              uint64_t v33 = *(unsigned int *)(v14 + 28);
              LOBYTE(v58[0]) = *(unsigned char *)(v14 + 32);
              sub_1B628EEF4(v30, v31, v55, v32, v33 | ((unint64_t)LOBYTE(v58[0]) << 32));
            }
          }
          else
          {
            int v28 = *(unsigned __int8 *)(v14 + 120);
            uint64_t v29 = *(unsigned int *)(v14 + 28);
            LOBYTE(v58[0]) = *(unsigned char *)(v14 + 32);
            sub_1B6BF2AEC(v50, 1, 1, v55, v28, v29 | ((unint64_t)LOBYTE(v58[0]) << 32), 0, 0);
          }
        }
        if ((sub_1B6BF9D70(v5, v3, v54) & 1) == 0)
        {
          *(void *)&v58[0] = 0;
          *((void *)&v58[0] + 1) = 0xE000000000000000;
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B681F698();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          unint64_t result = sub_1B6E32BE8();
          __break(1u);
          return result;
        }
        swift_release();
        ecs_stack_allocator_pop_snapshot(*(void *)(v53 + 32));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
        unint64_t result = swift_release();
      }
    }
  }
  BOOL v35 = v9 > (uint64_t)0xFFFFFFFF00000000 && (int)v5 < v8[1];
  if (a2)
  {
    if (v35)
    {
      uint64_t v42 = *v8 + 12 * v10;
      uint64_t v43 = *(__int16 *)(v42 + 4);
      if (v6 == -1 || *(_DWORD *)(v42 + 8) == v6)
      {
        uint64_t v44 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v8 + 12 * v10) + 32);
        uint64_t v45 = *(void *)(v44 + 48);
        uint64_t v46 = *(void *)(v45 + 16);
        if (v46)
        {
          for (uint64_t i = (void *)(v45 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadPolicy; i += 5)
          {
            if (!--v46) {
              return result;
            }
          }
          if (*(unsigned char *)(*(void *)(v44 + 128) + *i + 4 * v43) == 1)
          {
            uint64_t v48 = &type metadata for TextureLoadRequestCPU;
            uint64_t v49 = &off_1F0F8B740;
            return sub_1B62E364C((uint64_t)v48, (uint64_t)v49, v5);
          }
        }
      }
    }
  }
  else if (v35)
  {
    uint64_t v36 = *v8 + 12 * v10;
    uint64_t v37 = *(__int16 *)(v36 + 4);
    if (v6 == -1 || *(_DWORD *)(v36 + 8) == v6)
    {
      uint64_t v38 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v8 + 12 * v10) + 32);
      uint64_t v39 = *(void *)(v38 + 48);
      uint64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        for (j = (void *)(v39 + 56); (ValueMetadata *)*(j - 3) != &type metadata for TextureLoadPolicy; j += 5)
        {
          if (!--v40) {
            return result;
          }
        }
        if (*(unsigned char *)(*(void *)(v38 + 128) + *j + 4 * v37 + 1) == 1)
        {
          uint64_t v48 = &type metadata for TextureLoadRequestGPU;
          uint64_t v49 = &off_1F0F8B818;
          return sub_1B62E364C((uint64_t)v48, (uint64_t)v49, v5);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B6915474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  sub_1B62E17B4();
  uint64_t v56 = v5;
  MEMORY[0x1F4188790](v5, v6);
  int v55 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1B6E31098();
  uint64_t v8 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54, v9);
  uint64_t v53 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1F4188790](inited - 8, v12);
  uint64_t v14 = (unsigned __int8 *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B633A234(a1, (uint64_t)v14, type metadata accessor for ParticleInitScript);
  int v46 = *v14;
  sub_1B69169CC((uint64_t)v14, type metadata accessor for ParticleInitScript);
  uint64_t v15 = *(void *)(a2 + 16);
  if (!v15)
  {
    uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_33;
  }
  uint64_t v16 = a2 + 32;
  int v50 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  v45[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v49 = 0x80000001B6F3DF40;
  long long v48 = xmmword_1B6E77050;
  uint64_t v51 = v16;
  uint64_t v52 = v15;
  do
  {
    unint64_t v19 = *(void *)(v16 + 32 * v17);
    if (v19 >> 60 != 7) {
      goto LABEL_5;
    }
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    int v21 = *(unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    if (*(unsigned char *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
    {
      unint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (v21 != 1)
      {
        swift_retain();
LABEL_24:
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v61 = 0;
        unint64_t v62 = 0xE000000000000000;
        uint64_t v59 = qword_1EB997FD0;
        swift_retain();
        sub_1B6E328C8();
        uint64_t v64 = v61;
        unint64_t v65 = v62;
        sub_1B6E31948();
        uint64_t v61 = v20;
        unint64_t v62 = v22;
        char v63 = v21;
        sub_1B6E32B18();
        sub_1B6654718(v20, v22, v21);
        uint64_t v32 = v64;
        unint64_t v33 = v65;
        char v34 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        unint64_t v58 = v19;
        uint64_t v60 = v18;
        uint64_t v35 = qword_1EB997FF0;
        uint64_t v36 = qword_1EB985528;
        swift_retain();
        if (v36 != -1) {
          swift_once();
        }
        sub_1B631E83C(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v48;
        *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v37 + 64) = sub_1B678615C();
        *(void *)(v37 + 32) = v32;
        *(void *)(v37 + 40) = v33;
        swift_bridgeObjectRetain();
        sub_1B6E31258();
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v57 = v35;
        uint64_t v38 = v53;
        sub_1B6E31088();
        uint64_t v39 = (uint64_t)v55;
        uint64_t v40 = v56[12];
        uint64_t v41 = v56[16];
        uint64_t v42 = v32;
        uint64_t v43 = &v55[v56[20]];
        (*v50)(v55, v38, v54);
        *(unsigned char *)(v39 + v40) = v34;
        *(void *)(v39 + v41) = 0;
        *(void *)uint64_t v43 = v42;
        *((void *)v43 + 1) = v33;
        swift_bridgeObjectRetain();
        sub_1B6E31368();
        swift_release();
        sub_1B69169CC(v39, (uint64_t (*)(void))sub_1B62E17B4);
        swift_release();
        sub_1B62C6A70(v58);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v18 = v60;
        uint64_t v16 = v51;
        uint64_t v15 = v52;
        goto LABEL_5;
      }
      sub_1B62C6AA8(*(void *)(v16 + 32 * v17));
      sub_1B69083EC(v20, v22, 1);
      LOBYTE(v61) = 1;
      uint64_t v23 = sub_1B6A041D8(v20, v22, v47, 0x100000000);
      if (v24) {
        goto LABEL_24;
      }
      uint64_t v25 = v23;
      sub_1B6654718(v20, v22, 1);
      uint64_t v20 = v25;
    }
    else
    {
      swift_retain();
    }
    uint64_t v26 = *((void *)v18 + 2);
    if (v26)
    {
      int v27 = v18 + 36;
      uint64_t v28 = *((void *)v18 + 2);
      while (*(v27 - 1) != v20 || *v27 != HIDWORD(v20))
      {
        v27 += 2;
        if (!--v28) {
          goto LABEL_19;
        }
      }
    }
    else
    {
LABEL_19:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = sub_1B633F784(0, v26 + 1, 1, v18);
      }
      unint64_t v31 = *((void *)v18 + 2);
      unint64_t v30 = *((void *)v18 + 3);
      if (v31 >= v30 >> 1) {
        uint64_t v18 = sub_1B633F784(v30 > 1, v31 + 1, 1, v18);
      }
      *((void *)v18 + 2) = v31 + 1;
      *(void *)&v18[8 * v31 + 32] = v20;
    }
    sub_1B62C6A70(v19);
LABEL_5:
    ++v17;
  }
  while (v17 != v15);
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1B631F330((uint64_t)v18, v46 != 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6915A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, double), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v54 = a3;
  sub_1B62E17B4();
  char v63 = v11;
  MEMORY[0x1F4188790](v11, v12);
  unint64_t v62 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1B6E31098();
  uint64_t v14 = *(void *)(v61 - 8);
  double v16 = MEMORY[0x1F4188790](v61, v15);
  uint64_t v60 = (char *)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a4(0, v16);
  MEMORY[0x1F4188790](v18 - 8, v19);
  int v21 = (char *)v52 - v20;
  sub_1B633A234(a1, (uint64_t)v52 - v20, a5);
  int v53 = v21[24];
  sub_1B69169CC((uint64_t)v21, a6);
  uint64_t v22 = *(void *)(a2 + 16);
  if (!v22)
  {
    uint64_t v25 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_33;
  }
  uint64_t v23 = a2 + 32;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  v52[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v25 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v56 = 0x80000001B6F3DF40;
  long long v55 = xmmword_1B6E77050;
  uint64_t v58 = v23;
  uint64_t v59 = v22;
  do
  {
    unint64_t v26 = *(void *)(v23 + 32 * v24);
    if (v26 >> 60 != 7) {
      goto LABEL_5;
    }
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    int v28 = *(unsigned __int8 *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    if (*(unsigned char *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
    {
      unint64_t v29 = *(void *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (v28 != 1)
      {
        swift_retain();
LABEL_24:
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v68 = 0;
        unint64_t v69 = 0xE000000000000000;
        uint64_t v66 = qword_1EB997FD0;
        swift_retain();
        sub_1B6E328C8();
        uint64_t v71 = v68;
        unint64_t v72 = v69;
        sub_1B6E31948();
        uint64_t v68 = v27;
        unint64_t v69 = v29;
        char v70 = v28;
        sub_1B6E32B18();
        sub_1B6654718(v27, v29, v28);
        uint64_t v39 = v71;
        unint64_t v40 = v72;
        char v41 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        unint64_t v65 = v26;
        unint64_t v67 = v25;
        uint64_t v42 = qword_1EB997FF0;
        uint64_t v43 = qword_1EB985528;
        swift_retain();
        if (v43 != -1) {
          swift_once();
        }
        sub_1B631E83C(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = v55;
        *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v44 + 64) = sub_1B678615C();
        *(void *)(v44 + 32) = v39;
        *(void *)(v44 + 40) = v40;
        swift_bridgeObjectRetain();
        sub_1B6E31258();
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v64 = v42;
        uint64_t v45 = v60;
        sub_1B6E31088();
        uint64_t v46 = (uint64_t)v62;
        uint64_t v47 = v63[12];
        uint64_t v48 = v63[16];
        uint64_t v49 = v39;
        int v50 = &v62[v63[20]];
        (*v57)(v62, v45, v61);
        *(unsigned char *)(v46 + v47) = v41;
        *(void *)(v46 + v48) = 0;
        *(void *)int v50 = v49;
        *((void *)v50 + 1) = v40;
        swift_bridgeObjectRetain();
        sub_1B6E31368();
        swift_release();
        sub_1B69169CC(v46, (uint64_t (*)(void))sub_1B62E17B4);
        swift_release();
        sub_1B62C6A70(v65);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v25 = v67;
        uint64_t v23 = v58;
        uint64_t v22 = v59;
        goto LABEL_5;
      }
      sub_1B62C6AA8(*(void *)(v23 + 32 * v24));
      sub_1B69083EC(v27, v29, 1);
      LOBYTE(v68) = 1;
      uint64_t v30 = sub_1B6A041D8(v27, v29, v54, 0x100000000);
      if (v31) {
        goto LABEL_24;
      }
      uint64_t v32 = v30;
      sub_1B6654718(v27, v29, 1);
      uint64_t v27 = v32;
    }
    else
    {
      swift_retain();
    }
    uint64_t v33 = *((void *)v25 + 2);
    if (v33)
    {
      char v34 = v25 + 36;
      uint64_t v35 = *((void *)v25 + 2);
      while (*(v34 - 1) != v27 || *v34 != HIDWORD(v27))
      {
        v34 += 2;
        if (!--v35) {
          goto LABEL_19;
        }
      }
    }
    else
    {
LABEL_19:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v25 = sub_1B633F784(0, v33 + 1, 1, v25);
      }
      unint64_t v38 = *((void *)v25 + 2);
      unint64_t v37 = *((void *)v25 + 3);
      if (v38 >= v37 >> 1) {
        uint64_t v25 = sub_1B633F784(v37 > 1, v38 + 1, 1, v25);
      }
      *((void *)v25 + 2) = v38 + 1;
      *(void *)&v25[8 * v38 + 32] = v27;
    }
    sub_1B62C6A70(v26);
LABEL_5:
    ++v24;
  }
  while (v24 != v22);
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1B631F330((uint64_t)v25, v53 != 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6916068()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B69160E0()
{
  sub_1B6916068();

  return swift_deallocClassInstance();
}

uint64_t *sub_1B6916114(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B6A95574(a1, a2, a3, *a4, a4[1], a5, a6, a7, a8, a9);
}

uint64_t *sub_1B6916144(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v6 = a2;
    uint64_t v7 = result;
    uint64_t v8 = 0;
    uint64_t v9 = -1;
    uint64_t v10 = -1;
    do
    {
      uint64_t v12 = *v7++;
      uint64_t v11 = v12;
      if (v12 != v9)
      {
        uint64_t v13 = v9 - v10;
        if (v9 > v10)
        {
          if (v9 - v10 < 0) {
            goto LABEL_21;
          }
          uint64_t v14 = (uint64_t *)(a3 + 8 * v10);
          unint64_t result = (uint64_t *)(a4 + 8 * v8);
          if (result != v14 || (unint64_t)result >= a3 + 8 * v9) {
            unint64_t result = (uint64_t *)memmove(result, v14, 8 * v13);
          }
          v8 += v13;
        }
        uint64_t v10 = v11;
      }
      uint64_t v9 = v11 + 1;
      --v6;
    }
    while (v6);
    if (v9 <= v10) {
      return result;
    }
    if (v9 - v10 < 0)
    {
LABEL_21:
      unint64_t result = (uint64_t *)sub_1B6E32C88();
      __break(1u);
      return result;
    }
    uint64_t v15 = (uint64_t *)(a3 + 8 * v10);
    unint64_t result = (uint64_t *)(a4 + 8 * v8);
    if (result != v15 || (unint64_t)result >= a3 + 8 * v9)
    {
      return (uint64_t *)memmove(result, v15, 8 * (v9 - v10));
    }
  }
  return result;
}

uint64_t sub_1B6916298(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v21 = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v8 = (int *)(v6 + 36);
    do
    {
      uint64_t v9 = *(v8 - 1);
      int v10 = *v8;
      if (v9 != -1 || v10 != 0)
      {
        if ((v9 & 0x80000000) != 0
          || v5[1] <= v9
          || (uint64_t v12 = *v5, v10 != -1) && *(_DWORD *)(v12 + 12 * (int)v9 + 8) != v10
          || (*(unsigned char *)(*(void *)(*(void *)(a1 + 136) + 8 * *(int *)(v12 + 12 * (int)v9) + 32) + 120) & 1) != 0)
        {
          MEMORY[0x1F4188790](v6, v7);
          v19[2] = a1;
          v19[3] = &v20;
          if ((v13 & 0x80000000) == 0 && v5[1] > v13)
          {
            uint64_t v15 = *(unsigned int *)(*v5 + 12 * (int)v13 + 8);
            if (v14 == -1 || v15 == v14)
            {
              double v16 = (unsigned int *)(*v5 + 12 * (int)v13);
              uint64_t v6 = sub_1B63210A4(*(void *)(*(void *)(a1 + 136) + 8 * (int)*v16 + 32), a1, *v16 | ((unint64_t)*((unsigned __int16 *)v16 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v16 + 2) << 32), v15, (void (*)(unsigned char *))sub_1B6916640, (uint64_t)v19);
            }
          }
        }
      }
      v8 += 2;
      --v4;
    }
    while (v4);
    sub_1B62D8C3C((uint64_t)&v21);
  }
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_1B631F330(v17, 0);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B6916440(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!a4) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1B6916460(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B69164DC(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6916620(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!a4) {
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1B6916640(void *a1)
{
  return sub_1B631E8A4(a1);
}

char *sub_1B6916648(char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v6 = a2;
    uint64_t v7 = (uint64_t *)result;
    uint64_t v8 = 0;
    uint64_t v9 = -1;
    uint64_t v10 = -1;
    do
    {
      uint64_t v12 = *v7++;
      uint64_t v11 = v12;
      if (v12 != v9)
      {
        uint64_t v13 = v9 - v10;
        if (v9 > v10)
        {
          if (v9 - v10 < 0) {
            goto LABEL_26;
          }
          int v14 = (char *)(a3 + 88 * v10);
          uint64_t result = (char *)(a4 + 88 * v8);
          if (result != v14 || result >= &v14[88 * v13]) {
            uint64_t result = (char *)memmove(result, v14, 88 * v13);
          }
          v8 += v13;
        }
        uint64_t v10 = v11;
      }
      uint64_t v9 = v11 + 1;
      --v6;
    }
    while (v6);
    BOOL v16 = v9 - v10 < 0;
    BOOL v17 = v9 <= v10;
    uint64_t v18 = v9 - v10;
    if (v17) {
      return result;
    }
    if (v16)
    {
LABEL_26:
      uint64_t result = (char *)sub_1B6E32C88();
      __break(1u);
      return result;
    }
    uint64_t v19 = (char *)(a3 + 88 * v10);
    uint64_t result = (char *)(a4 + 88 * v8);
    if (result != v19 || result >= &v19[88 * v18])
    {
      return (char *)memmove(result, v19, 88 * v18);
    }
  }
  return result;
}

uint64_t sub_1B69167A0()
{
  swift_unownedRelease();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t *sub_1B69167DC()
{
  return sub_1B6A95574(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

double sub_1B6916820(void *a1)
{
  return sub_1B6D28DE0(a1, *(double **)(v1 + 16));
}

unint64_t sub_1B691683C()
{
  unint64_t result = qword_1EB9802C8;
  if (!qword_1EB9802C8)
  {
    sub_1B62D8704(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9802C8);
  }
  return result;
}

uint64_t sub_1B69168B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6916900(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1B636E13C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B691695C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1B636E13C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B69169CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_1B6916A34(void *a1)
{
  return sub_1B6916820(a1);
}

double sub_1B6916A4C@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E4F3A0;
  double result = 0.0078125;
  *(void *)(a1 + 16) = 0x3F80000000000000;
  return result;
}

uint64_t sub_1B6916A68()
{
  return type metadata accessor for ParticleFloat3Init.System();
}

void sub_1B6916A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v6 = *(_OWORD *)(a3 + 104);
  v55[0] = *(_OWORD *)(a3 + 88);
  v55[1] = v6;
  uint64_t v56 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v55, 0x200000000, v40);
  sub_1B62D7910((uint64_t)v40, (uint64_t)v41, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v41[0])
  {
    long long v48 = v41[0];
    long long v49 = v41[1];
    uint64_t v50 = v42;
    uint64_t v36 = v47;
    if (v47 >= 1 && (uint64_t v7 = v44) != 0)
    {
      uint64_t v8 = v46;
      uint64_t v9 = v46[4];
      uint64_t v34 = v45;
      uint64_t v35 = v9;
      int v10 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      unint64_t v29 = v46 + 13;
      char v31 = v46 + 8;
      uint64_t v32 = (uint64_t)(v46 + 6);
      uint64_t v30 = (uint64_t *)(a1 + 8);
      uint64_t v11 = (uint64_t *)(v43 + 24);
      int v33 = v10;
      while (1)
      {
        id v63 = v4;
        uint64_t v12 = *((unsigned int *)v11 - 6);
        uint64_t v13 = *((unsigned int *)v11 - 5);
        uint64_t v14 = *((unsigned int *)v11 - 4);
        uint64_t v15 = *v11;
        uint64_t v16 = v11[2];
        uint64_t v37 = v11[1];
        uint64_t v38 = *(v11 - 1);
        uint64_t v39 = v7;
        if (v10)
        {
          BOOL v17 = *(os_unfair_lock_s **)(v16 + 376);
          swift_retain();
          os_unfair_lock_lock(v17);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v9);
        sub_1B62D7910(v32, (uint64_t)v57, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v18 = v8[4];
        uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v8[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
        v8[7] = v19;
        v31[1] = 0;
        v31[2] = 0;
        *char v31 = 0;
        swift_release();
        v58[0] = v34;
        v58[1] = v16;
        _OWORD v58[2] = v8;
        v58[3] = v14;
        v58[4] = (v13 - v12 + v14);
        v58[5] = v36;
        v58[6] = v12;
        v58[7] = v13;
        v58[8] = 0;
        v58[9] = 0;
        char v59 = 1;
        uint64_t v60 = v38;
        uint64_t v61 = v15;
        uint64_t v62 = v37;
        uint64_t v20 = type metadata accessor for ParticleFloat3Init();
        sub_1B6917980((uint64_t)v58, v30, v20);
        if (v63) {
          break;
        }
        v53[0] = v48;
        v53[1] = v49;
        uint64_t v54 = v50;
        sub_1B6345178(v8, (unsigned __int16 **)v53, (uint64_t)v57);
        uint64_t v4 = 0;
        if (*(void *)(v8[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v16);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v8[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62D2D24(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            *unint64_t v29 = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v8[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            unint64_t v26 = *(char **)(v16 + 232);
            uint64_t v27 = *(char **)(v16 + 256);
            if (v26 == v27)
            {
              int v28 = *(char **)(v16 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              uint64_t v27 = *(char **)(v16 + 232);
              int v28 = *(char **)(v16 + 240);
              if (v28 == v27)
              {
                int v28 = 0;
                uint64_t v27 = 0;
                *(void *)(v16 + 232) = 0;
                *(void *)(v16 + 240) = 0;
              }
            }
            *(void *)(v16 + 248) = v28;
            *(void *)(v16 + 256) = v27;
          }
        }
        uint64_t v9 = v35;
        ecs_stack_allocator_pop_snapshot(v35);
        int v10 = v33;
        if (v33)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
        }
        swift_release();
        v11 += 6;
        uint64_t v7 = v39 - 1;
        if (v39 == 1) {
          goto LABEL_24;
        }
      }

      v51[0] = v48;
      v51[1] = v49;
      uint64_t v52 = v50;
      sub_1B6345178(v8, (unsigned __int16 **)v51, (uint64_t)v57);
      sub_1B634507C((char *)v16);
      ecs_stack_allocator_pop_snapshot(v35);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
      __break(1u);
    }
    else
    {
LABEL_24:
      sub_1B632F170(v40);
    }
  }
}

uint64_t type metadata accessor for ParticleFloat3Init.System()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6916F00()
{
  return sub_1B6E33928();
}

uint64_t sub_1B6916F28()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6916F70(unsigned __int8 a1)
{
  return a1 + 0x65676E615278;
}

uint64_t sub_1B6916F88(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for ParticleFloat3Init.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1B6E33038();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A88();
  uint64_t v13 = *v2;
  char v12 = 0;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  uint64_t v9 = v11;
  sub_1B6E32FA8();
  if (!v9)
  {
    uint64_t v13 = v2[1];
    char v12 = 1;
    sub_1B6E32FA8();
    uint64_t v13 = v2[2];
    char v12 = 2;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B69171B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v16 = a2;
  type metadata accessor for ParticleFloat3Init.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1B6E32EA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v15 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = v5;
  int v10 = v16;
  sub_1B62AA858();
  char v17 = 0;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v11 = v18;
  char v17 = 1;
  sub_1B6E32DF8();
  uint64_t v12 = v18;
  char v17 = 2;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v4);
  uint64_t v13 = v18;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *int v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  return result;
}

uint64_t sub_1B691742C(uint64_t a1)
{
  return sub_1B6917BEC(a1);
}

uint64_t sub_1B6917438(uint64_t a1, uint64_t a2)
{
  return sub_1B691772C(a1, a2, (uint64_t (*)(void, void))sub_1B6917764);
}

uint64_t sub_1B6917450()
{
  swift_getWitnessTable();

  return sub_1B6B37010();
}

uint64_t sub_1B69174BC()
{
  return sub_1B6916F28();
}

uint64_t sub_1B69174C8()
{
  return sub_1B6916F00();
}

uint64_t sub_1B69174D4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B691751C()
{
  return sub_1B6916F70(*v0);
}

uint64_t sub_1B6917528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B69115B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6917558@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B678E1EC();
  *a1 = result;
  return result;
}

uint64_t sub_1B6917584(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B69175D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

double sub_1B691762C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B69171B0(a1, &v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B6917678(void *a1)
{
  return sub_1B6916F88(a1);
}

uint64_t sub_1B6917690()
{
  return sub_1B6916A68();
}

double sub_1B69176B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B691791C(*(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1B69176C4()
{
  return type metadata accessor for ParticleFloat3Init.GPUSystem();
}

uint64_t type metadata accessor for ParticleFloat3Init.GPUSystem()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6917708(uint64_t a1)
{
  return sub_1B6917CD8(a1);
}

uint64_t sub_1B6917714(uint64_t a1, uint64_t a2)
{
  return sub_1B691772C(a1, a2, (uint64_t (*)(void, void))sub_1B6917840);
}

uint64_t sub_1B691772C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*(void *)(a1 + 80), *(void *)(a1 + 88));
}

uint64_t sub_1B691773C()
{
  return sub_1B69176C4();
}

const char *sub_1B6917764()
{
  if (swift_dynamicCastMetatype()) {
    return "SetLinearFactor.CPU";
  }
  if (swift_dynamicCastMetatype()) {
    return "SetAngularFactor.CPU";
  }
  if (swift_dynamicCastMetatype()) {
    return "SetTargetPosition.CPU";
  }
  double result = (const char *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

const char *sub_1B6917840()
{
  if (swift_dynamicCastMetatype()) {
    return "SetLinearFactor.GPU";
  }
  if (swift_dynamicCastMetatype()) {
    return "SetAngularFactor.GPU";
  }
  if (swift_dynamicCastMetatype()) {
    return "SetTargetPosition.GPU";
  }
  double result = (const char *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

double sub_1B691791C(uint64_t a1, uint64_t a2)
{
  sub_1B62D2D24(0, (unint64_t *)&qword_1EB980BA0, (void (*)(uint64_t))sub_1B663C11C);
  uint64_t v4 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  return result;
}

uint64_t sub_1B6917980(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1B682C69C(*(void *)(a3 + 16), *(void *)(a3 + 16), *(void *)(a3 + 24));
  uint64_t result = sub_1B6E325C8();
  float v8 = *v4;
  float v9 = v4[1];
  if (*v4 == v9 && v4[2] == v4[3] && v4[4] == v4[5])
  {
    uint64_t v10 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 56) - v10;
    if (v11)
    {
      *(float *)&long long v12 = *v4;
      *((float *)&v12 + 1) = v4[2];
      *((void *)&v12 + 1) = *((unsigned int *)v4 + 4);
      uint64_t v13 = (_OWORD *)(result + 16 * v10);
      do
      {
        *v13++ = v12;
        --v11;
      }
      while (v11);
    }
  }
  else
  {
    uint64_t v14 = *(void *)(a1 + 48);
    uint64_t v15 = *(void *)(a1 + 56) - v14;
    if (v15)
    {
      uint64_t v16 = a2[2];
      uint64_t v17 = a2[3];
      uint64_t v19 = *a2;
      uint64_t v18 = a2[1];
      float v20 = v9 - v8;
      float v21 = v4[2];
      float v22 = v4[3] - v21;
      float v23 = v4[4];
      float v24 = v4[5] - v23;
      size_t v25 = (_OWORD *)(result + 16 * v14);
      do
      {
        uint64_t v26 = v19 ^ v16;
        uint64_t v27 = v18 ^ v17;
        uint64_t v28 = v26 ^ v18;
        uint64_t v29 = v19 ^ v27;
        float v30 = (float)((9 * ((((unint64_t)(5 * v18) >> 32) >> 25) | (640 * v18))) & 0xFFFFFF);
        uint64_t v31 = v26 ^ (v18 << 17) ^ v29;
        uint64_t v32 = __ROR8__(v27, 19);
        uint64_t v33 = v31 ^ v28;
        uint64_t v34 = v28 ^ v32 ^ v29;
        uint64_t v35 = v31 ^ (v28 << 17) ^ v34;
        uint64_t v36 = __ROR8__(v28 ^ v32, 19);
        uint64_t v18 = v35 ^ v33;
        uint64_t v19 = v33 ^ v36 ^ v34;
        uint64_t v16 = v35 ^ (v33 << 17);
        HIDWORD(v37) = 0;
        *(float *)&long long v37 = v8 + (float)(v20 * (float)(v30 * 0.000000059605));
        *((float *)&v37 + 1) = v21
                             + (float)(v22
                                     * (float)((float)((9
                                                      * ((((unint64_t)(5 * v28) >> 32) >> 25) | (640 * v28))) & 0xFFFFFF)
                                             * 0.000000059605));
        uint64_t v17 = __ROR8__(v33 ^ v36, 19);
        *((float *)&v37 + 2) = v23
                             + (float)(v24
                                     * (float)((float)((9
                                                      * ((((unint64_t)(5 * v33) >> 32) >> 25) | (640 * v33))) & 0xFFFFFF)
                                             * 0.000000059605));
        *v25++ = v37;
        --v15;
      }
      while (v15);
      *a2 = v19;
      a2[1] = v18;
      a2[2] = v16;
      a2[3] = v17;
    }
  }
  return result;
}

uint64_t sub_1B6917B2C()
{
  if (swift_dynamicCastMetatype()) {
    return 28;
  }
  if (swift_dynamicCastMetatype()) {
    return 29;
  }
  if (swift_dynamicCastMetatype()) {
    return 14;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6917BEC(uint64_t a1)
{
  swift_retain();
  uint64_t v2 = type metadata accessor for ParticleFloat3Init();
  sub_1B6A80CC4(v2, (uint64_t)&off_1F0F78E30, (uint64_t)v4);
  sub_1B69ECB90(*(void *)(a1 + 32), sub_1B6917CB4);
  return swift_release();
}

uint64_t type metadata accessor for ParticleFloat3Init()
{
  return sub_1B62C36EC();
}

void sub_1B6917CB4(uint64_t a1)
{
  sub_1B6916A94(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1B6917CD8(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 96);
  long long v27 = *(_OWORD *)(a1 + 80);
  long long v28 = v2;
  long long v3 = *(_OWORD *)(a1 + 128);
  long long v29 = *(_OWORD *)(a1 + 112);
  long long v30 = v3;
  long long v4 = *(_OWORD *)(a1 + 32);
  long long v23 = *(_OWORD *)(a1 + 16);
  long long v24 = v4;
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v25 = *(_OWORD *)(a1 + 48);
  long long v26 = v5;
  uint64_t v6 = type metadata accessor for ParticleFloat3Init();
  sub_1B6A80CC4(v6, (uint64_t)&off_1F0F78E30, (uint64_t)&v20);
  long long v19 = v20;
  uint64_t v7 = v21;
  char v8 = sub_1B6917B2C();
  long long v20 = v19;
  uint64_t v21 = v7;
  int v22 = v8;
  uint64_t v9 = *(void *)a1;
  if (*(void *)a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_float3_generic_uniforms(0);
    sub_1B6B594A8((uint64_t)&v20, 1, ObjectType, v11, v12, v13, v14, v15);
  }
  uint64_t v16 = v23;
  uint64_t v17 = v25;
  swift_retain();
  sub_1B6786A24(a1);
  sub_1B6BFF388(v17, v16, v9 == 0, 0, a1, 0xD00000000000001BLL, 0x80000001B6F3E000, 0);
  sub_1B6786A7C(a1);
  return swift_release();
}

uint64_t type metadata accessor for ParticleFloat3Init.CodingKeys()
{
  return sub_1B62C36EC();
}

unsigned char *sub_1B6917E40(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6917F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1B6917F34()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6917F50()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6917F6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6917F88()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B6917FC8()
{
  int v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 != 1) {
    sub_1B6E33958();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B6918038()
{
  if (*(unsigned char *)(v0 + 4) == 1) {
    return sub_1B6E33928();
  }
  sub_1B6E33928();
  return sub_1B6E33958();
}

uint64_t sub_1B6918088()
{
  int v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 != 1) {
    sub_1B6E33958();
  }
  return sub_1B6E33988();
}

BOOL sub_1B69180F4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 4) == 1) {
    return (*(unsigned char *)(a2 + 4) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 4)) {
    return 0;
  }
  return *(_DWORD *)a1 == *(_DWORD *)a2;
}

uint64_t sub_1B6918130()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 <= 1) {
    sub_1B6E33958();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B69181B0()
{
  if (*(unsigned char *)(v0 + 4) && *(unsigned char *)(v0 + 4) != 1) {
    return sub_1B6E33928();
  }
  sub_1B6E33928();
  return sub_1B6E33958();
}

uint64_t sub_1B691820C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 <= 1) {
    sub_1B6E33958();
  }
  return sub_1B6E33988();
}

BOOL sub_1B6918288(uint64_t a1, int *a2)
{
  int v2 = *a2;
  int v3 = *((unsigned __int8 *)a2 + 4);
  if (!*(unsigned char *)(a1 + 4))
  {
    if (*((unsigned char *)a2 + 4)) {
      return 0;
    }
    return *(_DWORD *)a1 == v2;
  }
  if (*(unsigned char *)(a1 + 4) == 1)
  {
    if (v3 != 1) {
      return 0;
    }
    return *(_DWORD *)a1 == v2;
  }
  return v3 == 2 && v2 == 0;
}

uint64_t sub_1B69182DC()
{
  uint64_t result = 45;
  switch(*v0)
  {
    case 1:
      uint64_t result = 114;
      break;
    case 2:
      uint64_t result = 119;
      break;
    case 3:
      uint64_t result = 30578;
      break;
    case 4:
      uint64_t result = 0x7269646F6E2D7772;
      break;
    case 5:
      uint64_t result = 63;
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1B6918360()
{
  return sub_1B68C6D34(*v0);
}

uint64_t sub_1B6918368(void *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B6643054(a1, a2, a3, *v3);
}

uint64_t sub_1B6918370()
{
  type metadata accessor for QueryBuffer();
  uint64_t result = swift_allocObject();
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  qword_1EB997A18 = result;
  return result;
}

uint64_t sub_1B69183AC()
{
  return type metadata accessor for QueryBuffer();
}

ValueMetadata *type metadata accessor for QueryHeader()
{
  return &type metadata for QueryHeader;
}

uint64_t getEnumTagSinglePayload for QueryScope(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryScope(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6918450(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u) {
    return *(unsigned __int8 *)(a1 + 4);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1B6918468(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryScope()
{
  return &type metadata for QueryScope;
}

ValueMetadata *type metadata accessor for Scope()
{
  return &type metadata for Scope;
}

unint64_t sub_1B69184A4()
{
  unint64_t result = qword_1E9DD2948;
  if (!qword_1E9DD2948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2948);
  }
  return result;
}

unint64_t sub_1B69184FC()
{
  unint64_t result = qword_1E9DD2950;
  if (!qword_1E9DD2950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2950);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccessControl(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B691861CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessControl()
{
  return &type metadata for AccessControl;
}

ValueMetadata *type metadata accessor for QueryHeader.Field()
{
  return &type metadata for QueryHeader.Field;
}

unsigned char *storeEnumTagSinglePayload for DirtyReadPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6918730);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirtyReadPolicy()
{
  return &type metadata for DirtyReadPolicy;
}

ValueMetadata *type metadata accessor for QueryOptions()
{
  return &type metadata for QueryOptions;
}

unint64_t sub_1B691877C()
{
  unint64_t result = qword_1E9DD2958;
  if (!qword_1E9DD2958)
  {
    sub_1B69187D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2958);
  }
  return result;
}

void sub_1B69187D4()
{
  if (!qword_1E9DD2960)
  {
    sub_1B6918830();
    unint64_t v0 = type metadata accessor for OptionSetIterator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2960);
    }
  }
}

unint64_t sub_1B6918830()
{
  unint64_t result = qword_1E9DD2968;
  if (!qword_1E9DD2968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2968);
  }
  return result;
}

unint64_t sub_1B6918888()
{
  unint64_t result = qword_1E9DD2970;
  if (!qword_1E9DD2970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2970);
  }
  return result;
}

unint64_t sub_1B69188E0()
{
  unint64_t result = qword_1E9DD2978;
  if (!qword_1E9DD2978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2978);
  }
  return result;
}

unint64_t sub_1B6918938()
{
  unint64_t result = qword_1EB94A150;
  if (!qword_1EB94A150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB94A150);
  }
  return result;
}

unint64_t sub_1B691898C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B69189BC();
  unint64_t result = sub_1B6918A10();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B69189BC()
{
  unint64_t result = qword_1E9DD2980;
  if (!qword_1E9DD2980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2980);
  }
  return result;
}

unint64_t sub_1B6918A10()
{
  unint64_t result = qword_1E9DD2988;
  if (!qword_1E9DD2988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2988);
  }
  return result;
}

unint64_t sub_1B6918A68()
{
  unint64_t result = qword_1E9DD2990;
  if (!qword_1E9DD2990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2990);
  }
  return result;
}

unint64_t sub_1B6918AC0()
{
  unint64_t result = qword_1E9DD2998;
  if (!qword_1E9DD2998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2998);
  }
  return result;
}

unint64_t sub_1B6918B18()
{
  unint64_t result = qword_1E9DD29A0;
  if (!qword_1E9DD29A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD29A0);
  }
  return result;
}

unint64_t sub_1B6918B70()
{
  unint64_t result = qword_1E9DD29A8;
  if (!qword_1E9DD29A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD29A8);
  }
  return result;
}

BOOL sub_1B6918BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  do
  {
    uint64_t v5 = 0;
    long long v6 = *(_OWORD *)(v4 + 16 * v3);
    long long v7 = *(_OWORD *)(a2 + 32 + 16 * v3);
    while (1)
    {
      long long v12 = v6;
      float v9 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      long long v13 = v7;
      float v10 = *(float *)((unint64_t)&v13 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      BOOL result = v9 == v10;
      if (v5 == 3) {
        break;
      }
      while (1)
      {
        ++v5;
        if (result) {
          break;
        }
        BOOL result = 0;
        if (v5 == 3) {
          return result;
        }
      }
    }
    ++v3;
  }
  while (v9 == v10 && v3 != v2);
  return result;
}

uint64_t sub_1B6918C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    for (uint64_t i = 0; ; i += 40)
    {
      uint64_t v5 = a1 + i;
      uint64_t v6 = a2 + i;
      BOOL v7 = *(void *)(a1 + i + 32) == *(void *)(a2 + i + 32) && *(void *)(a1 + i + 40) == *(void *)(a2 + i + 40);
      if (!v7 || *(void *)(a1 + i + 48) != *(void *)(a2 + i + 48)) {
        break;
      }
      if (*(unsigned char *)(v5 + 64))
      {
        if (!*(unsigned char *)(v6 + 64)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(v5 + 56) == *(void *)(v6 + 56)) {
          char v4 = *(unsigned char *)(v6 + 64);
        }
        else {
          char v4 = 1;
        }
        if (v4) {
          return 0;
        }
      }
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1B6918D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a2 + 64;
    uint64_t v4 = a1 + 64;
    do
    {
      uint64_t v5 = *(void *)(v4 - 32);
      uint64_t v6 = *(void *)(v4 - 24);
      int v7 = *(unsigned __int8 *)(v4 - 16);
      sub_1B62D6998(v4, (uint64_t)v15);
      uint64_t v8 = *(void *)(v3 - 32);
      uint64_t v9 = *(void *)(v3 - 24);
      char v10 = *(unsigned char *)(v3 - 16);
      sub_1B62D6998(v3, (uint64_t)v16);
      if (v7 == 1)
      {
        if ((v10 & 1) == 0) {
          return 0;
        }
        BOOL v11 = v5 == v8 && v6 == v9;
        if (!v11 && (sub_1B6E334B8() & 1) == 0) {
          return 0;
        }
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v5 == v8) {
          char v12 = v10;
        }
        else {
          char v12 = 1;
        }
        if (v12) {
          return 0;
        }
      }
      char v13 = sub_1B6790DC4((uint64_t)v15, (uint64_t)v16);
      sub_1B62D66CC(v5, v6, v7);
      if ((v13 & 1) == 0) {
        return 0;
      }
      v3 += 112;
      v4 += 112;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1B6918E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 48);
    uint64_t v4 = (uint64_t *)(a2 + 48);
    do
    {
      uint64_t v5 = *v3;
      uint64_t v6 = v3[1];
      uint64_t v8 = v3[2];
      uint64_t v7 = v3[3];
      int v9 = *((unsigned __int8 *)v3 + 40);
      uint64_t v11 = *v4;
      uint64_t v10 = v4[1];
      uint64_t v12 = v4[2];
      uint64_t v13 = v4[3];
      char v14 = *((unsigned char *)v4 + 40);
      if (*(v3 - 2) == *(v4 - 2) && *(v3 - 1) == *(v4 - 1))
      {
        if (v5 != v11) {
          return 0;
        }
      }
      else
      {
        char v20 = *((unsigned char *)v4 + 40);
        int v21 = *((unsigned __int8 *)v3 + 40);
        uint64_t v19 = v4[1];
        uint64_t v15 = v3[3];
        char v16 = sub_1B6E334B8();
        uint64_t result = 0;
        if ((v16 & 1) == 0) {
          return result;
        }
        LOBYTE(v7) = v15;
        uint64_t v10 = v19;
        char v14 = v20;
        int v9 = v21;
        if (v5 != v11) {
          return result;
        }
      }
      if (v9)
      {
        uint64_t result = 0;
        if (v6 == v10) {
          char v18 = v14;
        }
        else {
          char v18 = 0;
        }
        if ((v18 & 1) == 0 || v8 != v12 || ((((v7 & 1) == 0) ^ v13) & 1) == 0) {
          return result;
        }
      }
      else
      {
        uint64_t result = 0;
        if ((v14 & 1) != 0 || v6 != v10 || v8 != v12) {
          return result;
        }
      }
      v4 += 8;
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1B6918F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    long long v5 = *(_OWORD *)(a1 + 48);
    v22[0] = *(_OWORD *)(a1 + 32);
    v22[1] = v5;
    long long v6 = *(_OWORD *)(a2 + 32);
    long long v7 = *(_OWORD *)(a2 + 48);
    v22[2] = *(_OWORD *)(a1 + 64);
    v23[0] = v6;
    long long v8 = *(_OWORD *)(a2 + 64);
    v23[1] = v7;
    v23[2] = v8;
    if (sub_1B6985508((uint64_t)v22, (uint64_t)v23))
    {
      uint64_t v9 = v2 - 1;
      if (v2 == 1) {
        return 1;
      }
      uint64_t v11 = (uint64_t *)(a2 + 120);
      for (uint64_t i = (uint64_t *)(a1 + 120); *(i - 5) == *(v11 - 5); i += 6)
      {
        uint64_t v17 = *(i - 2);
        uint64_t v16 = *(i - 1);
        uint64_t v18 = *i;
        uint64_t v20 = *(v11 - 2);
        uint64_t v19 = *(v11 - 1);
        uint64_t v21 = *v11;
        if (*(unsigned char *)(i - 3))
        {
          if (v17 == v20) {
            int v13 = *((unsigned __int8 *)v11 - 24);
          }
          else {
            int v13 = 0;
          }
          if (v13 != 1 || v16 != v19 || v18 != v21) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if ((*(unsigned char *)(v11 - 3) & 1) != 0 || *(i - 4) != *(v11 - 4) || v17 != v20 || v16 != v19 || v18 != v21) {
            return result;
          }
        }
        v11 += 6;
        uint64_t result = 1;
        if (!--v9) {
          return result;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1B69190A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 != 1)
  {
    uint64_t v4 = v2 - 2;
    long long v5 = (unsigned char *)(a2 + 33);
    long long v6 = (unsigned char *)(a1 + 33);
    do
    {
      uint64_t v7 = v4;
      char v8 = *v6 ^ *v5;
      if (v8) {
        break;
      }
      --v4;
      ++v5;
      ++v6;
    }
    while (v7);
    LOBYTE(v2) = v8 ^ 1;
  }
  return v2 & 1;
}

BOOL sub_1B6919134(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  long long v5 = (unsigned __int8 *)(a2 + 33);
  long long v6 = (unsigned __int8 *)(a1 + 33);
  do
  {
    int v8 = *v6++;
    int v7 = v8;
    int v10 = *v5++;
    int v9 = v10;
    BOOL result = v7 == v10;
    BOOL v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

BOOL sub_1B69191A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int16 *)(a1 + 32) != *(unsigned __int16 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  long long v5 = (unsigned __int16 *)(a2 + 34);
  long long v6 = (unsigned __int16 *)(a1 + 34);
  do
  {
    int v8 = *v6++;
    int v7 = v8;
    int v10 = *v5++;
    int v9 = v10;
    BOOL result = v7 == v10;
    BOOL v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

BOOL sub_1B691921C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  long long v5 = (int *)(a2 + 36);
  long long v6 = (int *)(a1 + 36);
  do
  {
    int v8 = *v6++;
    int v7 = v8;
    int v10 = *v5++;
    int v9 = v10;
    BOOL result = v7 == v10;
    BOOL v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

BOOL sub_1B6919290(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  long long v5 = a2 + 5;
  long long v6 = a1 + 5;
  do
  {
    uint64_t v8 = *v6++;
    uint64_t v7 = v8;
    uint64_t v10 = *v5++;
    uint64_t v9 = v10;
    BOOL result = v7 == v10;
    BOOL v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

uint64_t sub_1B6919304(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2 = a1[2];
  if (*(void *)&v2 != *(void *)&a2[2]) {
    return 0;
  }
  if (!*(void *)&v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1 + 4;
  uint64_t v4 = a2 + 4;
  uint64_t v5 = *(void *)&v2 - 1;
  do
  {
    float32x2_t v6 = *v3++;
    float32x2_t v7 = v6;
    float32x2_t v8 = *v4++;
    int32x2_t v9 = vceq_f32(v7, v8);
    BOOL v11 = v5-- != 0;
  }
  while ((v9.i8[0] & v9.i8[4] & 1) != 0 && v11);
  return v9.i8[0] & v9.i8[4] & 1;
}

BOOL sub_1B6919370(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  do
  {
    uint64_t v5 = 0;
    long long v6 = *(_OWORD *)(v4 + 16 * v3);
    long long v7 = *(_OWORD *)(a2 + 32 + 16 * v3);
    while (1)
    {
      long long v12 = v6;
      float v9 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      long long v13 = v7;
      float v10 = *(float *)((unint64_t)&v13 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      BOOL result = v9 == v10;
      if (v5 == 2) {
        break;
      }
      while (1)
      {
        ++v5;
        if (result) {
          break;
        }
        BOOL result = 0;
        if (v5 == 2) {
          return result;
        }
      }
    }
    ++v3;
  }
  while (v9 == v10 && v3 != v2);
  return result;
}

uint64_t sub_1B6919430(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1B6E334B8(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    float v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1B6E334B8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B69194F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E30F48();
  MEMORY[0x1F4188790](v4, v5);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v6, v7);
  long long v12 = (char *)&v30 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 == *(void *)(a2 + 16))
  {
    if (!v13 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v15 = v8 + 16;
      uint64_t v33 = v9;
      uint64_t v34 = v16;
      uint64_t v17 = *(void *)(v15 + 56);
      uint64_t v35 = v15;
      uint64_t v31 = v17;
      uint64_t v32 = (void (**)(char *, uint64_t))(v15 - 8);
      uint64_t v18 = v13 - 1;
      uint64_t v19 = v9;
      do
      {
        uint64_t v20 = a1;
        uint64_t v21 = v12;
        int v22 = v12;
        long long v23 = v34;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v34)(v21, a1 + v14, v4, v10);
        uint64_t v24 = a2;
        v23(v19, a2 + v14, v4);
        long long v12 = v22;
        sub_1B691F508();
        char v25 = sub_1B6E31708();
        long long v26 = *v32;
        (*v32)(v19, v4);
        v26(v22, v4);
        BOOL v28 = v18-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v14 += v31;
        a2 = v24;
        a1 = v20;
      }
      while (v28);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_1B69196E0(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2 = a1[2];
  if (*(void *)&v2 != *(void *)&a2[2]) {
    return 0;
  }
  if (!*(void *)&v2 || a1 == a2) {
    return 1;
  }
  if ((sub_1B6CD9B20(a1[6].u8[0] | (unsigned __int16)(a1[6].u8[1] << 8), a2[6].u8[0] | (a2[6].u8[1] << 8), a1[4], a1[5], a2[4], a2[5]) & 1) == 0)return 0; {
  uint64_t v5 = *(void *)&v2 - 1;
  }
  if (*(void *)&v2 == 1) {
    return 1;
  }
  uint64_t v7 = (float32x2_t *)((char *)a2 + 73);
  uint64_t v8 = (float32x2_t *)((char *)a1 + 73);
  do
  {
    uint64_t result = 0;
    if ((vceq_f32(*(float32x2_t *)((char *)v8 - 17), *(float32x2_t *)((char *)v7 - 17)).u32[0] & 1) == 0) {
      break;
    }
    v9.i32[0] = (__int32)*(float32x2_t *)((char *)&v8[-2] + 7);
    v9.i32[1] = HIDWORD(*(unint64_t *)((char *)&v8[-3] + 7));
    v10.i32[0] = (__int32)*(float32x2_t *)((char *)&v7[-2] + 7);
    v10.i32[1] = HIDWORD(*(unint64_t *)((char *)&v7[-3] + 7));
    int32x2_t v11 = vceq_f32(v9, v10);
    if ((v11.i8[4] & 1) == 0) {
      break;
    }
    if ((v11.i8[0] & 1) == 0) {
      break;
    }
    uint64_t result = 0;
    if ((vceq_f32(*(v8 - 9), *(v7 - 9)).i32[1] & 1) == 0) {
      break;
    }
    if ((v8[-1].u8[7] ^ v7[-1].u8[7])) {
      break;
    }
    if (v8->u8[0] != v7->u8[0]) {
      break;
    }
    v7 += 3;
    v8 += 3;
    uint64_t result = 1;
    --v5;
  }
  while (v5);
  return result;
}

uint64_t sub_1B69197F8(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2 = a1[2];
  if (*(void *)&v2 != *(void *)&a2[2]) {
    return 0;
  }
  if (!*(void *)&v2 || a1 == a2) {
    goto LABEL_10;
  }
  if (a1[4].i32[0] != a2[4].i32[0] || a1[4].i32[1] != a2[4].i32[1]) {
    return 0;
  }
  if (*(void *)&v2 == 1)
  {
LABEL_10:
    char v5 = 1;
  }
  else
  {
    uint64_t v6 = *(void *)&v2 - 2;
    uint64_t v7 = a2 + 5;
    uint64_t v8 = a1 + 5;
    do
    {
      int32x2_t v9 = *v8++;
      int32x2_t v10 = v9;
      int32x2_t v11 = *v7++;
      int32x2_t v12 = vceq_s32(v10, v11);
      char v5 = v12.i8[0] & v12.i8[4];
      BOOL v13 = v6-- != 0;
    }
    while (v13 && (v12.i8[0] & v12.i8[4] & 1) != 0);
  }
  return v5 & 1;
}

uint64_t sub_1B6919878(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    uint64_t v4 = a2 + 80;
    while (1)
    {
      uint64_t v6 = v3[1];
      unint64_t v18 = v3[2];
      uint64_t v8 = *(void *)(v4 - 32);
      unint64_t v7 = *(void *)(v4 - 24);
      uint64_t v17 = v4;
      if ((*(v3 - 1) != *(void *)(v4 - 48) || *v3 != *(void *)(v4 - 40)) && (sub_1B6E334B8() & 1) == 0) {
        break;
      }
      uint64_t v15 = v3;
      swift_bridgeObjectRetain();
      uint64_t v16 = v6;
      sub_1B629C9E8(v6, v18);
      swift_bridgeObjectRetain();
      uint64_t v9 = v8;
      sub_1B629C9E8(v8, v7);
      uint64_t v10 = sub_1B6A3D8B8();
      uint64_t v12 = v11;
      if (v10 == sub_1B6A3D8B8() && v12 == v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_1B629DCAC(v9, v7);
        swift_bridgeObjectRelease();
        sub_1B629DCAC(v16, v18);
      }
      else
      {
        char v5 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B629DCAC(v9, v7);
        swift_bridgeObjectRelease();
        sub_1B629DCAC(v16, v18);
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v4 = v17 + 56;
      uint64_t v3 = v15 + 7;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1B6919AC8()
{
  return (*(unsigned __int16 *)(v0 + 74) >> 6) & 1;
}

uint64_t sub_1B6919AD4(uint64_t a1, unint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6 = a5;
  uint64_t v7 = a4;
  unint64_t v9 = a1;
  ++*(void *)(a4 + 472);
  if (a6) {
    sub_1B691B32C(a1, a2 | ((HIDWORD(a2) & 1) << 32), a4, a5);
  }
  uint64_t v45 = *(void *)(*(void *)a3 + 16);
  if (v45)
  {
    unint64_t v41 = v9;
    uint64_t v42 = a3;
    uint64_t v43 = v7;
    uint64_t v10 = (void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v44 = *(void *)a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v47 = v6;
    while (1)
    {
      uint64_t v13 = (int *)(v44 + 8 * v11);
      uint64_t v14 = v13[1];
      uint64_t v15 = *v13;
      BOOL v16 = v15 == -1 && v14 == 0;
      char v17 = v16;
      uint64_t v18 = v12;
      if (v16) {
        goto LABEL_22;
      }
      if ((v15 & 0x80000000) == 0)
      {
        uint64_t v18 = v12;
        if (v10[1] > v15)
        {
          BOOL v19 = v14 == -1 || *(_DWORD *)(*v10 + 12 * (int)v15 + 8) == v14;
          uint64_t v18 = v12;
          if (v19)
          {
            if ((*(unsigned char *)(*(void *)(*(void *)(v6 + 136) + 8 * *(int *)(*v10 + 12 * (int)v15) + 32) + 120) & 1) == 0) {
              goto LABEL_5;
            }
            uint64_t v18 = swift_retain();
          }
        }
LABEL_22:
        uint64_t v20 = *(void *)(v18 + 16);
        if (v20) {
          break;
        }
        goto LABEL_45;
      }
      uint64_t v18 = v12;
      uint64_t v20 = *(void *)(v12 + 16);
      if (v20) {
        break;
      }
LABEL_45:
      swift_bridgeObjectRelease();
LABEL_5:
      if (++v11 == v45)
      {
        swift_bridgeObjectRelease();
        a3 = v42;
        uint64_t v7 = v43;
        unint64_t v9 = v41;
        goto LABEL_47;
      }
    }
    uint64_t v46 = v11;
    uint64_t v21 = 0;
    uint64_t v48 = v18 + 32;
    while (1)
    {
      if ((v17 & 1) == 0
        && (v15 & 0x80000000) == 0
        && v10[1] > v15
        && ((uint64_t v22 = *v10 + 12 * (int)v15, v23 = *(__int16 *)(v22 + 4), v14 == -1)
         || *(_DWORD *)(v22 + 8) == v14)
        && (uint64_t v24 = *(void *)(*(void *)(v6 + 136) + 8 * *(int *)(*v10 + 12 * (int)v15) + 32),
            uint64_t v25 = *(void *)(v24 + 48),
            (uint64_t v26 = *(void *)(v25 + 16)) != 0))
      {
        uint64_t v27 = *(void *)(v48 + 16 * v21);
        uint64_t v28 = v25 + 56;
        while (*(void *)(v28 - 24) != *(void *)(v48 + 16 * v21))
        {
          v28 += 40;
          if (!--v26) {
            goto LABEL_25;
          }
        }
        uint64_t v31 = v28 - 8;
        uint64_t v30 = *(void *)(v28 - 8);
        uint64_t v29 = *(void *)(v31 + 8);
        if (v30 <= 1) {
          uint64_t v30 = 1;
        }
        uint64_t v32 = *(void *)(v24 + 128) + v29 + v30 * v23;
        long long v53 = *(_OWORD *)(v48 + 16 * v21);
        uint64_t v33 = sub_1B62C12C4(v52);
        sub_1B62C5E18(v32, v27, (uint64_t)v33);
        sub_1B62C5560(0, (unint64_t *)&qword_1EB97EAE0);
        sub_1B62C5560(0, &qword_1EB97F948);
        if (swift_dynamicCast())
        {
          uint64_t v6 = v47;
          if (*((void *)&v50 + 1))
          {
            sub_1B62C15C4(&v49, (uint64_t)v52);
            uint64_t v34 = *((void *)&v53 + 1);
            uint64_t v35 = v53;
            sub_1B62C14BC(v52, v53);
            uint64_t v36 = v35;
            uint64_t v6 = v47;
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v34 + 16))(v15 | (unint64_t)(v14 << 32), v47, v36, v34);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v52);
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v51 = 0;
          long long v49 = 0u;
          long long v50 = 0u;
          uint64_t v6 = v47;
        }
      }
      else
      {
LABEL_25:
        long long v49 = 0u;
        long long v50 = 0u;
        uint64_t v51 = 0;
      }
      sub_1B62E2D70((uint64_t)&v49, &qword_1EB97F950, &qword_1EB97F948, (uint64_t)&protocol descriptor for ParticleComponentSpawner);
LABEL_27:
      if (++v21 == v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = v46;
        uint64_t v12 = MEMORY[0x1E4FBC860];
        goto LABEL_5;
      }
    }
  }
LABEL_47:
  *(_DWORD *)(v7 + 96) = 0;
  *(void *)(v7 + 104) = 0;
  *(_WORD *)(v7 + 129) = 1;
  *(unsigned char *)(v7 + 49) = a3[56];
  *(void *)(v7 + 144) = 0;
  *(void *)(v7 + 152) = 0;
  *(void *)(v7 + 136) = 0;
  *(unsigned char *)(v7 + 160) = 1;
  *(void *)(v7 + 488) = 0;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = *(void *)(v7 + 496);
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B68E96D8(0, *(void *)(v38 + 16));
  }
  else
  {
    *(void *)(v7 + 496) = sub_1B6308DE4(0, *(void *)(v38 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1B62CACC8(v9);
  if ((result & 0xFF00000000) == 0x200000000) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = result;
  }
  *(void *)(v7 + 8) = v40 + 0x76E15D3EFEFDCBBFLL;
  *(void *)(v7 + 16) = 0xC5004E441C522FB3 * v40 - 0x3AFFB1BBE3ADD04DLL;
  *(void *)(v7 + 24) = 0x77710069854EE241 - v40;
  *(void *)(v7 + 32) = 0x39109BB02ACBE635 * v40;
  *(void *)(v7 + 40) = v40;
  *(unsigned char *)(v7 + 48) = 0;
  *(unsigned char *)(v7 + 272) = a3[45];
  *(_DWORD *)(v7 + 456) = v40;
  return result;
}

uint64_t sub_1B6919F58(Swift::Int a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v8 = *v3;
  uint64_t v9 = qword_1EB97DBA0;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EB997A00;
  uint64_t result = swift_release();
  if (v8 != v10)
  {
    if (*(unsigned char *)(v4 + 128) == 1) {
      uint64_t v12 = 4000000;
    }
    else {
      uint64_t v12 = *(void *)(v4 + 120);
    }
    uint64_t v13 = *(void *)a3;
    char v14 = *(unsigned char *)(v4 + 272);
    swift_retain();
    if (v14)
    {
      uint64_t v15 = v12 - *(void *)(v4 + 464);
      if (v15 >= a1)
      {
        if (a1 <= 0) {
          goto LABEL_24;
        }
      }
      else
      {
        a1 = v12 - *(void *)(v4 + 464);
        if (v15 <= 0) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      uint64_t v16 = sub_1B68E6474(*(_DWORD *)(v8 + 204));
      if (v12 - v16 >= a1)
      {
        if (a1 <= 0)
        {
LABEL_24:
          return swift_release();
        }
      }
      else
      {
        a1 = v12 - v16;
        if (v12 - v16 <= 0) {
          goto LABEL_24;
        }
      }
      unint64_t v17 = *(void *)(a3 + 8);
      swift_retain();
      uint64_t v18 = sub_1B62F69F0(v17);
      if ((v19 & 1) == 0)
      {
        uint64_t v20 = v18;
        swift_retain();
        uint64_t v36 = &type metadata for ParticleClassSpawnID;
        long long v37 = &off_1F0F80B40;
        uint64_t v31 = v20;
        uint64_t v30 = 0;
        long long v28 = 0u;
        long long v29 = 0u;
        uint64_t v21 = *(void *)(*(void *)(v13 + 80)
                        + 8
                        * (int)sub_1B637F628(*(_DWORD *)(v8 + 204), 0, 0, 0, 0, (uint64_t)&v31, (uint64_t)&v28)
                        + 32);
        swift_retain();
        swift_release_n();
        sub_1B62E2D70((uint64_t)&v28, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
        sub_1B62E2D70((uint64_t)&v31, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
        uint64_t v8 = v21;
      }
      uint64_t v22 = *(void *)(*(void *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                      + 8 * *(void *)thread_worker_index()
                      + 8);
      uint64_t v23 = *(unsigned int *)(a3 + 40);
      LOBYTE(v31) = *(unsigned char *)(a3 + 44);
      sub_1B6B22AD4(v8, v23 | ((unint64_t)v31 << 32), a1, v22);
      swift_release();
    }
    a2[10] = a1;
    uint64_t v24 = *(void *)(v4 + 112);
    a2[11] = v24;
    a2[12] = v24 + a1;
    *(void *)(v4 + 104) += a1;
    *(void *)(v4 + 112) = v24 + a1;
    a2[9] += a1;
    uint64_t v25 = *(void *)(a3 + 8);
    sub_1B62D2EA4(v25, (uint64_t)&v28);
    if ((*((void *)&v28 + 1) & 0xFF00000000) != 0x200000000)
    {
      uint64_t v31 = v28;
      int v32 = DWORD2(v28);
      uint64x2_t v26 = (uint64x2_t)vdupq_n_s64(*((unint64_t *)&v28 + 1));
      int16x8_t v27 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v26, (uint64x2_t)xmmword_1B6E89CE0), (int32x4_t)vshlq_u64(v26, (uint64x2_t)xmmword_1B6E89CF0));
      *(int8x8_t *)v27.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v27), (int8x8_t)0x1000100010001);
      unsigned __int32 v33 = vmovn_s16(v27).u32[0];
      int v34 = v29;
      char v35 = BYTE4(v29);
      sub_1B62F6B80(a3);
      sub_1B6BFFE68(v25, v13, a1, (uint64_t)a2, v4, (uint64_t)&v31, a3);
      sub_1B62F648C(a3);
    }
    return swift_release();
  }
  return result;
}

BOOL sub_1B691A2B8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1B691A2D0(char *a1, char *a2)
{
  return sub_1B6BB9BDC(*a1, *a2);
}

uint64_t sub_1B691A2DC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B691A360()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B691A3D0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B691A450@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B691A4B0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65756C6176;
  if (*v1) {
    uint64_t v2 = 0x7A696D6F646E6172;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000065;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B691A4F0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B691A554(uint64_t a1)
{
  unint64_t v2 = sub_1B62975FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B691A590(uint64_t a1)
{
  unint64_t v2 = sub_1B62975FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B691A5CC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2) {
    return (*(unsigned __int8 *)(a2 + 4) ^ *(unsigned __int8 *)(a1 + 4) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

void sub_1B691A5FC(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
}

uint64_t sub_1B691A608(void *a1)
{
  sub_1B6297594(0, &qword_1E9DD29B0, (uint64_t (*)(void))sub_1B62975FC, (uint64_t)&type metadata for Seed.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62975FC();
  sub_1B6E33A88();
  char v12 = 0;
  sub_1B6E33018();
  if (!v1)
  {
    char v11 = 1;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B691A79C(void *a1)
{
  return sub_1B691A608(a1);
}

void sub_1B691A7CC(void *a1@<X8>)
{
  *a1 = &unk_1F0F765A0;
}

uint64_t sub_1B691A7DC()
{
  return sub_1B6E31B28();
}

unint64_t sub_1B691A82C()
{
  return 0xD000000000000024;
}

uint64_t sub_1B691A848(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B691DD0C(v5, a1, a2);
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  uint64_t *v2 = v6;
  swift_unknownObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B691DD0C(v7, a1, a2);
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  v2[1] = v8;
  swift_unknownObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B691DD0C(v9, a1, a2);
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  v2[2] = v10;
  swift_unknownObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1B691DD0C(v11, a1, a2);
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_unknownObjectRelease();
  v2[3] = v12;
  return result;
}

BOOL sub_1B691A9E0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  int v8 = *(_DWORD *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  int v10 = *(_DWORD *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1B691DB10((uint64_t)v7, (uint64_t)v9);
}

BOOL sub_1B691AA4C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  int v8 = *(_DWORD *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  int v10 = *(_DWORD *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return !sub_1B691DB10((uint64_t)v7, (uint64_t)v9);
}

double sub_1B691AAC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v1;
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(_DWORD *)(a1 + 41) = 256;
  *(unsigned char *)(a1 + 45) = 0;
  double result = 0.0078125;
  *(void *)(a1 + 48) = 0x3F80000000000000;
  *(_WORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 58) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 74) = 0x10000;
  *(_DWORD *)(a1 + 80) = 1036831949;
  return result;
}

uint64_t sub_1B691AB1C(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1B62C4404(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B62C4404(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B691ABA8()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B62C4404(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B691AC0C()
{
  sub_1B62C4404(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B691AC60()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B62C4404(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B691ACC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B691DE10();
  *a1 = result;
  return result;
}

uint64_t sub_1B691ACF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B62C4404(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B691AD1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B691DE10();
  *a1 = result;
  return result;
}

void sub_1B691AD44(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_1B691AD50(uint64_t a1)
{
  unint64_t v2 = sub_1B62A9A88();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B691AD8C(uint64_t a1)
{
  unint64_t v2 = sub_1B62A9A88();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B691ADC8(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6297594(0, (unint64_t *)&unk_1E9DD29E0, (uint64_t (*)(void))sub_1B62A9A88, (uint64_t)&type metadata for EmitterDescription.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  int v10 = (char *)v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A9A88();
  sub_1B6E33A88();
  v13[0] = *(void *)v3;
  char v15 = 0;
  sub_1B6317658(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
  sub_1B62E1EA8((unint64_t *)&unk_1E9DD8570, (void (*)(void))sub_1B6657A10);
  sub_1B6E32FA8();
  if (!v2)
  {
    v13[0] = *(void *)(v3 + 8);
    char v15 = 1;
    sub_1B6E32FA8();
    v13[0] = *(void *)(v3 + 16);
    char v15 = 2;
    sub_1B6E32FA8();
    v13[0] = *(void *)(v3 + 24);
    char v15 = 3;
    sub_1B6E32FA8();
    uint64_t v11 = MEMORY[0x1E4FBB550];
    sub_1B63175D8(v3 + 32, (uint64_t)v14, &qword_1EB9803E0, MEMORY[0x1E4FBB550]);
    sub_1B63175D8((uint64_t)v14, (uint64_t)v13, &qword_1EB9803E0, v11);
    char v15 = 4;
    sub_1B6317658(0, &qword_1EB9803E0, v11, MEMORY[0x1E4FBB718]);
    sub_1B62A98A8(&qword_1E9DD8820);
    sub_1B6E32FA8();
    LOBYTE(v13[0]) = 5;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 6;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 7;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = *(unsigned char *)(v3 + 76);
    char v15 = 8;
    sub_1B691F4B4();
    sub_1B6E32FA8();
    LOBYTE(v13[0]) = 9;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 10;
    sub_1B6E32F78();
    LOBYTE(v13[0]) = 11;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 12;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 13;
    sub_1B6E32F78();
    LOBYTE(v13[0]) = 14;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 15;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B691B2E0(void *a1)
{
  return sub_1B691ADC8(a1);
}

double sub_1B691B32C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a2;
  sub_1B62F6BF0(a1, a2 | ((HIDWORD(a2) & 1) << 32), (uint64_t)&v12);
  swift_release();
  long long v8 = v13;
  *(_OWORD *)(a3 + 56) = v12;
  *(_OWORD *)(a3 + 72) = v8;
  *(void *)(a3 + 88) = v14;
  if ((a2 & 0x100000000) != 0) {
    uint64_t v9 = 0x200000000;
  }
  else {
    uint64_t v9 = v7;
  }
  sub_1B62C9DA8(a4, (uint64_t)&v12, v9, v15);
  sub_1B63175D8((uint64_t)v15, (uint64_t)v16, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v16[0])
  {
    v16[8] = v16[2];
    v16[9] = v16[3];
    v16[10] = v16[4];
    v16[11] = v16[5];
    v16[6] = v16[0];
    v16[7] = v16[1];
    sub_1B6365460(0);
    sub_1B632F170(v15);
  }
  uint64_t v17 = v12;
  int v18 = DWORD2(v12);
  char v19 = BYTE12(v12);
  uint64_t v20 = v13 | 0x10;
  char v21 = BYTE8(v13);
  uint64_t v22 = v14;
  swift_retain();
  sub_1B68E78D4(&v17);
  sub_1B62CA064((uint64_t)&v12);
  if (*(void *)(*(void *)(a3 + 176) + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *(void *)(a3 + 176);
    *(void *)(a3 + 176) = 0x8000000000000000;
    sub_1B631773C();
    sub_1B6E32B78();
    *(void *)(a3 + 176) = v11;
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  *(void *)(a3 + 192) = 0;
  *(void *)(a3 + 200) = 0;
  *(void *)(a3 + 208) = 0;
  swift_release();
  *(void *)(a3 + 264) = 0;
  swift_unknownObjectRelease();
  *(void *)(a3 + 400) = 0;
  *(void *)(a3 + 408) = 0;
  *(void *)(a3 + 416) = 0;
  swift_unknownObjectRelease();
  *(void *)(a3 + 464) = 0;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  swift_unknownObjectRelease();
  *(_OWORD *)(a3 + 280) = 0u;
  *(_OWORD *)(a3 + 296) = 0u;
  swift_unknownObjectRelease();
  *(void *)(a3 + 392) = 0;
  double result = 0.0;
  *(_OWORD *)(a3 + 360) = 0u;
  *(_OWORD *)(a3 + 376) = 0u;
  return result;
}

uint64_t sub_1B691B528(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, long long *a8)
{
  long long v8 = a8[5];
  long long v53 = a8[4];
  long long v54 = v8;
  long long v9 = a8[7];
  long long v55 = a8[6];
  long long v56 = v9;
  long long v10 = a8[1];
  long long v49 = *a8;
  long long v50 = v10;
  long long v11 = a8[3];
  long long v51 = a8[2];
  long long v52 = v11;
  if (a5)
  {
    if (a4)
    {
      if (a4 == 3)
      {
        uint64_t v16 = result;
        swift_retain();
        if (sub_1B6BFA098(a6, v16, a7))
        {
          uint64_t ObjectType = swift_getObjectType();
          double result = swift_conformsToProtocol2();
          if (result)
          {
            uint64_t v18 = result;
            uint64_t v19 = *(void *)(result + 8);
            uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
            swift_unknownObjectRetain();
            v20(ObjectType, v19);
            sub_1B6E328F8();
            char v21 = (void *)sub_1B6802298(0x657475706D6F43, 0xE700000000000000, 0);
            uint64_t v22 = (void *)sub_1B6E31768();
            objc_msgSend(v21, sel_pushDebugGroup_, v22);

            *(void *)&long long v31 = v21;
            *((void *)&v31 + 1) = a5;
            long long v36 = v53;
            long long v37 = v54;
            long long v38 = v55;
            long long v39 = v56;
            long long v32 = v49;
            long long v33 = v50;
            long long v34 = v51;
            long long v35 = v52;
            long long v47 = v55;
            long long v48 = v56;
            long long v45 = v53;
            long long v46 = v54;
            long long v43 = v51;
            long long v44 = v52;
            long long v41 = v49;
            long long v42 = v50;
            long long v40 = v31;
            uint64_t v23 = *(void (**)(long long *, uint64_t, uint64_t))(v18 + 16);
            swift_retain();
            sub_1B62F6B80((uint64_t)a8);
            swift_unknownObjectRetain();
            v23(&v40, ObjectType, v18);
            sub_1B6786A7C((uint64_t)&v31);
            objc_msgSend(v21, sel_popDebugGroup);
            swift_bridgeObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
            return swift_unknownObjectRelease();
          }
          goto LABEL_14;
        }
        return swift_release();
      }
    }
    else
    {
      uint64_t v24 = swift_getObjectType();
      double result = swift_conformsToProtocol2();
      if (!result)
      {
        __break(1u);
LABEL_14:
        __break(1u);
        return result;
      }
      uint64_t v25 = result;
      *(void *)&long long v31 = 0;
      *((void *)&v31 + 1) = a5;
      long long v26 = a8[5];
      long long v36 = a8[4];
      long long v37 = v26;
      long long v27 = a8[7];
      long long v38 = a8[6];
      long long v39 = v27;
      long long v28 = a8[1];
      long long v32 = *a8;
      long long v33 = v28;
      long long v29 = a8[3];
      long long v34 = a8[2];
      long long v35 = v29;
      long long v42 = v28;
      long long v43 = v34;
      long long v40 = v31;
      long long v41 = v32;
      long long v47 = v38;
      long long v48 = v27;
      long long v45 = v36;
      long long v46 = v26;
      long long v44 = v29;
      uint64_t v30 = *(void (**)(long long *, uint64_t, uint64_t))(result + 16);
      swift_retain_n();
      swift_unknownObjectRetain();
      sub_1B62F6B80((uint64_t)a8);
      v30(&v40, v24, v25);
      swift_unknownObjectRelease();
      swift_release();
      return sub_1B6786A7C((uint64_t)&v31);
    }
  }
  return result;
}

unint64_t sub_1B691B85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v8 = a3 + 32;
  while (1)
  {
    long long v9 = (unsigned int *)(v8 + 8 * v6);
    unsigned int v10 = *v9;
    uint64_t v11 = v9[1];
    BOOL v12 = v10 == -1 && v11 == 0;
    if (!v12 && (v10 & 0x80000000) == 0 && v7[1] > (int)v10)
    {
      uint64_t v13 = *v7;
      if ((v11 == -1 || *(_DWORD *)(*v7 + 12 * (int)v10 + 8) == v11)
        && (*(unsigned char *)(*(void *)(*(void *)(a4 + 136) + 8 * *(int *)(v13 + 12 * (int)v10) + 32) + 120) & 1) != 0)
      {
        uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(a4 + 80)
                                                + 8 * *(__int16 *)(v13 + 12 * (int)v10 + 6)
                                                + 32)
                                    + 16)
                        + 32);
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16) {
          break;
        }
      }
    }
LABEL_4:
    if (++v6 == v4) {
      return 0;
    }
  }
  uint64_t v17 = 0;
  char v18 = 0;
  uint64_t v19 = v15 + 32;
  while (2)
  {
    uint64_t v20 = (void *)(v19 + 16 * v17);
    while (1)
    {
      uint64_t v21 = v17 + 1;
      if (*v20 == a1) {
        break;
      }
      v20 += 2;
      ++v17;
      if (v16 == v21)
      {
        if ((v18 & 1) == 0) {
          goto LABEL_4;
        }
        return v10 | ((unint64_t)v11 << 32);
      }
    }
    char v18 = 1;
    BOOL v12 = v16 - 1 == v17++;
    if (!v12) {
      continue;
    }
    return v10 | (unint64_t)(v11 << 32);
  }
}

uint64_t *sub_1B691BA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = 0;
  int v6 = *(_DWORD *)(v2 + 144);
  char v7 = *(unsigned char *)(v2 + 148);
  char v8 = *(unsigned char *)(v2 + 160);
  uint64_t v9 = *(void *)(v2 + 168);
  uint64_t v10 = *(void *)(v2 + 152) | 1;
  uint64_t v199 = *(void *)(v2 + 136);
  int v200 = v6;
  char v201 = v7;
  uint64_t v202 = v10;
  char v203 = v8;
  uint64_t v204 = v9;
  uint64_t v11 = a2 & 0xFFFFFFFFFFLL;
  swift_retain();
  sub_1B62C9DA8(a1, (uint64_t)&v199, v11, v169);
  sub_1B63175D8((uint64_t)v169, (uint64_t)v181, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v181[0])
  {
    swift_release();
    goto LABEL_24;
  }
  uint64_t v149 = v11;
  long long v188 = v181[0];
  long long v189 = v181[1];
  uint64_t v155 = v183;
  uint64_t v190 = v182;
  uint64_t v12 = v184;
  uint64_t v167 = v185;
  v163 = v186;
  uint64_t v13 = v187;
  swift_release();
  if (v13 <= 0 || !v12)
  {
    sub_1B632F170(v169);
    goto LABEL_23;
  }
  uint64_t v147 = v3;
  uint64_t v148 = a1;
  uint64_t v161 = v163[4];
  int v159 = *(unsigned __int8 *)(v167 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = 0;
  uint64_t v153 = v12;
  do
  {
    uint64_t v165 = v5;
    uint64_t v157 = v14;
    uint64_t v15 = (unsigned int *)(v155 + 48 * v14);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v19 = (uint64_t *)*((void *)v15 + 2);
    uint64_t v18 = *((void *)v15 + 3);
    uint64_t v20 = *((void *)v15 + 4);
    uint64_t v21 = *((void *)v15 + 5);
    if (v159)
    {
      uint64_t v22 = *(os_unfair_lock_s **)(v21 + 376);
      swift_retain();
      os_unfair_lock_lock(v22);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v161);
    sub_1B63175D8((uint64_t)(v163 + 6), (uint64_t)v198, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v23 = v163[4];
    uint64_t v24 = *(void *)(*(void *)(*(void *)(*(void *)(v21 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v163[6] = ecs_stack_allocator_allocate(v23, 48 * v24, 8);
    v163[7] = v24;
    v163[9] = 0;
    v163[10] = 0;
    v163[8] = 0;
    swift_release();
    uint64_t v25 = (unsigned char *)sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v19, v18, v20, (uint64_t)v163);
    uint64_t v26 = sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v19, v18, v20, (uint64_t)v163);
    uint64_t v27 = v26;
    if (v19)
    {
      if (v20)
      {
        while (1)
        {
          uint64_t v29 = *v19++;
          uint64_t v28 = v29;
          uint64_t v30 = swift_retain();
          if (*(unsigned char *)(v21 + 184)) {
            break;
          }
          uint64_t v31 = *(unsigned int *)(*(void *)(v21 + 168) + 4 * v28);
          uint64_t v32 = *(unsigned int *)(*(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v31 + 8);
          swift_release();
          uint64_t v33 = *(unsigned int *)(v21 + 28);
          unsigned __int8 v34 = *(unsigned char *)(v21 + 32);
          swift_retain();
          LOBYTE(v171[0]) = v34;
          sub_1B6919AD4(v31 | (v32 << 32), v33 | ((unint64_t)v34 << 32), v25, v27, v167, 1);
          swift_release();
          v27 += 656;
          v25 += 88;
          if (!--v20) {
            goto LABEL_18;
          }
        }
LABEL_182:
        sub_1B6E32BE8();
        __break(1u);
LABEL_183:
        double result = (uint64_t *)sub_1B6E32C88();
        __break(1u);
        return result;
      }
    }
    else if (v17 != v16)
    {
      uint64_t v35 = v26 + 656 * v17;
      long long v36 = &v25[88 * v17];
      do
      {
        uint64_t v37 = swift_retain();
        if (*(unsigned char *)(v21 + 184)) {
          goto LABEL_182;
        }
        uint64_t v38 = *(unsigned int *)(*(void *)(v21 + 168) + 4 * v17);
        uint64_t v39 = v17 + 1;
        uint64_t v40 = *(unsigned int *)(*(void *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v38 + 8);
        swift_release();
        uint64_t v41 = *(unsigned int *)(v21 + 28);
        unsigned __int8 v42 = *(unsigned char *)(v21 + 32);
        swift_retain();
        LOBYTE(v171[0]) = v42;
        sub_1B6919AD4(v38 | (v40 << 32), v41 | ((unint64_t)v42 << 32), v36, v35, v167, 1);
        swift_release();
        v35 += 656;
        v36 += 88;
        uint64_t v17 = v39;
      }
      while (v16 != v39);
    }
LABEL_18:
    v191[0] = v188;
    v191[1] = v189;
    uint64_t v192 = v190;
    uint64_t v5 = v165;
    sub_1B6345178(v163, (unsigned __int16 **)v191, (uint64_t)v198);
    sub_1B634507C((char *)v21);
    ecs_stack_allocator_pop_snapshot(v161);
    if (v159)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
    }
    swift_release();
    uint64_t v14 = v157 + 1;
  }
  while (v157 + 1 != v153);
  sub_1B632F170(v169);
  sub_1B632F170(v169);
  uint64_t v3 = v147;
  a1 = v148;
LABEL_23:
  uint64_t v11 = v149;
LABEL_24:
  long long v43 = *(_OWORD *)(v3 + 192);
  v196[0] = *(_OWORD *)(v3 + 176);
  v196[1] = v43;
  uint64_t v197 = *(void *)(v3 + 208);
  sub_1B62C9DA8(a1, (uint64_t)v196, v11, v170);
  double result = (uint64_t *)sub_1B63175D8((uint64_t)v170, (uint64_t)v171, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v171[0])
  {
    long long v178 = v171[0];
    long long v179 = v171[1];
    uint64_t v180 = v172;
    if (v177 < 1) {
      return sub_1B632F170(v170);
    }
    uint64_t v156 = v174;
    if (!v174) {
      return sub_1B632F170(v170);
    }
    uint64_t v154 = v173;
    uint64_t v45 = v176[4];
    int v162 = *(unsigned __int8 *)(v175 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v164 = v176;
    char v150 = v176 + 8;
    uint64_t v151 = (uint64_t)(v176 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v46 = 0;
    long long v47 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v152 = v45;
    while (2)
    {
      uint64_t v160 = v46;
      long long v48 = (unsigned int *)(v154 + 48 * v46);
      uint64_t v49 = *v48;
      uint64_t v158 = v48[1];
      long long v51 = (uint64_t *)*((void *)v48 + 2);
      uint64_t v50 = *((void *)v48 + 3);
      uint64_t v53 = *((void *)v48 + 4);
      uint64_t v52 = *((void *)v48 + 5);
      uint64_t v166 = v5;
      if (v162)
      {
        long long v54 = *(os_unfair_lock_s **)(v52 + 376);
        swift_retain();
        os_unfair_lock_lock(v54);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v52 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v45);
      sub_1B63175D8(v151, (uint64_t)v195, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v168 = v52;
      uint64_t v55 = v164[4];
      uint64_t v56 = *(void *)(*(void *)(*(void *)(*(void *)(v52 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v164[6] = ecs_stack_allocator_allocate(v55, 48 * v56, 8);
      v164[7] = v56;
      v150[1] = 0;
      v150[2] = 0;
      *char v150 = 0;
      swift_release();
      uint64_t v57 = sub_1B62C9024((uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1F0F6E938, v51, v50, v53, (uint64_t)v164);
      if (v51)
      {
        if (v53)
        {
          uint64_t v58 = (uint64_t *)(v57 + 56);
          uint64_t v59 = MEMORY[0x1E4FBC150];
          do
          {
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v61 = (char *)*(v58 - 7);
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v62 = *((void *)v61 + 2);
              char v63 = swift_isUniquelyReferenced_nonNull_native();
              *(v58 - 7) = (uint64_t)v61;
              if ((v63 & 1) == 0)
              {
                uint64_t v61 = sub_1B68C0EA8(0, v62, 1, v61);
                *(v58 - 7) = (uint64_t)v61;
              }
              if (v62)
              {
                uint64_t v64 = *((void *)v61 + 2) - v62;
                if (v64 < 0) {
                  goto LABEL_183;
                }
                memmove(v61 + 32, &v61[16 * v62 + 32], 16 * v64);
                *((void *)v61 + 2) = v64;
              }
              *(v58 - 7) = (uint64_t)v61;
              if (!*(v58 - 6)) {
                goto LABEL_57;
              }
            }
            else
            {
              unint64_t v65 = v47;
              if (*((void *)v61 + 3) >= 2uLL)
              {
                sub_1B629AC00(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
                unint64_t v65 = (void *)swift_allocObject();
                int64_t v66 = j__malloc_size(v65);
                uint64_t v67 = v66 - 32;
                if (v66 < 32) {
                  uint64_t v67 = v66 - 17;
                }
                v65[2] = 0;
                v65[3] = 2 * (v67 >> 4);
              }
              *(v58 - 7) = (uint64_t)v65;
              swift_bridgeObjectRelease();
              if (!*(v58 - 6)) {
                goto LABEL_57;
              }
            }
            int v68 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v69 = (char *)*(v58 - 6);
            if (v68)
            {
              uint64_t v70 = *((void *)v69 + 2);
              char v71 = swift_isUniquelyReferenced_nonNull_native();
              *(v58 - 6) = (uint64_t)v69;
              if ((v71 & 1) == 0)
              {
                unint64_t v69 = sub_1B68C384C(0, v70, 1, v69);
                *(v58 - 6) = (uint64_t)v69;
              }
              if (v70)
              {
                uint64_t v72 = *((void *)v69 + 2) - v70;
                if (v72 < 0) {
                  goto LABEL_183;
                }
                memmove(v69 + 32, &v69[16 * v70 + 32], 16 * v72);
                *((void *)v69 + 2) = v72;
              }
              *(v58 - 6) = (uint64_t)v69;
LABEL_57:
              if (!*(v58 - 5)) {
                goto LABEL_71;
              }
              goto LABEL_64;
            }
            id v73 = v47;
            if (*((void *)v69 + 3) >= 2uLL)
            {
              sub_1B62E0A98(0, (unint64_t *)&unk_1E9DCFCF0, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, MEMORY[0x1E4FBBE00]);
              id v73 = (void *)swift_allocObject();
              int64_t v74 = j__malloc_size(v73);
              uint64_t v75 = v74 - 32;
              if (v74 < 32) {
                uint64_t v75 = v74 - 17;
              }
              v73[2] = 0;
              v73[3] = 2 * (v75 >> 4);
            }
            *(v58 - 6) = (uint64_t)v73;
            swift_bridgeObjectRelease();
            if (!*(v58 - 5)) {
              goto LABEL_71;
            }
LABEL_64:
            int v76 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v77 = (char *)*(v58 - 5);
            if (v76)
            {
              uint64_t v78 = *((void *)v77 + 2);
              char v79 = swift_isUniquelyReferenced_nonNull_native();
              *(v58 - 5) = (uint64_t)v77;
              if ((v79 & 1) == 0)
              {
                uint64_t v77 = sub_1B68C0EA8(0, v78, 1, v77);
                *(v58 - 5) = (uint64_t)v77;
              }
              if (v78)
              {
                uint64_t v80 = *((void *)v77 + 2) - v78;
                if (v80 < 0) {
                  goto LABEL_183;
                }
                memmove(v77 + 32, &v77[16 * v78 + 32], 16 * v80);
                *((void *)v77 + 2) = v80;
              }
              *(v58 - 5) = (uint64_t)v77;
LABEL_71:
              if (*(v58 - 4)) {
                goto LABEL_78;
              }
              goto LABEL_90;
            }
            uint64_t v81 = v47;
            if (*((void *)v77 + 3) >= 2uLL)
            {
              sub_1B629AC00(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
              uint64_t v81 = (void *)swift_allocObject();
              int64_t v82 = j__malloc_size(v81);
              uint64_t v83 = v82 - 32;
              if (v82 < 32) {
                uint64_t v83 = v82 - 17;
              }
              v81[2] = 0;
              v81[3] = 2 * (v83 >> 4);
            }
            *(v58 - 5) = (uint64_t)v81;
            swift_bridgeObjectRelease();
            if (*(v58 - 4))
            {
LABEL_78:
              int v84 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v85 = (char *)*(v58 - 4);
              if (v84)
              {
                uint64_t v86 = *((void *)v85 + 2);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v85 = sub_1B629CE28(0, v86, 1, v85);
                }
                if (v86)
                {
                  uint64_t v87 = *((void *)v85 + 2) - v86;
                  if (v87 < 0) {
                    goto LABEL_183;
                  }
                  memmove(v85 + 32, &v85[16 * v86 + 32], 16 * v87);
                  *((void *)v85 + 2) = v87;
                }
                *(v58 - 4) = (uint64_t)v85;
              }
              else
              {
                unint64_t v88 = v47;
                if (*((void *)v85 + 3) >= 2uLL)
                {
                  sub_1B629AC00(0, (unint64_t *)&qword_1EB980DA0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
                  unint64_t v88 = (void *)swift_allocObject();
                  int64_t v89 = j__malloc_size(v88);
                  uint64_t v90 = v89 - 32;
                  if (v89 < 32) {
                    uint64_t v90 = v89 - 17;
                  }
                  v88[2] = 0;
                  v88[3] = 2 * (v90 >> 4);
                }
                *(v58 - 4) = (uint64_t)v88;
                swift_bridgeObjectRelease();
              }
            }
LABEL_90:
            int v91 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v92 = (char *)*(v58 - 1);
            if (v91)
            {
              uint64_t v93 = *((void *)v92 + 2);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v92 = sub_1B6397840(0, v93, 1, v92);
              }
              if (v93)
              {
                uint64_t v94 = *((void *)v92 + 2) - v93;
                if (v94 < 0) {
                  goto LABEL_183;
                }
                memmove(v92 + 32, &v92[4 * v93 + 32], 4 * v94);
                *((void *)v92 + 2) = v94;
              }
              *(v58 - 1) = (uint64_t)v92;
            }
            else
            {
              uint64_t v95 = v47;
              if (*((void *)v92 + 3) >= 2uLL)
              {
                sub_1B6317658(0, (unint64_t *)&unk_1EB980D30, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBBE00]);
                uint64_t v95 = (void *)swift_allocObject();
                int64_t v96 = j__malloc_size(v95);
                uint64_t v97 = v96 - 32;
                if (v96 < 32) {
                  uint64_t v97 = v96 - 29;
                }
                v95[2] = 0;
                id v95[3] = 2 * (v97 >> 2);
              }
              *(v58 - 1) = (uint64_t)v95;
              swift_bridgeObjectRelease();
            }
            int v98 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v99 = *v58;
            if (v98)
            {
              sub_1B68E9818(0, *(void *)(v99 + 16));
            }
            else
            {
              uint64_t v100 = v47;
              if (*(void *)(v99 + 24) >= 2uLL)
              {
                sub_1B6317658(0, (unint64_t *)&unk_1EB980D80, v59, MEMORY[0x1E4FBBE00]);
                uint64_t v100 = (void *)swift_allocObject();
                int64_t v101 = j__malloc_size(v100);
                uint64_t v102 = v101 - 32;
                if (v101 < 32) {
                  uint64_t v102 = v101 - 29;
                }
                v100[2] = 0;
                v100[3] = 2 * (v102 >> 2);
              }
              *uint64_t v58 = (uint64_t)v100;
              swift_bridgeObjectRelease();
            }
            v58 += 8;
            --v53;
          }
          while (v53);
        }
LABEL_109:
        v193[0] = v178;
        v193[1] = v179;
        uint64_t v194 = v180;
        uint64_t v5 = v166;
        sub_1B6345178(v164, (unsigned __int16 **)v193, (uint64_t)v195);
        sub_1B634507C((char *)v168);
        uint64_t v45 = v152;
        ecs_stack_allocator_pop_snapshot(v152);
        if (v162)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v168 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v168 + 376));
        }
        swift_release();
        uint64_t v46 = v160 + 1;
        if (v160 + 1 == v156)
        {
          sub_1B632F170(v170);
          return sub_1B632F170(v170);
        }
        continue;
      }
      break;
    }
    if (v49 == v158) {
      goto LABEL_109;
    }
    uint64_t v103 = v158 - v49;
    uint64_t v104 = (uint64_t *)(v57 + (v49 << 6) + 56);
    uint64_t v105 = MEMORY[0x1E4FBC150];
    while (1)
    {
      int v106 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v107 = (char *)*(v104 - 7);
      if (v106)
      {
        uint64_t v108 = *((void *)v107 + 2);
        char v109 = swift_isUniquelyReferenced_nonNull_native();
        *(v104 - 7) = (uint64_t)v107;
        if ((v109 & 1) == 0)
        {
          uint64_t v107 = sub_1B68C0EA8(0, v108, 1, v107);
          *(v104 - 7) = (uint64_t)v107;
        }
        if (v108)
        {
          uint64_t v110 = *((void *)v107 + 2) - v108;
          if (v110 < 0) {
            goto LABEL_183;
          }
          memmove(v107 + 32, &v107[16 * v108 + 32], 16 * v110);
          *((void *)v107 + 2) = v110;
        }
        *(v104 - 7) = (uint64_t)v107;
        if (!*(v104 - 6)) {
          goto LABEL_134;
        }
      }
      else
      {
        unint64_t v111 = v47;
        if (*((void *)v107 + 3) >= 2uLL)
        {
          sub_1B629AC00(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
          unint64_t v111 = (void *)swift_allocObject();
          int64_t v112 = j__malloc_size(v111);
          uint64_t v113 = v112 - 32;
          if (v112 < 32) {
            uint64_t v113 = v112 - 17;
          }
          v111[2] = 0;
          v111[3] = 2 * (v113 >> 4);
        }
        *(v104 - 7) = (uint64_t)v111;
        swift_bridgeObjectRelease();
        if (!*(v104 - 6)) {
          goto LABEL_134;
        }
      }
      int v114 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v115 = (char *)*(v104 - 6);
      if (v114)
      {
        uint64_t v116 = *((void *)v115 + 2);
        char v117 = swift_isUniquelyReferenced_nonNull_native();
        *(v104 - 6) = (uint64_t)v115;
        if ((v117 & 1) == 0)
        {
          uint64_t v115 = sub_1B68C384C(0, v116, 1, v115);
          *(v104 - 6) = (uint64_t)v115;
        }
        if (v116)
        {
          uint64_t v118 = *((void *)v115 + 2) - v116;
          if (v118 < 0) {
            goto LABEL_183;
          }
          memmove(v115 + 32, &v115[16 * v116 + 32], 16 * v118);
          *((void *)v115 + 2) = v118;
        }
        *(v104 - 6) = (uint64_t)v115;
LABEL_134:
        if (*(v104 - 5)) {
          goto LABEL_141;
        }
        goto LABEL_153;
      }
      uint64_t v119 = v47;
      if (*((void *)v115 + 3) >= 2uLL)
      {
        sub_1B62E0A98(0, (unint64_t *)&unk_1E9DCFCF0, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, MEMORY[0x1E4FBBE00]);
        uint64_t v119 = (void *)swift_allocObject();
        int64_t v120 = j__malloc_size(v119);
        uint64_t v121 = v120 - 32;
        if (v120 < 32) {
          uint64_t v121 = v120 - 17;
        }
        _OWORD v119[2] = 0;
        v119[3] = 2 * (v121 >> 4);
      }
      *(v104 - 6) = (uint64_t)v119;
      swift_bridgeObjectRelease();
      if (*(v104 - 5))
      {
LABEL_141:
        int v122 = swift_isUniquelyReferenced_nonNull_native();
        long long v123 = (char *)*(v104 - 5);
        if (v122)
        {
          uint64_t v124 = *((void *)v123 + 2);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v123 = sub_1B68C0EA8(0, v124, 1, v123);
          }
          if (v124)
          {
            uint64_t v125 = *((void *)v123 + 2) - v124;
            if (v125 < 0) {
              goto LABEL_183;
            }
            memmove(v123 + 32, &v123[16 * v124 + 32], 16 * v125);
            *((void *)v123 + 2) = v125;
          }
          *(v104 - 5) = (uint64_t)v123;
        }
        else
        {
          long long v126 = v47;
          if (*((void *)v123 + 3) >= 2uLL)
          {
            sub_1B629AC00(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
            long long v126 = (void *)swift_allocObject();
            int64_t v127 = j__malloc_size(v126);
            uint64_t v128 = v127 - 32;
            if (v127 < 32) {
              uint64_t v128 = v127 - 17;
            }
            _OWORD v126[2] = 0;
            v126[3] = 2 * (v128 >> 4);
          }
          *(v104 - 5) = (uint64_t)v126;
          swift_bridgeObjectRelease();
        }
      }
LABEL_153:
      uint64_t v129 = v104 - 4;
      if (*(v104 - 4))
      {
        int v130 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v131 = *v129;
        if (v130)
        {
          sub_1B68E96F0(0, *(void *)(v131 + 16));
        }
        else
        {
          char v132 = v47;
          if (*(void *)(v131 + 24) >= 2uLL)
          {
            sub_1B629AC00(0, (unint64_t *)&qword_1EB980DA0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
            char v132 = (void *)swift_allocObject();
            int64_t v133 = j__malloc_size(v132);
            uint64_t v134 = v133 - 32;
            if (v133 < 32) {
              uint64_t v134 = v133 - 17;
            }
            _OWORD v132[2] = 0;
            v132[3] = 2 * (v134 >> 4);
          }
          *uint64_t v129 = (uint64_t)v132;
          swift_bridgeObjectRelease();
        }
      }
      int v135 = swift_isUniquelyReferenced_nonNull_native();
      char v136 = (char *)*(v104 - 1);
      if (v135)
      {
        uint64_t v137 = *((void *)v136 + 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v136 = sub_1B6397840(0, v137, 1, v136);
        }
        if (v137)
        {
          uint64_t v138 = *((void *)v136 + 2) - v137;
          if (v138 < 0) {
            goto LABEL_183;
          }
          memmove(v136 + 32, &v136[4 * v137 + 32], 4 * v138);
          *((void *)v136 + 2) = v138;
        }
        *(v104 - 1) = (uint64_t)v136;
      }
      else
      {
        __n128 v139 = v47;
        if (*((void *)v136 + 3) >= 2uLL)
        {
          sub_1B6317658(0, (unint64_t *)&unk_1EB980D30, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBBE00]);
          __n128 v139 = (void *)swift_allocObject();
          int64_t v140 = j__malloc_size(v139);
          uint64_t v141 = v140 - 32;
          if (v140 < 32) {
            uint64_t v141 = v140 - 29;
          }
          _OWORD v139[2] = 0;
          v139[3] = 2 * (v141 >> 2);
        }
        *(v104 - 1) = (uint64_t)v139;
        swift_bridgeObjectRelease();
      }
      int v142 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v143 = *v104;
      if (v142)
      {
        sub_1B68E9818(0, *(void *)(v143 + 16));
      }
      else
      {
        long long v144 = v47;
        if (*(void *)(v143 + 24) >= 2uLL)
        {
          sub_1B6317658(0, (unint64_t *)&unk_1EB980D80, v105, MEMORY[0x1E4FBBE00]);
          long long v144 = (void *)swift_allocObject();
          int64_t v145 = j__malloc_size(v144);
          uint64_t v146 = v145 - 32;
          if (v145 < 32) {
            uint64_t v146 = v145 - 29;
          }
          v144[2] = 0;
          v144[3] = 2 * (v146 >> 2);
        }
        uint64_t *v104 = (uint64_t)v144;
        swift_bridgeObjectRelease();
      }
      v104 += 8;
      if (!--v103) {
        goto LABEL_109;
      }
    }
  }
  return result;
}

uint64_t sub_1B691CC18()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t assignWithCopy for EmitterRuntime(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  int v5 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v6 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v6;
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  *(_OWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  uint64_t v8 = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 232) = v8;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(_DWORD *)(a1 + 456) = *(_DWORD *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_retain();
  swift_release();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *initializeWithTake for EmitterRuntime(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x290uLL);
}

uint64_t assignWithTake for EmitterRuntime(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  uint64_t v4 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 220) = *(void *)(a2 + 220);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_release();
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  uint64_t v5 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v5;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_unknownObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v6;
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(_DWORD *)(a1 + 456) = *(_DWORD *)(a2 + 456);
  long long v7 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v7;
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_release();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_unknownObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_unknownObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_unknownObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_unknownObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_unknownObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_unknownObjectRelease();
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_unknownObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_unknownObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_unknownObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_unknownObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_unknownObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_unknownObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_unknownObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_unknownObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_unknownObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_unknownObjectRelease();
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_unknownObjectRelease();
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmitterRuntime(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 656)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmitterRuntime(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 648) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 656) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 656) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmitterRuntime()
{
  return &type metadata for EmitterRuntime;
}

uint64_t assignWithCopy for EmitterDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 74) = *(_WORD *)(a2 + 74);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for EmitterDescription(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 74) = *(_WORD *)(a2 + 74);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmitterDescription(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 84)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmitterDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 80) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 84) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 84) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmitterDescription()
{
  return &type metadata for EmitterDescription;
}

uint64_t sub_1B691D8B4(uint64_t a1)
{
  return sub_1B691D8E4(a1, (uint64_t (*)(void))sub_1B62E1D20);
}

uint64_t sub_1B691D8CC(uint64_t a1)
{
  return sub_1B691D8E4(a1, (uint64_t (*)(void))sub_1B6C3C4D0);
}

uint64_t sub_1B691D8E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v4;
  if (!result || a1 > *(void *)(v4 + 24) >> 1)
  {
    return a2();
  }
  return result;
}

uint64_t sub_1B691D974()
{
  return sub_1B691D9BC((uint64_t (*)(void, uint64_t, uint64_t))sub_1B6C3C4D0);
}

uint64_t sub_1B691D98C()
{
  return sub_1B691D9BC((uint64_t (*)(void, uint64_t, uint64_t))sub_1B62E1D20);
}

uint64_t sub_1B691D9A4()
{
  return sub_1B691D9BC((uint64_t (*)(void, uint64_t, uint64_t))sub_1B6C3D3D8);
}

uint64_t sub_1B691D9BC(uint64_t (*a1)(void, uint64_t, uint64_t))
{
  uint64_t v2 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v2;
  if ((result & 1) == 0)
  {
    uint64_t v4 = *(void *)(v2 + 16) + 1;
    return a1(0, v4, 1);
  }
  return result;
}

uint64_t sub_1B691DA30(uint64_t a1)
{
  return sub_1B691DA78(a1, (uint64_t (*)(BOOL))sub_1B6C3C4D0);
}

uint64_t sub_1B691DA48(uint64_t a1)
{
  return sub_1B691DA78(a1, (uint64_t (*)(BOOL))sub_1B62E1D20);
}

uint64_t sub_1B691DA60(uint64_t a1)
{
  return sub_1B691DA78(a1, (uint64_t (*)(BOOL))sub_1B6C3D3D8);
}

uint64_t sub_1B691DA78(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1)) {
    return a2(v3 > 1);
  }
  return result;
}

uint64_t sub_1B691DAA8(uint64_t a1, long long *a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1 + 1;
  return sub_1B62C15C4(a2, v3 + 40 * a1 + 32);
}

uint64_t sub_1B691DACC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(void *)(v3 + 8 * result + 32) = a2;
  return result;
}

__n128 sub_1B691DAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1 + 1;
  uint64_t v4 = v3 + 40 * a1;
  __n128 result = *(__n128 *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 48) = v6;
  *(_DWORD *)(v4 + 63) = *(_DWORD *)(a2 + 31);
  return result;
}

BOOL sub_1B691DB10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(int32x2_t **)a1;
  uint64_t v3 = *(int32x2_t **)a2;
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4 != *(void *)(*(void *)a2 + 16)) {
    return 0;
  }
  if (v4) {
    BOOL v7 = v2 == v3;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    if (v2[4].i32[0] != v3[4].i32[0] || v2[4].i32[1] != v3[4].i32[1]) {
      return 0;
    }
    uint64_t v11 = v4 - 1;
    if (v11)
    {
      uint64_t v12 = v3 + 5;
      uint64_t v13 = v2 + 5;
      do
      {
        int32x2_t v14 = vceq_s32(*v13, *v12);
        if ((v14.i32[0] & v14.i32[1] & 1) == 0) {
          return 0;
        }
        ++v12;
        ++v13;
      }
      while (--v11);
    }
  }
  if ((sub_1B69197F8(*(int32x2_t **)(a1 + 8), *(int32x2_t **)(a2 + 8)) & 1) == 0
    || (sub_1B69197F8(*(int32x2_t **)(a1 + 16), *(int32x2_t **)(a2 + 16)) & 1) == 0
    || (sub_1B69197F8(*(int32x2_t **)(a1 + 24), *(int32x2_t **)(a2 + 24)) & 1) == 0)
  {
    return 0;
  }
  char v8 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  if (((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 42) ^ *(unsigned __int8 *)(a2 + 42)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 43) ^ *(unsigned __int8 *)(a2 + 43)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 44) ^ *(unsigned __int8 *)(a2 + 44)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 45) ^ *(unsigned __int8 *)(a2 + 45)) & 1) != 0
    || *(float *)(a1 + 48) != *(float *)(a2 + 48)
    || *(float *)(a1 + 52) != *(float *)(a2 + 52)
    || ((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 57) ^ *(unsigned __int8 *)(a2 + 57)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 58) ^ *(unsigned __int8 *)(a2 + 58)) & 1) != 0
    || *(void *)(a1 + 64) != *(void *)(a2 + 64)
    || ((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0
    || *(unsigned __int16 *)(a1 + 74) != *(unsigned __int16 *)(a2 + 74)
    || *(unsigned __int8 *)(a1 + 76) != *(unsigned __int8 *)(a2 + 76)
    || ((*(unsigned __int8 *)(a1 + 77) ^ *(unsigned __int8 *)(a2 + 77)) & 1) != 0)
  {
    return 0;
  }
  return *(float *)(a1 + 80) == *(float *)(a2 + 80);
}

uint64_t sub_1B691DD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1B62E1D20(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = a1 + 36;
    do
    {
      uint64_t v8 = *(void *)(v7 - 4);
      sub_1B6B1BF68(v8, 1, ObjectType, a3);
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1B62E1D20(v10 > 1, v11 + 1, 1);
      }
      v7 += 8;
      *(void *)(v14 + 16) = v11 + 1;
      *(void *)(v14 + 8 * v11 + 32) = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1B691DE10()
{
  unint64_t v0 = sub_1B6E337B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17) {
    return 23;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B691DE64(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v160 = a5;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B62E0A98(0, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v157 = (uint64_t)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v155 - v15;
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v161 = (uint64_t)&v155 - v19;
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)&v155 - v22;
  sub_1B62E0A98(0, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript, v9);
  MEMORY[0x1F4188790](v24 - 8, v25);
  int v159 = (char *)&v155 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v158 = (uint64_t)&v155 - v29;
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v164 = (uint64_t)&v155 - v32;
  MEMORY[0x1F4188790](v33, v34);
  uint64_t v35 = a4;
  v163 = (int *)((char *)&v155 - v36);
  uint64_t v37 = a2 - a1;
  uint64_t v38 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v38 = a2 - a1;
  }
  uint64_t v39 = v38 >> 3;
  uint64_t v166 = v35;
  uint64_t v167 = a3;
  uint64_t v40 = a3 - (void)a2;
  uint64_t v41 = a3 - (void)a2 + 7;
  if (a3 - (uint64_t)a2 >= 0) {
    uint64_t v41 = a3 - (void)a2;
  }
  uint64_t v42 = v41 >> 3;
  v171 = a1;
  uint64_t v170 = v35;
  if (v39 >= v41 >> 3)
  {
    if (v40 < -7) {
      goto LABEL_223;
    }
    int64_t v96 = (int *)v167;
    if (v35 != a2 || &a2[8 * v42] <= v35)
    {
      memmove(v35, a2, 8 * v42);
      uint64_t v35 = v166;
    }
    unint64_t v97 = (unint64_t)&v35[8 * v42];
    uint64_t v169 = (void *)v97;
    v171 = a2;
    if (v40 < 8 || a1 >= a2)
    {
LABEL_222:
      sub_1B6D66B7C((void **)&v171, (const void **)&v170, &v169);
      return 1;
    }
    uint64_t v168 = v160 + OBJC_IVAR____TtC3VFX13EntityManager__entries;
    int v98 = a2;
    uint64_t v155 = v16;
    uint64_t v156 = a1;
    while (1)
    {
      uint64_t v167 = (uint64_t)v96;
      uint64_t v100 = (void *)(v97 - 8);
      uint64_t v99 = *(int *)(v97 - 8);
      int v101 = *(_DWORD *)(v97 - 4);
      uint64_t v103 = *((int *)v98 - 2);
      v98 -= 8;
      uint64_t v102 = v103;
      int v104 = *((_DWORD *)v98 + 1);
      BOOL v105 = v99 == -1 && v101 == 0;
      v163 = v96 - 2;
      uint64_t v164 = v97;
      int v162 = (int *)a2;
      if (v105 || (v99 & 0x80000000) != 0 || *(void *)(v168 + 8) <= v99) {
        break;
      }
      uint64_t v106 = *(void *)v168 + 12 * (int)v99;
      if (v101 != -1 && *(_DWORD *)(v106 + 8) != v101) {
        break;
      }
      uint64_t v108 = *(void *)(*(void *)(v160 + 136) + 8 * *(int *)(*(void *)v168 + 12 * (int)v99) + 32);
      uint64_t v109 = *(void *)(v108 + 48);
      uint64_t v110 = *(void *)(v109 + 16);
      if (!v110) {
        break;
      }
      uint64_t v111 = *(__int16 *)(v106 + 4);
      int64_t v112 = (void *)(v109 + 56);
      while ((ValueMetadata *)*(v112 - 3) != &type metadata for GraphScriptingConfig)
      {
        v112 += 5;
        if (!--v110) {
          goto LABEL_136;
        }
      }
      unint64_t v137 = *(char *)(*(void *)(v108 + 128) + *v112 + 32 * v111);
      if (v137 > 6) {
        uint64_t v123 = 1;
      }
      else {
        uint64_t v123 = qword_1B6E958F0[v137];
      }
      unint64_t v122 = v167;
      uint64_t v124 = (uint64_t)v159;
      if (v102 == -1 && !v104)
      {
LABEL_186:
        uint64_t v167 = v123;
        int v139 = v104;
        uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
        uint64_t v141 = *(void *)(updated - 8);
        if (*(void *)(v141 + 64))
        {
          if (v102 == -1) {
            goto LABEL_195;
          }
          uint64_t v142 = *(void *)(v141 + 72);
          if ((v102 & 0x80000000) != 0) {
            goto LABEL_195;
          }
LABEL_192:
          if (*(void *)(v168 + 8) <= v102
            || v139 != -1 && *(_DWORD *)(*(void *)v168 + 12 * (int)v102 + 8) != v139)
          {
            goto LABEL_195;
          }
          uint64_t v147 = (unsigned int *)(*(void *)v168 + 12 * (int)v102);
          uint64_t v148 = v165;
          sub_1B69643DC(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v147 + 32), *v147 | ((unint64_t)*((unsigned __int16 *)v147 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v147 + 2) << 32), v142, v160, v124);
          uint64_t v165 = v148;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v124, 1, updated) != 1)
          {
            uint64_t v149 = type metadata accessor for ParticleUpdateScript;
            uint64_t v150 = v124;
            uint64_t v151 = &qword_1EB97F498;
LABEL_217:
            sub_1B62E0A28(v150, v151, v149);
            unint64_t v138 = (unint64_t)v166;
            int64_t v96 = v163;
            unint64_t v97 = v164;
            if (v167 >= 1) {
              goto LABEL_207;
            }
            goto LABEL_218;
          }
        }
        else
        {
          if (v102 != -1)
          {
            uint64_t v142 = 0;
            if ((v102 & 0x80000000) == 0) {
              goto LABEL_192;
            }
          }
LABEL_195:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v124, 1, 1, updated);
        }
        sub_1B62E0A28(v124, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
        uint64_t inited = type metadata accessor for ParticleInitScript(0);
        uint64_t v144 = *(void *)(inited - 8);
        if (*(void *)(v144 + 64))
        {
          if (v102 == -1) {
            goto LABEL_205;
          }
          uint64_t v145 = *(void *)(v144 + 72);
          if ((v102 & 0x80000000) != 0) {
            goto LABEL_205;
          }
        }
        else if (v102 == -1 || (uint64_t v145 = 0, (v102 & 0x80000000) != 0))
        {
LABEL_205:
          uint64_t v146 = (uint64_t)v155;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v144 + 56))(v155, 1, 1, inited);
LABEL_206:
          sub_1B62E0A28(v146, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
          unint64_t v138 = (unint64_t)v166;
          int64_t v96 = v163;
          unint64_t v97 = v164;
          if ((v167 & 0x8000000000000000) == 0) {
            goto LABEL_207;
          }
          goto LABEL_218;
        }
        if (*(void *)(v168 + 8) <= v102 || v139 != -1 && *(_DWORD *)(*(void *)v168 + 12 * (int)v102 + 8) != v139) {
          goto LABEL_205;
        }
        uint64_t v152 = (unsigned int *)(*(void *)v168 + 12 * (int)v102);
        uint64_t v146 = (uint64_t)v155;
        uint64_t v153 = v165;
        sub_1B696439C(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v152 + 32), *v152 | ((unint64_t)*((unsigned __int16 *)v152 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v152+ 2) << 32), v145, v160, (uint64_t)v155);
        uint64_t v165 = v153;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v146, 1, inited) == 1) {
          goto LABEL_206;
        }
        uint64_t v149 = type metadata accessor for ParticleInitScript;
        uint64_t v150 = v146;
        uint64_t v151 = &qword_1EB97F1C0;
        goto LABEL_217;
      }
LABEL_167:
      if ((v102 & 0x80000000) != 0) {
        goto LABEL_186;
      }
      if (*(void *)(v168 + 8) <= v102) {
        goto LABEL_186;
      }
      uint64_t v129 = *(void *)v168 + 12 * (int)v102;
      uint64_t v130 = *(__int16 *)(v129 + 4);
      if (v104 != -1 && *(_DWORD *)(v129 + 8) != v104) {
        goto LABEL_186;
      }
      uint64_t v131 = *(void *)(*(void *)(v160 + 136) + 8 * *(int *)(*(void *)v168 + 12 * (int)v102) + 32);
      uint64_t v132 = *(void *)(v131 + 48);
      uint64_t v133 = *(void *)(v132 + 16);
      if (!v133) {
        goto LABEL_186;
      }
      uint64_t v134 = (void *)(v132 + 56);
      while ((ValueMetadata *)*(v134 - 3) != &type metadata for GraphScriptingConfig)
      {
        v134 += 5;
        if (!--v133) {
          goto LABEL_186;
        }
      }
      unint64_t v135 = *(char *)(*(void *)(v131 + 128) + *v134 + 32 * v130);
      if (v135 > 6) {
        uint64_t v136 = 1;
      }
      else {
        uint64_t v136 = qword_1B6E958F0[v135];
      }
      unint64_t v138 = (unint64_t)v166;
      int64_t v96 = v163;
      unint64_t v97 = v164;
      if (v123 >= v136)
      {
LABEL_207:
        uint64_t v169 = v100;
        if (v122 < v97 || (unint64_t)v96 >= v97 || v122 != v97) {
          *(void *)int64_t v96 = *v100;
        }
        int v98 = (char *)v162;
        unint64_t v97 = (unint64_t)v100;
        if ((unint64_t)v100 <= v138) {
          goto LABEL_222;
        }
        goto LABEL_120;
      }
LABEL_218:
      if ((int *)v122 != v162 || v96 >= v162) {
        *(void *)int64_t v96 = *(void *)v98;
      }
      v171 = v98;
      if (v97 <= v138) {
        goto LABEL_222;
      }
LABEL_120:
      a2 = v98;
      if (v98 <= a1) {
        goto LABEL_222;
      }
    }
LABEL_136:
    LODWORD(v161) = v104;
    uint64_t v113 = type metadata accessor for ParticleUpdateScript(0);
    uint64_t v114 = *(void *)(v113 - 8);
    if (*(void *)(v114 + 64))
    {
      uint64_t v115 = (void *)v168;
      if (v99 == -1) {
        goto LABEL_145;
      }
      uint64_t v116 = *(void *)(v114 + 72);
      if ((v99 & 0x80000000) != 0) {
        goto LABEL_145;
      }
    }
    else
    {
      uint64_t v115 = (void *)v168;
      if (v99 == -1) {
        goto LABEL_145;
      }
      uint64_t v116 = 0;
      if ((v99 & 0x80000000) != 0) {
        goto LABEL_145;
      }
    }
    if (v115[1] > v99 && (v101 == -1 || *(_DWORD *)(*v115 + 12 * (int)v99 + 8) == v101))
    {
      uint64_t v125 = (unsigned int *)(*v115 + 12 * (int)v99);
      uint64_t v117 = v158;
      uint64_t v126 = v165;
      sub_1B69643DC(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v125 + 32), *v125 | ((unint64_t)*((unsigned __int16 *)v125 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v125+ 2) << 32), v116, v160, v158);
      uint64_t v165 = v126;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v117, 1, v113) != 1)
      {
        sub_1B62E0A28(v117, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
        uint64_t v123 = 1;
        if (v102 != -1)
        {
          unint64_t v122 = v167;
          uint64_t v124 = (uint64_t)v159;
          a1 = v156;
          goto LABEL_166;
        }
        unint64_t v122 = v167;
        uint64_t v124 = (uint64_t)v159;
        a1 = v156;
        goto LABEL_158;
      }
LABEL_146:
      sub_1B62E0A28(v117, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
      uint64_t v118 = type metadata accessor for ParticleInitScript(0);
      uint64_t v119 = *(void *)(v118 - 8);
      if (*(void *)(v119 + 64))
      {
        a1 = v156;
        if (v99 == -1) {
          goto LABEL_155;
        }
        uint64_t v120 = *(void *)(v119 + 72);
        if ((v99 & 0x80000000) != 0) {
          goto LABEL_155;
        }
      }
      else
      {
        a1 = v156;
        if (v99 == -1) {
          goto LABEL_155;
        }
        uint64_t v120 = 0;
        if ((v99 & 0x80000000) != 0) {
          goto LABEL_155;
        }
      }
      if (*(void *)(v168 + 8) > v99 && (v101 == -1 || *(_DWORD *)(*(void *)v168 + 12 * (int)v99 + 8) == v101))
      {
        int64_t v127 = (unsigned int *)(*(void *)v168 + 12 * (int)v99);
        uint64_t v121 = v157;
        uint64_t v128 = v165;
        sub_1B696439C(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v127 + 32), *v127 | ((unint64_t)*((unsigned __int16 *)v127 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v127+ 2) << 32), v120, v160, v157);
        uint64_t v165 = v128;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v121, 1, v118) != 1)
        {
          sub_1B62E0A28(v121, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
          unint64_t v122 = v167;
          uint64_t v123 = 1;
          if (v102 != -1)
          {
LABEL_165:
            uint64_t v124 = (uint64_t)v159;
LABEL_166:
            int v104 = v161;
            goto LABEL_167;
          }
          goto LABEL_157;
        }
LABEL_156:
        unint64_t v122 = v167;
        sub_1B62E0A28(v121, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
        uint64_t v123 = 0;
        if (v102 != -1) {
          goto LABEL_165;
        }
LABEL_157:
        uint64_t v124 = (uint64_t)v159;
LABEL_158:
        int v104 = v161;
        if (!v161) {
          goto LABEL_186;
        }
        goto LABEL_167;
      }
LABEL_155:
      uint64_t v121 = v157;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v157, 1, 1, v118);
      goto LABEL_156;
    }
LABEL_145:
    uint64_t v117 = v158;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v158, 1, 1, v113);
    goto LABEL_146;
  }
  if (v37 >= -7)
  {
    if (v35 != a1 || &a1[8 * v39] <= v35)
    {
      memmove(v35, a1, 8 * v39);
      uint64_t v35 = v166;
    }
    int v162 = (int *)&v35[8 * v39];
    uint64_t v169 = v162;
    if (v37 >= 8 && (unint64_t)a2 < v167)
    {
      long long v43 = (void *)(v160 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      int v159 = (char *)(v160 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      while (1)
      {
        int v44 = *((_DWORD *)a2 + 1);
        uint64_t v45 = *(int *)a2;
        int v46 = *((_DWORD *)v35 + 1);
        uint64_t v47 = *(int *)v35;
        BOOL v48 = v45 == -1 && v44 == 0;
        uint64_t v166 = v35;
        if (v48) {
          break;
        }
        if ((v45 & 0x80000000) != 0) {
          break;
        }
        if (v43[1] <= v45) {
          break;
        }
        uint64_t v49 = *v43 + 12 * (int)v45;
        uint64_t v50 = *(__int16 *)(v49 + 4);
        if (v44 != -1 && *(_DWORD *)(v49 + 8) != v44) {
          break;
        }
        uint64_t v51 = *(void *)(*(void *)(v160 + 136) + 8 * *(int *)(*v43 + 12 * (int)v45) + 32);
        uint64_t v52 = *(void *)(v51 + 48);
        uint64_t v53 = *(void *)(v52 + 16);
        if (!v53) {
          break;
        }
        long long v54 = (void *)(v52 + 56);
        while ((ValueMetadata *)*(v54 - 3) != &type metadata for GraphScriptingConfig)
        {
          v54 += 5;
          if (!--v53) {
            goto LABEL_25;
          }
        }
        unint64_t v69 = *(char *)(*(void *)(v51 + 128) + *v54 + 32 * v50);
        if (v69 > 6)
        {
          uint64_t v64 = 1;
          if (v47 == -1)
          {
LABEL_58:
            if (!v46) {
              goto LABEL_70;
            }
          }
        }
        else
        {
          uint64_t v64 = qword_1B6E958F0[v69];
          if (v47 == -1) {
            goto LABEL_58;
          }
        }
LABEL_62:
        if ((v47 & 0x80000000) == 0 && v43[1] > v47)
        {
          uint64_t v70 = *v43 + 12 * (int)v47;
          uint64_t v71 = *(__int16 *)(v70 + 4);
          if (v46 == -1 || *(_DWORD *)(v70 + 8) == v46)
          {
            uint64_t v72 = *(void *)(*(void *)(v160 + 136) + 8 * *(int *)(*v43 + 12 * (int)v47) + 32);
            uint64_t v73 = *(void *)(v72 + 48);
            uint64_t v74 = *(void *)(v73 + 16);
            if (v74)
            {
              uint64_t v75 = (void *)(v73 + 56);
              while ((ValueMetadata *)*(v75 - 3) != &type metadata for GraphScriptingConfig)
              {
                v75 += 5;
                if (!--v74) {
                  goto LABEL_70;
                }
              }
              unint64_t v94 = *(char *)(*(void *)(v72 + 128) + *v75 + 32 * v71);
              if (v94 > 6) {
                uint64_t v95 = 1;
              }
              else {
                uint64_t v95 = qword_1B6E958F0[v94];
              }
              uint64_t v35 = v166;
              unint64_t v88 = v167;
              if (v64 < v95)
              {
LABEL_96:
                int64_t v89 = (int *)(a2 + 8);
                if (a1 < a2 || a1 >= (char *)v89 || a1 != a2) {
                  *(void *)a1 = *(void *)a2;
                }
                goto LABEL_100;
              }
              goto LABEL_91;
            }
          }
        }
LABEL_70:
        uint64_t v168 = v64;
        uint64_t v76 = type metadata accessor for ParticleUpdateScript(0);
        uint64_t v77 = *(void *)(v76 - 8);
        if (*(void *)(v77 + 64))
        {
          if (v47 == -1) {
            goto LABEL_79;
          }
          uint64_t v78 = *(void *)(v77 + 72);
          if ((v47 & 0x80000000) != 0) {
            goto LABEL_79;
          }
        }
        else
        {
          if (v47 == -1) {
            goto LABEL_79;
          }
          uint64_t v78 = 0;
          if ((v47 & 0x80000000) != 0) {
            goto LABEL_79;
          }
        }
        if (v43[1] > v47)
        {
          uint64_t v79 = *v43;
          if (v46 == -1 || *(_DWORD *)(*v43 + 12 * (int)v47 + 8) == v46)
          {
            uint64_t v80 = a2;
            uint64_t v81 = a1;
            int64_t v82 = v43;
            uint64_t v83 = v23;
            uint64_t v90 = (unsigned int *)(v79 + 12 * (int)v47);
            uint64_t v84 = v164;
            uint64_t v91 = v165;
            sub_1B69643DC(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v90 + 32), *v90 | ((unint64_t)*((unsigned __int16 *)v90 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v90 + 2) << 32), v78, v160, v164);
            uint64_t v165 = v91;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v84, 1, v76) != 1)
            {
              sub_1B62E0A28(v84, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
              unint64_t v88 = v167;
              uint64_t v35 = v166;
              uint64_t v23 = v83;
              long long v43 = v82;
              a1 = v81;
              a2 = v80;
              if (v168 < 1) {
                goto LABEL_96;
              }
              goto LABEL_91;
            }
            goto LABEL_80;
          }
        }
LABEL_79:
        uint64_t v80 = a2;
        uint64_t v81 = a1;
        int64_t v82 = v43;
        uint64_t v83 = v23;
        uint64_t v84 = v164;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v164, 1, 1, v76);
LABEL_80:
        sub_1B62E0A28(v84, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
        uint64_t v85 = type metadata accessor for ParticleInitScript(0);
        uint64_t v86 = *(void *)(v85 - 8);
        if (*(void *)(v86 + 64))
        {
          uint64_t v23 = v83;
          long long v43 = v82;
          a1 = v81;
          a2 = v80;
          if (v47 == -1) {
            goto LABEL_89;
          }
          uint64_t v87 = *(void *)(v86 + 72);
          if ((v47 & 0x80000000) != 0) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v23 = v83;
          long long v43 = v82;
          a1 = v81;
          a2 = v80;
          if (v47 == -1 || (uint64_t v87 = 0, (v47 & 0x80000000) != 0))
          {
LABEL_89:
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v23, 1, 1, v85);
LABEL_90:
            unint64_t v88 = v167;
            sub_1B62E0A28((uint64_t)v23, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
            uint64_t v35 = v166;
            if (v168 < 0) {
              goto LABEL_96;
            }
            goto LABEL_91;
          }
        }
        if (v43[1] <= v47 || v46 != -1 && *(_DWORD *)(*v43 + 12 * (int)v47 + 8) != v46) {
          goto LABEL_89;
        }
        uint64_t v92 = (unsigned int *)(*v43 + 12 * (int)v47);
        uint64_t v93 = v165;
        sub_1B696439C(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v92 + 32), *v92 | ((unint64_t)*((unsigned __int16 *)v92 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v92+ 2) << 32), v87, v160, (uint64_t)v23);
        uint64_t v165 = v93;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v23, 1, v85) == 1) {
          goto LABEL_90;
        }
        sub_1B62E0A28((uint64_t)v23, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
        unint64_t v88 = v167;
        uint64_t v35 = v166;
        if (v168 < 1) {
          goto LABEL_96;
        }
LABEL_91:
        if (a1 != v35) {
          *(void *)a1 = *(void *)v35;
        }
        v35 += 8;
        uint64_t v170 = v35;
        int64_t v89 = (int *)a2;
LABEL_100:
        a1 += 8;
        v171 = a1;
        if (v35 < (char *)v162)
        {
          a2 = (char *)v89;
          if ((unint64_t)v89 < v88) {
            continue;
          }
        }
        goto LABEL_222;
      }
LABEL_25:
      LODWORD(v168) = v46;
      uint64_t v55 = v23;
      uint64_t v56 = type metadata accessor for ParticleUpdateScript(0);
      uint64_t v57 = *(void *)(v56 - 8);
      if (*(void *)(v57 + 64))
      {
        if (v45 == -1) {
          goto LABEL_34;
        }
        uint64_t v58 = *(void *)(v57 + 72);
        if ((v45 & 0x80000000) != 0) {
          goto LABEL_34;
        }
      }
      else
      {
        if (v45 == -1) {
          goto LABEL_34;
        }
        uint64_t v58 = 0;
        if ((v45 & 0x80000000) != 0) {
          goto LABEL_34;
        }
      }
      if (v43[1] > v45 && (v44 == -1 || *(_DWORD *)(*v43 + 12 * (int)v45 + 8) == v44))
      {
        unint64_t v65 = (unsigned int *)(*v43 + 12 * (int)v45);
        uint64_t v59 = (uint64_t)v163;
        uint64_t v66 = v165;
        sub_1B69643DC(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v65 + 32), *v65 | ((unint64_t)*((unsigned __int16 *)v65 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v65+ 2) << 32), v58, v160, (uint64_t)v163);
        uint64_t v165 = v66;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v59, 1, v56) != 1)
        {
          sub_1B62E0A28(v59, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
          uint64_t v23 = v55;
          uint64_t v64 = 1;
          if (v47 == -1)
          {
            long long v43 = v159;
LABEL_46:
            int v46 = v168;
            if (!v168) {
              goto LABEL_70;
            }
            goto LABEL_62;
          }
          long long v43 = v159;
          goto LABEL_61;
        }
LABEL_35:
        sub_1B62E0A28(v59, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
        uint64_t v60 = type metadata accessor for ParticleInitScript(0);
        uint64_t v61 = *(void *)(v60 - 8);
        if (*(void *)(v61 + 64))
        {
          long long v43 = v159;
          if (v45 == -1) {
            goto LABEL_44;
          }
          uint64_t v62 = *(void *)(v61 + 72);
          if ((v45 & 0x80000000) != 0) {
            goto LABEL_44;
          }
        }
        else
        {
          long long v43 = v159;
          if (v45 == -1) {
            goto LABEL_44;
          }
          uint64_t v62 = 0;
          if ((v45 & 0x80000000) != 0) {
            goto LABEL_44;
          }
        }
        if (v43[1] > v45 && (v44 == -1 || *(_DWORD *)(*v43 + 12 * (int)v45 + 8) == v44))
        {
          uint64_t v67 = (unsigned int *)(*v43 + 12 * (int)v45);
          uint64_t v63 = v161;
          uint64_t v68 = v165;
          sub_1B696439C(*(void *)(*(void *)(v160 + 136) + 8 * (int)*v67 + 32), *v67 | ((unint64_t)*((unsigned __int16 *)v67 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v67+ 2) << 32), v62, v160, v161);
          uint64_t v165 = v68;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v63, 1, v60) != 1)
          {
            sub_1B62E0A28(v63, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
            uint64_t v23 = v55;
            uint64_t v64 = 1;
            if (v47 == -1) {
              goto LABEL_46;
            }
            goto LABEL_61;
          }
LABEL_45:
          uint64_t v23 = v55;
          sub_1B62E0A28(v63, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
          uint64_t v64 = 0;
          if (v47 == -1) {
            goto LABEL_46;
          }
LABEL_61:
          int v46 = v168;
          goto LABEL_62;
        }
LABEL_44:
        uint64_t v63 = v161;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v161, 1, 1, v60);
        goto LABEL_45;
      }
LABEL_34:
      uint64_t v59 = (uint64_t)v163;
      (*(void (**)(int *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v163, 1, 1, v56);
      goto LABEL_35;
    }
    goto LABEL_222;
  }
LABEL_223:
  swift_release();
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

unint64_t sub_1B691F340()
{
  unint64_t result = qword_1E9DD29C0;
  if (!qword_1E9DD29C0)
  {
    sub_1B6317658(255, &qword_1E9DD29B8, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD29C0);
  }
  return result;
}

unint64_t sub_1B691F3CC()
{
  unint64_t result = qword_1E9DD29D0;
  if (!qword_1E9DD29D0)
  {
    sub_1B6317658(255, &qword_1E9DD29C8, (uint64_t)&type metadata for EntityComponentReference, MEMORY[0x1E4FBB320]);
    sub_1B691F460();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD29D0);
  }
  return result;
}

unint64_t sub_1B691F460()
{
  unint64_t result = qword_1E9DD29D8;
  if (!qword_1E9DD29D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD29D8);
  }
  return result;
}

unint64_t sub_1B691F4B4()
{
  unint64_t result = qword_1E9DD2A00;
  if (!qword_1E9DD2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A00);
  }
  return result;
}

unint64_t sub_1B691F508()
{
  unint64_t result = qword_1E9DD2A10;
  if (!qword_1E9DD2A10)
  {
    sub_1B6E30F48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A10);
  }
  return result;
}

void sub_1B691F560()
{
  if (!qword_1E9DD2A20)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD2A20);
    }
  }
}

uint64_t sub_1B691F5C4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B691F600(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B691B528(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char *)(v4 + 32), (long long *)(v4 + 40));
}

void sub_1B691F618(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1B6A8155C(a1, a2, a3, a4, v4 + 16);
}

uint64_t sub_1B691F628()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1B691F668(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B691F6D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B691F734()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 168, 7);
}

uint64_t getEnumTagSinglePayload for EmitterDescription.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EmitterDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B691F8D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmitterDescription.CodingKeys()
{
  return &type metadata for EmitterDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for Seed.CodingKeys()
{
  return &type metadata for Seed.CodingKeys;
}

ValueMetadata *type metadata accessor for EmitterReference()
{
  return &type metadata for EmitterReference;
}

uint64_t getEnumTagSinglePayload for Seed(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Seed(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Seed()
{
  return &type metadata for Seed;
}

unsigned char *_s3VFX18EmitterDescriptionV17PhysicsSimulationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B691FAA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmitterDescription.PhysicsSimulation()
{
  return &type metadata for EmitterDescription.PhysicsSimulation;
}

ValueMetadata *type metadata accessor for EmitterDescription.DebuggingOptions()
{
  return &type metadata for EmitterDescription.DebuggingOptions;
}

unint64_t sub_1B691FAF4()
{
  unint64_t result = qword_1E9DD2A28;
  if (!qword_1E9DD2A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A28);
  }
  return result;
}

unint64_t sub_1B691FB4C()
{
  unint64_t result = qword_1E9DD2A30;
  if (!qword_1E9DD2A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A30);
  }
  return result;
}

unint64_t sub_1B691FBA4()
{
  unint64_t result = qword_1E9DD2A38;
  if (!qword_1E9DD2A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A38);
  }
  return result;
}

unint64_t sub_1B691FBFC()
{
  unint64_t result = qword_1E9DD2A40;
  if (!qword_1E9DD2A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A40);
  }
  return result;
}

unint64_t sub_1B691FC50(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B62A9A34();
  unint64_t result = sub_1B691F4B4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B691FC84()
{
  unint64_t result = qword_1E9DD2A48;
  if (!qword_1E9DD2A48)
  {
    sub_1B6317658(255, &qword_1E9DD2A50, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A48);
  }
  return result;
}

unint64_t sub_1B691FD04()
{
  unint64_t result = qword_1E9DD2A58;
  if (!qword_1E9DD2A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A58);
  }
  return result;
}

unint64_t sub_1B691FD5C()
{
  unint64_t result = qword_1E9DD2A60;
  if (!qword_1E9DD2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A60);
  }
  return result;
}

unint64_t sub_1B691FDB4()
{
  unint64_t result = qword_1E9DD2A68;
  if (!qword_1E9DD2A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2A68);
  }
  return result;
}

unint64_t sub_1B691FE0C()
{
  unint64_t result = qword_1EB94A170;
  if (!qword_1EB94A170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB94A170);
  }
  return result;
}

unint64_t sub_1B691FE64()
{
  unint64_t result = qword_1EB97F068;
  if (!qword_1EB97F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F068);
  }
  return result;
}

unint64_t sub_1B691FEBC()
{
  unint64_t result = qword_1EB97F060;
  if (!qword_1EB97F060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F060);
  }
  return result;
}

unint64_t sub_1B691FF14()
{
  unint64_t result = qword_1EB97FC58;
  if (!qword_1EB97FC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC58);
  }
  return result;
}

unint64_t sub_1B691FF6C()
{
  unint64_t result = qword_1EB97FC50;
  if (!qword_1EB97FC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC50);
  }
  return result;
}

uint64_t sub_1B691FFC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1B691FFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6920048(a1, a2, a3, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
}

uint64_t sub_1B692001C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6920048(a1, a2, a3, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B67861B0);
}

uint64_t sub_1B6920048(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v82 = *(void *)(a2 + 16);
  if (v82)
  {
    uint64_t v81 = *(void *)(a3 + 16);
    uint64_t v77 = (void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v78 = result;
    uint64_t v76 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    uint64_t v74 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    uint64_t v79 = a3 + 32;
    uint64_t v80 = a2 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (v5 != v81)
    {
      uint64_t v10 = v80 + 32 * v5;
      unint64_t v11 = *(void *)v10;
      char v12 = *(unsigned char *)(v10 + 24);
      uint64_t v13 = *(void *)(v10 + 16);
      LOBYTE(v10) = *(unsigned char *)(v10 + 8);
      unint64_t v92 = v11;
      char v93 = v10;
      uint64_t v94 = v13;
      char v95 = v12;
      sub_1B62CAAD8(v79 + 32 * v5, (uint64_t)v96);
      sub_1B62B57A8(v96, v91);
      switch(v11 >> 60)
      {
        case 1uLL:
          uint64_t v29 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
          sub_1B664D9F0((v11 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v90);
          if (MEMORY[0x1BA9B8670](v90))
          {
            uint64_t v30 = v90[1];
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 40);
            sub_1B62C6AA8(v11);
            sub_1B62C6AA8(v11);
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v33 = v32(ObjectType, v30);
            uint64_t v34 = sub_1B6E32738();
            uint64_t v35 = swift_conformsToProtocol2();
            if (v35) {
              uint64_t v36 = v35;
            }
            else {
              uint64_t v36 = 0;
            }
            if (!v35) {
              uint64_t v34 = 0;
            }
            if (v34)
            {
              uint64_t v37 = swift_getObjectType();
              swift_unknownObjectRetain();
              uint64_t v38 = sub_1B67CBAE0(v29, v33, v34, v36);
              swift_unknownObjectRelease();
              if (v38)
              {
                v86[3] = v37;
                uint64_t v84 = &type metadata for Extensions;
                uint64_t v85 = &off_1F0F59030;
                v86[0] = v33;
                swift_unknownObjectRetain();
                sub_1B67DCBF4((uint64_t *)&v83, v86);
                sub_1B62C15C4(&v83, (uint64_t)&v87);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
                uint64_t v39 = v89;
                sub_1B62C14BC(&v87, v89);
                sub_1B6B193C8((uint64_t)v91, v38, v39);
                swift_unknownObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_release();
                sub_1B62C6A70(v11);
                sub_1B66490B8((uint64_t)v90);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v87);
                goto LABEL_5;
              }
            }
            swift_unknownObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            sub_1B62C6A70(v11);
          }
          else
          {
            swift_retain();
          }
          sub_1B66490B8((uint64_t)v90);
          goto LABEL_44;
        case 3uLL:
        case 4uLL:
          uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v16 = *(unsigned int *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
          uint64_t v17 = *(int *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B62C6AA8(v11);
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v18 = sub_1B6E32738();
          uint64_t v19 = swift_conformsToProtocol2();
          if (!v19)
          {
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            unint64_t v87 = 0;
            unint64_t v88 = 0xE000000000000000;
            sub_1B62C6AA8(v11);
            sub_1B62C6AA8(v11);
            sub_1B6E328C8();
            *(void *)&long long v83 = v11;
            sub_1B6E32B18();
            sub_1B6E31948();
            sub_1B6E32BE8();
            __break(1u);
            JUMPOUT(0x1B6920A78);
          }
          BOOL v20 = v17 == -1 && v16 == 0;
          if (v20 || (v17 & 0x80000000) != 0 || v77[1] <= v17) {
            goto LABEL_58;
          }
          uint64_t v21 = *v77 + 12 * (int)v17;
          if (v16 != -1 && *(_DWORD *)(v21 + 8) != v16) {
            goto LABEL_58;
          }
          uint64_t v23 = *(void *)(*(void *)(v78 + 136) + 8 * *(int *)(*v77 + 12 * (int)v17) + 32);
          uint64_t v24 = *(void *)(v23 + 48);
          uint64_t v25 = *(void *)(v24 + 16);
          if (!v25) {
            goto LABEL_58;
          }
          uint64_t v26 = v19;
          uint64_t v27 = *(__int16 *)(v21 + 4);
          uint64_t v28 = v24 + 56;
          while (*(void *)(v28 - 24) != v18)
          {
            v28 += 40;
            if (!--v25) {
              goto LABEL_58;
            }
          }
          uint64_t v64 = v28 - 8;
          uint64_t v63 = *(void *)(v28 - 8);
          uint64_t v62 = *(void *)(v64 + 8);
          if (v63 <= 1) {
            uint64_t v63 = 1;
          }
          uint64_t v65 = sub_1B633D438((uint64_t)v91, *(void *)(v23 + 128) + v62 + v63 * v27, v15, v18);
          if (v65)
          {
LABEL_58:
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B62C6A70(v11);
          }
          else
          {
            MEMORY[0x1F4188790](v65, v66);
            sub_1B6BFB680(v18, v26, v17 | (unint64_t)(v16 << 32), a5);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B62C6A70(v11);
          }
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
          goto LABEL_6;
        case 6uLL:
          unint64_t v40 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          unint64_t v41 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v42 = *(void *)(*(void *)(v78 + v76) + 8 * *(void *)thread_worker_index(&thread_worker_index, v14) + 8);
          uint64_t v43 = *(void *)(v42 + 32);
          swift_retain_n();
          ecs_stack_allocator_push_snapshot(v43);
          unint64_t v87 = v40;
          unint64_t v88 = v41;
          *(void *)&long long v83 = 46;
          *((void *)&v83 + 1) = 0xE100000000000000;
          sub_1B633AF88();
          int v44 = (void *)sub_1B6E325F8();
          v90[0] = v44;
          if (!v44[2])
          {
            swift_bridgeObjectRelease();
LABEL_4:
            uint64_t v6 = *(void *)(v78 + v74);
            unint64_t v87 = 0;
            unint64_t v88 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            unint64_t v87 = 0xD000000000000017;
            unint64_t v88 = 0x80000001B6F3B020;
            sub_1B6E31948();
            unint64_t v7 = v87;
            unint64_t v8 = v88;
            uint64_t v9 = sub_1B6E32148();
            unint64_t v87 = 0;
            (*(void (**)(uint64_t, unint64_t *, unint64_t, unint64_t))(*(void *)v6 + 88))(v9, &v87, v7, v8);
            swift_release();
            swift_bridgeObjectRelease();
            ecs_stack_allocator_pop_snapshot(*(void *)(v42 + 32));
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
            sub_1B62C6A70(v11);
            goto LABEL_5;
          }
          uint64_t v75 = v42;
          uint64_t v45 = v44[4];
          unint64_t v46 = v44[5];
          swift_bridgeObjectRetain();
          sub_1B68E95BC(0, 1);
          LOBYTE(v87) = 1;
          uint64_t v47 = sub_1B6A041D8(v45, v46, v78, 0x100000000);
          char v49 = v48;
          swift_bridgeObjectRelease();
          if (v49) {
            goto LABEL_45;
          }
          unint64_t v87 = v90[0];
          sub_1B62D8750(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
          sub_1B6646D3C();
          uint64_t v50 = sub_1B6E31638();
          uint64_t v52 = v51;
          swift_bridgeObjectRelease();
          sub_1B6A04940(v50, v52, (uint64_t)v97);
          sub_1B62D7A10((uint64_t)v97, (uint64_t)&v98, (unint64_t *)&unk_1EB97E6F0, (uint64_t)&type metadata for ScriptKeyPath);
          if (!*((void *)&v98 + 1))
          {
LABEL_45:
            swift_bridgeObjectRelease();
            uint64_t v42 = v75;
            goto LABEL_4;
          }
          long long v100 = v98;
          uint64_t v53 = v99;
          swift_bridgeObjectRelease();
          ecs_stack_allocator_pop_snapshot(v43);
          uint64_t v54 = sub_1B6E32738();
          uint64_t v55 = swift_conformsToProtocol2();
          if (!v55) {
            goto LABEL_68;
          }
          uint64_t v56 = v55;
          if (v47 != 0xFFFFFFFFLL && v47 << 32 >= (uint64_t)0xFFFFFFFF00000001 && (int)v47 < v77[1])
          {
            uint64_t v57 = *v77 + 12 * (int)v47;
            if (HIDWORD(v47) == -1 || *(_DWORD *)(v57 + 8) == HIDWORD(v47))
            {
              uint64_t v58 = *(void *)(*(void *)(v78 + 136) + 8 * *(int *)(*v77 + 12 * (int)v47) + 32);
              uint64_t v59 = *(void *)(v58 + 48);
              uint64_t v60 = *(void *)(v59 + 16);
              if (v60)
              {
                uint64_t v61 = v59 + 56;
                while (*(void *)(v61 - 24) != v54)
                {
                  v61 += 40;
                  if (!--v60) {
                    goto LABEL_40;
                  }
                }
                uint64_t v69 = v61 - 8;
                uint64_t v68 = *(void *)(v61 - 8);
                uint64_t v67 = *(void *)(v69 + 8);
                if (v68 <= 1) {
                  uint64_t v68 = 1;
                }
                uint64_t v70 = sub_1B633D438((uint64_t)v91, *(void *)(v58 + 128) + v67 + v68 * *(__int16 *)(v57 + 4), v53, v54);
                if ((v70 & 1) == 0)
                {
                  MEMORY[0x1F4188790](v70, v71);
                  sub_1B6BFB680(v54, v56, v47, a4);
                }
              }
            }
          }
LABEL_40:
          long long v101 = v100;
          sub_1B62C7BF4((uint64_t)&v101);
          swift_release();
          sub_1B62C6A70(v11);
LABEL_44:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
LABEL_5:
          sub_1B62C6A70(v11);
LABEL_6:
          if (++v5 == v82) {
            goto LABEL_65;
          }
          break;
        default:
          goto LABEL_69;
      }
    }
LABEL_65:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6920A90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (**a9)(char *, char *, uint64_t), unint64_t a10)
{
  uint64_t v104 = a7;
  uint64_t v105 = a8;
  uint64_t v102 = (void *)a6;
  uint64_t v94 = a2;
  uint64_t v91 = 0;
  int v15 = a5 & 1;
  sub_1B62E17B4();
  long long v101 = v16;
  MEMORY[0x1F4188790](v16, v17);
  long long v100 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1B6E31098();
  uint64_t v90 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99, v19);
  long long v98 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1E4FBC870];
  *(void *)(v10 + 16) = a1;
  v108[0] = v21;
  LOBYTE(v106) = BYTE4(a10) & 1;
  uint64_t v96 = HIDWORD(a10) & 1;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a3;
  uint64_t v92 = a3;
  LODWORD(v103) = v15;
  uint64_t v25 = (uint64_t)v102;
  uint64_t v27 = v104;
  uint64_t v26 = v105;
  sub_1B69342A8(v22, v23, a4, v15, (uint64_t)v102, v104, v105, (uint64_t)a9, (uint64_t)v108, a10 | ((unint64_t)(BYTE4(a10) & 1) << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABE64, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, &qword_1EB97F4B8, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6663E48, type metadata accessor for GraphScript, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB0F0, (void (*)(long long *, uint64_t))sub_1B6D98FD4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B62CA064,
    (uint64_t)&off_1F0F55610,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B69389E8,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B693AB68);
  LOBYTE(v106) = BYTE4(a10) & 1;
  uint64_t v93 = a10;
  uint64_t v28 = v94;
  uint64_t v29 = v24;
  uint64_t v30 = a4;
  uint64_t v31 = a4;
  char v32 = v15;
  uint64_t v33 = v25;
  uint64_t v34 = v27;
  uint64_t v35 = v27;
  uint64_t v36 = v26;
  sub_1B69342A8(v94, v29, v30, v32, v25, v34, v26, (uint64_t)a9, (uint64_t)v108, a10 | ((unint64_t)(BYTE4(a10) & 1) << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABB74, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (unint64_t *)&unk_1EB97F4D0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6663B90, type metadata accessor for SimpleScript, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAFF8, (void (*)(long long *, uint64_t))sub_1B6D98C4C,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (uint64_t)&off_1F0F5C308,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B6937F9C,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B693B954);
  LOBYTE(v25) = v96;
  LOBYTE(v106) = v96;
  uint64_t v37 = v92;
  uint64_t v38 = v31;
  uint64_t v39 = v31;
  LOBYTE(v31) = v103;
  sub_1B6933098(v28, v92, v39, v103, v33, v35, v36, (uint64_t)a9, (uint64_t)v108, a10 | ((unint64_t)v96 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A8D54, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (unint64_t *)&unk_1EB981120, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B66638D8, type metadata accessor for MetalFunctionScript, (void (*)(uint64_t *))sub_1B63061D4, (void (*)(uint64_t *))sub_1B63061D4,
    (uint64_t)&off_1F0F7CDE8,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B693C740,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B693D140);
  LOBYTE(v106) = v25;
  unsigned __int8 v40 = v25;
  uint64_t v41 = v25;
  uint64_t v42 = v93;
  uint64_t v43 = v35;
  uint64_t v44 = v105;
  sub_1B6933098(v28, v37, v38, v31, v33, v43, v105, (uint64_t)a9, (uint64_t)v108, v93 | (v41 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABBE8, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (unint64_t *)&unk_1EB97F4C0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6663620, type metadata accessor for ShaderScript, (void (*)(uint64_t *))sub_1B63061D4, (void (*)(uint64_t *))sub_1B63061D4,
    (uint64_t)&off_1F0F5C050,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B693DD7C,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B693E77C);
  LOBYTE(v106) = v40;
  uint64_t v45 = v38;
  *(void *)&long long v95 = v38;
  uint64_t v46 = v38;
  LOBYTE(v38) = v103;
  uint64_t v47 = v33;
  uint64_t v48 = v104;
  sub_1B69342A8(v28, v37, v46, v103, v47, v104, v44, (uint64_t)a9, (uint64_t)v108, v42 | ((unint64_t)v40 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB6F0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, &qword_1EB97F4E0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6663368, type metadata accessor for EmitterScript, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAF7C, (void (*)(long long *, uint64_t))sub_1B6D988C4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (uint64_t)&off_1F0F5EBD0,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B693754C,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B693F5F8);
  LOBYTE(v106) = v40;
  uint64_t v49 = v45;
  uint64_t v50 = (uint64_t)v102;
  uint64_t v51 = v105;
  unint64_t v97 = a9;
  sub_1B69342A8(v28, v37, v49, v38, (uint64_t)v102, v48, v105, (uint64_t)a9, (uint64_t)v108, v42 | ((unint64_t)v40 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A93E0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (unint64_t *)&unk_1EB97F4A0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B66630B0, type metadata accessor for ParticleInitScript, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB264, (void (*)(long long *, uint64_t))sub_1B6D9853C,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (uint64_t)&off_1F0F796D0,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B6936AF4,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B69405DC);
  LOBYTE(v106) = v40;
  uint64_t v52 = v95;
  char v53 = v38;
  uint64_t v54 = v104;
  sub_1B69342A8(v28, v37, v95, v53, v50, v104, v51, (uint64_t)a9, (uint64_t)v108, v42 | ((unint64_t)v40 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A84C0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, &qword_1EB97F4B0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6662DF8, type metadata accessor for ParticleUpdateScript, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB16C, (void (*)(long long *, uint64_t))sub_1B6D981B4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (uint64_t)&off_1F0F82FB8,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B6936098,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B69415C4);
  LOBYTE(v106) = v40;
  sub_1B69342A8(v28, v37, v52, v103, v50, v54, v51, (uint64_t)v97, (uint64_t)v108, v42 | ((unint64_t)v40 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAC84, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, &qword_1EB981130, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6662B40, type metadata accessor for TriggerScript, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAF00, (void (*)(long long *, uint64_t))sub_1B6D97664,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (void (*)(uint64_t *))sub_1B63061D4,
    (uint64_t)&off_1F0F625B0,
    (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1B6935648,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B69425B0);
  if (v54 && (uint64_t v55 = *(void **)(v54 + 72)) != 0)
  {
    id v56 = objc_msgSend(v55, sel_functionNames);
    uint64_t v57 = sub_1B6E31C28();

    swift_bridgeObjectRetain();
    uint64_t v58 = v91;
    uint64_t v59 = sub_1B693A990(v57);
    uint64_t v91 = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v59 = MEMORY[0x1E4FBC860];
  }
  uint64_t v60 = *(void *)(v51 + 16) + *(void *)(v59 + 16);
  uint64_t v61 = v60 & ~(v60 >> 63);
  swift_bridgeObjectRetain();
  uint64_t v106 = sub_1B6335858(0, v61, 0, MEMORY[0x1E4FBC860]);
  uint64_t v62 = swift_bridgeObjectRetain();
  sub_1B6642244(v62);
  uint64_t v63 = swift_bridgeObjectRetain();
  sub_1B6641518(v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v103 = v106[2];
  if (v103)
  {
    uint64_t v64 = 0;
    uint64_t v94 = v106;
    uint64_t v102 = v106 + 4;
    uint64_t v96 = 0x80000001B6F3E790;
    unint64_t v97 = (void (**)(char *, char *, uint64_t))(v90 + 32);
    long long v95 = xmmword_1B6E77050;
    while (1)
    {
      uint64_t v65 = &v102[2 * v64];
      uint64_t v67 = *v65;
      uint64_t v66 = v65[1];
      uint64_t v68 = v108[0];
      if (!*(void *)(v108[0] + 16)) {
        break;
      }
      sub_1B6E33918();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      uint64_t v69 = sub_1B6E33988();
      uint64_t v70 = -1 << *(unsigned char *)(v68 + 32);
      unint64_t v71 = v69 & ~v70;
      if (((*(void *)(v68 + 56 + ((v71 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v71) & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v72 = *(void *)(v68 + 48);
      uint64_t v73 = (void *)(v72 + 16 * v71);
      BOOL v74 = *v73 == v67 && v73[1] == v66;
      if (!v74 && (sub_1B6E334B8() & 1) == 0)
      {
        uint64_t v75 = ~v70;
        while (1)
        {
          unint64_t v71 = (v71 + 1) & v75;
          if (((*(void *)(v68 + 56 + ((v71 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v71) & 1) == 0) {
            break;
          }
          uint64_t v76 = (void *)(v72 + 16 * v71);
          BOOL v77 = *v76 == v67 && v76[1] == v66;
          if (v77 || (sub_1B6E334B8() & 1) != 0) {
            goto LABEL_7;
          }
        }
LABEL_25:
        swift_bridgeObjectRelease();
LABEL_26:
        uint64_t v104 = v64;
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v106 = 0;
        unint64_t v107 = 0xE000000000000000;
        uint64_t v105 = qword_1EB997FD0;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v106 = (void *)0xD000000000000020;
        unint64_t v107 = v96;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v79 = v106;
        unint64_t v78 = v107;
        char v80 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        uint64_t v81 = qword_1EB985528;
        swift_retain();
        if (v81 != -1) {
          swift_once();
        }
        sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = v95;
        *(void *)(v82 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v82 + 64) = sub_1B678615C();
        *(void *)(v82 + 32) = v79;
        *(void *)(v82 + 40) = v78;
        swift_bridgeObjectRetain();
        sub_1B6E31258();
        swift_bridgeObjectRelease();
        swift_retain();
        long long v83 = v98;
        sub_1B6E31088();
        uint64_t v84 = (uint64_t)v100;
        uint64_t v85 = v101[12];
        uint64_t v86 = v101[16];
        unint64_t v87 = &v100[v101[20]];
        (*v97)(v100, v83, v99);
        *(unsigned char *)(v84 + v85) = v80;
        *(void *)(v84 + v86) = 0;
        *(void *)unint64_t v87 = v79;
        *((void *)v87 + 1) = v78;
        swift_bridgeObjectRetain();
        sub_1B6E31368();
        swift_release();
        sub_1B695BB44(v84, (uint64_t (*)(void))sub_1B62E17B4);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v64 = v104;
        goto LABEL_8;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      if (++v64 == v103) {
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B6921AD4(uint64_t a1, uint64_t a2)
{
  unint64_t result = 0xD000000000000015;
  switch(a2)
  {
    case 0:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000027;
      break;
    case 3:
      return result;
    default:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      unint64_t result = 0xD000000000000018;
      break;
  }
  return result;
}

unint64_t sub_1B6921BE8()
{
  return sub_1B6921AD4(*v0, v0[1]);
}

uint64_t sub_1B6921BF0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6921C5C()
{
  return sub_1B6E33958();
}

uint64_t sub_1B6921CA4()
{
  return sub_1B6E33988();
}

BOOL sub_1B6921D0C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  return *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8) && *(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12);
}

uint64_t sub_1B6921D3C()
{
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 72), -1, -1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v2, (const void *)(v0 + 96), sizeof(v2));
  sub_1B695BBA4((uint64_t)v2);
  memcpy(__dst, (const void *)(v0 + 424), sizeof(__dst));
  sub_1B695BBA4((uint64_t)__dst);
  memcpy(v4, (const void *)(v0 + 752), sizeof(v4));
  sub_1B695BBA4((uint64_t)v4);
  memcpy(v5, (const void *)(v0 + 1080), sizeof(v5));
  sub_1B695BBA4((uint64_t)v5);
  memcpy(v6, (const void *)(v0 + 1408), sizeof(v6));
  sub_1B695BBA4((uint64_t)v6);
  memcpy(v7, (const void *)(v0 + 1736), sizeof(v7));
  sub_1B695BBA4((uint64_t)v7);
  memcpy(v8, (const void *)(v0 + 2064), sizeof(v8));
  sub_1B695BBA4((uint64_t)v8);
  memcpy(v9, (const void *)(v0 + 2392), sizeof(v9));
  sub_1B695BBA4((uint64_t)v9);
  return v0;
}

uint64_t sub_1B6921E54()
{
  sub_1B6921D3C();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6921E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

uint64_t sub_1B6921E90()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1B6921EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  int v5 = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v7 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v7;
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v8 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v8;
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v9 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v9;
  int v10 = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v10;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v11 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v11;
  int v12 = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v12;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  uint64_t v13 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v13;
  int v14 = *(_DWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v14;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B69220BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  int v5 = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  int v6 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  int v7 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  int v8 = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v8;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  int v9 = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v9;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_retain();
  swift_release();
  int v10 = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v10;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_retain();
  swift_release();
  int v11 = *(_DWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v11;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  return a1;
}

void *sub_1B69222F4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x148uLL);
}

uint64_t sub_1B69222FC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_release();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_release();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v6 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v6;
  swift_release();
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v7 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v7;
  swift_release();
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v8 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v8;
  swift_release();
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v9 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v9;
  swift_release();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  uint64_t v10 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v10;
  swift_release();
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  return a1;
}

uint64_t sub_1B69224AC(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 328)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B69224F4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 328) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 328) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ScriptCompilerSystem.Builder()
{
  return sub_1B62C36EC();
}

ValueMetadata *type metadata accessor for ScriptCompilerSystem.CachedBuildResults()
{
  return &type metadata for ScriptCompilerSystem.CachedBuildResults;
}

uint64_t _s18CachedBuildResultsV6ResultOwxx(uint64_t a1)
{
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
}

uint64_t _s18CachedBuildResultsV6ResultOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  BOOL v4 = v3 == 1;
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t))(v5 - 8))(a1);
  *(unsigned char *)(a1 + 40) = v4;
  return a1;
}

uint64_t _s18CachedBuildResultsV6ResultOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    BOOL v5 = v4 == 1;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

__n128 _s18CachedBuildResultsV6ResultOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s18CachedBuildResultsV6ResultOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t _s18CachedBuildResultsV6ResultOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s18CachedBuildResultsV6ResultOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B69227E8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1B6922804(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *_s18CachedBuildResultsV6ResultOMa()
{
  return &_s18CachedBuildResultsV6ResultON;
}

void destroy for CompilationStatus(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 88);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)a1 + 3;
  }
  if (v2)
  {
    if (v2 == 2)
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      unsigned int v3 = *(void **)(a1 + 32);
    }
    else
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
    }
  }
}

uint64_t initializeWithCopy for CompilationStatus(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 88);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v11 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
    int v12 = *(void **)(a2 + 32);
    id v13 = v12;
    *(void *)(a1 + 32) = v12;
    char v10 = 2;
  }
  else if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v7 = a2 + 56;
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 80) = v8;
    uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9(a1 + 56, v7, v8);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *(void *)a1 = *(void *)a2;
  }
  *(unsigned char *)(a1 + 88) = v10;
  return a1;
}

uint64_t assignWithCopy for CompilationStatus(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4)
    {
      if (v4 == 2)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      }
      else
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 88);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v11 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      int v12 = *(void **)(a2 + 32);
      id v13 = v12;
      *(void *)(a1 + 32) = v12;
      char v10 = 2;
    }
    else if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      uint64_t v7 = a2 + 56;
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 80) = v8;
      uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(a1 + 56, v7, v8);
      char v10 = 1;
    }
    else
    {
      char v10 = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 88) = v10;
  }
  return a1;
}

__n128 initializeWithTake for CompilationStatus(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CompilationStatus(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4)
    {
      if (v4 == 2)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      }
      else
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 88);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v8 = 2;
    }
    else if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      long long v7 = *(_OWORD *)(a2 + 16);
      char v8 = 1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    else
    {
      char v8 = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 88) = v8;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CompilationStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CompilationStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 73) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 88) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6922DE0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 88);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1B6922DFC(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    unsigned int v2 = a2 - 3;
    *(void *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 88) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CompilationStatus()
{
  return &type metadata for CompilationStatus;
}

ValueMetadata *type metadata accessor for ScriptCompilerSystem.CompilationHandle()
{
  return &type metadata for ScriptCompilerSystem.CompilationHandle;
}

void *sub_1B6922E4C(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = a3[7];
    char v8 = (void *)(a1 + v7);
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1B6E30F48();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1B638C038(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(void *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B692300C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_1B6E30F48();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B69230E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B638C038(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1B6923258(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1B638C038(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

uint64_t sub_1B6923444(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B638C038(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

unsigned char *sub_1B69235B0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1B638C038(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

uint64_t sub_1B6923794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B69237A8);
}

uint64_t sub_1B69237A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B638C038(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_1B69238A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B69238BC);
}

void sub_1B69238BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B638C038(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = a2;
  }
}

void sub_1B69239AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScriptingConfiguration();
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B695BADC(a1 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptingConfiguration);
  if (v7[2] != 1) {
    goto LABEL_29;
  }
  if (!*(void *)(v2 + 24))
  {
    id v15 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer)
        ? (id)swift_unknownObjectRetain()
        : MTLCreateSystemDefaultDevice();
    *(void *)(v2 + 24) = v15;
    swift_unknownObjectRelease();
    if (!*(void *)(v2 + 24))
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v16 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v22 = 0;
      swift_retain();
      sub_1B6B33E34(v16, &v22, 0xD000000000000029, 0x80000001B6F3E470);
      swift_release();
      swift_release();
      goto LABEL_29;
    }
  }
  sub_1B6874F74(a1, 1, 0);
  uint64_t v8 = *(void *)&v7[*(int *)(v4 + 32)];
  *(void *)(v2 + 16) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  uint64_t v10 = dispatch_group_create();
  swift_retain();
  swift_retain();
  sub_1B6958ADC(v10, v2, v8, v9, v2);
  sub_1B6E321D8();
  sub_1B6958ADC(v10, v2, v8, v9, v2);
  uint64_t v11 = *(void **)(v9 + 16);
  if (!v11)
  {

    swift_release();
    swift_release_n();
LABEL_29:
    sub_1B695BB44((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptingConfiguration);
    return;
  }
  id v12 = v11;
  swift_willThrow();

  swift_release();
  swift_release_n();
  id v24 = v11;
  id v13 = v11;
  sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:

    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v22 = 0xD00000000000001FLL;
    unint64_t v23 = 0x80000001B6F3E4A0;
    swift_getErrorValue();
    sub_1B6E33868();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    int v19 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v22 = 0;
    swift_retain();
    sub_1B6B33E34(v19, &v22, v17, v18);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    goto LABEL_29;
  }
  if (v23 != 2)
  {
    sub_1B695945C(v22, v23);
    goto LABEL_24;
  }

  if (*v7 == 1)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v14 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v21 = 0;
    swift_retain();
    sub_1B6B33E34(v14, &v21, 0xD000000000000032, 0x80000001B6F3E4C0);
    swift_release();
    swift_release();
  }
  sub_1B695BB44((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScriptingConfiguration);
}

uint64_t sub_1B6923F08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))
{
  unsigned __int8 v67 = 0;
  long long v14 = *(_OWORD *)(v8 + 24);
  v81[0] = *(_OWORD *)(v8 + 8);
  v81[1] = v14;
  uint64_t v82 = *(void *)(v8 + 40);
  uint64_t v15 = swift_retain();
  sub_1B62C9DA8(v15, (uint64_t)v81, 0x200000000, v68);
  sub_1B62D7A10((uint64_t)v68, (uint64_t)v69, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v69[0])
  {
    swift_release();
    return 0;
  }
  long long v76 = v69[0];
  long long v77 = v69[1];
  uint64_t v78 = v70;
  if (v75 <= 0 || (uint64_t v60 = v72) == 0)
  {
    swift_release();
    sub_1B632F170(v68);
    return 0;
  }
  uint64_t v56 = v71;
  uint64_t v57 = a1;
  int v16 = v74;
  uint64_t v17 = v74[4];
  int v64 = *(unsigned __int8 *)(v73 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v55 = (uint64_t)(v74 + 6);
  uint64_t v18 = a3(0);
  sub_1B62AC710(0, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v51 = v16 + 13;
  uint64_t v52 = v16 + 8;
  uint64_t v53 = v19;
  uint64_t v54 = v18;
  uint64_t v49 = v19 - 8;
  uint64_t v50 = v18 - 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v20 = 0;
  uint64_t v59 = v17;
  uint64_t v58 = v16;
  do
  {
    uint64_t v21 = (unsigned int *)(v56 + 48 * v20);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    id v24 = (uint64_t *)*((void *)v21 + 2);
    uint64_t v25 = *((void *)v21 + 4);
    uint64_t v26 = *((void *)v21 + 5);
    uint64_t v62 = *((void *)v21 + 3);
    uint64_t v63 = v20;
    if (v64)
    {
      uint64_t v27 = *(os_unfair_lock_s **)(v26 + 376);
      swift_retain();
      os_unfair_lock_lock(v27);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v17);
    sub_1B62D7A10(v55, (uint64_t)v83, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v28 = v16[4];
    uint64_t v29 = *(void *)(*(void *)(*(void *)(*(void *)(v26 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v16[6] = ecs_stack_allocator_allocate(v28, 48 * v29, 8);
    v16[7] = v29;
    v52[1] = 0;
    void v52[2] = 0;
    *uint64_t v52 = 0;
    swift_release();
    uint64_t v30 = sub_1B62C9024(v54, a7, v24, v62, v25, (uint64_t)v16);
    uint64_t v31 = sub_1B62C9024(v53, (uint64_t)&off_1F0F836B8, v24, v62, v25, (uint64_t)v16);
    uint64_t v32 = v31;
    if (v24)
    {
      if (v25)
      {
        uint64_t v33 = *(void *)(*(void *)v50 + 72);
        uint64_t v34 = *(void *)(*(void *)v49 + 72);
        do
        {
          uint64_t v35 = *v24++;
          a8(v26, v35, v30, v32, a2, v57, &v67);
          v32 += v34;
          v30 += v33;
          --v25;
        }
        while (v25);
      }
    }
    else if (v23 != v22)
    {
      uint64_t v36 = *(void *)(*(void *)v50 + 72);
      uint64_t v37 = *(void *)(*(void *)v49 + 72);
      uint64_t v38 = v31 + v37 * v23;
      uint64_t v39 = v30 + v36 * v23;
      do
      {
        a8(v26, v23++, v39, v38, a2, v57, &v67);
        v38 += v37;
        v39 += v36;
      }
      while (v22 != v23);
    }
    v79[0] = v76;
    v79[1] = v77;
    uint64_t v80 = v78;
    int v16 = v58;
    sub_1B6345178(v58, (unsigned __int16 **)v79, (uint64_t)v83);
    uint64_t v17 = v59;
    if (*(void *)(v58[13] + 16))
    {
      uint64_t v40 = swift_bridgeObjectRetain();
      sub_1B639147C(v40, v26);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = v58[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v42 + 16));
      }
      else
      {
        uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v42 + 24) >= 2uLL)
        {
          sub_1B638C038(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          uint64_t v43 = (void *)swift_allocObject();
          size_t v44 = j__malloc_size(v43);
          void v43[2] = 0;
          v43[3] = 2 * ((uint64_t)(v44 - 32) / 72);
        }
        *uint64_t v51 = v43;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v58[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        uint64_t v45 = *(char **)(v26 + 232);
        uint64_t v46 = *(char **)(v26 + 256);
        if (v45 == v46)
        {
          uint64_t v47 = *(char **)(v26 + 240);
        }
        else
        {
          sub_1B666018C(v46, v45);
          uint64_t v46 = *(char **)(v26 + 232);
          uint64_t v47 = *(char **)(v26 + 240);
          if (v47 == v46)
          {
            uint64_t v47 = 0;
            uint64_t v46 = 0;
            *(void *)(v26 + 232) = 0;
            *(void *)(v26 + 240) = 0;
          }
        }
        *(void *)(v26 + 248) = v47;
        *(void *)(v26 + 256) = v46;
      }
    }
    ecs_stack_allocator_pop_snapshot(v59);
    if (v64)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 376));
    }
    swift_release();
    uint64_t v20 = v63 + 1;
  }
  while (v63 + 1 != v60);
  swift_release();
  sub_1B632F170(v68);
  sub_1B632F170(v68);
  return v67;
}

uint64_t sub_1B69244FC(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v49 = a1;
  uint64_t v50 = v2;
  uint64_t v4 = a1[10];
  uint64_t v53 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  uint64_t v52 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v56;
  uint64_t v10 = v62;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v54 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v55 = *v15;
  *((void *)&v55 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v55, (uint64_t)&v59);
    if (v62[88] == 255) {
      break;
    }
    unint64_t v20 = v59;
    uint64_t v21 = v61;
    uint64_t v22 = v60;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v55);
    if (v20 == type metadata accessor for ShaderScript(0))
    {
      uint64_t v23 = v10;
      id v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v52[1] > v22)
      {
        uint64_t v51 = *v52;
        uint64_t v25 = *v52 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v50 + 80)
                                                  + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v47 = *(void *)(*(void *)(*(void *)(v50 + 80) + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v48 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v47 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v48)
            {
              if (*(void *)(*(void *)(v48 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v48 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v50 + 136) + 8 * *(int *)(v51 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v48)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B6925560(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v51 + 12 * (int)v22 + 4), (uint64_t)&v55, v50, v20, v22 | (unint64_t)(v21 << 32), v49, v46);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v55);
      uint64_t v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v55);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v54)
    {
      unint64_t v18 = *(void *)(v53 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v54) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v53 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v54) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v53 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v54)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v53 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v54)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v53 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v57 = 0;
    long long v55 = 0u;
    memset(v56, 0, sizeof(v56));
    char v58 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(v49[10] + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for ShaderScript);
    swift_bridgeObjectRelease();
    v49[10] = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v49[10] + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock((os_unfair_lock_t)v49[9]);
  swift_release();
  return v42;
}

uint64_t sub_1B6924B00(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v49 = a1;
  uint64_t v50 = v2;
  uint64_t v4 = a1[10];
  uint64_t v53 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  uint64_t v52 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v56;
  uint64_t v10 = v62;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v54 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v55 = *v15;
  *((void *)&v55 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v55, (uint64_t)&v59);
    if (v62[88] == 255) {
      break;
    }
    unint64_t v20 = v59;
    uint64_t v21 = v61;
    uint64_t v22 = v60;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v55);
    if (v20 == (void *)type metadata accessor for MetalFunctionScript(0))
    {
      uint64_t v23 = v10;
      id v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v52[1] > v22)
      {
        uint64_t v51 = *v52;
        uint64_t v25 = *v52 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v50 + 80)
                                                  + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v47 = *(void *)(*(void *)(*(void *)(v50 + 80) + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v48 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v47 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v48)
            {
              if (*(void *)(*(void *)(v48 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v48 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v50 + 136) + 8 * *(int *)(v51 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v48)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B69263FC(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v51 + 12 * (int)v22 + 4), (uint64_t)&v55, v50, v20, v22 | (unint64_t)(v21 << 32), v49, v46);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v55);
      uint64_t v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v55);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v54)
    {
      unint64_t v18 = *(void *)(v53 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v54) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v53 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v54) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v53 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v54)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v53 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v54)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v53 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v57 = 0;
    long long v55 = 0u;
    memset(v56, 0, sizeof(v56));
    char v58 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(v49[10] + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for MetalFunctionScript);
    swift_bridgeObjectRelease();
    v49[10] = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v49[10] + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock((os_unfair_lock_t)v49[9]);
  swift_release();
  return v42;
}

uint64_t sub_1B6925104(uint64_t result)
{
  if (*(unsigned char *)(result + 48) == 1)
  {
    uint64_t v2 = result;
    *(void *)(v1 + 16) = result;
    uint64_t v3 = *(void **)(result + 176);
    swift_retain();
    uint64_t v4 = sub_1B6B3AB14((uint64_t)&type metadata for DiagnosticsTrackerInstance, (uint64_t)&off_1F0F96208, v3);
    uint64_t result = swift_release();
    if (v4)
    {
      swift_unknownObjectRelease();
      v11[0] = sub_1B67F5DD0(MEMORY[0x1E4FBC860]);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A5A28, (uint64_t (*)(_OWORD *))sub_1B63061D4, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, type metadata accessor for GraphScript);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A5598, (uint64_t (*)(_OWORD *))sub_1B63061D4, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, type metadata accessor for SimpleScript);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A5EB8, (uint64_t (*)(_OWORD *))sub_1B63061D4, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, type metadata accessor for MetalFunctionScript);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A57E0, (uint64_t (*)(_OWORD *))sub_1B63061D4, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, type metadata accessor for ShaderScript);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A5350, (uint64_t (*)(_OWORD *))sub_1B63061D4, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, type metadata accessor for EmitterScript);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A6100, (uint64_t (*)(_OWORD *))sub_1B63061D4, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, type metadata accessor for ParticleInitScript);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A5C70, (uint64_t (*)(_OWORD *))sub_1B63061D4, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, type metadata accessor for ParticleUpdateScript);
      sub_1B6939B54(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B63A5108, (uint64_t (*)(_OWORD *))sub_1B63061D4, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, type metadata accessor for TriggerScript);
      uint64_t v5 = v11[0];
      uint64_t v6 = *(void **)(v2 + 176);
      swift_retain();
      uint64_t v7 = sub_1B6B3AB14((uint64_t)&type metadata for DiagnosticsTrackerInstance, (uint64_t)&off_1F0F96208, v6);
      uint64_t v9 = v8;
      swift_release();
      if (v7)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v5, ObjectType, v9);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1B6925560(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t *a6, void *a7)
{
  uint64_t v151 = a7;
  uint64_t v153 = a6;
  unint64_t v154 = a5;
  unint64_t v181 = a4;
  uint64_t v145 = a3;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v11 = v10;
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)v136 - v13;
  sub_1B62AC710(0, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v15, v17);
  unint64_t v19 = (char *)v136 - v18;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v158);
  if (v163)
  {
    if (v163 != 1)
    {
      sub_1B69596A8(a1, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v158, v164);
      sub_1B62CAAD8((uint64_t)v164, (uint64_t)&v165);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v14, a1, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      *((void *)&v166 + 1) = v11;
      uint64_t v167 = &off_1F0F836B8;
      unint64_t v44 = sub_1B62C12C4((uint64_t *)&v165);
      sub_1B6959704(a1, (uint64_t)v44, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      LOBYTE(v168) = 1;
      sub_1B6CE1380((uint64_t)&v165, v181, v154);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v164);
    }
    uint64_t v152 = v7;
    uint64_t v146 = type metadata accessor for ShaderScript;
    uint64_t v149 = a1;
    uint64_t v150 = type metadata accessor for ScriptCompileAttempt;
    sub_1B69596A8(a1, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    id v139 = v159;
    uint64_t v147 = v161;
    uint64_t v148 = v160;
    uint64_t v21 = (uint64_t)v19;
    sub_1B62B57A8(v158, v157);
    sub_1B62B57A8(&v162, v156);
    v19[16] = 1;
    uint64_t v22 = type metadata accessor for ShaderScript(0);
    uint64_t v23 = &v19[*(int *)(v22 + 24)];
    uint64_t v24 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    *(void *)&v19[*(int *)(v22 + 28)] = &unk_1F0F83CD8;
    *(void *)unint64_t v19 = 0;
    *((void *)v19 + 1) = 0xE000000000000000;
    uint64_t v25 = &v19[v11[9]];
    *(void *)uint64_t v25 = 0;
    v25[8] = 1;
    v19[v11[10]] = 0;
    *(void *)&v19[v11[11]] = 0;
    int v26 = &v19[v11[12]];
    *(void *)int v26 = 0;
    *((void *)v26 + 1) = 0xE000000000000000;
    *(void *)&v19[v11[13]] = MEMORY[0x1E4FBC860];
    uint64_t v27 = v16[9];
    *(void *)(v21 + v27) = 0;
    uint64_t v144 = v16[10];
    *(void *)(v21 + v144) = 0;
    uint64_t v28 = v16[11];
    *(void *)(v21 + v28) = 0;
    *(void *)(v21 + v16[12]) = 0;
    *(unsigned char *)(v21 + v16[13]) = 0;
    uint64_t v29 = v21 + v16[14];
    *(void *)uint64_t v29 = 0;
    *(unsigned char *)(v29 + 8) = 1;
    uint64_t v30 = (uint64_t *)(v21 + v16[15]);
    *uint64_t v30 = 0;
    v30[1] = 0;
    sub_1B62CAAD8((uint64_t)v157, (uint64_t)&v165);
    uint64_t v31 = MEMORY[0x1E4FBC840] + 8;
    swift_dynamicCast();
    char v32 = v146;
    sub_1B695A158((uint64_t)v14, v21, (unint64_t *)&unk_1EB97F4C0, v146, (uint64_t)&off_1EB981F10);
    *(void *)(v21 + v27) = v139;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v21 + v28) = v147;
    uint64_t v33 = v144;
    swift_bridgeObjectRelease();
    *(void *)(v21 + v33) = v148;
    sub_1B62CAAD8((uint64_t)v156, (uint64_t)&v165);
    uint64_t v148 = (void *)v31;
    swift_dynamicCast();
    long long v34 = *(_OWORD *)v164;
    sub_1B678FE58(*v30);
    *(_OWORD *)uint64_t v30 = v34;
    sub_1B6959704(v21, v149, (unint64_t *)&unk_1EB97F4C0, v32, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v150);
    uint64_t v35 = v154;
    uint64_t v36 = v145;
    sub_1B68507B0(v21, v154);
    *((void *)&v166 + 1) = v16;
    uint64_t v167 = &off_1F0F61BF0;
    uint64_t v37 = sub_1B62C12C4((uint64_t *)&v165);
    uint64_t v137 = v21;
    sub_1B6959704(v21, (uint64_t)v37, (unint64_t *)&qword_1EB97E730, v32, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v168) = 0;
    sub_1B6CE1380((uint64_t)&v165, v181, v35);
    uint64_t v38 = sub_1B695F61C(v35);
    if (v38)
    {
      sub_1B6920048(v36, v38, v39, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v156, (uint64_t)&v165);
    int v40 = swift_dynamicCast();
    uint64_t v41 = v152;
    if (v40)
    {
      uint64_t v42 = v164[0];
      swift_bridgeObjectRelease();
      *(void *)&long long v165 = MEMORY[0x1E4FBC860];
      *((void *)&v165 + 1) = MEMORY[0x1E4FBC860];
      sub_1B6927214(v36, v42);
      swift_bridgeObjectRelease();
      uint64_t v43 = v154;
      sub_1B68507C8(v165, *((uint64_t *)&v165 + 1), v154);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B62CAAD8((uint64_t)v156, (uint64_t)&v165);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v43 = v154;
    }
    unint64_t v45 = v151;
    sub_1B63BAF34(v43);
    long long v46 = *(_OWORD *)(v45 + 33);
    v178[0] = *(_OWORD *)(v45 + 31);
    v178[1] = v46;
    uint64_t v179 = v45[35];
    sub_1B62C9DA8(v36, (uint64_t)v178, 0x200000000, v164);
    sub_1B62D7A10((uint64_t)v164, (uint64_t)&v165, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v165)
    {
      long long v173 = v165;
      long long v174 = v166;
      uint64_t v175 = v167;
      if (v172 > 0)
      {
        uint64_t v144 = v169;
        if (v169)
        {
          unint64_t v181 = HIDWORD(v154);
          uint64_t v143 = v168;
          uint64_t v47 = (uint64_t (*)(uint64_t))v171[4];
          LODWORD(v150) = *(unsigned __int8 *)(v170 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v142 = v171 + 6;
          uint64_t v148 = (void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v151 = v171;
          uint64_t v140 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
          uint64_t v141 = v171 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v48 = 0;
          uint64_t v146 = v47;
          while (1)
          {
            uint64_t v152 = v41;
            uint64_t v49 = (unsigned int *)(v143 + 48 * v48);
            uint64_t v51 = *v49;
            uint64_t v50 = v49[1];
            uint64_t v52 = *((void *)v49 + 3);
            uint64_t v153 = (uint64_t *)*((void *)v49 + 2);
            uint64_t v53 = *((void *)v49 + 4);
            uint64_t v54 = *((void *)v49 + 5);
            uint64_t v149 = v48;
            uint64_t v147 = v50;
            if (v150)
            {
              long long v55 = *(os_unfair_lock_s **)(v54 + 376);
              swift_retain();
              os_unfair_lock_lock(v55);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v54 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot((uint64_t)v47);
            sub_1B62D7A10((uint64_t)v142, (uint64_t)v180, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v56 = v151;
            uint64_t v57 = v151[4];
            uint64_t v58 = *(void *)(*(void *)(*(void *)(*(void *)(v54 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v56[6] = ecs_stack_allocator_allocate(v57, 48 * v58, 8);
            v56[7] = v58;
            unint64_t v59 = v141;
            v141[1] = 0;
            v59[2] = 0;
            *unint64_t v59 = 0;
            swift_release();
            int v60 = v153;
            uint64_t v61 = sub_1B62C9024((uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, v153, v52, v53, (uint64_t)v56);
            uint64_t v62 = sub_1B62C9024((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1F0F68E78, v60, v52, v53, (uint64_t)v56);
            if (!v60) {
              break;
            }
            int v63 = v154;
            uint64_t v64 = 104;
            if (v53)
            {
              uint64_t v65 = 0;
              uint64_t v47 = v146;
              while (1)
              {
                if (*(unsigned char *)(v61 + v65 * v64) == 2)
                {
                  uint64_t v66 = v61 + v65 * v64;
                  int v68 = *(_DWORD *)(v66 + 16);
                  int v67 = *(_DWORD *)(v66 + 20);
                  if (v68 == v63 && v67 == v181)
                  {
                    uint64_t v70 = v153[v65];
                    char v71 = *(unsigned char *)(v54 + 184);
                    uint64_t v72 = swift_retain();
                    if (v71) {
                      goto LABEL_107;
                    }
                    uint64_t v73 = *(int *)(*(void *)(v54 + 168) + 4 * v70);
                    int v74 = *(_DWORD *)(*(void *)(v72 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                    + 12 * (int)v73
                                    + 8);
                    swift_release();
                    if (v73 == -1 && v74 == 0)
                    {
                      int v63 = v154;
                      uint64_t v64 = 104;
                    }
                    else
                    {
                      uint64_t v64 = 104;
                      if ((v73 & 0x80000000) == 0
                        && v148[1] > v73
                        && (v74 != -1 ? (BOOL v77 = *(_DWORD *)(*v148 + 12 * (int)v73 + 8) == v74) : (BOOL v77 = 1), v77))
                      {
                        uint64_t v78 = *(void *)(*(void *)(v145 + 136) + 8 * *(int *)(*v148 + 12 * (int)v73) + 32);
                        uint64_t v79 = (void *)thread_worker_index(&thread_worker_index, v75);
                        uint64_t v82 = *(void *)(*(void *)(v81 + v140) + 8 * *v79 + 8);
                        uint64_t v83 = *(void *)(v78 + 192);
                        if (v83)
                        {
                          uint64_t v84 = *(void *)(v78 + 208);
                          uint64_t v85 = 8 * (v80 >> 6);
                          *(void *)(v83 + v85) |= 1 << v80;
                          *(void *)(v84 + v85) &= ~(1 << v80);
                        }
                        int v63 = v154;
                        if (*(unsigned char *)(*(void *)(v78 + 40) + 213) == 1)
                        {
                          uint64_t v86 = *(void *)(v78 + 48);
                          uint64_t v87 = *(void *)(v86 + 16);
                          uint64_t v138 = v82;
                          if (v87)
                          {
                            unint64_t v88 = (uint64_t *)(v86 + 56);
                            while ((ValueMetadata *)*(v88 - 3) != &type metadata for PropagateDirtiness)
                            {
                              v88 += 5;
                              if (!--v87) {
                                goto LABEL_50;
                              }
                            }
                            uint64_t v89 = v80;
                            uint64_t v147 = *v88;
                          }
                          else
                          {
LABEL_50:
                            uint64_t v89 = v80;
                            uint64_t v147 = 0;
                          }
                          uint64_t v90 = *(void *)(v78 + 128);
                          char v91 = *(unsigned char *)(v78 + 184);
                          uint64_t v92 = swift_retain();
                          if (v91) {
                            goto LABEL_107;
                          }
                          uint64_t v93 = v90 + v147;
                          unsigned int v94 = *(_DWORD *)(*(void *)(v78 + 168) + 4 * v89);
                          long long v95 = (unsigned int *)(v93 + 8 * v89);
                          uint64_t v96 = *(unsigned int *)(*(void *)(v92 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                                + 12 * (int)v94
                                                + 8);
                          swift_release();
                          uint64_t v97 = *v95;
                          uint64_t v98 = v95[1];
                          if (v97 != -1 || v98 != 0) {
                            sub_1B6398CA0(v155, v94 | (unint64_t)(v96 << 32), v97 | (v98 << 32));
                          }
                          int v63 = v154;
                          uint64_t v64 = 104;
                          uint64_t v47 = v146;
                        }
                      }
                      else
                      {
                        int v63 = v154;
                      }
                    }
                    *(void *)(v62 + 248 * v65 + 232) = 0;
                  }
                }
                if (++v65 == v53) {
                  goto LABEL_62;
                }
              }
            }
LABEL_61:
            uint64_t v47 = v146;
LABEL_62:
            v176[0] = v173;
            v176[1] = v174;
            uint64_t v177 = v175;
            uint64_t v103 = v152;
            sub_1B6345178(v151, (unsigned __int16 **)v176, (uint64_t)v180);
            uint64_t v41 = v103;
            sub_1B634507C((char *)v54);
            ecs_stack_allocator_pop_snapshot((uint64_t)v47);
            if (v150)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 376));
            }
            swift_release();
            uint64_t v48 = v149 + 1;
            if (v149 + 1 == v144)
            {
              sub_1B632F170(v164);
              goto LABEL_104;
            }
          }
          uint64_t v100 = v147;
          int v101 = v154;
          uint64_t v102 = 104;
          if (v51 == v147) {
            goto LABEL_61;
          }
          uint64_t v47 = v146;
          while (1)
          {
            if (*(unsigned char *)(v61 + v51 * v102) != 2) {
              goto LABEL_67;
            }
            uint64_t v104 = v61 + v51 * v102;
            int v106 = *(_DWORD *)(v104 + 16);
            int v105 = *(_DWORD *)(v104 + 20);
            if (v106 != v101 || v105 != v181) {
              goto LABEL_67;
            }
            char v108 = *(unsigned char *)(v54 + 184);
            uint64_t v109 = swift_retain();
            if (v108) {
              goto LABEL_107;
            }
            uint64_t v110 = *(int *)(*(void *)(v54 + 168) + 4 * v51);
            int v111 = *(_DWORD *)(*(void *)(v109 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v110 + 8);
            swift_release();
            if (v110 != -1 || v111 != 0)
            {
              uint64_t v102 = 104;
              if ((v110 & 0x80000000) != 0
                || v148[1] <= v110
                || (v111 != -1 ? (BOOL v114 = *(_DWORD *)(*v148 + 12 * (int)v110 + 8) == v111) : (BOOL v114 = 1), !v114))
              {
                int v101 = v154;
                goto LABEL_66;
              }
              uint64_t v115 = *(void *)(*(void *)(v145 + 136) + 8 * *(int *)(*v148 + 12 * (int)v110) + 32);
              uint64_t v116 = (void *)thread_worker_index(&thread_worker_index, v112);
              uint64_t v119 = *(void *)(*(void *)(v118 + v140) + 8 * *v116 + 8);
              uint64_t v120 = *(void *)(v115 + 192);
              if (v120)
              {
                uint64_t v121 = *(void *)(v115 + 208);
                uint64_t v122 = 8 * ((uint64_t)v117 >> 6);
                *(void *)(v120 + v122) |= 1 << (char)v117;
                *(void *)(v121 + v122) &= ~(1 << (char)v117);
              }
              int v101 = v154;
              if (*(unsigned char *)(*(void *)(v115 + 40) + 213) != 1) {
                goto LABEL_66;
              }
              uint64_t v123 = *(void *)(v115 + 48);
              uint64_t v124 = *(void *)(v123 + 16);
              v136[1] = v119;
              uint64_t v153 = v117;
              if (v124)
              {
                uint64_t v125 = (uint64_t *)(v123 + 56);
                while ((ValueMetadata *)*(v125 - 3) != &type metadata for PropagateDirtiness)
                {
                  v125 += 5;
                  if (!--v124) {
                    goto LABEL_93;
                  }
                }
                uint64_t v138 = *v125;
              }
              else
              {
LABEL_93:
                uint64_t v138 = 0;
              }
              uint64_t v126 = *(void *)(v115 + 128);
              char v127 = *(unsigned char *)(v115 + 184);
              uint64_t v128 = swift_retain();
              if (v127)
              {
LABEL_107:
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v129 = v126 + v138;
              unsigned int v130 = *(_DWORD *)(*(void *)(v115 + 168) + 4 * (void)v153);
              uint64_t v131 = (unsigned int *)(v129 + 8 * (void)v153);
              uint64_t v153 = (uint64_t *)*(unsigned int *)(*(void *)(v128 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                                + 12 * (int)v130
                                                + 8);
              swift_release();
              uint64_t v132 = *v131;
              uint64_t v133 = v131[1];
              if (v132 != -1 || v133 != 0) {
                sub_1B6398CA0(v155, v130 | ((void)v153 << 32), v132 | (v133 << 32));
              }
            }
            int v101 = v154;
            uint64_t v102 = 104;
LABEL_66:
            *(void *)(v62 + 248 * v51 + 232) = 0;
LABEL_67:
            if (++v51 == v100) {
              goto LABEL_62;
            }
          }
        }
      }
LABEL_104:
      sub_1B632F170(v164);
      uint64_t v135 = v137;
    }
    else
    {
      uint64_t v135 = v137;
    }
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v156);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v157);
    return sub_1B69596A8(v135, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  }
  return result;
}

uint64_t sub_1B69263FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v143 = a7;
  uint64_t v144 = a6;
  unint64_t v173 = a5;
  uint64_t v146 = a4;
  uint64_t v138 = a3;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v11 = v10;
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v129 - v13;
  sub_1B62AC710(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v15, v17);
  unint64_t v19 = (char *)&v129 - v18;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v150);
  if (v155)
  {
    if (v155 != 1)
    {
      sub_1B69596A8(a1, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v150, v156);
      sub_1B62CAAD8((uint64_t)v156, (uint64_t)&v157);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v14, a1, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      *((void *)&v158 + 1) = v11;
      id v159 = &off_1F0F836B8;
      uint64_t v43 = sub_1B62C12C4((uint64_t *)&v157);
      sub_1B6959704(a1, (uint64_t)v43, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      LOBYTE(v160) = 1;
      sub_1B6CE1380((uint64_t)&v157, (uint64_t)v146, v173);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v156);
    }
    uint64_t v145 = v7;
    uint64_t v136 = type metadata accessor for MetalFunctionScript;
    uint64_t v141 = a1;
    uint64_t v142 = type metadata accessor for ScriptCompileAttempt;
    sub_1B69596A8(a1, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    id v130 = v151;
    uint64_t v140 = v152;
    uint64_t v137 = v153;
    sub_1B62B57A8(v150, v149);
    sub_1B62B57A8(&v154, v148);
    v19[16] = 1;
    uint64_t v21 = (int *)type metadata accessor for MetalFunctionScript(0);
    uint64_t v22 = &v19[v21[6]];
    uint64_t v23 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v19[v21[8]] = 0;
    *(void *)&v19[v21[7]] = &unk_1F0F83C48;
    *(void *)unint64_t v19 = 0xD000000000000129;
    *((void *)v19 + 1) = 0x80000001B6F3D5A0;
    uint64_t v24 = &v19[v11[9]];
    *(void *)uint64_t v24 = 0;
    v24[8] = 1;
    v19[v11[10]] = 0;
    *(void *)&v19[v11[11]] = 0;
    uint64_t v25 = &v19[v11[12]];
    *(void *)uint64_t v25 = 0;
    *((void *)v25 + 1) = 0xE000000000000000;
    *(void *)&v19[v11[13]] = MEMORY[0x1E4FBC860];
    uint64_t v26 = v16[9];
    *(void *)&v19[v26] = 0;
    id v139 = v19;
    uint64_t v27 = v16[10];
    *(void *)&v139[v27] = 0;
    uint64_t v28 = v16[11];
    *(void *)&v139[v28] = 0;
    *(void *)&v139[v16[12]] = 0;
    v139[v16[13]] = 0;
    uint64_t v29 = &v139[v16[14]];
    *(void *)uint64_t v29 = 0;
    v29[8] = 1;
    uint64_t v30 = v16[15];
    v139[v30] = 1;
    sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v157);
    swift_dynamicCast();
    uint64_t v31 = (uint64_t)v14;
    char v32 = v136;
    sub_1B695A158(v31, (uint64_t)v139, (unint64_t *)&unk_1EB981120, v136, (uint64_t)&off_1EB984EE8);
    *(void *)&v139[v26] = v130;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&v139[v28] = v137;
    swift_bridgeObjectRelease();
    *(void *)&v139[v27] = v140;
    uint64_t v33 = (uint64_t)v139;
    sub_1B62CAAD8((uint64_t)v148, (uint64_t)&v157);
    swift_dynamicCast();
    *(unsigned char *)(v33 + v30) = 0;
    sub_1B6959704(v33, v141, (unint64_t *)&unk_1EB981120, v32, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v142);
    uint64_t v34 = v173;
    uint64_t v35 = v138;
    sub_1B68507E0(v33, v173);
    *((void *)&v158 + 1) = v16;
    id v159 = &off_1F0F61BF0;
    uint64_t v36 = sub_1B62C12C4((uint64_t *)&v157);
    sub_1B6959704(v33, (uint64_t)v36, (unint64_t *)&qword_1EB981060, v32, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v160) = 0;
    sub_1B6CE1380((uint64_t)&v157, (uint64_t)v146, v34);
    uint64_t v37 = sub_1B695F644(v34);
    if (v37)
    {
      sub_1B6920048(v35, v37, v38, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v148, (uint64_t)&v157);
    if (swift_dynamicCast())
    {
      uint64_t v39 = *(void *)&v156[0];
      swift_bridgeObjectRelease();
      *(void *)&long long v157 = MEMORY[0x1E4FBC860];
      *((void *)&v157 + 1) = MEMORY[0x1E4FBC860];
      sub_1B6927214(v35, v39);
      swift_bridgeObjectRelease();
      unint64_t v40 = v173;
      sub_1B68507F8(v157, *((uint64_t *)&v157 + 1), v173);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v40;
      uint64_t v42 = v145;
    }
    else
    {
      sub_1B62CAAD8((uint64_t)v148, (uint64_t)&v157);
      char v44 = swift_dynamicCast();
      uint64_t v42 = v145;
      if (v44)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v41 = v173;
    }
    uint64_t v45 = v143;
    sub_1B63BAF34(v41);
    long long v46 = *(_OWORD *)(v45 + 304);
    v170[0] = *(_OWORD *)(v45 + 288);
    v170[1] = v46;
    uint64_t v171 = *(void *)(v45 + 320);
    sub_1B62C9DA8(v35, (uint64_t)v170, 0x200000000, v156);
    sub_1B62D7A10((uint64_t)v156, (uint64_t)&v157, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v157)
    {
      long long v165 = v157;
      long long v166 = v158;
      uint64_t v167 = v159;
      if (v164 > 0)
      {
        uint64_t v135 = v161;
        if (v161)
        {
          unint64_t v47 = HIDWORD(v173);
          uint64_t v134 = v160;
          uint64_t v143 = v163[4];
          LODWORD(v142) = *(unsigned __int8 *)(v162 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v133 = v163 + 6;
          uint64_t v146 = (void *)(v35 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v136 = (uint64_t (*)(uint64_t))OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
          uint64_t v144 = v163;
          uint64_t v132 = v163 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v48 = 0;
          while (1)
          {
            uint64_t v145 = v42;
            uint64_t v141 = v48;
            uint64_t v49 = (unsigned int *)(v134 + 48 * v48);
            uint64_t v50 = *v49;
            uint64_t v137 = v49[1];
            uint64_t v51 = (uint64_t *)*((void *)v49 + 2);
            uint64_t v140 = *((void *)v49 + 3);
            uint64_t v52 = *((void *)v49 + 4);
            uint64_t v53 = *((void *)v49 + 5);
            if (v142)
            {
              uint64_t v54 = *(os_unfair_lock_s **)(v53 + 376);
              swift_retain();
              os_unfair_lock_lock(v54);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v53 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v143);
            sub_1B62D7A10((uint64_t)v133, (uint64_t)v172, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            long long v55 = v144;
            uint64_t v56 = v144[4];
            uint64_t v57 = *(void *)(*(void *)(*(void *)(*(void *)(v53 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v55[6] = ecs_stack_allocator_allocate(v56, 48 * v57, 8);
            v55[7] = v57;
            uint64_t v58 = v132;
            v132[1] = 0;
            _OWORD v58[2] = 0;
            *uint64_t v58 = 0;
            swift_release();
            uint64_t v59 = sub_1B62C9024((uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1F0F7B198, v51, v140, v52, (uint64_t)v55);
            if (v51)
            {
              int v60 = v173;
              if (v52)
              {
                for (uint64_t i = 0; i != v52; ++i)
                {
                  uint64_t v62 = (int *)(v59 + 168 * i);
                  int v64 = *v62;
                  int v63 = v62[1];
                  if (v64 == v60 && v63 == v47)
                  {
                    uint64_t v66 = v51[i];
                    char v67 = *(unsigned char *)(v53 + 184);
                    uint64_t v68 = swift_retain();
                    if (v67) {
                      goto LABEL_99;
                    }
                    uint64_t v69 = *(int *)(*(void *)(v53 + 168) + 4 * v66);
                    int v70 = *(_DWORD *)(*(void *)(v68 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                    + 12 * (int)v69
                                    + 8);
                    swift_release();
                    if (v69 != -1 || v70 != 0)
                    {
                      int v60 = v173;
                      if ((v69 & 0x80000000) != 0 || v146[1] <= v69) {
                        continue;
                      }
                      if (v70 != -1 && *(_DWORD *)(*v146 + 12 * (int)v69 + 8) != v70) {
                        continue;
                      }
                      uint64_t v74 = *(void *)(*(void *)(v138 + 136) + 8 * *(int *)(*v146 + 12 * (int)v69) + 32);
                      double v75 = (void *)thread_worker_index(&thread_worker_index, v71);
                      uint64_t v78 = *(void *)(*(void *)((char *)v136 + v77) + 8 * *v75 + 8);
                      uint64_t v79 = *(void *)(v74 + 192);
                      if (v79)
                      {
                        uint64_t v80 = *(void *)(v74 + 208);
                        uint64_t v81 = 8 * (v76 >> 6);
                        *(void *)(v79 + v81) |= 1 << v76;
                        *(void *)(v80 + v81) &= ~(1 << v76);
                      }
                      if (*(unsigned char *)(*(void *)(v74 + 40) + 213) != 1) {
                        continue;
                      }
                      uint64_t v82 = *(void *)(v74 + 48);
                      uint64_t v83 = *(void *)(v82 + 16);
                      uint64_t v131 = v78;
                      uint64_t v140 = v76;
                      if (v83)
                      {
                        uint64_t v84 = (uint64_t *)(v82 + 56);
                        while ((ValueMetadata *)*(v84 - 3) != &type metadata for PropagateDirtiness)
                        {
                          v84 += 5;
                          if (!--v83) {
                            goto LABEL_48;
                          }
                        }
                        uint64_t v137 = *v84;
                      }
                      else
                      {
LABEL_48:
                        uint64_t v137 = 0;
                      }
                      uint64_t v85 = *(void *)(v74 + 128);
                      char v86 = *(unsigned char *)(v74 + 184);
                      uint64_t v87 = swift_retain();
                      if (v86) {
                        goto LABEL_99;
                      }
                      uint64_t v88 = v85 + v137;
                      unsigned int v89 = *(_DWORD *)(*(void *)(v74 + 168) + 4 * v140);
                      uint64_t v90 = (unsigned int *)(v88 + 8 * v140);
                      uint64_t v140 = *(unsigned int *)(*(void *)(v87 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                             + 12 * (int)v89
                                             + 8);
                      swift_release();
                      uint64_t v91 = *v90;
                      uint64_t v92 = v90[1];
                      if (v91 != -1 || v92 != 0) {
                        sub_1B6398CA0(v147, v89 | (unint64_t)(v140 << 32), v91 | (v92 << 32));
                      }
                    }
                    int v60 = v173;
                  }
                }
              }
            }
            else
            {
              uint64_t v94 = v137;
              int v95 = v173;
              if (v50 != v137)
              {
                do
                {
                  uint64_t v97 = (int *)(v59 + 168 * v50);
                  int v99 = *v97;
                  int v98 = v97[1];
                  if (v99 == v95 && v98 == v47)
                  {
                    char v101 = *(unsigned char *)(v53 + 184);
                    uint64_t v102 = swift_retain();
                    if (v101) {
                      goto LABEL_99;
                    }
                    uint64_t v103 = *(int *)(*(void *)(v53 + 168) + 4 * v50);
                    int v104 = *(_DWORD *)(*(void *)(v102 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                     + 12 * (int)v103
                                     + 8);
                    swift_release();
                    if (v103 == -1 && v104 == 0)
                    {
                      int v95 = v173;
                    }
                    else
                    {
                      int v95 = v173;
                      if ((v103 & 0x80000000) == 0
                        && v146[1] > v103
                        && (v104 == -1 || *(_DWORD *)(*v146 + 12 * (int)v103 + 8) == v104))
                      {
                        char v108 = (int *)(*v146 + 12 * (int)v103);
                        uint64_t v109 = *((__int16 *)v108 + 2);
                        uint64_t v110 = *(void *)(*(void *)(v138 + 136) + 8 * *v108 + 32);
                        int v111 = (void *)thread_worker_index(&thread_worker_index, v105);
                        uint64_t v113 = *(void *)(*(void *)((char *)v136 + v112) + 8 * *v111 + 8);
                        uint64_t v114 = *(void *)(v110 + 192);
                        if (v114)
                        {
                          uint64_t v115 = *(void *)(v110 + 208);
                          uint64_t v116 = 8 * (v109 >> 6);
                          *(void *)(v114 + v116) |= 1 << v109;
                          *(void *)(v115 + v116) &= ~(1 << v109);
                        }
                        if (*(unsigned char *)(*(void *)(v110 + 40) + 213) == 1)
                        {
                          uint64_t v117 = *(void *)(v110 + 48);
                          uint64_t v118 = *(void *)(v117 + 16);
                          uint64_t v131 = v113;
                          if (v118)
                          {
                            uint64_t v119 = (uint64_t *)(v117 + 56);
                            while ((ValueMetadata *)*(v119 - 3) != &type metadata for PropagateDirtiness)
                            {
                              v119 += 5;
                              if (!--v118) {
                                goto LABEL_85;
                              }
                            }
                            uint64_t v140 = *v119;
                          }
                          else
                          {
LABEL_85:
                            uint64_t v140 = 0;
                          }
                          uint64_t v120 = *(void *)(v110 + 128);
                          char v121 = *(unsigned char *)(v110 + 184);
                          uint64_t v122 = swift_retain();
                          if (v121)
                          {
LABEL_99:
                            uint64_t result = sub_1B6E32BE8();
                            __break(1u);
                            return result;
                          }
                          unsigned int v123 = *(_DWORD *)(*(void *)(v110 + 168) + 4 * v109);
                          uint64_t v124 = (unsigned int *)(v120 + v140 + 8 * v109);
                          uint64_t v125 = *(unsigned int *)(*(void *)(v122 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                                 + 12 * (int)v123
                                                 + 8);
                          swift_release();
                          uint64_t v126 = *v124;
                          uint64_t v127 = v124[1];
                          if (v126 != -1 || v127 != 0) {
                            sub_1B6398CA0(v147, v123 | (unint64_t)(v125 << 32), v126 | (v127 << 32));
                          }
                          int v95 = v173;
                          uint64_t v94 = v137;
                        }
                      }
                    }
                  }
                  ++v50;
                }
                while (v50 != v94);
              }
            }
            v168[0] = v165;
            v168[1] = v166;
            uint64_t v169 = v167;
            uint64_t v96 = v145;
            sub_1B6345178(v144, (unsigned __int16 **)v168, (uint64_t)v172);
            uint64_t v42 = v96;
            sub_1B634507C((char *)v53);
            ecs_stack_allocator_pop_snapshot(v143);
            if (v142)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 376));
            }
            swift_release();
            uint64_t v48 = v141 + 1;
            if (v141 + 1 == v135)
            {
              sub_1B632F170((uint64_t *)v156);
              uint64_t v33 = (uint64_t)v139;
              break;
            }
          }
        }
      }
      sub_1B632F170((uint64_t *)v156);
    }
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v148);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v149);
    return sub_1B69596A8(v33, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  }
  return result;
}

uint64_t sub_1B6927214(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v89 = result;
    char v86 = (void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v85 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    uint64_t v83 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    uint64_t v5 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v82 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v90 = v2;
    uint64_t v91 = v5;
    uint64_t v88 = v3;
    do
    {
      uint64_t v8 = v5 + 32 * v7;
      char v9 = *(unsigned char *)(v8 + 8);
      if ((v9 & 2) != 0)
      {
        unint64_t v10 = *(void *)v8;
        uint64_t v11 = *(void *)(v8 + 16);
        char v12 = *(unsigned char *)(v8 + 24);
        switch(*(void *)v8 >> 60)
        {
          case 1:
            uint64_t v32 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
            sub_1B664D9F0((v10 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v104);
            if (!MEMORY[0x1BA9B8670](v104))
            {
              sub_1B66490B8((uint64_t)v104);
              uint64_t v4 = v90;
              uint64_t v3 = v88;
              break;
            }
            uint64_t v93 = v11;
            char v96 = v12;
            uint64_t v33 = *((void *)&v104[0] + 1);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 40);
            sub_1B62C6AA8(v10);
            sub_1B62C6AA8(v10);
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v36 = v35(ObjectType, v33);
            uint64_t v37 = sub_1B6E32738();
            uint64_t v38 = swift_conformsToProtocol2();
            if (v38) {
              uint64_t v39 = v38;
            }
            else {
              uint64_t v39 = 0;
            }
            if (!v38) {
              uint64_t v37 = 0;
            }
            if (!v37
              || (swift_unknownObjectRetain(),
                  uint64_t v40 = sub_1B67CBAE0(v32, v36, v37, v39),
                  swift_unknownObjectRelease(),
                  !v40))
            {
              sub_1B66490B8((uint64_t)v104);
              swift_unknownObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              unint64_t v65 = v10;
              sub_1B62C6A70(v10);
LABEL_69:
              sub_1B62C6A70(v65);
              uint64_t v4 = v90;
              uint64_t v3 = v88;
              goto LABEL_4;
            }
            uint64_t v100 = v36;
            uint64_t v101 = v33;
            sub_1B62C55B0(0, (unint64_t *)&unk_1E9DD2B30);
            swift_unknownObjectRetain();
            swift_getAtAnyKeyPath();
            swift_unknownObjectRelease();
            if (!v99)
            {
              sub_1B66490B8((uint64_t)v104);
              swift_unknownObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_release();
              unint64_t v65 = v10;
              sub_1B62C6A70(v10);
              sub_1B639559C((uint64_t)&v98, (unint64_t *)&qword_1EB980F60, v82);
              goto LABEL_69;
            }
            sub_1B62B57A8(&v98, &v102);
            uint64_t v41 = *(void **)v90;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v41 = sub_1B68C0FD8(0, v41[2] + 1, 1, v41);
            }
            unint64_t v43 = v41[2];
            unint64_t v42 = v41[3];
            if (v43 >= v42 >> 1) {
              uint64_t v41 = sub_1B68C0FD8(v42 > 1, v43 + 1, 1, v41);
            }
            _OWORD v41[2] = v43 + 1;
            char v44 = &v41[4 * v43];
            v44[4] = v10;
            *((unsigned char *)v44 + 40) = v9;
            v44[6] = v93;
            *((unsigned char *)v44 + 56) = v96;
            *(void *)uint64_t v90 = v41;
            sub_1B62CAAD8((uint64_t)&v102, (uint64_t)&v98);
            uint64_t v45 = *(void **)(v90 + 8);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v45 = sub_1B68C4954(0, v45[2] + 1, 1, v45);
            }
            unint64_t v47 = v45[2];
            unint64_t v46 = v45[3];
            if (v47 >= v46 >> 1) {
              uint64_t v45 = sub_1B68C4954(v46 > 1, v47 + 1, 1, v45);
            }
            void v45[2] = v47 + 1;
            sub_1B62B57A8(&v98, &v45[4 * v47 + 4]);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v4 = v90;
            *(void *)(v90 + 8) = v45;
            sub_1B62C6A70(v10);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v102);
            sub_1B66490B8((uint64_t)v104);
            sub_1B62C6A70(v10);
            uint64_t v3 = v88;
            goto LABEL_4;
          case 3:
          case 4:
            uint64_t v92 = *(void *)(v8 + 16);
            char v95 = *(unsigned char *)(v8 + 24);
            uint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
            int v14 = *(_DWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
            uint64_t v15 = *(int *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            sub_1B62C6AA8(v10);
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v16 = sub_1B6E32738();
            if (!swift_conformsToProtocol2())
            {
              __break(1u);
LABEL_92:
              __break(1u);
              JUMPOUT(0x1B6927EB0);
            }
            BOOL v17 = v15 == -1 && v14 == 0;
            if (v17
              || (v15 & 0x80000000) != 0
              || v86[1] <= v15
              || ((uint64_t v18 = *v86 + 12 * (int)v15, v14 != -1) ? (v19 = *(_DWORD *)(v18 + 8) == v14) : (v19 = 1),
                  !v19
               || (uint64_t v20 = *(void *)(*(void *)(v89 + 136) + 8 * *(int *)(*v86 + 12 * (int)v15) + 32),
                   uint64_t v21 = *(void *)(v20 + 48),
                   (uint64_t v22 = *(void *)(v21 + 16)) == 0)))
            {
LABEL_24:
              long long v102 = 0u;
              long long v103 = 0u;
            }
            else
            {
              uint64_t v23 = *(__int16 *)(v18 + 4);
              uint64_t v24 = v21 + 56;
              while (*(void *)(v24 - 24) != v16)
              {
                v24 += 40;
                if (!--v22) {
                  goto LABEL_24;
                }
              }
              uint64_t v71 = v24 - 8;
              uint64_t v70 = *(void *)(v24 - 8);
              uint64_t v69 = *(void *)(v71 + 8);
              if (v70 <= 1) {
                uint64_t v70 = 1;
              }
              sub_1B62CD444(*(void *)(v20 + 128) + v69 + v70 * v23, v13, v16);
            }
            swift_release();
            swift_bridgeObjectRelease();
            if (!*((void *)&v103 + 1))
            {
              sub_1B62C6A70(v10);
              sub_1B639559C((uint64_t)&v102, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
              goto LABEL_4;
            }
            sub_1B62B57A8(&v102, v104);
            uint64_t v25 = *(void **)v4;
            sub_1B62C6AA8(v10);
            uint64_t v5 = v91;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v25 = sub_1B68C0FD8(0, v25[2] + 1, 1, v25);
            }
            unint64_t v27 = v25[2];
            unint64_t v26 = v25[3];
            if (v27 >= v26 >> 1) {
              uint64_t v25 = sub_1B68C0FD8(v26 > 1, v27 + 1, 1, v25);
            }
            v25[2] = v27 + 1;
            uint64_t v28 = &v25[4 * v27];
            v28[4] = v10;
            *((unsigned char *)v28 + 40) = v9;
            v28[6] = v92;
            *((unsigned char *)v28 + 56) = v95;
            *(void *)uint64_t v4 = v25;
            sub_1B62CAAD8((uint64_t)v104, (uint64_t)&v102);
            uint64_t v29 = *(void **)(v4 + 8);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v29 = sub_1B68C4954(0, v29[2] + 1, 1, v29);
            }
            unint64_t v31 = v29[2];
            unint64_t v30 = v29[3];
            if (v31 >= v30 >> 1) {
              uint64_t v29 = sub_1B68C4954(v30 > 1, v31 + 1, 1, v29);
            }
            v29[2] = v31 + 1;
            sub_1B62B57A8(&v102, &v29[4 * v31 + 4]);
            sub_1B62C6A70(v10);
            *(void *)(v4 + 8) = v29;
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v104);
            break;
          case 6:
            uint64_t v48 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v49 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
            uint64_t v87 = *(void *)(*(void *)(v89 + v85) + 8 * *(void *)thread_worker_index(&thread_worker_index, v6) + 8);
            uint64_t v50 = *(void *)(v87 + 32);
            swift_retain_n();
            ecs_stack_allocator_push_snapshot(v50);
            *(void *)&v104[0] = v48;
            *((void *)&v104[0] + 1) = v49;
            *(void *)&long long v102 = 46;
            *((void *)&v102 + 1) = 0xE100000000000000;
            sub_1B633AF88();
            uint64_t v51 = (void *)sub_1B6E325F8();
            *(void *)&long long v98 = v51;
            if (!v51[2]) {
              goto LABEL_71;
            }
            uint64_t v94 = v11;
            char v97 = v12;
            uint64_t v52 = v51[4];
            unint64_t v53 = v51[5];
            swift_bridgeObjectRetain();
            sub_1B68E95BC(0, 1);
            LOBYTE(v104[0]) = 1;
            uint64_t v84 = sub_1B6A041D8(v52, v53, v89, 0x100000000);
            LOBYTE(v52) = v54;
            swift_bridgeObjectRelease();
            if (v52)
            {
LABEL_71:
              swift_bridgeObjectRelease();
              uint64_t v3 = v88;
LABEL_72:
              uint64_t v66 = *(void *)(v89 + v83);
              *(void *)&v104[0] = 0;
              *((void *)&v104[0] + 1) = 0xE000000000000000;
              swift_retain();
              sub_1B6E328C8();
              swift_bridgeObjectRelease();
              *(void *)&v104[0] = 0xD000000000000017;
              *((void *)&v104[0] + 1) = 0x80000001B6F3B020;
              sub_1B6E31948();
              long long v67 = v104[0];
              uint64_t v68 = sub_1B6E32148();
              *(void *)&v104[0] = 0;
              (*(void (**)(uint64_t, _OWORD *, void, void))(*(void *)v66 + 88))(v68, v104, v67, *((void *)&v67 + 1));
              swift_release();
              swift_bridgeObjectRelease();
              ecs_stack_allocator_pop_snapshot(*(void *)(v87 + 32));
              sub_1B62C6A70(v10);
              sub_1B62C6A70(v10);
              uint64_t v4 = v90;
              goto LABEL_4;
            }
            *(void *)&v104[0] = v98;
            sub_1B62D8750(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
            sub_1B6646D3C();
            uint64_t v55 = sub_1B6E31638();
            uint64_t v57 = v56;
            swift_bridgeObjectRelease();
            sub_1B6A04940(v55, v57, (uint64_t)v105);
            sub_1B62D7A10((uint64_t)v105, (uint64_t)&v106, (unint64_t *)&unk_1EB97E6F0, (uint64_t)&type metadata for ScriptKeyPath);
            uint64_t v3 = v88;
            if (!*((void *)&v106 + 1))
            {
              swift_bridgeObjectRelease();
              goto LABEL_72;
            }
            long long v108 = v106;
            uint64_t v58 = v107;
            swift_bridgeObjectRelease();
            ecs_stack_allocator_pop_snapshot(v50);
            uint64_t v59 = sub_1B6E32738();
            if (!swift_conformsToProtocol2()) {
              goto LABEL_92;
            }
            uint64_t v4 = v90;
            if (v84 != 0xFFFFFFFFLL
              && v84 << 32 >= (uint64_t)0xFFFFFFFF00000001
              && (int)v84 < v86[1]
              && ((uint64_t v60 = *v86 + 12 * (int)v84, HIDWORD(v84) == -1) || *(_DWORD *)(v60 + 8) == HIDWORD(v84))
              && (uint64_t v61 = *(void *)(*(void *)(v89 + 136) + 8 * *(int *)(*v86 + 12 * (int)v84) + 32),
                  uint64_t v62 = *(void *)(v61 + 48),
                  (uint64_t v63 = *(void *)(v62 + 16)) != 0))
            {
              uint64_t v64 = v62 + 56;
              while (*(void *)(v64 - 24) != v59)
              {
                v64 += 40;
                if (!--v63) {
                  goto LABEL_66;
                }
              }
              uint64_t v74 = v64 - 8;
              uint64_t v73 = *(void *)(v64 - 8);
              uint64_t v72 = *(void *)(v74 + 8);
              if (v73 <= 1) {
                uint64_t v73 = 1;
              }
              sub_1B62CD444(*(void *)(v61 + 128) + v72 + v73 * *(__int16 *)(v60 + 4), v58, v59);
              sub_1B62B57A8(&v102, v104);
              double v75 = *(void **)v90;
              sub_1B62C6AA8(v10);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                double v75 = sub_1B68C0FD8(0, v75[2] + 1, 1, v75);
              }
              unint64_t v77 = v75[2];
              unint64_t v76 = v75[3];
              if (v77 >= v76 >> 1) {
                double v75 = sub_1B68C0FD8(v76 > 1, v77 + 1, 1, v75);
              }
              v75[2] = v77 + 1;
              uint64_t v78 = &v75[4 * v77];
              v78[4] = v10;
              *((unsigned char *)v78 + 40) = v9;
              v78[6] = v94;
              *((unsigned char *)v78 + 56) = v97;
              *(void *)uint64_t v90 = v75;
              sub_1B62CAAD8((uint64_t)v104, (uint64_t)&v102);
              uint64_t v79 = *(void **)(v90 + 8);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v79 = sub_1B68C4954(0, v79[2] + 1, 1, v79);
              }
              unint64_t v81 = v79[2];
              unint64_t v80 = v79[3];
              if (v81 >= v80 >> 1) {
                uint64_t v79 = sub_1B68C4954(v80 > 1, v81 + 1, 1, v79);
              }
              _OWORD v79[2] = v81 + 1;
              sub_1B62B57A8(&v102, &v79[4 * v81 + 4]);
              *(void *)(v90 + 8) = v79;
              long long v110 = v108;
              sub_1B62C7BF4((uint64_t)&v110);
              swift_release();
              sub_1B62C6A70(v10);
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v104);
            }
            else
            {
LABEL_66:
              long long v109 = v108;
              sub_1B62C7BF4((uint64_t)&v109);
              swift_release();
              sub_1B62C6A70(v10);
            }
            sub_1B62C6A70(v10);
LABEL_4:
            uint64_t v5 = v91;
            break;
          default:
            break;
        }
      }
      ++v7;
    }
    while (v7 != v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B6927EC8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  char v9 = v8;
  unsigned int v123 = a6;
  uint64_t v124 = a5;
  char v121 = a8;
  uint64_t v122 = a4;
  uint64_t v128 = a2;
  uint64_t v120 = a1;
  unint64_t v12 = HIDWORD(a7);
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v129 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v127 = (_DWORD *)((char *)v105 - v19);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)v105 - v22;
  MEMORY[0x1F4188790](v24, v25);
  unint64_t v27 = (_DWORD *)((char *)v105 - v26);
  uint64_t v28 = *(int *)(type metadata accessor for TriggerScript(0) + 40);
  uint64_t v130 = a3;
  uint64_t v126 = a3 + v28;
  sub_1B6959AAC(a3 + v28, (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v29 = type metadata accessor for ScriptIndex();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v125(v23, 1, v29) == 1)
  {
    *unint64_t v27 = a7;
    v27[1] = v12;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  unint64_t v31 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56);
  v31(v27, 0, 1, v29);
  uint64_t v32 = v130;
  uint64_t v33 = sub_1B68F179C(0, v134);
  if (v8)
  {
    sub_1B67BAA04((uint64_t)v27);
    return;
  }
  uint64_t v112 = v31;
  uint64_t v113 = v30 + 48;
  uint64_t v114 = v29;
  id v35 = v134[0];
  id v36 = v134[1];
  id v37 = v134[2];
  id v117 = v134[4];
  id v118 = v134[5];
  id v119 = v134[6];
  MEMORY[0x1F4188790](v33, v34);
  v105[-6] = 0;
  v105[-5] = 0xE000000000000000;
  LODWORD(v105[-4]) = a7;
  HIDWORD(v105[-4]) = v38;
  uint64_t v111 = v38;
  v105[-3] = v39;
  v105[-2] = 0xE700000000000000;
  v105[-1] = v27;
  swift_bridgeObjectRetain();
  uint64_t v116 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)&v105[-8], (uint64_t)v35);
  swift_bridgeObjectRelease();
  unint64_t v115 = a7;
  uint64_t v40 = sub_1B67AFBF8((uint64_t)v36, (unint64_t)v37, 0, 0xE000000000000000, a7, 0x72656767697274uLL, 0xE700000000000000, (uint64_t)v27);
  unint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v27);
  int v43 = *(unsigned __int8 *)(v32 + 24);
  uint64_t v44 = sub_1B6C4FAB8(*(unsigned char *)(v32 + 24));
  uint64_t v45 = (void *)v44;
  uint64_t v46 = (uint64_t)v129;
  if (v43 == 1)
  {
    *(void *)(v44 + 48) = *(void *)(v128 + 24);
    swift_unknownObjectRetain();
    uint64_t v44 = swift_unknownObjectRelease();
    if (!v45[6])
    {
      long long v109 = 0;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v47 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v134[0] = 0;
      swift_retain();
      sub_1B6B33E34(v47, (uint64_t *)v134, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v44 = swift_release();
      char v9 = v109;
    }
  }
  if ((*(uint64_t (**)(uint64_t))(*v45 + 280))(v44))
  {
    LOWORD(v134[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v48 = sub_1B6830944((unsigned __int8 *)v134);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *uint64_t v64 = 0;
      v64[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    uint64_t v49 = v48;
    uint64_t v50 = *(void **)(v48 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v49 + 32) = v50;
    unint64_t v110 = v42;
    long long v109 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v50 = sub_1B6335858(0, v50[2] + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    unint64_t v53 = v50[2];
    unint64_t v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      uint64_t v50 = sub_1B6335858(v52 > 1, v53 + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    _OWORD v50[2] = v53 + 1;
    char v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v124)
    {
      *(unsigned char *)(v49 + 26) = v122 & 1;
      uint64_t v55 = swift_bridgeObjectRetain();
      sub_1B6641518(v55);
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B6641518(v56);
    }
    v45[10] = v49;
    swift_release();
    unint64_t v42 = v110;
    char v9 = v109;
  }
  uint64_t v57 = sub_1B6C4C204(v40, v42, 0x747069726373, 0xE600000000000000);
  if (v9)
  {
    v134[0] = v9;
    id v59 = v9;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    type metadata accessor for MTLLibraryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v60 = v40;
      uint64_t v61 = v133;
      uint64_t v131 = v133;
      sub_1B6959B20();
      sub_1B6E30D38();
      if (v132 == 3)
      {

        sub_1B6959B78();
        swift_allocError();
        *(void *)uint64_t v62 = v61;
        *(void *)(v62 + 8) = v60;
        *(void *)(v62 + 16) = v42;
        *(void *)(v62 + 24) = 0;
        *(unsigned char *)(v62 + 32) = 2;
        swift_bridgeObjectRetain();
        id v63 = v61;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v58 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v45 + 360))(v57);
  uint64_t v106 = v65;
  uint64_t v107 = v58;
  long long v109 = v66;
  uint64_t v122 = v67;
  uint64_t v68 = swift_bridgeObjectRelease();
  v134[0] = (id)MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v45 + 376))(v68);
  if (v43 == 1) {
    uint64_t v69 = &unk_1F0F83BE8;
  }
  else {
    uint64_t v69 = &unk_1F0F83BB8;
  }
  uint64_t v70 = (uint64_t *)&unk_1F0F83BC8;
  if (v43 == 1) {
    uint64_t v70 = (uint64_t *)&unk_1F0F83BF8;
  }
  uint64_t v71 = *v70;
  if (!*v70)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v93 = (id)MEMORY[0x1E4FBC860];
    uint64_t v94 = (char *)MEMORY[0x1E4FBC860];
LABEL_58:
    swift_bridgeObjectRelease();
    char v95 = v120;
    id v96 = v119;
    *uint64_t v120 = v118;
    v95[1] = v96;
    char v97 = v121;
    uint64_t v98 = v122;
    uint64_t *v121 = v107;
    v97[1] = v98;
    uint64_t v99 = (uint64_t)v109;
    v97[2] = v106;
    v97[3] = v99;
    v97[4] = v40;
    v97[5] = v42;
    v97[6] = (uint64_t)v45;
    v97[7] = (uint64_t)v94;
    v97[8] = (uint64_t)v93;
    return;
  }
  v105[1] = v69;
  uint64_t v72 = (char *)&unk_1F0F83BD8;
  if (v43 == 1) {
    uint64_t v72 = (char *)&unk_1F0F83C08;
  }
  uint64_t v73 = (unint64_t *)(v72 + 8);
  unsigned int v123 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v110 = v42;
  uint64_t v108 = v40;
  while (1)
  {
    uint64_t v124 = v71;
    unint64_t v74 = *v73;
    uint64_t v128 = *(v73 - 1);
    sub_1B6959AAC(v126, v46, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    uint64_t v75 = v46;
    uint64_t v76 = v46;
    uint64_t v77 = v114;
    if (v125((char *)v75, 1, v114) == 1)
    {
      uint64_t v78 = v115;
      uint64_t v79 = v127;
      int v80 = v111;
      *uint64_t v127 = v115;
      v79[1] = v80;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B67BAA04(v76);
    }
    else
    {
      uint64_t v79 = v127;
      sub_1B695B370(v76, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
      uint64_t v78 = v115;
    }
    v112(v79, 0, 1, v77);
    uint64_t v81 = sub_1B67AFBF8(v128, v74, 0, 0xE000000000000000, v78, 0x72656767697274uLL, 0xE700000000000000, (uint64_t)v79);
    uint64_t v82 = (uint64_t)v79;
    uint64_t v83 = v81;
    uint64_t v85 = v84;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v82);
    if (*(unsigned char *)(v130 + 24) != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v45 + 336))(v83, v85);
    uint64_t v40 = v108;
    uint64_t v46 = (uint64_t)v129;
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v86);
    if (*(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
LABEL_42:
    v73 += 2;
    uint64_t v71 = v124 - 1;
    unint64_t v42 = v110;
    if (v124 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v93 = v134[0];
      uint64_t v94 = v123;
      goto LABEL_58;
    }
  }
  uint64_t v87 = (void *)v45[8];
  uint64_t v40 = v108;
  uint64_t v46 = (uint64_t)v129;
  if (!v87)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v100 = 0xD000000000000017;
    unint64_t v101 = 0x80000001B6F3E580;
    char v102 = 4;
    goto LABEL_61;
  }
  uint64_t v88 = sub_1B6E31848();
  uint64_t v89 = dlsym(v87, (const char *)(v88 + 32));
  swift_release();
  if (v89)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned int v123 = sub_1B68C4A70(0, *((void *)v123 + 2) + 1, 1, v123);
    }
    uint64_t v90 = v123;
    unint64_t v92 = *((void *)v123 + 2);
    unint64_t v91 = *((void *)v123 + 3);
    if (v92 >= v91 >> 1) {
      uint64_t v90 = sub_1B68C4A70(v91 > 1, v92 + 1, 1, v123);
    }
    *((void *)v90 + 2) = v92 + 1;
    unsigned int v123 = v90;
    *(void *)&v90[8 * v92 + 32] = v89;
    goto LABEL_42;
  }
  dlerror();
  uint64_t v103 = sub_1B6E31968();
  unint64_t v101 = v104;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v100 = v103;
  char v102 = 5;
LABEL_61:
  *(void *)(v100 + 16) = 0;
  *(void *)(v100 + 24) = 0;
  *(void *)(v100 + 8) = v101;
  *(unsigned char *)(v100 + 32) = v102;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B6928D48(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  char v9 = v8;
  uint64_t v124 = a6;
  uint64_t v125 = a5;
  uint64_t v122 = a8;
  uint64_t v123 = a4;
  uint64_t v129 = a2;
  char v121 = a1;
  unint64_t v12 = HIDWORD(a7);
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v130 = (char *)v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v128 = (_DWORD *)((char *)v106 - v19);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)v106 - v22;
  MEMORY[0x1F4188790](v24, v25);
  unint64_t v27 = (_DWORD *)((char *)v106 - v26);
  uint64_t v28 = *(int *)(type metadata accessor for ParticleUpdateScript(0) + 36);
  uint64_t v131 = a3;
  uint64_t v127 = a3 + v28;
  sub_1B6959AAC(a3 + v28, (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v29 = type metadata accessor for ScriptIndex();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v126(v23, 1, v29) == 1)
  {
    *unint64_t v27 = a7;
    v27[1] = v12;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  unint64_t v31 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56);
  v31(v27, 0, 1, v29);
  uint64_t v32 = v131;
  uint64_t v33 = sub_1B68EFC44(0, v135);
  if (v8)
  {
    sub_1B67BAA04((uint64_t)v27);
    return;
  }
  uint64_t v113 = v31;
  uint64_t v114 = v30 + 48;
  uint64_t v115 = v29;
  id v35 = v135[0];
  id v36 = v135[1];
  id v37 = v135[2];
  id v118 = v135[4];
  id v119 = v135[5];
  id v120 = v135[6];
  MEMORY[0x1F4188790](v33, v34);
  v106[-6] = 0;
  v106[-5] = 0xE000000000000000;
  LODWORD(v106[-4]) = a7;
  HIDWORD(v106[-4]) = v38;
  uint64_t v112 = v38;
  v106[-3] = v40;
  v106[-2] = v39;
  v106[-1] = v27;
  swift_bridgeObjectRetain();
  uint64_t v117 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)&v106[-8], (uint64_t)v35);
  swift_bridgeObjectRelease();
  unint64_t v116 = a7;
  uint64_t v41 = sub_1B67AFBF8((uint64_t)v36, (unint64_t)v37, 0, 0xE000000000000000, a7, 0x656C636974726170uLL, 0xEE00657461647055, (uint64_t)v27);
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v27);
  int v44 = *(unsigned __int8 *)(v32 + 24);
  uint64_t v45 = sub_1B6C4FAB8(*(unsigned char *)(v32 + 24));
  uint64_t v46 = (void *)v45;
  uint64_t v47 = (uint64_t)v130;
  if (v44 == 1)
  {
    *(void *)(v45 + 48) = *(void *)(v129 + 24);
    swift_unknownObjectRetain();
    uint64_t v45 = swift_unknownObjectRelease();
    if (!v46[6])
    {
      unint64_t v110 = 0;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v48 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v135[0] = 0;
      swift_retain();
      sub_1B6B33E34(v48, (uint64_t *)v135, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v45 = swift_release();
      char v9 = v110;
    }
  }
  if ((*(uint64_t (**)(uint64_t))(*v46 + 280))(v45))
  {
    LOWORD(v135[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v49 = sub_1B6830944((unsigned __int8 *)v135);
    if (!v49)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *uint64_t v65 = 0;
      v65[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    uint64_t v50 = v49;
    uint64_t v51 = *(void **)(v49 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v50 + 32) = v51;
    unint64_t v111 = v43;
    unint64_t v110 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v51 = sub_1B6335858(0, v51[2] + 1, 1, v51);
      *(void *)(v50 + 32) = v51;
    }
    unint64_t v54 = v51[2];
    unint64_t v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      uint64_t v51 = sub_1B6335858(v53 > 1, v54 + 1, 1, v51);
      *(void *)(v50 + 32) = v51;
    }
    _OWORD v51[2] = v54 + 1;
    uint64_t v55 = &v51[2 * v54];
    v55[4] = 5785174;
    v55[5] = 0xE300000000000000;
    if (v125)
    {
      *(unsigned char *)(v50 + 26) = v123 & 1;
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B6641518(v56);
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_1B6641518(v57);
    }
    v46[10] = v50;
    swift_release();
    unint64_t v43 = v111;
    char v9 = v110;
  }
  uint64_t v58 = sub_1B6C4C204(v41, v43, 0x747069726373, 0xE600000000000000);
  if (v9)
  {
    v135[0] = v9;
    id v60 = v9;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    type metadata accessor for MTLLibraryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v61 = v41;
      uint64_t v62 = v134;
      uint64_t v132 = v134;
      sub_1B6959B20();
      sub_1B6E30D38();
      if (v133 == 3)
      {

        sub_1B6959B78();
        swift_allocError();
        *(void *)uint64_t v63 = v62;
        *(void *)(v63 + 8) = v61;
        *(void *)(v63 + 16) = v43;
        *(void *)(v63 + 24) = 0;
        *(unsigned char *)(v63 + 32) = 2;
        swift_bridgeObjectRetain();
        id v64 = v62;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v59 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v46 + 360))(v58);
  uint64_t v107 = v66;
  uint64_t v108 = v59;
  unint64_t v110 = v67;
  uint64_t v123 = v68;
  uint64_t v69 = swift_bridgeObjectRelease();
  v135[0] = (id)MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v46 + 376))(v69);
  if (v44 == 1) {
    uint64_t v70 = &unk_1F0F83A68;
  }
  else {
    uint64_t v70 = &unk_1F0F83A38;
  }
  uint64_t v71 = (uint64_t *)&unk_1F0F83A48;
  if (v44 == 1) {
    uint64_t v71 = (uint64_t *)&unk_1F0F83A78;
  }
  uint64_t v72 = *v71;
  if (!*v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v94 = (id)MEMORY[0x1E4FBC860];
    char v95 = (char *)MEMORY[0x1E4FBC860];
LABEL_58:
    swift_bridgeObjectRelease();
    id v96 = v121;
    id v97 = v120;
    void *v121 = v119;
    v96[1] = v97;
    uint64_t v98 = v122;
    uint64_t v99 = v123;
    *uint64_t v122 = v108;
    v98[1] = v99;
    uint64_t v100 = (uint64_t)v110;
    v98[2] = v107;
    v98[3] = v100;
    v98[4] = v41;
    v98[5] = v43;
    v98[6] = (uint64_t)v46;
    v98[7] = (uint64_t)v95;
    v98[8] = (uint64_t)v94;
    return;
  }
  v106[1] = v70;
  uint64_t v73 = (char *)&unk_1F0F83A58;
  if (v44 == 1) {
    uint64_t v73 = (char *)&unk_1F0F83A88;
  }
  unint64_t v74 = (unint64_t *)(v73 + 8);
  uint64_t v124 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v111 = v43;
  uint64_t v109 = v41;
  while (1)
  {
    uint64_t v125 = v72;
    unint64_t v75 = *v74;
    uint64_t v129 = *(v74 - 1);
    sub_1B6959AAC(v127, v47, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    uint64_t v76 = v47;
    uint64_t v77 = v47;
    uint64_t v78 = v115;
    if (v126((char *)v76, 1, v115) == 1)
    {
      uint64_t v79 = v116;
      int v80 = v128;
      int v81 = v112;
      *uint64_t v128 = v116;
      v80[1] = v81;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B67BAA04(v77);
    }
    else
    {
      int v80 = v128;
      sub_1B695B370(v77, (uint64_t)v128, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
      uint64_t v79 = v116;
    }
    v113(v80, 0, 1, v78);
    uint64_t v82 = sub_1B67AFBF8(v129, v75, 0, 0xE000000000000000, v79, 0x656C636974726170uLL, 0xEE00657461647055, (uint64_t)v80);
    uint64_t v83 = (uint64_t)v80;
    uint64_t v84 = v82;
    uint64_t v86 = v85;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v83);
    if (*(unsigned char *)(v131 + 24) != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v46 + 336))(v84, v86);
    uint64_t v41 = v109;
    uint64_t v47 = (uint64_t)v130;
    swift_bridgeObjectRelease();
    uint64_t v87 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v87);
    if (*(void *)(((unint64_t)v135[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v135[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
LABEL_42:
    v74 += 2;
    uint64_t v72 = v125 - 1;
    unint64_t v43 = v111;
    if (v125 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v94 = v135[0];
      char v95 = v124;
      goto LABEL_58;
    }
  }
  uint64_t v88 = (void *)v46[8];
  uint64_t v41 = v109;
  uint64_t v47 = (uint64_t)v130;
  if (!v88)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v101 = 0xD000000000000017;
    unint64_t v102 = 0x80000001B6F3E580;
    char v103 = 4;
    goto LABEL_61;
  }
  uint64_t v89 = sub_1B6E31848();
  uint64_t v90 = dlsym(v88, (const char *)(v89 + 32));
  swift_release();
  if (v90)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v124 = sub_1B68C4A70(0, *((void *)v124 + 2) + 1, 1, v124);
    }
    unint64_t v91 = v124;
    unint64_t v93 = *((void *)v124 + 2);
    unint64_t v92 = *((void *)v124 + 3);
    if (v93 >= v92 >> 1) {
      unint64_t v91 = sub_1B68C4A70(v92 > 1, v93 + 1, 1, v124);
    }
    *((void *)v91 + 2) = v93 + 1;
    uint64_t v124 = v91;
    *(void *)&v91[8 * v93 + 32] = v90;
    goto LABEL_42;
  }
  dlerror();
  uint64_t v104 = sub_1B6E31968();
  unint64_t v102 = v105;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v101 = v104;
  char v103 = 5;
LABEL_61:
  *(void *)(v101 + 16) = 0;
  *(void *)(v101 + 24) = 0;
  *(void *)(v101 + 8) = v102;
  *(unsigned char *)(v101 + 32) = v103;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B6929BEC(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  char v9 = v8;
  uint64_t v124 = a6;
  uint64_t v125 = a5;
  uint64_t v122 = a8;
  uint64_t v123 = a4;
  uint64_t v129 = a2;
  char v121 = a1;
  unint64_t v12 = HIDWORD(a7);
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v130 = (char *)v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v128 = (_DWORD *)((char *)v106 - v19);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)v106 - v22;
  MEMORY[0x1F4188790](v24, v25);
  unint64_t v27 = (_DWORD *)((char *)v106 - v26);
  uint64_t v28 = *(int *)(type metadata accessor for ParticleInitScript(0) + 36);
  uint64_t v131 = a3;
  uint64_t v127 = &a3[v28];
  sub_1B6959AAC((uint64_t)&a3[v28], (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v29 = type metadata accessor for ScriptIndex();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v126(v23, 1, v29) == 1)
  {
    *unint64_t v27 = a7;
    v27[1] = v12;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  unint64_t v31 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56);
  v31(v27, 0, 1, v29);
  uint64_t v32 = v131;
  uint64_t v33 = sub_1B68EF604(0, v135);
  if (v8)
  {
    sub_1B67BAA04((uint64_t)v27);
    return;
  }
  uint64_t v113 = v31;
  uint64_t v114 = v30 + 48;
  uint64_t v115 = v29;
  id v35 = v135[0];
  id v36 = v135[1];
  id v37 = v135[2];
  id v118 = v135[4];
  id v119 = v135[5];
  id v120 = v135[6];
  MEMORY[0x1F4188790](v33, v34);
  v106[-6] = 0;
  v106[-5] = 0xE000000000000000;
  LODWORD(v106[-4]) = a7;
  HIDWORD(v106[-4]) = v38;
  uint64_t v112 = v38;
  v106[-3] = v40;
  v106[-2] = v39;
  v106[-1] = v27;
  swift_bridgeObjectRetain();
  uint64_t v117 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)&v106[-8], (uint64_t)v35);
  swift_bridgeObjectRelease();
  unint64_t v116 = a7;
  uint64_t v41 = sub_1B67AFBF8((uint64_t)v36, (unint64_t)v37, 0, 0xE000000000000000, a7, 0x656C636974726170uLL, 0xEC00000074696E49, (uint64_t)v27);
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v27);
  int v44 = *v32;
  uint64_t v45 = sub_1B6C4FAB8(*v32);
  uint64_t v46 = (void *)v45;
  uint64_t v47 = (uint64_t)v130;
  if (v44 == 1)
  {
    *(void *)(v45 + 48) = *(void *)(v129 + 24);
    swift_unknownObjectRetain();
    uint64_t v45 = swift_unknownObjectRelease();
    if (!v46[6])
    {
      unint64_t v110 = 0;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v48 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v135[0] = 0;
      swift_retain();
      sub_1B6B33E34(v48, (uint64_t *)v135, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v45 = swift_release();
      char v9 = v110;
    }
  }
  if ((*(uint64_t (**)(uint64_t))(*v46 + 280))(v45))
  {
    LOWORD(v135[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v49 = sub_1B6830944((unsigned __int8 *)v135);
    if (!v49)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *uint64_t v65 = 0;
      v65[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    uint64_t v50 = v49;
    uint64_t v51 = *(void **)(v49 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v50 + 32) = v51;
    unint64_t v111 = v43;
    unint64_t v110 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v51 = sub_1B6335858(0, v51[2] + 1, 1, v51);
      *(void *)(v50 + 32) = v51;
    }
    unint64_t v54 = v51[2];
    unint64_t v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      uint64_t v51 = sub_1B6335858(v53 > 1, v54 + 1, 1, v51);
      *(void *)(v50 + 32) = v51;
    }
    _OWORD v51[2] = v54 + 1;
    uint64_t v55 = &v51[2 * v54];
    v55[4] = 5785174;
    v55[5] = 0xE300000000000000;
    if (v125)
    {
      *(unsigned char *)(v50 + 26) = v123 & 1;
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B6641518(v56);
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_1B6641518(v57);
    }
    v46[10] = v50;
    swift_release();
    unint64_t v43 = v111;
    char v9 = v110;
  }
  uint64_t v58 = sub_1B6C4C204(v41, v43, 0x747069726373, 0xE600000000000000);
  if (v9)
  {
    v135[0] = v9;
    id v60 = v9;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    type metadata accessor for MTLLibraryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v61 = v41;
      uint64_t v62 = v134;
      uint64_t v132 = v134;
      sub_1B6959B20();
      sub_1B6E30D38();
      if (v133 == 3)
      {

        sub_1B6959B78();
        swift_allocError();
        *(void *)uint64_t v63 = v62;
        *(void *)(v63 + 8) = v61;
        *(void *)(v63 + 16) = v43;
        *(void *)(v63 + 24) = 0;
        *(unsigned char *)(v63 + 32) = 2;
        swift_bridgeObjectRetain();
        id v64 = v62;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v59 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v46 + 360))(v58);
  uint64_t v107 = v66;
  uint64_t v108 = v59;
  unint64_t v110 = v67;
  uint64_t v123 = v68;
  uint64_t v69 = swift_bridgeObjectRelease();
  v135[0] = (id)MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v46 + 376))(v69);
  if (v44 == 1) {
    uint64_t v70 = &unk_1F0F83A08;
  }
  else {
    uint64_t v70 = &unk_1F0F839D8;
  }
  uint64_t v71 = (uint64_t *)&unk_1F0F839E8;
  if (v44 == 1) {
    uint64_t v71 = (uint64_t *)&unk_1F0F83A18;
  }
  uint64_t v72 = *v71;
  if (!*v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v94 = (id)MEMORY[0x1E4FBC860];
    char v95 = (char *)MEMORY[0x1E4FBC860];
LABEL_58:
    swift_bridgeObjectRelease();
    id v96 = v121;
    id v97 = v120;
    void *v121 = v119;
    v96[1] = v97;
    uint64_t v98 = v122;
    uint64_t v99 = v123;
    *uint64_t v122 = v108;
    v98[1] = v99;
    uint64_t v100 = (uint64_t)v110;
    v98[2] = v107;
    v98[3] = v100;
    v98[4] = v41;
    v98[5] = v43;
    v98[6] = (uint64_t)v46;
    v98[7] = (uint64_t)v95;
    v98[8] = (uint64_t)v94;
    return;
  }
  v106[1] = v70;
  uint64_t v73 = (char *)&unk_1F0F839F8;
  if (v44 == 1) {
    uint64_t v73 = (char *)&unk_1F0F83A28;
  }
  unint64_t v74 = (unint64_t *)(v73 + 8);
  uint64_t v124 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v111 = v43;
  uint64_t v109 = v41;
  while (1)
  {
    uint64_t v125 = v72;
    unint64_t v75 = *v74;
    uint64_t v129 = *(v74 - 1);
    sub_1B6959AAC((uint64_t)v127, v47, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    uint64_t v76 = v47;
    uint64_t v77 = v47;
    uint64_t v78 = v115;
    if (v126((char *)v76, 1, v115) == 1)
    {
      uint64_t v79 = v116;
      int v80 = v128;
      int v81 = v112;
      *uint64_t v128 = v116;
      v80[1] = v81;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B67BAA04(v77);
    }
    else
    {
      int v80 = v128;
      sub_1B695B370(v77, (uint64_t)v128, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
      uint64_t v79 = v116;
    }
    v113(v80, 0, 1, v78);
    uint64_t v82 = sub_1B67AFBF8(v129, v75, 0, 0xE000000000000000, v79, 0x656C636974726170uLL, 0xEC00000074696E49, (uint64_t)v80);
    uint64_t v83 = (uint64_t)v80;
    uint64_t v84 = v82;
    uint64_t v86 = v85;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v83);
    if (*v131 != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v46 + 336))(v84, v86);
    uint64_t v41 = v109;
    uint64_t v47 = (uint64_t)v130;
    swift_bridgeObjectRelease();
    uint64_t v87 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v87);
    if (*(void *)(((unint64_t)v135[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v135[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
LABEL_42:
    v74 += 2;
    uint64_t v72 = v125 - 1;
    unint64_t v43 = v111;
    if (v125 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v94 = v135[0];
      char v95 = v124;
      goto LABEL_58;
    }
  }
  uint64_t v88 = (void *)v46[8];
  uint64_t v41 = v109;
  uint64_t v47 = (uint64_t)v130;
  if (!v88)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v101 = 0xD000000000000017;
    unint64_t v102 = 0x80000001B6F3E580;
    char v103 = 4;
    goto LABEL_61;
  }
  uint64_t v89 = sub_1B6E31848();
  uint64_t v90 = dlsym(v88, (const char *)(v89 + 32));
  swift_release();
  if (v90)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v124 = sub_1B68C4A70(0, *((void *)v124 + 2) + 1, 1, v124);
    }
    unint64_t v91 = v124;
    unint64_t v93 = *((void *)v124 + 2);
    unint64_t v92 = *((void *)v124 + 3);
    if (v93 >= v92 >> 1) {
      unint64_t v91 = sub_1B68C4A70(v92 > 1, v93 + 1, 1, v124);
    }
    *((void *)v91 + 2) = v93 + 1;
    uint64_t v124 = v91;
    *(void *)&v91[8 * v93 + 32] = v90;
    goto LABEL_42;
  }
  dlerror();
  uint64_t v104 = sub_1B6E31968();
  unint64_t v102 = v105;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v101 = v104;
  char v103 = 5;
LABEL_61:
  *(void *)(v101 + 16) = 0;
  *(void *)(v101 + 24) = 0;
  *(void *)(v101 + 8) = v102;
  *(unsigned char *)(v101 + 32) = v103;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B692AA84(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v114 = a6;
  uint64_t v115 = a5;
  uint64_t v112 = a1;
  uint64_t v113 = a4;
  uint64_t v119 = a2;
  id v120 = a8;
  unint64_t v11 = HIDWORD(a7);
  uint64_t v12 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8, v14);
  id v118 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v17);
  char v121 = (char *)&v96 - v18;
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v96 - v21;
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (_DWORD *)((char *)&v96 - v25);
  uint64_t v27 = *(int *)(type metadata accessor for ShaderScript(0) + 24);
  uint64_t v122 = a3;
  uint64_t v117 = a3 + v27;
  sub_1B6959AAC(a3 + v27, (uint64_t)v22, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v12, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v28 = type metadata accessor for ScriptIndex();
  uint64_t v29 = *(void *)(v28 - 8);
  unint64_t v116 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v116(v22, 1, v28) == 1)
  {
    *uint64_t v26 = a7;
    v26[1] = v11;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v22);
  }
  else
  {
    sub_1B695B370((uint64_t)v22, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v30 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v29 + 56);
  v30(v26, 0, 1, v28);
  uint64_t v31 = v122;
  uint64_t v32 = sub_1B68F5BA0(0, v123);
  if (v8)
  {
    sub_1B67BAA04((uint64_t)v26);
    return;
  }
  uint64_t v104 = v30;
  uint64_t v105 = v29 + 48;
  uint64_t v106 = v28;
  uint64_t v34 = v123[0];
  uint64_t v35 = v123[1];
  unint64_t v36 = v123[2];
  uint64_t v109 = v123[4];
  uint64_t v111 = v123[5];
  uint64_t v110 = v123[6];
  MEMORY[0x1F4188790](v32, v33);
  *(&v96 - 6) = 0;
  *(&v96 - 5) = 0xE000000000000000;
  *((_DWORD *)&v96 - 8) = a7;
  *((_DWORD *)&v96 - 7) = v37;
  uint64_t v103 = v37;
  *(&v96 - 3) = v38;
  *(&v96 - 2) = 0xE600000000000000;
  *(&v96 - 1) = (uint64_t)v26;
  swift_bridgeObjectRetain();
  uint64_t v108 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v96 - 8), v34);
  swift_bridgeObjectRelease();
  unint64_t v107 = a7;
  uint64_t v39 = sub_1B67AFBF8(v35, v36, 0, 0xE000000000000000, a7, 0x726564616873uLL, 0xE600000000000000, (uint64_t)v26);
  unint64_t v41 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v26);
  int v42 = *(unsigned __int8 *)(v31 + 16);
  uint64_t v43 = sub_1B6C4FAB8(v42);
  int v44 = (void *)v43;
  uint64_t v45 = v121;
  if (v42 == 1)
  {
    *(void *)(v43 + 48) = *(void *)(v119 + 24);
    swift_unknownObjectRetain();
    uint64_t v43 = swift_unknownObjectRelease();
    if (!v44[6])
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v46 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v123[0] = 0;
      swift_retain();
      sub_1B6B33E34(v46, v123, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v43 = swift_release();
    }
  }
  if ((*(uint64_t (**)(uint64_t))(*v44 + 280))(v43))
  {
    LOWORD(v123[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v47 = sub_1B6830944((unsigned __int8 *)v123);
    if (!v47)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *uint64_t v59 = 0;
      v59[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    uint64_t v48 = v47;
    uint64_t v49 = *(void **)(v47 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v48 + 32) = v49;
    unint64_t v102 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v49 = sub_1B6335858(0, v49[2] + 1, 1, v49);
      *(void *)(v48 + 32) = v49;
    }
    unint64_t v52 = v49[2];
    unint64_t v51 = v49[3];
    if (v52 >= v51 >> 1)
    {
      uint64_t v49 = sub_1B6335858(v51 > 1, v52 + 1, 1, v49);
      *(void *)(v48 + 32) = v49;
    }
    v49[2] = v52 + 1;
    unint64_t v53 = &v49[2 * v52];
    v53[4] = 5785174;
    uint64_t v53[5] = 0xE300000000000000;
    if (v115)
    {
      *(unsigned char *)(v48 + 26) = v113 & 1;
      uint64_t v54 = swift_bridgeObjectRetain();
      sub_1B6641518(v54);
      uint64_t v55 = swift_bridgeObjectRetain();
      sub_1B6641518(v55);
    }
    v44[10] = v48;
    swift_release();
    unint64_t v41 = v102;
  }
  uint64_t v56 = sub_1B6C4C204(v39, v41, 0x747069726373, 0xE600000000000000);
  uint64_t v57 = v120;
  uint64_t v58 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v44 + 360))(v56);
  uint64_t v99 = v60;
  uint64_t v100 = v58;
  uint64_t v101 = v61;
  uint64_t v113 = v62;
  uint64_t v63 = swift_bridgeObjectRelease();
  v123[0] = MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v44 + 376))(v63);
  id v64 = sub_1B6906FBC();
  uint64_t v65 = v64[2];
  if (!v65)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v85 = MEMORY[0x1E4FBC860];
    uint64_t v86 = (char *)MEMORY[0x1E4FBC860];
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v87 = v112;
    uint64_t v88 = v110;
    *uint64_t v112 = v111;
    v87[1] = v88;
    uint64_t v89 = v113;
    *uint64_t v57 = v100;
    v57[1] = v89;
    uint64_t v90 = v101;
    v57[2] = v99;
    v57[3] = v90;
    v57[4] = v39;
    v57[5] = v41;
    v57[6] = (uint64_t)v44;
    v57[7] = (uint64_t)v86;
    v57[8] = v85;
    return;
  }
  uint64_t v97 = v39;
  unint64_t v102 = v41;
  uint64_t v98 = v64;
  uint64_t v66 = v64 + 5;
  uint64_t v114 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v67 = v107;
  uint64_t v68 = (uint64_t)v118;
  while (1)
  {
    uint64_t v115 = v65;
    uint64_t v70 = v45;
    unint64_t v71 = *v66;
    uint64_t v119 = *(v66 - 1);
    sub_1B6959AAC(v117, v68, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    uint64_t v72 = v106;
    if (v116((char *)v68, 1, v106) == 1)
    {
      int v73 = v103;
      *uint64_t v70 = v67;
      v70[1] = v73;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B67BAA04(v68);
    }
    else
    {
      sub_1B695B370(v68, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v104(v70, 0, 1, v72);
    uint64_t v74 = sub_1B67AFBF8(v119, v71, 0, 0xE000000000000000, v67, 0x726564616873uLL, 0xE600000000000000, (uint64_t)v70);
    uint64_t v76 = v75;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v70);
    uint64_t v45 = v70;
    if (*(unsigned char *)(v122 + 16) != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v44 + 336))(v74, v76);
    swift_bridgeObjectRelease();
    uint64_t v77 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v77);
    if (*(void *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    uint64_t v69 = v115;
LABEL_27:
    v66 += 2;
    uint64_t v65 = v69 - 1;
    uint64_t v67 = v107;
    uint64_t v68 = (uint64_t)v118;
    if (!v65)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v85 = v123[0];
      unint64_t v41 = v102;
      uint64_t v57 = v120;
      uint64_t v39 = v97;
      uint64_t v86 = v114;
      goto LABEL_43;
    }
  }
  uint64_t v78 = (void *)v44[8];
  if (!v78)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v91 = 0xD000000000000017;
    unint64_t v92 = 0x80000001B6F3E580;
    char v93 = 4;
    goto LABEL_46;
  }
  uint64_t v79 = sub_1B6E31848();
  int v80 = dlsym(v78, (const char *)(v79 + 32));
  swift_release();
  if (v80)
  {
    swift_bridgeObjectRelease();
    int v81 = v114;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v81 = sub_1B68C4A70(0, *((void *)v81 + 2) + 1, 1, v81);
    }
    uint64_t v69 = v115;
    unint64_t v83 = *((void *)v81 + 2);
    unint64_t v82 = *((void *)v81 + 3);
    if (v83 >= v82 >> 1)
    {
      uint64_t v84 = sub_1B68C4A70(v82 > 1, v83 + 1, 1, v81);
      uint64_t v69 = v115;
      int v81 = v84;
    }
    *((void *)v81 + 2) = v83 + 1;
    uint64_t v114 = v81;
    *(void *)&v81[8 * v83 + 32] = v80;
    goto LABEL_27;
  }
  dlerror();
  uint64_t v94 = sub_1B6E31968();
  unint64_t v92 = v95;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v91 = v94;
  char v93 = 5;
LABEL_46:
  *(void *)(v91 + 16) = 0;
  *(void *)(v91 + 24) = 0;
  *(void *)(v91 + 8) = v92;
  *(unsigned char *)(v91 + 32) = v93;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1B692B898(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v116 = a5;
  uint64_t v117 = a4;
  uint64_t v114 = a7;
  uint64_t v115 = a3;
  id v120 = a1;
  unint64_t v11 = HIDWORD(a6);
  uint64_t v12 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v119 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v17);
  char v121 = (_DWORD *)((char *)&v103 - v18);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v103 - v21;
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (_DWORD *)((char *)&v103 - v25);
  uint64_t v27 = *(int *)(type metadata accessor for MetalFunctionScript(0) + 24);
  uint64_t v123 = a2;
  uint64_t v118 = a2 + v27;
  sub_1B6959AAC(a2 + v27, (uint64_t)v22, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v12, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v28 = type metadata accessor for ScriptIndex();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  unsigned int v31 = v30(v22, 1, v28);
  unint64_t v122 = v11;
  if (v31 == 1)
  {
    *uint64_t v26 = a6;
    v26[1] = v11;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v22);
  }
  else
  {
    sub_1B695B370((uint64_t)v22, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v32 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56);
  v32((uint64_t)v26, 0, 1, v28);
  uint64_t v33 = sub_1B68F4AE8(0, (uint64_t *)v127);
  if (v7)
  {
    sub_1B67BAA04((uint64_t)v26);
    return;
  }
  unint64_t v107 = v32;
  uint64_t v108 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v30;
  uint64_t v109 = v29 + 48;
  id v35 = v127[0];
  id v36 = v127[1];
  id v37 = v127[2];
  id v113 = v127[4];
  MEMORY[0x1F4188790](v33, v34);
  *(&v103 - 6) = 0;
  *(&v103 - 5) = 0xE000000000000000;
  int v38 = v122;
  *((_DWORD *)&v103 - 8) = a6;
  *((_DWORD *)&v103 - 7) = v38;
  *(&v103 - 3) = v39;
  *(&v103 - 2) = 0xE600000000000000;
  *(&v103 - 1) = (uint64_t)v26;
  swift_bridgeObjectRetain();
  uint64_t v112 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v103 - 8), (uint64_t)v35);
  swift_bridgeObjectRelease();
  unint64_t v110 = a6;
  uint64_t v40 = sub_1B67AFBF8((uint64_t)v36, (unint64_t)v37, 0, 0xE000000000000000, a6, 0x6C656E72656BuLL, 0xE600000000000000, (uint64_t)v26);
  unint64_t v42 = v41;
  uint64_t v43 = v123;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v26);
  LODWORD(v35) = *(unsigned __int8 *)(v43 + 16);
  uint64_t v44 = sub_1B6C4FAB8(*(unsigned char *)(v43 + 16));
  uint64_t v45 = (void *)v44;
  if (v35 == 1)
  {
    *(void *)(v44 + 48) = v120[3];
    swift_unknownObjectRetain();
    uint64_t v44 = swift_unknownObjectRelease();
    if (!v45[6])
    {
      id v120 = 0;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v46 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v127[0] = 0;
      swift_retain();
      sub_1B6B33E34(v46, (uint64_t *)v127, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v44 = swift_release();
      uint64_t v8 = v120;
    }
  }
  char v47 = (*(uint64_t (**)(uint64_t))(*v45 + 280))(v44);
  uint64_t v111 = v40;
  if (v47)
  {
    id v120 = v8;
    unint64_t v48 = v42;
    LOWORD(v127[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v49 = sub_1B6830944((unsigned __int8 *)v127);
    if (!v49)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *id v64 = 0;
      v64[1] = 0;
      swift_willThrow();
      swift_release();
      return;
    }
    uint64_t v50 = v49;
    unint64_t v51 = *(void **)(v49 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v50 + 32) = v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v51 = sub_1B6335858(0, v51[2] + 1, 1, v51);
      *(void *)(v50 + 32) = v51;
    }
    unint64_t v54 = v51[2];
    unint64_t v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      unint64_t v51 = sub_1B6335858(v53 > 1, v54 + 1, 1, v51);
      *(void *)(v50 + 32) = v51;
    }
    _OWORD v51[2] = v54 + 1;
    uint64_t v55 = &v51[2 * v54];
    v55[4] = 5785174;
    v55[5] = 0xE300000000000000;
    if (v117)
    {
      *(unsigned char *)(v50 + 26) = v115 & 1;
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B6641518(v56);
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_1B6641518(v57);
    }
    v45[10] = v50;
    swift_release();
    unint64_t v42 = v48;
    uint64_t v40 = v111;
    uint64_t v8 = v120;
  }
  uint64_t v58 = sub_1B6C4C204(v40, v42, 0x747069726373, 0xE600000000000000);
  if (v8)
  {
    v127[0] = v8;
    uint64_t v60 = v8;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    type metadata accessor for MTLLibraryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v61 = v126;
      uint64_t v124 = v126;
      sub_1B6959B20();
      sub_1B6E30D38();
      if (v125 == 3)
      {

        sub_1B6959B78();
        swift_allocError();
        uint64_t v62 = v111;
        *(void *)uint64_t v63 = v61;
        *(void *)(v63 + 8) = v62;
        *(void *)(v63 + 16) = v42;
        *(void *)(v63 + 24) = 0;
        *(unsigned char *)(v63 + 32) = 2;
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }

    return;
  }
  uint64_t v59 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v45 + 360))(v58);
  uint64_t v66 = v65;
  uint64_t v106 = v67;
  uint64_t v115 = v59;
  uint64_t v116 = v68;
  uint64_t v69 = swift_bridgeObjectRelease();
  v127[0] = (id)MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v45 + 376))(v69);
  uint64_t v70 = sub_1B6906ED8();
  unint64_t v71 = *(void **)(v70 + 16);
  if (!v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v94 = (id)MEMORY[0x1E4FBC860];
    unint64_t v95 = (char *)MEMORY[0x1E4FBC860];
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t v96 = v114;
    uint64_t *v114 = v115;
    v96[1] = v66;
    uint64_t v97 = v116;
    _OWORD v96[2] = v106;
    v96[3] = v97;
    v96[4] = v111;
    v96[5] = v42;
    v96[6] = (uint64_t)v45;
    v96[7] = (uint64_t)v95;
    v96[8] = (uint64_t)v94;
    return;
  }
  uint64_t v104 = v66;
  unint64_t v105 = v42;
  uint64_t v103 = v70;
  uint64_t v72 = (unint64_t *)(v70 + 40);
  uint64_t v117 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v73 = (uint64_t)v119;
  uint64_t v74 = (uint64_t)v121;
  while (1)
  {
    id v120 = v71;
    uint64_t v77 = *(v72 - 1);
    unint64_t v76 = *v72;
    sub_1B6959AAC(v118, v73, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    if (v108(v73, 1, v28) == 1)
    {
      uint64_t v78 = v73;
      uint64_t v79 = v110;
      int v80 = v122;
      _DWORD *v121 = v110;
      v121[1] = v80;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      uint64_t v81 = v78;
      uint64_t v74 = (uint64_t)v121;
      sub_1B67BAA04(v81);
    }
    else
    {
      sub_1B695B370(v73, v74, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
      uint64_t v79 = v110;
    }
    v107(v74, 0, 1, v28);
    uint64_t v82 = sub_1B67AFBF8(v77, v76, 0, 0xE000000000000000, v79, 0x6C656E72656BuLL, 0xE600000000000000, v74);
    uint64_t v84 = v83;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v74);
    if (*(unsigned char *)(v123 + 16) != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v45 + 336))(v82, v84);
    swift_bridgeObjectRelease();
    uint64_t v85 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v85);
    if (*(void *)(((unint64_t)v127[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v127[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    uint64_t v75 = v120;
LABEL_34:
    v72 += 2;
    unint64_t v71 = (void *)((char *)v75 - 1);
    uint64_t v73 = (uint64_t)v119;
    if (!v71)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v94 = v127[0];
      unint64_t v42 = v105;
      uint64_t v66 = v104;
      unint64_t v95 = v117;
      goto LABEL_50;
    }
  }
  uint64_t v86 = (void *)v45[8];
  if (!v86)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v98 = 0xD000000000000017;
    unint64_t v99 = 0x80000001B6F3E580;
    char v100 = 4;
    goto LABEL_53;
  }
  uint64_t v87 = sub_1B6E31848();
  uint64_t v88 = dlsym(v86, (const char *)(v87 + 32));
  swift_release();
  if (v88)
  {
    swift_bridgeObjectRelease();
    uint64_t v89 = v117;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v89 = sub_1B68C4A70(0, *((void *)v89 + 2) + 1, 1, v89);
    }
    uint64_t v75 = v120;
    unint64_t v91 = *((void *)v89 + 2);
    unint64_t v90 = *((void *)v89 + 3);
    uint64_t v117 = v89;
    if (v91 >= v90 >> 1)
    {
      char v93 = sub_1B68C4A70(v90 > 1, v91 + 1, 1, v117);
      uint64_t v75 = v120;
      uint64_t v117 = v93;
    }
    unint64_t v92 = v117;
    *((void *)v117 + 2) = v91 + 1;
    *(void *)&v92[8 * v91 + 32] = v88;
    goto LABEL_34;
  }
  dlerror();
  uint64_t v101 = sub_1B6E31968();
  unint64_t v99 = v102;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v98 = v101;
  char v100 = 5;
LABEL_53:
  *(void *)(v98 + 16) = 0;
  *(void *)(v98 + 24) = 0;
  *(void *)(v98 + 8) = v99;
  *(unsigned char *)(v98 + 32) = v100;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1B692C5B8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  char v9 = v8;
  uint64_t v123 = a6;
  uint64_t v124 = a5;
  char v121 = a8;
  uint64_t v122 = a4;
  uint64_t v128 = a2;
  id v120 = a1;
  unint64_t v12 = HIDWORD(a7);
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v129 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v127 = (_DWORD *)((char *)v105 - v19);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)v105 - v22;
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (_DWORD *)((char *)v105 - v26);
  uint64_t v28 = *(int *)(type metadata accessor for SimpleScript(0) + 36);
  uint64_t v130 = a3;
  uint64_t v126 = a3 + v28;
  sub_1B6959AAC(a3 + v28, (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v29 = type metadata accessor for ScriptIndex();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v125(v23, 1, v29) == 1)
  {
    *uint64_t v27 = a7;
    v27[1] = v12;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  unsigned int v31 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56);
  v31(v27, 0, 1, v29);
  uint64_t v32 = v130;
  uint64_t v33 = sub_1B68F38B8(0, v134);
  if (v8)
  {
    sub_1B67BAA04((uint64_t)v27);
    return;
  }
  uint64_t v112 = v31;
  uint64_t v113 = v30 + 48;
  uint64_t v114 = v29;
  id v35 = v134[0];
  id v36 = v134[1];
  id v37 = v134[2];
  id v117 = v134[4];
  id v118 = v134[5];
  id v119 = v134[6];
  MEMORY[0x1F4188790](v33, v34);
  v105[-6] = 0;
  v105[-5] = 0xE000000000000000;
  LODWORD(v105[-4]) = a7;
  HIDWORD(v105[-4]) = v38;
  uint64_t v111 = v38;
  v105[-3] = v39;
  v105[-2] = 0xE600000000000000;
  v105[-1] = v27;
  swift_bridgeObjectRetain();
  uint64_t v116 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)&v105[-8], (uint64_t)v35);
  swift_bridgeObjectRelease();
  unint64_t v115 = a7;
  uint64_t v40 = sub_1B67AFBF8((uint64_t)v36, (unint64_t)v37, 0, 0xE000000000000000, a7, 0x656C706D6973uLL, 0xE600000000000000, (uint64_t)v27);
  unint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v27);
  int v43 = *(unsigned __int8 *)(v32 + 32);
  uint64_t v44 = sub_1B6C4FAB8(*(unsigned char *)(v32 + 32));
  uint64_t v45 = (void *)v44;
  uint64_t v46 = (uint64_t)v129;
  if (v43 == 1)
  {
    *(void *)(v44 + 48) = *(void *)(v128 + 24);
    swift_unknownObjectRetain();
    uint64_t v44 = swift_unknownObjectRelease();
    if (!v45[6])
    {
      uint64_t v109 = 0;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v47 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v134[0] = 0;
      swift_retain();
      sub_1B6B33E34(v47, (uint64_t *)v134, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v44 = swift_release();
      char v9 = v109;
    }
  }
  if ((*(uint64_t (**)(uint64_t))(*v45 + 280))(v44))
  {
    LOWORD(v134[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v48 = sub_1B6830944((unsigned __int8 *)v134);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *id v64 = 0;
      v64[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    uint64_t v49 = v48;
    uint64_t v50 = *(void **)(v48 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v49 + 32) = v50;
    unint64_t v110 = v42;
    uint64_t v109 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v50 = sub_1B6335858(0, v50[2] + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    unint64_t v53 = v50[2];
    unint64_t v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      uint64_t v50 = sub_1B6335858(v52 > 1, v53 + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    _OWORD v50[2] = v53 + 1;
    unint64_t v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v124)
    {
      *(unsigned char *)(v49 + 26) = v122 & 1;
      uint64_t v55 = swift_bridgeObjectRetain();
      sub_1B6641518(v55);
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B6641518(v56);
    }
    v45[10] = v49;
    swift_release();
    unint64_t v42 = v110;
    char v9 = v109;
  }
  uint64_t v57 = sub_1B6C4C204(v40, v42, 0x747069726373, 0xE600000000000000);
  if (v9)
  {
    v134[0] = v9;
    id v59 = v9;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    type metadata accessor for MTLLibraryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v60 = v40;
      uint64_t v61 = v133;
      uint64_t v131 = v133;
      sub_1B6959B20();
      sub_1B6E30D38();
      if (v132 == 3)
      {

        sub_1B6959B78();
        swift_allocError();
        *(void *)uint64_t v62 = v61;
        *(void *)(v62 + 8) = v60;
        *(void *)(v62 + 16) = v42;
        *(void *)(v62 + 24) = 0;
        *(unsigned char *)(v62 + 32) = 2;
        swift_bridgeObjectRetain();
        id v63 = v61;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v58 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v45 + 360))(v57);
  uint64_t v106 = v65;
  uint64_t v107 = v58;
  uint64_t v109 = v66;
  uint64_t v122 = v67;
  uint64_t v68 = swift_bridgeObjectRelease();
  v134[0] = (id)MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v45 + 376))(v68);
  if (v43 == 1) {
    uint64_t v69 = &unk_1F0F83B28;
  }
  else {
    uint64_t v69 = &unk_1F0F83AF8;
  }
  uint64_t v70 = (uint64_t *)&unk_1F0F83B08;
  if (v43 == 1) {
    uint64_t v70 = (uint64_t *)&unk_1F0F83B38;
  }
  uint64_t v71 = *v70;
  if (!*v70)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v93 = (id)MEMORY[0x1E4FBC860];
    id v94 = (char *)MEMORY[0x1E4FBC860];
LABEL_58:
    swift_bridgeObjectRelease();
    unint64_t v95 = v120;
    id v96 = v119;
    *id v120 = v118;
    v95[1] = v96;
    uint64_t v97 = v121;
    uint64_t v98 = v122;
    uint64_t *v121 = v107;
    v97[1] = v98;
    uint64_t v99 = (uint64_t)v109;
    v97[2] = v106;
    v97[3] = v99;
    v97[4] = v40;
    v97[5] = v42;
    v97[6] = (uint64_t)v45;
    v97[7] = (uint64_t)v94;
    v97[8] = (uint64_t)v93;
    return;
  }
  v105[1] = v69;
  uint64_t v72 = (char *)&unk_1F0F83B18;
  if (v43 == 1) {
    uint64_t v72 = (char *)&unk_1F0F83B48;
  }
  uint64_t v73 = (unint64_t *)(v72 + 8);
  uint64_t v123 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v110 = v42;
  uint64_t v108 = v40;
  while (1)
  {
    uint64_t v124 = v71;
    unint64_t v74 = *v73;
    uint64_t v128 = *(v73 - 1);
    sub_1B6959AAC(v126, v46, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    uint64_t v75 = v46;
    uint64_t v76 = v46;
    uint64_t v77 = v114;
    if (v125((char *)v75, 1, v114) == 1)
    {
      uint64_t v78 = v115;
      uint64_t v79 = v127;
      int v80 = v111;
      *uint64_t v127 = v115;
      v79[1] = v80;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B67BAA04(v76);
    }
    else
    {
      uint64_t v79 = v127;
      sub_1B695B370(v76, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
      uint64_t v78 = v115;
    }
    v112(v79, 0, 1, v77);
    uint64_t v81 = sub_1B67AFBF8(v128, v74, 0, 0xE000000000000000, v78, 0x656C706D6973uLL, 0xE600000000000000, (uint64_t)v79);
    uint64_t v82 = (uint64_t)v79;
    uint64_t v83 = v81;
    uint64_t v85 = v84;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v82);
    if (*(unsigned char *)(v130 + 32) != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v45 + 336))(v83, v85);
    uint64_t v40 = v108;
    uint64_t v46 = (uint64_t)v129;
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v86);
    if (*(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
LABEL_42:
    v73 += 2;
    uint64_t v71 = v124 - 1;
    unint64_t v42 = v110;
    if (v124 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v93 = v134[0];
      id v94 = v123;
      goto LABEL_58;
    }
  }
  uint64_t v87 = (void *)v45[8];
  uint64_t v40 = v108;
  uint64_t v46 = (uint64_t)v129;
  if (!v87)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v100 = 0xD000000000000017;
    unint64_t v101 = 0x80000001B6F3E580;
    char v102 = 4;
    goto LABEL_61;
  }
  uint64_t v88 = sub_1B6E31848();
  uint64_t v89 = dlsym(v87, (const char *)(v88 + 32));
  swift_release();
  if (v89)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v123 = sub_1B68C4A70(0, *((void *)v123 + 2) + 1, 1, v123);
    }
    unint64_t v90 = v123;
    unint64_t v92 = *((void *)v123 + 2);
    unint64_t v91 = *((void *)v123 + 3);
    if (v92 >= v91 >> 1) {
      unint64_t v90 = sub_1B68C4A70(v91 > 1, v92 + 1, 1, v123);
    }
    *((void *)v90 + 2) = v92 + 1;
    uint64_t v123 = v90;
    *(void *)&v90[8 * v92 + 32] = v89;
    goto LABEL_42;
  }
  dlerror();
  uint64_t v103 = sub_1B6E31968();
  unint64_t v101 = v104;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v100 = v103;
  char v102 = 5;
LABEL_61:
  *(void *)(v100 + 16) = 0;
  *(void *)(v100 + 24) = 0;
  *(void *)(v100 + 8) = v101;
  *(unsigned char *)(v100 + 32) = v102;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B692D42C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  char v9 = v8;
  uint64_t v123 = a6;
  uint64_t v124 = a5;
  char v121 = a8;
  uint64_t v122 = a4;
  uint64_t v128 = a2;
  id v120 = a1;
  unint64_t v12 = HIDWORD(a7);
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v129 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v127 = (_DWORD *)((char *)v105 - v19);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)v105 - v22;
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (_DWORD *)((char *)v105 - v26);
  uint64_t v28 = *(int *)(type metadata accessor for GraphScript(0) + 40);
  uint64_t v130 = a3;
  uint64_t v126 = a3 + v28;
  sub_1B6959AAC(a3 + v28, (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v29 = type metadata accessor for ScriptIndex();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v125(v23, 1, v29) == 1)
  {
    *uint64_t v27 = a7;
    v27[1] = v12;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  unsigned int v31 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56);
  v31(v27, 0, 1, v29);
  uint64_t v32 = v130;
  uint64_t v33 = sub_1B68F179C(0, v134);
  if (v8)
  {
    sub_1B67BAA04((uint64_t)v27);
    return;
  }
  uint64_t v112 = v31;
  uint64_t v113 = v30 + 48;
  uint64_t v114 = v29;
  id v35 = v134[0];
  id v36 = v134[1];
  id v37 = v134[2];
  id v117 = v134[4];
  id v118 = v134[5];
  id v119 = v134[6];
  MEMORY[0x1F4188790](v33, v34);
  v105[-6] = 0;
  v105[-5] = 0xE000000000000000;
  LODWORD(v105[-4]) = a7;
  HIDWORD(v105[-4]) = v38;
  uint64_t v111 = v38;
  v105[-3] = v39;
  v105[-2] = 0xE500000000000000;
  v105[-1] = v27;
  swift_bridgeObjectRetain();
  uint64_t v116 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)&v105[-8], (uint64_t)v35);
  swift_bridgeObjectRelease();
  unint64_t v115 = a7;
  uint64_t v40 = sub_1B67AFBF8((uint64_t)v36, (unint64_t)v37, 0, 0xE000000000000000, a7, 0x6870617267uLL, 0xE500000000000000, (uint64_t)v27);
  unint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v27);
  int v43 = *(unsigned __int8 *)(v32 + 24);
  uint64_t v44 = sub_1B6C4FAB8(*(unsigned char *)(v32 + 24));
  uint64_t v45 = (void *)v44;
  uint64_t v46 = (uint64_t)v129;
  if (v43 == 1)
  {
    *(void *)(v44 + 48) = *(void *)(v128 + 24);
    swift_unknownObjectRetain();
    uint64_t v44 = swift_unknownObjectRelease();
    if (!v45[6])
    {
      uint64_t v109 = 0;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v47 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v134[0] = 0;
      swift_retain();
      sub_1B6B33E34(v47, (uint64_t *)v134, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v44 = swift_release();
      char v9 = v109;
    }
  }
  if ((*(uint64_t (**)(uint64_t))(*v45 + 280))(v44))
  {
    LOWORD(v134[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v48 = sub_1B6830944((unsigned __int8 *)v134);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *id v64 = 0;
      v64[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    uint64_t v49 = v48;
    uint64_t v50 = *(void **)(v48 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v49 + 32) = v50;
    unint64_t v110 = v42;
    uint64_t v109 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v50 = sub_1B6335858(0, v50[2] + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    unint64_t v53 = v50[2];
    unint64_t v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      uint64_t v50 = sub_1B6335858(v52 > 1, v53 + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    _OWORD v50[2] = v53 + 1;
    unint64_t v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v124)
    {
      *(unsigned char *)(v49 + 26) = v122 & 1;
      uint64_t v55 = swift_bridgeObjectRetain();
      sub_1B6641518(v55);
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B6641518(v56);
    }
    v45[10] = v49;
    swift_release();
    unint64_t v42 = v110;
    char v9 = v109;
  }
  uint64_t v57 = sub_1B6C4C204(v40, v42, 0x747069726373, 0xE600000000000000);
  if (v9)
  {
    v134[0] = v9;
    id v59 = v9;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    type metadata accessor for MTLLibraryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v60 = v40;
      uint64_t v61 = v133;
      uint64_t v131 = v133;
      sub_1B6959B20();
      sub_1B6E30D38();
      if (v132 == 3)
      {

        sub_1B6959B78();
        swift_allocError();
        *(void *)uint64_t v62 = v61;
        *(void *)(v62 + 8) = v60;
        *(void *)(v62 + 16) = v42;
        *(void *)(v62 + 24) = 0;
        *(unsigned char *)(v62 + 32) = 2;
        swift_bridgeObjectRetain();
        id v63 = v61;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v58 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v45 + 360))(v57);
  uint64_t v106 = v65;
  uint64_t v107 = v58;
  uint64_t v109 = v66;
  uint64_t v122 = v67;
  uint64_t v68 = swift_bridgeObjectRelease();
  v134[0] = (id)MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v45 + 376))(v68);
  if (v43 == 1) {
    uint64_t v69 = &unk_1F0F83AC8;
  }
  else {
    uint64_t v69 = &unk_1F0F83A98;
  }
  uint64_t v70 = (uint64_t *)&unk_1F0F83AA8;
  if (v43 == 1) {
    uint64_t v70 = (uint64_t *)&unk_1F0F83AD8;
  }
  uint64_t v71 = *v70;
  if (!*v70)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v93 = (id)MEMORY[0x1E4FBC860];
    id v94 = (char *)MEMORY[0x1E4FBC860];
LABEL_58:
    swift_bridgeObjectRelease();
    unint64_t v95 = v120;
    id v96 = v119;
    *id v120 = v118;
    v95[1] = v96;
    uint64_t v97 = v121;
    uint64_t v98 = v122;
    uint64_t *v121 = v107;
    v97[1] = v98;
    uint64_t v99 = (uint64_t)v109;
    v97[2] = v106;
    v97[3] = v99;
    v97[4] = v40;
    v97[5] = v42;
    v97[6] = (uint64_t)v45;
    v97[7] = (uint64_t)v94;
    v97[8] = (uint64_t)v93;
    return;
  }
  v105[1] = v69;
  uint64_t v72 = (char *)&unk_1F0F83AB8;
  if (v43 == 1) {
    uint64_t v72 = (char *)&unk_1F0F83AE8;
  }
  uint64_t v73 = (unint64_t *)(v72 + 8);
  uint64_t v123 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v110 = v42;
  uint64_t v108 = v40;
  while (1)
  {
    uint64_t v124 = v71;
    unint64_t v74 = *v73;
    uint64_t v128 = *(v73 - 1);
    sub_1B6959AAC(v126, v46, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    uint64_t v75 = v46;
    uint64_t v76 = v46;
    uint64_t v77 = v114;
    if (v125((char *)v75, 1, v114) == 1)
    {
      uint64_t v78 = v115;
      uint64_t v79 = v127;
      int v80 = v111;
      *uint64_t v127 = v115;
      v79[1] = v80;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B67BAA04(v76);
    }
    else
    {
      uint64_t v79 = v127;
      sub_1B695B370(v76, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
      uint64_t v78 = v115;
    }
    v112(v79, 0, 1, v77);
    uint64_t v81 = sub_1B67AFBF8(v128, v74, 0, 0xE000000000000000, v78, 0x6870617267uLL, 0xE500000000000000, (uint64_t)v79);
    uint64_t v82 = (uint64_t)v79;
    uint64_t v83 = v81;
    uint64_t v85 = v84;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v82);
    if (*(unsigned char *)(v130 + 24) != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v45 + 336))(v83, v85);
    uint64_t v40 = v108;
    uint64_t v46 = (uint64_t)v129;
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v86);
    if (*(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
LABEL_42:
    v73 += 2;
    uint64_t v71 = v124 - 1;
    unint64_t v42 = v110;
    if (v124 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v93 = v134[0];
      id v94 = v123;
      goto LABEL_58;
    }
  }
  uint64_t v87 = (void *)v45[8];
  uint64_t v40 = v108;
  uint64_t v46 = (uint64_t)v129;
  if (!v87)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v100 = 0xD000000000000017;
    unint64_t v101 = 0x80000001B6F3E580;
    char v102 = 4;
    goto LABEL_61;
  }
  uint64_t v88 = sub_1B6E31848();
  uint64_t v89 = dlsym(v87, (const char *)(v88 + 32));
  swift_release();
  if (v89)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v123 = sub_1B68C4A70(0, *((void *)v123 + 2) + 1, 1, v123);
    }
    unint64_t v90 = v123;
    unint64_t v92 = *((void *)v123 + 2);
    unint64_t v91 = *((void *)v123 + 3);
    if (v92 >= v91 >> 1) {
      unint64_t v90 = sub_1B68C4A70(v91 > 1, v92 + 1, 1, v123);
    }
    *((void *)v90 + 2) = v92 + 1;
    uint64_t v123 = v90;
    *(void *)&v90[8 * v92 + 32] = v89;
    goto LABEL_42;
  }
  dlerror();
  uint64_t v103 = sub_1B6E31968();
  unint64_t v101 = v104;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v100 = v103;
  char v102 = 5;
LABEL_61:
  *(void *)(v100 + 16) = 0;
  *(void *)(v100 + 24) = 0;
  *(void *)(v100 + 8) = v101;
  *(unsigned char *)(v100 + 32) = v102;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B692E2A0(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  char v9 = v8;
  uint64_t v123 = a6;
  uint64_t v124 = a5;
  char v121 = a8;
  uint64_t v122 = a4;
  uint64_t v128 = a2;
  id v120 = a1;
  unint64_t v12 = HIDWORD(a7);
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v129 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v127 = (_DWORD *)((char *)v105 - v19);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)v105 - v22;
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (_DWORD *)((char *)v105 - v26);
  uint64_t v28 = *(int *)(type metadata accessor for EmitterScript(0) + 32);
  uint64_t v130 = a3;
  uint64_t v126 = &a3[v28];
  sub_1B6959AAC((uint64_t)&a3[v28], (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v29 = type metadata accessor for ScriptIndex();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v125(v23, 1, v29) == 1)
  {
    *uint64_t v27 = a7;
    v27[1] = v12;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  unsigned int v31 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56);
  v31(v27, 0, 1, v29);
  uint64_t v32 = v130;
  uint64_t v33 = sub_1B68F259C(0, v134);
  if (v8)
  {
    sub_1B67BAA04((uint64_t)v27);
    return;
  }
  uint64_t v112 = v31;
  uint64_t v113 = v30 + 48;
  uint64_t v114 = v29;
  id v35 = v134[0];
  id v36 = v134[1];
  id v37 = v134[2];
  id v117 = v134[4];
  id v118 = v134[5];
  id v119 = v134[6];
  MEMORY[0x1F4188790](v33, v34);
  v105[-6] = 0;
  v105[-5] = 0xE000000000000000;
  LODWORD(v105[-4]) = a7;
  HIDWORD(v105[-4]) = v38;
  uint64_t v111 = v38;
  v105[-3] = v39;
  v105[-2] = 0xE700000000000000;
  v105[-1] = v27;
  swift_bridgeObjectRetain();
  uint64_t v116 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)&v105[-8], (uint64_t)v35);
  swift_bridgeObjectRelease();
  unint64_t v115 = a7;
  uint64_t v40 = sub_1B67AFBF8((uint64_t)v36, (unint64_t)v37, 0, 0xE000000000000000, a7, 0x72657474696D65uLL, 0xE700000000000000, (uint64_t)v27);
  unint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67BAA04((uint64_t)v27);
  int v43 = *v32;
  uint64_t v44 = sub_1B6C4FAB8(*v32);
  uint64_t v45 = (void *)v44;
  uint64_t v46 = (uint64_t)v129;
  if (v43 == 1)
  {
    *(void *)(v44 + 48) = *(void *)(v128 + 24);
    swift_unknownObjectRetain();
    uint64_t v44 = swift_unknownObjectRelease();
    if (!v45[6])
    {
      uint64_t v109 = 0;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v47 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v134[0] = 0;
      swift_retain();
      sub_1B6B33E34(v47, (uint64_t *)v134, 0xD000000000000024, 0x80000001B6F3E5A0);
      swift_release();
      uint64_t v44 = swift_release();
      char v9 = v109;
    }
  }
  if ((*(uint64_t (**)(uint64_t))(*v45 + 280))(v44))
  {
    LOWORD(v134[0]) = 512;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    uint64_t v48 = sub_1B6830944((unsigned __int8 *)v134);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B67C5B68();
      swift_allocError();
      *id v64 = 0;
      v64[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    uint64_t v49 = v48;
    uint64_t v50 = *(void **)(v48 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v49 + 32) = v50;
    unint64_t v110 = v42;
    uint64_t v109 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v50 = sub_1B6335858(0, v50[2] + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    unint64_t v53 = v50[2];
    unint64_t v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      uint64_t v50 = sub_1B6335858(v52 > 1, v53 + 1, 1, v50);
      *(void *)(v49 + 32) = v50;
    }
    _OWORD v50[2] = v53 + 1;
    unint64_t v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v124)
    {
      *(unsigned char *)(v49 + 26) = v122 & 1;
      uint64_t v55 = swift_bridgeObjectRetain();
      sub_1B6641518(v55);
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B6641518(v56);
    }
    v45[10] = v49;
    swift_release();
    unint64_t v42 = v110;
    char v9 = v109;
  }
  uint64_t v57 = sub_1B6C4C204(v40, v42, 0x747069726373, 0xE600000000000000);
  if (v9)
  {
    v134[0] = v9;
    id v59 = v9;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    type metadata accessor for MTLLibraryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v60 = v40;
      uint64_t v61 = v133;
      uint64_t v131 = v133;
      sub_1B6959B20();
      sub_1B6E30D38();
      if (v132 == 3)
      {

        sub_1B6959B78();
        swift_allocError();
        *(void *)uint64_t v62 = v61;
        *(void *)(v62 + 8) = v60;
        *(void *)(v62 + 16) = v42;
        *(void *)(v62 + 24) = 0;
        *(unsigned char *)(v62 + 32) = 2;
        swift_bridgeObjectRetain();
        id v63 = v61;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v58 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v45 + 360))(v57);
  uint64_t v106 = v65;
  uint64_t v107 = v58;
  uint64_t v109 = v66;
  uint64_t v122 = v67;
  uint64_t v68 = swift_bridgeObjectRelease();
  v134[0] = (id)MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t))(*v45 + 376))(v68);
  if (v43 == 1) {
    uint64_t v69 = &unk_1F0F83B88;
  }
  else {
    uint64_t v69 = &unk_1F0F83B58;
  }
  uint64_t v70 = (uint64_t *)&unk_1F0F83B68;
  if (v43 == 1) {
    uint64_t v70 = (uint64_t *)&unk_1F0F83B98;
  }
  uint64_t v71 = *v70;
  if (!*v70)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v93 = (id)MEMORY[0x1E4FBC860];
    id v94 = (char *)MEMORY[0x1E4FBC860];
LABEL_58:
    swift_bridgeObjectRelease();
    unint64_t v95 = v120;
    id v96 = v119;
    *id v120 = v118;
    v95[1] = v96;
    uint64_t v97 = v121;
    uint64_t v98 = v122;
    uint64_t *v121 = v107;
    v97[1] = v98;
    uint64_t v99 = (uint64_t)v109;
    v97[2] = v106;
    v97[3] = v99;
    v97[4] = v40;
    v97[5] = v42;
    v97[6] = (uint64_t)v45;
    v97[7] = (uint64_t)v94;
    v97[8] = (uint64_t)v93;
    return;
  }
  v105[1] = v69;
  uint64_t v72 = (char *)&unk_1F0F83B78;
  if (v43 == 1) {
    uint64_t v72 = (char *)&unk_1F0F83BA8;
  }
  uint64_t v73 = (unint64_t *)(v72 + 8);
  uint64_t v123 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v110 = v42;
  uint64_t v108 = v40;
  while (1)
  {
    uint64_t v124 = v71;
    unint64_t v74 = *v73;
    uint64_t v128 = *(v73 - 1);
    sub_1B6959AAC((uint64_t)v126, v46, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
    uint64_t v75 = v46;
    uint64_t v76 = v46;
    uint64_t v77 = v114;
    if (v125((char *)v75, 1, v114) == 1)
    {
      uint64_t v78 = v115;
      uint64_t v79 = v127;
      int v80 = v111;
      *uint64_t v127 = v115;
      v79[1] = v80;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B67BAA04(v76);
    }
    else
    {
      uint64_t v79 = v127;
      sub_1B695B370(v76, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
      uint64_t v78 = v115;
    }
    v112(v79, 0, 1, v77);
    uint64_t v81 = sub_1B67AFBF8(v128, v74, 0, 0xE000000000000000, v78, 0x72657474696D65uLL, 0xE700000000000000, (uint64_t)v79);
    uint64_t v82 = (uint64_t)v79;
    uint64_t v83 = v81;
    uint64_t v85 = v84;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v82);
    if (*v130 != 1) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(*v45 + 336))(v83, v85);
    uint64_t v40 = v108;
    uint64_t v46 = (uint64_t)v129;
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v86);
    if (*(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v134[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
LABEL_42:
    v73 += 2;
    uint64_t v71 = v124 - 1;
    unint64_t v42 = v110;
    if (v124 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v93 = v134[0];
      id v94 = v123;
      goto LABEL_58;
    }
  }
  uint64_t v87 = (void *)v45[8];
  uint64_t v40 = v108;
  uint64_t v46 = (uint64_t)v129;
  if (!v87)
  {
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v100 = 0xD000000000000017;
    unint64_t v101 = 0x80000001B6F3E580;
    char v102 = 4;
    goto LABEL_61;
  }
  uint64_t v88 = sub_1B6E31848();
  uint64_t v89 = dlsym(v87, (const char *)(v88 + 32));
  swift_release();
  if (v89)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v123 = sub_1B68C4A70(0, *((void *)v123 + 2) + 1, 1, v123);
    }
    unint64_t v90 = v123;
    unint64_t v92 = *((void *)v123 + 2);
    unint64_t v91 = *((void *)v123 + 3);
    if (v92 >= v91 >> 1) {
      unint64_t v90 = sub_1B68C4A70(v91 > 1, v92 + 1, 1, v123);
    }
    *((void *)v90 + 2) = v92 + 1;
    uint64_t v123 = v90;
    *(void *)&v90[8 * v92 + 32] = v89;
    goto LABEL_42;
  }
  dlerror();
  uint64_t v103 = sub_1B6E31968();
  unint64_t v101 = v104;
  sub_1B6959B78();
  swift_allocError();
  *(void *)uint64_t v100 = v103;
  char v102 = 5;
LABEL_61:
  *(void *)(v100 + 16) = 0;
  *(void *)(v100 + 24) = 0;
  *(void *)(v100 + 8) = v101;
  *(unsigned char *)(v100 + 32) = v102;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B692F120(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 32) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a1 + 40) = 0;
  uint64_t v3 = a1 + *(int *)(type metadata accessor for ParticleInitScript(0) + 36);
  uint64_t v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(a1 + 8) = 0xD0000000000000BFLL;
  *(void *)(a1 + 16) = 0x80000001B6F33DE0;
  *(void *)(a1 + 24) = &unk_1F0F83528;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v6 = a1 + v5[9];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  *(unsigned char *)(a1 + v5[10]) = 0;
  *(void *)(a1 + v5[11]) = 0;
  uint64_t v7 = (void *)(a1 + v5[12]);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  *(void *)(a1 + v5[13]) = v2;
}

void sub_1B692F250(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = (int *)type metadata accessor for MetalFunctionScript(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(unsigned char *)(a1 + v2[8]) = 0;
  *(void *)(a1 + v2[7]) = &unk_1F0F83558;
  *(void *)a1 = 0xD000000000000129;
  *(void *)(a1 + 8) = 0x80000001B6F3D5A0;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v6 = a1 + v5[9];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  *(unsigned char *)(a1 + v5[10]) = 0;
  *(void *)(a1 + v5[11]) = 0;
  uint64_t v7 = (void *)(a1 + v5[12]);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  *(void *)(a1 + v5[13]) = MEMORY[0x1E4FBC860];
}

void sub_1B692F388(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  *(void *)(a1 + 24) = &unk_1F0F835F8;
  *(_WORD *)(a1 + 32) = 2;
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SimpleScript(0) + 36);
  uint64_t v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v6 = a1 + v5[9];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  *(unsigned char *)(a1 + v5[10]) = 0;
  *(void *)(a1 + v5[11]) = 0;
  uint64_t v7 = (void *)(a1 + v5[12]);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  *(void *)(a1 + v5[13]) = v2;
}

void sub_1B692F4A4(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  *(unsigned char *)(a1 + 24) = 2;
  *(void *)(a1 + 32) = &unk_1F0F83588;
  *(_WORD *)(a1 + 40) = 0;
  uint64_t v3 = a1 + *(int *)(type metadata accessor for GraphScript(0) + 40);
  uint64_t v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1B62AC710(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v6 = a1 + v5[9];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  *(unsigned char *)(a1 + v5[10]) = 0;
  *(void *)(a1 + v5[11]) = 0;
  uint64_t v7 = (void *)(a1 + v5[12]);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  *(void *)(a1 + v5[13]) = v2;
}

void sub_1B692F5C8(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 32) = 0;
  uint64_t v2 = a1 + *(int *)(type metadata accessor for EmitterScript(0) + 32);
  uint64_t v3 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)(a1 + 8) = 0xD0000000000000C0;
  *(void *)(a1 + 16) = 0x80000001B6F33C80;
  *(void *)(a1 + 24) = &unk_1F0F83628;
  sub_1B62AC710(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v5 = a1 + v4[9];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  *(unsigned char *)(a1 + v4[10]) = 0;
  *(void *)(a1 + v4[11]) = 0;
  uint64_t v6 = (void *)(a1 + v4[12]);
  *uint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  *(void *)(a1 + v4[13]) = MEMORY[0x1E4FBC860];
}

void sub_1B692F6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, const char *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, unint64_t a13)
{
  uint64_t v88 = a8;
  uint64_t v89 = a4;
  uint64_t v86 = a7;
  uint64_t v90 = a6;
  unint64_t v91 = a5;
  sub_1B62AC710(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v84 = v16;
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v85 = (uint64_t)&v71 - v18;
  uint64_t v19 = sub_1B6E312D8();
  uint64_t v82 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1B6E31288();
  *(void *)&long long v87 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v30 = (char *)&v71 - v29;
  uint64_t v83 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v92 = a1;
  uint64_t v31 = *(void *)(a1 + 80);
  uint64_t v81 = (uint64_t *)(a1 + 80);
  if (!*(void *)(v31 + 16) || (uint64_t v32 = a2, v33 = sub_1B69FABB0(a2, a3), (v34 & 1) == 0))
  {
    uint64_t v109 = 0;
    long long v107 = 0u;
    long long v108 = 0u;
    long long v105 = 0u;
    long long v106 = 0u;
    long long v104 = 0u;
    unsigned __int8 v110 = -1;
    goto LABEL_7;
  }
  uint64_t v80 = a3;
  sub_1B6874B44(*(void *)(v31 + 56) + 96 * v33, (uint64_t)&v104);
  if (v110 == 255)
  {
LABEL_7:
    sub_1B639559C((uint64_t)&v104, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B6874B44((uint64_t)&v104, (uint64_t)v97);
  sub_1B639559C((uint64_t)&v104, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v97, (uint64_t)v95);
  if (v96)
  {
    sub_1B69599E0((uint64_t)v95);
    sub_1B69599E0((uint64_t)v97);
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
LABEL_9:
    sub_1B67C5B68();
    id v35 = (void *)swift_allocError();
    *id v36 = xmmword_1B6E95930;
    v91();

    return;
  }
  uint64_t v37 = *(void *)&v95[0];
  sub_1B69599E0((uint64_t)v97);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
  if (v37 != v89) {
    goto LABEL_9;
  }
  unint64_t v78 = a13;
  uint64_t v77 = a12;
  uint64_t v76 = a11;
  uint64_t v75 = a10;
  uint64_t v74 = a9;
  uint64_t v109 = 0;
  long long v107 = 0u;
  long long v108 = 0u;
  long long v105 = 0u;
  long long v106 = 0u;
  long long v104 = 0u;
  unsigned __int8 v110 = -1;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1B6E312C8();
  sub_1B6385660(v38, (uint64_t)qword_1EB997E68);
  uint64_t v39 = sub_1B6E312A8();
  sub_1B6E312E8();
  int v73 = sub_1B6E322A8();
  char v40 = sub_1B6E323F8();
  uint64_t v79 = v32;
  if (v40)
  {
    os_log_t v72 = v39;
    swift_retain();
    sub_1B6E31318();
    swift_release();
    uint64_t v41 = v82;
    if ((*(unsigned int (**)(char *, uint64_t))(v82 + 88))(v22, v19) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v42 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v19);
      unint64_t v42 = "";
    }
    uint64_t v86 = v42;
    unint64_t v43 = v78;
    os_signpost_type_t v44 = v73;
    uint64_t v45 = v87;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v26, v30, v23);
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v46 = 0;
    os_signpost_id_t v47 = sub_1B6E31278();
    os_log_t v48 = v72;
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v72, v44, v47, "buildScript", v86, v46, 2u);
    MEMORY[0x1BA9B84C0](v46, -1, -1);

    uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
    v49(v30, v23);
    v49(v26, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v87 + 8))(v30, v23);
    unint64_t v43 = v78;
  }
  sub_1B6927EC8(v95, v92, v74, v75, v76, v77, v43, v97);
  uint64_t v50 = v97[2];
  uint64_t v86 = (const char *)v97[1];
  unint64_t v51 = v98;
  uint64_t v88 = (void *)*((void *)&v100 + 1);
  long long v87 = v101;
  uint64_t v52 = v85;
  sub_1B6959704(v83, v85, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v53 = v84;
  *(unsigned char *)(v52 + *(int *)(v84 + 40)) = 1;
  uint64_t v54 = sub_1B6B97138();
  uint64_t v56 = sub_1B6B97234(v50, v51, v54, v55 & 1);
  uint64_t v57 = *(int *)(v53 + 52);
  swift_bridgeObjectRelease();
  *(void *)(v52 + v57) = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v98 = v53;
  uint64_t v58 = sub_1B62C12C4(v97);
  sub_1B6959704(v52, (uint64_t)v58, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  long long v100 = v87;
  id v99 = v88;
  long long v101 = v95[0];
  char v102 = &type metadata for ParticleScriptRuntime;
  sub_1B69596A8(v52, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B639559C((uint64_t)&v104, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  char v103 = 1;
  sub_1B62D7A10((uint64_t)v97, (uint64_t)&v104, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  uint64_t v59 = v80;
  uint64_t v60 = v92;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v92 + 72));
  uint64_t v61 = *(void *)(v60 + 80);
  uint64_t v62 = v79;
  if (*(void *)(v61 + 16))
  {
    unint64_t v63 = sub_1B69FABB0(v79, v59);
    if (v64)
    {
      sub_1B6874B44(*(void *)(v61 + 56) + 96 * v63, (uint64_t)v95);
      sub_1B67F7AF0((uint64_t)v95, (uint64_t)v97);
      sub_1B6874B44((uint64_t)v97, (uint64_t)v95);
      if (v96)
      {
        sub_1B69599E0((uint64_t)v95);
LABEL_26:
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
        sub_1B67C5B68();
        uint64_t v67 = (void *)swift_allocError();
        _OWORD *v68 = xmmword_1B6E95930;
        v91();

        sub_1B69599E0((uint64_t)v97);
        sub_1B639559C((uint64_t)&v104, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (*(void *)&v95[0] != v89) {
        goto LABEL_26;
      }
      sub_1B6959AAC((uint64_t)&v104, (uint64_t)v95, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
      if (v96 == 255)
      {
        sub_1B639559C((uint64_t)v95, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
        sub_1B67E33B4(v62, v59, (uint64_t)v94);
        sub_1B639559C((uint64_t)v94, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
      }
      else
      {
        sub_1B67F7AF0((uint64_t)v95, (uint64_t)v94);
        uint64_t v65 = v81;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v93 = *v65;
        *uint64_t v65 = 0x8000000000000000;
        sub_1B67E7264((uint64_t)v94, v62, v59, isUniquelyReferenced_nonNull_native);
        *uint64_t v65 = v93;
        swift_bridgeObjectRelease();
      }
      sub_1B69599E0((uint64_t)v97);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
  sub_1B6959AAC((uint64_t)&v104, (uint64_t)v97, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
  if (v103 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(void))v91)(0);
    sub_1B639559C((uint64_t)&v104, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v101);
LABEL_33:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
    return;
  }
  if (v103 == 2)
  {
    id v69 = v99;
    id v70 = v99;
    ((void (*)(id))v91)(v69);

    sub_1B639559C((uint64_t)&v104, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_33;
  }
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B6930504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, const char *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t (*a16)(uint64_t), uint64_t a17, void (*a18)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  void (*v48)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  os_signpost_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  os_signpost_id_t v52;
  os_log_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  unint64_t v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  void *v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  id v73;
  id v74;
  void *v75;
  _OWORD *v76;
  os_log_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  uint64_t v93;
  const char *v94;
  long long v95;
  void *v96;
  unint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(void);
  uint64_t v101;
  _OWORD v102[5];
  char v103;
  uint64_t v104[3];
  unint64_t v105;
  id v106;
  long long v107;
  long long v108;
  ValueMetadata *v109;
  char v110;
  long long v111;
  long long v112;
  long long v113;
  long long v114;
  long long v115;
  uint64_t v116;
  unsigned __int8 v117;

  unsigned __int8 v96 = a8;
  id v94 = a7;
  id v99 = a6;
  long long v100 = a5;
  unint64_t v98 = a4;
  uint64_t v97 = a15;
  uint64_t v92 = a16;
  uint64_t v93 = a17;
  sub_1B62AC710(0, a15, a16, a17, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v90 = v21;
  MEMORY[0x1F4188790](v21, v22);
  unint64_t v91 = (uint64_t)&v77 - v23;
  uint64_t v24 = sub_1B6E312D8();
  uint64_t v88 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1B6E31288();
  *(void *)&unint64_t v95 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28, v29);
  uint64_t v31 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32, v33);
  id v35 = (char *)&v77 - v34;
  uint64_t v89 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  long long v101 = a1;
  uint64_t v36 = *(void *)(a1 + 80);
  long long v87 = a1 + 80;
  if (!*(void *)(v36 + 16) || (uint64_t v37 = a2, v38 = sub_1B69FABB0(a2, a3), (v39 & 1) == 0))
  {
    uint64_t v116 = 0;
    uint64_t v114 = 0u;
    unint64_t v115 = 0u;
    uint64_t v112 = 0u;
    uint64_t v113 = 0u;
    uint64_t v111 = 0u;
    id v117 = -1;
    goto LABEL_7;
  }
  uint64_t v86 = a3;
  sub_1B6874B44(*(void *)(v36 + 56) + 96 * v38, (uint64_t)&v111);
  if (v117 == 255)
  {
LABEL_7:
    sub_1B639559C((uint64_t)&v111, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B6874B44((uint64_t)&v111, (uint64_t)v104);
  sub_1B639559C((uint64_t)&v111, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v104, (uint64_t)v102);
  if (v103)
  {
    sub_1B69599E0((uint64_t)v102);
    sub_1B69599E0((uint64_t)v104);
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v101 + 72));
LABEL_9:
    sub_1B67C5B68();
    char v40 = (void *)swift_allocError();
    *uint64_t v41 = xmmword_1B6E95930;
    v100();

    return;
  }
  uint64_t v42 = *(void *)&v102[0];
  sub_1B69599E0((uint64_t)v104);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v101 + 72));
  if (v42 != v98) {
    goto LABEL_9;
  }
  unint64_t v84 = a18;
  uint64_t v83 = a13;
  uint64_t v82 = a12;
  uint64_t v81 = a11;
  uint64_t v80 = a10;
  uint64_t v79 = a9;
  uint64_t v116 = 0;
  uint64_t v114 = 0u;
  unint64_t v115 = 0u;
  uint64_t v112 = 0u;
  uint64_t v113 = 0u;
  uint64_t v111 = 0u;
  id v117 = -1;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_1B6E312C8();
  sub_1B6385660(v43, (uint64_t)qword_1EB997E68);
  os_signpost_type_t v44 = sub_1B6E312A8();
  sub_1B6E312E8();
  unint64_t v78 = sub_1B6E322A8();
  char v45 = sub_1B6E323F8();
  uint64_t v85 = v37;
  if (v45)
  {
    uint64_t v77 = v44;
    swift_retain();
    sub_1B6E31318();
    swift_release();
    uint64_t v46 = v88;
    if ((*(unsigned int (**)(char *, uint64_t))(v88 + 88))(v27, v24) == *MEMORY[0x1E4FBD340])
    {
      os_signpost_id_t v47 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v24);
      os_signpost_id_t v47 = "";
    }
    id v94 = v47;
    os_log_t v48 = v84;
    uint64_t v49 = v78;
    uint64_t v50 = v95;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v31, v35, v28);
    unint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v51 = 0;
    uint64_t v52 = sub_1B6E31278();
    unint64_t v53 = v77;
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v77, v49, v52, "buildScript", v94, v51, 2u);
    MEMORY[0x1BA9B84C0](v51, -1, -1);

    uint64_t v54 = *(void (**)(char *, uint64_t))(v50 + 8);
    v54(v35, v28);
    v54(v31, v28);
    v48(v104, v102, v101, v79, v80, v81, v82, v83);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v95 + 8))(v35, v28);
    v84(v104, v102, v101, v79, v80, v81, v82, v83);
  }
  char v55 = v104[2];
  id v94 = (const char *)v104[1];
  uint64_t v56 = v105;
  unsigned __int8 v96 = (void *)*((void *)&v107 + 1);
  unint64_t v95 = v108;
  uint64_t v58 = v91;
  uint64_t v57 = v92;
  uint64_t v59 = v93;
  sub_1B6959704(v89, v91, v97, v92, v93, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v60 = v90;
  *(unsigned char *)(v58 + *(int *)(v90 + 40)) = 1;
  uint64_t v61 = sub_1B6B97138();
  unint64_t v63 = sub_1B6B97234(v55, v56, v61, v62 & 1);
  char v64 = *(int *)(v60 + 52);
  swift_bridgeObjectRelease();
  *(void *)(v58 + v64) = v63;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v105 = v60;
  uint64_t v65 = sub_1B62C12C4(v104);
  uint64_t v66 = v97;
  sub_1B6959704(v58, (uint64_t)v65, v97, v57, v59, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  long long v107 = v95;
  long long v106 = v96;
  long long v108 = v102[0];
  uint64_t v109 = &type metadata for ParticleScriptRuntime;
  sub_1B69596A8(v58, v66, v57, v59, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B639559C((uint64_t)&v111, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  unsigned __int8 v110 = 1;
  sub_1B62D7A10((uint64_t)v104, (uint64_t)&v111, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  uint64_t v67 = v86;
  uint64_t v68 = v101;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v101 + 72));
  id v69 = *(void *)(v68 + 80);
  id v70 = v85;
  if (*(void *)(v69 + 16))
  {
    uint64_t v71 = sub_1B69FABB0(v85, v67);
    if (v72)
    {
      sub_1B6874B44(*(void *)(v69 + 56) + 96 * v71, (uint64_t)v102);
      sub_1B67F7AF0((uint64_t)v102, (uint64_t)v104);
      sub_1B6874B44((uint64_t)v104, (uint64_t)v102);
      if (v103)
      {
        sub_1B69599E0((uint64_t)v102);
LABEL_30:
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v101 + 72));
        sub_1B67C5B68();
        uint64_t v75 = (void *)swift_allocError();
        *uint64_t v76 = xmmword_1B6E95930;
        v100();

        sub_1B69599E0((uint64_t)v104);
        sub_1B639559C((uint64_t)&v111, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (*(void *)&v102[0] != v98) {
        goto LABEL_30;
      }
      sub_1B6959AAC((uint64_t)&v111, (uint64_t)v102, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
      sub_1B6CE14C4((uint64_t)v102, v70, v67);
      sub_1B69599E0((uint64_t)v104);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v101 + 72));
  sub_1B6959AAC((uint64_t)&v111, (uint64_t)v104, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
  if (v110 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(void))v100)(0);
    sub_1B639559C((uint64_t)&v111, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v108);
LABEL_29:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v104);
    return;
  }
  if (v110 == 2)
  {
    int v73 = v106;
    uint64_t v74 = v106;
    ((void (*)(id))v100)(v73);

    sub_1B639559C((uint64_t)&v111, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_29;
  }
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B6931244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, const char *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, unint64_t a13)
{
  uint64_t v86 = a8;
  uint64_t v87 = a4;
  unint64_t v84 = a7;
  uint64_t v88 = a6;
  uint64_t v89 = a5;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v82 = v16;
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v83 = (uint64_t)&v69 - v18;
  uint64_t v19 = sub_1B6E312D8();
  uint64_t v80 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1B6E31288();
  *(void *)&long long v85 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v30 = (char *)&v69 - v29;
  uint64_t v81 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v90 = a1;
  uint64_t v31 = *(void *)(a1 + 80);
  uint64_t v79 = a1 + 80;
  if (!*(void *)(v31 + 16) || (uint64_t v32 = a2, v33 = sub_1B69FABB0(a2, a3), (v34 & 1) == 0))
  {
    uint64_t v105 = 0;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    long long v100 = 0u;
    unsigned __int8 v106 = -1;
    goto LABEL_7;
  }
  uint64_t v78 = a3;
  sub_1B6874B44(*(void *)(v31 + 56) + 96 * v33, (uint64_t)&v100);
  if (v106 == 255)
  {
LABEL_7:
    sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B6874B44((uint64_t)&v100, (uint64_t)v93);
  sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v93, (uint64_t)v91);
  if (v92)
  {
    sub_1B69599E0((uint64_t)v91);
    sub_1B69599E0((uint64_t)v93);
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v90 + 72));
LABEL_9:
    sub_1B67C5B68();
    id v35 = (void *)swift_allocError();
    *uint64_t v36 = xmmword_1B6E95930;
    v89();

    return;
  }
  uint64_t v37 = *(void *)&v91[0];
  sub_1B69599E0((uint64_t)v93);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v90 + 72));
  if (v37 != v87) {
    goto LABEL_9;
  }
  unint64_t v76 = a13;
  uint64_t v75 = a12;
  uint64_t v74 = a11;
  uint64_t v73 = a10;
  uint64_t v72 = a9;
  uint64_t v105 = 0;
  long long v103 = 0u;
  long long v104 = 0u;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v100 = 0u;
  unsigned __int8 v106 = -1;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1B6E312C8();
  sub_1B6385660(v38, (uint64_t)qword_1EB997E68);
  char v39 = sub_1B6E312A8();
  sub_1B6E312E8();
  int v71 = sub_1B6E322A8();
  char v40 = sub_1B6E323F8();
  uint64_t v77 = v32;
  if (v40)
  {
    os_log_t v70 = v39;
    swift_retain();
    sub_1B6E31318();
    swift_release();
    uint64_t v41 = v80;
    if ((*(unsigned int (**)(char *, uint64_t))(v80 + 88))(v22, v19) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v42 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v19);
      uint64_t v42 = "";
    }
    unint64_t v84 = v42;
    unint64_t v43 = v76;
    os_signpost_type_t v44 = v71;
    uint64_t v45 = v85;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v26, v30, v23);
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v46 = 0;
    os_signpost_id_t v47 = sub_1B6E31278();
    os_log_t v48 = v70;
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v70, v44, v47, "buildScript", v84, v46, 2u);
    MEMORY[0x1BA9B84C0](v46, -1, -1);

    uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
    v49(v30, v23);
    v49(v26, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v85 + 8))(v30, v23);
    unint64_t v43 = v76;
  }
  sub_1B692AA84((uint64_t *)v91, v90, v72, v73, v74, v75, v43, v93);
  uint64_t v50 = v93[2];
  unint64_t v84 = (const char *)v93[1];
  unint64_t v51 = v94;
  uint64_t v86 = (void *)*((void *)&v96 + 1);
  long long v85 = v97;
  uint64_t v52 = v83;
  sub_1B6959704(v81, v83, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v53 = v82;
  *(unsigned char *)(v52 + *(int *)(v82 + 40)) = 1;
  uint64_t v54 = sub_1B6B97138();
  uint64_t v56 = sub_1B6B97234(v50, v51, v54, v55 & 1);
  uint64_t v57 = *(int *)(v53 + 52);
  swift_bridgeObjectRelease();
  *(void *)(v52 + v57) = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v94 = v53;
  uint64_t v58 = sub_1B62C12C4(v93);
  sub_1B6959704(v52, (uint64_t)v58, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  long long v96 = v85;
  id v95 = v86;
  unint64_t v98 = &type metadata for ShaderScriptRuntime;
  long long v97 = v91[0];
  sub_1B69596A8(v52, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  char v99 = 1;
  sub_1B62D7A10((uint64_t)v93, (uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  uint64_t v59 = v78;
  uint64_t v60 = v90;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v90 + 72));
  uint64_t v61 = *(void *)(v60 + 80);
  uint64_t v62 = v77;
  if (*(void *)(v61 + 16))
  {
    unint64_t v63 = sub_1B69FABB0(v77, v59);
    if (v64)
    {
      sub_1B6874B44(*(void *)(v61 + 56) + 96 * v63, (uint64_t)v91);
      sub_1B67F7AF0((uint64_t)v91, (uint64_t)v93);
      sub_1B6874B44((uint64_t)v93, (uint64_t)v91);
      if (v92)
      {
        sub_1B69599E0((uint64_t)v91);
LABEL_30:
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v90 + 72));
        sub_1B67C5B68();
        uint64_t v67 = (void *)swift_allocError();
        _OWORD *v68 = xmmword_1B6E95930;
        v89();

        sub_1B69599E0((uint64_t)v93);
        sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (*(void *)&v91[0] != v87) {
        goto LABEL_30;
      }
      sub_1B6959AAC((uint64_t)&v100, (uint64_t)v91, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
      sub_1B6CE14C4((uint64_t)v91, v62, v59);
      sub_1B69599E0((uint64_t)v93);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v90 + 72));
  sub_1B6959AAC((uint64_t)&v100, (uint64_t)v93, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
  if (v99 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(void))v89)(0);
    sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v97);
LABEL_29:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v93);
    return;
  }
  if (v99 == 2)
  {
    id v65 = v95;
    id v66 = v95;
    ((void (*)(id))v89)(v65);

    sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_29;
  }
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B6931FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, const char *a7, void *a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, unint64_t a13)
{
  uint64_t v86 = a8;
  uint64_t v87 = a4;
  unint64_t v84 = a7;
  uint64_t v88 = a6;
  uint64_t v89 = a5;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v82 = v16;
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v83 = (uint64_t)&v69 - v18;
  uint64_t v19 = sub_1B6E312D8();
  uint64_t v80 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1B6E31288();
  *(void *)&long long v85 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v30 = (char *)&v69 - v29;
  uint64_t v81 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v90 = (void *)a1;
  uint64_t v31 = *(void *)(a1 + 80);
  uint64_t v79 = a1 + 80;
  if (!*(void *)(v31 + 16) || (uint64_t v32 = a2, v33 = sub_1B69FABB0(a2, a3), (v34 & 1) == 0))
  {
    uint64_t v105 = 0;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    long long v100 = 0u;
    unsigned __int8 v106 = -1;
    goto LABEL_7;
  }
  uint64_t v78 = a3;
  sub_1B6874B44(*(void *)(v31 + 56) + 96 * v33, (uint64_t)&v100);
  if (v106 == 255)
  {
LABEL_7:
    sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B6874B44((uint64_t)&v100, (uint64_t)v93);
  sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v93, (uint64_t)v91);
  if (v92)
  {
    sub_1B69599E0((uint64_t)v91);
    sub_1B69599E0((uint64_t)v93);
LABEL_8:
    os_unfair_lock_unlock((os_unfair_lock_t)v90[9]);
LABEL_9:
    sub_1B67C5B68();
    id v35 = (void *)swift_allocError();
    *uint64_t v36 = xmmword_1B6E95930;
    v89();

    return;
  }
  uint64_t v37 = v91[0];
  sub_1B69599E0((uint64_t)v93);
  os_unfair_lock_unlock((os_unfair_lock_t)v90[9]);
  if (v37 != v87) {
    goto LABEL_9;
  }
  unint64_t v76 = a13;
  uint64_t v75 = a12;
  uint64_t v74 = a11;
  uint64_t v73 = a10;
  uint64_t v72 = a9;
  uint64_t v105 = 0;
  long long v103 = 0u;
  long long v104 = 0u;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v100 = 0u;
  unsigned __int8 v106 = -1;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1B6E312C8();
  sub_1B6385660(v38, (uint64_t)qword_1EB997E68);
  char v39 = sub_1B6E312A8();
  sub_1B6E312E8();
  int v71 = sub_1B6E322A8();
  char v40 = sub_1B6E323F8();
  uint64_t v77 = v32;
  if (v40)
  {
    os_log_t v70 = v39;
    swift_retain();
    sub_1B6E31318();
    swift_release();
    uint64_t v41 = v80;
    if ((*(unsigned int (**)(char *, uint64_t))(v80 + 88))(v22, v19) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v42 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v19);
      uint64_t v42 = "";
    }
    unint64_t v84 = v42;
    unint64_t v43 = v76;
    os_signpost_type_t v44 = v71;
    uint64_t v45 = v85;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v26, v30, v23);
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v46 = 0;
    os_signpost_id_t v47 = sub_1B6E31278();
    os_log_t v48 = v70;
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v70, v44, v47, "buildScript", v84, v46, 2u);
    MEMORY[0x1BA9B84C0](v46, -1, -1);

    uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
    v49(v30, v23);
    v49(v26, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v85 + 8))(v30, v23);
    unint64_t v43 = v76;
  }
  sub_1B692B898(v90, v72, v73, v74, v75, v43, v93);
  uint64_t v50 = v93[2];
  unint64_t v84 = (const char *)v93[1];
  unint64_t v51 = v94;
  uint64_t v86 = (void *)*((void *)&v96 + 1);
  long long v85 = v97;
  uint64_t v52 = v83;
  sub_1B6959704(v81, v83, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v53 = v82;
  *(unsigned char *)(v52 + *(int *)(v82 + 40)) = 1;
  uint64_t v54 = sub_1B6B97138();
  uint64_t v56 = sub_1B6B97234(v50, v51, v54, v55 & 1);
  uint64_t v57 = *(int *)(v53 + 52);
  swift_bridgeObjectRelease();
  *(void *)(v52 + v57) = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v94 = v53;
  uint64_t v58 = sub_1B62C12C4(v93);
  sub_1B6959704(v52, (uint64_t)v58, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  long long v96 = v85;
  id v95 = v86;
  unint64_t v98 = &type metadata for CodableVoid;
  sub_1B69596A8(v52, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  char v99 = 1;
  sub_1B62D7A10((uint64_t)v93, (uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  uint64_t v59 = v78;
  uint64_t v60 = v90;
  os_unfair_lock_lock((os_unfair_lock_t)v90[9]);
  uint64_t v61 = v60[10];
  uint64_t v62 = v77;
  if (*(void *)(v61 + 16))
  {
    unint64_t v63 = sub_1B69FABB0(v77, v59);
    if (v64)
    {
      sub_1B6874B44(*(void *)(v61 + 56) + 96 * v63, (uint64_t)v91);
      sub_1B67F7AF0((uint64_t)v91, (uint64_t)v93);
      sub_1B6874B44((uint64_t)v93, (uint64_t)v91);
      if (v92)
      {
        sub_1B69599E0((uint64_t)v91);
LABEL_30:
        os_unfair_lock_unlock((os_unfair_lock_t)v90[9]);
        sub_1B67C5B68();
        uint64_t v67 = (void *)swift_allocError();
        _OWORD *v68 = xmmword_1B6E95930;
        v89();

        sub_1B69599E0((uint64_t)v93);
        sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (v91[0] != v87) {
        goto LABEL_30;
      }
      sub_1B6959AAC((uint64_t)&v100, (uint64_t)v91, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
      sub_1B6CE14C4((uint64_t)v91, v62, v59);
      sub_1B69599E0((uint64_t)v93);
    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)v90[9]);
  sub_1B6959AAC((uint64_t)&v100, (uint64_t)v93, (uint64_t)&qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D8750);
  if (v99 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(void))v89)(0);
    sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v97);
LABEL_29:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v93);
    return;
  }
  if (v99 == 2)
  {
    id v65 = v95;
    id v66 = v95;
    ((void (*)(id))v89)(v65);

    sub_1B639559C((uint64_t)&v100, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_29;
  }
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B6932D40(void *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1B62AC710(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v8 = v7;
  *(unsigned char *)(v5 + *(int *)(v7 + 40)) = 1;
  uint64_t v9 = *(int *)(v7 + 44);
  unint64_t v10 = *(void **)(v5 + v9);
  id v11 = a1;

  *(void *)(v5 + v9) = a1;
  id v12 = a1;
  sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
  if (!swift_dynamicCast())
  {
LABEL_6:
    id v20 = a1;
    if (swift_dynamicCast())
    {
      if (v35 == 2)
      {
        swift_getErrorValue();
        uint64_t v13 = sub_1B6E33868();
        unint64_t v14 = v21;
        uint64_t v22 = (uint64_t *)(v5 + *(int *)(v8 + 48));
        swift_bridgeObjectRelease();
        *uint64_t v22 = v13;
        v22[1] = v14;
        if (v33)
        {
          uint64_t v16 = sub_1B6B97138();
          char v24 = v23;
          swift_bridgeObjectRelease();
          char v19 = v24 & 1;

          goto LABEL_19;
        }

        goto LABEL_17;
      }
      sub_1B6959A10(v31, v32, v33, v34, v35);
    }
    id v25 = a1;
    if (swift_dynamicCast())
    {
      uint64_t v13 = (uint64_t)v31;
      unint64_t v14 = v32;
      if (v35 == 3)
      {
LABEL_15:
        uint64_t v27 = (uint64_t *)(v5 + *(int *)(v8 + 48));
        swift_bridgeObjectRelease();
        uint64_t v16 = 0;
        *uint64_t v27 = v13;
        v27[1] = v14;
LABEL_18:
        char v19 = 1;
        goto LABEL_19;
      }
      sub_1B6959A10(v31, v32, v33, v34, v35);
    }
    swift_getErrorValue();
    uint64_t v13 = sub_1B6E33868();
    unint64_t v14 = v26;
    goto LABEL_15;
  }
  uint64_t v13 = (uint64_t)v31;
  unint64_t v14 = v32;
  if (v35 != 1)
  {
    sub_1B6959A10(v31, v32, v33, v34, v35);
    goto LABEL_6;
  }
  uint64_t v15 = (void *)(v5 + *(int *)(v8 + 48));
  swift_bridgeObjectRelease();
  *uint64_t v15 = v31;
  v15[1] = v32;
  if (!v34)
  {
LABEL_17:
    uint64_t v16 = 0;
    goto LABEL_18;
  }
  uint64_t v16 = sub_1B6B97138();
  char v18 = v17;
  swift_bridgeObjectRelease();
  char v19 = v18 & 1;
LABEL_19:
  uint64_t v28 = sub_1B6B97234(v13, v14, v16, v19);
  uint64_t v29 = *(int *)(v8 + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v5 + v29) = v28;
  return result;
}

void sub_1B6933004(void *a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a2 + 16)) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = a1 == 0;
  }
  if (!v3)
  {
    uint64_t v7 = *(os_unfair_lock_s **)(a3 + 72);
    id v8 = a1;
    os_unfair_lock_lock(v7);
    uint64_t v9 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = a1;
    id v10 = a1;

    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3 + 72));
  }
}

uint64_t *sub_1B6933098(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t *__return_ptr, uint64_t), unint64_t *a12, uint64_t (*a13)(uint64_t), uint64_t a14, unint64_t *a15, void (*a16)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t (*a17)(void), void (*a18)(uint64_t *), void (*a19)(uint64_t *), uint64_t a20,void (*a21)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),void (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v23 = v22;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v238 = qword_1EB997A18;
  int v239 = 0;
  char v240 = 2;
  uint64_t v241 = 0;
  char v242 = 2;
  uint64_t v243 = 0;
  swift_retain();
  a11(&v172, 1);
  swift_release();
  uint64_t v232 = v172;
  int v233 = v173;
  char v234 = v174;
  uint64_t v235 = v175 | 1;
  char v236 = v176;
  uint64_t v237 = v177;
  if ((a10 & 0x100000000) != 0) {
    uint64_t v24 = 0x200000000;
  }
  else {
    uint64_t v24 = a10;
  }
  uint64_t v25 = swift_retain();
  sub_1B62C9DA8(v25, (uint64_t)&v232, v24, v178);
  sub_1B62D7A10((uint64_t)v178, (uint64_t)v211, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v211[0])
  {
    uint64_t v26 = v24;
    uint64_t v27 = v22;
    uint64_t v28 = v211[5];
    uint64_t v29 = v211[7];
    uint64_t v30 = v211[10];
    swift_release();
    if (v30 >= 1 && v29)
    {
      sub_1B62AC710(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      uint64_t v32 = v31;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v33 = 48 * v29;
      uint64_t v34 = (uint64_t *)(v28 + 40);
      do
      {
        uint64_t v39 = *v34;
        char v40 = *(os_unfair_lock_s **)(*v34 + 376);
        swift_retain();
        os_unfair_lock_lock(v40);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 344));
        int v41 = *(_DWORD *)(v39 + 24);
        swift_retain();
        memset(v210, 0, 40);
        uint64_t v201 = 0;
        long long v199 = 0u;
        long long v200 = 0u;
        int v42 = sub_1B637F628(v41, v32, (uint64_t)&off_1F0F61BF0, 0, 0, (uint64_t)v210, (uint64_t)&v199);
        swift_release();
        sub_1B6386458((uint64_t)&v199);
        sub_1B6386458((uint64_t)v210);
        if (sub_1B63B4340(v42))
        {
          sub_1B66603E4(v42);
        }
        else
        {
          uint64_t v35 = *(void *)(v39 + 232);
          uint64_t v36 = *(void *)(v39 + 240);
          char v37 = *(unsigned char *)(v39 + 120);
          uint64_t v38 = *(unsigned int *)(v39 + 28);
          LOBYTE(v210[0]) = *(unsigned char *)(v39 + 32);
          sub_1B628EEF4(v35, v36, v42, v37, v38 | ((unint64_t)LOBYTE(v210[0]) << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 376));
        swift_release();
        v34 += 6;
        v33 -= 48;
      }
      while (v33);
      sub_1B632F170(v178);
    }
    sub_1B632F170(v178);
    uint64_t v23 = v27;
    uint64_t v24 = v26;
  }
  else
  {
    swift_release();
  }
  uint64_t v43 = swift_retain();
  sub_1B62C9DA8(v43, (uint64_t)&v232, v24, v179);
  sub_1B62D7A10((uint64_t)v179, (uint64_t)v210, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v210[0])
  {
    uint64_t v44 = v24;
    uint64_t v45 = v23;
    uint64_t v46 = v210[5];
    uint64_t v47 = v210[7];
    uint64_t v48 = v210[10];
    swift_release();
    if (v48 >= 1 && v47)
    {
      sub_1B62AC710(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      uint64_t v50 = v49;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v51 = 48 * v47;
      uint64_t v52 = (uint64_t *)(v46 + 40);
      do
      {
        uint64_t v57 = *v52;
        uint64_t v58 = *(os_unfair_lock_s **)(*v52 + 376);
        swift_retain();
        os_unfair_lock_lock(v58);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v57 + 344));
        int v59 = *(_DWORD *)(v57 + 24);
        swift_retain();
        uint64_t v201 = 0;
        long long v199 = 0u;
        long long v200 = 0u;
        uint64_t v190 = 0;
        long long v188 = 0u;
        long long v189 = 0u;
        int v60 = sub_1B637F628(v59, v50, (uint64_t)&off_1F0F836B8, 0, 0, (uint64_t)&v199, (uint64_t)&v188);
        swift_release();
        sub_1B6386458((uint64_t)&v188);
        sub_1B6386458((uint64_t)&v199);
        if (sub_1B63B4340(v60))
        {
          sub_1B66603E4(v60);
        }
        else
        {
          uint64_t v53 = *(void *)(v57 + 232);
          uint64_t v54 = *(void *)(v57 + 240);
          char v55 = *(unsigned char *)(v57 + 120);
          uint64_t v56 = *(unsigned int *)(v57 + 28);
          LOBYTE(v199) = *(unsigned char *)(v57 + 32);
          sub_1B628EEF4(v53, v54, v60, v55, v56 | ((unint64_t)v199 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v57 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v57 + 376));
        swift_release();
        v52 += 6;
        v51 -= 48;
      }
      while (v51);
      sub_1B632F170(v179);
    }
    sub_1B632F170(v179);
    uint64_t v23 = v45;
    uint64_t v24 = v44;
  }
  else
  {
    swift_release();
  }
  uint64_t v169 = sub_1B67BAAF4(0, a1, a2);
  uint64_t v171 = v61;
  if (v61)
  {
    uint64_t v62 = a17;
    uint64_t v226 = qword_1EB997A18;
    int v227 = 0;
    char v228 = 2;
    uint64_t v229 = 0;
    char v230 = 2;
    uint64_t v231 = 0;
    swift_retain();
    a16(&v180, 1, 2, 2);
    swift_release();
    uint64_t v219 = v180;
    int v220 = v181;
    char v221 = v182;
    uint64_t v222 = v183 | 1;
    char v223 = v184;
    uint64_t v224 = v185;
    uint64_t v63 = swift_retain();
    sub_1B62C9DA8(v63, (uint64_t)&v219, v24, v186);
    sub_1B62D7A10((uint64_t)v186, (uint64_t)&v199, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v199)
    {
      long long v207 = v199;
      long long v208 = v200;
      uint64_t v209 = v201;
      uint64_t v64 = v203;
      uint64_t v65 = v204;
      uint64_t v141 = v202;
      uint64_t v143 = v205;
      uint64_t v66 = v206;
      swift_release();
      if (v66 >= 1 && v64)
      {
        uint64_t v130 = v24;
        uint64_t v159 = v23;
        unsigned int v154 = a4 & 1;
        uint64_t v150 = v143[4];
        int v148 = *(unsigned __int8 *)(v65 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v67 = a17(0);
        sub_1B62AC710(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        uint64_t v69 = v68;
        os_log_t v70 = v143;
        sub_1B62AC710(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v135 = v69;
        uint64_t v137 = v67;
        uint64_t v133 = v67 - 8;
        uint64_t v134 = v71;
        uint64_t v131 = v71 - 8;
        uint64_t v132 = v69 - 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v72 = 0;
        uint64_t v140 = v64;
        do
        {
          uint64_t v73 = (unsigned int *)(v141 + 48 * v72);
          uint64_t v74 = *v73;
          uint64_t v145 = v73[1];
          uint64_t v147 = v72;
          uint64_t v75 = (uint64_t *)*((void *)v73 + 2);
          uint64_t v76 = *((void *)v73 + 3);
          uint64_t v77 = *((void *)v73 + 4);
          uint64_t v78 = *((void *)v73 + 5);
          if (v148)
          {
            uint64_t v79 = *(os_unfair_lock_s **)(v78 + 376);
            swift_retain();
            os_unfair_lock_lock(v79);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v78 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v150);
          sub_1B62D7A10((uint64_t)(v143 + 6), (uint64_t)v225, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v80 = v70[4];
          uint64_t v81 = *(void *)(*(void *)(*(void *)(*(void *)(v78 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v70[6] = ecs_stack_allocator_allocate(v80, 48 * v81, 8);
          v70[7] = v81;
          v143[9] = 0;
          v143[10] = 0;
          v143[8] = 0;
          swift_release();
          uint64_t v82 = sub_1B62C9024(v137, a20, v75, v76, v77, (uint64_t)v70);
          uint64_t v83 = sub_1B62C9024(v135, (uint64_t)&off_1F0F61BF0, v75, v76, v77, (uint64_t)v70);
          uint64_t v84 = sub_1B62C9024(v134, (uint64_t)&off_1F0F836B8, v75, v76, v77, (uint64_t)v70);
          uint64_t v85 = v84;
          if (v75)
          {
            if (v77)
            {
              uint64_t v86 = *(void *)(*(void *)v133 + 72);
              uint64_t v87 = *(void *)(*(void *)v132 + 72);
              uint64_t v88 = *(void *)(*(void *)v131 + 72);
              do
              {
                uint64_t v89 = *v75++;
                a22(v78, v89, v82, v83, v85, a8, a3, v154, v169, v171, a7, a5, a6, v159, a9);
                v85 += v88;
                v83 += v87;
                v82 += v86;
                --v77;
              }
              while (v77);
            }
          }
          else if (v74 != v145)
          {
            uint64_t v90 = *(void *)(*(void *)v133 + 72);
            uint64_t v91 = *(void *)(*(void *)v132 + 72);
            uint64_t v92 = *(void *)(*(void *)v131 + 72);
            uint64_t v93 = v84 + v92 * v74;
            uint64_t v94 = v83 + v91 * v74;
            uint64_t v95 = v82 + v90 * v74;
            do
            {
              a22(v78, v74++, v95, v94, v93, a8, a3, v154, v169, v171, a7, a5, a6, v159, a9);
              v93 += v92;
              v94 += v91;
              v95 += v90;
            }
            while (v145 != v74);
          }
          v212[0] = v207;
          v212[1] = v208;
          uint64_t v213 = v209;
          os_log_t v70 = v143;
          sub_1B6345178(v143, (unsigned __int16 **)v212, (uint64_t)v225);
          sub_1B634507C((char *)v78);
          ecs_stack_allocator_pop_snapshot(v150);
          if (v148)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v78 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v78 + 376));
          }
          swift_release();
          uint64_t v72 = v147 + 1;
        }
        while (v147 + 1 != v140);
        sub_1B632F170(v186);
        sub_1B632F170(v186);
        uint64_t v62 = a17;
        uint64_t v24 = v130;
      }
      else
      {
        sub_1B632F170(v186);
        uint64_t v62 = a17;
      }
    }
    else
    {
      swift_release();
    }
    swift_retain();
    uint64_t v96 = swift_retain();
    sub_1B62C9DA8(v96, (uint64_t)&v219, v24, v187);
    sub_1B62D7A10((uint64_t)v187, (uint64_t)&v188, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v188)
    {
      long long v196 = v188;
      long long v197 = v189;
      uint64_t v152 = v191;
      uint64_t v198 = v190;
      uint64_t v97 = v192;
      uint64_t v163 = v193;
      uint64_t v168 = v194;
      uint64_t v98 = v195;
      swift_release();
      if (v98 <= 0)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        a18(&v180);
        a18(&v180);
        a19(&v172);
      }
      else
      {
        if (v97)
        {
          uint64_t v99 = v168[4];
          int v160 = *(unsigned __int8 *)(v163 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v100 = v62(0);
          sub_1B62AC710(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          uint64_t v102 = v101;
          sub_1B62AC710(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v144 = v102;
          uint64_t v146 = v100;
          uint64_t v139 = v100 - 8;
          uint64_t v142 = v103;
          uint64_t v136 = v103 - 8;
          uint64_t v138 = v102 - 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v104 = 0;
          uint64_t v149 = v97;
          uint64_t v151 = v99;
          do
          {
            uint64_t v157 = v104;
            uint64_t v105 = (unsigned int *)(v152 + 48 * v104);
            uint64_t v106 = *v105;
            uint64_t v107 = v105[2];
            long long v108 = (uint64_t *)*((void *)v105 + 2);
            uint64_t v165 = *((void *)v105 + 3);
            uint64_t v110 = *((void *)v105 + 4);
            uint64_t v109 = *((void *)v105 + 5);
            uint64_t v155 = v105[1];
            if (v160)
            {
              uint64_t v111 = *(os_unfair_lock_s **)(v109 + 376);
              swift_retain();
              os_unfair_lock_lock(v111);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v109 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v99);
            sub_1B62D7A10((uint64_t)(v168 + 6), (uint64_t)v216, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v112 = v168[4];
            uint64_t v113 = *(void *)(*(void *)(*(void *)(*(void *)(v109 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v168[6] = ecs_stack_allocator_allocate(v112, 48 * v113, 8);
            v168[7] = v113;
            v168[9] = 0;
            v168[10] = 0;
            v168[8] = 0;
            swift_release();
            uint64_t v114 = v165;
            uint64_t v115 = sub_1B62C9024(v146, a20, v108, v165, v110, (uint64_t)v168);
            uint64_t v116 = sub_1B62C9024(v144, (uint64_t)&off_1F0F61BF0, v108, v165, v110, (uint64_t)v168);
            uint64_t v166 = v109;
            uint64_t v117 = sub_1B62C9024(v142, (uint64_t)&off_1F0F836B8, v108, v114, v110, (uint64_t)v168);
            uint64_t v118 = v117;
            if (v108)
            {
              if (v110)
              {
                uint64_t v119 = *(void *)(*(void *)v139 + 72);
                uint64_t v120 = *(void *)(*(void *)v138 + 72);
                uint64_t v121 = *(void *)(*(void *)v136 + 72);
                do
                {
                  uint64_t v122 = *v108++;
                  v217[0] = v163;
                  v217[1] = v166;
                  v217[2] = v168;
                  v217[3] = v107;
                  v217[4] = v122;
                  a21(v217, v115, v116, v118, a8, v169, v171);
                  ++v107;
                  v118 += v121;
                  v116 += v120;
                  v115 += v119;
                  --v110;
                }
                while (v110);
              }
            }
            else if (v106 != v155)
            {
              uint64_t v123 = *(void *)(*(void *)v139 + 72);
              uint64_t v124 = *(void *)(*(void *)v138 + 72);
              uint64_t v125 = *(void *)(*(void *)v136 + 72);
              uint64_t v126 = v117 + v125 * v106;
              uint64_t v127 = v116 + v124 * v106;
              uint64_t v128 = v115 + v123 * v106;
              do
              {
                v218[0] = v163;
                v218[1] = v166;
                v218[2] = v168;
                v218[3] = v107;
                v218[4] = v106;
                a21(v218, v128, v127, v126, a8, v169, v171);
                ++v106;
                ++v107;
                v126 += v125;
                v127 += v124;
                v128 += v123;
              }
              while (v155 != v106);
            }
            v214[0] = v196;
            v214[1] = v197;
            uint64_t v215 = v198;
            sub_1B6345178(v168, (unsigned __int16 **)v214, (uint64_t)v216);
            sub_1B634507C((char *)v166);
            uint64_t v99 = v151;
            ecs_stack_allocator_pop_snapshot(v151);
            if (v160)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v166 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v166 + 376));
            }
            swift_release();
            uint64_t v104 = v157 + 1;
          }
          while (v157 + 1 != v149);
        }
        else
        {
          swift_retain();
          swift_retain();
          swift_retain();
        }
        swift_bridgeObjectRelease();
        a18(&v180);
        a18(&v180);
        a19(&v172);
      }
      sub_1B632F170(v187);
      return sub_1B632F170(v187);
    }
    else
    {
      swift_release();
      a18(&v180);
      a18(&v180);
      a19(&v172);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(void *)&long long v199 = 0;
    *((void *)&v199 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v199 = 0xD000000000000011;
    *((void *)&v199 + 1) = 0x80000001B6F3E7C0;
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = (uint64_t *)sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t *sub_1B69342A8(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t *__return_ptr, uint64_t), unint64_t *a12, uint64_t (*a13)(uint64_t), uint64_t a14, unint64_t *a15, void (*a16)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t (*a17)(void), void (*a18)(uint64_t *__return_ptr, uint64_t), void (*a19)(long long *, uint64_t), void (*a20)(uint64_t *),void (*a21)(uint64_t *),void (*a22)(uint64_t *),uint64_t a23,void (*a24)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t),void (*a25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v297 = qword_1EB997A18;
  int v298 = 0;
  char v299 = 2;
  uint64_t v300 = 0;
  char v301 = 2;
  uint64_t v302 = 0;
  swift_retain();
  a11(&v189, 1);
  swift_release();
  uint64_t v291 = v189;
  int v292 = v190;
  char v293 = v191;
  uint64_t v294 = v192 | 1;
  char v295 = v193;
  uint64_t v296 = v194;
  if ((a10 & 0x100000000) != 0) {
    uint64_t v28 = 0x200000000;
  }
  else {
    uint64_t v28 = a10;
  }
  uint64_t v29 = swift_retain();
  sub_1B62C9DA8(v29, (uint64_t)&v291, v28, v195);
  sub_1B62D7A10((uint64_t)v195, (uint64_t)v250, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v181 = v25;
  uint64_t v146 = v28;
  if (v250[0])
  {
    uint64_t v30 = v250[5];
    uint64_t v31 = v250[7];
    uint64_t v32 = v250[9];
    uint64_t v33 = v250[10];
    swift_release();
    if (v33 >= 1 && v31)
    {
      sub_1B62AC710(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      uint64_t v35 = v34;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v36 = 48 * v31;
      char v37 = (uint64_t *)(v30 + 40);
      do
      {
        uint64_t v42 = *v37;
        uint64_t v43 = *(os_unfair_lock_s **)(*v37 + 376);
        swift_retain();
        os_unfair_lock_lock(v43);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v42 + 344));
        int v44 = *(_DWORD *)(v42 + 24);
        swift_retain();
        *(void *)&long long v266 = 0;
        long long v265 = 0u;
        long long v264 = 0u;
        uint64_t v245 = 0;
        memset(v244, 0, sizeof(v244));
        int v45 = sub_1B637F628(v44, v35, (uint64_t)&off_1F0F61BF0, 0, 0, (uint64_t)&v264, (uint64_t)v244);
        swift_release();
        sub_1B6386458((uint64_t)v244);
        sub_1B6386458((uint64_t)&v264);
        if (sub_1B63B4340(v45))
        {
          sub_1B66603E4(v45);
        }
        else
        {
          uint64_t v38 = *(void *)(v42 + 232);
          uint64_t v39 = *(void *)(v42 + 240);
          char v40 = *(unsigned char *)(v42 + 120);
          uint64_t v41 = *(unsigned int *)(v42 + 28);
          LOBYTE(v264) = *(unsigned char *)(v42 + 32);
          uint64_t v145 = v32;
          sub_1B628EEF4(v38, v39, v45, v40, v41 | ((unint64_t)v264 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 376));
        swift_release();
        v37 += 6;
        v36 -= 48;
      }
      while (v36);
      sub_1B632F170(v195);
    }
    sub_1B632F170(v195);
    uint64_t v28 = v146;
  }
  else
  {
    swift_release();
  }
  uint64_t v46 = swift_retain();
  sub_1B62C9DA8(v46, (uint64_t)&v291, v28, v196);
  sub_1B62D7A10((uint64_t)v196, (uint64_t)v244, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v244[0])
  {
    uint64_t v47 = v246;
    uint64_t v48 = v247;
    uint64_t v49 = v248;
    uint64_t v50 = v249;
    swift_release();
    if (v50 >= 1 && v48)
    {
      sub_1B62AC710(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      uint64_t v52 = v51;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v53 = 48 * v48;
      uint64_t v54 = (uint64_t *)(v47 + 40);
      do
      {
        uint64_t v59 = *v54;
        int v60 = *(os_unfair_lock_s **)(*v54 + 376);
        swift_retain();
        os_unfair_lock_lock(v60);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v59 + 344));
        int v61 = *(_DWORD *)(v59 + 24);
        swift_retain();
        *(void *)&long long v266 = 0;
        long long v265 = 0u;
        long long v264 = 0u;
        uint64_t v235 = 0;
        long long v234 = 0u;
        long long v233 = 0u;
        int v62 = sub_1B637F628(v61, v52, (uint64_t)&off_1F0F836B8, 0, 0, (uint64_t)&v264, (uint64_t)&v233);
        swift_release();
        sub_1B6386458((uint64_t)&v233);
        sub_1B6386458((uint64_t)&v264);
        if (sub_1B63B4340(v62))
        {
          sub_1B66603E4(v62);
        }
        else
        {
          uint64_t v55 = *(void *)(v59 + 232);
          uint64_t v56 = *(void *)(v59 + 240);
          char v57 = *(unsigned char *)(v59 + 120);
          uint64_t v58 = *(unsigned int *)(v59 + 28);
          LOBYTE(v264) = *(unsigned char *)(v59 + 32);
          uint64_t v145 = v49;
          sub_1B628EEF4(v55, v56, v62, v57, v58 | ((unint64_t)v264 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v59 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v59 + 376));
        swift_release();
        v54 += 6;
        v53 -= 48;
      }
      while (v53);
      sub_1B632F170(v196);
    }
    sub_1B632F170(v196);
    uint64_t v28 = v146;
  }
  else
  {
    swift_release();
  }
  uint64_t v185 = sub_1B67BAAF4(0, a1, a2);
  uint64_t v188 = v63;
  if (v63)
  {
    unsigned int v184 = a4 & 1;
    uint64_t v285 = qword_1EB997A18;
    int v286 = 0;
    char v287 = 2;
    uint64_t v288 = 0;
    char v289 = 2;
    uint64_t v290 = 0;
    swift_retain();
    a16(&v197, 1, 2, 2);
    swift_release();
    uint64_t v258 = v197;
    int v259 = v198;
    char v260 = v199;
    uint64_t v261 = v200 | 1;
    char v262 = v201;
    uint64_t v263 = v202;
    uint64_t v64 = swift_retain();
    sub_1B62C9DA8(v64, (uint64_t)&v258, v28, v203);
    sub_1B62D7A10((uint64_t)v203, (uint64_t)&v233, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v233)
    {
      long long v241 = v233;
      long long v242 = v234;
      uint64_t v243 = v235;
      uint64_t v65 = v237;
      uint64_t v66 = v238;
      uint64_t v161 = v236;
      uint64_t v162 = v239;
      uint64_t v67 = v240;
      swift_release();
      if (v67 >= 1 && v65)
      {
        uint64_t v68 = v162;
        uint64_t v69 = v162[4];
        int v168 = *(unsigned __int8 *)(v66 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v70 = a17(0);
        sub_1B62AC710(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        uint64_t v72 = v71;
        sub_1B62AC710(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v153 = v72;
        uint64_t v155 = v70;
        uint64_t v149 = v70 - 8;
        uint64_t v151 = v73;
        uint64_t v147 = v73 - 8;
        uint64_t v148 = v72 - 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v74 = 0;
        uint64_t v157 = v65;
        uint64_t v159 = v69;
        do
        {
          uint64_t v166 = v74;
          uint64_t v75 = (unsigned int *)(v161 + 48 * v74);
          uint64_t v76 = *v75;
          uint64_t v77 = (uint64_t *)*((void *)v75 + 2);
          uint64_t v78 = *((void *)v75 + 3);
          uint64_t v80 = *((void *)v75 + 4);
          uint64_t v79 = *((void *)v75 + 5);
          uint64_t v164 = v75[1];
          if (v168)
          {
            uint64_t v81 = *(os_unfair_lock_s **)(v79 + 376);
            swift_retain();
            os_unfair_lock_lock(v81);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v79 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v69);
          sub_1B62D7A10((uint64_t)(v162 + 6), (uint64_t)v284, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v82 = v68[4];
          uint64_t v83 = *(void *)(*(void *)(*(void *)(*(void *)(v79 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v68[6] = ecs_stack_allocator_allocate(v82, 48 * v83, 8);
          v68[7] = v83;
          v162[9] = 0;
          v162[10] = 0;
          v162[8] = 0;
          swift_release();
          uint64_t v84 = sub_1B62C9024(v155, a23, v77, v78, v80, (uint64_t)v68);
          uint64_t v85 = sub_1B62C9024(v153, (uint64_t)&off_1F0F61BF0, v77, v78, v80, (uint64_t)v68);
          uint64_t v86 = v78;
          uint64_t v87 = v85;
          uint64_t v88 = sub_1B62C9024(v151, (uint64_t)&off_1F0F836B8, v77, v86, v80, (uint64_t)v68);
          uint64_t v89 = v88;
          if (v77)
          {
            if (v80)
            {
              uint64_t v90 = *(void *)(*(void *)v149 + 72);
              uint64_t v91 = *(void *)(*(void *)v148 + 72);
              uint64_t v92 = *(void *)(*(void *)v147 + 72);
              do
              {
                uint64_t v93 = *v77++;
                a25(v79, v93, v84, v87, v89, a8, a3, v184, v185, v188, a7, a5, a6, v181, a9);
                v89 += v92;
                v87 += v91;
                v84 += v90;
                --v80;
              }
              while (v80);
            }
          }
          else if (v76 != v164)
          {
            uint64_t v94 = *(void *)(*(void *)v149 + 72);
            uint64_t v95 = *(void *)(*(void *)v148 + 72);
            uint64_t v96 = *(void *)(*(void *)v147 + 72);
            uint64_t v97 = v88 + v96 * v76;
            uint64_t v98 = v87 + v95 * v76;
            uint64_t v99 = v84 + v94 * v76;
            do
            {
              a25(v79, v76++, v99, v98, v97, a8, a3, v184, v185, v188, a7, a5, a6, v181, a9);
              v97 += v96;
              v98 += v95;
              v99 += v94;
            }
            while (v164 != v76);
          }
          v251[0] = v241;
          v251[1] = v242;
          uint64_t v252 = v243;
          uint64_t v68 = v162;
          sub_1B6345178(v162, (unsigned __int16 **)v251, (uint64_t)v284);
          sub_1B634507C((char *)v79);
          uint64_t v69 = v159;
          ecs_stack_allocator_pop_snapshot(v159);
          if (v168)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v79 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v79 + 376));
          }
          swift_release();
          uint64_t v74 = v166 + 1;
        }
        while (v166 + 1 != v157);
        sub_1B632F170(v203);
        sub_1B632F170(v203);
        uint64_t v28 = v146;
      }
      else
      {
        sub_1B632F170(v203);
      }
    }
    else
    {
      swift_release();
    }
    uint64_t v278 = qword_1EB997A18;
    int v279 = 0;
    char v280 = 2;
    uint64_t v281 = 0;
    char v282 = 2;
    uint64_t v283 = 0;
    swift_retain();
    a18(&v204, 1);
    swift_release();
    uint64_t v272 = v204;
    int v273 = v205;
    char v274 = v206;
    uint64_t v275 = v207 | 1;
    char v276 = v208;
    uint64_t v277 = v209;
    uint64_t v100 = swift_retain();
    sub_1B62C9DA8(v100, (uint64_t)&v272, v28, v210);
    sub_1B62D7A10((uint64_t)v210, (uint64_t)&v222, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    uint64_t v101 = v222;
    if (v222)
    {
      int v102 = v223;
      char v103 = v224;
      uint64_t v104 = v225;
      char v105 = v226;
      uint64_t v106 = v228;
      uint64_t v107 = v229;
      uint64_t v108 = v231;
      uint64_t v175 = v232;
      long long v170 = v230;
      long long v172 = v227;
      swift_release();
      *(void *)&long long v264 = v101;
      DWORD2(v264) = v102;
      BYTE12(v264) = v103;
      *(void *)&long long v265 = v104;
      BYTE8(v265) = v105;
      uint64_t v28 = v146;
      long long v266 = v172;
      uint64_t v267 = v106;
      uint64_t v268 = v107;
      long long v269 = v170;
      uint64_t v270 = v108;
      uint64_t v271 = v175;
      swift_retain();
      a19(&v264, v181);
      swift_release();
      a20(&v204);
      sub_1B632F170(v210);
    }
    else
    {
      swift_release();
      a20(&v204);
    }
    swift_retain();
    uint64_t v109 = swift_retain();
    sub_1B62C9DA8(v109, (uint64_t)&v258, v28, v211);
    sub_1B62D7A10((uint64_t)v211, (uint64_t)v212, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v212[0])
    {
      long long v219 = v212[0];
      long long v220 = v212[1];
      uint64_t v169 = v214;
      uint64_t v221 = v213;
      uint64_t v110 = v215;
      uint64_t v177 = v216;
      char v182 = v217;
      uint64_t v111 = v218;
      swift_release();
      if (v111 > 0 && v110)
      {
        uint64_t v112 = v182[4];
        int v113 = *(unsigned __int8 *)(v177 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v114 = a17(0);
        sub_1B62AC710(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        uint64_t v116 = v115;
        sub_1B62AC710(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v158 = v116;
        uint64_t v160 = v114;
        uint64_t v154 = v114 - 8;
        uint64_t v156 = v117;
        uint64_t v150 = v117 - 8;
        uint64_t v152 = v116 - 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v118 = 0;
        int v163 = v113;
        uint64_t v165 = v110;
        uint64_t v167 = v112;
        do
        {
          uint64_t v173 = v118;
          uint64_t v119 = (unsigned int *)(v169 + 48 * v118);
          uint64_t v120 = *v119;
          uint64_t v171 = v119[1];
          uint64_t v121 = v119[2];
          uint64_t v122 = (uint64_t *)*((void *)v119 + 2);
          uint64_t v179 = *((void *)v119 + 3);
          uint64_t v123 = *((void *)v119 + 4);
          uint64_t v124 = *((void *)v119 + 5);
          if (v113)
          {
            uint64_t v125 = *(os_unfair_lock_s **)(v124 + 376);
            swift_retain();
            os_unfair_lock_lock(v125);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v124 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v112);
          sub_1B62D7A10((uint64_t)(v182 + 6), (uint64_t)v255, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v126 = v182[4];
          uint64_t v127 = *(void *)(*(void *)(*(void *)(*(void *)(v124 + 40) + 16) + 32) + 16) + 1;
          uint64_t v128 = v124;
          swift_retain();
          v182[6] = ecs_stack_allocator_allocate(v126, 48 * v127, 8);
          v182[7] = v127;
          v182[9] = 0;
          v182[10] = 0;
          v182[8] = 0;
          swift_release();
          uint64_t v129 = v179;
          uint64_t v130 = sub_1B62C9024(v160, a23, v122, v179, v123, (uint64_t)v182);
          uint64_t v131 = sub_1B62C9024(v158, (uint64_t)&off_1F0F61BF0, v122, v179, v123, (uint64_t)v182);
          uint64_t v180 = v128;
          uint64_t v132 = sub_1B62C9024(v156, (uint64_t)&off_1F0F836B8, v122, v129, v123, (uint64_t)v182);
          uint64_t v133 = v132;
          if (v122)
          {
            if (v123)
            {
              uint64_t v134 = *(void *)(*(void *)v154 + 72);
              uint64_t v135 = *(void *)(*(void *)v152 + 72);
              uint64_t v136 = *(void *)(*(void *)v150 + 72);
              do
              {
                uint64_t v137 = *v122++;
                v256[0] = v177;
                v256[1] = v180;
                v256[2] = v182;
                v256[3] = v121;
                v256[4] = v137;
                a24(v256, v130, v131, v133, a8, a3, v184, v185, v188);
                ++v121;
                v133 += v136;
                v131 += v135;
                v130 += v134;
                --v123;
              }
              while (v123);
            }
          }
          else if (v120 != v171)
          {
            uint64_t v138 = *(void *)(*(void *)v154 + 72);
            uint64_t v139 = *(void *)(*(void *)v152 + 72);
            uint64_t v140 = *(void *)(*(void *)v150 + 72);
            uint64_t v141 = v132 + v140 * v120;
            uint64_t v142 = v131 + v139 * v120;
            uint64_t v143 = v130 + v138 * v120;
            do
            {
              v257[0] = v177;
              v257[1] = v180;
              v257[2] = v182;
              v257[3] = v121;
              v257[4] = v120;
              ((void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))a24)(v257, v143, v142, v141, a8, a3, v184, v185, v188, v145);
              ++v120;
              ++v121;
              v141 += v140;
              v142 += v139;
              v143 += v138;
            }
            while (v171 != v120);
          }
          v253[0] = v219;
          v253[1] = v220;
          uint64_t v254 = v221;
          sub_1B6345178(v182, (unsigned __int16 **)v253, (uint64_t)v255);
          sub_1B634507C((char *)v180);
          uint64_t v112 = v167;
          ecs_stack_allocator_pop_snapshot(v167);
          int v113 = v163;
          if (v163)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v180 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v180 + 376));
          }
          swift_release();
          uint64_t v118 = v173 + 1;
        }
        while (v173 + 1 != v165);
      }
      else
      {
        swift_retain();
        swift_retain();
        swift_retain();
      }
      swift_bridgeObjectRelease();
      a21(&v197);
      a21(&v197);
      a22(&v189);
      sub_1B632F170(v211);
      return sub_1B632F170(v211);
    }
    else
    {
      swift_release();
      a21(&v197);
      a21(&v197);
      a22(&v189);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(void *)&long long v264 = 0;
    *((void *)&v264 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v264 = 0xD000000000000011;
    *((void *)&v264 + 1) = 0x80000001B6F3E7C0;
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = (uint64_t *)sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6935648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  unint64_t v99 = a8;
  LODWORD(v91) = a7;
  *(void *)&long long v87 = a6;
  uint64_t v103 = a3;
  sub_1B62E17B4();
  uint64_t v98 = v13;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v97 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1B6E31098();
  uint64_t v89 = *(void (***)(char *, char *, uint64_t))(v96 - 8);
  MEMORY[0x1F4188790](v96, v16);
  uint64_t v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  unint64_t v92 = v18;
  MEMORY[0x1F4188790](v18, v19);
  *(void *)&long long v102 = (char *)&v83 - v20;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v94 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v100 = type metadata accessor for ScriptIndex();
  uint64_t v106 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100, v28);
  uint64_t v30 = (uint64_t *)((char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (uint64_t *)((char *)&v83 - v33);
  uint64_t v86 = a1;
  uint64_t v35 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v36 = sub_1B62DE2C8(v35);
  swift_release();
  uint64_t v37 = *(void *)(a5 + 16);
  uint64_t v101 = a5;
  if (v37 && (uint64_t v38 = sub_1B62BE38C(v36), (v39 & 1) != 0))
  {
    uint64_t v40 = a5;
    uint64_t v41 = v9;
    uint64_t v42 = (unsigned int *)(*(void *)(v40 + 56) + 8 * v38);
    unint64_t v44 = *v42;
    unint64_t v43 = v42[1];
  }
  else
  {
    uint64_t v41 = v9;
    swift_retain();
    unint64_t v44 = sub_1B62DE2C8(v35);
    swift_release();
    unint64_t v43 = HIDWORD(v44);
  }
  unint64_t v88 = v43;
  uint64_t v45 = type metadata accessor for TriggerScript(0);
  uint64_t v46 = a2;
  sub_1B6959AAC(a2 + *(int *)(v45 + 40), (uint64_t)v27, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v47 = v100;
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48))(v27, 1, v100);
  unint64_t v90 = v44;
  if (v48 == 1)
  {
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v35);
    swift_release();
    *uint64_t v34 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v27);
  }
  else
  {
    sub_1B695B370((uint64_t)v27, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v50 = v47;
  uint64_t v51 = v46;
  uint64_t v52 = v41;
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  unint64_t v55 = v92;
  sub_1B695BADC((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v56 = *v30;
    uint64_t v57 = *(void *)(v53 + 16);
    long long v102 = v56;
    if (v57)
    {
      uint64_t v58 = sub_1B62BE38C(v56);
      if (v60)
      {
        *(void *)&long long v59 = *(void *)(*(void *)(v53 + 56) + 8 * v58);
        long long v102 = v59;
      }
    }
    sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v34 = v102;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v61 = *(void *)(v103 + *(int *)(v55 + 40));
  sub_1B6959704(v103, v54, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B69596A8(v54, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v62 = *(void *)(v54 + *(int *)(v55 + 44));
  swift_bridgeObjectRetain();
  sub_1B69596A8(v54, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  if (v91) {
    goto LABEL_23;
  }
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      uint64_t v63 = &unk_1F0FA1580;
      goto LABEL_26;
    }
LABEL_23:
    if (*(unsigned char *)(v51 + 24) == 1) {
      uint64_t v63 = &unk_1F0FA15B0;
    }
    else {
      uint64_t v63 = &unk_1F0FA15E0;
    }
    goto LABEL_26;
  }
  uint64_t v63 = &unk_1F0FA1610;
LABEL_26:
  uint64_t v64 = v63[2];
  if (v64)
  {
    uint64_t v85 = v52;
    uint64_t v91 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56);
    unint64_t v92 = a9;
    v89 += 4;
    unint64_t v90 = v90 | (v88 << 32);
    uint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v65 = (unint64_t *)(v84 + 40);
    unint64_t v88 = 0x80000001B6F3E8D0;
    long long v87 = xmmword_1B6E77050;
    uint64_t v93 = v34;
    do
    {
      uint64_t v106 = v64;
      uint64_t v66 = *(v65 - 1);
      unint64_t v67 = *v65;
      uint64_t v68 = v94;
      sub_1B695BADC((uint64_t)v34, v94, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      (*v91)(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B67AFBF8(v66, v67, v99, v92, v90, 0x72656767697274uLL, 0xE700000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B67BAA04(v68);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v104 = 0;
      unint64_t v105 = 0xE000000000000000;
      uint64_t v103 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v104 = 0xD000000000000022;
      unint64_t v105 = v88;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v69 = v104;
      unint64_t v70 = v105;
      char v71 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v72 = qword_1EB997FF0;
      uint64_t v73 = qword_1EB985528;
      swift_retain();
      if (v73 != -1) {
        swift_once();
      }
      *(void *)&long long v102 = v65 + 2;
      sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v74 + 64) = sub_1B678615C();
      *(void *)(v74 + 32) = v69;
      *(void *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      char v75 = v71;
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v95;
      sub_1B6E31088();
      uint64_t v77 = v98[12];
      uint64_t v78 = v98[16];
      uint64_t v79 = v98[20];
      uint64_t v101 = v72;
      uint64_t v80 = (uint64_t)v97;
      uint64_t v81 = &v97[v79];
      (*v89)(v97, v76, v96);
      *(unsigned char *)(v80 + v77) = v75;
      uint64_t v65 = (unint64_t *)v102;
      *(void *)(v80 + v78) = 0;
      *(void *)uint64_t v81 = v69;
      *((void *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B695BB44(v80, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v64 = v106 - 1;
      uint64_t v34 = v93;
      uint64_t v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B6CF049C(0);
  sub_1B6CF04D8(0);
  return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B6936098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  unint64_t v99 = a8;
  LODWORD(v91) = a7;
  *(void *)&long long v87 = a6;
  uint64_t v103 = a3;
  sub_1B62E17B4();
  uint64_t v98 = v13;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v97 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1B6E31098();
  uint64_t v89 = *(void (***)(char *, char *, uint64_t))(v96 - 8);
  MEMORY[0x1F4188790](v96, v16);
  uint64_t v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  unint64_t v92 = v18;
  MEMORY[0x1F4188790](v18, v19);
  *(void *)&long long v102 = (char *)&v83 - v20;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v94 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v100 = type metadata accessor for ScriptIndex();
  uint64_t v106 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100, v28);
  uint64_t v30 = (uint64_t *)((char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (uint64_t *)((char *)&v83 - v33);
  uint64_t v86 = a1;
  uint64_t v35 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v36 = sub_1B62DE2C8(v35);
  swift_release();
  uint64_t v37 = *(void *)(a5 + 16);
  uint64_t v101 = a5;
  if (v37 && (uint64_t v38 = sub_1B62BE38C(v36), (v39 & 1) != 0))
  {
    uint64_t v40 = a5;
    uint64_t v41 = v9;
    uint64_t v42 = (unsigned int *)(*(void *)(v40 + 56) + 8 * v38);
    unint64_t v44 = *v42;
    unint64_t v43 = v42[1];
  }
  else
  {
    uint64_t v41 = v9;
    swift_retain();
    unint64_t v44 = sub_1B62DE2C8(v35);
    swift_release();
    unint64_t v43 = HIDWORD(v44);
  }
  unint64_t v88 = v43;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  uint64_t v46 = a2;
  sub_1B6959AAC(a2 + *(int *)(updated + 36), (uint64_t)v27, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v47 = v100;
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48))(v27, 1, v100);
  unint64_t v90 = v44;
  if (v48 == 1)
  {
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v35);
    swift_release();
    *uint64_t v34 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v27);
  }
  else
  {
    sub_1B695B370((uint64_t)v27, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v50 = v47;
  uint64_t v51 = v46;
  uint64_t v52 = v41;
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  unint64_t v55 = v92;
  sub_1B695BADC((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v56 = *v30;
    uint64_t v57 = *(void *)(v53 + 16);
    long long v102 = v56;
    if (v57)
    {
      uint64_t v58 = sub_1B62BE38C(v56);
      if (v60)
      {
        *(void *)&long long v59 = *(void *)(*(void *)(v53 + 56) + 8 * v58);
        long long v102 = v59;
      }
    }
    sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v34 = v102;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v61 = *(void *)(v103 + *(int *)(v55 + 40));
  sub_1B6959704(v103, v54, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B69596A8(v54, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v62 = *(void *)(v54 + *(int *)(v55 + 44));
  swift_bridgeObjectRetain();
  sub_1B69596A8(v54, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  if (v91) {
    goto LABEL_23;
  }
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      uint64_t v63 = &unk_1F0FA1280;
      goto LABEL_26;
    }
LABEL_23:
    if (*(unsigned char *)(v51 + 24) == 1) {
      uint64_t v63 = &unk_1F0FA12B0;
    }
    else {
      uint64_t v63 = &unk_1F0FA12E0;
    }
    goto LABEL_26;
  }
  uint64_t v63 = &unk_1F0FA1310;
LABEL_26:
  uint64_t v64 = v63[2];
  if (v64)
  {
    uint64_t v85 = v52;
    uint64_t v91 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56);
    unint64_t v92 = a9;
    v89 += 4;
    unint64_t v90 = v90 | (v88 << 32);
    uint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v65 = (unint64_t *)(v84 + 40);
    unint64_t v88 = 0x80000001B6F3E8D0;
    long long v87 = xmmword_1B6E77050;
    uint64_t v93 = v34;
    do
    {
      uint64_t v106 = v64;
      uint64_t v66 = *(v65 - 1);
      unint64_t v67 = *v65;
      uint64_t v68 = v94;
      sub_1B695BADC((uint64_t)v34, v94, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      (*v91)(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B67AFBF8(v66, v67, v99, v92, v90, 0x656C636974726170uLL, 0xEE00657461647055, v68);
      swift_bridgeObjectRelease();
      sub_1B67BAA04(v68);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v104 = 0;
      unint64_t v105 = 0xE000000000000000;
      uint64_t v103 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v104 = 0xD000000000000022;
      unint64_t v105 = v88;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v69 = v104;
      unint64_t v70 = v105;
      char v71 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v72 = qword_1EB997FF0;
      uint64_t v73 = qword_1EB985528;
      swift_retain();
      if (v73 != -1) {
        swift_once();
      }
      *(void *)&long long v102 = v65 + 2;
      sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v74 + 64) = sub_1B678615C();
      *(void *)(v74 + 32) = v69;
      *(void *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      char v75 = v71;
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v95;
      sub_1B6E31088();
      uint64_t v77 = v98[12];
      uint64_t v78 = v98[16];
      uint64_t v79 = v98[20];
      uint64_t v101 = v72;
      uint64_t v80 = (uint64_t)v97;
      uint64_t v81 = &v97[v79];
      (*v89)(v97, v76, v96);
      *(unsigned char *)(v80 + v77) = v75;
      uint64_t v65 = (unint64_t *)v102;
      *(void *)(v80 + v78) = 0;
      *(void *)uint64_t v81 = v69;
      *((void *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B695BB44(v80, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v64 = v106 - 1;
      uint64_t v34 = v93;
      uint64_t v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B6CF0514(0);
  sub_1B6CF0668(0);
  return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B6936AF4(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  unint64_t v99 = a8;
  LODWORD(v91) = a7;
  *(void *)&long long v87 = a6;
  uint64_t v103 = a3;
  sub_1B62E17B4();
  uint64_t v98 = v13;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v97 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1B6E31098();
  uint64_t v89 = *(void (***)(char *, char *, uint64_t))(v96 - 8);
  MEMORY[0x1F4188790](v96, v16);
  uint64_t v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  unint64_t v92 = v18;
  MEMORY[0x1F4188790](v18, v19);
  *(void *)&long long v102 = (char *)&v83 - v20;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v94 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v100 = type metadata accessor for ScriptIndex();
  uint64_t v106 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100, v28);
  uint64_t v30 = (uint64_t *)((char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (uint64_t *)((char *)&v83 - v33);
  uint64_t v86 = a1;
  uint64_t v35 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v36 = sub_1B62DE2C8(v35);
  swift_release();
  uint64_t v37 = *(void *)(a5 + 16);
  uint64_t v101 = a5;
  if (v37 && (uint64_t v38 = sub_1B62BE38C(v36), (v39 & 1) != 0))
  {
    uint64_t v40 = a5;
    uint64_t v41 = v9;
    uint64_t v42 = (unsigned int *)(*(void *)(v40 + 56) + 8 * v38);
    unint64_t v44 = *v42;
    unint64_t v43 = v42[1];
  }
  else
  {
    uint64_t v41 = v9;
    swift_retain();
    unint64_t v44 = sub_1B62DE2C8(v35);
    swift_release();
    unint64_t v43 = HIDWORD(v44);
  }
  unint64_t v88 = v43;
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  uint64_t v46 = a2;
  sub_1B6959AAC((uint64_t)&a2[*(int *)(inited + 36)], (uint64_t)v27, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v47 = v100;
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48))(v27, 1, v100);
  unint64_t v90 = v44;
  if (v48 == 1)
  {
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v35);
    swift_release();
    *uint64_t v34 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v27);
  }
  else
  {
    sub_1B695B370((uint64_t)v27, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v50 = v47;
  uint64_t v51 = v46;
  uint64_t v52 = v41;
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  unint64_t v55 = v92;
  sub_1B695BADC((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v56 = *v30;
    uint64_t v57 = *(void *)(v53 + 16);
    long long v102 = v56;
    if (v57)
    {
      uint64_t v58 = sub_1B62BE38C(v56);
      if (v60)
      {
        *(void *)&long long v59 = *(void *)(*(void *)(v53 + 56) + 8 * v58);
        long long v102 = v59;
      }
    }
    sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v34 = v102;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v61 = *(void *)(v103 + *(int *)(v55 + 40));
  sub_1B6959704(v103, v54, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B69596A8(v54, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v62 = *(void *)(v54 + *(int *)(v55 + 44));
  swift_bridgeObjectRetain();
  sub_1B69596A8(v54, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  if (v91) {
    goto LABEL_23;
  }
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      uint64_t v63 = &unk_1F0FA11C0;
      goto LABEL_26;
    }
LABEL_23:
    if (*v51 == 1) {
      uint64_t v63 = &unk_1F0FA11F0;
    }
    else {
      uint64_t v63 = &unk_1F0FA1220;
    }
    goto LABEL_26;
  }
  uint64_t v63 = &unk_1F0FA1250;
LABEL_26:
  uint64_t v64 = v63[2];
  if (v64)
  {
    uint64_t v85 = v52;
    uint64_t v91 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56);
    unint64_t v92 = a9;
    v89 += 4;
    unint64_t v90 = v90 | (v88 << 32);
    uint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v65 = (unint64_t *)(v84 + 40);
    unint64_t v88 = 0x80000001B6F3E8D0;
    long long v87 = xmmword_1B6E77050;
    uint64_t v93 = v34;
    do
    {
      uint64_t v106 = v64;
      uint64_t v66 = *(v65 - 1);
      unint64_t v67 = *v65;
      uint64_t v68 = v94;
      sub_1B695BADC((uint64_t)v34, v94, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      (*v91)(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B67AFBF8(v66, v67, v99, v92, v90, 0x656C636974726170uLL, 0xEC00000074696E49, v68);
      swift_bridgeObjectRelease();
      sub_1B67BAA04(v68);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v104 = 0;
      unint64_t v105 = 0xE000000000000000;
      uint64_t v103 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v104 = 0xD000000000000022;
      unint64_t v105 = v88;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v69 = v104;
      unint64_t v70 = v105;
      char v71 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v72 = qword_1EB997FF0;
      uint64_t v73 = qword_1EB985528;
      swift_retain();
      if (v73 != -1) {
        swift_once();
      }
      *(void *)&long long v102 = v65 + 2;
      sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v74 + 64) = sub_1B678615C();
      *(void *)(v74 + 32) = v69;
      *(void *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      char v75 = v71;
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v95;
      sub_1B6E31088();
      uint64_t v77 = v98[12];
      uint64_t v78 = v98[16];
      uint64_t v79 = v98[20];
      uint64_t v101 = v72;
      uint64_t v80 = (uint64_t)v97;
      uint64_t v81 = &v97[v79];
      (*v89)(v97, v76, v96);
      *(unsigned char *)(v80 + v77) = v75;
      uint64_t v65 = (unint64_t *)v102;
      *(void *)(v80 + v78) = 0;
      *(void *)uint64_t v81 = v69;
      *((void *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B695BB44(v80, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v64 = v106 - 1;
      uint64_t v34 = v93;
      uint64_t v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B6CF07BC(0);
  sub_1B6CF07F8(0);
  return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B693754C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  unint64_t v99 = a8;
  LODWORD(v91) = a7;
  *(void *)&long long v87 = a6;
  uint64_t v103 = a3;
  sub_1B62E17B4();
  uint64_t v98 = v13;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v97 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1B6E31098();
  uint64_t v89 = *(void (***)(char *, char *, uint64_t))(v96 - 8);
  MEMORY[0x1F4188790](v96, v16);
  uint64_t v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  unint64_t v92 = v18;
  MEMORY[0x1F4188790](v18, v19);
  *(void *)&long long v102 = (char *)&v83 - v20;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v94 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v100 = type metadata accessor for ScriptIndex();
  uint64_t v106 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100, v28);
  uint64_t v30 = (uint64_t *)((char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (uint64_t *)((char *)&v83 - v33);
  uint64_t v86 = a1;
  uint64_t v35 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v36 = sub_1B62DE2C8(v35);
  swift_release();
  uint64_t v37 = *(void *)(a5 + 16);
  uint64_t v101 = a5;
  if (v37 && (uint64_t v38 = sub_1B62BE38C(v36), (v39 & 1) != 0))
  {
    uint64_t v40 = a5;
    uint64_t v41 = v9;
    uint64_t v42 = (unsigned int *)(*(void *)(v40 + 56) + 8 * v38);
    unint64_t v44 = *v42;
    unint64_t v43 = v42[1];
  }
  else
  {
    uint64_t v41 = v9;
    swift_retain();
    unint64_t v44 = sub_1B62DE2C8(v35);
    swift_release();
    unint64_t v43 = HIDWORD(v44);
  }
  unint64_t v88 = v43;
  uint64_t v45 = type metadata accessor for EmitterScript(0);
  uint64_t v46 = a2;
  sub_1B6959AAC((uint64_t)&a2[*(int *)(v45 + 32)], (uint64_t)v27, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v47 = v100;
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48))(v27, 1, v100);
  unint64_t v90 = v44;
  if (v48 == 1)
  {
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v35);
    swift_release();
    *uint64_t v34 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v27);
  }
  else
  {
    sub_1B695B370((uint64_t)v27, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v50 = v47;
  uint64_t v51 = v46;
  uint64_t v52 = v41;
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  unint64_t v55 = v92;
  sub_1B695BADC((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v56 = *v30;
    uint64_t v57 = *(void *)(v53 + 16);
    long long v102 = v56;
    if (v57)
    {
      uint64_t v58 = sub_1B62BE38C(v56);
      if (v60)
      {
        *(void *)&long long v59 = *(void *)(*(void *)(v53 + 56) + 8 * v58);
        long long v102 = v59;
      }
    }
    sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v34 = v102;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v61 = *(void *)(v103 + *(int *)(v55 + 40));
  sub_1B6959704(v103, v54, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B69596A8(v54, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v62 = *(void *)(v54 + *(int *)(v55 + 44));
  swift_bridgeObjectRetain();
  sub_1B69596A8(v54, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  if (v91) {
    goto LABEL_23;
  }
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      uint64_t v63 = &unk_1F0FA14C0;
      goto LABEL_26;
    }
LABEL_23:
    if (*v51 == 1) {
      uint64_t v63 = &unk_1F0FA14F0;
    }
    else {
      uint64_t v63 = &unk_1F0FA1520;
    }
    goto LABEL_26;
  }
  uint64_t v63 = &unk_1F0FA1550;
LABEL_26:
  uint64_t v64 = v63[2];
  if (v64)
  {
    uint64_t v85 = v52;
    uint64_t v91 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56);
    unint64_t v92 = a9;
    v89 += 4;
    unint64_t v90 = v90 | (v88 << 32);
    uint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v65 = (unint64_t *)(v84 + 40);
    unint64_t v88 = 0x80000001B6F3E8D0;
    long long v87 = xmmword_1B6E77050;
    uint64_t v93 = v34;
    do
    {
      uint64_t v106 = v64;
      uint64_t v66 = *(v65 - 1);
      unint64_t v67 = *v65;
      uint64_t v68 = v94;
      sub_1B695BADC((uint64_t)v34, v94, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      (*v91)(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B67AFBF8(v66, v67, v99, v92, v90, 0x72657474696D65uLL, 0xE700000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B67BAA04(v68);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v104 = 0;
      unint64_t v105 = 0xE000000000000000;
      uint64_t v103 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v104 = 0xD000000000000022;
      unint64_t v105 = v88;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v69 = v104;
      unint64_t v70 = v105;
      char v71 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v72 = qword_1EB997FF0;
      uint64_t v73 = qword_1EB985528;
      swift_retain();
      if (v73 != -1) {
        swift_once();
      }
      *(void *)&long long v102 = v65 + 2;
      sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v74 + 64) = sub_1B678615C();
      *(void *)(v74 + 32) = v69;
      *(void *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      char v75 = v71;
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v95;
      sub_1B6E31088();
      uint64_t v77 = v98[12];
      uint64_t v78 = v98[16];
      uint64_t v79 = v98[20];
      uint64_t v101 = v72;
      uint64_t v80 = (uint64_t)v97;
      uint64_t v81 = &v97[v79];
      (*v89)(v97, v76, v96);
      *(unsigned char *)(v80 + v77) = v75;
      uint64_t v65 = (unint64_t *)v102;
      *(void *)(v80 + v78) = 0;
      *(void *)uint64_t v81 = v69;
      *((void *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B695BB44(v80, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v64 = v106 - 1;
      uint64_t v34 = v93;
      uint64_t v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B6CF0834(0);
  sub_1B6CF0870(0);
  return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B6937F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  unint64_t v99 = a8;
  LODWORD(v91) = a7;
  *(void *)&long long v87 = a6;
  uint64_t v103 = a3;
  sub_1B62E17B4();
  uint64_t v98 = v13;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v97 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1B6E31098();
  uint64_t v89 = *(void (***)(char *, char *, uint64_t))(v96 - 8);
  MEMORY[0x1F4188790](v96, v16);
  uint64_t v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  unint64_t v92 = v18;
  MEMORY[0x1F4188790](v18, v19);
  *(void *)&long long v102 = (char *)&v83 - v20;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v94 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v100 = type metadata accessor for ScriptIndex();
  uint64_t v106 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100, v28);
  uint64_t v30 = (uint64_t *)((char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (uint64_t *)((char *)&v83 - v33);
  uint64_t v86 = a1;
  uint64_t v35 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v36 = sub_1B62DE2C8(v35);
  swift_release();
  uint64_t v37 = *(void *)(a5 + 16);
  uint64_t v101 = a5;
  if (v37 && (uint64_t v38 = sub_1B62BE38C(v36), (v39 & 1) != 0))
  {
    uint64_t v40 = a5;
    uint64_t v41 = v9;
    uint64_t v42 = (unsigned int *)(*(void *)(v40 + 56) + 8 * v38);
    unint64_t v44 = *v42;
    unint64_t v43 = v42[1];
  }
  else
  {
    uint64_t v41 = v9;
    swift_retain();
    unint64_t v44 = sub_1B62DE2C8(v35);
    swift_release();
    unint64_t v43 = HIDWORD(v44);
  }
  unint64_t v88 = v43;
  uint64_t v45 = type metadata accessor for SimpleScript(0);
  uint64_t v46 = a2;
  sub_1B6959AAC(a2 + *(int *)(v45 + 36), (uint64_t)v27, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v47 = v100;
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48))(v27, 1, v100);
  unint64_t v90 = v44;
  if (v48 == 1)
  {
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v35);
    swift_release();
    *uint64_t v34 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v27);
  }
  else
  {
    sub_1B695B370((uint64_t)v27, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v50 = v47;
  uint64_t v51 = v46;
  uint64_t v52 = v41;
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  unint64_t v55 = v92;
  sub_1B695BADC((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v56 = *v30;
    uint64_t v57 = *(void *)(v53 + 16);
    long long v102 = v56;
    if (v57)
    {
      uint64_t v58 = sub_1B62BE38C(v56);
      if (v60)
      {
        *(void *)&long long v59 = *(void *)(*(void *)(v53 + 56) + 8 * v58);
        long long v102 = v59;
      }
    }
    sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v34 = v102;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v61 = *(void *)(v103 + *(int *)(v55 + 40));
  sub_1B6959704(v103, v54, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B69596A8(v54, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v62 = *(void *)(v54 + *(int *)(v55 + 44));
  swift_bridgeObjectRetain();
  sub_1B69596A8(v54, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  if (v91) {
    goto LABEL_23;
  }
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      uint64_t v63 = &unk_1F0FA1400;
      goto LABEL_26;
    }
LABEL_23:
    if (*(unsigned char *)(v51 + 32) == 1) {
      uint64_t v63 = &unk_1F0FA1430;
    }
    else {
      uint64_t v63 = &unk_1F0FA1460;
    }
    goto LABEL_26;
  }
  uint64_t v63 = &unk_1F0FA1490;
LABEL_26:
  uint64_t v64 = v63[2];
  if (v64)
  {
    uint64_t v85 = v52;
    uint64_t v91 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56);
    unint64_t v92 = a9;
    v89 += 4;
    unint64_t v90 = v90 | (v88 << 32);
    uint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v65 = (unint64_t *)(v84 + 40);
    unint64_t v88 = 0x80000001B6F3E8D0;
    long long v87 = xmmword_1B6E77050;
    uint64_t v93 = v34;
    do
    {
      uint64_t v106 = v64;
      uint64_t v66 = *(v65 - 1);
      unint64_t v67 = *v65;
      uint64_t v68 = v94;
      sub_1B695BADC((uint64_t)v34, v94, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      (*v91)(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B67AFBF8(v66, v67, v99, v92, v90, 0x656C706D6973uLL, 0xE600000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B67BAA04(v68);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v104 = 0;
      unint64_t v105 = 0xE000000000000000;
      uint64_t v103 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v104 = 0xD000000000000022;
      unint64_t v105 = v88;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v69 = v104;
      unint64_t v70 = v105;
      char v71 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v72 = qword_1EB997FF0;
      uint64_t v73 = qword_1EB985528;
      swift_retain();
      if (v73 != -1) {
        swift_once();
      }
      *(void *)&long long v102 = v65 + 2;
      sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v74 + 64) = sub_1B678615C();
      *(void *)(v74 + 32) = v69;
      *(void *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      char v75 = v71;
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v95;
      sub_1B6E31088();
      uint64_t v77 = v98[12];
      uint64_t v78 = v98[16];
      uint64_t v79 = v98[20];
      uint64_t v101 = v72;
      uint64_t v80 = (uint64_t)v97;
      uint64_t v81 = &v97[v79];
      (*v89)(v97, v76, v96);
      *(unsigned char *)(v80 + v77) = v75;
      uint64_t v65 = (unint64_t *)v102;
      *(void *)(v80 + v78) = 0;
      *(void *)uint64_t v81 = v69;
      *((void *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B695BB44(v80, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v64 = v106 - 1;
      uint64_t v34 = v93;
      uint64_t v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B6CF099C(0);
  sub_1B6CF09D8(0);
  return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B69389E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  unint64_t v99 = a8;
  LODWORD(v91) = a7;
  *(void *)&long long v87 = a6;
  uint64_t v103 = a3;
  sub_1B62E17B4();
  uint64_t v98 = v13;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v97 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1B6E31098();
  uint64_t v89 = *(void (***)(char *, char *, uint64_t))(v96 - 8);
  MEMORY[0x1F4188790](v96, v16);
  uint64_t v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  unint64_t v92 = v18;
  MEMORY[0x1F4188790](v18, v19);
  *(void *)&long long v102 = (char *)&v83 - v20;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v94 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v100 = type metadata accessor for ScriptIndex();
  uint64_t v106 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100, v28);
  uint64_t v30 = (uint64_t *)((char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (uint64_t *)((char *)&v83 - v33);
  uint64_t v86 = a1;
  uint64_t v35 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v36 = sub_1B62DE2C8(v35);
  swift_release();
  uint64_t v37 = *(void *)(a5 + 16);
  uint64_t v101 = a5;
  if (v37 && (uint64_t v38 = sub_1B62BE38C(v36), (v39 & 1) != 0))
  {
    uint64_t v40 = a5;
    uint64_t v41 = v9;
    uint64_t v42 = (unsigned int *)(*(void *)(v40 + 56) + 8 * v38);
    unint64_t v44 = *v42;
    unint64_t v43 = v42[1];
  }
  else
  {
    uint64_t v41 = v9;
    swift_retain();
    unint64_t v44 = sub_1B62DE2C8(v35);
    swift_release();
    unint64_t v43 = HIDWORD(v44);
  }
  unint64_t v88 = v43;
  uint64_t v45 = type metadata accessor for GraphScript(0);
  uint64_t v46 = a2;
  sub_1B6959AAC(a2 + *(int *)(v45 + 40), (uint64_t)v27, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  uint64_t v47 = v100;
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48))(v27, 1, v100);
  unint64_t v90 = v44;
  if (v48 == 1)
  {
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v35);
    swift_release();
    *uint64_t v34 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v27);
  }
  else
  {
    sub_1B695B370((uint64_t)v27, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v50 = v47;
  uint64_t v51 = v46;
  uint64_t v52 = v41;
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  unint64_t v55 = v92;
  sub_1B695BADC((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v56 = *v30;
    uint64_t v57 = *(void *)(v53 + 16);
    long long v102 = v56;
    if (v57)
    {
      uint64_t v58 = sub_1B62BE38C(v56);
      if (v60)
      {
        *(void *)&long long v59 = *(void *)(*(void *)(v53 + 56) + 8 * v58);
        long long v102 = v59;
      }
    }
    sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v34 = v102;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v61 = *(void *)(v103 + *(int *)(v55 + 40));
  sub_1B6959704(v103, v54, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B69596A8(v54, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v62 = *(void *)(v54 + *(int *)(v55 + 44));
  swift_bridgeObjectRetain();
  sub_1B69596A8(v54, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  if (v91) {
    goto LABEL_23;
  }
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      uint64_t v63 = &unk_1F0FA1340;
      goto LABEL_26;
    }
LABEL_23:
    if (*(unsigned char *)(v51 + 24) == 1) {
      uint64_t v63 = &unk_1F0FA1370;
    }
    else {
      uint64_t v63 = &unk_1F0FA13A0;
    }
    goto LABEL_26;
  }
  uint64_t v63 = &unk_1F0FA13D0;
LABEL_26:
  uint64_t v64 = v63[2];
  if (v64)
  {
    uint64_t v85 = v52;
    uint64_t v91 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56);
    unint64_t v92 = a9;
    v89 += 4;
    unint64_t v90 = v90 | (v88 << 32);
    uint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v65 = (unint64_t *)(v84 + 40);
    unint64_t v88 = 0x80000001B6F3E8D0;
    long long v87 = xmmword_1B6E77050;
    uint64_t v93 = v34;
    do
    {
      uint64_t v106 = v64;
      uint64_t v66 = *(v65 - 1);
      unint64_t v67 = *v65;
      uint64_t v68 = v94;
      sub_1B695BADC((uint64_t)v34, v94, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      (*v91)(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B67AFBF8(v66, v67, v99, v92, v90, 0x6870617267uLL, 0xE500000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B67BAA04(v68);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v104 = 0;
      unint64_t v105 = 0xE000000000000000;
      uint64_t v103 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v104 = 0xD000000000000022;
      unint64_t v105 = v88;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v69 = v104;
      unint64_t v70 = v105;
      char v71 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v72 = qword_1EB997FF0;
      uint64_t v73 = qword_1EB985528;
      swift_retain();
      if (v73 != -1) {
        swift_once();
      }
      *(void *)&long long v102 = v65 + 2;
      sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v74 + 64) = sub_1B678615C();
      *(void *)(v74 + 32) = v69;
      *(void *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      char v75 = v71;
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = v95;
      sub_1B6E31088();
      uint64_t v77 = v98[12];
      uint64_t v78 = v98[16];
      uint64_t v79 = v98[20];
      uint64_t v101 = v72;
      uint64_t v80 = (uint64_t)v97;
      uint64_t v81 = &v97[v79];
      (*v89)(v97, v76, v96);
      *(unsigned char *)(v80 + v77) = v75;
      uint64_t v65 = (unint64_t *)v102;
      *(void *)(v80 + v78) = 0;
      *(void *)uint64_t v81 = v69;
      *((void *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B695BB44(v80, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v64 = v106 - 1;
      uint64_t v34 = v93;
      uint64_t v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B6CF0A14(0);
  sub_1B6CF0A50(0);
  return sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t *sub_1B6939434(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABE64, (uint64_t (*)(uint64_t *))sub_1B62CA064, type metadata accessor for GraphScript, (uint64_t)&off_1F0F55610);
}

uint64_t *sub_1B693947C(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABB74, (uint64_t (*)(uint64_t *))sub_1B63061D4, type metadata accessor for SimpleScript, (uint64_t)&off_1F0F5C308);
}

uint64_t *sub_1B69394C4(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A8D54, (uint64_t (*)(uint64_t *))sub_1B63061D4, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1F0F7CDE8);
}

uint64_t *sub_1B693950C(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABBE8, (uint64_t (*)(uint64_t *))sub_1B63061D4, type metadata accessor for ShaderScript, (uint64_t)&off_1F0F5C050);
}

uint64_t *sub_1B6939554(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB6F0, (uint64_t (*)(uint64_t *))sub_1B63061D4, type metadata accessor for EmitterScript, (uint64_t)&off_1F0F5EBD0);
}

uint64_t *sub_1B693959C(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A93E0, (uint64_t (*)(uint64_t *))sub_1B63061D4, type metadata accessor for ParticleInitScript, (uint64_t)&off_1F0F796D0);
}

uint64_t *sub_1B69395E4(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A84C0, (uint64_t (*)(uint64_t *))sub_1B63061D4, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1F0F82FB8);
}

uint64_t *sub_1B693962C(uint64_t a1, uint64_t *a2)
{
  return sub_1B6939674(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAC84, (uint64_t (*)(uint64_t *))sub_1B63061D4, type metadata accessor for TriggerScript, (uint64_t)&off_1F0F625B0);
}

uint64_t *sub_1B6939674(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t (*a4)(uint64_t *), uint64_t (*a5)(void), uint64_t a6)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v73 = qword_1EB997A18;
  int v74 = 0;
  char v75 = 2;
  uint64_t v76 = 0;
  char v77 = 2;
  uint64_t v78 = 0;
  swift_retain();
  a3(&v47, 1);
  swift_release();
  uint64_t v67 = v47;
  int v68 = v48;
  char v69 = v49;
  uint64_t v70 = v50 | 1;
  char v71 = v51;
  uint64_t v72 = v52;
  sub_1B62C9DA8(a1, (uint64_t)&v67, 0x200000000, v53);
  sub_1B62D7A10((uint64_t)v53, (uint64_t)v54, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v54[0]) {
    return (uint64_t *)a4(&v47);
  }
  long long v61 = v54[0];
  long long v62 = v54[1];
  uint64_t v10 = v56;
  uint64_t v63 = v55;
  uint64_t v12 = v57;
  uint64_t v11 = v58;
  uint64_t v13 = v59;
  uint64_t v14 = v60;
  a4(&v47);
  if (v14 > 0 && v12)
  {
    uint64_t v46 = v13[4];
    int v15 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v16 = a5(0);
    v64[0] = v61;
    v64[1] = v62;
    uint64_t v65 = v63;
    uint64_t v40 = v16;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v17 = 0;
    unint64_t v18 = (uint64_t *)(v10 + 24);
    int v41 = v15;
    while (1)
    {
      uint64_t v44 = *((unsigned int *)v18 - 6);
      uint64_t v45 = v12;
      uint64_t v43 = *((unsigned int *)v18 - 5);
      uint64_t v19 = (uint64_t *)*(v18 - 1);
      uint64_t v20 = *v18;
      uint64_t v21 = v18[1];
      uint64_t v22 = v18[2];
      uint64_t v23 = v17;
      if (v15)
      {
        uint64_t v24 = *(os_unfair_lock_s **)(v22 + 376);
        swift_retain();
        os_unfair_lock_lock(v24);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v46);
      sub_1B62D7A10((uint64_t)(v13 + 6), (uint64_t)v66, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v25 = v13[4];
      uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v13[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
      v13[7] = v26;
      v13[9] = 0;
      v13[10] = 0;
      unsigned char v13[8] = 0;
      swift_release();
      sub_1B62C9024(v40, a6, v19, v20, v21, (uint64_t)v13);
      if (v19)
      {
        int v15 = v41;
        uint64_t v17 = v23;
        uint64_t v27 = v45;
        if (v21)
        {
          uint64_t v28 = a2;
          uint64_t v29 = v21 + *a2;
LABEL_16:
          *uint64_t v28 = v29;
        }
      }
      else
      {
        int v15 = v41;
        uint64_t v17 = v23;
        uint64_t v27 = v45;
        if (v44 != v43)
        {
          uint64_t v28 = a2;
          uint64_t v29 = *a2 + v43 - v44;
          goto LABEL_16;
        }
      }
      sub_1B6345178(v13, (unsigned __int16 **)v64, (uint64_t)v66);
      if (*(void *)(v13[13] + 16))
      {
        uint64_t v30 = swift_bridgeObjectRetain();
        sub_1B639147C(v30, v22);
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v32 = v13[13];
        if (isUniquelyReferenced_nonNull_native)
        {
          sub_1B6399BB8(0, *(void *)(v32 + 16));
        }
        else
        {
          uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v32 + 24) >= 2uLL)
          {
            sub_1B638C038(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
            uint64_t v33 = (void *)swift_allocObject();
            size_t v34 = j__malloc_size(v33);
            void v33[2] = 0;
            v33[3] = 2 * ((uint64_t)(v34 - 32) / 72);
          }
          v13[13] = v33;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v13[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          uint64_t v35 = *(char **)(v22 + 232);
          uint64_t v36 = *(char **)(v22 + 256);
          if (v35 == v36)
          {
            uint64_t v37 = *(char **)(v22 + 240);
          }
          else
          {
            sub_1B666018C(v36, v35);
            uint64_t v36 = *(char **)(v22 + 232);
            uint64_t v37 = *(char **)(v22 + 240);
            if (v37 == v36)
            {
              uint64_t v37 = 0;
              uint64_t v36 = 0;
              *(void *)(v22 + 232) = 0;
              *(void *)(v22 + 240) = 0;
            }
          }
          *(void *)(v22 + 248) = v37;
          *(void *)(v22 + 256) = v36;
        }
      }
      ecs_stack_allocator_pop_snapshot(v46);
      if (v15)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
      }
      swift_release();
      v18 += 6;
      uint64_t v12 = v27 - 1;
      if (!v12)
      {
        sub_1B632F170(v53);
        return sub_1B632F170(v53);
      }
    }
  }
  return sub_1B632F170(v53);
}

uint64_t *sub_1B6939B54(void *a1, void (*a2)(_OWORD *__return_ptr, uint64_t), uint64_t (*a3)(_OWORD *), unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(void))
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v127 = qword_1EB997A18;
  int v128 = 0;
  char v129 = 2;
  uint64_t v130 = 0;
  char v131 = 2;
  uint64_t v132 = 0;
  uint64_t v11 = swift_retain();
  a2(v109, v11);
  swift_release();
  v124[0] = v109[0];
  v124[1] = v109[1];
  uint64_t v125 = v110;
  uint64_t v12 = swift_retain();
  sub_1B62C9DA8(v12, (uint64_t)v124, 0x200000000, v111);
  sub_1B62D7A10((uint64_t)v111, (uint64_t)v112, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v112[0])
  {
    swift_release();
    return (uint64_t *)a3(v109);
  }
  long long v119 = v112[0];
  long long v120 = v112[1];
  uint64_t v121 = v113;
  uint64_t v14 = v115;
  uint64_t v13 = v116;
  uint64_t v15 = v118;
  uint64_t v89 = v114;
  unint64_t v90 = v117;
  swift_release();
  if (v15 <= 0 || !v14)
  {
    a3(v109);
    return sub_1B632F170(v111);
  }
  uint64_t v16 = v90;
  uint64_t v94 = v90[4];
  int v93 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  sub_1B62AC710(0, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v18 = v17;
  long long v87 = v17 - 2;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v97 = v18;
  uint64_t v88 = v14;
  while (1)
  {
    uint64_t v21 = (unsigned int *)(v89 + 48 * v19);
    uint64_t v22 = *v21;
    uint64_t v100 = v21[1];
    uint64_t v24 = (uint64_t *)*((void *)v21 + 2);
    uint64_t v23 = *((void *)v21 + 3);
    uint64_t v26 = *((void *)v21 + 4);
    uint64_t v25 = *((void *)v21 + 5);
    uint64_t v91 = v20;
    uint64_t v92 = v19;
    if (v93)
    {
      uint64_t v27 = *(os_unfair_lock_s **)(v25 + 376);
      swift_retain();
      os_unfair_lock_lock(v27);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v25 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v94);
    sub_1B62D7A10((uint64_t)(v90 + 6), (uint64_t)v126, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v28 = v16[4];
    uint64_t v29 = *(void *)(*(void *)(*(void *)(*(void *)(v25 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v16[6] = ecs_stack_allocator_allocate(v28, 48 * v29, 8);
    v16[7] = v29;
    v90[9] = 0;
    v90[10] = 0;
    v90[8] = 0;
    swift_release();
    uint64_t v30 = v24;
    uint64_t v31 = sub_1B62C9024((uint64_t)v18, (uint64_t)&off_1F0F836B8, v24, v23, v26, (uint64_t)v16);
    uint64_t v32 = v31;
    uint64_t v99 = v25;
    if (!v30) {
      break;
    }
    if (v26)
    {
      uint64_t v95 = *(void *)(*(void *)v87 + 72);
      do
      {
        uint64_t v37 = *v30;
        uint64_t v36 = v30 + 1;
        uint64_t v35 = v37;
        uint64_t v38 = swift_retain();
        if (*(unsigned char *)(v25 + 184)) {
          goto LABEL_66;
        }
        unsigned int v39 = *(_DWORD *)(*(void *)(v25 + 168) + 4 * v35);
        uint64_t v104 = *(unsigned int *)(*(void *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v39 + 8);
        swift_release();
        uint64_t v40 = a7(0);
        uint64_t v41 = v40;
        uint64_t v101 = v26;
        long long v102 = v36;
        if (*(unsigned char *)(v32 + v18[10]))
        {
          unint64_t v42 = *(void *)(v32 + v18[11]);
          if (v42)
          {
            uint64_t v43 = *(void *)(v32 + v18[13]);
            unint64_t v44 = v42 | 0x4000000000000000;
            id v45 = (id)v42;
          }
          else
          {
            unint64_t v44 = 0;
            uint64_t v43 = *(void *)(v32 + v18[13]);
          }
          uint64_t v46 = v41;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v46 = v40;
          uint64_t v43 = 0;
          unint64_t v44 = 0x8000000000000000;
        }
        sub_1B67F7C58(v43, v44);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v107 = (void *)*a1;
        *a1 = 0x8000000000000000;
        uint64_t v48 = v39 | (unint64_t)(v104 << 32);
        unint64_t v49 = sub_1B69FB434(v48, v46);
        char v51 = v50;
        uint64_t v52 = v107[2] + ((v50 & 1) == 0);
        if (v107[3] >= v52)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1B6AD251C();
          }
        }
        else
        {
          sub_1B6AC118C(v52, isUniquelyReferenced_nonNull_native);
          unint64_t v53 = sub_1B69FB434(v48, v46);
          if ((v51 & 1) != (v54 & 1)) {
            goto LABEL_67;
          }
          unint64_t v49 = v53;
        }
        uint64_t v30 = v102;
        if (v51)
        {
          uint64_t v55 = v107[7] + 16 * v49;
          sub_1B6959BCC(*(void *)v55, *(void *)(v55 + 8));
          *(void *)uint64_t v55 = v43;
          *(void *)(v55 + 8) = v44;
        }
        else
        {
          v107[(v49 >> 6) + 8] |= 1 << v49;
          uint64_t v33 = v107[6] + 16 * v49;
          *(_DWORD *)uint64_t v33 = v39;
          *(_DWORD *)(v33 + 4) = v104;
          *(void *)(v33 + 8) = v46;
          size_t v34 = (uint64_t *)(v107[7] + 16 * v49);
          *size_t v34 = v43;
          v34[1] = v44;
          ++v107[2];
        }
        *a1 = v107;
        swift_bridgeObjectRelease();
        sub_1B6959BCC(v43, v44);
        unint64_t v18 = v97;
        v32 += v95;
        uint64_t v25 = v99;
        uint64_t v26 = v101 - 1;
      }
      while (v101 != 1);
    }
LABEL_31:
    v122[0] = v119;
    v122[1] = v120;
    uint64_t v123 = v121;
    uint64_t v16 = v90;
    uint64_t v20 = v91;
    sub_1B6345178(v90, (unsigned __int16 **)v122, (uint64_t)v126);
    if (*(void *)(v90[13] + 16))
    {
      uint64_t v56 = swift_bridgeObjectRetain();
      sub_1B639147C(v56, v25);
      swift_bridgeObjectRelease();
      char v57 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v58 = v90[13];
      if (v57)
      {
        sub_1B6399BB8(0, *(void *)(v58 + 16));
      }
      else
      {
        long long v59 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v58 + 24) >= 2uLL)
        {
          sub_1B638C038(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          long long v59 = (void *)swift_allocObject();
          size_t v60 = j__malloc_size(v59);
          v59[2] = 0;
          v59[3] = 2 * ((uint64_t)(v60 - 32) / 72);
        }
        v90[13] = v59;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v90[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        long long v61 = *(char **)(v25 + 232);
        long long v62 = *(char **)(v25 + 256);
        if (v61 == v62)
        {
          uint64_t v63 = *(char **)(v25 + 240);
        }
        else
        {
          sub_1B666018C(v62, v61);
          long long v62 = *(char **)(v25 + 232);
          uint64_t v63 = *(char **)(v25 + 240);
          if (v63 == v62)
          {
            uint64_t v63 = 0;
            long long v62 = 0;
            *(void *)(v25 + 232) = 0;
            *(void *)(v25 + 240) = 0;
          }
        }
        *(void *)(v25 + 248) = v63;
        *(void *)(v25 + 256) = v62;
      }
    }
    ecs_stack_allocator_pop_snapshot(v94);
    if (v93)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 376));
    }
    swift_release();
    uint64_t v19 = v92 + 1;
    if (v92 + 1 == v88)
    {
      a3(v109);
      sub_1B632F170(v111);
      return sub_1B632F170(v111);
    }
  }
  if (v22 == v100) {
    goto LABEL_31;
  }
  uint64_t v96 = *(void *)(*(void *)v87 + 72);
  uint64_t v64 = v31 + v96 * v22;
  while (1)
  {
    uint64_t v67 = swift_retain();
    if (*(unsigned char *)(v25 + 184)) {
      break;
    }
    unsigned int v68 = *(_DWORD *)(*(void *)(v25 + 168) + 4 * v22);
    uint64_t v69 = *(unsigned int *)(*(void *)(v67 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v68 + 8);
    swift_release();
    uint64_t v70 = a7(0);
    if (*(unsigned char *)(v64 + v18[10]))
    {
      unint64_t v71 = *(void *)(v64 + v18[11]);
      if (v71)
      {
        uint64_t v72 = *(void *)(v64 + v18[13]);
        unint64_t v73 = v71 | 0x4000000000000000;
        id v74 = (id)v71;
      }
      else
      {
        unint64_t v73 = 0;
        uint64_t v72 = *(void *)(v64 + v18[13]);
      }
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v72 = 0;
      unint64_t v73 = 0x8000000000000000;
    }
    unsigned int v103 = v68;
    unint64_t v105 = v73;
    sub_1B67F7C58(v72, v73);
    char v75 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v108 = (void *)*a1;
    *a1 = 0x8000000000000000;
    int v76 = v69;
    uint64_t v77 = v68 | (unint64_t)(v69 << 32);
    unint64_t v78 = sub_1B69FB434(v77, v70);
    char v80 = v79;
    uint64_t v81 = v108[2] + ((v79 & 1) == 0);
    if (v108[3] >= v81)
    {
      if ((v75 & 1) == 0) {
        sub_1B6AD251C();
      }
    }
    else
    {
      sub_1B6AC118C(v81, v75);
      unint64_t v82 = sub_1B69FB434(v77, v70);
      if ((v80 & 1) != (v83 & 1)) {
        goto LABEL_67;
      }
      unint64_t v78 = v82;
    }
    if (v80)
    {
      uint64_t v84 = v108[7] + 16 * v78;
      sub_1B6959BCC(*(void *)v84, *(void *)(v84 + 8));
      *(void *)uint64_t v84 = v72;
      *(void *)(v84 + 8) = v105;
    }
    else
    {
      v108[(v78 >> 6) + 8] |= 1 << v78;
      uint64_t v65 = v108[6] + 16 * v78;
      *(_DWORD *)uint64_t v65 = v103;
      *(_DWORD *)(v65 + 4) = v76;
      *(void *)(v65 + 8) = v70;
      uint64_t v66 = (uint64_t *)(v108[7] + 16 * v78);
      *uint64_t v66 = v72;
      v66[1] = v105;
      ++v108[2];
    }
    ++v22;
    *a1 = v108;
    swift_bridgeObjectRelease();
    sub_1B6959BCC(v72, v105);
    unint64_t v18 = v97;
    v64 += v96;
    uint64_t v25 = v99;
    if (v100 == v22) {
      goto LABEL_31;
    }
  }
LABEL_66:
  sub_1B6E32BE8();
  __break(1u);
LABEL_67:
  uint64_t result = (uint64_t *)sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B693A4F0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = 0;
  *(unsigned char *)(a2 + 2) = 1;
  uint64_t v4 = a2 + a1[7];
  uint64_t v5 = sub_1B6E30F48();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v7 = a1[9];
  *(void *)(a2 + a1[8]) = 0;
  *(void *)(a2 + v7) = 0;
  return result;
}

unint64_t sub_1B693A580()
{
  unint64_t result = qword_1EB97F510[0];
  if (!qword_1EB97F510[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB97F510);
  }
  return result;
}

uint64_t sub_1B693A5D4(uint64_t isStackAllocationSafe, uint64_t (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_1B693A740((void *)((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, v5, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = sub_1B693A740((unint64_t *)v10, v7, v5, a2);
    MEMORY[0x1BA9B84C0](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_1B693A740(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v22 = 0;
  uint64_t i = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v29 = &v25;
  uint64_t v21 = a3 + 104;
  if (v10) {
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v14 = i + 1;
  if (i + 1 < v11)
  {
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    if (v15) {
      goto LABEL_19;
    }
    uint64_t v14 = i + 2;
    if (i + 2 >= v11) {
      return sub_1B685F1AC(a1, a2, v22, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    if (v15) {
      goto LABEL_19;
    }
    uint64_t v14 = i + 3;
    if (i + 3 >= v11) {
      return sub_1B685F1AC(a1, a2, v22, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    if (v15)
    {
LABEL_19:
      unint64_t v10 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
      for (i = v14; ; unint64_t v13 = v12 | (i << 6))
      {
        uint64_t v16 = *(void *)(*(void *)(a3 + 48) + 16 * v13);
        sub_1B6874B44(*(void *)(a3 + 56) + 96 * v13, (uint64_t)v28);
        uint64_t v17 = a4(0);
        sub_1B6874B44((uint64_t)v28, (uint64_t)v27);
        if (v16 == v17)
        {
          sub_1B6874B44((uint64_t)v27, (uint64_t)v23);
          if (v26 == 1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
            goto LABEL_6;
          }
          if (v26 == 2)
          {

LABEL_6:
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v23);
            sub_1B69599E0((uint64_t)v27);
            sub_1B69599E0((uint64_t)v28);
            if (!v10) {
              goto LABEL_8;
            }
            goto LABEL_7;
          }
        }
        sub_1B69599E0((uint64_t)v27);
        sub_1B69599E0((uint64_t)v28);
        *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        ++v22;
        if (!v10) {
          goto LABEL_8;
        }
LABEL_7:
        unint64_t v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
      }
    }
    uint64_t v14 = i + 4;
    if (i + 4 < v11)
    {
      unint64_t v15 = *(void *)(v7 + 8 * v14);
      if (!v15)
      {
        do
        {
          if (v11 - 5 == i) {
            return sub_1B685F1AC(a1, a2, v22, a3);
          }
          unint64_t v15 = *(void *)(v21 + 8 * i++);
        }
        while (!v15);
        uint64_t v14 = i + 4;
      }
      goto LABEL_19;
    }
  }
  return sub_1B685F1AC(a1, a2, v22, a3);
}

uint64_t sub_1B693A990(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = 0;
  uint64_t v3 = a1 + 40;
  uint64_t v4 = -v1;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v14 = a1 + 40;
  do
  {
    uint64_t v15 = v5;
    char v6 = (uint64_t *)(v3 + 16 * v2++);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B633AF88();
      char v9 = sub_1B6E32678();
      swift_bridgeObjectRelease();
      if (v9) {
        break;
      }
      v6 += 2;
      swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1) {
        return v15;
      }
    }
    uint64_t v5 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B6C3C3B8(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v5 = v15;
    }
    unint64_t v11 = *(void *)(v5 + 16);
    unint64_t v10 = *(void *)(v5 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_1B6C3C3B8(v10 > 1, v11 + 1, 1);
      uint64_t v5 = v15;
    }
    *(void *)(v5 + 16) = v11 + 1;
    uint64_t v12 = v5 + 16 * v11;
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v8;
    uint64_t v3 = v14;
  }
  while (v4 + v2);
  return v5;
}

uint64_t sub_1B693AB30()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B693AB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  int v101 = a8;
  uint64_t v98 = a7;
  uint64_t v112 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v107 = (uint64_t)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  char v26 = (char *)&v92 - v25;
  uint64_t v110 = type metadata accessor for ScriptIndex();
  uint64_t v113 = *(char **)(v110 - 8);
  MEMORY[0x1F4188790](v110, v27);
  uint64_t v29 = (uint64_t *)((char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (uint64_t *)((char *)&v92 - v32);
  uint64_t v100 = a5;
  sub_1B69596A8(a5, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v34 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v35 = *(void *)(a6 + 16);
  uint64_t v99 = a1;
  if (v35 && (uint64_t v36 = sub_1B62BE38C(v34), (v37 & 1) != 0))
  {
    uint64_t v38 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    unint64_t v40 = v38[1];
  }
  else
  {
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v40 = HIDWORD(v39);
  }
  uint64_t v96 = type metadata accessor for GraphScript(0);
  sub_1B6959AAC(v112 + *(int *)(v96 + 40), (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v113 + 6))(v26, 1, v110);
  uint64_t v97 = a2;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(a2);
    swift_release();
    *uint64_t v33 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    sub_1B695B370((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v33, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v43 = *v29;
    uint64_t v44 = *(void *)(a6 + 16);
    long long v111 = v43;
    if (v44)
    {
      uint64_t v45 = sub_1B62BE38C(v43);
      if (v47)
      {
        *(void *)&long long v46 = *(void *)(*(void *)(a6 + 56) + 8 * v45);
        long long v111 = v46;
      }
    }
    sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v33 = v111;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v48 = (uint64_t *)v112;
  uint64_t v49 = v100;
  uint64_t v50 = sub_1B695BADC(v112, v100, type metadata accessor for GraphScript);
  uint64_t v51 = sub_1B68F1798(v50);
  sub_1B62AC710(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v53 = v49 + v52[9];
  *(void *)uint64_t v53 = v51;
  *(unsigned char *)(v53 + 8) = 0;
  *(unsigned char *)(v49 + v52[10]) = 1;
  *(void *)(v49 + v52[11]) = 0;
  uint64_t v54 = v49 + v52[12];
  strcpy((char *)v54, "<precompiled>");
  *(_WORD *)(v54 + 14) = -4864;
  uint64_t v55 = MEMORY[0x1E4FBC860];
  *(void *)(v49 + v52[13]) = MEMORY[0x1E4FBC860];
  uint64_t v56 = *v48;
  uint64_t v120 = v55;
  uint64_t v119 = MEMORY[0x1E4FBC870];
  if (v101) {
    goto LABEL_15;
  }
  if (v98 >= 1029)
  {
    if ((unint64_t)v98 > 0x408)
    {
LABEL_15:
      if (*(unsigned char *)(v112 + 24) == 1) {
        char v57 = &unk_1F0FA1370;
      }
      else {
        char v57 = &unk_1F0FA13A0;
      }
      goto LABEL_22;
    }
    char v57 = &unk_1F0FA1340;
  }
  else
  {
    char v57 = &unk_1F0FA13D0;
  }
LABEL_22:
  uint64_t v58 = v57[2];
  uint64_t v109 = v33;
  if (!v58)
  {
    uint64_t v79 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v108 = 0;
    uint64_t v80 = MEMORY[0x1E4FBC860];
    long long v62 = (char *)MEMORY[0x1E4FBC860];
LABEL_45:
    uint64_t v112 = a14;
    uint64_t v113 = a15;
    uint64_t v81 = a4;
    sub_1B69596A8(a4, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v100, a4, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v83 = v82;
    uint64_t v84 = (void *)(v81 + v82[15]);
    *uint64_t v84 = v79;
    v84[1] = 0;
    *(void *)(v81 + v82[9]) = v108;
    *(void *)(v81 + v82[10]) = v62;
    *(void *)(v81 + v82[11]) = v80;
    *(void *)(v81 + v82[12]) = 0;
    *(unsigned char *)(v81 + v82[13]) = 0;
    uint64_t v85 = v81 + v82[14];
    *(void *)uint64_t v85 = v98;
    *(unsigned char *)(v85 + 8) = v101 & 1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_1B62DE2C8(v97);
    swift_release();
    uint64_t v116 = v83;
    uint64_t v117 = &off_1F0F61BF0;
    long long v87 = sub_1B62C12C4(&v114);
    sub_1B6959704(v81, (uint64_t)v87, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v118 = 0;
    sub_1B6CE1380((uint64_t)&v114, v96, v86);
    sub_1B6817A80(v119);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B695BB44((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v93 = a4;
  *(void *)&long long v111 = a13;
  unint64_t v105 = a9;
  unint64_t v106 = a10;
  uint64_t v104 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56);
  uint64_t v102 = a12;
  unint64_t v103 = v39 | (v40 << 32);
  uint64_t v94 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v60 = 0;
  uint64_t v95 = v57;
  long long v61 = v57 + 5;
  long long v62 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v113 = v62;
    uint64_t v63 = a11;
    uint64_t v64 = *(v61 - 1);
    unint64_t v65 = *v61;
    uint64_t v66 = v107;
    sub_1B695BADC((uint64_t)v33, v107, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*v104)(v66, 0, 1, v110);
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1B67AFBF8(v64, v65, v105, v106, v103, 0x6870617267uLL, 0xE500000000000000, v66);
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v66);
    swift_bridgeObjectRetain();
    sub_1B638E648(&v114, v67, v69);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v112 + 24) != 1) {
      break;
    }
    uint64_t v108 = v60;
    if (!(void)v111
      || (uint64_t v70 = *(void **)(v111 + 72)) == 0
      || (a11 = v63,
          swift_unknownObjectRetain(),
          unint64_t v71 = (void *)sub_1B6E31768(),
          id v72 = objc_msgSend(v70, sel_newFunctionWithName_, v71),
          swift_unknownObjectRelease(),
          v71,
          !v72))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((void)v111)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v114 = 0;
        unint64_t v115 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v114 = 0xD000000000000028;
        unint64_t v115 = 0x80000001B6F3E8A0;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v114 = 0;
        unint64_t v115 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      uint64_t v88 = v114;
      uint64_t v89 = v115;
      int v90 = sub_1B6E32148();
      if (qword_1EB9854F8 == -1) {
        goto LABEL_56;
      }
LABEL_58:
      swift_once();
      goto LABEL_56;
    }
    swift_bridgeObjectRelease();
    uint64_t v73 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v73);
    long long v62 = v113;
    if (*(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v60 = swift_retain();
    uint64_t v33 = v109;
LABEL_25:
    v61 += 2;
    if (!--v58)
    {
      uint64_t v80 = v120;
      uint64_t v108 = v60;
      uint64_t v79 = v94;
      a4 = v93;
      goto LABEL_45;
    }
  }
  if (!*(void *)(v63 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  a11 = v63;
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_1B62B2CE0(v67, v69);
  long long v62 = v113;
  if (v75)
  {
    uint64_t v76 = *(void *)(*(void *)(a11 + 56) + 8 * v74);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v62 = sub_1B68C4A70(0, *((void *)v62 + 2) + 1, 1, v62);
    }
    uint64_t v33 = v109;
    unint64_t v78 = *((void *)v62 + 2);
    unint64_t v77 = *((void *)v62 + 3);
    if (v78 >= v77 >> 1) {
      long long v62 = sub_1B68C4A70(v77 > 1, v78 + 1, 1, v62);
    }
    *((void *)v62 + 2) = v78 + 1;
    *(void *)&v62[8 * v78 + 32] = v76;
    swift_release();
    uint64_t v60 = swift_retain();
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_53:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v114 = 0;
  unint64_t v115 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v114 = 0xD000000000000022;
  unint64_t v115 = 0x80000001B6F3E800;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v88 = v114;
  uint64_t v89 = v115;
  int v90 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    goto LABEL_58;
  }
LABEL_56:
  uint64_t v114 = 0;
  swift_retain();
  sub_1B6B33E34(v90, &v114, v88, v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1B695BB44((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B693B954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  int v100 = a8;
  uint64_t v97 = a7;
  uint64_t v111 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v106 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  char v26 = (char *)&v91 - v25;
  uint64_t v109 = type metadata accessor for ScriptIndex();
  uint64_t v112 = *(char **)(v109 - 8);
  MEMORY[0x1F4188790](v109, v27);
  uint64_t v29 = (uint64_t *)((char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (uint64_t *)((char *)&v91 - v32);
  uint64_t v99 = a5;
  sub_1B69596A8(a5, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v34 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v35 = *(void *)(a6 + 16);
  uint64_t v98 = a1;
  if (v35 && (uint64_t v36 = sub_1B62BE38C(v34), (v37 & 1) != 0))
  {
    uint64_t v38 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    unint64_t v40 = v38[1];
  }
  else
  {
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v40 = HIDWORD(v39);
  }
  uint64_t v95 = type metadata accessor for SimpleScript(0);
  sub_1B6959AAC(v111 + *(int *)(v95 + 36), (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v112 + 6))(v26, 1, v109);
  uint64_t v96 = a2;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(a2);
    swift_release();
    *uint64_t v33 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    sub_1B695B370((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v33, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v43 = *v29;
    uint64_t v44 = *(void *)(a6 + 16);
    long long v110 = v43;
    if (v44)
    {
      uint64_t v45 = sub_1B62BE38C(v43);
      if (v47)
      {
        *(void *)&long long v46 = *(void *)(*(void *)(a6 + 56) + 8 * v45);
        long long v110 = v46;
      }
    }
    sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v33 = v110;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v48 = (uint64_t *)v111;
  uint64_t v49 = v99;
  sub_1B695BADC(v111, v99, type metadata accessor for SimpleScript);
  uint64_t v50 = sub_1B68F3564();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v52 = v49 + v51[9];
  *(void *)uint64_t v52 = v50;
  *(unsigned char *)(v52 + 8) = 0;
  *(unsigned char *)(v49 + v51[10]) = 1;
  *(void *)(v49 + v51[11]) = 0;
  uint64_t v53 = v49 + v51[12];
  strcpy((char *)v53, "<precompiled>");
  *(_WORD *)(v53 + 14) = -4864;
  uint64_t v54 = MEMORY[0x1E4FBC860];
  *(void *)(v49 + v51[13]) = MEMORY[0x1E4FBC860];
  uint64_t v55 = *v48;
  uint64_t v119 = v54;
  uint64_t v118 = MEMORY[0x1E4FBC870];
  if (v100) {
    goto LABEL_15;
  }
  if (v97 >= 1029)
  {
    if ((unint64_t)v97 > 0x408)
    {
LABEL_15:
      if (*(unsigned char *)(v111 + 32) == 1) {
        uint64_t v56 = &unk_1F0FA1430;
      }
      else {
        uint64_t v56 = &unk_1F0FA1460;
      }
      goto LABEL_22;
    }
    uint64_t v56 = &unk_1F0FA1400;
  }
  else
  {
    uint64_t v56 = &unk_1F0FA1490;
  }
LABEL_22:
  uint64_t v57 = v56[2];
  uint64_t v108 = v33;
  if (!v57)
  {
    uint64_t v78 = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v107 = 0;
    uint64_t v79 = MEMORY[0x1E4FBC860];
    long long v61 = (char *)MEMORY[0x1E4FBC860];
LABEL_45:
    uint64_t v111 = a14;
    uint64_t v112 = a15;
    uint64_t v80 = a4;
    sub_1B69596A8(a4, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v99, a4, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v82 = v81;
    char v83 = (void *)(v80 + v81[15]);
    void *v83 = v78;
    v83[1] = 0;
    *(void *)(v80 + v81[9]) = v107;
    *(void *)(v80 + v81[10]) = v61;
    *(void *)(v80 + v81[11]) = v79;
    *(void *)(v80 + v81[12]) = 0;
    *(unsigned char *)(v80 + v81[13]) = 0;
    uint64_t v84 = v80 + v81[14];
    *(void *)uint64_t v84 = v97;
    *(unsigned char *)(v84 + 8) = v100 & 1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v85 = sub_1B62DE2C8(v96);
    swift_release();
    unint64_t v115 = v82;
    uint64_t v116 = &off_1F0F61BF0;
    uint64_t v86 = sub_1B62C12C4(&v113);
    sub_1B6959704(v80, (uint64_t)v86, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v117 = 0;
    sub_1B6CE1380((uint64_t)&v113, v95, v85);
    sub_1B6817A80(v118);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B695BB44((uint64_t)v108, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v92 = a4;
  *(void *)&long long v110 = a13;
  unint64_t v104 = a9;
  unint64_t v105 = a10;
  unint64_t v103 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56);
  uint64_t v101 = a12;
  unint64_t v102 = v39 | (v40 << 32);
  uint64_t v93 = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = 0;
  uint64_t v94 = v56;
  uint64_t v60 = v56 + 5;
  long long v61 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v112 = v61;
    uint64_t v62 = a11;
    uint64_t v63 = *(v60 - 1);
    unint64_t v64 = *v60;
    uint64_t v65 = v106;
    sub_1B695BADC((uint64_t)v33, v106, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*v103)(v65, 0, 1, v109);
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1B67AFBF8(v63, v64, v104, v105, v102, 0x656C706D6973uLL, 0xE600000000000000, v65);
    uint64_t v68 = v67;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v65);
    swift_bridgeObjectRetain();
    sub_1B638E648(&v113, v66, v68);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v111 + 32) != 1) {
      break;
    }
    uint64_t v107 = v59;
    if (!(void)v110
      || (uint64_t v69 = *(void **)(v110 + 72)) == 0
      || (a11 = v62,
          swift_unknownObjectRetain(),
          uint64_t v70 = (void *)sub_1B6E31768(),
          id v71 = objc_msgSend(v69, sel_newFunctionWithName_, v70),
          swift_unknownObjectRelease(),
          v70,
          !v71))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((void)v110)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v113 = 0;
        unint64_t v114 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v113 = 0xD000000000000028;
        unint64_t v114 = 0x80000001B6F3E8A0;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v113 = 0;
        unint64_t v114 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      uint64_t v87 = v113;
      uint64_t v88 = v114;
      int v89 = sub_1B6E32148();
      if (qword_1EB9854F8 == -1) {
        goto LABEL_56;
      }
LABEL_58:
      swift_once();
      goto LABEL_56;
    }
    swift_bridgeObjectRelease();
    uint64_t v72 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v72);
    long long v61 = v112;
    if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v59 = swift_retain();
    uint64_t v33 = v108;
LABEL_25:
    v60 += 2;
    if (!--v57)
    {
      uint64_t v79 = v119;
      uint64_t v107 = v59;
      uint64_t v78 = v93;
      a4 = v92;
      goto LABEL_45;
    }
  }
  if (!*(void *)(v62 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  a11 = v62;
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_1B62B2CE0(v66, v68);
  long long v61 = v112;
  if (v74)
  {
    uint64_t v75 = *(void *)(*(void *)(a11 + 56) + 8 * v73);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v61 = sub_1B68C4A70(0, *((void *)v61 + 2) + 1, 1, v61);
    }
    uint64_t v33 = v108;
    unint64_t v77 = *((void *)v61 + 2);
    unint64_t v76 = *((void *)v61 + 3);
    if (v77 >= v76 >> 1) {
      long long v61 = sub_1B68C4A70(v76 > 1, v77 + 1, 1, v61);
    }
    *((void *)v61 + 2) = v77 + 1;
    *(void *)&v61[8 * v77 + 32] = v75;
    swift_release();
    uint64_t v59 = swift_retain();
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_53:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v113 = 0;
  unint64_t v114 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v113 = 0xD000000000000022;
  unint64_t v114 = 0x80000001B6F3E800;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v87 = v113;
  uint64_t v88 = v114;
  int v89 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    goto LABEL_58;
  }
LABEL_56:
  uint64_t v113 = 0;
  swift_retain();
  sub_1B6B33E34(v89, &v113, v87, v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1B695BB44((uint64_t)v108, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B693C740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v89 = a6;
  unint64_t v90 = a7;
  uint64_t v95 = a3;
  uint64_t v98 = a2;
  sub_1B62E17B4();
  uint64_t v88 = v9;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v87 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1B6E31098();
  uint64_t v81 = *(void (***)(uint64_t, char *, uint64_t))(v86 - 8);
  MEMORY[0x1F4188790](v86, v12);
  uint64_t v85 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v93 = v14;
  MEMORY[0x1F4188790](v14, v15);
  *(void *)&long long v94 = (char *)&v76 - v16;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8, v18);
  uint64_t v84 = (uint64_t)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)&v76 - v22;
  uint64_t v92 = type metadata accessor for ScriptIndex();
  uint64_t v24 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92, v25);
  uint64_t v27 = (uint64_t *)((char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v28, v29);
  uint64_t v31 = (uint64_t *)((char *)&v76 - v30);
  uint64_t v78 = a1;
  uint64_t v32 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v33 = sub_1B62DE2C8(v32);
  swift_release();
  if (*(void *)(a5 + 16) && (uint64_t v34 = sub_1B62BE38C(v33), (v35 & 1) != 0))
  {
    uint64_t v36 = a5;
    char v37 = (unsigned int *)(*(void *)(a5 + 56) + 8 * v34);
    unint64_t v39 = *v37;
    unint64_t v38 = v37[1];
  }
  else
  {
    uint64_t v36 = a5;
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(v32);
    swift_release();
    unint64_t v38 = HIDWORD(v39);
  }
  unint64_t v82 = v38;
  uint64_t v40 = type metadata accessor for MetalFunctionScript(0);
  sub_1B6959AAC(v98 + *(int *)(v40 + 24), (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v92);
  uint64_t v83 = v39;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(v32);
    swift_release();
    *uint64_t v31 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v43 = v94;
  sub_1B695BADC((uint64_t)v31, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v91 = v31;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B695BB44((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    uint64_t v46 = v95;
    uint64_t v47 = v93;
  }
  else
  {
    *(void *)&long long v45 = *v27;
    uint64_t v48 = *(void *)(v36 + 16);
    long long v94 = v45;
    if (v48)
    {
      uint64_t v49 = v36;
      uint64_t v50 = sub_1B62BE38C(v45);
      uint64_t v47 = v93;
      if (v52)
      {
        *(void *)&long long v51 = *(void *)(*(void *)(v49 + 56) + 8 * v50);
        long long v94 = v51;
      }
    }
    else
    {
      uint64_t v47 = v93;
    }
    sub_1B695BB44((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v31 = v94;
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v95;
  }
  uint64_t v53 = *(void *)(v46 + *(int *)(v47 + 40));
  sub_1B6959704(v46, v43, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v53)
  {
    sub_1B69596A8(v43, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v54 = (uint64_t)v91;
  }
  else
  {
    uint64_t v55 = *(void *)(v43 + *(int *)(v47 + 44));
    swift_bridgeObjectRetain();
    sub_1B69596A8(v43, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    if (v55)
    {
      swift_bridgeObjectRelease();
      uint64_t v54 = (uint64_t)v91;
    }
    else
    {
      uint64_t v77 = sub_1B6906ED8();
      uint64_t v56 = *(void *)(v77 + 16);
      uint64_t v54 = (uint64_t)v91;
      if (v56)
      {
        uint64_t v57 = v83 | (v82 << 32);
        unint64_t v82 = v24 + 56;
        uint64_t v83 = v57;
        v81 += 4;
        uint64_t v58 = (unint64_t *)(v77 + 40);
        unint64_t v80 = 0x80000001B6F3E8D0;
        long long v79 = xmmword_1B6E77050;
        uint64_t v59 = (uint64_t)v87;
        do
        {
          uint64_t v98 = v56;
          uint64_t v60 = *(v58 - 1);
          unint64_t v61 = *v58;
          uint64_t v62 = v54;
          uint64_t v63 = v84;
          sub_1B695BADC(v62, v84, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v82)(v63, 0, 1, v92);
          swift_bridgeObjectRetain();
          sub_1B67AFBF8(v60, v61, v89, v90, v83, 0x6C656E72656BuLL, 0xE600000000000000, v63);
          swift_bridgeObjectRelease();
          sub_1B67BAA04(v63);
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          unint64_t v96 = 0;
          unint64_t v97 = 0xE000000000000000;
          uint64_t v95 = qword_1EB997FD0;
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          unint64_t v96 = 0xD000000000000022;
          unint64_t v97 = v80;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          unint64_t v65 = v96;
          unint64_t v64 = v97;
          char v66 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v67 = qword_1EB997FF0;
          uint64_t v68 = qword_1EB985528;
          swift_retain();
          if (v68 != -1) {
            swift_once();
          }
          *(void *)&long long v94 = v58 + 2;
          sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
          uint64_t v69 = swift_allocObject();
          *(_OWORD *)(v69 + 16) = v79;
          *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v69 + 64) = sub_1B678615C();
          *(void *)(v69 + 32) = v65;
          *(void *)(v69 + 40) = v64;
          swift_bridgeObjectRetain();
          char v70 = v66;
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v93 = v67;
          id v71 = v85;
          sub_1B6E31088();
          uint64_t v72 = v88[12];
          uint64_t v73 = v88[16];
          char v74 = (unint64_t *)(v59 + v88[20]);
          (*v81)(v59, v71, v86);
          *(unsigned char *)(v59 + v72) = v70;
          uint64_t v58 = (unint64_t *)v94;
          *(void *)(v59 + v73) = 0;
          *char v74 = v65;
          v74[1] = v64;
          swift_bridgeObjectRetain();
          sub_1B6E31368();
          swift_release();
          sub_1B695BB44(v59, (uint64_t (*)(void))sub_1B62E17B4);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v56 = v98 - 1;
          uint64_t v54 = (uint64_t)v91;
        }
        while (v98 != 1);
      }
      swift_bridgeObjectRelease();
      sub_1B6CF0924(0);
      sub_1B6CF0960(0);
    }
  }
  return sub_1B695BB44(v54, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B693D140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v92 = a8;
  uint64_t v91 = a7;
  uint64_t v94 = a4;
  uint64_t v105 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8, v20);
  uint64_t v22 = (char *)v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)v89 - v25;
  uint64_t v104 = type metadata accessor for ScriptIndex();
  uint64_t v27 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104, v28);
  uint64_t v30 = (void *)((char *)v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v99 = (void *)((char *)v89 - v33);
  uint64_t v96 = a5;
  sub_1B69596A8(a5, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v34 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v35 = *(void *)(a6 + 16);
  uint64_t v95 = a2;
  if (v35 && (uint64_t v36 = sub_1B62BE38C(v34), (v37 & 1) != 0))
  {
    unint64_t v38 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    unint64_t v40 = v38[1];
  }
  else
  {
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v40 = HIDWORD(v39);
  }
  uint64_t v90 = type metadata accessor for MetalFunctionScript(0);
  sub_1B6959AAC(v105 + *(int *)(v90 + 24), (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v104);
  uint64_t v93 = a1;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(v95);
    swift_release();
    uint64_t v43 = v99;
    *uint64_t v99 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    uint64_t v43 = v99;
    sub_1B695B370((uint64_t)v26, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v43, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v44 = *v30;
    uint64_t v45 = *(void *)(a6 + 16);
    long long v107 = v44;
    if (v45)
    {
      uint64_t v46 = sub_1B62BE38C(v44);
      if (v48)
      {
        *(void *)&long long v47 = *(void *)(*(void *)(a6 + 56) + 8 * v46);
        long long v107 = v47;
      }
    }
    uint64_t v49 = v99;
    sub_1B695BB44((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    uint64_t *v49 = v107;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v50 = v96;
  sub_1B695BADC(v105, v96, type metadata accessor for MetalFunctionScript);
  uint64_t v51 = sub_1B68F4AD0();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v53 = v50 + v52[9];
  *(void *)uint64_t v53 = v51;
  *(unsigned char *)(v53 + 8) = 0;
  *(unsigned char *)(v50 + v52[10]) = 1;
  *(void *)(v50 + v52[11]) = 0;
  uint64_t v54 = v50 + v52[12];
  strcpy((char *)v54, "<precompiled>");
  *(_WORD *)(v54 + 14) = -4864;
  uint64_t v55 = (char *)MEMORY[0x1E4FBC860];
  *(void *)(v50 + v52[13]) = MEMORY[0x1E4FBC860];
  unint64_t v114 = v55;
  uint64_t v113 = MEMORY[0x1E4FBC870];
  uint64_t v56 = sub_1B6906ED8();
  uint64_t v57 = *(void *)(v56 + 16);
  if (!v57)
  {
    uint64_t v58 = 0;
    unint64_t v61 = v55;
LABEL_37:
    uint64_t v106 = a14;
    *(void *)&long long v107 = a15;
    uint64_t v79 = v94;
    sub_1B69596A8(v94, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v96, v79, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v81 = v80;
    *(unsigned char *)(v79 + v80[15]) = 0;
    *(void *)(v79 + v80[9]) = v58;
    *(void *)(v79 + v80[10]) = v61;
    *(void *)(v79 + v80[11]) = v55;
    *(void *)(v79 + v80[12]) = 0;
    *(unsigned char *)(v79 + v80[13]) = 0;
    uint64_t v82 = v79 + v80[14];
    *(void *)uint64_t v82 = v91;
    *(unsigned char *)(v82 + 8) = v92 & 1;
    swift_retain();
    swift_retain();
    uint64_t v83 = sub_1B62DE2C8(v95);
    swift_release();
    long long v110 = v81;
    uint64_t v111 = &off_1F0F61BF0;
    uint64_t v84 = sub_1B62C12C4((uint64_t *)&v108);
    sub_1B6959704(v79, (uint64_t)v84, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v112 = 0;
    sub_1B6CE1380((uint64_t)&v108, v90, v83);
    sub_1B6817A80(v113);
    swift_release();
    uint64_t v62 = v99;
    return sub_1B695BB44((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v58 = 0;
  uint64_t v106 = a13;
  uint64_t v59 = a11;
  uint64_t v97 = a12;
  unint64_t v102 = a10;
  unint64_t v103 = (void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
  unint64_t v100 = v39 | (v40 << 32);
  unint64_t v101 = a9;
  v89[1] = v56;
  uint64_t v60 = (unint64_t *)(v56 + 40);
  unint64_t v61 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v62 = v99;
  uint64_t v98 = a11;
  while (1)
  {
    *(void *)&long long v107 = v58;
    uint64_t v63 = *(v60 - 1);
    unint64_t v64 = *v60;
    sub_1B695BADC((uint64_t)v62, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*v103)(v22, 0, 1, v104);
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1B67AFBF8(v63, v64, v101, v102, v100, 0x6C656E72656BuLL, 0xE600000000000000, (uint64_t)v22);
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v22);
    swift_bridgeObjectRetain();
    sub_1B638E648((uint64_t *)&v108, v65, v67);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v105 + 16) == 1) {
      break;
    }
    if (!*(void *)(v59 + 16)) {
      goto LABEL_43;
    }
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1B62B2CE0(v65, v67);
    if ((v73 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v108 = 0;
      unint64_t v109 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v77 = 0xD000000000000022;
      uint64_t v78 = "couldn't find function for script ";
LABEL_46:
      unint64_t v108 = v77;
      unint64_t v109 = (unint64_t)(v78 - 32) | 0x8000000000000000;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    uint64_t v74 = *(void *)(*(void *)(v59 + 56) + 8 * v72);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v61 = sub_1B68C4A70(0, *((void *)v61 + 2) + 1, 1, v61);
    }
    unint64_t v76 = *((void *)v61 + 2);
    unint64_t v75 = *((void *)v61 + 3);
    if (v76 >= v75 >> 1) {
      unint64_t v61 = sub_1B68C4A70(v75 > 1, v76 + 1, 1, v61);
    }
    *((void *)v61 + 2) = v76 + 1;
    *(void *)&v61[8 * v76 + 32] = v74;
    swift_release();
    uint64_t v58 = v97;
LABEL_17:
    swift_retain();
    v60 += 2;
    --v57;
    uint64_t v59 = v98;
    if (!v57)
    {
      uint64_t v55 = v114;
      goto LABEL_37;
    }
  }
  if (v106)
  {
    uint64_t v68 = *(void **)(v106 + 72);
    if (v68)
    {
      swift_unknownObjectRetain();
      uint64_t v69 = (void *)sub_1B6E31768();
      id v70 = objc_msgSend(v68, sel_newFunctionWithName_, v69);
      swift_unknownObjectRelease();

      uint64_t v62 = v99;
      if (v70)
      {
        swift_bridgeObjectRelease();
        uint64_t v71 = swift_unknownObjectRetain();
        MEMORY[0x1BA9B3870](v71);
        if (*(void *)(((unint64_t)v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v114 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          sub_1B6E31C78();
        sub_1B6E31CC8();
        sub_1B6E31C48();
        swift_unknownObjectRelease();
        swift_release();
        uint64_t v58 = v106;
        goto LABEL_17;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v106)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    unint64_t v108 = 0;
    unint64_t v109 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v77 = 0xD000000000000028;
    uint64_t v78 = "couldn't find metal function for script ";
    goto LABEL_46;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  unint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
LABEL_47:
  uint64_t v86 = v108;
  uint64_t v85 = v109;
  int v87 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  unint64_t v108 = 0;
  swift_retain();
  sub_1B6B33E34(v87, (uint64_t *)&v108, v86, v85);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1B695BB44((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B693DD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v89 = a6;
  unint64_t v90 = a7;
  uint64_t v95 = a3;
  uint64_t v98 = a2;
  sub_1B62E17B4();
  uint64_t v88 = v9;
  MEMORY[0x1F4188790](v9, v10);
  int v87 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1B6E31098();
  uint64_t v81 = *(void (***)(uint64_t, char *, uint64_t))(v86 - 8);
  MEMORY[0x1F4188790](v86, v12);
  uint64_t v85 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v93 = v14;
  MEMORY[0x1F4188790](v14, v15);
  *(void *)&long long v94 = (char *)&v76 - v16;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8, v18);
  uint64_t v84 = (uint64_t)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)&v76 - v22;
  uint64_t v92 = type metadata accessor for ScriptIndex();
  uint64_t v24 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92, v25);
  uint64_t v27 = (uint64_t *)((char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v28, v29);
  uint64_t v31 = (uint64_t *)((char *)&v76 - v30);
  uint64_t v78 = a1;
  uint64_t v32 = *(void *)(a1 + 32);
  swift_retain();
  uint64_t v33 = sub_1B62DE2C8(v32);
  swift_release();
  if (*(void *)(a5 + 16) && (uint64_t v34 = sub_1B62BE38C(v33), (v35 & 1) != 0))
  {
    uint64_t v36 = a5;
    char v37 = (unsigned int *)(*(void *)(a5 + 56) + 8 * v34);
    unint64_t v39 = *v37;
    unint64_t v38 = v37[1];
  }
  else
  {
    uint64_t v36 = a5;
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(v32);
    swift_release();
    unint64_t v38 = HIDWORD(v39);
  }
  unint64_t v82 = v38;
  uint64_t v40 = type metadata accessor for ShaderScript(0);
  sub_1B6959AAC(v98 + *(int *)(v40 + 24), (uint64_t)v23, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v92);
  uint64_t v83 = v39;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(v32);
    swift_release();
    *uint64_t v31 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v23);
  }
  else
  {
    sub_1B695B370((uint64_t)v23, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v43 = v94;
  sub_1B695BADC((uint64_t)v31, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v91 = v31;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B695BB44((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    uint64_t v46 = v95;
    uint64_t v47 = v93;
  }
  else
  {
    *(void *)&long long v45 = *v27;
    uint64_t v48 = *(void *)(v36 + 16);
    long long v94 = v45;
    if (v48)
    {
      uint64_t v49 = v36;
      uint64_t v50 = sub_1B62BE38C(v45);
      uint64_t v47 = v93;
      if (v52)
      {
        *(void *)&long long v51 = *(void *)(*(void *)(v49 + 56) + 8 * v50);
        long long v94 = v51;
      }
    }
    else
    {
      uint64_t v47 = v93;
    }
    sub_1B695BB44((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v31 = v94;
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v95;
  }
  uint64_t v53 = *(void *)(v46 + *(int *)(v47 + 40));
  sub_1B6959704(v46, v43, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v53)
  {
    sub_1B69596A8(v43, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v54 = (uint64_t)v91;
  }
  else
  {
    uint64_t v55 = *(void *)(v43 + *(int *)(v47 + 44));
    swift_bridgeObjectRetain();
    sub_1B69596A8(v43, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    if (v55)
    {
      swift_bridgeObjectRelease();
      uint64_t v54 = (uint64_t)v91;
    }
    else
    {
      unint64_t v77 = sub_1B6906FBC();
      uint64_t v56 = v77[2];
      uint64_t v54 = (uint64_t)v91;
      if (v56)
      {
        uint64_t v57 = v83 | (v82 << 32);
        unint64_t v82 = v24 + 56;
        uint64_t v83 = v57;
        v81 += 4;
        uint64_t v58 = v77 + 5;
        unint64_t v80 = 0x80000001B6F3E8D0;
        long long v79 = xmmword_1B6E77050;
        uint64_t v59 = (uint64_t)v87;
        do
        {
          uint64_t v98 = v56;
          uint64_t v60 = *(v58 - 1);
          unint64_t v61 = *v58;
          uint64_t v62 = v54;
          uint64_t v63 = v84;
          sub_1B695BADC(v62, v84, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v82)(v63, 0, 1, v92);
          swift_bridgeObjectRetain();
          sub_1B67AFBF8(v60, v61, v89, v90, v83, 0x726564616873uLL, 0xE600000000000000, v63);
          swift_bridgeObjectRelease();
          sub_1B67BAA04(v63);
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          unint64_t v96 = 0;
          unint64_t v97 = 0xE000000000000000;
          uint64_t v95 = qword_1EB997FD0;
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          unint64_t v96 = 0xD000000000000022;
          unint64_t v97 = v80;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          unint64_t v65 = v96;
          unint64_t v64 = v97;
          char v66 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v67 = qword_1EB997FF0;
          uint64_t v68 = qword_1EB985528;
          swift_retain();
          if (v68 != -1) {
            swift_once();
          }
          *(void *)&long long v94 = v58 + 2;
          sub_1B6959470(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
          uint64_t v69 = swift_allocObject();
          *(_OWORD *)(v69 + 16) = v79;
          *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v69 + 64) = sub_1B678615C();
          *(void *)(v69 + 32) = v65;
          *(void *)(v69 + 40) = v64;
          swift_bridgeObjectRetain();
          char v70 = v66;
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v93 = v67;
          uint64_t v71 = v85;
          sub_1B6E31088();
          uint64_t v72 = v88[12];
          uint64_t v73 = v88[16];
          uint64_t v74 = (unint64_t *)(v59 + v88[20]);
          (*v81)(v59, v71, v86);
          *(unsigned char *)(v59 + v72) = v70;
          uint64_t v58 = (unint64_t *)v94;
          *(void *)(v59 + v73) = 0;
          *uint64_t v74 = v65;
          v74[1] = v64;
          swift_bridgeObjectRetain();
          sub_1B6E31368();
          swift_release();
          sub_1B695BB44(v59, (uint64_t (*)(void))sub_1B62E17B4);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v56 = v98 - 1;
          uint64_t v54 = (uint64_t)v91;
        }
        while (v98 != 1);
      }
      swift_bridgeObjectRelease();
      sub_1B6CF08AC(0);
      sub_1B6CF08E8(0);
    }
  }
  return sub_1B695BB44(v54, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B693E77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, char *a12, char *a13, uint64_t a14, uint64_t a15)
{
  int v102 = a8;
  uint64_t v101 = a7;
  uint64_t v104 = a4;
  uint64_t v117 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8, v20);
  uint64_t v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v96 - v25;
  uint64_t v27 = type metadata accessor for ScriptIndex();
  unint64_t v115 = *(char **)(v27 - 8);
  uint64_t v116 = v27;
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v30 = (void **)((char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (uint64_t *)((char *)&v96 - v33);
  uint64_t v108 = a5;
  sub_1B69596A8(a5, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v35 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v36 = *(void *)(a6 + 16);
  uint64_t v107 = a2;
  if (v36 && (uint64_t v37 = sub_1B62BE38C(v35), (v38 & 1) != 0))
  {
    unint64_t v39 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v37);
    LODWORD(v40) = *v39;
    unint64_t v41 = v39[1];
  }
  else
  {
    swift_retain();
    unint64_t v40 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v41 = HIDWORD(v40);
  }
  uint64_t v100 = type metadata accessor for ShaderScript(0);
  sub_1B6959AAC(v117 + *(int *)(v100 + 24), (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v115 + 6))(v26, 1, v116) == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(v107);
    swift_release();
    *uint64_t v34 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    sub_1B695B370((uint64_t)v26, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v113 = v34;
  uint64_t v103 = a1;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B695BB44((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    uint64_t v45 = v108;
  }
  else
  {
    *(void *)&long long v44 = *v30;
    uint64_t v46 = *(void *)(a6 + 16);
    long long v112 = v44;
    if (v46)
    {
      uint64_t v47 = sub_1B62BE38C(v44);
      uint64_t v45 = v108;
      if (v49)
      {
        *(void *)&long long v48 = *(void *)(*(void *)(a6 + 56) + 8 * v47);
        long long v112 = v48;
      }
    }
    else
    {
      uint64_t v45 = v108;
    }
    sub_1B695BB44((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v34 = v112;
    swift_storeEnumTagMultiPayload();
  }
  sub_1B695BADC(v117, v45, type metadata accessor for ShaderScript);
  uint64_t v50 = sub_1B68F5A30();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v52 = v45 + v51[9];
  *(void *)uint64_t v52 = v50;
  *(unsigned char *)(v52 + 8) = 0;
  *(unsigned char *)(v45 + v51[10]) = 1;
  *(void *)(v45 + v51[11]) = 0;
  uint64_t v53 = v45 + v51[12];
  strcpy((char *)v53, "<precompiled>");
  *(_WORD *)(v53 + 14) = -4864;
  uint64_t v54 = (char *)MEMORY[0x1E4FBC860];
  *(void *)(v45 + v51[13]) = MEMORY[0x1E4FBC860];
  uint64_t v55 = v114;
  sub_1B68F5BA0(2, &v119);
  if (v55)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    unint64_t v119 = 0;
    unint64_t v120 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t v125 = v55;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v56 = v119;
    uint64_t v57 = v120;
    int v58 = sub_1B6E32148();
    uint64_t v59 = (uint64_t)v113;
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    unint64_t v119 = 0;
    swift_retain();
    sub_1B6B33E34(v58, (uint64_t *)&v119, v56, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B695BB44(v59, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v99 = 0;
  uint64_t v98 = v123;
  uint64_t v97 = v124;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v125 = v54;
  uint64_t v118 = MEMORY[0x1E4FBC870];
  unint64_t v61 = sub_1B6906FBC();
  uint64_t v62 = v61[2];
  unint64_t v96 = v61;
  uint64_t v63 = 0;
  if (!v62)
  {
    unint64_t v65 = v54;
LABEL_44:
    uint64_t v117 = a15;
    unint64_t v115 = v63;
    uint64_t v116 = a14;
    uint64_t v84 = v104;
    sub_1B69596A8(v104, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v45, v84, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v86 = v85;
    int v87 = (void *)(v84 + v85[15]);
    uint64_t v88 = v97;
    *int v87 = v98;
    v87[1] = v88;
    *(void *)(v84 + v85[9]) = v63;
    *(void *)(v84 + v85[10]) = v65;
    *(void *)(v84 + v85[11]) = v54;
    *(void *)(v84 + v85[12]) = 0;
    *(unsigned char *)(v84 + v85[13]) = 0;
    uint64_t v89 = v84 + v85[14];
    *(void *)uint64_t v89 = v101;
    *(unsigned char *)(v89 + 8) = v102 & 1;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v90 = sub_1B62DE2C8(v107);
    swift_release();
    uint64_t v121 = v86;
    uint64_t v122 = &off_1F0F61BF0;
    uint64_t v91 = sub_1B62C12C4((uint64_t *)&v119);
    sub_1B6959704(v84, (uint64_t)v91, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v123) = 0;
    sub_1B6CE1380((uint64_t)&v119, v100, v90);
    sub_1B6817A80(v118);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v92 = (uint64_t)v113;
    return sub_1B695BB44(v92, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  unint64_t v114 = a13;
  uint64_t v105 = a12;
  uint64_t v106 = a11;
  unint64_t v111 = a10;
  *(void *)&long long v112 = v115 + 56;
  unint64_t v109 = v40 | (v41 << 32);
  unint64_t v110 = a9;
  unint64_t v64 = v61 + 5;
  unint64_t v65 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v66 = (uint64_t)v113;
  while (1)
  {
    unint64_t v115 = v63;
    uint64_t v67 = *(v64 - 1);
    unint64_t v68 = *v64;
    sub_1B695BADC(v66, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, void, uint64_t, uint64_t))v112)(v22, 0, 1, v116);
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1B67AFBF8(v67, v68, v110, v111, v109, 0x726564616873uLL, 0xE600000000000000, (uint64_t)v22);
    uint64_t v71 = v70;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v22);
    swift_bridgeObjectRetain();
    sub_1B638E648((uint64_t *)&v119, v69, v71);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v117 + 16) == 1) {
      break;
    }
    uint64_t v76 = v106;
    if (!*(void *)(v106 + 16)) {
      goto LABEL_50;
    }
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_1B62B2CE0(v69, v71);
    if ((v78 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v119 = 0;
      unint64_t v120 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v82 = 0xD000000000000022;
      uint64_t v83 = "couldn't find function for script ";
LABEL_53:
      unint64_t v119 = v82;
      unint64_t v120 = (unint64_t)(v83 - 32) | 0x8000000000000000;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      goto LABEL_54;
    }
    uint64_t v79 = *(void *)(*(void *)(v76 + 56) + 8 * v77);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v65 = sub_1B68C4A70(0, *((void *)v65 + 2) + 1, 1, v65);
    }
    unint64_t v81 = *((void *)v65 + 2);
    unint64_t v80 = *((void *)v65 + 3);
    if (v81 >= v80 >> 1) {
      unint64_t v65 = sub_1B68C4A70(v80 > 1, v81 + 1, 1, v65);
    }
    *((void *)v65 + 2) = v81 + 1;
    *(void *)&v65[8 * v81 + 32] = v79;
    swift_release();
    uint64_t v63 = v105;
LABEL_24:
    swift_retain();
    v64 += 2;
    if (!--v62)
    {
      uint64_t v54 = v125;
      uint64_t v45 = v108;
      goto LABEL_44;
    }
  }
  if (v114)
  {
    uint64_t v72 = (void *)*((void *)v114 + 9);
    if (v72)
    {
      swift_unknownObjectRetain();
      uint64_t v73 = (void *)sub_1B6E31768();
      id v74 = objc_msgSend(v72, sel_newFunctionWithName_, v73, v96);
      swift_unknownObjectRelease();

      uint64_t v66 = (uint64_t)v113;
      if (v74)
      {
        swift_bridgeObjectRelease();
        uint64_t v75 = swift_unknownObjectRetain();
        MEMORY[0x1BA9B3870](v75);
        if (*(void *)(((unint64_t)v125 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v125 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          sub_1B6E31C78();
        sub_1B6E31CC8();
        sub_1B6E31C48();
        swift_unknownObjectRelease();
        swift_release();
        uint64_t v63 = v114;
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v114)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    unint64_t v119 = 0;
    unint64_t v120 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v82 = 0xD000000000000028;
    uint64_t v83 = "couldn't find metal function for script ";
    goto LABEL_53;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  unint64_t v119 = 0;
  unint64_t v120 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
LABEL_54:
  uint64_t v94 = v119;
  uint64_t v93 = v120;
  int v95 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  unint64_t v119 = 0;
  swift_retain();
  sub_1B6B33E34(v95, (uint64_t *)&v119, v94, v93);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v92 = v66;
  return sub_1B695BB44(v92, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B693F5F8(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, unsigned char *a15)
{
  int v109 = a8;
  uint64_t v108 = a7;
  uint64_t v105 = a4;
  unint64_t v120 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8, v20);
  uint64_t v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v99 - v25;
  uint64_t v119 = type metadata accessor for ScriptIndex();
  uint64_t v115 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119, v27);
  uint64_t v29 = (uint64_t *)((char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (uint64_t *)((char *)&v99 - v32);
  uint64_t v112 = a5;
  sub_1B69596A8(a5, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v34 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v35 = *(void *)(a6 + 16);
  uint64_t v111 = a1;
  if (v35 && (uint64_t v36 = sub_1B62BE38C(v34), (v37 & 1) != 0))
  {
    char v38 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    unint64_t v40 = v38[1];
  }
  else
  {
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v40 = HIDWORD(v39);
  }
  uint64_t v103 = type metadata accessor for EmitterScript(0);
  sub_1B6959AAC((uint64_t)&v120[*(int *)(v103 + 32)], (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48))(v26, 1, v119);
  uint64_t v104 = a2;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(a2);
    swift_release();
    *uint64_t v33 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    sub_1B695B370((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v33, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v45 = v112;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B695BB44((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v44 = *v29;
    uint64_t v46 = *(void *)(a6 + 16);
    long long v117 = v44;
    if (v46)
    {
      uint64_t v47 = sub_1B62BE38C(v44);
      if (v49)
      {
        *(void *)&long long v48 = *(void *)(*(void *)(a6 + 56) + 8 * v47);
        long long v117 = v48;
      }
    }
    sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v33 = v117;
    swift_storeEnumTagMultiPayload();
  }
  sub_1B695BADC((uint64_t)v120, v45, type metadata accessor for EmitterScript);
  uint64_t v50 = sub_1B68F2458();
  sub_1B62AC710(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v52 = v45 + v51[9];
  *(void *)uint64_t v52 = v50;
  *(unsigned char *)(v52 + 8) = 0;
  *(unsigned char *)(v45 + v51[10]) = 1;
  *(void *)(v45 + v51[11]) = 0;
  uint64_t v53 = v45 + v51[12];
  strcpy((char *)v53, "<precompiled>");
  *(_WORD *)(v53 + 14) = -4864;
  unint64_t v54 = MEMORY[0x1E4FBC860];
  *(void *)(v45 + v51[13]) = MEMORY[0x1E4FBC860];
  uint64_t v55 = v118;
  sub_1B68F259C(2, &v122);
  if (v55)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v122 = 0;
    unint64_t v123 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    unint64_t v128 = (unint64_t)v55;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v56 = v122;
    uint64_t v57 = v123;
    int v58 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v122 = 0;
    swift_retain();
    sub_1B6B33E34(v58, &v122, v56, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v100 = v126;
  uint64_t v101 = v127;
  swift_bridgeObjectRelease();
  uint64_t v60 = v120;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v128 = v54;
  uint64_t v121 = MEMORY[0x1E4FBC870];
  if (v109) {
    goto LABEL_21;
  }
  if (v108 >= 1029)
  {
    if ((unint64_t)v108 > 0x408)
    {
LABEL_21:
      if (*v60 == 1) {
        unint64_t v61 = &unk_1F0FA14F0;
      }
      else {
        unint64_t v61 = &unk_1F0FA1520;
      }
      goto LABEL_28;
    }
    unint64_t v61 = &unk_1F0FA14C0;
  }
  else
  {
    unint64_t v61 = &unk_1F0FA1550;
  }
LABEL_28:
  uint64_t v102 = 0;
  uint64_t v62 = v61[2];
  unint64_t v110 = v33;
  if (!v62)
  {
    swift_bridgeObjectRetain();
    unint64_t v81 = 0;
    unint64_t v82 = MEMORY[0x1E4FBC860];
    unint64_t v65 = (char *)MEMORY[0x1E4FBC860];
LABEL_51:
    uint64_t v119 = a14;
    unint64_t v120 = a15;
    uint64_t v83 = v105;
    sub_1B69596A8(v105, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v112, v83, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v85 = v84;
    uint64_t v86 = (void *)(v83 + v84[15]);
    uint64_t v87 = v101;
    *uint64_t v86 = v100;
    v86[1] = v87;
    *(void *)(v83 + v84[9]) = v81;
    *(void *)(v83 + v84[10]) = v65;
    *(void *)(v83 + v84[11]) = v82;
    *(void *)(v83 + v84[12]) = 0;
    *(unsigned char *)(v83 + v84[13]) = 0;
    uint64_t v88 = v83 + v84[14];
    *(void *)uint64_t v88 = v108;
    *(unsigned char *)(v88 + 8) = v109 & 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_1B62DE2C8(v104);
    swift_release();
    uint64_t v124 = v85;
    uint64_t v125 = &off_1F0F61BF0;
    uint64_t v90 = sub_1B62C12C4(&v122);
    sub_1B6959704(v83, (uint64_t)v90, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v126) = 0;
    sub_1B6CE1380((uint64_t)&v122, v103, v89);
    sub_1B6817A80(v121);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B695BB44((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v118 = a13;
  uint64_t v106 = a12;
  uint64_t v107 = a11;
  unint64_t v116 = a9;
  *(void *)&long long v117 = a10;
  unint64_t v114 = v39 | (v40 << 32);
  v115 += 56;
  uint64_t v63 = 0;
  uint64_t v99 = swift_bridgeObjectRetain();
  unint64_t v64 = (unint64_t *)(v99 + 40);
  unint64_t v65 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v66 = *(v64 - 1);
    unint64_t v67 = *v64;
    sub_1B695BADC((uint64_t)v33, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, void, uint64_t, uint64_t))v115)(v22, 0, 1, v119);
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1B67AFBF8(v66, v67, v116, v117, v114, 0x72657474696D65uLL, 0xE700000000000000, (uint64_t)v22);
    uint64_t v70 = v69;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v22);
    swift_bridgeObjectRetain();
    sub_1B638E648(&v122, v68, v70);
    swift_bridgeObjectRelease();
    if (*v120 != 1) {
      break;
    }
    uint64_t v113 = v63;
    if (!v118
      || (uint64_t v71 = (void *)v118[9]) == 0
      || (swift_unknownObjectRetain(),
          uint64_t v72 = (void *)sub_1B6E31768(),
          id v73 = objc_msgSend(v71, sel_newFunctionWithName_, v72, v99),
          swift_unknownObjectRelease(),
          v72,
          !v73))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v118)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v122 = 0;
        unint64_t v123 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v122 = 0xD000000000000028;
        unint64_t v123 = 0x80000001B6F3E8A0;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v122 = 0;
        unint64_t v123 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      uint64_t v92 = v122;
      uint64_t v91 = v123;
      int v93 = sub_1B6E32148();
      uint64_t v94 = (uint64_t)v110;
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v122 = 0;
      swift_retain();
      sub_1B6B33E34(v93, &v122, v92, v91);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v95 = v94;
      return sub_1B695BB44(v95, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    }
    swift_bridgeObjectRelease();
    uint64_t v74 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v74);
    if (*(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v63 = v118;
    swift_retain();
    uint64_t v33 = v110;
LABEL_31:
    v64 += 2;
    if (!--v62)
    {
      unint64_t v82 = v128;
      unint64_t v81 = v63;
      goto LABEL_51;
    }
  }
  uint64_t v75 = v107;
  if (!*(void *)(v107 + 16)) {
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_1B62B2CE0(v68, v70);
  if (v77)
  {
    uint64_t v78 = *(void *)(*(void *)(v75 + 56) + 8 * v76);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v65 = sub_1B68C4A70(0, *((void *)v65 + 2) + 1, 1, v65);
    }
    unint64_t v80 = *((void *)v65 + 2);
    unint64_t v79 = *((void *)v65 + 3);
    if (v80 >= v79 >> 1) {
      unint64_t v65 = sub_1B68C4A70(v79 > 1, v80 + 1, 1, v65);
    }
    *((void *)v65 + 2) = v80 + 1;
    *(void *)&v65[8 * v80 + 32] = v78;
    swift_release();
    uint64_t v63 = v106;
    swift_retain();
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_60:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v122 = 0;
  unint64_t v123 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v122 = 0xD000000000000022;
  unint64_t v123 = 0x80000001B6F3E800;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v97 = v122;
  uint64_t v96 = v123;
  int v98 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v122 = 0;
  swift_retain();
  sub_1B6B33E34(v98, &v122, v97, v96);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = (uint64_t)v33;
  return sub_1B695BB44(v95, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B69405DC(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, unsigned char *a15)
{
  int v109 = a8;
  uint64_t v108 = a7;
  uint64_t v105 = a4;
  unint64_t v120 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8, v20);
  uint64_t v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v99 - v25;
  uint64_t v119 = type metadata accessor for ScriptIndex();
  uint64_t v115 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119, v27);
  uint64_t v29 = (uint64_t *)((char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (uint64_t *)((char *)&v99 - v32);
  uint64_t v112 = a5;
  sub_1B69596A8(a5, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v34 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v35 = *(void *)(a6 + 16);
  uint64_t v111 = a1;
  if (v35 && (uint64_t v36 = sub_1B62BE38C(v34), (v37 & 1) != 0))
  {
    char v38 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    unint64_t v40 = v38[1];
  }
  else
  {
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v40 = HIDWORD(v39);
  }
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  sub_1B6959AAC((uint64_t)&v120[*(int *)(inited + 36)], (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48))(v26, 1, v119);
  uint64_t v104 = a2;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(a2);
    swift_release();
    *uint64_t v33 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    sub_1B695B370((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v33, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v45 = v112;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B695BB44((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v44 = *v29;
    uint64_t v46 = *(void *)(a6 + 16);
    long long v117 = v44;
    if (v46)
    {
      uint64_t v47 = sub_1B62BE38C(v44);
      if (v49)
      {
        *(void *)&long long v48 = *(void *)(*(void *)(a6 + 56) + 8 * v47);
        long long v117 = v48;
      }
    }
    sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v33 = v117;
    swift_storeEnumTagMultiPayload();
  }
  sub_1B695BADC((uint64_t)v120, v45, type metadata accessor for ParticleInitScript);
  uint64_t v50 = sub_1B68EF1F8();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v52 = v45 + v51[9];
  *(void *)uint64_t v52 = v50;
  *(unsigned char *)(v52 + 8) = 0;
  *(unsigned char *)(v45 + v51[10]) = 1;
  *(void *)(v45 + v51[11]) = 0;
  uint64_t v53 = v45 + v51[12];
  strcpy((char *)v53, "<precompiled>");
  *(_WORD *)(v53 + 14) = -4864;
  unint64_t v54 = MEMORY[0x1E4FBC860];
  *(void *)(v45 + v51[13]) = MEMORY[0x1E4FBC860];
  uint64_t v55 = v118;
  sub_1B68EF604(2u, &v122);
  if (v55)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v122 = 0;
    unint64_t v123 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    unint64_t v128 = (unint64_t)v55;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v56 = v122;
    uint64_t v57 = v123;
    int v58 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v122 = 0;
    swift_retain();
    sub_1B6B33E34(v58, &v122, v56, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v100 = v126;
  uint64_t v101 = v127;
  swift_bridgeObjectRelease();
  uint64_t v60 = v120;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v128 = v54;
  uint64_t v121 = MEMORY[0x1E4FBC870];
  if (v109) {
    goto LABEL_21;
  }
  if (v108 >= 1029)
  {
    if ((unint64_t)v108 > 0x408)
    {
LABEL_21:
      if (*v60 == 1) {
        unint64_t v61 = &unk_1F0FA11F0;
      }
      else {
        unint64_t v61 = &unk_1F0FA1220;
      }
      goto LABEL_28;
    }
    unint64_t v61 = &unk_1F0FA11C0;
  }
  else
  {
    unint64_t v61 = &unk_1F0FA1250;
  }
LABEL_28:
  uint64_t v102 = 0;
  uint64_t v62 = v61[2];
  unint64_t v110 = v33;
  if (!v62)
  {
    swift_bridgeObjectRetain();
    unint64_t v81 = 0;
    unint64_t v82 = MEMORY[0x1E4FBC860];
    unint64_t v65 = (char *)MEMORY[0x1E4FBC860];
LABEL_51:
    uint64_t v119 = a14;
    unint64_t v120 = a15;
    uint64_t v83 = v105;
    sub_1B69596A8(v105, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v112, v83, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v85 = v84;
    uint64_t v86 = (void *)(v83 + v84[15]);
    uint64_t v87 = v101;
    *uint64_t v86 = v100;
    v86[1] = v87;
    *(void *)(v83 + v84[9]) = v81;
    *(void *)(v83 + v84[10]) = v65;
    *(void *)(v83 + v84[11]) = v82;
    *(void *)(v83 + v84[12]) = 0;
    *(unsigned char *)(v83 + v84[13]) = 0;
    uint64_t v88 = v83 + v84[14];
    *(void *)uint64_t v88 = v108;
    *(unsigned char *)(v88 + 8) = v109 & 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_1B62DE2C8(v104);
    swift_release();
    uint64_t v124 = v85;
    uint64_t v125 = &off_1F0F61BF0;
    uint64_t v90 = sub_1B62C12C4(&v122);
    sub_1B6959704(v83, (uint64_t)v90, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v126) = 0;
    sub_1B6CE1380((uint64_t)&v122, inited, v89);
    sub_1B6817A80(v121);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B695BB44((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v118 = a13;
  uint64_t v106 = a12;
  uint64_t v107 = a11;
  unint64_t v116 = a9;
  *(void *)&long long v117 = a10;
  unint64_t v114 = v39 | (v40 << 32);
  v115 += 56;
  uint64_t v63 = 0;
  uint64_t v99 = swift_bridgeObjectRetain();
  unint64_t v64 = (unint64_t *)(v99 + 40);
  unint64_t v65 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v66 = *(v64 - 1);
    unint64_t v67 = *v64;
    sub_1B695BADC((uint64_t)v33, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, void, uint64_t, uint64_t))v115)(v22, 0, 1, v119);
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1B67AFBF8(v66, v67, v116, v117, v114, 0x656C636974726170uLL, 0xEC00000074696E49, (uint64_t)v22);
    uint64_t v70 = v69;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v22);
    swift_bridgeObjectRetain();
    sub_1B638E648(&v122, v68, v70);
    swift_bridgeObjectRelease();
    if (*v120 != 1) {
      break;
    }
    uint64_t v113 = v63;
    if (!v118
      || (uint64_t v71 = (void *)v118[9]) == 0
      || (swift_unknownObjectRetain(),
          uint64_t v72 = (void *)sub_1B6E31768(),
          id v73 = objc_msgSend(v71, sel_newFunctionWithName_, v72, v99),
          swift_unknownObjectRelease(),
          v72,
          !v73))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v118)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v122 = 0;
        unint64_t v123 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v122 = 0xD000000000000028;
        unint64_t v123 = 0x80000001B6F3E8A0;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v122 = 0;
        unint64_t v123 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      uint64_t v92 = v122;
      uint64_t v91 = v123;
      int v93 = sub_1B6E32148();
      uint64_t v94 = (uint64_t)v110;
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v122 = 0;
      swift_retain();
      sub_1B6B33E34(v93, &v122, v92, v91);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v95 = v94;
      return sub_1B695BB44(v95, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    }
    swift_bridgeObjectRelease();
    uint64_t v74 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v74);
    if (*(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v63 = v118;
    swift_retain();
    uint64_t v33 = v110;
LABEL_31:
    v64 += 2;
    if (!--v62)
    {
      unint64_t v82 = v128;
      unint64_t v81 = v63;
      goto LABEL_51;
    }
  }
  uint64_t v75 = v107;
  if (!*(void *)(v107 + 16)) {
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_1B62B2CE0(v68, v70);
  if (v77)
  {
    uint64_t v78 = *(void *)(*(void *)(v75 + 56) + 8 * v76);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v65 = sub_1B68C4A70(0, *((void *)v65 + 2) + 1, 1, v65);
    }
    unint64_t v80 = *((void *)v65 + 2);
    unint64_t v79 = *((void *)v65 + 3);
    if (v80 >= v79 >> 1) {
      unint64_t v65 = sub_1B68C4A70(v79 > 1, v80 + 1, 1, v65);
    }
    *((void *)v65 + 2) = v80 + 1;
    *(void *)&v65[8 * v80 + 32] = v78;
    swift_release();
    uint64_t v63 = v106;
    swift_retain();
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_60:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v122 = 0;
  unint64_t v123 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v122 = 0xD000000000000022;
  unint64_t v123 = 0x80000001B6F3E800;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v97 = v122;
  uint64_t v96 = v123;
  int v98 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v122 = 0;
  swift_retain();
  sub_1B6B33E34(v98, &v122, v97, v96);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = (uint64_t)v33;
  return sub_1B695BB44(v95, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B69415C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15)
{
  int v109 = a8;
  uint64_t v108 = a7;
  uint64_t v105 = a4;
  uint64_t v120 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8, v20);
  uint64_t v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v99 - v25;
  uint64_t v119 = type metadata accessor for ScriptIndex();
  uint64_t v115 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119, v27);
  uint64_t v29 = (uint64_t *)((char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (uint64_t *)((char *)&v99 - v32);
  uint64_t v112 = a5;
  sub_1B69596A8(a5, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v34 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v35 = *(void *)(a6 + 16);
  uint64_t v111 = a1;
  if (v35 && (uint64_t v36 = sub_1B62BE38C(v34), (v37 & 1) != 0))
  {
    char v38 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    unint64_t v40 = v38[1];
  }
  else
  {
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v40 = HIDWORD(v39);
  }
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  sub_1B6959AAC(v120 + *(int *)(updated + 36), (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48))(v26, 1, v119);
  uint64_t v104 = a2;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(a2);
    swift_release();
    *uint64_t v33 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    sub_1B695B370((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v33, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v45 = v112;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B695BB44((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v44 = *v29;
    uint64_t v46 = *(void *)(a6 + 16);
    long long v117 = v44;
    if (v46)
    {
      uint64_t v47 = sub_1B62BE38C(v44);
      if (v49)
      {
        *(void *)&long long v48 = *(void *)(*(void *)(a6 + 56) + 8 * v47);
        long long v117 = v48;
      }
    }
    sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v33 = v117;
    swift_storeEnumTagMultiPayload();
  }
  sub_1B695BADC(v120, v45, type metadata accessor for ParticleUpdateScript);
  uint64_t v50 = sub_1B68EF860();
  sub_1B62AC710(0, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v52 = v45 + v51[9];
  *(void *)uint64_t v52 = v50;
  *(unsigned char *)(v52 + 8) = 0;
  *(unsigned char *)(v45 + v51[10]) = 1;
  *(void *)(v45 + v51[11]) = 0;
  uint64_t v53 = v45 + v51[12];
  strcpy((char *)v53, "<precompiled>");
  *(_WORD *)(v53 + 14) = -4864;
  unint64_t v54 = MEMORY[0x1E4FBC860];
  *(void *)(v45 + v51[13]) = MEMORY[0x1E4FBC860];
  uint64_t v55 = v118;
  sub_1B68EFC44(2u, &v122);
  if (v55)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v122 = 0;
    unint64_t v123 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    unint64_t v128 = (unint64_t)v55;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v56 = v122;
    uint64_t v57 = v123;
    int v58 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v122 = 0;
    swift_retain();
    sub_1B6B33E34(v58, &v122, v56, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v100 = v126;
  uint64_t v101 = v127;
  swift_bridgeObjectRelease();
  uint64_t v60 = v120;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v128 = v54;
  uint64_t v121 = MEMORY[0x1E4FBC870];
  if (v109) {
    goto LABEL_21;
  }
  if (v108 >= 1029)
  {
    if ((unint64_t)v108 > 0x408)
    {
LABEL_21:
      if (*(unsigned char *)(v60 + 24) == 1) {
        unint64_t v61 = &unk_1F0FA12B0;
      }
      else {
        unint64_t v61 = &unk_1F0FA12E0;
      }
      goto LABEL_28;
    }
    unint64_t v61 = &unk_1F0FA1280;
  }
  else
  {
    unint64_t v61 = &unk_1F0FA1310;
  }
LABEL_28:
  uint64_t v102 = 0;
  uint64_t v62 = v61[2];
  unint64_t v110 = v33;
  if (!v62)
  {
    swift_bridgeObjectRetain();
    unint64_t v81 = 0;
    unint64_t v82 = MEMORY[0x1E4FBC860];
    unint64_t v65 = (char *)MEMORY[0x1E4FBC860];
LABEL_51:
    uint64_t v119 = a14;
    uint64_t v120 = a15;
    uint64_t v83 = v105;
    sub_1B69596A8(v105, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v112, v83, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v85 = v84;
    uint64_t v86 = (void *)(v83 + v84[15]);
    uint64_t v87 = v101;
    *uint64_t v86 = v100;
    v86[1] = v87;
    *(void *)(v83 + v84[9]) = v81;
    *(void *)(v83 + v84[10]) = v65;
    *(void *)(v83 + v84[11]) = v82;
    *(void *)(v83 + v84[12]) = 0;
    *(unsigned char *)(v83 + v84[13]) = 0;
    uint64_t v88 = v83 + v84[14];
    *(void *)uint64_t v88 = v108;
    *(unsigned char *)(v88 + 8) = v109 & 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_1B62DE2C8(v104);
    swift_release();
    uint64_t v124 = v85;
    uint64_t v125 = &off_1F0F61BF0;
    uint64_t v90 = sub_1B62C12C4(&v122);
    sub_1B6959704(v83, (uint64_t)v90, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v126) = 0;
    sub_1B6CE1380((uint64_t)&v122, updated, v89);
    sub_1B6817A80(v121);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B695BB44((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v118 = a13;
  uint64_t v106 = a12;
  uint64_t v107 = a11;
  unint64_t v116 = a9;
  *(void *)&long long v117 = a10;
  unint64_t v114 = v39 | (v40 << 32);
  v115 += 56;
  uint64_t v63 = 0;
  uint64_t v99 = swift_bridgeObjectRetain();
  unint64_t v64 = (unint64_t *)(v99 + 40);
  unint64_t v65 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v66 = *(v64 - 1);
    unint64_t v67 = *v64;
    sub_1B695BADC((uint64_t)v33, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, void, uint64_t, uint64_t))v115)(v22, 0, 1, v119);
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1B67AFBF8(v66, v67, v116, v117, v114, 0x656C636974726170uLL, 0xEE00657461647055, (uint64_t)v22);
    uint64_t v70 = v69;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v22);
    swift_bridgeObjectRetain();
    sub_1B638E648(&v122, v68, v70);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v120 + 24) != 1) {
      break;
    }
    uint64_t v113 = v63;
    if (!v118
      || (uint64_t v71 = (void *)v118[9]) == 0
      || (swift_unknownObjectRetain(),
          uint64_t v72 = (void *)sub_1B6E31768(),
          id v73 = objc_msgSend(v71, sel_newFunctionWithName_, v72, v99),
          swift_unknownObjectRelease(),
          v72,
          !v73))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v118)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v122 = 0;
        unint64_t v123 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v122 = 0xD000000000000028;
        unint64_t v123 = 0x80000001B6F3E8A0;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v122 = 0;
        unint64_t v123 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      uint64_t v92 = v122;
      uint64_t v91 = v123;
      int v93 = sub_1B6E32148();
      uint64_t v94 = (uint64_t)v110;
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v122 = 0;
      swift_retain();
      sub_1B6B33E34(v93, &v122, v92, v91);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v95 = v94;
      return sub_1B695BB44(v95, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    }
    swift_bridgeObjectRelease();
    uint64_t v74 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v74);
    if (*(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v63 = v118;
    swift_retain();
    uint64_t v33 = v110;
LABEL_31:
    v64 += 2;
    if (!--v62)
    {
      unint64_t v82 = v128;
      unint64_t v81 = v63;
      goto LABEL_51;
    }
  }
  uint64_t v75 = v107;
  if (!*(void *)(v107 + 16)) {
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_1B62B2CE0(v68, v70);
  if (v77)
  {
    uint64_t v78 = *(void *)(*(void *)(v75 + 56) + 8 * v76);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v65 = sub_1B68C4A70(0, *((void *)v65 + 2) + 1, 1, v65);
    }
    unint64_t v80 = *((void *)v65 + 2);
    unint64_t v79 = *((void *)v65 + 3);
    if (v80 >= v79 >> 1) {
      unint64_t v65 = sub_1B68C4A70(v79 > 1, v80 + 1, 1, v65);
    }
    *((void *)v65 + 2) = v80 + 1;
    *(void *)&v65[8 * v80 + 32] = v78;
    swift_release();
    uint64_t v63 = v106;
    swift_retain();
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_60:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v122 = 0;
  unint64_t v123 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v122 = 0xD000000000000022;
  unint64_t v123 = 0x80000001B6F3E800;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v97 = v122;
  uint64_t v96 = v123;
  int v98 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v122 = 0;
  swift_retain();
  sub_1B6B33E34(v98, &v122, v97, v96);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = (uint64_t)v33;
  return sub_1B695BB44(v95, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B69425B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  int v101 = a8;
  uint64_t v98 = a7;
  uint64_t v112 = a3;
  sub_1B638C038(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v107 = (uint64_t)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v92 - v25;
  uint64_t v110 = type metadata accessor for ScriptIndex();
  uint64_t v113 = *(char **)(v110 - 8);
  MEMORY[0x1F4188790](v110, v27);
  uint64_t v29 = (uint64_t *)((char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (uint64_t *)((char *)&v92 - v32);
  uint64_t v100 = a5;
  sub_1B69596A8(a5, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  uint64_t v34 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v35 = *(void *)(a6 + 16);
  uint64_t v99 = a1;
  if (v35 && (uint64_t v36 = sub_1B62BE38C(v34), (v37 & 1) != 0))
  {
    char v38 = (_DWORD *)(*(void *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    unint64_t v40 = v38[1];
  }
  else
  {
    swift_retain();
    unint64_t v39 = sub_1B62DE2C8(a2);
    swift_release();
    unint64_t v40 = HIDWORD(v39);
  }
  uint64_t v96 = type metadata accessor for TriggerScript(0);
  sub_1B6959AAC(v112 + *(int *)(v96 + 40), (uint64_t)v26, (uint64_t)qword_1EB97DC70, (uint64_t)type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B638C038);
  int v41 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v113 + 6))(v26, 1, v110);
  uint64_t v97 = a2;
  if (v41 == 1)
  {
    swift_retain();
    uint64_t v42 = sub_1B62DE2C8(a2);
    swift_release();
    *uint64_t v33 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v26);
  }
  else
  {
    sub_1B695B370((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  sub_1B695BADC((uint64_t)v33, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B695BB44((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(void *)&long long v43 = *v29;
    uint64_t v44 = *(void *)(a6 + 16);
    long long v111 = v43;
    if (v44)
    {
      uint64_t v45 = sub_1B62BE38C(v43);
      if (v47)
      {
        *(void *)&long long v46 = *(void *)(*(void *)(a6 + 56) + 8 * v45);
        long long v111 = v46;
      }
    }
    sub_1B695BB44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    *uint64_t v33 = v111;
    swift_storeEnumTagMultiPayload();
  }
  long long v48 = (uint64_t *)v112;
  uint64_t v49 = v100;
  uint64_t v50 = sub_1B695BADC(v112, v100, type metadata accessor for TriggerScript);
  uint64_t v51 = sub_1B68F1798(v50);
  sub_1B62AC710(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v53 = v49 + v52[9];
  *(void *)uint64_t v53 = v51;
  *(unsigned char *)(v53 + 8) = 0;
  *(unsigned char *)(v49 + v52[10]) = 1;
  *(void *)(v49 + v52[11]) = 0;
  uint64_t v54 = v49 + v52[12];
  strcpy((char *)v54, "<precompiled>");
  *(_WORD *)(v54 + 14) = -4864;
  uint64_t v55 = MEMORY[0x1E4FBC860];
  *(void *)(v49 + v52[13]) = MEMORY[0x1E4FBC860];
  uint64_t v56 = *v48;
  uint64_t v120 = v55;
  uint64_t v119 = MEMORY[0x1E4FBC870];
  if (v101) {
    goto LABEL_15;
  }
  if (v98 >= 1029)
  {
    if ((unint64_t)v98 > 0x408)
    {
LABEL_15:
      if (*(unsigned char *)(v112 + 24) == 1) {
        uint64_t v57 = &unk_1F0FA15B0;
      }
      else {
        uint64_t v57 = &unk_1F0FA15E0;
      }
      goto LABEL_22;
    }
    uint64_t v57 = &unk_1F0FA1580;
  }
  else
  {
    uint64_t v57 = &unk_1F0FA1610;
  }
LABEL_22:
  uint64_t v58 = v57[2];
  int v109 = v33;
  if (!v58)
  {
    uint64_t v79 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v108 = 0;
    uint64_t v80 = MEMORY[0x1E4FBC860];
    uint64_t v62 = (char *)MEMORY[0x1E4FBC860];
LABEL_45:
    uint64_t v112 = a14;
    uint64_t v113 = a15;
    uint64_t v81 = a4;
    sub_1B69596A8(a4, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B6959704(v100, a4, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B62AC710(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v83 = v82;
    uint64_t v84 = (void *)(v81 + v82[15]);
    *uint64_t v84 = v79;
    v84[1] = 0;
    *(void *)(v81 + v82[9]) = v108;
    *(void *)(v81 + v82[10]) = v62;
    *(void *)(v81 + v82[11]) = v80;
    *(void *)(v81 + v82[12]) = 0;
    *(unsigned char *)(v81 + v82[13]) = 0;
    uint64_t v85 = v81 + v82[14];
    *(void *)uint64_t v85 = v98;
    *(unsigned char *)(v85 + 8) = v101 & 1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_1B62DE2C8(v97);
    swift_release();
    unint64_t v116 = v83;
    long long v117 = &off_1F0F61BF0;
    uint64_t v87 = sub_1B62C12C4(&v114);
    sub_1B6959704(v81, (uint64_t)v87, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v118 = 0;
    sub_1B6CE1380((uint64_t)&v114, v96, v86);
    sub_1B6817A80(v119);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B695BB44((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v93 = a4;
  *(void *)&long long v111 = a13;
  unint64_t v105 = a9;
  unint64_t v106 = a10;
  uint64_t v104 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56);
  uint64_t v102 = a12;
  unint64_t v103 = v39 | (v40 << 32);
  uint64_t v94 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v60 = 0;
  uint64_t v95 = v57;
  unint64_t v61 = v57 + 5;
  uint64_t v62 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v113 = v62;
    uint64_t v63 = a11;
    uint64_t v64 = *(v61 - 1);
    unint64_t v65 = *v61;
    uint64_t v66 = v107;
    sub_1B695BADC((uint64_t)v33, v107, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    (*v104)(v66, 0, 1, v110);
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1B67AFBF8(v64, v65, v105, v106, v103, 0x72656767697274uLL, 0xE700000000000000, v66);
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();
    sub_1B67BAA04(v66);
    swift_bridgeObjectRetain();
    sub_1B638E648(&v114, v67, v69);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v112 + 24) != 1) {
      break;
    }
    uint64_t v108 = v60;
    if (!(void)v111
      || (uint64_t v70 = *(void **)(v111 + 72)) == 0
      || (a11 = v63,
          swift_unknownObjectRetain(),
          uint64_t v71 = (void *)sub_1B6E31768(),
          id v72 = objc_msgSend(v70, sel_newFunctionWithName_, v71),
          swift_unknownObjectRelease(),
          v71,
          !v72))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((void)v111)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v114 = 0;
        unint64_t v115 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v114 = 0xD000000000000028;
        unint64_t v115 = 0x80000001B6F3E8A0;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v114 = 0;
        unint64_t v115 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      uint64_t v88 = v114;
      uint64_t v89 = v115;
      int v90 = sub_1B6E32148();
      if (qword_1EB9854F8 == -1) {
        goto LABEL_56;
      }
LABEL_58:
      swift_once();
      goto LABEL_56;
    }
    swift_bridgeObjectRelease();
    uint64_t v73 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v73);
    uint64_t v62 = v113;
    if (*(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v60 = swift_retain();
    uint64_t v33 = v109;
LABEL_25:
    v61 += 2;
    if (!--v58)
    {
      uint64_t v80 = v120;
      uint64_t v108 = v60;
      uint64_t v79 = v94;
      a4 = v93;
      goto LABEL_45;
    }
  }
  if (!*(void *)(v63 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  a11 = v63;
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_1B62B2CE0(v67, v69);
  uint64_t v62 = v113;
  if (v75)
  {
    uint64_t v76 = *(void *)(*(void *)(a11 + 56) + 8 * v74);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v62 = sub_1B68C4A70(0, *((void *)v62 + 2) + 1, 1, v62);
    }
    uint64_t v33 = v109;
    unint64_t v78 = *((void *)v62 + 2);
    unint64_t v77 = *((void *)v62 + 3);
    if (v78 >= v77 >> 1) {
      uint64_t v62 = sub_1B68C4A70(v77 > 1, v78 + 1, 1, v62);
    }
    *((void *)v62 + 2) = v78 + 1;
    *(void *)&v62[8 * v78 + 32] = v76;
    swift_release();
    uint64_t v60 = swift_retain();
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_53:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v114 = 0;
  unint64_t v115 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v114 = 0xD000000000000022;
  unint64_t v115 = 0x80000001B6F3E800;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v88 = v114;
  uint64_t v89 = v115;
  int v90 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    goto LABEL_58;
  }
LABEL_56:
  uint64_t v114 = 0;
  swift_retain();
  sub_1B6B33E34(v90, &v114, v88, v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1B695BB44((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

void sub_1B69433A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v70 = a2;
  uint64_t v71 = a4;
  uint64_t v69 = a1;
  sub_1B695B4F0();
  MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v14 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v86 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v79 = (uint64_t)v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v87 = (uint64_t)v67 - v21;
  sub_1B695B580();
  MEMORY[0x1F4188790](v22 - 8, v23);
  uint64_t v84 = (char *)v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v26 = v25;
  MEMORY[0x1F4188790](v25, v27);
  uint64_t v88 = (uint64_t)v67 - v29;
  uint64_t v110 = *(void *)(a5 + 16);
  if (v110)
  {
    v67[1] = a5;
    v67[2] = a6 + 80;
    uint64_t v89 = a5 + 32;
    unint64_t v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v28 + 56);
    swift_bridgeObjectRetain();
    uint64_t v30 = 0;
    uint64_t v78 = a6;
    uint64_t v81 = v14;
    uint64_t v31 = v86;
    uint64_t v32 = (uint64_t)v84;
    uint64_t v85 = v26;
    uint64_t v68 = a7;
    while (1)
    {
      sub_1B69595FC(v89 + 48 * v30, (uint64_t)v98);
      if (v99)
      {
        sub_1B62C15C4(v98, (uint64_t)v97);
        sub_1B62C1550((uint64_t)v97, (uint64_t)&v90);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v35 = swift_dynamicCast();
        uint64_t v36 = *v82;
        if (v35)
        {
          v36(v14, 0, 1, v31);
          sub_1B6959634((uint64_t)v14, v87, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          sub_1B6E33998();
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          uint64_t v37 = *(void *)(a3 + 24);
          sub_1B6E33928();
          uint64_t v38 = *(void *)(v37 + 16);
          if (v38)
          {
            swift_bridgeObjectRetain();
            uint64_t v39 = v37 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B6E318B8();
              swift_bridgeObjectRelease();
              v39 += 16;
              --v38;
            }
            while (v38);
            swift_bridgeObjectRelease();
            uint64_t v14 = v81;
          }
          uint64_t v26 = v85;
          uint64_t v31 = v86;
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          long long v107 = v92;
          long long v108 = v93;
          uint64_t v109 = v94;
          long long v105 = v90;
          long long v106 = v91;
          uint64_t v45 = sub_1B6E33978();
          long long v46 = (uint64_t *)(v87 + *(int *)(v31 + 36));
          if (v46[1])
          {
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
            goto LABEL_24;
          }
          uint64_t v47 = v45;
          uint64_t v48 = *v46;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
          if (v47 == v48)
          {
            uint64_t v49 = v71;
            sub_1B69596A8(v71, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v50 = v49;
            uint64_t v31 = v86;
            uint64_t v26 = v85;
            sub_1B6959634(v87, v50, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          else
          {
LABEL_24:
            sub_1B69596A8(v87, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          uint64_t v32 = (uint64_t)v84;
LABEL_34:
          *a7 = 1;
          goto LABEL_5;
        }
        v36(v14, 1, 1, v31);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
        uint64_t v33 = sub_1B695B4F0;
        uint64_t v34 = (uint64_t)v14;
      }
      else
      {
        sub_1B62C15C4(v98, (uint64_t)v97);
        sub_1B62C1550((uint64_t)v97, (uint64_t)&v90);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v40 = swift_dynamicCast();
        int v41 = *v83;
        if (v40)
        {
          v41(v32, 0, 1, v26);
          sub_1B6959634(v32, v88, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          sub_1B6E33998();
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          uint64_t v42 = *(void *)(a3 + 24);
          sub_1B6E33928();
          uint64_t v43 = *(void *)(v42 + 16);
          if (v43)
          {
            swift_bridgeObjectRetain();
            uint64_t v44 = v42 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B6E318B8();
              swift_bridgeObjectRelease();
              v44 += 16;
              --v43;
            }
            while (v43);
            swift_bridgeObjectRelease();
          }
          uint64_t v26 = v85;
          uint64_t v31 = v86;
          uint64_t v14 = v81;
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          long long v102 = v92;
          long long v103 = v93;
          uint64_t v104 = v94;
          long long v100 = v90;
          long long v101 = v91;
          uint64_t v51 = sub_1B6E33978();
          uint64_t v52 = v88 + *(int *)(v31 + 36);
          if ((*(unsigned char *)(v52 + 8) & 1) == 0 && v51 == *(void *)v52)
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v78 + 72));
            uint64_t v53 = v88;
            uint64_t v54 = v79;
            sub_1B6959704(v88, v79, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            sub_1B695B610(a3, v54, type metadata accessor for EmitterScript);
            uint64_t v55 = *(void *)(v53 + v26[15]);
            sub_1B62D19E4(v55);
            uint64_t v56 = v80;
            sub_1B68F259C(2, &v90);
            if (v56)
            {

              sub_1B678FE58(v55);
              uint64_t v76 = 0;
              uint64_t v77 = 0;
              uint64_t v80 = 0;
            }
            else
            {
              uint64_t v80 = 0;
              uint64_t v76 = v93;
              uint64_t v77 = *((void *)&v92 + 1);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B678FE58(v55);
            }
            uint64_t v57 = v69;
            uint64_t v58 = *(void *)(v69 + 16);
            char v59 = *(unsigned char *)(v69 + 184);
            swift_retain();
            if (v59)
            {
              sub_1B6E32BE8();
              __break(1u);
              return;
            }
            uint64_t v60 = *(void *)(v57 + 168);
            uint64_t v75 = type metadata accessor for EmitterScript(0);
            uint64_t v61 = *(unsigned int *)(v60 + 4 * v70);
            uint64_t v72 = *(unsigned int *)(*(void *)(v58 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v61 + 8);
            swift_release();
            *((void *)&v91 + 1) = v31;
            uint64_t v62 = sub_1B62C12C4((uint64_t *)&v90);
            uint64_t v74 = type metadata accessor for EmitterScript;
            uint64_t v73 = type metadata accessor for ScriptCompileAttempt;
            uint64_t v63 = v79;
            sub_1B6959704(v79, (uint64_t)v62, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v26 = v85;
            uint64_t v64 = *(void *)(v88 + v85[10]);
            *(void *)&long long v92 = *(void *)(v88 + v85[9]);
            *((void *)&v92 + 1) = v64;
            *(void *)&long long v93 = *(void *)(v88 + v85[11]);
            sub_1B62D8750(0, &qword_1E9DD2B18, (uint64_t)&type metadata for ParticleScriptRuntime, MEMORY[0x1E4FBB718]);
            uint64_t v95 = v65;
            *((void *)&v93 + 1) = v77;
            uint64_t v94 = v76;
            char v96 = 1;
            uint64_t v66 = v61 | (v72 << 32);
            swift_retain();
            uint64_t v31 = v86;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B6CE14C4((uint64_t)&v90, v75, v66);
            sub_1B69596A8(v63, &qword_1EB97F4E0, v74, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v73);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v78 + 72));
            a7 = v68;
            uint64_t v14 = v81;
          }
          uint64_t v32 = (uint64_t)v84;
          sub_1B69596A8(v88, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
          goto LABEL_34;
        }
        v41(v32, 1, 1, v26);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
        uint64_t v33 = sub_1B695B580;
        uint64_t v34 = v32;
      }
      sub_1B695BB44(v34, (uint64_t (*)(void))v33);
LABEL_5:
      if (++v30 == v110)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B6943EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v53 = a6;
  uint64_t v69 = a4;
  sub_1B62AC710(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v43 - v14;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v63);
  if (v68)
  {
    if (v68 != 1)
    {
      sub_1B69596A8(a1, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v63, v62);
      sub_1B62CAAD8((uint64_t)v62, (uint64_t)&v57);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v15, a1, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v59 = v12;
      uint64_t v60 = &off_1F0F836B8;
      uint64_t v42 = sub_1B62C12C4(&v57);
      sub_1B6959704(a1, (uint64_t)v42, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v61 = 1;
      sub_1B6CE1380((uint64_t)&v57, v69, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v62);
    }
    uint64_t v51 = v6;
    uint64_t v45 = type metadata accessor for EmitterScript;
    uint64_t v48 = type metadata accessor for ScriptCompileAttempt;
    sub_1B69596A8(a1, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    id v52 = v64;
    uint64_t v47 = v65;
    uint64_t v46 = v66;
    unint64_t v50 = a5;
    sub_1B62B57A8(v63, v62);
    sub_1B62B57A8(&v67, v56);
    *uint64_t v20 = 0;
    v20[32] = 0;
    uint64_t v22 = &v20[*(int *)(type metadata accessor for EmitterScript(0) + 32)];
    uint64_t v23 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *((void *)v20 + 1) = 0xD0000000000000C0;
    *((void *)v20 + 2) = 0x80000001B6F33C80;
    *((void *)v20 + 3) = &unk_1F0F83D48;
    uint64_t v24 = &v20[v12[9]];
    *(void *)uint64_t v24 = 0;
    v24[8] = 1;
    v20[v12[10]] = 0;
    *(void *)&v20[v12[11]] = 0;
    uint64_t v25 = &v20[v12[12]];
    *(void *)uint64_t v25 = 0;
    *((void *)v25 + 1) = 0xE000000000000000;
    *(void *)&v20[v12[13]] = MEMORY[0x1E4FBC860];
    uint64_t v26 = v17[9];
    *(void *)&v20[v26] = 0;
    uint64_t v49 = a3;
    uint64_t v27 = v17[10];
    *(void *)&v20[v27] = 0;
    uint64_t v28 = v17[11];
    *(void *)&v20[v28] = 0;
    *(void *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    uint64_t v29 = &v20[v17[14]];
    *(void *)uint64_t v29 = 0;
    v29[8] = 1;
    uint64_t v30 = (uint64_t *)&v20[v17[15]];
    *uint64_t v30 = 0;
    v30[1] = 0;
    sub_1B62CAAD8((uint64_t)v62, (uint64_t)&v57);
    uint64_t v44 = a1;
    swift_dynamicCast();
    uint64_t v31 = (uint64_t)v15;
    id v32 = v52;
    uint64_t v33 = v45;
    sub_1B695A158(v31, (uint64_t)v20, &qword_1EB97F4E0, v45, (uint64_t)&off_1EB982298);
    *(void *)&v20[v26] = v32;
    unint64_t v34 = v50;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&v20[v28] = v46;
    swift_bridgeObjectRelease();
    *(void *)&v20[v27] = v47;
    sub_1B62CAAD8((uint64_t)v56, (uint64_t)&v57);
    swift_dynamicCast();
    uint64_t v35 = v54;
    uint64_t v36 = v55;
    sub_1B678FE58(*v30);
    *uint64_t v30 = v35;
    v30[1] = v36;
    uint64_t v37 = v49;
    sub_1B6959704((uint64_t)v20, v44, &qword_1EB97F4E0, v33, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48);
    sub_1B6850870((uint64_t)v20, v34);
    char v59 = v17;
    uint64_t v60 = &off_1F0F61BF0;
    uint64_t v38 = sub_1B62C12C4(&v57);
    sub_1B6959704((uint64_t)v20, (uint64_t)v38, (unint64_t *)&unk_1EB97E750, v33, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v61 = 0;
    sub_1B6CE1380((uint64_t)&v57, v69, v34);
    uint64_t v39 = sub_1B695F694(v34);
    if (v39)
    {
      sub_1B6920048(v37, v39, v40, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v56, (uint64_t)&v57);
    if (swift_dynamicCast())
    {
      uint64_t v41 = v54;
      swift_bridgeObjectRelease();
      uint64_t v57 = MEMORY[0x1E4FBC860];
      uint64_t v58 = MEMORY[0x1E4FBC860];
      sub_1B6927214(v37, v41);
      swift_bridgeObjectRelease();
      sub_1B6850888(v57, v58, v34);
    }
    else
    {
      sub_1B62CAAD8((uint64_t)v56, (uint64_t)&v57);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B63BAF34(v34);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v56);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v62);
        return sub_1B69596A8((uint64_t)v20, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B6944674(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v48 = (uint64_t)a1;
  uint64_t v49 = v2;
  uint64_t v4 = a1[10];
  uint64_t v52 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  uint64_t v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  char v9 = v55;
  uint64_t v10 = v61;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v53 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v54 = *v15;
  *((void *)&v54 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v54, (uint64_t)&v58);
    if (v61[88] == 255) {
      break;
    }
    uint64_t v20 = v58;
    uint64_t v21 = v60;
    uint64_t v22 = v59;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v54);
    if (v20 == type metadata accessor for EmitterScript(0))
    {
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v51[1] > v22)
      {
        uint64_t v50 = *v51;
        uint64_t v25 = *v51 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v49 + 80)
                                                  + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v46 = *(void *)(*(void *)(*(void *)(v49 + 80) + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v47 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v47)
            {
              if (*(void *)(*(void *)(v47 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v47 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v49 + 136) + 8 * *(int *)(v50 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v47)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B6943EE4(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v50 + 12 * (int)v22 + 4), (uint64_t)&v54, v49, v20, v22 | (unint64_t)(v21 << 32), v48);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v54);
      char v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v54);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v53)
    {
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v53) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v53) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v53)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v53)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v52 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v56 = 0;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    char v57 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(*(void *)(v48 + 80) + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for EmitterScript);
    swift_bridgeObjectRelease();
    *(void *)(v48 + 80) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(*(void *)(v48 + 80) + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 72));
  swift_release();
  return v42;
}

uint64_t sub_1B6944C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  int v98 = a8;
  uint64_t v108 = a2;
  uint64_t v109 = (uint64_t)a6;
  uint64_t v99 = a3;
  uint64_t v100 = a5;
  uint64_t v102 = a4;
  uint64_t v107 = type metadata accessor for EmitterScript(0);
  uint64_t v95 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107, v14);
  uint64_t v96 = v15;
  uint64_t v97 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1B6E31288();
  uint64_t v106 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103, v16);
  uint64_t v94 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v88 - v20;
  MEMORY[0x1F4188790](v22, v23);
  long long v105 = (char *)&v88 - v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a11;
  *(void *)(v25 + 24) = a12;
  int v26 = (void *)swift_allocObject();
  v26[2] = sub_1B695BF48;
  v26[3] = v25;
  v26[4] = a10;
  uint64_t v27 = *(void *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  uint64_t v104 = a10;
  if (v27
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v34 = (void *)swift_allocError();
    *uint64_t v35 = xmmword_1B6E95940;
    if (!*(void *)(a11 + 16))
    {
LABEL_24:
      uint64_t v41 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      id v42 = v34;
      os_unfair_lock_lock(v41);
      uint64_t v43 = *(void **)(a11 + 16);
      *(void *)(a11 + 16) = v34;
      id v44 = v34;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v104);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v45 = 0;
    goto LABEL_50;
  }
  uint64_t v92 = v25;
  uint64_t v28 = sub_1B68F2458();
  sub_1B62AC710(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v30 = v29;
  uint64_t v31 = a7 + v29[9];
  char v32 = *(unsigned char *)(v31 + 8);
  long long v101 = v26;
  uint64_t v93 = v28;
  BOOL v33 = (v32 & 1) == 0 && v28 == *(void *)v31;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v36 = *(void *)(a1 + 80);
  if (!*(void *)(v36 + 16) || (unint64_t v37 = sub_1B69FABB0(v107, v109), (v38 & 1) == 0))
  {
    uint64_t v118 = 0;
    long long v116 = 0u;
    long long v117 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v119 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v36 + 56) + 96 * v37, (uint64_t)&aBlock);
  if (v119 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v33) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v112);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v112, (uint64_t)v110);
  if (v111)
  {
    sub_1B69599E0((uint64_t)v110);
    sub_1B69599E0((uint64_t)v112);
    goto LABEL_16;
  }
  uint64_t v46 = v110[0];
  sub_1B69599E0((uint64_t)v112);
  if (v46 != v93) {
    BOOL v33 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v33)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v30[10]))
    {
      uint64_t v34 = *(void **)(a7 + v30[11]);
      id v39 = v34;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v34 = (void *)swift_allocError();
      *uint64_t v40 = xmmword_1B6E4F270;
    }
    if (!*(void *)(a11 + 16) && v34) {
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v46 == v93)
  {
    dispatch_group_leave(v104);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  uint64_t v90 = a11;
  uint64_t v91 = a12;
  sub_1B69596A8(a7, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v89 = swift_allocBox();
  uint64_t v48 = v47;
  sub_1B692F5C8(v47);
  uint64_t v49 = v48 + v30[9];
  uint64_t v50 = v93;
  *(void *)uint64_t v49 = v93;
  *(unsigned char *)(v49 + 8) = 0;
  sub_1B695B610(v108, v48, type metadata accessor for EmitterScript);
  sub_1B6959704(v48, a7, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(void *)&long long aBlock = v50;
  unsigned __int8 v119 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, v107, v109);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v51 = *(void *)(a1 + 16);
  swift_retain();
  if (v51)
  {
    uint64_t v52 = v106;
    uint64_t v53 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v21, v51 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v103);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v105, v21, v53);
  }
  else
  {
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1B6E312C8();
    sub_1B6385660(v54, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    sub_1B6E31268();
    uint64_t v53 = v103;
  }
  uint64_t v55 = v94;
  uint64_t v94 = (char *)HIDWORD(v109);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v104 = a9;
  uint64_t v56 = sub_1B6E312C8();
  sub_1B6385660(v56, (uint64_t)qword_1EB997E68);
  char v57 = sub_1B6E312A8();
  os_signpost_type_t v58 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    int v59 = v105;
    uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
    v88(v55, v105, v53);
    unsigned int v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v60 = 0;
    os_signpost_id_t v61 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v57, v58, v61, "buildScript", "", v60, 2u);
    MEMORY[0x1BA9B84C0](v60, -1, -1);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v53);
    v88(v55, v59, v53);
  }
  else
  {

    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v55, v105, v53);
  }
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v62 = sub_1B6E312F8();
  uint64_t v63 = v97;
  sub_1B695BADC(v108, v97, type metadata accessor for EmitterScript);
  unint64_t v64 = (*(unsigned __int8 *)(v95 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  unint64_t v65 = (v96 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v65 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = v107;
  *(void *)(v67 + 16) = a1;
  *(void *)(v67 + 24) = v68;
  int v69 = v109;
  uint64_t v107 = a1;
  uint64_t v108 = v62;
  uint64_t v70 = v93;
  int v71 = (int)v94;
  *(_DWORD *)(v67 + 32) = v109;
  *(_DWORD *)(v67 + 36) = v71;
  *(void *)(v67 + 40) = v70;
  *(void *)(v67 + 48) = sub_1B6959788;
  *(void *)(v67 + 56) = v101;
  *(void *)(v67 + 64) = v62;
  memcpy((void *)(v67 + 72), v104, 0x148uLL);
  sub_1B695B370(v63, v67 + v64, type metadata accessor for EmitterScript);
  uint64_t v72 = (uint64_t *)(v67 + v65);
  uint64_t v73 = v99;
  uint64_t v74 = v100;
  uint64_t v75 = v102;
  *uint64_t v72 = v99;
  v72[1] = v75;
  v72[2] = v74;
  uint64_t v76 = (_DWORD *)(v67 + v66);
  *uint64_t v76 = v69;
  v76[1] = v71;
  *(void *)(v67 + ((v66 + 15) & 0xFFFFFFFFFFFFFFF8)) = v89;
  if (v98)
  {
    uint64_t v77 = *(void **)(v107 + 40);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = sub_1B695B92C;
    *(void *)(v78 + 24) = v67;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    uint64_t v79 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v79 != -1) {
      swift_once();
    }
    uint64_t v80 = qword_1EB9854F8;
    swift_retain();
    if (v80 != -1) {
      swift_once();
    }
    uint64_t v81 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    unint64_t v82 = (void *)swift_allocObject();
    v82[2] = v81;
    v82[3] = sub_1B633A540;
    v82[4] = v78;
    *(void *)&long long v115 = sub_1B695BF44;
    *((void *)&v115 + 1) = v82;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B639AA00;
    *((void *)&v114 + 1) = &unk_1F0FB8278;
    uint64_t v83 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v77, sel_addOperationWithBlock_, v83);
    _Block_release(v83);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v109 = *(void *)(v107 + 32);
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_1B695B92C;
    *(void *)(v84 + 24) = v67;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = sub_1B633A540;
    *(void *)(v85 + 24) = v84;
    *(void *)&long long v115 = sub_1B633A540;
    *((void *)&v115 + 1) = v85;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B691FFC8;
    *((void *)&v114 + 1) = &unk_1F0FB8228;
    uint64_t v86 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v109, v86);
    _Block_release(v86);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  uint64_t v45 = 1;
LABEL_50:
  swift_release();
  return v45;
}

void sub_1B6945A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v83 = a7;
  uint64_t v70 = a4;
  uint64_t v85 = (uint64_t *)a3;
  uint64_t v69 = a2;
  uint64_t v68 = a1;
  sub_1B695B058();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v91 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v77 = (uint64_t)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v82 = (uint64_t)v67 - v19;
  sub_1B695B0E8();
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v23 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v24, v26);
  uint64_t v79 = (char *)v67 - v28;
  uint64_t v29 = *(void *)(a5 + 16);
  if (v29)
  {
    v67[2] = a6 + 80;
    uint64_t v30 = a5 + 32;
    uint64_t v81 = (void (**)(char *, uint64_t, uint64_t, int *))(v27 + 56);
    uint64_t v31 = (void (**)(void, void, void, void))(v14 + 56);
    v67[1] = a5;
    swift_bridgeObjectRetain();
    char v32 = &qword_1EB97F4B8;
    uint64_t v76 = a6;
    uint64_t v78 = v25;
    uint64_t v33 = (uint64_t)v79;
    uint64_t v80 = v31;
    uint64_t v84 = v23;
    while (1)
    {
      sub_1B69595FC(v30, (uint64_t)&v89);
      if (v90)
      {
        uint64_t v34 = v32;
        sub_1B62C15C4(&v89, (uint64_t)v86);
        sub_1B62C1550((uint64_t)v86, (uint64_t)v88);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v35 = swift_dynamicCast();
        uint64_t v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v31;
        if (v35)
        {
          unint64_t v37 = v91;
          v36(v91, 0, 1, v13);
          uint64_t v38 = (uint64_t)v37;
          uint64_t v39 = v82;
          char v32 = v34;
          uint64_t v40 = sub_1B6959634(v38, v82, v34, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v41 = sub_1B68F1798(v40);
          uint64_t v42 = v39 + *(int *)(v13 + 36);
          if (*(unsigned char *)(v42 + 8))
          {
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
            goto LABEL_18;
          }
          uint64_t v64 = v41;
          uint64_t v65 = *(void *)v42;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
          if (v64 == v65)
          {
            uint64_t v66 = v70;
            sub_1B69596A8(v70, v34, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            char v32 = v34;
            sub_1B6959634(v82, v66, v34, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          else
          {
LABEL_18:
            sub_1B69596A8(v82, v34, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          uint64_t v23 = v84;
          unsigned char *v83 = 1;
          uint64_t v25 = v78;
          uint64_t v33 = (uint64_t)v79;
LABEL_20:
          uint64_t v31 = v80;
          goto LABEL_4;
        }
        uint64_t v63 = (uint64_t)v91;
        v36(v91, 1, 1, v13);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
        sub_1B695BB44(v63, (uint64_t (*)(void))sub_1B695B058);
        char v32 = v34;
        uint64_t v23 = v84;
      }
      else
      {
        sub_1B62C15C4(&v89, (uint64_t)v88);
        sub_1B62C1550((uint64_t)v88, (uint64_t)v86);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v43 = swift_dynamicCast();
        id v44 = *v81;
        if (v43)
        {
          v44(v23, 0, 1, v25);
          uint64_t v45 = sub_1B6959634((uint64_t)v23, v33, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          uint64_t v46 = sub_1B68F1798(v45);
          uint64_t v47 = v33 + *(int *)(v13 + 36);
          if ((*(unsigned char *)(v47 + 8) & 1) == 0 && v46 == *(void *)v47)
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v76 + 72));
            uint64_t v48 = v77;
            sub_1B6959704(v33, v77, v32, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v49 = v85;
            sub_1B695B610((uint64_t)v85, v48, type metadata accessor for GraphScript);
            uint64_t v50 = *v49;
            uint64_t v51 = v68;
            uint64_t v52 = v48;
            uint64_t v53 = *(void *)(v68 + 16);
            char v54 = *(unsigned char *)(v68 + 184);
            swift_retain();
            if (v54)
            {
              sub_1B6E32BE8();
              __break(1u);
              return;
            }
            uint64_t v55 = *(void *)(v51 + 168);
            uint64_t v75 = type metadata accessor for GraphScript(0);
            uint64_t v74 = *(unsigned int *)(v55 + 4 * v69);
            uint64_t v73 = *(unsigned int *)(*(void *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v74 + 8);
            swift_bridgeObjectRetain();
            swift_release();
            v86[3] = v13;
            uint64_t v56 = sub_1B62C12C4(v86);
            uint64_t v72 = type metadata accessor for GraphScript;
            int v71 = type metadata accessor for ScriptCompileAttempt;
            uint64_t v57 = v52;
            os_signpost_type_t v58 = v32;
            sub_1B6959704(v57, (uint64_t)v56, v32, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            int v59 = v79;
            uint64_t v60 = *(void *)&v79[v25[10]];
            uint64_t v86[4] = *(void *)&v79[v25[9]];
            v86[5] = v60;
            v86[6] = *(void *)&v79[v25[11]];
            sub_1B62D8750(0, &qword_1E9DD2B18, (uint64_t)&type metadata for ParticleScriptRuntime, MEMORY[0x1E4FBB718]);
            v86[10] = v61;
            v86[7] = v50;
            v86[8] = 0;
            char v87 = 1;
            uint64_t v62 = v74 | (v73 << 32);
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v25 = v78;
            swift_bridgeObjectRetain();
            sub_1B6CE14C4((uint64_t)v86, v75, v62);
            sub_1B69596A8(v77, v58, v72, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v71);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v76 + 72));
            uint64_t v33 = (uint64_t)v59;
            char v32 = v58;
            uint64_t v23 = v84;
          }
          sub_1B69596A8(v33, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v88);
          unsigned char *v83 = 1;
          goto LABEL_20;
        }
        v44(v23, 1, 1, v25);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v88);
        sub_1B695BB44((uint64_t)v23, (uint64_t (*)(void))sub_1B695B0E8);
      }
LABEL_4:
      v30 += 48;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B69463D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = a6;
  uint64_t v70 = a4;
  sub_1B62AC710(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v44 - v14;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v64);
  if (v69)
  {
    if (v69 != 1)
    {
      sub_1B69596A8(a1, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v64, v63);
      sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v15, a1, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      uint64_t v60 = v12;
      uint64_t v61 = &off_1F0F836B8;
      char v43 = sub_1B62C12C4(&v58);
      sub_1B6959704(a1, (uint64_t)v43, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v62 = 1;
      sub_1B6CE1380((uint64_t)&v58, v70, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
    }
    uint64_t v52 = v6;
    uint64_t v46 = type metadata accessor for GraphScript;
    uint64_t v49 = type metadata accessor for ScriptCompileAttempt;
    sub_1B69596A8(a1, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    id v53 = v65;
    uint64_t v48 = v66;
    uint64_t v47 = v67;
    unint64_t v51 = a5;
    sub_1B62B57A8(v64, v63);
    sub_1B62B57A8(&v68, v57);
    uint64_t v22 = MEMORY[0x1E4FBC860];
    *(void *)uint64_t v20 = MEMORY[0x1E4FBC860];
    *((void *)v20 + 1) = 0;
    uint64_t v50 = a3;
    *((void *)v20 + 2) = 0xE000000000000000;
    v20[24] = 2;
    *((void *)v20 + 4) = &unk_1F0F83CA8;
    *((_WORD *)v20 + 20) = 0;
    uint64_t v23 = &v20[*(int *)(type metadata accessor for GraphScript(0) + 40)];
    uint64_t v24 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    uint64_t v25 = &v20[v12[9]];
    *(void *)uint64_t v25 = 0;
    v25[8] = 1;
    v20[v12[10]] = 0;
    *(void *)&v20[v12[11]] = 0;
    uint64_t v26 = &v20[v12[12]];
    *(void *)uint64_t v26 = 0;
    *((void *)v26 + 1) = 0xE000000000000000;
    *(void *)&v20[v12[13]] = v22;
    uint64_t v27 = v17[9];
    *(void *)&v20[v27] = 0;
    uint64_t v28 = v17[10];
    *(void *)&v20[v28] = 0;
    uint64_t v29 = v17[11];
    *(void *)&v20[v29] = 0;
    *(void *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    uint64_t v30 = &v20[v17[14]];
    *(void *)uint64_t v30 = 0;
    v30[8] = 1;
    uint64_t v31 = (uint64_t *)&v20[v17[15]];
    *uint64_t v31 = 0;
    v31[1] = 0;
    sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
    uint64_t v45 = a1;
    swift_dynamicCast();
    uint64_t v32 = (uint64_t)v15;
    id v33 = v53;
    uint64_t v34 = v46;
    sub_1B695A158(v32, (uint64_t)v20, &qword_1EB97F4B8, v46, (uint64_t)&off_1EB981C00);
    *(void *)&v20[v27] = v33;
    unint64_t v35 = v51;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&v20[v29] = v47;
    swift_bridgeObjectRelease();
    *(void *)&v20[v28] = v48;
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    swift_dynamicCast();
    uint64_t v36 = v55;
    uint64_t v37 = v56;
    sub_1B678FE58(*v31);
    *uint64_t v31 = v36;
    v31[1] = v37;
    uint64_t v38 = v50;
    sub_1B6959704((uint64_t)v20, v45, &qword_1EB97F4B8, v34, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49);
    sub_1B6850840((uint64_t)v20, v35);
    uint64_t v60 = v17;
    uint64_t v61 = &off_1F0F61BF0;
    uint64_t v39 = sub_1B62C12C4(&v58);
    sub_1B6959704((uint64_t)v20, (uint64_t)v39, (unint64_t *)&unk_1EB97E720, v34, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v62 = 0;
    sub_1B6CE1380((uint64_t)&v58, v70, v35);
    uint64_t v40 = sub_1B695D840(v35);
    if (v40)
    {
      sub_1B6920048(v38, v40, v41, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    if (swift_dynamicCast())
    {
      uint64_t v42 = v55;
      swift_bridgeObjectRelease();
      uint64_t v58 = MEMORY[0x1E4FBC860];
      uint64_t v59 = MEMORY[0x1E4FBC860];
      sub_1B6927214(v38, v42);
      swift_bridgeObjectRelease();
      sub_1B6850858(v58, v59, v35);
    }
    else
    {
      sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B63BAF34(v35);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v57);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
        return sub_1B69596A8((uint64_t)v20, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B6946B50(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v48 = (uint64_t)a1;
  uint64_t v49 = v2;
  uint64_t v4 = a1[10];
  uint64_t v52 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  unint64_t v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v55;
  uint64_t v10 = v61;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v53 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v54 = *v15;
  *((void *)&v54 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v54, (uint64_t)&v58);
    if (v61[88] == 255) {
      break;
    }
    uint64_t v20 = v58;
    uint64_t v21 = v60;
    uint64_t v22 = v59;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v54);
    if (v20 == type metadata accessor for GraphScript(0))
    {
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v51[1] > v22)
      {
        uint64_t v50 = *v51;
        uint64_t v25 = *v51 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v49 + 80)
                                                  + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v46 = *(void *)(*(void *)(*(void *)(v49 + 80) + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v47 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v47)
            {
              if (*(void *)(*(void *)(v47 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v47 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v49 + 136) + 8 * *(int *)(v50 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v47)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B69463D0(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v50 + 12 * (int)v22 + 4), (uint64_t)&v54, v49, v20, v22 | (unint64_t)(v21 << 32), v48);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v54);
      uint64_t v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v54);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v53)
    {
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v53) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v53) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v53)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v53)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v52 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v56 = 0;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    char v57 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(*(void *)(v48 + 80) + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for GraphScript);
    swift_bridgeObjectRelease();
    *(void *)(v48 + 80) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(*(void *)(v48 + 80) + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 72));
  swift_release();
  return v42;
}

uint64_t sub_1B694714C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  int v99 = a8;
  uint64_t v109 = a2;
  uint64_t v110 = (uint64_t)a6;
  uint64_t v100 = a3;
  uint64_t v101 = a5;
  uint64_t v103 = a4;
  uint64_t v108 = type metadata accessor for GraphScript(0);
  uint64_t v96 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108, v14);
  uint64_t v97 = v15;
  uint64_t v98 = (uint64_t)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1B6E31288();
  uint64_t v107 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104, v16);
  uint64_t v95 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v89 - v20;
  MEMORY[0x1F4188790](v22, v23);
  uint64_t v106 = (char *)&v89 - v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a11;
  *(void *)(v25 + 24) = a12;
  int v26 = (void *)swift_allocObject();
  v26[2] = sub_1B695BF48;
  v26[3] = v25;
  v26[4] = a10;
  uint64_t v27 = *(void *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  int v28 = a10;
  long long v105 = v28;
  if (v27
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v35 = (void *)swift_allocError();
    *uint64_t v36 = xmmword_1B6E95940;
    if (!*(void *)(a11 + 16))
    {
LABEL_24:
      BOOL v42 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      id v43 = v35;
      os_unfair_lock_lock(v42);
      unint64_t v44 = *(void **)(a11 + 16);
      *(void *)(a11 + 16) = v35;
      id v45 = v35;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v105);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v46 = 0;
    goto LABEL_50;
  }
  uint64_t v93 = v25;
  uint64_t v29 = sub_1B68F1798(v28);
  sub_1B62AC710(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v31 = v30;
  uint64_t v32 = a7 + v30[9];
  char v33 = *(unsigned char *)(v32 + 8);
  uint64_t v102 = v26;
  uint64_t v94 = v29;
  BOOL v34 = (v33 & 1) == 0 && v29 == *(void *)v32;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v37 = *(void *)(a1 + 80);
  if (!*(void *)(v37 + 16) || (unint64_t v38 = sub_1B69FABB0(v108, v110), (v39 & 1) == 0))
  {
    uint64_t v119 = 0;
    long long v117 = 0u;
    long long v118 = 0u;
    long long v115 = 0u;
    long long v116 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v120 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v37 + 56) + 96 * v38, (uint64_t)&aBlock);
  if (v120 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v34) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v113);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v113, (uint64_t)v111);
  if (v112)
  {
    sub_1B69599E0((uint64_t)v111);
    sub_1B69599E0((uint64_t)v113);
    goto LABEL_16;
  }
  uint64_t v47 = v111[0];
  sub_1B69599E0((uint64_t)v113);
  if (v47 != v94) {
    BOOL v34 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v34)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v31[10]))
    {
      uint64_t v35 = *(void **)(a7 + v31[11]);
      id v40 = v35;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v35 = (void *)swift_allocError();
      *uint64_t v41 = xmmword_1B6E4F270;
    }
    if (!*(void *)(a11 + 16) && v35) {
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v47 == v94)
  {
    dispatch_group_leave(v105);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  uint64_t v91 = a11;
  uint64_t v92 = a12;
  sub_1B69596A8(a7, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v90 = swift_allocBox();
  uint64_t v49 = v48;
  sub_1B692F4A4(v48);
  uint64_t v50 = v49 + v31[9];
  uint64_t v51 = v94;
  *(void *)uint64_t v50 = v94;
  *(unsigned char *)(v50 + 8) = 0;
  sub_1B695B610(v109, v49, type metadata accessor for GraphScript);
  sub_1B6959704(v49, a7, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(void *)&long long aBlock = v51;
  unsigned __int8 v120 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, v108, v110);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v52 = *(void *)(a1 + 16);
  swift_retain();
  if (v52)
  {
    uint64_t v53 = v107;
    uint64_t v54 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v21, v52 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v104);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v106, v21, v54);
  }
  else
  {
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1B6E312C8();
    sub_1B6385660(v55, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    sub_1B6E31268();
    uint64_t v54 = v104;
  }
  uint64_t v56 = v95;
  uint64_t v95 = (char *)HIDWORD(v110);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  long long v105 = a9;
  uint64_t v57 = sub_1B6E312C8();
  sub_1B6385660(v57, (uint64_t)qword_1EB997E68);
  uint64_t v58 = sub_1B6E312A8();
  os_signpost_type_t v59 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    unsigned int v60 = v106;
    long long v89 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v89(v56, v106, v54);
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    os_signpost_id_t v62 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v58, v59, v62, "buildScript", "", v61, 2u);
    MEMORY[0x1BA9B84C0](v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v107 + 8))(v56, v54);
    v89(v56, v60, v54);
  }
  else
  {

    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v56, v106, v54);
  }
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v63 = sub_1B6E312F8();
  uint64_t v64 = v98;
  sub_1B695BADC(v109, v98, type metadata accessor for GraphScript);
  unint64_t v65 = (*(unsigned __int8 *)(v96 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  unint64_t v66 = (v97 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v66 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v68 = swift_allocObject();
  uint64_t v69 = v108;
  *(void *)(v68 + 16) = a1;
  *(void *)(v68 + 24) = v69;
  int v70 = v110;
  uint64_t v108 = a1;
  uint64_t v109 = v63;
  uint64_t v71 = v94;
  int v72 = (int)v95;
  *(_DWORD *)(v68 + 32) = v110;
  *(_DWORD *)(v68 + 36) = v72;
  *(void *)(v68 + 40) = v71;
  *(void *)(v68 + 48) = sub_1B6959788;
  *(void *)(v68 + 56) = v102;
  *(void *)(v68 + 64) = v63;
  memcpy((void *)(v68 + 72), v105, 0x148uLL);
  sub_1B695B370(v64, v68 + v65, type metadata accessor for GraphScript);
  uint64_t v73 = (uint64_t *)(v68 + v66);
  uint64_t v74 = v100;
  uint64_t v75 = v101;
  uint64_t v76 = v103;
  *uint64_t v73 = v100;
  v73[1] = v76;
  v73[2] = v75;
  uint64_t v77 = (_DWORD *)(v68 + v67);
  *uint64_t v77 = v70;
  v77[1] = v72;
  *(void *)(v68 + ((v67 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  if (v99)
  {
    uint64_t v78 = *(void **)(v108 + 40);
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = sub_1B695B3D8;
    *(void *)(v79 + 24) = v68;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v105);
    sub_1B62B2DF0(v74, v103);
    uint64_t v80 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v80 != -1) {
      swift_once();
    }
    uint64_t v81 = qword_1EB9854F8;
    swift_retain();
    if (v81 != -1) {
      swift_once();
    }
    uint64_t v82 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    uint64_t v83 = (void *)swift_allocObject();
    v83[2] = v82;
    v83[3] = sub_1B633A540;
    v83[4] = v79;
    *(void *)&long long v116 = sub_1B695BF44;
    *((void *)&v116 + 1) = v83;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v115 = sub_1B639AA00;
    *((void *)&v115 + 1) = &unk_1F0FB8200;
    uint64_t v84 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v78, sel_addOperationWithBlock_, v84);
    _Block_release(v84);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v106, v104);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v110 = *(void *)(v108 + 32);
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = sub_1B695B3D8;
    *(void *)(v85 + 24) = v68;
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = sub_1B633A540;
    *(void *)(v86 + 24) = v85;
    *(void *)&long long v116 = sub_1B633A540;
    *((void *)&v116 + 1) = v86;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v115 = sub_1B691FFC8;
    *((void *)&v115 + 1) = &unk_1F0FB81D8;
    char v87 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v105);
    sub_1B62B2DF0(v74, v103);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v110, v87);
    _Block_release(v87);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v106, v104);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  uint64_t v46 = 1;
LABEL_50:
  swift_release();
  return v46;
}

void sub_1B6947F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v81 = a7;
  uint64_t v68 = a4;
  uint64_t v83 = (uint64_t *)a3;
  uint64_t v67 = a2;
  uint64_t v66 = a1;
  sub_1B695AC28();
  MEMORY[0x1F4188790](v9 - 8, v10);
  long long v89 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v75 = (uint64_t)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v80 = (uint64_t)v65 - v19;
  sub_1B695ACB8();
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v23 = (char *)v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v24, v26);
  uint64_t v77 = (char *)v65 - v28;
  uint64_t v29 = *(void *)(a5 + 16);
  if (v29)
  {
    v65[2] = a6 + 80;
    uint64_t v30 = a5 + 32;
    uint64_t v79 = (void (**)(char *, uint64_t, uint64_t, int *))(v27 + 56);
    unint64_t v31 = (void (**)(void, void, void, void))(v14 + 56);
    v65[1] = a5;
    swift_bridgeObjectRetain();
    uint64_t v32 = (unint64_t *)&unk_1EB97F4D0;
    uint64_t v74 = a6;
    uint64_t v76 = v25;
    uint64_t v33 = (uint64_t)v77;
    uint64_t v78 = v31;
    uint64_t v82 = v23;
    while (1)
    {
      sub_1B69595FC(v30, (uint64_t)&v87);
      if (v88)
      {
        BOOL v34 = v32;
        sub_1B62C15C4(&v87, (uint64_t)v84);
        sub_1B62C1550((uint64_t)v84, (uint64_t)v86);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v35 = swift_dynamicCast();
        uint64_t v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v31;
        if (v35)
        {
          uint64_t v37 = v89;
          v36(v89, 0, 1, v13);
          uint64_t v38 = (uint64_t)v37;
          uint64_t v39 = v80;
          uint64_t v32 = v34;
          sub_1B6959634(v38, v80, v34, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v40 = sub_1B68F3564();
          uint64_t v41 = v39 + *(int *)(v13 + 36);
          if (*(unsigned char *)(v41 + 8))
          {
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v84);
            goto LABEL_18;
          }
          uint64_t v62 = v40;
          uint64_t v63 = *(void *)v41;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v84);
          if (v62 == v63)
          {
            uint64_t v64 = v68;
            sub_1B69596A8(v68, v34, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v32 = v34;
            sub_1B6959634(v80, v64, v34, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          else
          {
LABEL_18:
            sub_1B69596A8(v80, v34, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          uint64_t v23 = v82;
          *uint64_t v81 = 1;
          uint64_t v25 = v76;
          uint64_t v33 = (uint64_t)v77;
LABEL_20:
          unint64_t v31 = v78;
          goto LABEL_4;
        }
        uint64_t v61 = (uint64_t)v89;
        v36(v89, 1, 1, v13);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v84);
        sub_1B695BB44(v61, (uint64_t (*)(void))sub_1B695AC28);
        uint64_t v32 = v34;
        uint64_t v23 = v82;
      }
      else
      {
        sub_1B62C15C4(&v87, (uint64_t)v86);
        sub_1B62C1550((uint64_t)v86, (uint64_t)v84);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v42 = swift_dynamicCast();
        id v43 = *v79;
        if (v42)
        {
          v43(v23, 0, 1, v25);
          sub_1B6959634((uint64_t)v23, v33, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          uint64_t v44 = sub_1B68F3564();
          uint64_t v45 = v33 + *(int *)(v13 + 36);
          if ((*(unsigned char *)(v45 + 8) & 1) == 0 && v44 == *(void *)v45)
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v74 + 72));
            uint64_t v46 = v75;
            sub_1B6959704(v33, v75, v32, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v47 = v83;
            sub_1B695B610((uint64_t)v83, v46, type metadata accessor for SimpleScript);
            uint64_t v48 = *v47;
            uint64_t v49 = v66;
            uint64_t v50 = v46;
            uint64_t v51 = *(void *)(v66 + 16);
            char v52 = *(unsigned char *)(v66 + 184);
            swift_retain();
            if (v52)
            {
              sub_1B6E32BE8();
              __break(1u);
              return;
            }
            uint64_t v53 = *(void *)(v49 + 168);
            uint64_t v73 = type metadata accessor for SimpleScript(0);
            uint64_t v72 = *(unsigned int *)(v53 + 4 * v67);
            uint64_t v71 = *(unsigned int *)(*(void *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v72 + 8);
            swift_bridgeObjectRetain();
            swift_release();
            v84[3] = v13;
            uint64_t v54 = sub_1B62C12C4(v84);
            int v70 = type metadata accessor for SimpleScript;
            uint64_t v69 = type metadata accessor for ScriptCompileAttempt;
            uint64_t v55 = v50;
            uint64_t v56 = v32;
            sub_1B6959704(v55, (uint64_t)v54, v32, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v57 = v77;
            uint64_t v58 = *(void *)&v77[v25[10]];
            v84[4] = *(void *)&v77[v25[9]];
            v84[5] = v58;
            v84[6] = *(void *)&v77[v25[11]];
            sub_1B62D8750(0, &qword_1E9DD2B18, (uint64_t)&type metadata for ParticleScriptRuntime, MEMORY[0x1E4FBB718]);
            v84[10] = v59;
            v84[7] = v48;
            v84[8] = 0;
            char v85 = 1;
            uint64_t v60 = v72 | (v71 << 32);
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v25 = v76;
            swift_bridgeObjectRetain();
            sub_1B6CE14C4((uint64_t)v84, v73, v60);
            sub_1B69596A8(v75, v56, v70, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v69);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 72));
            uint64_t v33 = (uint64_t)v57;
            uint64_t v32 = v56;
            uint64_t v23 = v82;
          }
          sub_1B69596A8(v33, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
          *uint64_t v81 = 1;
          goto LABEL_20;
        }
        v43(v23, 1, 1, v25);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
        sub_1B695BB44((uint64_t)v23, (uint64_t (*)(void))sub_1B695ACB8);
      }
LABEL_4:
      v30 += 48;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B69488AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = a6;
  uint64_t v70 = a4;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v44 - v14;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v64);
  if (v69)
  {
    if (v69 != 1)
    {
      sub_1B69596A8(a1, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v64, v63);
      sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v15, a1, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      uint64_t v60 = v12;
      uint64_t v61 = &off_1F0F836B8;
      id v43 = sub_1B62C12C4(&v58);
      sub_1B6959704(a1, (uint64_t)v43, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v62 = 1;
      sub_1B6CE1380((uint64_t)&v58, v70, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
    }
    uint64_t v52 = v6;
    uint64_t v46 = type metadata accessor for SimpleScript;
    uint64_t v49 = type metadata accessor for ScriptCompileAttempt;
    sub_1B69596A8(a1, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    id v53 = v65;
    uint64_t v48 = v66;
    uint64_t v47 = v67;
    unint64_t v51 = a5;
    sub_1B62B57A8(v64, v63);
    sub_1B62B57A8(&v68, v57);
    uint64_t v22 = MEMORY[0x1E4FBC860];
    *(void *)uint64_t v20 = MEMORY[0x1E4FBC860];
    *((void *)v20 + 1) = 0;
    uint64_t v50 = a3;
    *((void *)v20 + 2) = 0xE000000000000000;
    *((void *)v20 + 3) = &unk_1F0F83D18;
    *((_WORD *)v20 + 16) = 2;
    uint64_t v23 = &v20[*(int *)(type metadata accessor for SimpleScript(0) + 36)];
    uint64_t v24 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    uint64_t v25 = &v20[v12[9]];
    *(void *)uint64_t v25 = 0;
    v25[8] = 1;
    v20[v12[10]] = 0;
    *(void *)&v20[v12[11]] = 0;
    uint64_t v26 = &v20[v12[12]];
    *(void *)uint64_t v26 = 0;
    *((void *)v26 + 1) = 0xE000000000000000;
    *(void *)&v20[v12[13]] = v22;
    uint64_t v27 = v17[9];
    *(void *)&v20[v27] = 0;
    uint64_t v28 = v17[10];
    *(void *)&v20[v28] = 0;
    uint64_t v29 = v17[11];
    *(void *)&v20[v29] = 0;
    *(void *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    uint64_t v30 = &v20[v17[14]];
    *(void *)uint64_t v30 = 0;
    v30[8] = 1;
    unint64_t v31 = (uint64_t *)&v20[v17[15]];
    *unint64_t v31 = 0;
    v31[1] = 0;
    sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
    uint64_t v45 = a1;
    swift_dynamicCast();
    uint64_t v32 = (uint64_t)v15;
    id v33 = v53;
    BOOL v34 = v46;
    sub_1B695A158(v32, (uint64_t)v20, (unint64_t *)&unk_1EB97F4D0, v46, (uint64_t)&off_1EB982058);
    *(void *)&v20[v27] = v33;
    unint64_t v35 = v51;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&v20[v29] = v47;
    swift_bridgeObjectRelease();
    *(void *)&v20[v28] = v48;
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    swift_dynamicCast();
    uint64_t v36 = v55;
    uint64_t v37 = v56;
    sub_1B678FE58(*v31);
    *unint64_t v31 = v36;
    v31[1] = v37;
    uint64_t v38 = v50;
    sub_1B6959704((uint64_t)v20, v45, (unint64_t *)&unk_1EB97F4D0, v34, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49);
    sub_1B6850810((uint64_t)v20, v35);
    uint64_t v60 = v17;
    uint64_t v61 = &off_1F0F61BF0;
    uint64_t v39 = sub_1B62C12C4(&v58);
    sub_1B6959704((uint64_t)v20, (uint64_t)v39, (unint64_t *)&unk_1EB97E740, v34, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v62 = 0;
    sub_1B6CE1380((uint64_t)&v58, v70, v35);
    uint64_t v40 = sub_1B695F66C(v35);
    if (v40)
    {
      sub_1B6920048(v38, v40, v41, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    if (swift_dynamicCast())
    {
      uint64_t v42 = v55;
      swift_bridgeObjectRelease();
      uint64_t v58 = MEMORY[0x1E4FBC860];
      uint64_t v59 = MEMORY[0x1E4FBC860];
      sub_1B6927214(v38, v42);
      swift_bridgeObjectRelease();
      sub_1B6850828(v58, v59, v35);
    }
    else
    {
      sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B63BAF34(v35);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v57);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
        return sub_1B69596A8((uint64_t)v20, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B6949024(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v48 = (uint64_t)a1;
  uint64_t v49 = v2;
  uint64_t v4 = a1[10];
  uint64_t v52 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  unint64_t v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v55;
  uint64_t v10 = v61;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v53 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v54 = *v15;
  *((void *)&v54 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v54, (uint64_t)&v58);
    if (v61[88] == 255) {
      break;
    }
    uint64_t v20 = v58;
    uint64_t v21 = v60;
    uint64_t v22 = v59;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v54);
    if (v20 == type metadata accessor for SimpleScript(0))
    {
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v51[1] > v22)
      {
        uint64_t v50 = *v51;
        uint64_t v25 = *v51 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v49 + 80)
                                                  + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v46 = *(void *)(*(void *)(*(void *)(v49 + 80) + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v47 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v47)
            {
              if (*(void *)(*(void *)(v47 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v47 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v49 + 136) + 8 * *(int *)(v50 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v47)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B69488AC(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v50 + 12 * (int)v22 + 4), (uint64_t)&v54, v49, v20, v22 | (unint64_t)(v21 << 32), v48);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v54);
      uint64_t v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v54);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v53)
    {
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v53) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v53) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v53)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v53)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v52 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v56 = 0;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    char v57 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(*(void *)(v48 + 80) + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for SimpleScript);
    swift_bridgeObjectRelease();
    *(void *)(v48 + 80) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(*(void *)(v48 + 80) + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 72));
  swift_release();
  return v42;
}

uint64_t sub_1B6949620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  int v98 = a8;
  uint64_t v108 = a2;
  uint64_t v109 = (uint64_t)a6;
  uint64_t v99 = a3;
  uint64_t v100 = a5;
  uint64_t v102 = a4;
  uint64_t v107 = type metadata accessor for SimpleScript(0);
  uint64_t v95 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107, v14);
  uint64_t v96 = v15;
  uint64_t v97 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1B6E31288();
  uint64_t v106 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103, v16);
  uint64_t v94 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v88 - v20;
  MEMORY[0x1F4188790](v22, v23);
  long long v105 = (char *)&v88 - v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a11;
  *(void *)(v25 + 24) = a12;
  int v26 = (void *)swift_allocObject();
  v26[2] = sub_1B695BF48;
  v26[3] = v25;
  v26[4] = a10;
  uint64_t v27 = *(void *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  uint64_t v104 = a10;
  if (v27
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v34 = (void *)swift_allocError();
    *uint64_t v35 = xmmword_1B6E95940;
    if (!*(void *)(a11 + 16))
    {
LABEL_24:
      uint64_t v41 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      id v42 = v34;
      os_unfair_lock_lock(v41);
      id v43 = *(void **)(a11 + 16);
      *(void *)(a11 + 16) = v34;
      id v44 = v34;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v104);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v45 = 0;
    goto LABEL_50;
  }
  uint64_t v92 = v25;
  uint64_t v28 = sub_1B68F3564();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v30 = v29;
  uint64_t v31 = a7 + v29[9];
  char v32 = *(unsigned char *)(v31 + 8);
  uint64_t v101 = v26;
  uint64_t v93 = v28;
  BOOL v33 = (v32 & 1) == 0 && v28 == *(void *)v31;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v36 = *(void *)(a1 + 80);
  if (!*(void *)(v36 + 16) || (unint64_t v37 = sub_1B69FABB0(v107, v109), (v38 & 1) == 0))
  {
    uint64_t v118 = 0;
    long long v116 = 0u;
    long long v117 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v119 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v36 + 56) + 96 * v37, (uint64_t)&aBlock);
  if (v119 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v33) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v112);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v112, (uint64_t)v110);
  if (v111)
  {
    sub_1B69599E0((uint64_t)v110);
    sub_1B69599E0((uint64_t)v112);
    goto LABEL_16;
  }
  uint64_t v46 = v110[0];
  sub_1B69599E0((uint64_t)v112);
  if (v46 != v93) {
    BOOL v33 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v33)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v30[10]))
    {
      uint64_t v34 = *(void **)(a7 + v30[11]);
      id v39 = v34;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v34 = (void *)swift_allocError();
      *uint64_t v40 = xmmword_1B6E4F270;
    }
    if (!*(void *)(a11 + 16) && v34) {
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v46 == v93)
  {
    dispatch_group_leave(v104);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  uint64_t v90 = a11;
  uint64_t v91 = a12;
  sub_1B69596A8(a7, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v89 = swift_allocBox();
  uint64_t v48 = v47;
  sub_1B692F388(v47);
  uint64_t v49 = v48 + v30[9];
  uint64_t v50 = v93;
  *(void *)uint64_t v49 = v93;
  *(unsigned char *)(v49 + 8) = 0;
  sub_1B695B610(v108, v48, type metadata accessor for SimpleScript);
  sub_1B6959704(v48, a7, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(void *)&long long aBlock = v50;
  unsigned __int8 v119 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, v107, v109);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v51 = *(void *)(a1 + 16);
  swift_retain();
  if (v51)
  {
    uint64_t v52 = v106;
    uint64_t v53 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v21, v51 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v103);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v105, v21, v53);
  }
  else
  {
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1B6E312C8();
    sub_1B6385660(v54, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    sub_1B6E31268();
    uint64_t v53 = v103;
  }
  uint64_t v55 = v94;
  uint64_t v94 = (char *)HIDWORD(v109);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v104 = a9;
  uint64_t v56 = sub_1B6E312C8();
  sub_1B6385660(v56, (uint64_t)qword_1EB997E68);
  char v57 = sub_1B6E312A8();
  os_signpost_type_t v58 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    int v59 = v105;
    char v88 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
    v88(v55, v105, v53);
    unsigned int v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v60 = 0;
    os_signpost_id_t v61 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v57, v58, v61, "buildScript", "", v60, 2u);
    MEMORY[0x1BA9B84C0](v60, -1, -1);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v53);
    v88(v55, v59, v53);
  }
  else
  {

    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v55, v105, v53);
  }
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v62 = sub_1B6E312F8();
  uint64_t v63 = v97;
  sub_1B695BADC(v108, v97, type metadata accessor for SimpleScript);
  unint64_t v64 = (*(unsigned __int8 *)(v95 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  unint64_t v65 = (v96 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v65 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = v107;
  *(void *)(v67 + 16) = a1;
  *(void *)(v67 + 24) = v68;
  int v69 = v109;
  uint64_t v107 = a1;
  uint64_t v108 = v62;
  uint64_t v70 = v93;
  int v71 = (int)v94;
  *(_DWORD *)(v67 + 32) = v109;
  *(_DWORD *)(v67 + 36) = v71;
  *(void *)(v67 + 40) = v70;
  *(void *)(v67 + 48) = sub_1B6959788;
  *(void *)(v67 + 56) = v101;
  *(void *)(v67 + 64) = v62;
  memcpy((void *)(v67 + 72), v104, 0x148uLL);
  sub_1B695B370(v63, v67 + v64, type metadata accessor for SimpleScript);
  uint64_t v72 = (uint64_t *)(v67 + v65);
  uint64_t v73 = v99;
  uint64_t v74 = v100;
  uint64_t v75 = v102;
  *uint64_t v72 = v99;
  v72[1] = v75;
  v72[2] = v74;
  uint64_t v76 = (_DWORD *)(v67 + v66);
  *uint64_t v76 = v69;
  v76[1] = v71;
  *(void *)(v67 + ((v66 + 15) & 0xFFFFFFFFFFFFFFF8)) = v89;
  if (v98)
  {
    uint64_t v77 = *(void **)(v107 + 40);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = sub_1B695AF40;
    *(void *)(v78 + 24) = v67;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    uint64_t v79 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v79 != -1) {
      swift_once();
    }
    uint64_t v80 = qword_1EB9854F8;
    swift_retain();
    if (v80 != -1) {
      swift_once();
    }
    uint64_t v81 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    uint64_t v82 = (void *)swift_allocObject();
    v82[2] = v81;
    v82[3] = sub_1B633A540;
    v82[4] = v78;
    *(void *)&long long v115 = sub_1B695BF44;
    *((void *)&v115 + 1) = v82;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B639AA00;
    *((void *)&v114 + 1) = &unk_1F0FB8188;
    uint64_t v83 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v77, sel_addOperationWithBlock_, v83);
    _Block_release(v83);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v109 = *(void *)(v107 + 32);
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_1B695AF40;
    *(void *)(v84 + 24) = v67;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = sub_1B633A540;
    *(void *)(v85 + 24) = v84;
    *(void *)&long long v115 = sub_1B633A540;
    *((void *)&v115 + 1) = v85;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B691FFC8;
    *((void *)&v114 + 1) = &unk_1F0FB8160;
    uint64_t v86 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v109, v86);
    _Block_release(v86);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  uint64_t v45 = 1;
LABEL_50:
  swift_release();
  return v45;
}

void sub_1B694A3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v82 = a7;
  uint64_t v74 = a6;
  uint64_t v68 = a2;
  uint64_t v69 = a4;
  uint64_t v67 = a1;
  sub_1B695A7C4();
  MEMORY[0x1F4188790](v10 - 8, v11);
  unint64_t v13 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v84 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v75 = (uint64_t)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v85 = (uint64_t)v66 - v20;
  sub_1B695A854();
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v77 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v83 = v24;
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v28 = (char *)v66 - v27;
  uint64_t v107 = *(void *)(a5 + 16);
  if (v107)
  {
    v66[1] = v7;
    v66[2] = v74 + 80;
    uint64_t v86 = a5 + 32;
    uint64_t v78 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v79 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v26 + 56);
    v66[0] = a5;
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    uint64_t v81 = v13;
    uint64_t v30 = &off_1EB984EE8;
    uint64_t v31 = v83;
    uint64_t v32 = v84;
    uint64_t v33 = (uint64_t)v77;
    uint64_t v80 = v28;
    while (1)
    {
      sub_1B69595FC(v86 + 48 * v29, (uint64_t)v95);
      if (v96) {
        break;
      }
      sub_1B62C15C4(v95, (uint64_t)v94);
      sub_1B62C1550((uint64_t)v94, (uint64_t)&v87);
      sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
      char v42 = swift_dynamicCast();
      id v43 = *v79;
      if ((v42 & 1) == 0)
      {
        v43(v33, 1, 1, v31);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v94);
        uint64_t v34 = sub_1B695A854;
        uint64_t v35 = v33;
LABEL_4:
        sub_1B695BB44(v35, (uint64_t (*)(void))v34);
        goto LABEL_5;
      }
      v43(v33, 0, 1, v31);
      sub_1B6959634(v33, (uint64_t)v28, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)v30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      sub_1B6E33998();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      uint64_t v76 = type metadata accessor for MetalFunctionScript(0);
      uint64_t v44 = *(void *)(a3 + *(int *)(v76 + 28));
      sub_1B6E33928();
      uint64_t v45 = *(void *)(v44 + 16);
      if (v45)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = v44 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          v46 += 16;
          --v45;
        }
        while (v45);
        swift_bridgeObjectRelease();
        uint64_t v30 = &off_1EB984EE8;
      }
      uint64_t v32 = v84;
      uint64_t v28 = v80;
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      long long v99 = v89;
      long long v100 = v90;
      uint64_t v101 = v91;
      long long v97 = v87;
      long long v98 = v88;
      uint64_t v53 = sub_1B6E33978();
      uint64_t v54 = &v28[*(int *)(v32 + 36)];
      if ((v54[8] & 1) == 0 && v53 == *(void *)v54)
      {
        uint64_t v55 = v74;
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v74 + 72));
        uint64_t v56 = (uint64_t)v30;
        uint64_t v57 = v75;
        sub_1B6959704((uint64_t)v28, v75, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, v56, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        sub_1B695B610(a3, v57, type metadata accessor for MetalFunctionScript);
        uint64_t v58 = v67;
        char v59 = *(unsigned char *)(v67 + 184);
        uint64_t v60 = swift_retain();
        if (v59)
        {
          sub_1B6E32BE8();
          __break(1u);
          return;
        }
        uint64_t v61 = *(unsigned int *)(*(void *)(v58 + 168) + 4 * v68);
        uint64_t v70 = *(unsigned int *)(*(void *)(v60 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v61 + 8);
        uint64_t v71 = v61;
        swift_release();
        *((void *)&v88 + 1) = v84;
        uint64_t v62 = sub_1B62C12C4((uint64_t *)&v87);
        uint64_t v73 = type metadata accessor for MetalFunctionScript;
        uint64_t v72 = type metadata accessor for ScriptCompileAttempt;
        sub_1B6959704(v57, (uint64_t)v62, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, v56, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v63 = *(void *)&v28[v83[10]];
        *(void *)&long long v89 = *(void *)&v28[v83[9]];
        *((void *)&v89 + 1) = v63;
        *(void *)&long long v90 = *(void *)&v28[v83[11]];
        sub_1B62D8750(0, &qword_1E9DD2B88, (uint64_t)&type metadata for CodableVoid, MEMORY[0x1E4FBB718]);
        uint64_t v92 = v64;
        BYTE8(v90) = 0;
        char v93 = 1;
        uint64_t v65 = v71 | (v70 << 32);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6CE14C4((uint64_t)&v87, v76, v65);
        sub_1B69596A8(v75, (unint64_t *)&unk_1EB981120, v73, v56, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v72);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 72));
        uint64_t v32 = v84;
        uint64_t v30 = (_UNKNOWN **)v56;
      }
      sub_1B69596A8((uint64_t)v28, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)v30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v94);
      uint64_t v31 = v83;
      *uint64_t v82 = 1;
      uint64_t v33 = (uint64_t)v77;
LABEL_5:
      if (++v29 == v107)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    sub_1B62C15C4(v95, (uint64_t)v94);
    sub_1B62C1550((uint64_t)v94, (uint64_t)&v87);
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
    uint64_t v36 = (uint64_t)v81;
    char v37 = swift_dynamicCast();
    char v38 = *v78;
    if (v37)
    {
      v38(v36, 0, 1, v32);
      sub_1B6959634(v36, v85, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)v30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      sub_1B6E33998();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(a3 + *(int *)(type metadata accessor for MetalFunctionScript(0) + 28));
      sub_1B6E33928();
      uint64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        swift_bridgeObjectRetain();
        uint64_t v41 = v39 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          v41 += 16;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease();
        uint64_t v33 = (uint64_t)v77;
      }
      uint64_t v32 = v84;
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      long long v104 = v89;
      long long v105 = v90;
      uint64_t v106 = v91;
      long long v102 = v87;
      long long v103 = v88;
      uint64_t v47 = sub_1B6E33978();
      uint64_t v48 = (uint64_t *)(v85 + *(int *)(v32 + 36));
      if (v48[1])
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v94);
        goto LABEL_24;
      }
      uint64_t v49 = v47;
      uint64_t v50 = *v48;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v94);
      if (v49 == v50)
      {
        uint64_t v51 = v69;
        sub_1B69596A8(v69, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v52 = v51;
        uint64_t v32 = v84;
        uint64_t v30 = &off_1EB984EE8;
        sub_1B6959634(v85, v52, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      else
      {
LABEL_24:
        sub_1B69596A8(v85, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)v30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      uint64_t v31 = v83;
      uint64_t v28 = v80;
      *uint64_t v82 = 1;
      goto LABEL_5;
    }
    v38(v36, 1, 1, v32);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v94);
    uint64_t v34 = sub_1B695A7C4;
    uint64_t v35 = v36;
    goto LABEL_4;
  }
}

uint64_t sub_1B694AE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  int v98 = a8;
  uint64_t v108 = a2;
  uint64_t v109 = (uint64_t)a6;
  uint64_t v99 = a3;
  uint64_t v100 = a5;
  uint64_t v102 = a4;
  uint64_t v107 = type metadata accessor for MetalFunctionScript(0);
  uint64_t v95 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107, v14);
  uint64_t v96 = v15;
  uint64_t v97 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1B6E31288();
  uint64_t v106 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103, v16);
  uint64_t v94 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v88 - v20;
  MEMORY[0x1F4188790](v22, v23);
  long long v105 = (char *)&v88 - v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a11;
  *(void *)(v25 + 24) = a12;
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = sub_1B695BF48;
  v26[3] = v25;
  v26[4] = a10;
  uint64_t v27 = *(void *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  long long v104 = a10;
  if (v27
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v34 = (void *)swift_allocError();
    *uint64_t v35 = xmmword_1B6E95940;
    if (!*(void *)(a11 + 16))
    {
LABEL_24:
      uint64_t v41 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      id v42 = v34;
      os_unfair_lock_lock(v41);
      id v43 = *(void **)(a11 + 16);
      *(void *)(a11 + 16) = v34;
      id v44 = v34;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v104);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v45 = 0;
    goto LABEL_50;
  }
  uint64_t v92 = v25;
  uint64_t v28 = sub_1B68F4AD0();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v30 = v29;
  uint64_t v31 = a7 + v29[9];
  char v32 = *(unsigned char *)(v31 + 8);
  uint64_t v101 = v26;
  uint64_t v93 = v28;
  BOOL v33 = (v32 & 1) == 0 && v28 == *(void *)v31;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v36 = *(void *)(a1 + 80);
  if (!*(void *)(v36 + 16) || (unint64_t v37 = sub_1B69FABB0(v107, v109), (v38 & 1) == 0))
  {
    uint64_t v118 = 0;
    long long v116 = 0u;
    long long v117 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v119 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v36 + 56) + 96 * v37, (uint64_t)&aBlock);
  if (v119 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v33) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v112);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v112, (uint64_t)v110);
  if (v111)
  {
    sub_1B69599E0((uint64_t)v110);
    sub_1B69599E0((uint64_t)v112);
    goto LABEL_16;
  }
  uint64_t v46 = v110[0];
  sub_1B69599E0((uint64_t)v112);
  if (v46 != v93) {
    BOOL v33 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v33)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v30[10]))
    {
      uint64_t v34 = *(void **)(a7 + v30[11]);
      id v39 = v34;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v34 = (void *)swift_allocError();
      *uint64_t v40 = xmmword_1B6E4F270;
    }
    if (!*(void *)(a11 + 16) && v34) {
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v46 == v93)
  {
    dispatch_group_leave(v104);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  uint64_t v90 = a11;
  uint64_t v91 = a12;
  sub_1B69596A8(a7, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v89 = swift_allocBox();
  uint64_t v48 = v47;
  sub_1B692F250(v47);
  uint64_t v49 = v48 + v30[9];
  uint64_t v50 = v93;
  *(void *)uint64_t v49 = v93;
  *(unsigned char *)(v49 + 8) = 0;
  sub_1B695B610(v108, v48, type metadata accessor for MetalFunctionScript);
  sub_1B6959704(v48, a7, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(void *)&long long aBlock = v50;
  unsigned __int8 v119 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, v107, v109);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v51 = *(void *)(a1 + 16);
  swift_retain();
  if (v51)
  {
    uint64_t v52 = v106;
    uint64_t v53 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v21, v51 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v103);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v105, v21, v53);
  }
  else
  {
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1B6E312C8();
    sub_1B6385660(v54, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    sub_1B6E31268();
    uint64_t v53 = v103;
  }
  uint64_t v55 = v94;
  uint64_t v94 = (char *)HIDWORD(v109);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  long long v104 = a9;
  uint64_t v56 = sub_1B6E312C8();
  sub_1B6385660(v56, (uint64_t)qword_1EB997E68);
  uint64_t v57 = sub_1B6E312A8();
  os_signpost_type_t v58 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    char v59 = v105;
    long long v88 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
    v88(v55, v105, v53);
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v60 = 0;
    os_signpost_id_t v61 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v57, v58, v61, "buildScript", "", v60, 2u);
    MEMORY[0x1BA9B84C0](v60, -1, -1);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v53);
    v88(v55, v59, v53);
  }
  else
  {

    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v55, v105, v53);
  }
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v62 = sub_1B6E312F8();
  uint64_t v63 = v97;
  sub_1B695BADC(v108, v97, type metadata accessor for MetalFunctionScript);
  unint64_t v64 = (*(unsigned __int8 *)(v95 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  unint64_t v65 = (v96 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v65 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = v107;
  *(void *)(v67 + 16) = a1;
  *(void *)(v67 + 24) = v68;
  int v69 = v109;
  uint64_t v107 = a1;
  uint64_t v108 = v62;
  uint64_t v70 = v93;
  int v71 = (int)v94;
  *(_DWORD *)(v67 + 32) = v109;
  *(_DWORD *)(v67 + 36) = v71;
  *(void *)(v67 + 40) = v70;
  *(void *)(v67 + 48) = sub_1B6959788;
  *(void *)(v67 + 56) = v101;
  *(void *)(v67 + 64) = v62;
  memcpy((void *)(v67 + 72), v104, 0x148uLL);
  sub_1B695B370(v63, v67 + v64, type metadata accessor for MetalFunctionScript);
  uint64_t v72 = (uint64_t *)(v67 + v65);
  uint64_t v73 = v99;
  uint64_t v74 = v100;
  uint64_t v75 = v102;
  *uint64_t v72 = v99;
  v72[1] = v75;
  v72[2] = v74;
  uint64_t v76 = (_DWORD *)(v67 + v66);
  *uint64_t v76 = v69;
  v76[1] = v71;
  *(void *)(v67 + ((v66 + 15) & 0xFFFFFFFFFFFFFFF8)) = v89;
  if (v98)
  {
    uint64_t v77 = *(void **)(v107 + 40);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = sub_1B695AB04;
    *(void *)(v78 + 24) = v67;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    uint64_t v79 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v79 != -1) {
      swift_once();
    }
    uint64_t v80 = qword_1EB9854F8;
    swift_retain();
    if (v80 != -1) {
      swift_once();
    }
    uint64_t v81 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    uint64_t v82 = (void *)swift_allocObject();
    v82[2] = v81;
    v82[3] = sub_1B633A540;
    v82[4] = v78;
    *(void *)&long long v115 = sub_1B695BF44;
    *((void *)&v115 + 1) = v82;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B639AA00;
    *((void *)&v114 + 1) = &unk_1F0FB80C0;
    uint64_t v83 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v77, sel_addOperationWithBlock_, v83);
    _Block_release(v83);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v109 = *(void *)(v107 + 32);
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_1B695AB04;
    *(void *)(v84 + 24) = v67;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = sub_1B633A540;
    *(void *)(v85 + 24) = v84;
    *(void *)&long long v115 = sub_1B633A540;
    *((void *)&v115 + 1) = v85;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B691FFC8;
    *((void *)&v114 + 1) = &unk_1F0FB8070;
    uint64_t v86 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v109, v86);
    _Block_release(v86);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  uint64_t v45 = 1;
LABEL_50:
  swift_release();
  return v45;
}

void sub_1B694BC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v71 = a2;
  uint64_t v72 = a4;
  uint64_t v70 = a1;
  sub_1B695A644();
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v85 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v88 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v78 = (uint64_t)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v89 = (uint64_t)v69 - v21;
  sub_1B695A6D4();
  MEMORY[0x1F4188790](v22 - 8, v23);
  uint64_t v86 = (char *)v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v26 = v25;
  MEMORY[0x1F4188790](v25, v27);
  uint64_t v90 = (uint64_t)v69 - v29;
  uint64_t v112 = *(void *)(a5 + 16);
  if (v112)
  {
    uint64_t v79 = v7;
    uint64_t v80 = a6;
    v69[1] = a5;
    _OWORD v69[2] = a6 + 80;
    uint64_t v91 = a5 + 32;
    uint64_t v82 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v28 + 56);
    swift_bridgeObjectRetain();
    uint64_t v30 = 0;
    uint64_t v84 = a7;
    uint64_t v32 = (uint64_t)v85;
    uint64_t v31 = (uint64_t)v86;
    uint64_t v33 = v88;
    long long v87 = v26;
    while (1)
    {
      sub_1B69595FC(v91 + 48 * v30, (uint64_t)v100);
      if (v101)
      {
        sub_1B62C15C4(v100, (uint64_t)v99);
        sub_1B62C1550((uint64_t)v99, (uint64_t)&v92);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v36 = swift_dynamicCast();
        unint64_t v37 = *v82;
        if (v36)
        {
          v37(v32, 0, 1, v33);
          sub_1B6959634(v32, v89, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          sub_1B6E33998();
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          uint64_t v38 = *(void *)(a3 + *(int *)(type metadata accessor for ShaderScript(0) + 28));
          sub_1B6E33928();
          uint64_t v39 = *(void *)(v38 + 16);
          if (v39)
          {
            swift_bridgeObjectRetain();
            uint64_t v40 = v38 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B6E318B8();
              swift_bridgeObjectRelease();
              v40 += 16;
              --v39;
            }
            while (v39);
            swift_bridgeObjectRelease();
            uint64_t v32 = (uint64_t)v85;
          }
          uint64_t v26 = v87;
          uint64_t v33 = v88;
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          long long v109 = v94;
          long long v110 = v95;
          uint64_t v111 = v96;
          long long v107 = v92;
          long long v108 = v93;
          uint64_t v46 = sub_1B6E33978();
          uint64_t v47 = (uint64_t *)(v89 + *(int *)(v33 + 36));
          if (v47[1])
          {
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
            goto LABEL_24;
          }
          uint64_t v48 = v46;
          uint64_t v49 = *v47;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
          if (v48 == v49)
          {
            uint64_t v50 = v72;
            sub_1B69596A8(v72, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v51 = v50;
            uint64_t v26 = v87;
            uint64_t v33 = v88;
            sub_1B6959634(v89, v51, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          else
          {
LABEL_24:
            sub_1B69596A8(v89, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          uint64_t v31 = (uint64_t)v86;
LABEL_35:
          *uint64_t v84 = 1;
          goto LABEL_5;
        }
        v37(v32, 1, 1, v33);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
        uint64_t v34 = sub_1B695A644;
        uint64_t v35 = v32;
      }
      else
      {
        sub_1B62C15C4(v100, (uint64_t)v99);
        sub_1B62C1550((uint64_t)v99, (uint64_t)&v92);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v41 = swift_dynamicCast();
        id v42 = *v83;
        if (v41)
        {
          v42(v31, 0, 1, v26);
          sub_1B6959634(v31, v90, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          sub_1B6E33998();
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          uint64_t v81 = type metadata accessor for ShaderScript(0);
          uint64_t v43 = *(void *)(a3 + *(int *)(v81 + 28));
          sub_1B6E33928();
          uint64_t v44 = *(void *)(v43 + 16);
          if (v44)
          {
            swift_bridgeObjectRetain();
            uint64_t v45 = v43 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B6E318B8();
              swift_bridgeObjectRelease();
              v45 += 16;
              --v44;
            }
            while (v44);
            swift_bridgeObjectRelease();
          }
          uint64_t v26 = v87;
          uint64_t v33 = v88;
          uint64_t v32 = (uint64_t)v85;
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          long long v104 = v94;
          long long v105 = v95;
          uint64_t v106 = v96;
          long long v102 = v92;
          long long v103 = v93;
          uint64_t v52 = sub_1B6E33978();
          uint64_t v53 = v90 + *(int *)(v33 + 36);
          if ((*(unsigned char *)(v53 + 8) & 1) != 0 || v52 != *(void *)v53)
          {
            uint64_t v31 = (uint64_t)v86;
          }
          else
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v80 + 72));
            uint64_t v54 = v90;
            uint64_t v55 = v78;
            sub_1B6959704(v90, v78, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            sub_1B695B610(a3, v55, type metadata accessor for ShaderScript);
            uint64_t v56 = *(void *)(v54 + v26[15]);
            sub_1B68289A0(v56);
            uint64_t v57 = v79;
            sub_1B68F5BA0(2, &v92);
            if (v57)
            {

              sub_1B678FE58(v56);
              uint64_t v76 = 0;
              uint64_t v77 = 0;
            }
            else
            {
              uint64_t v76 = v95;
              uint64_t v77 = *((void *)&v94 + 1);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B678FE58(v56);
            }
            uint64_t v79 = 0;
            uint64_t v58 = v70;
            char v59 = *(unsigned char *)(v70 + 184);
            uint64_t v60 = swift_retain();
            uint64_t v61 = v88;
            if (v59)
            {
              sub_1B6E32BE8();
              __break(1u);
              return;
            }
            uint64_t v62 = *(unsigned int *)(*(void *)(v58 + 168) + 4 * v71);
            uint64_t v73 = *(unsigned int *)(*(void *)(v60 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v62 + 8);
            swift_release();
            *((void *)&v93 + 1) = v61;
            uint64_t v63 = sub_1B62C12C4((uint64_t *)&v92);
            uint64_t v75 = type metadata accessor for ShaderScript;
            uint64_t v74 = type metadata accessor for ScriptCompileAttempt;
            uint64_t v64 = v78;
            sub_1B6959704(v78, (uint64_t)v63, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v26 = v87;
            uint64_t v65 = *(void *)(v90 + v87[10]);
            *(void *)&long long v94 = *(void *)(v90 + v87[9]);
            *((void *)&v94 + 1) = v65;
            *(void *)&long long v95 = *(void *)(v90 + v87[11]);
            sub_1B62D8750(0, (unint64_t *)&unk_1E9DD2B70, (uint64_t)&type metadata for ShaderScriptRuntime, MEMORY[0x1E4FBB718]);
            uint64_t v97 = v66;
            *((void *)&v95 + 1) = v77;
            uint64_t v96 = v76;
            char v98 = 1;
            uint64_t v67 = v62 | (v73 << 32);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B6CE14C4((uint64_t)&v92, v81, v67);
            uint64_t v68 = v64;
            uint64_t v33 = v88;
            sub_1B69596A8(v68, (unint64_t *)&unk_1EB97F4C0, v75, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 72));
            uint64_t v32 = (uint64_t)v85;
            uint64_t v31 = (uint64_t)v86;
          }
          sub_1B69596A8(v90, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
          goto LABEL_35;
        }
        v42(v31, 1, 1, v26);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
        uint64_t v34 = sub_1B695A6D4;
        uint64_t v35 = v31;
      }
      sub_1B695BB44(v35, (uint64_t (*)(void))v34);
LABEL_5:
      if (++v30 == v112)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B694C7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  int v110 = a8;
  uint64_t v120 = a2;
  uint64_t v121 = (uint64_t)a6;
  uint64_t v112 = a4;
  uint64_t v113 = a5;
  uint64_t v111 = a3;
  uint64_t v119 = type metadata accessor for ShaderScript(0);
  uint64_t v108 = *(void *)(v119 - 8);
  uint64_t v14 = *(void *)(v108 + 64);
  MEMORY[0x1F4188790](v119, v15);
  uint64_t v109 = (uint64_t)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1B6E31288();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v115 = v16;
  uint64_t v116 = v17;
  MEMORY[0x1F4188790](v16, v18);
  long long v107 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v106 = (char *)&v98 - v22;
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v118 = (char *)&v98 - v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a11;
  *(void *)(v26 + 24) = a12;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = sub_1B695BF48;
  v27[3] = v26;
  v27[4] = a10;
  uint64_t v28 = *(void *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  long long v117 = a10;
  if (v28
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v35 = (void *)swift_allocError();
    *char v36 = xmmword_1B6E95940;
    if (!*(void *)(a11 + 16))
    {
LABEL_24:
      id v42 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      id v43 = v35;
      os_unfair_lock_lock(v42);
      uint64_t v44 = *(void **)(a11 + 16);
      *(void *)(a11 + 16) = v35;
      id v45 = v35;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v117);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v46 = 0;
    goto LABEL_50;
  }
  uint64_t v104 = v26;
  uint64_t v29 = sub_1B68F5A30();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v31 = v30;
  uint64_t v32 = a7 + v30[9];
  char v33 = *(unsigned char *)(v32 + 8);
  long long v114 = v27;
  uint64_t v105 = v29;
  BOOL v34 = (v33 & 1) == 0 && v29 == *(void *)v32;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v37 = *(void *)(a1 + 80);
  if (!*(void *)(v37 + 16) || (unint64_t v38 = sub_1B69FABB0(v119, v121), (v39 & 1) == 0))
  {
    uint64_t v130 = 0;
    long long v128 = 0u;
    long long v129 = 0u;
    long long v126 = 0u;
    long long v127 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v131 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v37 + 56) + 96 * v38, (uint64_t)&aBlock);
  if (v131 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v34) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v124);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v124, (uint64_t)v122);
  if (v123)
  {
    sub_1B69599E0((uint64_t)v122);
    sub_1B69599E0((uint64_t)v124);
    goto LABEL_16;
  }
  uint64_t v47 = v122[0];
  sub_1B69599E0((uint64_t)v124);
  if (v47 != v105) {
    BOOL v34 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v34)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v31[10]))
    {
      uint64_t v35 = *(void **)(a7 + v31[11]);
      id v40 = v35;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v35 = (void *)swift_allocError();
      *char v41 = xmmword_1B6E4F270;
    }
    if (!*(void *)(a11 + 16) && v35) {
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v47 == v105)
  {
    dispatch_group_leave(v117);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  uint64_t v99 = v14;
  uint64_t v101 = a11;
  uint64_t v102 = a12;
  uint64_t v103 = a1;
  sub_1B69596A8(a7, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v100 = swift_allocBox();
  uint64_t v49 = (void *)v48;
  *(unsigned char *)(v48 + 16) = 1;
  uint64_t v50 = v119;
  uint64_t v51 = v48 + *(int *)(v119 + 24);
  uint64_t v52 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
  *(void *)((char *)v49 + *(int *)(v50 + 28)) = &unk_1F0F835B8;
  void *v49 = 0;
  v49[1] = 0xE000000000000000;
  uint64_t v53 = v31[9];
  *((unsigned char *)v49 + v31[10]) = 0;
  *(void *)((char *)v49 + v31[11]) = 0;
  uint64_t v54 = (char *)v49 + v53;
  uint64_t v55 = (void *)((char *)v49 + v31[12]);
  *uint64_t v55 = 0;
  v55[1] = 0xE000000000000000;
  *(void *)((char *)v49 + v31[13]) = MEMORY[0x1E4FBC860];
  uint64_t v56 = v105;
  *(void *)uint64_t v54 = v105;
  v54[8] = 0;
  sub_1B695B610(v120, (uint64_t)v49, type metadata accessor for ShaderScript);
  uint64_t v57 = v103;
  sub_1B6959704((uint64_t)v49, a7, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v57 + 72));
  *(void *)&long long aBlock = v56;
  unsigned __int8 v131 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, v50, v121);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v57 + 72));
  uint64_t v58 = *(void *)(v57 + 16);
  swift_retain();
  if (v58)
  {
    uint64_t v60 = v115;
    uint64_t v59 = v116;
    uint64_t v61 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v106, v58 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v115);
    swift_release();
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    uint64_t v63 = v118;
    v62(v118, v61, v60);
    uint64_t v64 = v107;
  }
  else
  {
    uint64_t v60 = v115;
    uint64_t v64 = v107;
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_1B6E312C8();
    sub_1B6385660(v65, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    uint64_t v63 = v118;
    sub_1B6E31268();
  }
  long long v107 = (char *)HIDWORD(v121);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v66 = v60;
  long long v117 = a9;
  uint64_t v67 = sub_1B6E312C8();
  sub_1B6385660(v67, (uint64_t)qword_1EB997E68);
  uint64_t v68 = sub_1B6E312A8();
  os_signpost_type_t v69 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    uint64_t v70 = v116;
    uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
    v71(v64, v118, v66);
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v72 = 0;
    os_signpost_id_t v73 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v68, v69, v73, "buildScript", "", v72, 2u);
    MEMORY[0x1BA9B84C0](v72, -1, -1);

    uint64_t v74 = v70;
    uint64_t v63 = v118;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v66);
  }
  else
  {

    uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
  }
  v71(v64, v63, v66);
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v75 = sub_1B6E312F8();
  uint64_t v76 = v109;
  sub_1B695BADC(v120, v109, type metadata accessor for ShaderScript);
  unint64_t v77 = (*(unsigned __int8 *)(v108 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  unint64_t v78 = (v99 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v79 = (v78 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = swift_allocObject();
  uint64_t v81 = v119;
  *(void *)(v80 + 16) = v103;
  *(void *)(v80 + 24) = v81;
  int v82 = v121;
  int v83 = (int)v107;
  *(_DWORD *)(v80 + 32) = v121;
  *(_DWORD *)(v80 + 36) = v83;
  *(void *)(v80 + 40) = v105;
  *(void *)(v80 + 48) = sub_1B6959788;
  *(void *)(v80 + 56) = v114;
  *(void *)(v80 + 64) = v75;
  uint64_t v120 = v75;
  memcpy((void *)(v80 + 72), v117, 0x148uLL);
  sub_1B695B370(v76, v80 + v77, type metadata accessor for ShaderScript);
  uint64_t v84 = (uint64_t *)(v80 + v78);
  uint64_t v86 = v111;
  uint64_t v85 = v112;
  *uint64_t v84 = v111;
  v84[1] = v85;
  v84[2] = v113;
  long long v87 = (_DWORD *)(v80 + v79);
  *long long v87 = v82;
  v87[1] = v83;
  *(void *)(v80 + ((v79 + 15) & 0xFFFFFFFFFFFFFFF8)) = v100;
  if (v110)
  {
    uint64_t v121 = *(void *)(v103 + 40);
    uint64_t v88 = swift_allocObject();
    *(void *)(v88 + 16) = sub_1B695A784;
    *(void *)(v88 + 24) = v80;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v117);
    sub_1B62B2DF0(v86, v85);
    uint64_t v89 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v89 != -1) {
      swift_once();
    }
    uint64_t v90 = qword_1EB9854F8;
    swift_retain();
    if (v90 != -1) {
      swift_once();
    }
    uint64_t v91 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    long long v92 = (void *)swift_allocObject();
    v92[2] = v91;
    v92[3] = sub_1B633A540;
    v92[4] = v88;
    *(void *)&long long v127 = sub_1B695BF44;
    *((void *)&v127 + 1) = v92;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v126 = sub_1B639AA00;
    *((void *)&v126 + 1) = &unk_1F0FB7FD0;
    long long v93 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend((id)v121, sel_addOperationWithBlock_, v93);
    _Block_release(v93);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v115);
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v121 = *(void *)(v103 + 32);
    uint64_t v94 = swift_allocObject();
    *(void *)(v94 + 16) = sub_1B695A784;
    *(void *)(v94 + 24) = v80;
    uint64_t v95 = swift_allocObject();
    *(void *)(v95 + 16) = sub_1B633A540;
    *(void *)(v95 + 24) = v94;
    *(void *)&long long v127 = sub_1B633A540;
    *((void *)&v127 + 1) = v95;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v126 = sub_1B691FFC8;
    *((void *)&v126 + 1) = &unk_1F0FB7F58;
    uint64_t v96 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v117);
    sub_1B62B2DF0(v86, v85);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v121, v96);
    _Block_release(v96);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v115);
    swift_release();
    swift_release_n();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v46 = 1;
LABEL_50:
  swift_release();
  return v46;
}

uint64_t sub_1B694D634(uint64_t a1, uint64_t a2, NSObject *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void), unint64_t *a9, uint64_t (*a10)(uint64_t), uint64_t a11, unint64_t *a12, unint64_t *a13, uint64_t (*a14)(void), uint64_t a15, void (*a16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *), long long *a17, uint64_t **a18, void *a19, uint64_t *a20,void (*a21)(uint64_t),uint64_t *a22)
{
  int v337 = a4;
  uint64_t v317 = a2;
  v321 = a10;
  v320 = a9;
  uint64_t v394 = *MEMORY[0x1E4F143B8];
  uint64_t v314 = a8(0);
  uint64_t v309 = *(void *)(v314 - 8);
  MEMORY[0x1F4188790](v314, v27);
  v326 = (char *)&v306 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29, v30);
  v307 = (char *)&v306 - v31;
  uint64_t v339 = a6;
  uint64_t v340 = a1;
  uint64_t v32 = *(void *)(a1 + 16);
  swift_retain_n();
  uint64_t v338 = a7;
  swift_retain_n();
  swift_retain();
  dispatch_group_t v347 = a3;
  dispatch_group_enter(a3);
  long long v33 = *(_OWORD *)(a5 + 184);
  v355[0] = *(_OWORD *)(a5 + 168);
  v355[1] = v33;
  uint64_t v341 = a5;
  uint64_t v356 = *(void *)(a5 + 200);
  uint64_t v34 = OBJC_IVAR____TtC3VFX13EntityManager_queryManager;
  uint64_t v325 = v32;
  sub_1B62C9DA8(v32, (uint64_t)v355, 0x200000000, v357);
  sub_1B62D7A10((uint64_t)v357, (uint64_t)v385, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v322 = v34;
  if (v385[0])
  {
    int v35 = v387 > 0;
    if (v387 >= 1)
    {
      uint64_t v36 = v386;
      if (v386)
      {
        LODWORD(v318) = v387 > 0;
        uint64_t v37 = v385[5];
        sub_1B62AC710(0, v320, v321, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v39 = v38;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v40 = 48 * v36;
        char v41 = (uint64_t *)(v37 + 40);
        do
        {
          uint64_t v46 = *v41;
          uint64_t v47 = *(os_unfair_lock_s **)(*v41 + 376);
          swift_retain();
          os_unfair_lock_lock(v47);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 344));
          int v48 = *(_DWORD *)(v46 + 24);
          swift_retain();
          memset(v382, 0, 40);
          uint64_t v376 = 0;
          long long v374 = 0u;
          long long v375 = 0u;
          int v49 = sub_1B637F628(v48, v39, (uint64_t)&off_1F0F836B8, 0, 0, (uint64_t)v382, (uint64_t)&v374);
          swift_release();
          sub_1B6386458((uint64_t)&v374);
          sub_1B6386458((uint64_t)v382);
          if (sub_1B63B4340(v49))
          {
            sub_1B66603E4(v49);
          }
          else
          {
            uint64_t v42 = *(void *)(v46 + 232);
            uint64_t v43 = *(void *)(v46 + 240);
            char v44 = *(unsigned char *)(v46 + 120);
            uint64_t v45 = *(unsigned int *)(v46 + 28);
            LOBYTE(v382[0]) = *(unsigned char *)(v46 + 32);
            sub_1B628EEF4(v42, v43, v49, v44, v45 | ((unint64_t)LOBYTE(v382[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 376));
          swift_release();
          v41 += 6;
          v40 -= 48;
        }
        while (v40);
        sub_1B632F170(v357);
        int v35 = v318;
      }
    }
    sub_1B632F170(v357);
  }
  else
  {
    int v35 = 0;
  }
  long long v50 = *(_OWORD *)(v341 + 64);
  v353[0] = *(_OWORD *)(v341 + 48);
  v353[1] = v50;
  uint64_t v354 = *(void *)(v341 + 80);
  sub_1B62C9DA8(v325, (uint64_t)v353, 0x200000000, v358);
  sub_1B62D7A10((uint64_t)v358, (uint64_t)v382, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v382[0])
  {
    if (v384 >= 1)
    {
      uint64_t v51 = v383;
      if (v383)
      {
        uint64_t v52 = v382[5];
        sub_1B62AC710(0, a12, v321, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        uint64_t v54 = v53;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v55 = 48 * v51;
        uint64_t v56 = (uint64_t *)(v52 + 40);
        do
        {
          uint64_t v61 = *v56;
          uint64_t v62 = *(os_unfair_lock_s **)(*v56 + 376);
          swift_retain();
          os_unfair_lock_lock(v62);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v61 + 344));
          int v63 = *(_DWORD *)(v61 + 24);
          swift_retain();
          uint64_t v376 = 0;
          long long v374 = 0u;
          long long v375 = 0u;
          *(void *)&long long v370 = 0;
          long long v368 = 0u;
          long long v369 = 0u;
          int v64 = sub_1B637F628(v63, 0, 0, v54, (uint64_t)&off_1F0F61BF0, (uint64_t)&v374, (uint64_t)&v368);
          swift_release();
          sub_1B6386458((uint64_t)&v368);
          sub_1B6386458((uint64_t)&v374);
          if (sub_1B63B4340(v64))
          {
            sub_1B66603E4(v64);
          }
          else
          {
            uint64_t v57 = *(void *)(v61 + 232);
            uint64_t v58 = *(void *)(v61 + 240);
            char v59 = *(unsigned char *)(v61 + 120);
            uint64_t v60 = *(unsigned int *)(v61 + 28);
            LOBYTE(v374) = *(unsigned char *)(v61 + 32);
            sub_1B628EEF4(v57, v58, v64, v59, v60 | ((unint64_t)v374 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 376));
          swift_release();
          v56 += 6;
          v55 -= 48;
        }
        while (v55);
        sub_1B632F170(v358);
      }
    }
    sub_1B632F170(v358);
    int v35 = 1;
  }
  long long v65 = *(_OWORD *)(v341 + 104);
  v351[0] = *(_OWORD *)(v341 + 88);
  v351[1] = v65;
  uint64_t v352 = *(void *)(v341 + 120);
  sub_1B62C9DA8(v325, (uint64_t)v351, 0x200000000, v359);
  sub_1B62D7A10((uint64_t)v359, (uint64_t)&v374, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v319 = a11;
  if (!(void)v374)
  {
    uint64_t v324 = 0;
    uint64_t v172 = v341;
    goto LABEL_128;
  }
  if (v381 < 1 || (uint64_t v331 = v378) == 0)
  {
    uint64_t v324 = 0;
    uint64_t v172 = v341;
    goto LABEL_127;
  }
  LODWORD(v318) = v35;
  v333 = a22;
  v345 = a21;
  uint64_t v330 = v377;
  uint64_t v66 = (void *)v380;
  uint64_t v67 = *(void *)(v380 + 32);
  int v68 = *(unsigned __int8 *)(v379 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v327 = v380 + 48;
  v334 = (uint64_t **)(v380 + 104);
  sub_1B62AC710(0, a13, v321, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  v349[0] = v374;
  v349[1] = v375;
  uint64_t v350 = v376;
  v335 = v66;
  v323 = v66 + 8;
  v348 = (long long *)v371;
  uint64_t v70 = v69;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v71 = 0;
  uint64_t v324 = 0;
  v329 = (unsigned __int16 *)v67;
  LODWORD(v328) = v68;
  uint64_t v343 = v70;
LABEL_27:
  uint64_t v72 = (unsigned int *)(v330 + 48 * v71);
  uint64_t v73 = *v72;
  v336 = (uint64_t *)v72[1];
  uint64_t v74 = *((void *)v72 + 3);
  v344 = (uint64_t *)*((void *)v72 + 2);
  uint64_t v75 = *((void *)v72 + 5);
  uint64_t v342 = *((void *)v72 + 4);
  uint64_t v332 = v71;
  if (v68)
  {
    uint64_t v76 = *(os_unfair_lock_s **)(v75 + 376);
    swift_retain();
    os_unfair_lock_lock(v76);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v75 + 344));
  }
  else
  {
    swift_retain();
  }
  ecs_stack_allocator_push_snapshot(v67);
  sub_1B62D7A10(v327, (uint64_t)v393, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
  unint64_t v77 = v335;
  uint64_t v78 = v335[4];
  uint64_t v79 = *(void *)(*(void *)(*(void *)(*(void *)(v75 + 40) + 16) + 32) + 16) + 1;
  swift_retain();
  v77[6] = ecs_stack_allocator_allocate(v78, 48 * v79, 8);
  v77[7] = v79;
  uint64_t v80 = v323;
  v323[1] = 0;
  v80[2] = 0;
  *uint64_t v80 = 0;
  swift_release();
  uint64_t v82 = v343;
  uint64_t v81 = v344;
  uint64_t v83 = v342;
  uint64_t v346 = sub_1B62C9024(v343, (uint64_t)&off_1F0F8E108, v344, v74, v342, (uint64_t)v77);
  if (!v81)
  {
    long long v87 = (void (*)(uint64_t))v333;
    if (v73 == v336) {
      goto LABEL_34;
    }
    while (1)
    {
      uint64_t v137 = (uint64_t *)(v73 + 1);
      uint64_t v138 = (uint64_t *)(v346 + 16 * v73);
      uint64_t v139 = *v138;
      uint64_t v140 = v138[1];
      uint64_t v141 = swift_retain();
      sub_1B6920048(v141, v139, v140, v345, v87);
      swift_release();
      uint64_t v142 = *(void *)(*(void *)(v75 + 40) + 16);
      uint64_t v143 = *(void *)(v142 + 128);
      if (*(void *)(v143 + 16))
      {
        unint64_t v144 = sub_1B62C1A30(v82);
        if ((v145 & 1) != 0
          && *(void *)(*(void *)(v142 + 24) + 16 * *(void *)(*(void *)(v143 + 56) + 8 * v144) + 32) == v82)
        {
          v361[0] = v82;
          v361[1] = (uint64_t)&off_1F0F8E108;
          char v362 = 1;
          uint64_t v146 = *v334;
          uint64_t v147 = (*v334)[2];
          if (v147)
          {
            uint64_t v148 = (uint64_t)(v146 + 4);
            swift_retain();
            v344 = v146;
            swift_bridgeObjectRetain();
            uint64_t v149 = 0;
            while (2)
            {
              sub_1B695BADC(v148, (uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
              sub_1B639192C((uint64_t)v363, (uint64_t)&v368);
              sub_1B639192C((uint64_t)v361, (uint64_t)v348);
              switch(BYTE8(v370))
              {
                case 1:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 != 1) {
                    goto LABEL_96;
                  }
                  goto LABEL_105;
                case 2:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 == 2) {
                    goto LABEL_110;
                  }
                  goto LABEL_95;
                case 3:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 == 3)
                  {
LABEL_110:
                    sub_1B62C15C4(v360, (uint64_t)&v390);
                    sub_1B62C15C4(v348, (uint64_t)v388);
                    uint64_t v154 = *((void *)&v391 + 1);
                    uint64_t v155 = v392;
                    sub_1B62C14BC(&v390, *((uint64_t *)&v391 + 1));
                    LOBYTE(v154) = sub_1B6B3D86C(v388, v154, v155);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v388);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v390);
                    sub_1B6391400((uint64_t)&v368);
                    sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v154)
                    {
LABEL_115:
                      swift_bridgeObjectRelease();
                      uint64_t v158 = sub_1B6B1B930();
                      uint64_t v159 = *(void *)(v157 + 48);
                      if (v159)
                      {
                        uint64_t v160 = *(void *)(v157 + 64);
                        *(void *)(v159 + 8 * v160) = v73;
                        *(void *)(v157 + 64) = v160 + 1;
                      }
                      ((void (*)(long long *, void))v158)(&v368, 0);
                      long long v87 = (void (*)(uint64_t))v333;
                      goto LABEL_88;
                    }
                  }
                  else
                  {
LABEL_95:
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v360);
LABEL_96:
                    sub_1B695BB44((uint64_t)&v368, (uint64_t (*)(void))sub_1B691F560);
                    sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  }
LABEL_97:
                  ++v149;
                  v148 += 72;
                  if (v147 != v149) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  long long v87 = (void (*)(uint64_t))v333;
                  break;
                case 4:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 != 4) {
                    goto LABEL_96;
                  }
                  int v150 = LOBYTE(v360[0]);
                  int v151 = v371[0];
                  sub_1B6391400((uint64_t)&v368);
                  sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  if (v150 == v151) {
                    goto LABEL_115;
                  }
                  goto LABEL_97;
                case 5:
                  if (v373 != 5) {
                    goto LABEL_96;
                  }
                  int8x16_t v156 = vorrq_s8(*(int8x16_t *)&v371[8], v372);
                  if (*(void *)&vorr_s8(*(int8x8_t *)v156.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v156, v156, 8uLL)) | *(void *)v371) {
                    goto LABEL_96;
                  }
                  sub_1B6391400((uint64_t)&v368);
                  sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  goto LABEL_115;
                default:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373) {
                    goto LABEL_96;
                  }
LABEL_105:
                  uint64_t v152 = *(void *)&v360[0];
                  uint64_t v153 = *(void *)v371;
                  sub_1B6391400((uint64_t)&v368);
                  sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  if (v152 == v153) {
                    goto LABEL_115;
                  }
                  goto LABEL_97;
              }
              break;
            }
          }
          else
          {
            swift_retain();
          }
          uint64_t v161 = *(void *)(v75 + 240) - *(void *)(v75 + 232);
          uint64_t v162 = v335;
          int v163 = ecs_stack_allocator_allocate(v335[4], 8 * v161, 8);
          void *v163 = v73;
          sub_1B639192C((uint64_t)v361, (uint64_t)&v368);
          *(void *)v371 = v163;
          *(void *)&v371[8] = v161;
          *(void *)&v371[16] = 1;
          uint64_t v164 = (uint64_t *)v162[13];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v162[13] = v164;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v164 = sub_1B68C0C6C(0, v164[2] + 1, 1, v164);
            *v334 = v164;
          }
          unint64_t v167 = v164[2];
          unint64_t v166 = v164[3];
          if (v167 >= v166 >> 1)
          {
            uint64_t v164 = sub_1B68C0C6C(v166 > 1, v167 + 1, 1, v164);
            *v334 = v164;
          }
          v164[2] = v167 + 1;
          int v168 = &v164[9 * v167];
          *((_OWORD *)v168 + 2) = v368;
          long long v169 = v369;
          long long v170 = v370;
          long long v171 = *(_OWORD *)v371;
          v168[12] = *(void *)&v371[16];
          *((_OWORD *)v168 + 4) = v170;
          *((_OWORD *)v168 + 5) = v171;
          *((_OWORD *)v168 + 3) = v169;
LABEL_88:
          uint64_t v82 = v343;
          sub_1B6391400((uint64_t)v361);
          swift_release();
        }
      }
      ++v73;
      if (v137 == v336) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v84 = (void (*)(uint64_t))v333;
  if (!v83) {
    goto LABEL_34;
  }
  uint64_t v85 = v83;
  uint64_t v86 = 0;
LABEL_46:
  uint64_t v99 = v344[v86];
  uint64_t v100 = (uint64_t *)(v346 + 16 * v86);
  uint64_t v101 = *v100;
  uint64_t v102 = v100[1];
  uint64_t v103 = swift_retain();
  uint64_t v104 = v102;
  uint64_t v105 = v343;
  sub_1B6920048(v103, v101, v104, v345, v84);
  swift_release();
  uint64_t v106 = *(void *)(*(void *)(v75 + 40) + 16);
  uint64_t v107 = *(void *)(v106 + 128);
  if (!*(void *)(v107 + 16)) {
    goto LABEL_45;
  }
  unint64_t v108 = sub_1B62C1A30(v105);
  if ((v109 & 1) == 0
    || *(void *)(*(void *)(v106 + 24) + 16 * *(void *)(*(void *)(v107 + 56) + 8 * v108) + 32) != v105)
  {
    goto LABEL_45;
  }
  v361[0] = v105;
  v361[1] = (uint64_t)&off_1F0F8E108;
  char v362 = 1;
  int v110 = *v334;
  uint64_t v111 = (*v334)[2];
  if (!v111)
  {
    swift_retain();
    goto LABEL_77;
  }
  uint64_t v112 = (uint64_t)(v110 + 4);
  swift_retain();
  v336 = v110;
  swift_bridgeObjectRetain();
  uint64_t v113 = 0;
  while (2)
  {
    sub_1B695BADC(v112, (uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
    sub_1B639192C((uint64_t)v363, (uint64_t)&v368);
    sub_1B639192C((uint64_t)v361, (uint64_t)v348);
    switch(BYTE8(v370))
    {
      case 1:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 != 1) {
          goto LABEL_52;
        }
        goto LABEL_67;
      case 2:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 == 2) {
          goto LABEL_64;
        }
        goto LABEL_51;
      case 3:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 != 3)
        {
LABEL_51:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v360);
LABEL_52:
          sub_1B695BB44((uint64_t)&v368, (uint64_t (*)(void))sub_1B691F560);
          sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
          goto LABEL_53;
        }
LABEL_64:
        sub_1B62C15C4(v360, (uint64_t)&v390);
        sub_1B62C15C4(v348, (uint64_t)v388);
        uint64_t v116 = *((void *)&v391 + 1);
        uint64_t v117 = v392;
        sub_1B62C14BC(&v390, *((uint64_t *)&v391 + 1));
        uint64_t v118 = v117;
        uint64_t v85 = v342;
        LOBYTE(v116) = sub_1B6B3D86C(v388, v116, v118);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v388);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v390);
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        if ((v116 & 1) == 0)
        {
LABEL_53:
          ++v113;
          v112 += 72;
          if (v111 == v113)
          {
            swift_bridgeObjectRelease();
            uint64_t v84 = (void (*)(uint64_t))v333;
LABEL_77:
            uint64_t v126 = *(void *)(v75 + 240) - *(void *)(v75 + 232);
            long long v127 = v335;
            long long v128 = ecs_stack_allocator_allocate(v335[4], 8 * v126, 8);
            *long long v128 = v99;
            sub_1B639192C((uint64_t)v361, (uint64_t)&v368);
            *(void *)v371 = v128;
            *(void *)&v371[8] = v126;
            *(void *)&v371[16] = 1;
            long long v129 = (uint64_t *)v127[13];
            char v130 = swift_isUniquelyReferenced_nonNull_native();
            v127[13] = v129;
            if ((v130 & 1) == 0)
            {
              long long v129 = sub_1B68C0C6C(0, v129[2] + 1, 1, v129);
              *v334 = v129;
            }
            unint64_t v132 = v129[2];
            unint64_t v131 = v129[3];
            if (v132 >= v131 >> 1)
            {
              long long v129 = sub_1B68C0C6C(v131 > 1, v132 + 1, 1, v129);
              *v334 = v129;
            }
            v129[2] = v132 + 1;
            uint64_t v133 = &v129[9 * v132];
            *((_OWORD *)v133 + 2) = v368;
            long long v134 = v369;
            long long v135 = v370;
            long long v136 = *(_OWORD *)v371;
            v133[12] = *(void *)&v371[16];
            *((_OWORD *)v133 + 4) = v135;
            *((_OWORD *)v133 + 5) = v136;
            *((_OWORD *)v133 + 3) = v134;
            goto LABEL_44;
          }
          continue;
        }
LABEL_73:
        swift_bridgeObjectRelease();
        char v123 = sub_1B6B1B930();
        uint64_t v124 = *(void *)(v122 + 48);
        if (v124)
        {
          uint64_t v125 = *(void *)(v122 + 64);
          *(void *)(v124 + 8 * v125) = v99;
          *(void *)(v122 + 64) = v125 + 1;
        }
        ((void (*)(long long *, void))v123)(&v368, 0);
        uint64_t v84 = (void (*)(uint64_t))v333;
LABEL_44:
        sub_1B6391400((uint64_t)v361);
        swift_release();
LABEL_45:
        if (++v86 != v85) {
          goto LABEL_46;
        }
LABEL_34:
        uint64_t v88 = v335;
        uint64_t v89 = v324;
        sub_1B6345178(v335, (unsigned __int16 **)v349, (uint64_t)v393);
        uint64_t v324 = v89;
        uint64_t v67 = (uint64_t)v329;
        int v68 = (int)v328;
        if (*(void *)(v88[13] + 16))
        {
          uint64_t v90 = swift_bridgeObjectRetain();
          uint64_t v91 = v335;
          sub_1B639147C(v90, v75);
          swift_bridgeObjectRelease();
          char v92 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v93 = v91[13];
          if (v92)
          {
            sub_1B6399BB8(0, *(void *)(v93 + 16));
          }
          else
          {
            uint64_t v94 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v93 + 24) >= 2uLL)
            {
              sub_1B638C038(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v94 = (void *)swift_allocObject();
              size_t v95 = j__malloc_size(v94);
              v94[2] = 0;
              v94[3] = 2 * ((uint64_t)(v95 - 32) / 72);
            }
            *v334 = v94;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v335[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            uint64_t v96 = *(char **)(v75 + 232);
            uint64_t v97 = *(char **)(v75 + 256);
            if (v96 == v97)
            {
              uint64_t v98 = *(char **)(v75 + 240);
            }
            else
            {
              sub_1B666018C(v97, v96);
              uint64_t v97 = *(char **)(v75 + 232);
              uint64_t v98 = *(char **)(v75 + 240);
              if (v98 == v97)
              {
                uint64_t v98 = 0;
                uint64_t v97 = 0;
                *(void *)(v75 + 232) = 0;
                *(void *)(v75 + 240) = 0;
              }
            }
            *(void *)(v75 + 248) = v98;
            *(void *)(v75 + 256) = v97;
          }
        }
        ecs_stack_allocator_pop_snapshot(v67);
        if (v68)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v75 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v75 + 376));
        }
        swift_release();
        uint64_t v71 = v332 + 1;
        if (v332 + 1 != v331) {
          goto LABEL_27;
        }
        sub_1B632F170(v359);
        uint64_t v172 = v341;
        int v35 = v318;
LABEL_127:
        sub_1B632F170(v359);
LABEL_128:
        uint64_t v173 = a17;
        uint64_t v315 = a15;
        long long v174 = *(_OWORD *)(v172 + 144);
        long long v390 = *(_OWORD *)(v172 + 128);
        long long v391 = v174;
        uint64_t v392 = *(void *)(v172 + 160);
        sub_1B62C9DA8(v325, (uint64_t)&v390, 0x200000000, v360);
        sub_1B62D7A10((uint64_t)v360, (uint64_t)&v368, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        if ((void)v368)
        {
          LODWORD(v318) = v35;
          uint64_t v175 = v372.i64[1];
          uint64_t v176 = v319;
          if (v372.i64[1] >= 1 && (uint64_t v177 = *(void *)&v371[8]) != 0)
          {
            v348 = a17;
            uint64_t v178 = *((void *)&v370 + 1);
            sub_1B62AC710(0, v320, v321, v319, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v180 = v179;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v181 = 48 * v177;
            char v182 = (uint64_t *)(v178 + 40);
            do
            {
              uint64_t v187 = *v182;
              uint64_t v188 = *(os_unfair_lock_s **)(*v182 + 376);
              swift_retain();
              os_unfair_lock_lock(v188);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v187 + 344));
              int v189 = *(_DWORD *)(v187 + 24);
              swift_retain();
              memset(v363, 0, 40);
              memset(v361, 0, sizeof(v361));
              int v190 = sub_1B637F628(v189, 0, 0, v180, (uint64_t)&off_1F0F836B8, (uint64_t)v363, (uint64_t)v361);
              swift_release();
              sub_1B6386458((uint64_t)v361);
              sub_1B6386458((uint64_t)v363);
              if (sub_1B63B4340(v190))
              {
                sub_1B66603E4(v190);
              }
              else
              {
                uint64_t v183 = *(void *)(v187 + 232);
                uint64_t v184 = *(void *)(v187 + 240);
                char v185 = *(unsigned char *)(v187 + 120);
                uint64_t v186 = *(unsigned int *)(v187 + 28);
                LOBYTE(v363[0]) = *(unsigned char *)(v187 + 32);
                sub_1B628EEF4(v183, v184, v190, v185, v186 | ((unint64_t)LOBYTE(v363[0]) << 32));
              }
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v187 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v187 + 376));
              swift_release();
              v182 += 6;
              v181 -= 48;
            }
            while (v181);
            sub_1B632F170((uint64_t *)v360);
            uint64_t v191 = v341;
            uint64_t v176 = v319;
            uint64_t v173 = v348;
          }
          else
          {
            uint64_t v191 = v341;
          }
          sub_1B632F170((uint64_t *)v360);
          BOOL v194 = v175 <= 0;
          int v35 = v318;
          if (!v194) {
            int v35 = 1;
          }
          uint64_t v192 = v340;
          uint64_t v193 = v317;
          if (v317)
          {
LABEL_143:
            v35 |= sub_1B6923F08(v340, v193, a14, v320, v321, v176, v315, a16);
            uint64_t v192 = v340;
            uint64_t v191 = v341;
          }
        }
        else
        {
          uint64_t v192 = v340;
          uint64_t v191 = v341;
          uint64_t v176 = v319;
          uint64_t v193 = v317;
          if (v317) {
            goto LABEL_143;
          }
        }
        int v195 = v35 | ((uint64_t (*)(uint64_t))v173)(v192);
        long long v196 = *(_OWORD *)(v191 + 224);
        v388[0] = *(_OWORD *)(v191 + 208);
        v388[1] = v196;
        uint64_t v389 = *(void *)(v191 + 240);
        sub_1B62C9DA8(v325, (uint64_t)v388, 0x200000000, v361);
        sub_1B62D7A10((uint64_t)v361, (uint64_t)v363, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        uint64_t v197 = (unsigned __int16 *)v363[0];
        if (!v363[0])
        {
LABEL_249:
          if (v195) {
            goto LABEL_250;
          }
          goto LABEL_251;
        }
        if (v367 < 1 || (v313 = v364) == 0)
        {
          sub_1B632F170(v361);
          goto LABEL_249;
        }
        LODWORD(v346) = v195;
        v336 = a20;
        v335 = a19;
        v334 = a18;
        int v198 = v366;
        uint64_t v312 = v363[5];
        v323 = (void *)v366[4];
        LODWORD(v322) = *(unsigned __int8 *)(v365 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        sub_1B62AC710(0, v320, v321, v176, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        v328 = (void *)(v325 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        v344 = v198;
        v310 = v198 + 8;
        uint64_t v311 = v199;
        uint64_t v308 = v199 - 8;
        uint64_t v327 = (uint64_t)v197 + 41;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v200 = 0;
        v329 = v197;
        do
        {
          char v201 = (unsigned int *)(v312 + 48 * (void)v200);
          unint64_t v202 = *v201;
          v345 = (void (*)(uint64_t))v201[1];
          uint64_t v203 = *((void *)v201 + 3);
          v333 = (uint64_t *)*((void *)v201 + 2);
          uint64_t v204 = *((void *)v201 + 4);
          int v205 = (long long *)*((void *)v201 + 5);
          v321 = v200;
          if (v322)
          {
            char v206 = (os_unfair_lock_s *)*((void *)v205 + 47);
            swift_retain();
            os_unfair_lock_lock(v206);
            os_unfair_lock_lock(*((os_unfair_lock_t *)v205 + 43));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot((uint64_t)v323);
          uint64_t v207 = v344;
          char v208 = (unint64_t *)v344[6];
          uint64_t v319 = v344[7];
          v320 = v208;
          uint64_t v209 = v344[8];
          uint64_t v317 = v344[9];
          uint64_t v318 = v209;
          uint64_t v316 = v344[10];
          uint64_t v210 = v344[4];
          uint64_t v211 = *(void *)(*(void *)(*(void *)(*((void *)v205 + 5) + 16) + 32) + 16) + 1;
          swift_retain();
          v207[6] = (uint64_t)ecs_stack_allocator_allocate(v210, 48 * v211, 8);
          v207[7] = v211;
          v212 = v310;
          v310[1] = 0;
          _OWORD v212[2] = 0;
          uint64_t *v212 = 0;
          swift_release();
          uint64_t v213 = v333;
          uint64_t v343 = sub_1B62C9024(v314, v315, v333, v203, v204, (uint64_t)v207);
          uint64_t v342 = sub_1B62C9024(v311, (uint64_t)&off_1F0F836B8, v213, v203, v204, (uint64_t)v207);
          v348 = v205;
          if (v213)
          {
            if (v204)
            {
              uint64_t v214 = 0;
              uint64_t v331 = *(void *)(v309 + 72);
              uint64_t v215 = (uint64_t)v307;
              uint64_t v330 = *(void *)(*(void *)v308 + 72);
              uint64_t v332 = v204;
              while (1)
              {
                uint64_t v216 = v333[v214];
                uint64_t v217 = swift_retain();
                if (*((unsigned char *)v205 + 184)) {
                  break;
                }
                uint64_t v218 = *(int *)(*((void *)v205 + 21) + 4 * v216);
                int v219 = *(_DWORD *)(*(void *)(v217 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                 + 12 * (int)v218
                                 + 8);
                swift_release();
                BOOL v220 = v218 == -1 && v219 == 0;
                if (v220
                  || (v218 & 0x80000000) != 0
                  || v328[1] <= v218
                  || (v219 != -1 ? (BOOL v221 = *(_DWORD *)(*v328 + 12 * (int)v218 + 8) == v219) : (BOOL v221 = 1),
                      !v221
                   || (uint64_t v222 = *(void *)(*(void *)(*(void *)(v325 + 80)
                                                    + 8 * *(__int16 *)(*v328 + 12 * (int)v218 + 6)
                                                    + 32)
                                        + 16),
                       uint64_t v223 = *(void *)(v222 + 128),
                       !*(void *)(v223 + 16))
                   || (unint64_t v224 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), (v225 & 1) == 0)
                   || *(ValueMetadata **)(*(void *)(v222 + 24)
                                        + 16 * *(void *)(*(void *)(v223 + 56) + 8 * v224)
                                        + 32) != &type metadata for Tombstone))
                {
                  dispatch_group_enter(v347);
                  uint64_t v226 = *((void *)v205 + 6);
                  uint64_t v227 = *(void *)(v226 + 16);
                  if (v227)
                  {
                    uint64_t v228 = (void *)(v226 + 56);
                    while ((ValueMetadata *)*(v228 - 3) != &type metadata for ScriptCompileOptions)
                    {
                      v228 += 5;
                      if (!--v227) {
                        goto LABEL_174;
                      }
                    }
                    uint64_t v231 = (unsigned __int8 *)(*((void *)v205 + 16) + *v228 + 24 * v216);
                    uint64_t v229 = *v231;
                    uint64_t v232 = *((void *)v231 + 2);
                    uint64_t v230 = *((void *)v231 + 1);
                    swift_bridgeObjectRetain();
                    uint64_t v346 = v232;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
LABEL_174:
                    uint64_t v229 = 0;
                    uint64_t v230 = 0;
                    uint64_t v346 = 0;
                  }
                  sub_1B695BADC(v343 + v331 * v214, v215, (uint64_t (*)(void))v334);
                  uint64_t v233 = v215;
                  char v234 = *((unsigned char *)v205 + 184);
                  uint64_t v235 = swift_retain();
                  if (v234) {
                    break;
                  }
                  uint64_t v236 = *(unsigned int *)(*((void *)v205 + 21) + 4 * v216);
                  v345 = (void (*)(uint64_t))(v342 + v330 * v214);
                  uint64_t v237 = *(unsigned int *)(*(void *)(v235 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                         + 12 * (int)v236
                                         + 8);
                  swift_release();
                  uint64_t v238 = v236 | (v237 << 32);
                  uint64_t v239 = v339;
                  swift_retain();
                  uint64_t v240 = v338;
                  swift_retain();
                  long long v241 = v347;
                  uint64_t v242 = v238;
                  int v205 = v348;
                  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), void, uint64_t, NSObject *, uint64_t, uint64_t))v335)(v340, v233, v229, v230, v346, v242, v345, v337 & 1, v341, v241, v239, v240);

                  swift_release();
                  swift_release();
                  sub_1B677C3D4(v229, v230);
                  sub_1B695BB44(v233, (uint64_t (*)(void))v336);
                  uint64_t v215 = v233;
                  uint64_t v204 = v332;
                }
                if (++v214 == v204) {
                  goto LABEL_208;
                }
              }
LABEL_254:
              swift_release_n();
              swift_release_n();
              sub_1B6E32BE8();
              __break(1u);
              JUMPOUT(0x1B694F6A8);
            }
          }
          else if (v202 != v345)
          {
            v333 = *(uint64_t **)(v309 + 72);
            uint64_t v332 = *(void *)(*(void *)v308 + 72);
            do
            {
              uint64_t v243 = swift_retain();
              if (*((unsigned char *)v205 + 184)) {
                goto LABEL_254;
              }
              uint64_t v244 = *(int *)(*((void *)v205 + 21) + 4 * v202);
              int v245 = *(_DWORD *)(*(void *)(v243 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v244 + 8);
              swift_release();
              BOOL v246 = v244 == -1 && v245 == 0;
              if (v246
                || (v244 & 0x80000000) != 0
                || v328[1] <= v244
                || (v245 != -1 ? (BOOL v247 = *(_DWORD *)(*v328 + 12 * (int)v244 + 8) == v245) : (BOOL v247 = 1),
                    !v247
                 || (uint64_t v248 = *(void *)(*(void *)(*(void *)(v325 + 80)
                                                  + 8 * *(__int16 *)(*v328 + 12 * (int)v244 + 6)
                                                  + 32)
                                      + 16),
                     uint64_t v249 = *(void *)(v248 + 128),
                     !*(void *)(v249 + 16))
                 || (unint64_t v250 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), (v251 & 1) == 0)
                 || *(ValueMetadata **)(*(void *)(v248 + 24)
                                      + 16 * *(void *)(*(void *)(v249 + 56) + 8 * v250)
                                      + 32) != &type metadata for Tombstone))
              {
                dispatch_group_enter(v347);
                uint64_t v252 = *((void *)v205 + 6);
                uint64_t v253 = *(void *)(v252 + 16);
                if (v253)
                {
                  uint64_t v254 = (void *)(v252 + 56);
                  uint64_t v255 = (uint64_t)v326;
                  while ((ValueMetadata *)*(v254 - 3) != &type metadata for ScriptCompileOptions)
                  {
                    v254 += 5;
                    if (!--v253)
                    {
                      uint64_t v256 = 0;
                      uint64_t v257 = 0;
                      uint64_t v258 = 0;
                      goto LABEL_205;
                    }
                  }
                  int v259 = (unsigned __int8 *)(*((void *)v205 + 16) + *v254 + 24 * v202);
                  uint64_t v256 = *v259;
                  uint64_t v260 = *((void *)v259 + 2);
                  uint64_t v257 = *((void *)v259 + 1);
                  swift_bridgeObjectRetain();
                  uint64_t v258 = v260;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  uint64_t v256 = 0;
                  uint64_t v257 = 0;
                  uint64_t v258 = 0;
                }
                uint64_t v255 = (uint64_t)v326;
LABEL_205:
                sub_1B695BADC(v343 + (void)v333 * v202, v255, (uint64_t (*)(void))v334);
                char v261 = *((unsigned char *)v205 + 184);
                uint64_t v262 = swift_retain();
                if (v261) {
                  goto LABEL_254;
                }
                uint64_t v263 = *(unsigned int *)(*((void *)v205 + 21) + 4 * v202);
                uint64_t v346 = v342 + v332 * v202;
                uint64_t v264 = *(unsigned int *)(*(void *)(v262 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                       + 12 * (int)v263
                                       + 8);
                swift_release();
                uint64_t v265 = v263 | (v264 << 32);
                uint64_t v266 = v339;
                swift_retain();
                uint64_t v267 = (void (*)(uint64_t))v202;
                uint64_t v268 = v338;
                swift_retain();
                long long v269 = v347;
                ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, NSObject *, uint64_t, uint64_t))v335)(v340, v255, v256, v257, v258, v265, v346, v337 & 1, v341, v269, v266, v268);

                int v205 = v348;
                swift_release();
                unint64_t v202 = (unint64_t)v267;
                swift_release();
                sub_1B677C3D4(v256, v257);
                sub_1B695BB44(v255, (uint64_t (*)(void))v336);
              }
              ++v202;
            }
            while ((void (*)(uint64_t))v202 != v345);
LABEL_208:
            LODWORD(v346) = 1;
          }
          uint64_t v270 = v344;
          unint64_t v271 = v344[6];
          uint64_t v272 = v344[8];
          if (!v272)
          {
            uint64_t v298 = v344[7];
            char v299 = (void *)v344[4];
            char v301 = v344;
            uint64_t v300 = v321;
            goto LABEL_246;
          }
          uint64_t v273 = 0;
          uint64_t v274 = v344[6];
          do
          {
            char v276 = (uint64_t *)(v271 + 48 * v273);
            uint64_t v277 = *v276;
            uint64_t v278 = (void (*)(uint64_t))v276[4];
            uint64_t v279 = v270[9];
            if (v279) {
              BOOL v280 = v277 == v279;
            }
            else {
              BOOL v280 = 0;
            }
            if (v280 || !v329[11]) {
              goto LABEL_211;
            }
            unint64_t v281 = v329[9];
            char v282 = (void *)(v327 + v329[8]);
            uint64_t v283 = v276[2];
            v284 = v282;
            unint64_t v285 = v281 >> 4;
            uint64_t v286 = v327;
            if (v281 >= 0x10)
            {
              while (*v284 != v277)
              {
                ++v286;
                v284 += 2;
                if (!--v285) {
                  goto LABEL_226;
                }
              }
              unsigned int v287 = *(unsigned __int8 *)(v286 + v329[10]);
              BOOL v194 = v287 > 5;
              int v288 = (1 << v287) & 0x23;
              if (v194 || v288 == 0)
              {
LABEL_211:
                uint64_t v275 = swift_retain();
                v278(v275);
                swift_release();
                goto LABEL_212;
              }
            }
LABEL_226:
            if (swift_conformsToProtocol2()) {
              uint64_t v290 = v283;
            }
            else {
              uint64_t v290 = 0;
            }
            if (v290)
            {
              uint64_t v291 = v282;
              unint64_t v292 = v281 >> 4;
              uint64_t v293 = v327;
              if (v281 < 0x10) {
                goto LABEL_211;
              }
              while (*v291 != v290)
              {
                ++v293;
                v291 += 2;
                if (!--v292) {
                  goto LABEL_238;
                }
              }
              unsigned int v294 = *(unsigned __int8 *)(v293 + v329[10]);
              BOOL v194 = v294 > 5;
              int v295 = (1 << v294) & 0x23;
              if (v194 || v295 == 0) {
                goto LABEL_211;
              }
LABEL_238:
              uint64_t v297 = 16 * (v281 >> 4);
              while (*v282 != v290)
              {
                v282 += 2;
                v297 -= 16;
                if (!v297) {
                  goto LABEL_211;
                }
              }
            }
LABEL_212:
            uint64_t v270 = v344;
            ++v273;
            int v205 = v348;
            unint64_t v271 = v274;
          }
          while (v273 != v272);
          uint64_t v298 = v344[7];
          unint64_t v271 = v344[6];
          char v299 = (void *)v344[4];
          uint64_t v300 = v321;
          if (v344[8] >= 1) {
            swift_arrayDestroy();
          }
          char v301 = v344;
LABEL_246:
          ecs_stack_allocator_deallocate(v299, v271, 48 * v298);
          uint64_t v302 = v319;
          v301[6] = (uint64_t)v320;
          v301[7] = v302;
          uint64_t v303 = v317;
          v301[8] = v318;
          v301[9] = v303;
          v301[10] = v316;
          sub_1B634507C((char *)v205);
          ecs_stack_allocator_pop_snapshot((uint64_t)v323);
          if (v322)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v205 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v205 + 47));
          }
          swift_release();
          uint64_t v200 = (uint64_t (*)(uint64_t))((char *)v300 + 1);
        }
        while (v200 != v313);
        sub_1B632F170(v361);
        sub_1B632F170(v361);
        if ((v346 & 1) == 0) {
          goto LABEL_251;
        }
LABEL_250:
        uint64_t v304 = swift_retain();
        sub_1B6925104(v304);
        swift_release();
LABEL_251:
        dispatch_group_leave(v347);
        swift_release_n();
        swift_release_n();
        return swift_release();
      case 4:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 != 4) {
          goto LABEL_52;
        }
        int v114 = LOBYTE(v360[0]);
        int v115 = v371[0];
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v220 = v114 == v115;
        uint64_t v85 = v342;
        if (!v220) {
          goto LABEL_53;
        }
        goto LABEL_73;
      case 5:
        if (v373 != 5) {
          goto LABEL_52;
        }
        int8x16_t v121 = vorrq_s8(*(int8x16_t *)&v371[8], v372);
        if (*(void *)&vorr_s8(*(int8x8_t *)v121.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v121, v121, 8uLL)) | *(void *)v371) {
          goto LABEL_52;
        }
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        goto LABEL_73;
      default:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373) {
          goto LABEL_52;
        }
LABEL_67:
        uint64_t v119 = *(void *)&v360[0];
        uint64_t v120 = *(void *)v371;
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v220 = v119 == v120;
        uint64_t v85 = v342;
        if (!v220) {
          goto LABEL_53;
        }
        goto LABEL_73;
    }
  }
}

void sub_1B694F6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v88 = a7;
  uint64_t v72 = a4;
  uint64_t v83 = a3;
  uint64_t v71 = a2;
  uint64_t v70 = a1;
  sub_1B695A1DC();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v100 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v81 = (uint64_t)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v87 = (uint64_t)v69 - v19;
  sub_1B695A26C();
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v23 = (char *)v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v84 = v24;
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v89 = (uint64_t)v69 - v27;
  uint64_t v28 = *(void *)(a5 + 16);
  if (v28)
  {
    v69[1] = a6 + 80;
    uint64_t v29 = a5 + 32;
    uint64_t v30 = (void (**)(void, void, void, void))(v26 + 56);
    uint64_t v85 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v69[0] = a5;
    swift_bridgeObjectRetain();
    uint64_t v80 = a6;
    uint64_t v31 = v83;
    uint64_t v79 = v12;
    uint64_t v32 = v84;
    uint64_t v86 = v30;
    while (1)
    {
      sub_1B69595FC(v29, (uint64_t)&v98);
      if (v99) {
        break;
      }
      sub_1B62C15C4(&v98, (uint64_t)v97);
      sub_1B62C1550((uint64_t)v97, (uint64_t)v90);
      sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
      char v41 = swift_dynamicCast();
      uint64_t v42 = (void (*)(char *, uint64_t, uint64_t, int *))*v30;
      if ((v41 & 1) == 0)
      {
        v42(v23, 1, 1, v32);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
        long long v33 = sub_1B695A26C;
        uint64_t v34 = (uint64_t)v23;
LABEL_4:
        sub_1B695BB44(v34, (uint64_t (*)(void))v33);
        goto LABEL_5;
      }
      v42(v23, 0, 1, v32);
      uint64_t v43 = v89;
      sub_1B6959634((uint64_t)v23, v89, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      uint64_t v44 = sub_1B68EF1F8();
      uint64_t v45 = v43 + *(int *)(v100 + 36);
      if ((*(unsigned char *)(v45 + 8) & 1) == 0 && v44 == *(void *)v45)
      {
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v80 + 72));
        uint64_t v46 = v89;
        uint64_t v47 = v81;
        sub_1B6959704(v89, v81, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        sub_1B695B610(v31, v47, type metadata accessor for ParticleInitScript);
        uint64_t v48 = *(void *)(v46 + v32[15]);
        int v49 = *(void **)(v31 + 24);
        if (v49[2])
        {
          uint64_t v50 = v49[5];
          uint64_t v78 = v49[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v78 = 0;
          uint64_t v50 = 0;
        }
        uint64_t v54 = v83;
        unsigned __int8 v55 = *(unsigned char *)v83;
        uint64_t v77 = *(void *)(v83 + 8);
        uint64_t inited = *(void *)(v83 + 16);
        sub_1B62D19E4(v48);
        uint64_t v56 = v82;
        uint64_t v57 = sub_1B68EF498();
        if (v56)
        {
          swift_bridgeObjectRelease();

          sub_1B678FE58(v48);
          uint64_t v78 = 0;
          uint64_t v77 = 0;
          int v68 = 0;
        }
        else
        {
          sub_1B68EEEBC(v78, v50, v55, v77, inited, (uint64_t)v57, 1, *(void *)(*(void *)(v54 + 32) + 16) == 0, v90, 2u);
          uint64_t v82 = 0;
          uint64_t v78 = v91;
          uint64_t v77 = v92;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v68 = v82;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B678FE58(v48);
        }
        uint64_t v58 = v70;
        uint64_t v82 = v68;
        uint64_t v59 = *(void *)(v70 + 16);
        char v60 = *(unsigned char *)(v70 + 184);
        swift_retain();
        if (v60)
        {
          sub_1B6E32BE8();
          __break(1u);
          return;
        }
        uint64_t v61 = *(void *)(v58 + 168);
        uint64_t inited = type metadata accessor for ParticleInitScript(0);
        uint64_t v62 = *(unsigned int *)(v61 + 4 * v71);
        uint64_t v73 = *(unsigned int *)(*(void *)(v59 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v62 + 8);
        swift_release();
        v90[3] = v100;
        int v63 = sub_1B62C12C4(v90);
        uint64_t v75 = type metadata accessor for ParticleInitScript;
        uint64_t v74 = type metadata accessor for ScriptCompileAttempt;
        uint64_t v64 = v81;
        sub_1B6959704(v81, (uint64_t)v63, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v32 = v84;
        uint64_t v65 = *(void *)(v89 + v84[10]);
        void v90[4] = *(void *)(v89 + v84[9]);
        uint64_t v91 = v65;
        uint64_t v92 = *(void *)(v89 + v84[11]);
        sub_1B62D8750(0, &qword_1E9DD2B18, (uint64_t)&type metadata for ParticleScriptRuntime, MEMORY[0x1E4FBB718]);
        uint64_t v95 = v66;
        uint64_t v93 = v78;
        uint64_t v94 = v77;
        char v96 = 1;
        uint64_t v67 = v62 | (v73 << 32);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6CE14C4((uint64_t)v90, inited, v67);
        sub_1B69596A8(v64, (unint64_t *)&unk_1EB97F4A0, v75, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 72));
        uint64_t v31 = v83;
        uint64_t v12 = v79;
      }
      uint64_t v30 = v86;
      sub_1B69596A8(v89, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
      *uint64_t v88 = 1;
LABEL_5:
      v29 += 48;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    sub_1B62C15C4(&v98, (uint64_t)v90);
    sub_1B62C1550((uint64_t)v90, (uint64_t)v97);
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
    char v35 = swift_dynamicCast();
    uint64_t v36 = *v85;
    if (v35)
    {
      uint64_t v37 = v100;
      v36(v12, 0, 1, v100);
      uint64_t v38 = v87;
      sub_1B6959634((uint64_t)v12, v87, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      uint64_t v39 = sub_1B68EF1F8();
      uint64_t v40 = v38 + *(int *)(v37 + 36);
      if (*(unsigned char *)(v40 + 8))
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
        goto LABEL_18;
      }
      uint64_t v51 = v39;
      uint64_t v52 = *(void *)v40;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
      if (v51 == v52)
      {
        uint64_t v53 = v72;
        sub_1B69596A8(v72, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v31 = v83;
        uint64_t v12 = v79;
        sub_1B6959634(v87, v53, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      else
      {
LABEL_18:
        sub_1B69596A8(v87, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      *uint64_t v88 = 1;
      uint64_t v32 = v84;
      uint64_t v30 = v86;
      goto LABEL_5;
    }
    v36(v12, 1, 1, v100);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
    long long v33 = sub_1B695A1DC;
    uint64_t v34 = (uint64_t)v12;
    goto LABEL_4;
  }
}

uint64_t sub_1B69501FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = a6;
  uint64_t v70 = a4;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v44 - v14;
  sub_1B62AC710(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v64);
  if (v69)
  {
    if (v69 != 1)
    {
      sub_1B69596A8(a1, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v64, v63);
      sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v15, a1, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v60 = v12;
      uint64_t v61 = &off_1F0F836B8;
      uint64_t v43 = sub_1B62C12C4(&v58);
      sub_1B6959704(a1, (uint64_t)v43, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v62 = 1;
      sub_1B6CE1380((uint64_t)&v58, v70, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
    }
    uint64_t v52 = v6;
    uint64_t v46 = type metadata accessor for ParticleInitScript;
    int v49 = type metadata accessor for ScriptCompileAttempt;
    sub_1B69596A8(a1, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    id v53 = v65;
    uint64_t v48 = v66;
    uint64_t v47 = v67;
    unint64_t v51 = a5;
    sub_1B62B57A8(v64, v63);
    sub_1B62B57A8(&v68, v57);
    *uint64_t v20 = 0;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    *((void *)v20 + 4) = MEMORY[0x1E4FBC860];
    v20[40] = 0;
    uint64_t v23 = &v20[*(int *)(type metadata accessor for ParticleInitScript(0) + 36)];
    uint64_t v24 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    *((void *)v20 + 1) = 0xD0000000000000BFLL;
    *((void *)v20 + 2) = 0x80000001B6F33DE0;
    *((void *)v20 + 3) = &unk_1F0F83C18;
    uint64_t v25 = &v20[v12[9]];
    *(void *)uint64_t v25 = 0;
    v25[8] = 1;
    v20[v12[10]] = 0;
    *(void *)&v20[v12[11]] = 0;
    uint64_t v26 = &v20[v12[12]];
    *(void *)uint64_t v26 = 0;
    *((void *)v26 + 1) = 0xE000000000000000;
    *(void *)&v20[v12[13]] = v22;
    uint64_t v27 = v17[9];
    *(void *)&v20[v27] = 0;
    uint64_t v50 = a3;
    uint64_t v28 = v17[10];
    *(void *)&v20[v28] = 0;
    uint64_t v29 = v17[11];
    *(void *)&v20[v29] = 0;
    *(void *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    uint64_t v30 = &v20[v17[14]];
    *(void *)uint64_t v30 = 0;
    v30[8] = 1;
    uint64_t v31 = (uint64_t *)&v20[v17[15]];
    *uint64_t v31 = 0;
    v31[1] = 0;
    sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
    uint64_t v45 = a1;
    swift_dynamicCast();
    uint64_t v32 = (uint64_t)v15;
    id v33 = v53;
    uint64_t v34 = v46;
    sub_1B695A158(v32, (uint64_t)v20, (unint64_t *)&unk_1EB97F4A0, v46, (uint64_t)&off_1EB982C10);
    *(void *)&v20[v27] = v33;
    unint64_t v35 = v51;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&v20[v29] = v47;
    swift_bridgeObjectRelease();
    *(void *)&v20[v28] = v48;
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    swift_dynamicCast();
    uint64_t v36 = v55;
    uint64_t v37 = v56;
    sub_1B678FE58(*v31);
    *uint64_t v31 = v36;
    v31[1] = v37;
    uint64_t v38 = v50;
    sub_1B6959704((uint64_t)v20, v45, (unint64_t *)&unk_1EB97F4A0, v34, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49);
    sub_1B6850780((uint64_t)v20, v35);
    char v60 = v17;
    uint64_t v61 = &off_1F0F61BF0;
    uint64_t v39 = sub_1B62C12C4(&v58);
    sub_1B6959704((uint64_t)v20, (uint64_t)v39, &qword_1EB97E700, v34, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v62 = 0;
    sub_1B6CE1380((uint64_t)&v58, v70, v35);
    uint64_t v40 = sub_1B695F5F4(v35);
    if (v40)
    {
      sub_1B6920048(v38, v40, v41, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    if (swift_dynamicCast())
    {
      uint64_t v42 = v55;
      swift_bridgeObjectRelease();
      uint64_t v58 = MEMORY[0x1E4FBC860];
      uint64_t v59 = MEMORY[0x1E4FBC860];
      sub_1B6927214(v38, v42);
      swift_bridgeObjectRelease();
      sub_1B6850798(v58, v59, v35);
    }
    else
    {
      sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B63BAF34(v35);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v57);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
        return sub_1B69596A8((uint64_t)v20, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B6950990(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v48 = (uint64_t)a1;
  uint64_t v49 = v2;
  uint64_t v4 = a1[10];
  uint64_t v52 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  unint64_t v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v55;
  uint64_t v10 = v61;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v53 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v54 = *v15;
  *((void *)&v54 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v54, (uint64_t)&v58);
    if (v61[88] == 255) {
      break;
    }
    uint64_t v20 = v58;
    uint64_t v21 = v60;
    uint64_t v22 = v59;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v54);
    if (v20 == type metadata accessor for ParticleInitScript(0))
    {
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v51[1] > v22)
      {
        uint64_t v50 = *v51;
        uint64_t v25 = *v51 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v49 + 80)
                                                  + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v46 = *(void *)(*(void *)(*(void *)(v49 + 80) + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v47 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v47)
            {
              if (*(void *)(*(void *)(v47 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v47 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v49 + 136) + 8 * *(int *)(v50 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v47)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B69501FC(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v50 + 12 * (int)v22 + 4), (uint64_t)&v54, v49, v20, v22 | (unint64_t)(v21 << 32), v48);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v54);
      uint64_t v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v54);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v53)
    {
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v53) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v53) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v53)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v53)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v52 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v56 = 0;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    char v57 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(*(void *)(v48 + 80) + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for ParticleInitScript);
    swift_bridgeObjectRelease();
    *(void *)(v48 + 80) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(*(void *)(v48 + 80) + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 72));
  swift_release();
  return v42;
}

uint64_t sub_1B6950F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  int v98 = a8;
  uint64_t v108 = a2;
  uint64_t v109 = (uint64_t)a6;
  uint64_t v99 = a3;
  uint64_t v100 = a5;
  uint64_t v102 = a4;
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  uint64_t v95 = *(void *)(inited - 8);
  MEMORY[0x1F4188790](inited, v14);
  uint64_t v96 = v15;
  uint64_t v97 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1B6E31288();
  uint64_t v106 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103, v16);
  uint64_t v94 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v88 - v20;
  MEMORY[0x1F4188790](v22, v23);
  uint64_t v105 = (char *)&v88 - v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a11;
  *(void *)(v25 + 24) = a12;
  int v26 = (void *)swift_allocObject();
  v26[2] = sub_1B695BF48;
  v26[3] = v25;
  v26[4] = a10;
  uint64_t v27 = *(void *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  uint64_t v104 = a10;
  if (v27
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v34 = (void *)swift_allocError();
    *uint64_t v35 = xmmword_1B6E95940;
    if (!*(void *)(a11 + 16))
    {
LABEL_24:
      uint64_t v41 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      id v42 = v34;
      os_unfair_lock_lock(v41);
      uint64_t v43 = *(void **)(a11 + 16);
      *(void *)(a11 + 16) = v34;
      id v44 = v34;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v104);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v45 = 0;
    goto LABEL_50;
  }
  uint64_t v92 = v25;
  uint64_t v28 = sub_1B68EF1F8();
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v30 = v29;
  uint64_t v31 = a7 + v29[9];
  char v32 = *(unsigned char *)(v31 + 8);
  uint64_t v101 = v26;
  uint64_t v93 = v28;
  BOOL v33 = (v32 & 1) == 0 && v28 == *(void *)v31;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v36 = *(void *)(a1 + 80);
  if (!*(void *)(v36 + 16) || (unint64_t v37 = sub_1B69FABB0(inited, v109), (v38 & 1) == 0))
  {
    uint64_t v118 = 0;
    long long v116 = 0u;
    long long v117 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v119 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v36 + 56) + 96 * v37, (uint64_t)&aBlock);
  if (v119 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v33) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v112);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v112, (uint64_t)v110);
  if (v111)
  {
    sub_1B69599E0((uint64_t)v110);
    sub_1B69599E0((uint64_t)v112);
    goto LABEL_16;
  }
  uint64_t v46 = v110[0];
  sub_1B69599E0((uint64_t)v112);
  if (v46 != v93) {
    BOOL v33 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v33)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v30[10]))
    {
      uint64_t v34 = *(void **)(a7 + v30[11]);
      id v39 = v34;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v34 = (void *)swift_allocError();
      *uint64_t v40 = xmmword_1B6E4F270;
    }
    if (!*(void *)(a11 + 16) && v34) {
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v46 == v93)
  {
    dispatch_group_leave(v104);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  uint64_t v90 = a11;
  uint64_t v91 = a12;
  sub_1B69596A8(a7, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v89 = swift_allocBox();
  uint64_t v48 = v47;
  sub_1B692F120(v47);
  uint64_t v49 = v48 + v30[9];
  uint64_t v50 = v93;
  *(void *)uint64_t v49 = v93;
  *(unsigned char *)(v49 + 8) = 0;
  sub_1B695B610(v108, v48, type metadata accessor for ParticleInitScript);
  sub_1B6959704(v48, a7, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(void *)&long long aBlock = v50;
  unsigned __int8 v119 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, inited, v109);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v51 = *(void *)(a1 + 16);
  swift_retain();
  if (v51)
  {
    uint64_t v52 = v106;
    uint64_t v53 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v21, v51 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v103);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v105, v21, v53);
  }
  else
  {
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1B6E312C8();
    sub_1B6385660(v54, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    sub_1B6E31268();
    uint64_t v53 = v103;
  }
  uint64_t v55 = v94;
  uint64_t v94 = (char *)HIDWORD(v109);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v104 = a9;
  uint64_t v56 = sub_1B6E312C8();
  sub_1B6385660(v56, (uint64_t)qword_1EB997E68);
  char v57 = sub_1B6E312A8();
  os_signpost_type_t v58 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    int v59 = v105;
    uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
    v88(v55, v105, v53);
    unsigned int v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v60 = 0;
    os_signpost_id_t v61 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v57, v58, v61, "buildScript", "", v60, 2u);
    MEMORY[0x1BA9B84C0](v60, -1, -1);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v53);
    v88(v55, v59, v53);
  }
  else
  {

    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v55, v105, v53);
  }
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v62 = sub_1B6E312F8();
  uint64_t v63 = v97;
  sub_1B695BADC(v108, v97, type metadata accessor for ParticleInitScript);
  unint64_t v64 = (*(unsigned __int8 *)(v95 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  unint64_t v65 = (v96 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v65 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = inited;
  *(void *)(v67 + 16) = a1;
  *(void *)(v67 + 24) = v68;
  int v69 = v109;
  uint64_t inited = a1;
  uint64_t v108 = v62;
  uint64_t v70 = v93;
  int v71 = (int)v94;
  *(_DWORD *)(v67 + 32) = v109;
  *(_DWORD *)(v67 + 36) = v71;
  *(void *)(v67 + 40) = v70;
  *(void *)(v67 + 48) = sub_1B6959788;
  *(void *)(v67 + 56) = v101;
  *(void *)(v67 + 64) = v62;
  memcpy((void *)(v67 + 72), v104, 0x148uLL);
  sub_1B695B370(v63, v67 + v64, type metadata accessor for ParticleInitScript);
  uint64_t v72 = (uint64_t *)(v67 + v65);
  uint64_t v73 = v99;
  uint64_t v74 = v100;
  uint64_t v75 = v102;
  *uint64_t v72 = v99;
  v72[1] = v75;
  v72[2] = v74;
  uint64_t v76 = (_DWORD *)(v67 + v66);
  *uint64_t v76 = v69;
  v76[1] = v71;
  *(void *)(v67 + ((v66 + 15) & 0xFFFFFFFFFFFFFFF8)) = v89;
  if (v98)
  {
    uint64_t v77 = *(void **)(inited + 40);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = sub_1B695A4F4;
    *(void *)(v78 + 24) = v67;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    uint64_t v79 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v79 != -1) {
      swift_once();
    }
    uint64_t v80 = qword_1EB9854F8;
    swift_retain();
    if (v80 != -1) {
      swift_once();
    }
    uint64_t v81 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    uint64_t v82 = (void *)swift_allocObject();
    v82[2] = v81;
    v82[3] = sub_1B633A540;
    v82[4] = v78;
    *(void *)&long long v115 = sub_1B695BF44;
    *((void *)&v115 + 1) = v82;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B639AA00;
    *((void *)&v114 + 1) = &unk_1F0FB7EE0;
    uint64_t v83 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v77, sel_addOperationWithBlock_, v83);
    _Block_release(v83);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v109 = *(void *)(inited + 32);
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_1B695A4F4;
    *(void *)(v84 + 24) = v67;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = sub_1B633A540;
    *(void *)(v85 + 24) = v84;
    *(void *)&long long v115 = sub_1B633A540;
    *((void *)&v115 + 1) = v85;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v114 = sub_1B691FFC8;
    *((void *)&v114 + 1) = &unk_1F0FB84A8;
    uint64_t v86 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v104);
    sub_1B62B2DF0(v73, v102);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v109, v86);
    _Block_release(v86);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v103);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  uint64_t v45 = 1;
LABEL_50:
  swift_release();
  return v45;
}

void sub_1B6951D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v88 = a7;
  uint64_t v72 = a4;
  uint64_t v83 = a3;
  uint64_t v71 = a2;
  uint64_t v70 = a1;
  sub_1B6959D28();
  MEMORY[0x1F4188790](v9 - 8, v10);
  unint64_t v12 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v100 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v81 = (uint64_t)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v87 = (uint64_t)v69 - v19;
  sub_1B6959DB8();
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v23 = (char *)v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v84 = v24;
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v89 = (uint64_t)v69 - v27;
  uint64_t v28 = *(void *)(a5 + 16);
  if (v28)
  {
    v69[1] = a6 + 80;
    uint64_t v29 = a5 + 32;
    uint64_t v30 = (void (**)(void, void, void, void))(v26 + 56);
    uint64_t v85 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v69[0] = a5;
    swift_bridgeObjectRetain();
    uint64_t v80 = a6;
    uint64_t v31 = v83;
    uint64_t v79 = v12;
    char v32 = v84;
    uint64_t v86 = v30;
    while (1)
    {
      sub_1B69595FC(v29, (uint64_t)&v98);
      if (v99) {
        break;
      }
      sub_1B62C15C4(&v98, (uint64_t)v97);
      sub_1B62C1550((uint64_t)v97, (uint64_t)v90);
      sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
      char v41 = swift_dynamicCast();
      id v42 = (void (*)(char *, uint64_t, uint64_t, int *))*v30;
      if ((v41 & 1) == 0)
      {
        v42(v23, 1, 1, v32);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
        BOOL v33 = sub_1B6959DB8;
        uint64_t v34 = (uint64_t)v23;
LABEL_4:
        sub_1B695BB44(v34, (uint64_t (*)(void))v33);
        goto LABEL_5;
      }
      v42(v23, 0, 1, v32);
      uint64_t v43 = v89;
      sub_1B6959634((uint64_t)v23, v89, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      uint64_t v44 = sub_1B68EF860();
      uint64_t v45 = v43 + *(int *)(v100 + 36);
      if ((*(unsigned char *)(v45 + 8) & 1) == 0 && v44 == *(void *)v45)
      {
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v80 + 72));
        uint64_t v46 = v89;
        uint64_t v47 = v81;
        sub_1B6959704(v89, v81, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        sub_1B695B610(v31, v47, type metadata accessor for ParticleUpdateScript);
        uint64_t v48 = *(void *)(v46 + v32[15]);
        uint64_t v49 = *(void **)(v31 + 16);
        if (v49[2])
        {
          uint64_t v50 = v49[5];
          uint64_t v78 = v49[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v78 = 0;
          uint64_t v50 = 0;
        }
        uint64_t v54 = v83;
        unsigned __int8 v55 = *(unsigned char *)(v83 + 24);
        uint64_t v77 = *(void *)v83;
        uint64_t updated = *(void *)(v83 + 8);
        sub_1B62D19E4(v48);
        uint64_t v56 = v82;
        char v57 = sub_1B68EFAD8();
        if (v56)
        {
          swift_bridgeObjectRelease();

          sub_1B678FE58(v48);
          uint64_t v78 = 0;
          uint64_t v77 = 0;
          uint64_t v68 = 0;
        }
        else
        {
          sub_1B68EEEBC(v78, v50, v55, v77, updated, (uint64_t)v57, 0, *(void *)(*(void *)(v54 + 32) + 16) == 0, v90, 2u);
          uint64_t v82 = 0;
          uint64_t v78 = v91;
          uint64_t v77 = v92;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = v82;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B678FE58(v48);
        }
        uint64_t v58 = v70;
        uint64_t v82 = v68;
        uint64_t v59 = *(void *)(v70 + 16);
        char v60 = *(unsigned char *)(v70 + 184);
        swift_retain();
        if (v60)
        {
          sub_1B6E32BE8();
          __break(1u);
          return;
        }
        uint64_t v61 = *(void *)(v58 + 168);
        uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
        uint64_t v62 = *(unsigned int *)(v61 + 4 * v71);
        uint64_t v73 = *(unsigned int *)(*(void *)(v59 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v62 + 8);
        swift_release();
        v90[3] = v100;
        uint64_t v63 = sub_1B62C12C4(v90);
        uint64_t v75 = type metadata accessor for ParticleUpdateScript;
        uint64_t v74 = type metadata accessor for ScriptCompileAttempt;
        uint64_t v64 = v81;
        sub_1B6959704(v81, (uint64_t)v63, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        char v32 = v84;
        uint64_t v65 = *(void *)(v89 + v84[10]);
        void v90[4] = *(void *)(v89 + v84[9]);
        uint64_t v91 = v65;
        uint64_t v92 = *(void *)(v89 + v84[11]);
        sub_1B62D8750(0, &qword_1E9DD2B18, (uint64_t)&type metadata for ParticleScriptRuntime, MEMORY[0x1E4FBB718]);
        uint64_t v95 = v66;
        uint64_t v93 = v78;
        uint64_t v94 = v77;
        char v96 = 1;
        uint64_t v67 = v62 | (v73 << 32);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6CE14C4((uint64_t)v90, updated, v67);
        sub_1B69596A8(v64, &qword_1EB97F4B0, v75, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 72));
        uint64_t v31 = v83;
        unint64_t v12 = v79;
      }
      uint64_t v30 = v86;
      sub_1B69596A8(v89, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
      *uint64_t v88 = 1;
LABEL_5:
      v29 += 48;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    sub_1B62C15C4(&v98, (uint64_t)v90);
    sub_1B62C1550((uint64_t)v90, (uint64_t)v97);
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
    char v35 = swift_dynamicCast();
    uint64_t v36 = *v85;
    if (v35)
    {
      uint64_t v37 = v100;
      v36(v12, 0, 1, v100);
      uint64_t v38 = v87;
      sub_1B6959634((uint64_t)v12, v87, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      uint64_t v39 = sub_1B68EF860();
      uint64_t v40 = v38 + *(int *)(v37 + 36);
      if (*(unsigned char *)(v40 + 8))
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
        goto LABEL_18;
      }
      uint64_t v51 = v39;
      uint64_t v52 = *(void *)v40;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
      if (v51 == v52)
      {
        uint64_t v53 = v72;
        sub_1B69596A8(v72, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v31 = v83;
        unint64_t v12 = v79;
        sub_1B6959634(v87, v53, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      else
      {
LABEL_18:
        sub_1B69596A8(v87, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      *uint64_t v88 = 1;
      char v32 = v84;
      uint64_t v30 = v86;
      goto LABEL_5;
    }
    v36(v12, 1, 1, v100);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
    BOOL v33 = sub_1B6959D28;
    uint64_t v34 = (uint64_t)v12;
    goto LABEL_4;
  }
}

uint64_t sub_1B6952870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = a6;
  uint64_t v70 = a4;
  sub_1B62AC710(0, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  unint64_t v12 = v11;
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v44 - v14;
  sub_1B62AC710(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v64);
  if (v69)
  {
    if (v69 != 1)
    {
      sub_1B69596A8(a1, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v64, v63);
      sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v15, a1, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v60 = v12;
      uint64_t v61 = &off_1F0F836B8;
      uint64_t v43 = sub_1B62C12C4(&v58);
      sub_1B6959704(a1, (uint64_t)v43, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v62 = 1;
      sub_1B6CE1380((uint64_t)&v58, v70, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
    }
    uint64_t v52 = v6;
    uint64_t v46 = type metadata accessor for ParticleUpdateScript;
    uint64_t v49 = type metadata accessor for ScriptCompileAttempt;
    sub_1B69596A8(a1, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    id v53 = v65;
    uint64_t v48 = v66;
    uint64_t v47 = v67;
    unint64_t v51 = a5;
    sub_1B62B57A8(v64, v63);
    sub_1B62B57A8(&v68, v57);
    v20[24] = 0;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    *((void *)v20 + 4) = MEMORY[0x1E4FBC860];
    v20[40] = 0;
    uint64_t v23 = &v20[*(int *)(type metadata accessor for ParticleUpdateScript(0) + 36)];
    uint64_t v24 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    *(void *)uint64_t v20 = 0xD0000000000000C3;
    *((void *)v20 + 1) = 0x80000001B6F33F20;
    *((void *)v20 + 2) = &unk_1F0F83C78;
    uint64_t v25 = &v20[v12[9]];
    *(void *)uint64_t v25 = 0;
    v25[8] = 1;
    v20[v12[10]] = 0;
    *(void *)&v20[v12[11]] = 0;
    uint64_t v26 = &v20[v12[12]];
    *(void *)uint64_t v26 = 0;
    *((void *)v26 + 1) = 0xE000000000000000;
    *(void *)&v20[v12[13]] = v22;
    uint64_t v27 = v17[9];
    *(void *)&v20[v27] = 0;
    uint64_t v50 = a3;
    uint64_t v28 = v17[10];
    *(void *)&v20[v28] = 0;
    uint64_t v29 = v17[11];
    *(void *)&v20[v29] = 0;
    *(void *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    uint64_t v30 = &v20[v17[14]];
    *(void *)uint64_t v30 = 0;
    v30[8] = 1;
    uint64_t v31 = (uint64_t *)&v20[v17[15]];
    *uint64_t v31 = 0;
    v31[1] = 0;
    sub_1B62CAAD8((uint64_t)v63, (uint64_t)&v58);
    uint64_t v45 = a1;
    swift_dynamicCast();
    uint64_t v32 = (uint64_t)v15;
    id v33 = v53;
    uint64_t v34 = v46;
    sub_1B695A158(v32, (uint64_t)v20, &qword_1EB97F4B0, v46, (uint64_t)&off_1EB983100);
    *(void *)&v20[v27] = v33;
    unint64_t v35 = v51;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&v20[v29] = v47;
    swift_bridgeObjectRelease();
    *(void *)&v20[v28] = v48;
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    swift_dynamicCast();
    uint64_t v36 = v55;
    uint64_t v37 = v56;
    sub_1B678FE58(*v31);
    *uint64_t v31 = v36;
    v31[1] = v37;
    uint64_t v38 = v50;
    sub_1B6959704((uint64_t)v20, v45, &qword_1EB97F4B0, v34, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49);
    sub_1B6850750((uint64_t)v20, v35);
    char v60 = v17;
    uint64_t v61 = &off_1F0F61BF0;
    uint64_t v39 = sub_1B62C12C4(&v58);
    sub_1B6959704((uint64_t)v20, (uint64_t)v39, &qword_1EB97E710, v34, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    char v62 = 0;
    sub_1B6CE1380((uint64_t)&v58, v70, v35);
    uint64_t v40 = sub_1B695F5CC(v35);
    if (v40)
    {
      sub_1B6920048(v38, v40, v41, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B6787890);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
    if (swift_dynamicCast())
    {
      uint64_t v42 = v55;
      swift_bridgeObjectRelease();
      uint64_t v58 = MEMORY[0x1E4FBC860];
      uint64_t v59 = MEMORY[0x1E4FBC860];
      sub_1B6927214(v38, v42);
      swift_bridgeObjectRelease();
      sub_1B6850768(v58, v59, v35);
    }
    else
    {
      sub_1B62CAAD8((uint64_t)v57, (uint64_t)&v58);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B63BAF34(v35);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v57);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
        return sub_1B69596A8((uint64_t)v20, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B6953004(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v48 = (uint64_t)a1;
  uint64_t v49 = v2;
  uint64_t v4 = a1[10];
  uint64_t v52 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  unint64_t v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v55;
  uint64_t v10 = v61;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v53 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v54 = *v15;
  *((void *)&v54 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v54, (uint64_t)&v58);
    if (v61[88] == 255) {
      break;
    }
    uint64_t v20 = v58;
    uint64_t v21 = v60;
    uint64_t v22 = v59;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v54);
    if (v20 == type metadata accessor for ParticleUpdateScript(0))
    {
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v51[1] > v22)
      {
        uint64_t v50 = *v51;
        uint64_t v25 = *v51 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v49 + 80)
                                                  + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v46 = *(void *)(*(void *)(*(void *)(v49 + 80) + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v47 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v47)
            {
              if (*(void *)(*(void *)(v47 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v47 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v49 + 136) + 8 * *(int *)(v50 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v47)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B6952870(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v50 + 12 * (int)v22 + 4), (uint64_t)&v54, v49, v20, v22 | (unint64_t)(v21 << 32), v48);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v54);
      uint64_t v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v54);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v53)
    {
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v53) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v53) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v53)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v53)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v52 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v56 = 0;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    char v57 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(*(void *)(v48 + 80) + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for ParticleUpdateScript);
    swift_bridgeObjectRelease();
    *(void *)(v48 + 80) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(*(void *)(v48 + 80) + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 72));
  swift_release();
  return v42;
}

uint64_t sub_1B6953600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, char *a9, void *a10, uint64_t a11, uint64_t a12)
{
  int v113 = a8;
  uint64_t v123 = a2;
  uint64_t v124 = (uint64_t)a6;
  uint64_t v114 = a4;
  uint64_t v115 = a5;
  uint64_t v117 = a3;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  uint64_t v111 = *(void *)(updated - 8);
  unint64_t v14 = *(void *)(v111 + 64);
  MEMORY[0x1F4188790](updated, v15);
  uint64_t v112 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1B6E31288();
  uint64_t v120 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118, v16);
  int v110 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v109 = (char *)&v103 - v20;
  MEMORY[0x1F4188790](v21, v22);
  unsigned __int8 v119 = (char *)&v103 - v23;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a11;
  *(void *)(v24 + 24) = a12;
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = sub_1B695BF48;
  v25[3] = v24;
  v25[4] = a10;
  uint64_t v26 = *(void *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  dispatch_group_t v121 = a10;
  if (v26
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v33 = (void *)swift_allocError();
    *uint64_t v34 = xmmword_1B6E95940;
    if (!*(void *)(a11 + 16))
    {
LABEL_24:
      uint64_t v40 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      id v41 = v33;
      os_unfair_lock_lock(v40);
      BOOL v42 = *(void **)(a11 + 16);
      *(void *)(a11 + 16) = v33;
      id v43 = v33;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v121);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v44 = 0;
    goto LABEL_50;
  }
  uint64_t v107 = v24;
  uint64_t v27 = sub_1B68EF860();
  sub_1B62AC710(0, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v29 = v28;
  uint64_t v30 = a7 + v28[9];
  char v31 = *(unsigned char *)(v30 + 8);
  long long v116 = v25;
  uint64_t v108 = v27;
  BOOL v32 = (v31 & 1) == 0 && v27 == *(void *)v30;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v35 = *(void *)(a1 + 80);
  if (!*(void *)(v35 + 16) || (unint64_t v36 = sub_1B69FABB0(updated, v124), (v37 & 1) == 0))
  {
    uint64_t v133 = 0;
    long long v131 = 0u;
    long long v132 = 0u;
    long long v129 = 0u;
    long long v130 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v134 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v35 + 56) + 96 * v36, (uint64_t)&aBlock);
  if (v134 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v32) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v127);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v127, (uint64_t)v125);
  if (v126)
  {
    sub_1B69599E0((uint64_t)v125);
    sub_1B69599E0((uint64_t)v127);
    goto LABEL_16;
  }
  uint64_t v45 = v125[0];
  sub_1B69599E0((uint64_t)v127);
  if (v45 != v108) {
    BOOL v32 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v32)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v29[10]))
    {
      uint64_t v33 = *(void **)(a7 + v29[11]);
      id v38 = v33;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v33 = (void *)swift_allocError();
      *uint64_t v39 = xmmword_1B6E4F270;
    }
    if (!*(void *)(a11 + 16) && v33) {
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v45 == v108)
  {
    dispatch_group_leave(v121);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  unint64_t v103 = v14;
  uint64_t v105 = a11;
  dispatch_group_t v121 = (dispatch_group_t)a12;
  uint64_t v106 = a1;
  uint64_t v46 = a7;
  sub_1B69596A8(a7, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v104 = swift_allocBox();
  uint64_t v48 = (void *)v47;
  *(unsigned char *)(v47 + 24) = 0;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  *(void *)(v47 + 32) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v47 + 40) = 0;
  uint64_t v50 = updated;
  uint64_t v51 = v47 + *(int *)(updated + 36);
  uint64_t v52 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
  *uint64_t v48 = 0xD0000000000000C3;
  v48[1] = 0x80000001B6F33F20;
  v48[2] = &unk_1F0F830B0;
  int64_t v53 = (char *)v48 + v29[9];
  *((unsigned char *)v48 + v29[10]) = 0;
  *(void *)((char *)v48 + v29[11]) = 0;
  long long v54 = (void *)((char *)v48 + v29[12]);
  void *v54 = 0;
  v54[1] = 0xE000000000000000;
  *(void *)((char *)v48 + v29[13]) = v49;
  uint64_t v55 = v108;
  *(void *)int64_t v53 = v108;
  uint64_t v53[8] = 0;
  sub_1B695B610(v123, (uint64_t)v48, type metadata accessor for ParticleUpdateScript);
  uint64_t v56 = v106;
  sub_1B6959704((uint64_t)v48, v46, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v56 + 72));
  *(void *)&long long aBlock = v55;
  unsigned __int8 v134 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, v50, v124);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v56 + 72));
  uint64_t v57 = *(void *)(v56 + 16);
  swift_retain();
  if (v57)
  {
    uint64_t v58 = v120;
    int v59 = v109;
    uint64_t v60 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v109, v57 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v118);
    swift_release();
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    char v62 = v119;
    v61(v119, v59, v60);
    unint64_t v63 = v103;
  }
  else
  {
    uint64_t v60 = v118;
    unint64_t v63 = v103;
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_1B6E312C8();
    sub_1B6385660(v64, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    char v62 = v119;
    sub_1B6E31268();
  }
  unint64_t v103 = HIDWORD(v124);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v109 = a9;
  uint64_t v65 = sub_1B6E312C8();
  sub_1B6385660(v65, (uint64_t)qword_1EB997E68);
  uint64_t v66 = sub_1B6E312A8();
  os_signpost_type_t v67 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    uint64_t v68 = v60;
    uint64_t v69 = v120;
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
    uint64_t v71 = v110;
    v70(v110, v62, v68);
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v72 = 0;
    os_signpost_id_t v73 = sub_1B6E31278();
    os_signpost_type_t v74 = v67;
    uint64_t v75 = v71;
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v66, v74, v73, "buildScript", "", v72, 2u);
    uint64_t v76 = v72;
    char v62 = v119;
    MEMORY[0x1BA9B84C0](v76, -1, -1);

    uint64_t v77 = v69;
    uint64_t v60 = v68;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v71, v68);
  }
  else
  {

    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
    uint64_t v75 = v110;
  }
  v70(v75, v62, v60);
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v78 = sub_1B6E312F8();
  uint64_t v79 = v112;
  sub_1B695BADC(v123, v112, type metadata accessor for ParticleUpdateScript);
  unint64_t v80 = (*(unsigned __int8 *)(v111 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
  unint64_t v81 = (v63 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v82 = (v81 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v83 = swift_allocObject();
  uint64_t v84 = updated;
  *(void *)(v83 + 16) = v106;
  *(void *)(v83 + 24) = v84;
  int v85 = v124;
  int v86 = v103;
  *(_DWORD *)(v83 + 32) = v124;
  *(_DWORD *)(v83 + 36) = v86;
  *(void *)(v83 + 40) = v108;
  *(void *)(v83 + 48) = sub_1B6959788;
  *(void *)(v83 + 56) = v116;
  *(void *)(v83 + 64) = v78;
  uint64_t v123 = v78;
  uint64_t v87 = (uint64_t)v109;
  memcpy((void *)(v83 + 72), v109, 0x148uLL);
  sub_1B695B370(v79, v83 + v80, type metadata accessor for ParticleUpdateScript);
  uint64_t v88 = (void *)(v83 + v81);
  uint64_t v90 = v114;
  uint64_t v89 = v115;
  *uint64_t v88 = v117;
  v88[1] = v90;
  v88[2] = v89;
  uint64_t v91 = (_DWORD *)(v83 + v82);
  *uint64_t v91 = v85;
  v91[1] = v86;
  *(void *)(v83 + ((v82 + 15) & 0xFFFFFFFFFFFFFFF8)) = v104;
  if (v113)
  {
    uint64_t v92 = *(void **)(v106 + 40);
    uint64_t v93 = swift_allocObject();
    *(void *)(v93 + 16) = sub_1B695A040;
    *(void *)(v93 + 24) = v83;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40(v87);
    sub_1B62B2DF0(v117, v90);
    uint64_t v94 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v94 != -1) {
      swift_once();
    }
    uint64_t v95 = qword_1EB9854F8;
    swift_retain();
    if (v95 != -1) {
      swift_once();
    }
    uint64_t v96 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    uint64_t v97 = (void *)swift_allocObject();
    v97[2] = v96;
    uint64_t v97[3] = sub_1B633A540;
    v97[4] = v93;
    *(void *)&long long v130 = sub_1B695BF44;
    *((void *)&v130 + 1) = v97;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v129 = sub_1B639AA00;
    *((void *)&v129 + 1) = &unk_1F0FB83E0;
    long long v98 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v92, sel_addOperationWithBlock_, v98);
    _Block_release(v98);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v118);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v124 = *(void *)(v106 + 32);
    uint64_t v99 = swift_allocObject();
    *(void *)(v99 + 16) = sub_1B695A040;
    *(void *)(v99 + 24) = v83;
    uint64_t v100 = swift_allocObject();
    *(void *)(v100 + 16) = sub_1B633A540;
    *(void *)(v100 + 24) = v99;
    *(void *)&long long v130 = sub_1B633A540;
    *((void *)&v130 + 1) = v100;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v129 = sub_1B691FFC8;
    *((void *)&v129 + 1) = &unk_1F0FB83B8;
    uint64_t v101 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40(v87);
    sub_1B62B2DF0(v117, v90);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v124, v101);
    _Block_release(v101);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v118);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  uint64_t v44 = 1;
LABEL_50:
  swift_release();
  return v44;
}

void sub_1B69544AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v83 = a7;
  uint64_t v70 = a4;
  int v85 = (uint64_t *)a3;
  uint64_t v69 = a2;
  uint64_t v68 = a1;
  sub_1B69594DC();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v91 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v77 = (uint64_t)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v82 = (uint64_t)v67 - v19;
  sub_1B695956C();
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v23 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62AC710(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v24, v26);
  uint64_t v79 = (char *)v67 - v28;
  uint64_t v29 = *(void *)(a5 + 16);
  if (v29)
  {
    v67[2] = a6 + 80;
    uint64_t v30 = a5 + 32;
    unint64_t v81 = (void (**)(char *, uint64_t, uint64_t, int *))(v27 + 56);
    char v31 = (void (**)(void, void, void, void))(v14 + 56);
    v67[1] = a5;
    swift_bridgeObjectRetain();
    BOOL v32 = &qword_1EB981130;
    uint64_t v76 = a6;
    uint64_t v78 = v25;
    uint64_t v33 = (uint64_t)v79;
    unint64_t v80 = v31;
    uint64_t v84 = v23;
    while (1)
    {
      sub_1B69595FC(v30, (uint64_t)&v89);
      if (v90)
      {
        uint64_t v34 = v32;
        sub_1B62C15C4(&v89, (uint64_t)v86);
        sub_1B62C1550((uint64_t)v86, (uint64_t)v88);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v35 = swift_dynamicCast();
        unint64_t v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v31;
        if (v35)
        {
          char v37 = v91;
          v36(v91, 0, 1, v13);
          uint64_t v38 = (uint64_t)v37;
          uint64_t v39 = v82;
          BOOL v32 = v34;
          uint64_t v40 = sub_1B6959634(v38, v82, v34, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v41 = sub_1B68F1798(v40);
          uint64_t v42 = v39 + *(int *)(v13 + 36);
          if (*(unsigned char *)(v42 + 8))
          {
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
            goto LABEL_18;
          }
          uint64_t v64 = v41;
          uint64_t v65 = *(void *)v42;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
          if (v64 == v65)
          {
            uint64_t v66 = v70;
            sub_1B69596A8(v70, v34, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            BOOL v32 = v34;
            sub_1B6959634(v82, v66, v34, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          else
          {
LABEL_18:
            sub_1B69596A8(v82, v34, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          uint64_t v23 = v84;
          unsigned char *v83 = 1;
          uint64_t v25 = v78;
          uint64_t v33 = (uint64_t)v79;
LABEL_20:
          char v31 = v80;
          goto LABEL_4;
        }
        uint64_t v63 = (uint64_t)v91;
        v36(v91, 1, 1, v13);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
        sub_1B695BB44(v63, (uint64_t (*)(void))sub_1B69594DC);
        BOOL v32 = v34;
        uint64_t v23 = v84;
      }
      else
      {
        sub_1B62C15C4(&v89, (uint64_t)v88);
        sub_1B62C1550((uint64_t)v88, (uint64_t)v86);
        sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
        char v43 = swift_dynamicCast();
        uint64_t v44 = *v81;
        if (v43)
        {
          v44(v23, 0, 1, v25);
          uint64_t v45 = sub_1B6959634((uint64_t)v23, v33, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          uint64_t v46 = sub_1B68F1798(v45);
          uint64_t v47 = v33 + *(int *)(v13 + 36);
          if ((*(unsigned char *)(v47 + 8) & 1) == 0 && v46 == *(void *)v47)
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v76 + 72));
            uint64_t v48 = v77;
            sub_1B6959704(v33, v77, v32, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v49 = v85;
            sub_1B695B610((uint64_t)v85, v48, type metadata accessor for TriggerScript);
            uint64_t v50 = *v49;
            uint64_t v51 = v68;
            uint64_t v52 = v48;
            uint64_t v53 = *(void *)(v68 + 16);
            char v54 = *(unsigned char *)(v68 + 184);
            swift_retain();
            if (v54)
            {
              sub_1B6E32BE8();
              __break(1u);
              return;
            }
            uint64_t v55 = *(void *)(v51 + 168);
            uint64_t v75 = type metadata accessor for TriggerScript(0);
            uint64_t v74 = *(unsigned int *)(v55 + 4 * v69);
            uint64_t v73 = *(unsigned int *)(*(void *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v74 + 8);
            swift_bridgeObjectRetain();
            swift_release();
            v86[3] = v13;
            uint64_t v56 = sub_1B62C12C4(v86);
            uint64_t v72 = type metadata accessor for TriggerScript;
            uint64_t v71 = type metadata accessor for ScriptCompileAttempt;
            uint64_t v57 = v52;
            uint64_t v58 = v32;
            sub_1B6959704(v57, (uint64_t)v56, v32, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            int v59 = v79;
            uint64_t v60 = *(void *)&v79[v25[10]];
            uint64_t v86[4] = *(void *)&v79[v25[9]];
            v86[5] = v60;
            v86[6] = *(void *)&v79[v25[11]];
            sub_1B62D8750(0, &qword_1E9DD2B18, (uint64_t)&type metadata for ParticleScriptRuntime, MEMORY[0x1E4FBB718]);
            v86[10] = v61;
            v86[7] = v50;
            char v86[8] = 0;
            char v87 = 1;
            uint64_t v62 = v74 | (v73 << 32);
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v25 = v78;
            swift_bridgeObjectRetain();
            sub_1B6CE14C4((uint64_t)v86, v75, v62);
            sub_1B69596A8(v77, v58, v72, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v71);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v76 + 72));
            uint64_t v33 = (uint64_t)v59;
            BOOL v32 = v58;
            uint64_t v23 = v84;
          }
          sub_1B69596A8(v33, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v88);
          unsigned char *v83 = 1;
          goto LABEL_20;
        }
        v44(v23, 1, 1, v25);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v88);
        sub_1B695BB44((uint64_t)v23, (uint64_t (*)(void))sub_1B695956C);
      }
LABEL_4:
      v30 += 48;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B6954E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v74 = a5;
  sub_1B62AC710(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)v49 - v14;
  sub_1B62AC710(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)v49 - v19;
  uint64_t result = sub_1B6874B44(a2, (uint64_t)v68);
  if (v73)
  {
    uint64_t v57 = a4;
    if (v73 == 1)
    {
      v49[1] = v6;
      uint64_t v50 = type metadata accessor for TriggerScript;
      char v54 = type metadata accessor for ScriptCompileAttempt;
      uint64_t v53 = a1;
      sub_1B69596A8(a1, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      id v56 = v69;
      uint64_t v52 = v70;
      uint64_t v51 = v71;
      sub_1B62B57A8(v68, v67);
      sub_1B62B57A8(&v72, v61);
      uint64_t v22 = MEMORY[0x1E4FBC860];
      *(void *)uint64_t v20 = MEMORY[0x1E4FBC860];
      *((void *)v20 + 1) = 0;
      uint64_t v55 = a3;
      *((void *)v20 + 2) = 0xE000000000000000;
      v20[24] = 2;
      *((void *)v20 + 4) = &unk_1F0F83D78;
      *((_WORD *)v20 + 20) = 0;
      uint64_t v23 = (int *)type metadata accessor for TriggerScript(0);
      uint64_t v24 = &v20[v23[10]];
      uint64_t v25 = type metadata accessor for ScriptIndex();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
      *(void *)&v20[v23[12]] = 0;
      uint64_t v26 = &v20[v23[13]];
      *(_DWORD *)uint64_t v26 = 0;
      v26[4] = 1;
      *(void *)&v20[v23[11]] = @"VFXTriggerTypeKeyDown";
      uint64_t v27 = &v20[v12[9]];
      *(void *)uint64_t v27 = 0;
      v27[8] = 1;
      v20[v12[10]] = 0;
      *(void *)&v20[v12[11]] = 0;
      uint64_t v28 = &v20[v12[12]];
      *(void *)uint64_t v28 = 0;
      *((void *)v28 + 1) = 0xE000000000000000;
      *(void *)&v20[v12[13]] = v22;
      uint64_t v29 = v17[9];
      *(void *)&v20[v29] = 0;
      uint64_t v30 = v17[10];
      *(void *)&v20[v30] = 0;
      uint64_t v31 = v17[11];
      *(void *)&v20[v31] = 0;
      *(void *)&v20[v17[12]] = 0;
      v20[v17[13]] = 0;
      BOOL v32 = &v20[v17[14]];
      *(void *)BOOL v32 = 0;
      v32[8] = 1;
      uint64_t v33 = (uint64_t *)&v20[v17[15]];
      *uint64_t v33 = 0;
      v33[1] = 0;
      sub_1B62CAAD8((uint64_t)v67, (uint64_t)&v62);
      uint64_t v34 = @"VFXTriggerTypeKeyDown";
      char v35 = v15;
      uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
      swift_dynamicCast();
      uint64_t v37 = (uint64_t)v35;
      id v38 = v56;
      uint64_t v39 = v50;
      sub_1B695A158(v37, (uint64_t)v20, &qword_1EB981130, v50, (uint64_t)&off_1EB984DC8);
      *(void *)&v20[v29] = v38;
      uint64_t v40 = v74;
      swift_retain();
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&v20[v31] = v51;
      swift_bridgeObjectRelease();
      *(void *)&v20[v30] = v52;
      sub_1B62CAAD8((uint64_t)v61, (uint64_t)&v62);
      uint64_t v52 = v36;
      swift_dynamicCast();
      uint64_t v41 = v59;
      uint64_t v42 = v60;
      sub_1B678FE58(*v33);
      *uint64_t v33 = v41;
      v33[1] = v42;
      uint64_t v43 = v55;
      sub_1B6959704((uint64_t)v20, v53, &qword_1EB981130, v39, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54);
      sub_1B6850604((uint64_t)v20, v40);
      uint64_t v64 = v17;
      uint64_t v65 = &off_1F0F61BF0;
      uint64_t v44 = sub_1B62C12C4(&v62);
      sub_1B6959704((uint64_t)v20, (uint64_t)v44, &qword_1EB981070, v39, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      char v66 = 0;
      sub_1B6CE1380((uint64_t)&v62, v57, v40);
      uint64_t v45 = sub_1B695F5A4(v40);
      if (v45)
      {
        sub_1B6920048(v43, v45, v46, (void (*)(uint64_t))sub_1B6787890, (void (*)(uint64_t))sub_1B67861B0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1B62CAAD8((uint64_t)v61, (uint64_t)&v62);
      if (swift_dynamicCast())
      {
        uint64_t v47 = v59;
        swift_bridgeObjectRelease();
        uint64_t v62 = MEMORY[0x1E4FBC860];
        uint64_t v63 = MEMORY[0x1E4FBC860];
        sub_1B6927214(v43, v47);
        swift_bridgeObjectRelease();
        sub_1B685061C(v62, v63, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B62CAAD8((uint64_t)v61, (uint64_t)&v62);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      sub_1B63BAF34(v40);
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v61);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v67);
      return sub_1B69596A8((uint64_t)v20, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    }
    else
    {
      sub_1B69596A8(a1, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B62B57A8(v68, v67);
      sub_1B62CAAD8((uint64_t)v67, (uint64_t)&v62);
      swift_dynamicCast();
      sub_1B6959634((uint64_t)v15, a1, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      uint64_t v64 = v12;
      uint64_t v65 = &off_1F0F836B8;
      uint64_t v48 = sub_1B62C12C4(&v62);
      sub_1B6959704(a1, (uint64_t)v48, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      char v66 = 1;
      sub_1B6CE1380((uint64_t)&v62, v57, v74);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v67);
    }
  }
  return result;
}

uint64_t sub_1B6955624(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v48 = (uint64_t)a1;
  uint64_t v49 = v2;
  uint64_t v4 = a1[10];
  uint64_t v52 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  uint64_t v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v55;
  uint64_t v10 = v61;
  unint64_t v44 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  int64_t v53 = v8;
  unint64_t v45 = v8 - 6;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
  uint64_t v14 = *(void *)(v4 + 56);
  uint64_t v15 = (void *)(*(void *)(v4 + 48) + 16 * v13);
  uint64_t v16 = v15[1];
  *(void *)&long long v54 = *v15;
  *((void *)&v54 + 1) = v16;
  sub_1B6874B44(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B6959C28((uint64_t)&v54, (uint64_t)&v58);
    if (v61[88] == 255) {
      break;
    }
    uint64_t v20 = v58;
    uint64_t v21 = v60;
    uint64_t v22 = v59;
    sub_1B67F7AF0((uint64_t)v10, (uint64_t)&v54);
    if (v20 == type metadata accessor for TriggerScript(0))
    {
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      if ((v22 != -1 || v21) && (v22 & 0x80000000) == 0 && v51[1] > v22)
      {
        uint64_t v50 = *v51;
        uint64_t v25 = *v51 + 12 * (int)v22;
        int v28 = *(_DWORD *)(v25 + 8);
        uint64_t v27 = (_DWORD *)(v25 + 8);
        int v26 = v28;
        if (v21 == -1 || v26 == v21)
        {
          sub_1B62AC710(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v49 + 80)
                                                  + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(void *)(v30 + 16))
          {
            uint64_t v46 = *(void *)(*(void *)(*(void *)(v49 + 80) + 8 * *(__int16 *)(v50 + 12 * (int)v22 + 6) + 32)
                            + 16);
            uint64_t v47 = v29;
            unint64_t v31 = sub_1B62C1A30(v29);
            if ((v32 & 1) != 0
              && *(void *)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v30 + 56) + 8 * v31) + 32) == v47)
            {
              if (*(void *)(*(void *)(v47 - 8) + 64)) {
                uint64_t v33 = *(void *)(*(void *)(v47 - 8) + 72);
              }
              else {
                uint64_t v33 = 0;
              }
              if (v21 != -1 && *v27 != v21
                || (uint64_t v34 = *(void *)(*(void *)(v49 + 136) + 8 * *(int *)(v50 + 12 * (int)v22) + 32),
                    uint64_t v35 = *(void *)(v34 + 48),
                    (uint64_t v36 = *(void *)(v35 + 16)) == 0))
              {
LABEL_55:
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B681F698();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              uint64_t v37 = (void *)(v35 + 56);
              while (*(v37 - 3) != v47)
              {
                v37 += 5;
                if (!--v36) {
                  goto LABEL_55;
                }
              }
              sub_1B6954E4C(*(void *)(v34 + 128) + *v37 + v33 * *(__int16 *)(v50 + 12 * (int)v22 + 4), (uint64_t)&v54, v49, v20, v22 | (unint64_t)(v21 << 32), v48);
            }
          }
        }
      }
      sub_1B69599E0((uint64_t)&v54);
      uint64_t v9 = v24;
      uint64_t v10 = v23;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B69599E0((uint64_t)&v54);
      if (v7) {
        goto LABEL_4;
      }
    }
LABEL_6:
    unint64_t v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v53)
    {
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v53) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18) {
        goto LABEL_11;
      }
      unint64_t v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v53) {
        goto LABEL_40;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v17);
      if (v18) {
        goto LABEL_8;
      }
      unint64_t v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v53)
      {
LABEL_21:
        unint64_t v11 = v17;
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v52 + 8 * v19);
      if (v18)
      {
LABEL_11:
        unint64_t v17 = v19;
LABEL_8:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
        unint64_t v11 = v17;
        goto LABEL_5;
      }
      unint64_t v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v53)
      {
LABEL_40:
        unint64_t v11 = v19;
      }
      else
      {
        unint64_t v18 = *(void *)(v52 + 8 * v17);
        if (v18) {
          goto LABEL_8;
        }
        while (v45 != v11)
        {
          unint64_t v18 = *(void *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            unint64_t v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        unint64_t v11 = v44;
      }
    }
LABEL_22:
    unint64_t v7 = 0;
    uint64_t v56 = 0;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    char v57 = -1;
  }
  swift_release();
  uint64_t v38 = *(void *)(*(void *)(v48 + 80) + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1B693A5D4(v39, type metadata accessor for TriggerScript);
    swift_bridgeObjectRelease();
    *(void *)(v48 + 80) = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(*(void *)(v48 + 80) + 16);
  }
  else
  {
    uint64_t v41 = 0;
  }
  BOOL v42 = v38 != v41;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 72));
  swift_release();
  return v42;
}

uint64_t sub_1B6955C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, char *a9, void *a10, uint64_t a11, uint64_t a12)
{
  LODWORD(v110) = a8;
  uint64_t v119 = (uint64_t)a6;
  uint64_t v120 = a2;
  uint64_t v112 = a4;
  uint64_t v113 = a5;
  uint64_t v111 = a3;
  uint64_t v118 = type metadata accessor for TriggerScript(0);
  uint64_t v107 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118, v14);
  uint64_t v108 = v15;
  uint64_t v109 = (uint64_t)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1B6E31288();
  uint64_t v117 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115, v16);
  uint64_t v106 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v100 - v20;
  MEMORY[0x1F4188790](v22, v23);
  long long v116 = (char *)&v100 - v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a11;
  *(void *)(v25 + 24) = a12;
  int v26 = (void *)swift_allocObject();
  v26[2] = sub_1B695977C;
  v26[3] = v25;
  v26[4] = a10;
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v121 = a11;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  int v28 = a10;
  uint64_t v29 = v28;
  if (v27
    && ((*(unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(unsigned char *)(a1 + 2720) & 1) == 0))
  {
    sub_1B67C5B68();
    uint64_t v37 = (void *)swift_allocError();
    *uint64_t v38 = xmmword_1B6E95940;
    if (!*(void *)(v121 + 16))
    {
      uint64_t v43 = *(os_unfair_lock_s **)(a12 + 72);
      unint64_t v44 = v29;
      uint64_t v45 = v121;
      swift_retain();
      swift_retain();
      id v46 = v37;
      os_unfair_lock_lock(v43);
      uint64_t v47 = *(void **)(v45 + 16);
      *(void *)(v45 + 16) = v37;
      uint64_t v29 = v44;
      id v48 = v37;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v29);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    uint64_t v55 = 0;
    goto LABEL_50;
  }
  dispatch_group_t v104 = v28;
  uint64_t v105 = v25;
  uint64_t v30 = sub_1B68F1798(v28);
  sub_1B62AC710(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  char v32 = v31;
  uint64_t v33 = a7 + v31[9];
  char v34 = *(unsigned char *)(v33 + 8);
  uint64_t v114 = v26;
  uint64_t v35 = v30;
  BOOL v36 = (v34 & 1) == 0 && v30 == *(void *)v33;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v39 = *(void *)(a1 + 80);
  if (!*(void *)(v39 + 16) || (unint64_t v40 = sub_1B69FABB0(v118, v119), (v41 & 1) == 0))
  {
    uint64_t v130 = 0;
    long long v128 = 0u;
    long long v129 = 0u;
    long long v126 = 0u;
    long long v127 = 0u;
    long long aBlock = 0u;
    unsigned __int8 v131 = -1;
    goto LABEL_15;
  }
  sub_1B6874B44(*(void *)(v39 + 56) + 96 * v40, (uint64_t)&aBlock);
  if (v131 == 255)
  {
LABEL_15:
    sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v36) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  sub_1B6874B44((uint64_t)&aBlock, (uint64_t)v124);
  sub_1B639559C((uint64_t)&aBlock, &qword_1E9DD85B0, (uint64_t)&type metadata for CompilationStatus);
  sub_1B6874B44((uint64_t)v124, (uint64_t)v122);
  if (v123)
  {
    sub_1B69599E0((uint64_t)v122);
    sub_1B69599E0((uint64_t)v124);
    goto LABEL_16;
  }
  uint64_t v56 = v122[0];
  sub_1B69599E0((uint64_t)v124);
  if (v56 != v35) {
    BOOL v36 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v36)
  {
LABEL_17:
    if (*(unsigned char *)(a7 + v32[10]))
    {
      uint64_t v37 = *(void **)(a7 + v32[11]);
      id v42 = v37;
    }
    else
    {
      sub_1B67C5B68();
      uint64_t v37 = (void *)swift_allocError();
      _OWORD *v49 = xmmword_1B6E4F270;
    }
    uint64_t v29 = v104;
    if (!*(void *)(v121 + 16) && v37)
    {
      uint64_t v50 = *(os_unfair_lock_s **)(a12 + 72);
      uint64_t v51 = v121;
      swift_retain();
      swift_retain();
      id v52 = v37;
      os_unfair_lock_lock(v50);
      int64_t v53 = *(void **)(v51 + 16);
      *(void *)(v51 + 16) = v37;
      uint64_t v29 = v104;
      id v54 = v37;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
    goto LABEL_7;
  }
  if (v56 == v35)
  {
    dispatch_group_leave(v104);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  dispatch_group_t v104 = (dispatch_group_t)a12;
  sub_1B69596A8(a7, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v103 = swift_allocBox();
  uint64_t v58 = v57;
  sub_1B68EB19C(v57);
  uint64_t v59 = v58 + v32[9];
  *(unsigned char *)(v58 + v32[10]) = 0;
  *(void *)(v58 + v32[11]) = 0;
  unsigned int v60 = (void *)(v58 + v32[12]);
  *unsigned int v60 = 0;
  v60[1] = 0xE000000000000000;
  *(void *)(v58 + v32[13]) = MEMORY[0x1E4FBC860];
  *(void *)uint64_t v59 = v35;
  *(unsigned char *)(v59 + 8) = 0;
  sub_1B695B610(v120, v58, type metadata accessor for TriggerScript);
  sub_1B6959704(v58, a7, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v102 = v35;
  *(void *)&long long aBlock = v35;
  unsigned __int8 v131 = 0;
  sub_1B6CE14C4((uint64_t)&aBlock, v118, v119);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  uint64_t v61 = *(void *)(a1 + 16);
  swift_retain();
  if (v61)
  {
    uint64_t v62 = v117;
    uint64_t v63 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v21, v61 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v115);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v116, v21, v63);
    uint64_t v64 = v106;
  }
  else
  {
    uint64_t v63 = v115;
    uint64_t v64 = v106;
    if (qword_1EB97FF40 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_1B6E312C8();
    sub_1B6385660(v65, (uint64_t)qword_1EB997E68);
    sub_1B6E312A8();
    sub_1B6E31268();
  }
  uint64_t v66 = v120;
  unint64_t v101 = HIDWORD(v119);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v106 = a9;
  uint64_t v67 = sub_1B6E312C8();
  sub_1B6385660(v67, (uint64_t)qword_1EB997E68);
  uint64_t v68 = sub_1B6E312A8();
  os_signpost_type_t v69 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    uint64_t v70 = v116;
    uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    v100(v64, v116, v63);
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v71 = 0;
    os_signpost_id_t v72 = sub_1B6E31278();
    char v73 = v70;
    uint64_t v66 = v120;
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v68, v69, v72, "buildScript", "", v71, 2u);
    MEMORY[0x1BA9B84C0](v71, -1, -1);

    (*(void (**)(char *, uint64_t))(v117 + 8))(v64, v63);
    v100(v64, v73, v63);
  }
  else
  {

    (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v64, v116, v63);
  }
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v74 = sub_1B6E312F8();
  uint64_t v75 = v66;
  uint64_t v76 = v109;
  sub_1B695BADC(v75, v109, type metadata accessor for TriggerScript);
  unint64_t v77 = (*(unsigned __int8 *)(v107 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
  unint64_t v78 = (v108 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v79 = (v78 + 27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = swift_allocObject();
  uint64_t v81 = v118;
  int v82 = v119;
  *(void *)(v80 + 16) = a1;
  *(void *)(v80 + 24) = v81;
  uint64_t v118 = a1;
  int v84 = v101;
  uint64_t v83 = v102;
  *(_DWORD *)(v80 + 32) = v82;
  *(_DWORD *)(v80 + 36) = v84;
  *(void *)(v80 + 40) = v83;
  *(void *)(v80 + 48) = sub_1B6959788;
  *(void *)(v80 + 56) = v114;
  *(void *)(v80 + 64) = v74;
  uint64_t v120 = v74;
  memcpy((void *)(v80 + 72), v106, 0x148uLL);
  sub_1B695B370(v76, v80 + v77, type metadata accessor for TriggerScript);
  int v85 = (uint64_t *)(v80 + v78);
  uint64_t v86 = v111;
  uint64_t v87 = v112;
  *int v85 = v111;
  v85[1] = v87;
  v85[2] = v113;
  uint64_t v88 = (_DWORD *)(v80 + v79);
  *uint64_t v88 = v82;
  v88[1] = v84;
  *(void *)(v80 + ((v79 + 15) & 0xFFFFFFFFFFFFFFF8)) = v103;
  if (v110)
  {
    long long v89 = *(void **)(v118 + 40);
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = sub_1B69599A0;
    *(void *)(v90 + 24) = v80;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v106);
    sub_1B62B2DF0(v86, v87);
    uint64_t v91 = qword_1EB9852D0;
    swift_retain();
    swift_retain();
    if (v91 != -1) {
      swift_once();
    }
    uint64_t v92 = qword_1EB9854F8;
    swift_retain();
    if (v92 != -1) {
      swift_once();
    }
    uint64_t v93 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    uint64_t v94 = (void *)swift_allocObject();
    v94[2] = v93;
    v94[3] = sub_1B633A540;
    v94[4] = v90;
    *(void *)&long long v127 = sub_1B6397D4C;
    *((void *)&v127 + 1) = v94;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v126 = sub_1B639AA00;
    *((void *)&v126 + 1) = &unk_1F0FB82A0;
    uint64_t v95 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v89, sel_addOperationWithBlock_, v95);
    _Block_release(v95);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v115);
    swift_release();
    swift_release_n();
    swift_release();
  }
  else
  {
    uint64_t v119 = *(void *)(v118 + 32);
    uint64_t v96 = swift_allocObject();
    *(void *)(v96 + 16) = sub_1B69599A0;
    *(void *)(v96 + 24) = v80;
    uint64_t v97 = swift_allocObject();
    *(void *)(v97 + 16) = sub_1B633A544;
    *(void *)(v97 + 24) = v96;
    *(void *)&long long v127 = sub_1B633A544;
    *((void *)&v127 + 1) = v97;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v126 = sub_1B691FFC8;
    *((void *)&v126 + 1) = &unk_1F0FBA090;
    long long v98 = _Block_copy(&aBlock);
    uint64_t v110 = *((void *)&v127 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B695BA40((uint64_t)v106);
    sub_1B62B2DF0(v86, v87);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v119, v98);
    _Block_release(v98);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v115);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v55 = 1;
LABEL_50:
  swift_release();
  return v55;
}

uint64_t sub_1B6956A38(uint64_t a1, uint64_t a2, NSObject *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void), unint64_t *a9, uint64_t (*a10)(uint64_t), uint64_t a11, unint64_t *a12, unint64_t *a13, uint64_t (*a14)(void), uint64_t a15, void (*a16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *), long long *a17, uint64_t **a18, void *a19, uint64_t *a20,void (*a21)(uint64_t),uint64_t *a22)
{
  int v337 = a4;
  uint64_t v317 = a2;
  v321 = a10;
  v320 = a9;
  uint64_t v394 = *MEMORY[0x1E4F143B8];
  uint64_t v314 = a8(0);
  uint64_t v309 = *(void *)(v314 - 8);
  MEMORY[0x1F4188790](v314, v27);
  v326 = (char *)&v306 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29, v30);
  v307 = (char *)&v306 - v31;
  uint64_t v339 = a6;
  uint64_t v340 = a1;
  uint64_t v32 = *(void *)(a1 + 16);
  swift_retain_n();
  uint64_t v338 = a7;
  swift_retain_n();
  swift_retain();
  dispatch_group_t v347 = a3;
  dispatch_group_enter(a3);
  long long v33 = *(_OWORD *)(a5 + 184);
  v355[0] = *(_OWORD *)(a5 + 168);
  v355[1] = v33;
  uint64_t v341 = a5;
  uint64_t v356 = *(void *)(a5 + 200);
  uint64_t v34 = OBJC_IVAR____TtC3VFX13EntityManager_queryManager;
  uint64_t v325 = v32;
  sub_1B62C9DA8(v32, (uint64_t)v355, 0x200000000, v357);
  sub_1B62D7A10((uint64_t)v357, (uint64_t)v385, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v322 = v34;
  if (v385[0])
  {
    int v35 = v387 > 0;
    if (v387 >= 1)
    {
      uint64_t v36 = v386;
      if (v386)
      {
        LODWORD(v318) = v387 > 0;
        uint64_t v37 = v385[5];
        sub_1B62AC710(0, v320, v321, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        uint64_t v39 = v38;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v40 = 48 * v36;
        char v41 = (uint64_t *)(v37 + 40);
        do
        {
          uint64_t v46 = *v41;
          uint64_t v47 = *(os_unfair_lock_s **)(*v41 + 376);
          swift_retain();
          os_unfair_lock_lock(v47);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 344));
          int v48 = *(_DWORD *)(v46 + 24);
          swift_retain();
          memset(v382, 0, 40);
          uint64_t v376 = 0;
          long long v374 = 0u;
          long long v375 = 0u;
          int v49 = sub_1B637F628(v48, v39, (uint64_t)&off_1F0F836B8, 0, 0, (uint64_t)v382, (uint64_t)&v374);
          swift_release();
          sub_1B6386458((uint64_t)&v374);
          sub_1B6386458((uint64_t)v382);
          if (sub_1B63B4340(v49))
          {
            sub_1B66603E4(v49);
          }
          else
          {
            uint64_t v42 = *(void *)(v46 + 232);
            uint64_t v43 = *(void *)(v46 + 240);
            char v44 = *(unsigned char *)(v46 + 120);
            uint64_t v45 = *(unsigned int *)(v46 + 28);
            LOBYTE(v382[0]) = *(unsigned char *)(v46 + 32);
            sub_1B628EEF4(v42, v43, v49, v44, v45 | ((unint64_t)LOBYTE(v382[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 376));
          swift_release();
          v41 += 6;
          v40 -= 48;
        }
        while (v40);
        sub_1B632F170(v357);
        int v35 = v318;
      }
    }
    sub_1B632F170(v357);
  }
  else
  {
    int v35 = 0;
  }
  long long v50 = *(_OWORD *)(v341 + 64);
  v353[0] = *(_OWORD *)(v341 + 48);
  v353[1] = v50;
  uint64_t v354 = *(void *)(v341 + 80);
  sub_1B62C9DA8(v325, (uint64_t)v353, 0x200000000, v358);
  sub_1B62D7A10((uint64_t)v358, (uint64_t)v382, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v382[0])
  {
    if (v384 >= 1)
    {
      uint64_t v51 = v383;
      if (v383)
      {
        uint64_t v52 = v382[5];
        sub_1B62AC710(0, a12, v321, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        uint64_t v54 = v53;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v55 = 48 * v51;
        uint64_t v56 = (uint64_t *)(v52 + 40);
        do
        {
          uint64_t v61 = *v56;
          uint64_t v62 = *(os_unfair_lock_s **)(*v56 + 376);
          swift_retain();
          os_unfair_lock_lock(v62);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v61 + 344));
          int v63 = *(_DWORD *)(v61 + 24);
          swift_retain();
          uint64_t v376 = 0;
          long long v374 = 0u;
          long long v375 = 0u;
          *(void *)&long long v370 = 0;
          long long v368 = 0u;
          long long v369 = 0u;
          int v64 = sub_1B637F628(v63, 0, 0, v54, (uint64_t)&off_1F0F61BF0, (uint64_t)&v374, (uint64_t)&v368);
          swift_release();
          sub_1B6386458((uint64_t)&v368);
          sub_1B6386458((uint64_t)&v374);
          if (sub_1B63B4340(v64))
          {
            sub_1B66603E4(v64);
          }
          else
          {
            uint64_t v57 = *(void *)(v61 + 232);
            uint64_t v58 = *(void *)(v61 + 240);
            char v59 = *(unsigned char *)(v61 + 120);
            uint64_t v60 = *(unsigned int *)(v61 + 28);
            LOBYTE(v374) = *(unsigned char *)(v61 + 32);
            sub_1B628EEF4(v57, v58, v64, v59, v60 | ((unint64_t)v374 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 376));
          swift_release();
          v56 += 6;
          v55 -= 48;
        }
        while (v55);
        sub_1B632F170(v358);
      }
    }
    sub_1B632F170(v358);
    int v35 = 1;
  }
  long long v65 = *(_OWORD *)(v341 + 104);
  v351[0] = *(_OWORD *)(v341 + 88);
  v351[1] = v65;
  uint64_t v352 = *(void *)(v341 + 120);
  sub_1B62C9DA8(v325, (uint64_t)v351, 0x200000000, v359);
  sub_1B62D7A10((uint64_t)v359, (uint64_t)&v374, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v319 = a11;
  if (!(void)v374)
  {
    uint64_t v324 = 0;
    uint64_t v172 = v341;
    goto LABEL_128;
  }
  if (v381 < 1 || (uint64_t v331 = v378) == 0)
  {
    uint64_t v324 = 0;
    uint64_t v172 = v341;
    goto LABEL_127;
  }
  LODWORD(v318) = v35;
  v333 = a22;
  v345 = a21;
  uint64_t v330 = v377;
  uint64_t v66 = (void *)v380;
  uint64_t v67 = *(void *)(v380 + 32);
  int v68 = *(unsigned __int8 *)(v379 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v327 = v380 + 48;
  v334 = (uint64_t **)(v380 + 104);
  sub_1B62AC710(0, a13, v321, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  v349[0] = v374;
  v349[1] = v375;
  uint64_t v350 = v376;
  v335 = v66;
  v323 = v66 + 8;
  v348 = (long long *)v371;
  uint64_t v70 = v69;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v71 = 0;
  uint64_t v324 = 0;
  v329 = (unsigned __int16 *)v67;
  LODWORD(v328) = v68;
  uint64_t v343 = v70;
LABEL_27:
  os_signpost_id_t v72 = (unsigned int *)(v330 + 48 * v71);
  uint64_t v73 = *v72;
  v336 = (uint64_t *)v72[1];
  uint64_t v74 = *((void *)v72 + 3);
  v344 = (uint64_t *)*((void *)v72 + 2);
  uint64_t v75 = *((void *)v72 + 5);
  uint64_t v342 = *((void *)v72 + 4);
  uint64_t v332 = v71;
  if (v68)
  {
    uint64_t v76 = *(os_unfair_lock_s **)(v75 + 376);
    swift_retain();
    os_unfair_lock_lock(v76);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v75 + 344));
  }
  else
  {
    swift_retain();
  }
  ecs_stack_allocator_push_snapshot(v67);
  sub_1B62D7A10(v327, (uint64_t)v393, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
  unint64_t v77 = v335;
  uint64_t v78 = v335[4];
  uint64_t v79 = *(void *)(*(void *)(*(void *)(*(void *)(v75 + 40) + 16) + 32) + 16) + 1;
  swift_retain();
  v77[6] = ecs_stack_allocator_allocate(v78, 48 * v79, 8);
  v77[7] = v79;
  uint64_t v80 = v323;
  v323[1] = 0;
  v80[2] = 0;
  *uint64_t v80 = 0;
  swift_release();
  uint64_t v82 = v343;
  uint64_t v81 = v344;
  uint64_t v83 = v342;
  uint64_t v346 = sub_1B62C9024(v343, (uint64_t)&off_1F0F8E108, v344, v74, v342, (uint64_t)v77);
  if (!v81)
  {
    uint64_t v87 = (void (*)(uint64_t))v333;
    if (v73 == v336) {
      goto LABEL_34;
    }
    while (1)
    {
      uint64_t v137 = (uint64_t *)(v73 + 1);
      uint64_t v138 = (uint64_t *)(v346 + 16 * v73);
      uint64_t v139 = *v138;
      uint64_t v140 = v138[1];
      uint64_t v141 = swift_retain();
      sub_1B6920048(v141, v139, v140, v345, v87);
      swift_release();
      uint64_t v142 = *(void *)(*(void *)(v75 + 40) + 16);
      uint64_t v143 = *(void *)(v142 + 128);
      if (*(void *)(v143 + 16))
      {
        unint64_t v144 = sub_1B62C1A30(v82);
        if ((v145 & 1) != 0
          && *(void *)(*(void *)(v142 + 24) + 16 * *(void *)(*(void *)(v143 + 56) + 8 * v144) + 32) == v82)
        {
          v361[0] = v82;
          v361[1] = (uint64_t)&off_1F0F8E108;
          char v362 = 1;
          uint64_t v146 = *v334;
          uint64_t v147 = (*v334)[2];
          if (v147)
          {
            uint64_t v148 = (uint64_t)(v146 + 4);
            swift_retain();
            v344 = v146;
            swift_bridgeObjectRetain();
            uint64_t v149 = 0;
            while (2)
            {
              sub_1B695BADC(v148, (uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
              sub_1B639192C((uint64_t)v363, (uint64_t)&v368);
              sub_1B639192C((uint64_t)v361, (uint64_t)v348);
              switch(BYTE8(v370))
              {
                case 1:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 != 1) {
                    goto LABEL_96;
                  }
                  goto LABEL_105;
                case 2:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 == 2) {
                    goto LABEL_110;
                  }
                  goto LABEL_95;
                case 3:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 == 3)
                  {
LABEL_110:
                    sub_1B62C15C4(v360, (uint64_t)&v390);
                    sub_1B62C15C4(v348, (uint64_t)v388);
                    uint64_t v154 = *((void *)&v391 + 1);
                    uint64_t v155 = v392;
                    sub_1B62C14BC(&v390, *((uint64_t *)&v391 + 1));
                    LOBYTE(v154) = sub_1B6B3D86C(v388, v154, v155);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v388);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v390);
                    sub_1B6391400((uint64_t)&v368);
                    sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v154)
                    {
LABEL_115:
                      swift_bridgeObjectRelease();
                      uint64_t v158 = sub_1B6B1B930();
                      uint64_t v159 = *(void *)(v157 + 48);
                      if (v159)
                      {
                        uint64_t v160 = *(void *)(v157 + 64);
                        *(void *)(v159 + 8 * v160) = v73;
                        *(void *)(v157 + 64) = v160 + 1;
                      }
                      ((void (*)(long long *, void))v158)(&v368, 0);
                      uint64_t v87 = (void (*)(uint64_t))v333;
                      goto LABEL_88;
                    }
                  }
                  else
                  {
LABEL_95:
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v360);
LABEL_96:
                    sub_1B695BB44((uint64_t)&v368, (uint64_t (*)(void))sub_1B691F560);
                    sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  }
LABEL_97:
                  ++v149;
                  v148 += 72;
                  if (v147 != v149) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v87 = (void (*)(uint64_t))v333;
                  break;
                case 4:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373 != 4) {
                    goto LABEL_96;
                  }
                  int v150 = LOBYTE(v360[0]);
                  int v151 = v371[0];
                  sub_1B6391400((uint64_t)&v368);
                  sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  if (v150 == v151) {
                    goto LABEL_115;
                  }
                  goto LABEL_97;
                case 5:
                  if (v373 != 5) {
                    goto LABEL_96;
                  }
                  int8x16_t v156 = vorrq_s8(*(int8x16_t *)&v371[8], v372);
                  if (*(void *)&vorr_s8(*(int8x8_t *)v156.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v156, v156, 8uLL)) | *(void *)v371) {
                    goto LABEL_96;
                  }
                  sub_1B6391400((uint64_t)&v368);
                  sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  goto LABEL_115;
                default:
                  sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
                  if (v373) {
                    goto LABEL_96;
                  }
LABEL_105:
                  uint64_t v152 = *(void *)&v360[0];
                  uint64_t v153 = *(void *)v371;
                  sub_1B6391400((uint64_t)&v368);
                  sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
                  if (v152 == v153) {
                    goto LABEL_115;
                  }
                  goto LABEL_97;
              }
              break;
            }
          }
          else
          {
            swift_retain();
          }
          uint64_t v161 = *(void *)(v75 + 240) - *(void *)(v75 + 232);
          uint64_t v162 = v335;
          int v163 = ecs_stack_allocator_allocate(v335[4], 8 * v161, 8);
          void *v163 = v73;
          sub_1B639192C((uint64_t)v361, (uint64_t)&v368);
          *(void *)v371 = v163;
          *(void *)&v371[8] = v161;
          *(void *)&v371[16] = 1;
          uint64_t v164 = (uint64_t *)v162[13];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v162[13] = v164;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v164 = sub_1B68C0C6C(0, v164[2] + 1, 1, v164);
            *v334 = v164;
          }
          unint64_t v167 = v164[2];
          unint64_t v166 = v164[3];
          if (v167 >= v166 >> 1)
          {
            uint64_t v164 = sub_1B68C0C6C(v166 > 1, v167 + 1, 1, v164);
            *v334 = v164;
          }
          v164[2] = v167 + 1;
          int v168 = &v164[9 * v167];
          *((_OWORD *)v168 + 2) = v368;
          long long v169 = v369;
          long long v170 = v370;
          long long v171 = *(_OWORD *)v371;
          v168[12] = *(void *)&v371[16];
          *((_OWORD *)v168 + 4) = v170;
          *((_OWORD *)v168 + 5) = v171;
          *((_OWORD *)v168 + 3) = v169;
LABEL_88:
          uint64_t v82 = v343;
          sub_1B6391400((uint64_t)v361);
          swift_release();
        }
      }
      ++v73;
      if (v137 == v336) {
        goto LABEL_34;
      }
    }
  }
  int v84 = (void (*)(uint64_t))v333;
  if (!v83) {
    goto LABEL_34;
  }
  uint64_t v85 = v83;
  uint64_t v86 = 0;
LABEL_46:
  uint64_t v99 = v344[v86];
  uint64_t v100 = (uint64_t *)(v346 + 16 * v86);
  uint64_t v101 = *v100;
  uint64_t v102 = v100[1];
  uint64_t v103 = swift_retain();
  uint64_t v104 = v102;
  uint64_t v105 = v343;
  sub_1B6920048(v103, v101, v104, v345, v84);
  swift_release();
  uint64_t v106 = *(void *)(*(void *)(v75 + 40) + 16);
  uint64_t v107 = *(void *)(v106 + 128);
  if (!*(void *)(v107 + 16)) {
    goto LABEL_45;
  }
  unint64_t v108 = sub_1B62C1A30(v105);
  if ((v109 & 1) == 0
    || *(void *)(*(void *)(v106 + 24) + 16 * *(void *)(*(void *)(v107 + 56) + 8 * v108) + 32) != v105)
  {
    goto LABEL_45;
  }
  v361[0] = v105;
  v361[1] = (uint64_t)&off_1F0F8E108;
  char v362 = 1;
  uint64_t v110 = *v334;
  uint64_t v111 = (*v334)[2];
  if (!v111)
  {
    swift_retain();
    goto LABEL_77;
  }
  uint64_t v112 = (uint64_t)(v110 + 4);
  swift_retain();
  v336 = v110;
  swift_bridgeObjectRetain();
  uint64_t v113 = 0;
  while (2)
  {
    sub_1B695BADC(v112, (uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
    sub_1B639192C((uint64_t)v363, (uint64_t)&v368);
    sub_1B639192C((uint64_t)v361, (uint64_t)v348);
    switch(BYTE8(v370))
    {
      case 1:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 != 1) {
          goto LABEL_52;
        }
        goto LABEL_67;
      case 2:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 == 2) {
          goto LABEL_64;
        }
        goto LABEL_51;
      case 3:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 != 3)
        {
LABEL_51:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v360);
LABEL_52:
          sub_1B695BB44((uint64_t)&v368, (uint64_t (*)(void))sub_1B691F560);
          sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
          goto LABEL_53;
        }
LABEL_64:
        sub_1B62C15C4(v360, (uint64_t)&v390);
        sub_1B62C15C4(v348, (uint64_t)v388);
        uint64_t v116 = *((void *)&v391 + 1);
        uint64_t v117 = v392;
        sub_1B62C14BC(&v390, *((uint64_t *)&v391 + 1));
        uint64_t v118 = v117;
        uint64_t v85 = v342;
        LOBYTE(v116) = sub_1B6B3D86C(v388, v116, v118);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v388);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v390);
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        if ((v116 & 1) == 0)
        {
LABEL_53:
          ++v113;
          v112 += 72;
          if (v111 == v113)
          {
            swift_bridgeObjectRelease();
            int v84 = (void (*)(uint64_t))v333;
LABEL_77:
            uint64_t v126 = *(void *)(v75 + 240) - *(void *)(v75 + 232);
            long long v127 = v335;
            long long v128 = ecs_stack_allocator_allocate(v335[4], 8 * v126, 8);
            *long long v128 = v99;
            sub_1B639192C((uint64_t)v361, (uint64_t)&v368);
            *(void *)v371 = v128;
            *(void *)&v371[8] = v126;
            *(void *)&v371[16] = 1;
            long long v129 = (uint64_t *)v127[13];
            char v130 = swift_isUniquelyReferenced_nonNull_native();
            v127[13] = v129;
            if ((v130 & 1) == 0)
            {
              long long v129 = sub_1B68C0C6C(0, v129[2] + 1, 1, v129);
              *v334 = v129;
            }
            unint64_t v132 = v129[2];
            unint64_t v131 = v129[3];
            if (v132 >= v131 >> 1)
            {
              long long v129 = sub_1B68C0C6C(v131 > 1, v132 + 1, 1, v129);
              *v334 = v129;
            }
            v129[2] = v132 + 1;
            uint64_t v133 = &v129[9 * v132];
            *((_OWORD *)v133 + 2) = v368;
            long long v134 = v369;
            long long v135 = v370;
            long long v136 = *(_OWORD *)v371;
            v133[12] = *(void *)&v371[16];
            *((_OWORD *)v133 + 4) = v135;
            *((_OWORD *)v133 + 5) = v136;
            *((_OWORD *)v133 + 3) = v134;
            goto LABEL_44;
          }
          continue;
        }
LABEL_73:
        swift_bridgeObjectRelease();
        char v123 = sub_1B6B1B930();
        uint64_t v124 = *(void *)(v122 + 48);
        if (v124)
        {
          uint64_t v125 = *(void *)(v122 + 64);
          *(void *)(v124 + 8 * v125) = v99;
          *(void *)(v122 + 64) = v125 + 1;
        }
        ((void (*)(long long *, void))v123)(&v368, 0);
        int v84 = (void (*)(uint64_t))v333;
LABEL_44:
        sub_1B6391400((uint64_t)v361);
        swift_release();
LABEL_45:
        if (++v86 != v85) {
          goto LABEL_46;
        }
LABEL_34:
        uint64_t v88 = v335;
        uint64_t v89 = v324;
        sub_1B6345178(v335, (unsigned __int16 **)v349, (uint64_t)v393);
        uint64_t v324 = v89;
        uint64_t v67 = (uint64_t)v329;
        int v68 = (int)v328;
        if (*(void *)(v88[13] + 16))
        {
          uint64_t v90 = swift_bridgeObjectRetain();
          uint64_t v91 = v335;
          sub_1B639147C(v90, v75);
          swift_bridgeObjectRelease();
          char v92 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v93 = v91[13];
          if (v92)
          {
            sub_1B6399BB8(0, *(void *)(v93 + 16));
          }
          else
          {
            uint64_t v94 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v93 + 24) >= 2uLL)
            {
              sub_1B638C038(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v94 = (void *)swift_allocObject();
              size_t v95 = j__malloc_size(v94);
              v94[2] = 0;
              v94[3] = 2 * ((uint64_t)(v95 - 32) / 72);
            }
            *v334 = v94;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v335[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            uint64_t v96 = *(char **)(v75 + 232);
            uint64_t v97 = *(char **)(v75 + 256);
            if (v96 == v97)
            {
              long long v98 = *(char **)(v75 + 240);
            }
            else
            {
              sub_1B666018C(v97, v96);
              uint64_t v97 = *(char **)(v75 + 232);
              long long v98 = *(char **)(v75 + 240);
              if (v98 == v97)
              {
                long long v98 = 0;
                uint64_t v97 = 0;
                *(void *)(v75 + 232) = 0;
                *(void *)(v75 + 240) = 0;
              }
            }
            *(void *)(v75 + 248) = v98;
            *(void *)(v75 + 256) = v97;
          }
        }
        ecs_stack_allocator_pop_snapshot(v67);
        if (v68)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v75 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v75 + 376));
        }
        swift_release();
        uint64_t v71 = v332 + 1;
        if (v332 + 1 != v331) {
          goto LABEL_27;
        }
        sub_1B632F170(v359);
        uint64_t v172 = v341;
        int v35 = v318;
LABEL_127:
        sub_1B632F170(v359);
LABEL_128:
        uint64_t v173 = a17;
        uint64_t v315 = a15;
        long long v174 = *(_OWORD *)(v172 + 144);
        long long v390 = *(_OWORD *)(v172 + 128);
        long long v391 = v174;
        uint64_t v392 = *(void *)(v172 + 160);
        sub_1B62C9DA8(v325, (uint64_t)&v390, 0x200000000, v360);
        sub_1B62D7A10((uint64_t)v360, (uint64_t)&v368, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        if ((void)v368)
        {
          LODWORD(v318) = v35;
          uint64_t v175 = v372.i64[1];
          uint64_t v176 = v319;
          if (v372.i64[1] >= 1 && (uint64_t v177 = *(void *)&v371[8]) != 0)
          {
            v348 = a17;
            uint64_t v178 = *((void *)&v370 + 1);
            sub_1B62AC710(0, v320, v321, v319, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            uint64_t v180 = v179;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v181 = 48 * v177;
            char v182 = (uint64_t *)(v178 + 40);
            do
            {
              uint64_t v187 = *v182;
              uint64_t v188 = *(os_unfair_lock_s **)(*v182 + 376);
              swift_retain();
              os_unfair_lock_lock(v188);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v187 + 344));
              int v189 = *(_DWORD *)(v187 + 24);
              swift_retain();
              memset(v363, 0, 40);
              memset(v361, 0, sizeof(v361));
              int v190 = sub_1B637F628(v189, 0, 0, v180, (uint64_t)&off_1F0F836B8, (uint64_t)v363, (uint64_t)v361);
              swift_release();
              sub_1B6386458((uint64_t)v361);
              sub_1B6386458((uint64_t)v363);
              if (sub_1B63B4340(v190))
              {
                sub_1B66603E4(v190);
              }
              else
              {
                uint64_t v183 = *(void *)(v187 + 232);
                uint64_t v184 = *(void *)(v187 + 240);
                char v185 = *(unsigned char *)(v187 + 120);
                uint64_t v186 = *(unsigned int *)(v187 + 28);
                LOBYTE(v363[0]) = *(unsigned char *)(v187 + 32);
                sub_1B628EEF4(v183, v184, v190, v185, v186 | ((unint64_t)LOBYTE(v363[0]) << 32));
              }
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v187 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v187 + 376));
              swift_release();
              v182 += 6;
              v181 -= 48;
            }
            while (v181);
            sub_1B632F170((uint64_t *)v360);
            uint64_t v191 = v341;
            uint64_t v176 = v319;
            uint64_t v173 = v348;
          }
          else
          {
            uint64_t v191 = v341;
          }
          sub_1B632F170((uint64_t *)v360);
          BOOL v194 = v175 <= 0;
          int v35 = v318;
          if (!v194) {
            int v35 = 1;
          }
          uint64_t v192 = v340;
          uint64_t v193 = v317;
          if (v317)
          {
LABEL_143:
            v35 |= sub_1B6923F08(v340, v193, a14, v320, v321, v176, v315, a16);
            uint64_t v192 = v340;
            uint64_t v191 = v341;
          }
        }
        else
        {
          uint64_t v192 = v340;
          uint64_t v191 = v341;
          uint64_t v176 = v319;
          uint64_t v193 = v317;
          if (v317) {
            goto LABEL_143;
          }
        }
        int v195 = v35 | ((uint64_t (*)(uint64_t))v173)(v192);
        long long v196 = *(_OWORD *)(v191 + 224);
        v388[0] = *(_OWORD *)(v191 + 208);
        v388[1] = v196;
        uint64_t v389 = *(void *)(v191 + 240);
        sub_1B62C9DA8(v325, (uint64_t)v388, 0x200000000, v361);
        sub_1B62D7A10((uint64_t)v361, (uint64_t)v363, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        uint64_t v197 = (unsigned __int16 *)v363[0];
        if (!v363[0])
        {
LABEL_249:
          if (v195) {
            goto LABEL_250;
          }
          goto LABEL_251;
        }
        if (v367 < 1 || (v313 = v364) == 0)
        {
          sub_1B632F170(v361);
          goto LABEL_249;
        }
        LODWORD(v346) = v195;
        v336 = a20;
        v335 = a19;
        v334 = a18;
        int v198 = v366;
        uint64_t v312 = v363[5];
        v323 = (void *)v366[4];
        LODWORD(v322) = *(unsigned __int8 *)(v365 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        sub_1B62AC710(0, v320, v321, v176, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        v328 = (void *)(v325 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        v344 = v198;
        v310 = v198 + 8;
        uint64_t v311 = v199;
        uint64_t v308 = v199 - 8;
        uint64_t v327 = (uint64_t)v197 + 41;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v200 = 0;
        v329 = v197;
        do
        {
          char v201 = (unsigned int *)(v312 + 48 * (void)v200);
          unint64_t v202 = *v201;
          v345 = (void (*)(uint64_t))v201[1];
          uint64_t v203 = *((void *)v201 + 3);
          v333 = (uint64_t *)*((void *)v201 + 2);
          uint64_t v204 = *((void *)v201 + 4);
          int v205 = (long long *)*((void *)v201 + 5);
          v321 = v200;
          if (v322)
          {
            char v206 = (os_unfair_lock_s *)*((void *)v205 + 47);
            swift_retain();
            os_unfair_lock_lock(v206);
            os_unfair_lock_lock(*((os_unfair_lock_t *)v205 + 43));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot((uint64_t)v323);
          uint64_t v207 = v344;
          char v208 = (unint64_t *)v344[6];
          uint64_t v319 = v344[7];
          v320 = v208;
          uint64_t v209 = v344[8];
          uint64_t v317 = v344[9];
          uint64_t v318 = v209;
          uint64_t v316 = v344[10];
          uint64_t v210 = v344[4];
          uint64_t v211 = *(void *)(*(void *)(*(void *)(*((void *)v205 + 5) + 16) + 32) + 16) + 1;
          swift_retain();
          v207[6] = (uint64_t)ecs_stack_allocator_allocate(v210, 48 * v211, 8);
          v207[7] = v211;
          v212 = v310;
          v310[1] = 0;
          _OWORD v212[2] = 0;
          uint64_t *v212 = 0;
          swift_release();
          uint64_t v213 = v333;
          uint64_t v343 = sub_1B62C9024(v314, v315, v333, v203, v204, (uint64_t)v207);
          uint64_t v342 = sub_1B62C9024(v311, (uint64_t)&off_1F0F836B8, v213, v203, v204, (uint64_t)v207);
          v348 = v205;
          if (v213)
          {
            if (v204)
            {
              uint64_t v214 = 0;
              uint64_t v331 = *(void *)(v309 + 72);
              uint64_t v215 = (uint64_t)v307;
              uint64_t v330 = *(void *)(*(void *)v308 + 72);
              uint64_t v332 = v204;
              while (1)
              {
                uint64_t v216 = v333[v214];
                uint64_t v217 = swift_retain();
                if (*((unsigned char *)v205 + 184)) {
                  break;
                }
                uint64_t v218 = *(int *)(*((void *)v205 + 21) + 4 * v216);
                int v219 = *(_DWORD *)(*(void *)(v217 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                 + 12 * (int)v218
                                 + 8);
                swift_release();
                BOOL v220 = v218 == -1 && v219 == 0;
                if (v220
                  || (v218 & 0x80000000) != 0
                  || v328[1] <= v218
                  || (v219 != -1 ? (BOOL v221 = *(_DWORD *)(*v328 + 12 * (int)v218 + 8) == v219) : (BOOL v221 = 1),
                      !v221
                   || (uint64_t v222 = *(void *)(*(void *)(*(void *)(v325 + 80)
                                                    + 8 * *(__int16 *)(*v328 + 12 * (int)v218 + 6)
                                                    + 32)
                                        + 16),
                       uint64_t v223 = *(void *)(v222 + 128),
                       !*(void *)(v223 + 16))
                   || (unint64_t v224 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), (v225 & 1) == 0)
                   || *(ValueMetadata **)(*(void *)(v222 + 24)
                                        + 16 * *(void *)(*(void *)(v223 + 56) + 8 * v224)
                                        + 32) != &type metadata for Tombstone))
                {
                  dispatch_group_enter(v347);
                  uint64_t v226 = *((void *)v205 + 6);
                  uint64_t v227 = *(void *)(v226 + 16);
                  if (v227)
                  {
                    uint64_t v228 = (void *)(v226 + 56);
                    while ((ValueMetadata *)*(v228 - 3) != &type metadata for ScriptCompileOptions)
                    {
                      v228 += 5;
                      if (!--v227) {
                        goto LABEL_174;
                      }
                    }
                    uint64_t v231 = (unsigned __int8 *)(*((void *)v205 + 16) + *v228 + 24 * v216);
                    uint64_t v229 = *v231;
                    uint64_t v232 = *((void *)v231 + 2);
                    uint64_t v230 = *((void *)v231 + 1);
                    swift_bridgeObjectRetain();
                    uint64_t v346 = v232;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
LABEL_174:
                    uint64_t v229 = 0;
                    uint64_t v230 = 0;
                    uint64_t v346 = 0;
                  }
                  sub_1B695BADC(v343 + v331 * v214, v215, (uint64_t (*)(void))v334);
                  uint64_t v233 = v215;
                  char v234 = *((unsigned char *)v205 + 184);
                  uint64_t v235 = swift_retain();
                  if (v234) {
                    break;
                  }
                  uint64_t v236 = *(unsigned int *)(*((void *)v205 + 21) + 4 * v216);
                  v345 = (void (*)(uint64_t))(v342 + v330 * v214);
                  uint64_t v237 = *(unsigned int *)(*(void *)(v235 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                         + 12 * (int)v236
                                         + 8);
                  swift_release();
                  uint64_t v238 = v236 | (v237 << 32);
                  uint64_t v239 = v339;
                  swift_retain();
                  uint64_t v240 = v338;
                  swift_retain();
                  long long v241 = v347;
                  uint64_t v242 = v238;
                  int v205 = v348;
                  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), void, uint64_t, NSObject *, uint64_t, uint64_t))v335)(v340, v233, v229, v230, v346, v242, v345, v337 & 1, v341, v241, v239, v240);

                  swift_release();
                  swift_release();
                  sub_1B677C3D4(v229, v230);
                  sub_1B695BB44(v233, (uint64_t (*)(void))v336);
                  uint64_t v215 = v233;
                  uint64_t v204 = v332;
                }
                if (++v214 == v204) {
                  goto LABEL_208;
                }
              }
LABEL_254:
              swift_release_n();
              swift_release_n();
              sub_1B6E32BE8();
              __break(1u);
              JUMPOUT(0x1B6958AACLL);
            }
          }
          else if (v202 != v345)
          {
            v333 = *(uint64_t **)(v309 + 72);
            uint64_t v332 = *(void *)(*(void *)v308 + 72);
            do
            {
              uint64_t v243 = swift_retain();
              if (*((unsigned char *)v205 + 184)) {
                goto LABEL_254;
              }
              uint64_t v244 = *(int *)(*((void *)v205 + 21) + 4 * v202);
              int v245 = *(_DWORD *)(*(void *)(v243 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v244 + 8);
              swift_release();
              BOOL v246 = v244 == -1 && v245 == 0;
              if (v246
                || (v244 & 0x80000000) != 0
                || v328[1] <= v244
                || (v245 != -1 ? (BOOL v247 = *(_DWORD *)(*v328 + 12 * (int)v244 + 8) == v245) : (BOOL v247 = 1),
                    !v247
                 || (uint64_t v248 = *(void *)(*(void *)(*(void *)(v325 + 80)
                                                  + 8 * *(__int16 *)(*v328 + 12 * (int)v244 + 6)
                                                  + 32)
                                      + 16),
                     uint64_t v249 = *(void *)(v248 + 128),
                     !*(void *)(v249 + 16))
                 || (unint64_t v250 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), (v251 & 1) == 0)
                 || *(ValueMetadata **)(*(void *)(v248 + 24)
                                      + 16 * *(void *)(*(void *)(v249 + 56) + 8 * v250)
                                      + 32) != &type metadata for Tombstone))
              {
                dispatch_group_enter(v347);
                uint64_t v252 = *((void *)v205 + 6);
                uint64_t v253 = *(void *)(v252 + 16);
                if (v253)
                {
                  uint64_t v254 = (void *)(v252 + 56);
                  uint64_t v255 = (uint64_t)v326;
                  while ((ValueMetadata *)*(v254 - 3) != &type metadata for ScriptCompileOptions)
                  {
                    v254 += 5;
                    if (!--v253)
                    {
                      uint64_t v256 = 0;
                      uint64_t v257 = 0;
                      uint64_t v258 = 0;
                      goto LABEL_205;
                    }
                  }
                  int v259 = (unsigned __int8 *)(*((void *)v205 + 16) + *v254 + 24 * v202);
                  uint64_t v256 = *v259;
                  uint64_t v260 = *((void *)v259 + 2);
                  uint64_t v257 = *((void *)v259 + 1);
                  swift_bridgeObjectRetain();
                  uint64_t v258 = v260;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  uint64_t v256 = 0;
                  uint64_t v257 = 0;
                  uint64_t v258 = 0;
                }
                uint64_t v255 = (uint64_t)v326;
LABEL_205:
                sub_1B695BADC(v343 + (void)v333 * v202, v255, (uint64_t (*)(void))v334);
                char v261 = *((unsigned char *)v205 + 184);
                uint64_t v262 = swift_retain();
                if (v261) {
                  goto LABEL_254;
                }
                uint64_t v263 = *(unsigned int *)(*((void *)v205 + 21) + 4 * v202);
                uint64_t v346 = v342 + v332 * v202;
                uint64_t v264 = *(unsigned int *)(*(void *)(v262 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                       + 12 * (int)v263
                                       + 8);
                swift_release();
                uint64_t v265 = v263 | (v264 << 32);
                uint64_t v266 = v339;
                swift_retain();
                uint64_t v267 = (void (*)(uint64_t))v202;
                uint64_t v268 = v338;
                swift_retain();
                long long v269 = v347;
                ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, NSObject *, uint64_t, uint64_t))v335)(v340, v255, v256, v257, v258, v265, v346, v337 & 1, v341, v269, v266, v268);

                int v205 = v348;
                swift_release();
                unint64_t v202 = (unint64_t)v267;
                swift_release();
                sub_1B677C3D4(v256, v257);
                sub_1B695BB44(v255, (uint64_t (*)(void))v336);
              }
              ++v202;
            }
            while ((void (*)(uint64_t))v202 != v345);
LABEL_208:
            LODWORD(v346) = 1;
          }
          uint64_t v270 = v344;
          unint64_t v271 = v344[6];
          uint64_t v272 = v344[8];
          if (!v272)
          {
            uint64_t v298 = v344[7];
            char v299 = (void *)v344[4];
            char v301 = v344;
            uint64_t v300 = v321;
            goto LABEL_246;
          }
          uint64_t v273 = 0;
          uint64_t v274 = v344[6];
          do
          {
            char v276 = (uint64_t *)(v271 + 48 * v273);
            uint64_t v277 = *v276;
            uint64_t v278 = (void (*)(uint64_t))v276[4];
            uint64_t v279 = v270[9];
            if (v279) {
              BOOL v280 = v277 == v279;
            }
            else {
              BOOL v280 = 0;
            }
            if (v280 || !v329[11]) {
              goto LABEL_211;
            }
            unint64_t v281 = v329[9];
            char v282 = (void *)(v327 + v329[8]);
            uint64_t v283 = v276[2];
            v284 = v282;
            unint64_t v285 = v281 >> 4;
            uint64_t v286 = v327;
            if (v281 >= 0x10)
            {
              while (*v284 != v277)
              {
                ++v286;
                v284 += 2;
                if (!--v285) {
                  goto LABEL_226;
                }
              }
              unsigned int v287 = *(unsigned __int8 *)(v286 + v329[10]);
              BOOL v194 = v287 > 5;
              int v288 = (1 << v287) & 0x23;
              if (v194 || v288 == 0)
              {
LABEL_211:
                uint64_t v275 = swift_retain();
                v278(v275);
                swift_release();
                goto LABEL_212;
              }
            }
LABEL_226:
            if (swift_conformsToProtocol2()) {
              uint64_t v290 = v283;
            }
            else {
              uint64_t v290 = 0;
            }
            if (v290)
            {
              uint64_t v291 = v282;
              unint64_t v292 = v281 >> 4;
              uint64_t v293 = v327;
              if (v281 < 0x10) {
                goto LABEL_211;
              }
              while (*v291 != v290)
              {
                ++v293;
                v291 += 2;
                if (!--v292) {
                  goto LABEL_238;
                }
              }
              unsigned int v294 = *(unsigned __int8 *)(v293 + v329[10]);
              BOOL v194 = v294 > 5;
              int v295 = (1 << v294) & 0x23;
              if (v194 || v295 == 0) {
                goto LABEL_211;
              }
LABEL_238:
              uint64_t v297 = 16 * (v281 >> 4);
              while (*v282 != v290)
              {
                v282 += 2;
                v297 -= 16;
                if (!v297) {
                  goto LABEL_211;
                }
              }
            }
LABEL_212:
            uint64_t v270 = v344;
            ++v273;
            int v205 = v348;
            unint64_t v271 = v274;
          }
          while (v273 != v272);
          uint64_t v298 = v344[7];
          unint64_t v271 = v344[6];
          char v299 = (void *)v344[4];
          uint64_t v300 = v321;
          if (v344[8] >= 1) {
            swift_arrayDestroy();
          }
          char v301 = v344;
LABEL_246:
          ecs_stack_allocator_deallocate(v299, v271, 48 * v298);
          uint64_t v302 = v319;
          v301[6] = (uint64_t)v320;
          v301[7] = v302;
          uint64_t v303 = v317;
          v301[8] = v318;
          v301[9] = v303;
          v301[10] = v316;
          sub_1B634507C((char *)v205);
          ecs_stack_allocator_pop_snapshot((uint64_t)v323);
          if (v322)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v205 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v205 + 47));
          }
          swift_release();
          uint64_t v200 = (uint64_t (*)(uint64_t))((char *)v300 + 1);
        }
        while (v200 != v313);
        sub_1B632F170(v361);
        sub_1B632F170(v361);
        if ((v346 & 1) == 0) {
          goto LABEL_251;
        }
LABEL_250:
        uint64_t v304 = swift_retain();
        sub_1B6925104(v304);
        swift_release();
LABEL_251:
        dispatch_group_leave(v347);
        swift_release_n();
        swift_release_n();
        return swift_release();
      case 4:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373 != 4) {
          goto LABEL_52;
        }
        int v114 = LOBYTE(v360[0]);
        int v115 = v371[0];
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v220 = v114 == v115;
        uint64_t v85 = v342;
        if (!v220) {
          goto LABEL_53;
        }
        goto LABEL_73;
      case 5:
        if (v373 != 5) {
          goto LABEL_52;
        }
        int8x16_t v121 = vorrq_s8(*(int8x16_t *)&v371[8], v372);
        if (*(void *)&vorr_s8(*(int8x8_t *)v121.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v121, v121, 8uLL)) | *(void *)v371) {
          goto LABEL_52;
        }
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        goto LABEL_73;
      default:
        sub_1B639192C((uint64_t)&v368, (uint64_t)v360);
        if (v373) {
          goto LABEL_52;
        }
LABEL_67:
        uint64_t v119 = *(void *)&v360[0];
        uint64_t v120 = *(void *)v371;
        sub_1B6391400((uint64_t)&v368);
        sub_1B695BB44((uint64_t)v363, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v220 = v119 == v120;
        uint64_t v85 = v342;
        if (!v220) {
          goto LABEL_53;
        }
        goto LABEL_73;
    }
  }
}

void sub_1B6958ADC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  dispatch_group_enter(a1);
  memcpy(__dst, (const void *)(a2 + 96), sizeof(__dst));
  sub_1B6956A38(a2, a3, a1, 1, (uint64_t)__dst, a4, a5, type metadata accessor for EmitterScript, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (unint64_t *)&unk_1EB97E750, &qword_1EB97F7C0, type metadata accessor for EmitterScript, (uint64_t)&off_1F0F5EBD0, sub_1B69433A0, (long long *)sub_1B6944674, (uint64_t **)type metadata accessor for EmitterScript, sub_1B6944C70,
    (uint64_t *)type metadata accessor for EmitterScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B6787890);
  memcpy(v16, (const void *)(a2 + 424), sizeof(v16));
  sub_1B6956A38(a2, a3, a1, 1, (uint64_t)v16, a4, a5, type metadata accessor for GraphScript, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (unint64_t *)&unk_1EB97E720, (unint64_t *)&unk_1EB97F790, type metadata accessor for GraphScript, (uint64_t)&off_1F0F55610, sub_1B6945A30, (long long *)sub_1B6946B50, (uint64_t **)type metadata accessor for GraphScript, sub_1B694714C,
    (uint64_t *)type metadata accessor for GraphScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B6787890);
  memcpy(v15, (const void *)(a2 + 752), sizeof(v15));
  sub_1B6956A38(a2, a3, a1, 1, (uint64_t)v15, a4, a5, type metadata accessor for SimpleScript, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (unint64_t *)&unk_1EB97E740, (unint64_t *)&unk_1EB97F7B0, type metadata accessor for SimpleScript, (uint64_t)&off_1F0F5C308, sub_1B6947F0C, (long long *)sub_1B6949024, (uint64_t **)type metadata accessor for SimpleScript, sub_1B6949620,
    (uint64_t *)type metadata accessor for SimpleScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B6787890);
  memcpy(v14, (const void *)(a2 + 1080), sizeof(v14));
  sub_1B694D634(a2, a3, a1, 1, (uint64_t)v14, a4, a5, type metadata accessor for MetalFunctionScript, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (unint64_t *)&qword_1EB981060, (unint64_t *)&unk_1EB981190, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1F0F7CDE8, sub_1B694A3E0, (long long *)sub_1B6924B00, (uint64_t **)type metadata accessor for MetalFunctionScript, sub_1B694AE94,
    (uint64_t *)type metadata accessor for MetalFunctionScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B6787890);
  memcpy(v13, (const void *)(a2 + 1408), sizeof(v13));
  sub_1B694D634(a2, a3, a1, 1, (uint64_t)v13, a4, a5, type metadata accessor for ShaderScript, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (unint64_t *)&qword_1EB97E730, (unint64_t *)&unk_1EB97F7A0, type metadata accessor for ShaderScript, (uint64_t)&off_1F0F5C050, sub_1B694BC54, (long long *)sub_1B69244FC, (uint64_t **)type metadata accessor for ShaderScript, sub_1B694C7CC,
    (uint64_t *)type metadata accessor for ShaderScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B6787890);
  memcpy(v12, (const void *)(a2 + 1736), sizeof(v12));
  sub_1B6956A38(a2, a3, a1, 1, (uint64_t)v12, a4, a5, type metadata accessor for ParticleInitScript, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, &qword_1EB97E700, (unint64_t *)&unk_1EB97F770, type metadata accessor for ParticleInitScript, (uint64_t)&off_1F0F796D0, sub_1B694F6D8, (long long *)sub_1B6950990, (uint64_t **)type metadata accessor for ParticleInitScript, sub_1B6950F8C,
    (uint64_t *)type metadata accessor for ParticleInitScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B6787890);
  memcpy(v11, (const void *)(a2 + 2064), sizeof(v11));
  sub_1B6956A38(a2, a3, a1, 1, (uint64_t)v11, a4, a5, type metadata accessor for ParticleUpdateScript, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, &qword_1EB97E710, (unint64_t *)&unk_1EB97F780, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1F0F82FB8, sub_1B6951D4C, (long long *)sub_1B6953004, (uint64_t **)type metadata accessor for ParticleUpdateScript, sub_1B6953600,
    (uint64_t *)type metadata accessor for ParticleUpdateScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B6787890);
  memcpy(v10, (const void *)(a2 + 2392), sizeof(v10));
  sub_1B6956A38(a2, a3, a1, 1, (uint64_t)v10, a4, a5, type metadata accessor for TriggerScript, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, &qword_1EB981070, (unint64_t *)&unk_1EB9811A0, type metadata accessor for TriggerScript, (uint64_t)&off_1F0F625B0, sub_1B69544AC, (long long *)sub_1B6955624, (uint64_t **)type metadata accessor for TriggerScript, sub_1B6955C20,
    (uint64_t *)type metadata accessor for TriggerScript,
    (void (*)(uint64_t))sub_1B6787890,
    (uint64_t *)sub_1B67861B0);

  dispatch_group_leave(a1);
}

uint64_t sub_1B695945C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B6959470(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62C55B0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1B69594DC()
{
  if (!qword_1E9DD2B00)
  {
    sub_1B62AC710(255, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B00);
    }
  }
}

void sub_1B695956C()
{
  if (!qword_1E9DD2B08)
  {
    sub_1B62AC710(255, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B08);
    }
  }
}

uint64_t sub_1B69595FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6959634(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1B62AC710(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1B69596A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1B62AC710(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1B6959704(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1B62AC710(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1B695977C(void *a1)
{
  sub_1B6933004(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B695978C()
{
  uint64_t v1 = (int *)type metadata accessor for TriggerScript(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 400) & ~v2;
  unint64_t v4 = (*(void *)(*((void *)v1 - 1) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[10];
  uint64_t v7 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }

  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((((v4 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1B69599A0()
{
  return sub_1B695AB30(type metadata accessor for TriggerScript, (uint64_t (*)(void, void, void, void, void, void, void, void *, char *, void, void, void, void, void))sub_1B692F6F4);
}

uint64_t sub_1B69599CC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B69599E0(uint64_t a1)
{
  return a1;
}

void *sub_1B6959A10(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:
    case 4:
    case 5:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2:

LABEL_4:
      uint64_t result = (void *)swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6959AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

unint64_t sub_1B6959B20()
{
  unint64_t result = qword_1E9DCD6F0;
  if (!qword_1E9DCD6F0)
  {
    type metadata accessor for MTLLibraryError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCD6F0);
  }
  return result;
}

unint64_t sub_1B6959B78()
{
  unint64_t result = qword_1E9DD2B20;
  if (!qword_1E9DD2B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2B20);
  }
  return result;
}

void sub_1B6959BCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1)
  {
    uint64_t v3 = (void *)(a2 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRelease();
  }
  else if (!(a2 >> 62))
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6959C28(uint64_t a1, uint64_t a2)
{
  sub_1B638C038(0, (unint64_t *)&unk_1EB97F4F0, (uint64_t (*)(uint64_t))sub_1B6959CBC, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B6959CBC()
{
  if (!qword_1EB97F4E8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB97F4E8);
    }
  }
}

void sub_1B6959D28()
{
  if (!qword_1E9DD2B40)
  {
    sub_1B62AC710(255, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B40);
    }
  }
}

void sub_1B6959DB8()
{
  if (!qword_1EB97E718)
  {
    sub_1B62AC710(255, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E718);
    }
  }
}

uint64_t sub_1B6959E50()
{
  uint64_t v1 = (int *)(type metadata accessor for ParticleUpdateScript(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 400) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((((v4 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1B695A040()
{
  uint64_t v1 = *(void *)(type metadata accessor for ParticleUpdateScript(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1B6930504(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void))(v0 + 48), *(void *)(v0 + 56), *(const char **)(v0 + 64), (void *)(v0 + 72), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + ((v3 + 27) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (void (*)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6928D48);
}

uint64_t sub_1B695A144()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B695A158(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  sub_1B62AC710(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(a2, a1, v7);
  return a2;
}

void sub_1B695A1DC()
{
  if (!qword_1E9DD2B50)
  {
    sub_1B62AC710(255, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B50);
    }
  }
}

void sub_1B695A26C()
{
  if (!qword_1EB97E708)
  {
    sub_1B62AC710(255, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E708);
    }
  }
}

uint64_t sub_1B695A304()
{
  uint64_t v1 = (int *)(type metadata accessor for ParticleInitScript(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 400) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((((v4 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1B695A4F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for ParticleInitScript(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1B6930504(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void))(v0 + 48), *(void *)(v0 + 56), *(const char **)(v0 + 64), (void *)(v0 + 72), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + ((v3 + 27) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (void (*)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6929BEC);
}

uint64_t sub_1B695A5F8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B695A608()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B695A644()
{
  if (!qword_1E9DD2B60)
  {
    sub_1B62AC710(255, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B60);
    }
  }
}

void sub_1B695A6D4()
{
  if (!qword_1EB97D688)
  {
    sub_1B62AC710(255, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D688);
    }
  }
}

uint64_t sub_1B695A76C()
{
  return sub_1B695A904(type metadata accessor for ShaderScript);
}

uint64_t sub_1B695A784()
{
  return sub_1B695AB30(type metadata accessor for ShaderScript, (uint64_t (*)(void, void, void, void, void, void, void, void *, char *, void, void, void, void, void))sub_1B6931244);
}

uint64_t sub_1B695A7B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B695A7C4()
{
  if (!qword_1E9DD3B90)
  {
    sub_1B62AC710(255, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD3B90);
    }
  }
}

void sub_1B695A854()
{
  if (!qword_1E9DD2B80)
  {
    sub_1B62AC710(255, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B80);
    }
  }
}

uint64_t sub_1B695A8EC()
{
  return sub_1B695A904(type metadata accessor for MetalFunctionScript);
}

uint64_t sub_1B695A904(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 400) & ~v3;
  unint64_t v5 = (*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = v1 + v4 + *(int *)(v2 + 24);
  uint64_t v7 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + v5 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x1F4186498](v1, ((((v5 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_1B695AB04()
{
  return sub_1B695AB30(type metadata accessor for MetalFunctionScript, (uint64_t (*)(void, void, void, void, void, void, void, void *, char *, void, void, void, void, void))sub_1B6931FC8);
}

uint64_t sub_1B695AB30(uint64_t (*a1)(void), uint64_t (*a2)(void, void, void, void, void, void, void, void *, char *, void, void, void, void, void))
{
  uint64_t v4 = *(void *)(a1(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(*((void *)v2 + 2), *((void *)v2 + 3), *((void *)v2 + 4), *((void *)v2 + 5), *((void *)v2 + 6), *((void *)v2 + 7), *((void *)v2 + 8), (void *)v2 + 9, &v2[v5], *(void *)&v2[v6], *(void *)&v2[v6 + 8], *(void *)&v2[v6 + 16], *(void *)&v2[(v6 + 27) & 0xFFFFFFFFFFFFFFF8], *(void *)&v2[(((v6 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8]);
}

uint64_t sub_1B695AC14()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B695AC28()
{
  if (!qword_1E9DD2B90)
  {
    sub_1B62AC710(255, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B90);
    }
  }
}

void sub_1B695ACB8()
{
  if (!qword_1E9DD2B98)
  {
    sub_1B62AC710(255, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2B98);
    }
  }
}

uint64_t sub_1B695AD50()
{
  uint64_t v1 = (int *)(type metadata accessor for SimpleScript(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 400) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((((v4 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1B695AF40()
{
  uint64_t v1 = *(void *)(type metadata accessor for SimpleScript(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1B6930504(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void))(v0 + 48), *(void *)(v0 + 56), *(const char **)(v0 + 64), (void *)(v0 + 72), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + ((v3 + 27) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (void (*)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B692C5B8);
}

uint64_t sub_1B695B044()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B695B058()
{
  if (!qword_1E9DD2BA0)
  {
    sub_1B62AC710(255, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2BA0);
    }
  }
}

void sub_1B695B0E8()
{
  if (!qword_1E9DD2BA8)
  {
    sub_1B62AC710(255, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2BA8);
    }
  }
}

uint64_t sub_1B695B180()
{
  uint64_t v1 = (int *)(type metadata accessor for GraphScript(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 400) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[12];
  uint64_t v6 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((((v4 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1B695B370(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B695B3D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for GraphScript(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1B6930504(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void))(v0 + 48), *(void *)(v0 + 56), *(const char **)(v0 + 64), (void *)(v0 + 72), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + ((v3 + 27) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (void (*)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B692D42C);
}

uint64_t sub_1B695B4DC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B695B4F0()
{
  if (!qword_1E9DD2BB0)
  {
    sub_1B62AC710(255, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2BB0);
    }
  }
}

void sub_1B695B580()
{
  if (!qword_1E9DD2BB8)
  {
    sub_1B62AC710(255, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2BB8);
    }
  }
}

uint64_t sub_1B695B610(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B695B67C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B695B6C0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1B695B700()
{
  uint64_t v1 = *(NSObject **)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();

  dispatch_group_leave(v1);
}

uint64_t sub_1B695B744()
{
  uint64_t v1 = (int *)(type metadata accessor for EmitterScript(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 400) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[10];
  uint64_t v6 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((((v4 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1B695B92C()
{
  uint64_t v1 = *(void *)(type metadata accessor for EmitterScript(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1B6930504(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void))(v0 + 48), *(void *)(v0 + 56), *(const char **)(v0 + 64), (void *)(v0 + 72), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + ((v3 + 27) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (void (*)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B692E2A0);
}

uint64_t sub_1B695BA30()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B695BA40(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B695BADC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B695BB44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B695BBA4(uint64_t a1)
{
  return a1;
}

unint64_t destroy for ScriptError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s3VFX11ScriptErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ScriptError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScriptError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScriptError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

void *sub_1B695BE5C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptError()
{
  return &type metadata for ScriptError;
}

uint64_t sub_1B695BF4C(void *a1)
{
  sub_1B695D394(0, &qword_1E9DD2BD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B695D340();
  sub_1B6E33A88();
  char v12 = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    char v11 = 1;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B695C0C8(char *a1, char *a2)
{
  return sub_1B6BB9C84(*a1, *a2);
}

uint64_t sub_1B695C0D4()
{
  if (*v0) {
    return 0x6566694C7265766FLL;
  }
  else {
    return 0x726F74636166;
  }
}

uint64_t sub_1B695C10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B695C2C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B695C134(uint64_t a1)
{
  unint64_t v2 = sub_1B695D340();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B695C170(uint64_t a1)
{
  unint64_t v2 = sub_1B695D340();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B695C1AC(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v5 = sub_1B695C824(a1);
  if (!v2)
  {
    *(float *)a2 = v5;
    *(unsigned char *)(a2 + 4) = v4 & 1;
  }
}

uint64_t sub_1B695C1E0(void *a1)
{
  return sub_1B695BF4C(a1);
}

uint64_t sub_1B695C200()
{
  return type metadata accessor for Attach.System();
}

void sub_1B695C220(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1065353216;
  *(unsigned char *)(a1 + 4) = 0;
}

uint64_t type metadata accessor for Attach.System()
{
  return self;
}

const char *sub_1B695C258()
{
  return "AttachSystem.CPU";
}

uint64_t type metadata accessor for Attach.GPUSystem()
{
  return self;
}

const char *sub_1B695C294()
{
  return "AttachSystem.GPU";
}

uint64_t sub_1B695C2A8()
{
  return type metadata accessor for Attach.GPUSystem();
}

uint64_t sub_1B695C2C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F74636166 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6566694C7265766FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B695C3B4@<X0>(uint64_t a1@<X0>, float32x4_t *a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void *)(v5 + 16);
  swift_retain();
  if (v6 == 1 && v7 == 0) {
    goto LABEL_15;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  uint64_t v10 = *(int *)(a1 + 32);
  if (v10 == -1 && v9 == 0) {
    goto LABEL_15;
  }
  if ((v10 & 0x80000000) != 0) {
    goto LABEL_15;
  }
  if (*(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v10) {
    goto LABEL_15;
  }
  uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v9 != -1 && *(_DWORD *)(v12 + 12 * (int)v10 + 8) != v9) {
    goto LABEL_15;
  }
  sub_1B6359A1C(*(void *)(*(void *)(v4 + 136) + 8 * *(int *)(v12 + 12 * (int)v10) + 32), *(_DWORD *)(v12 + 12 * (int)v10), *(_WORD *)(v12 + 12 * (int)v10 + 4), 64, v4, (uint64_t)v28);
  sub_1B6311E40((uint64_t)v28, (uint64_t)v32, &qword_1EB97F810, (uint64_t)&type metadata for LastFrameWorldTransform);
  if ((v33 & 1) != 0
    || (simd_float4 v26 = v32[1],
        simd_float4 v27 = v32[0],
        simd_float4 v23 = v32[3],
        simd_float4 v25 = v32[2],
        sub_1B62E9D50((void *)(v10 | (unint64_t)(v9 << 32)), (uint64_t)v29),
        sub_1B6311E40((uint64_t)v29, (uint64_t)v30, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform),
        v31 == 1))
  {
LABEL_15:
    uint64_t result = swift_release();
    float32x4_t v14 = 0uLL;
    char v15 = 1;
    float32x4_t v16 = 0uLL;
    float32x4_t v17 = 0uLL;
    float32x4_t v18 = 0uLL;
  }
  else
  {
    float32x4_t v19 = v30[0];
    float32x4_t v20 = v30[1];
    float32x4_t v21 = v30[2];
    float32x4_t v22 = v30[3];
    v34.columns[1] = v26;
    v34.columns[0] = v27;
    v34.columns[3] = v23;
    v34.columns[2] = v25;
    simd_float4x4 v24 = __invert_f4(v34);
    uint64_t result = swift_release();
    char v15 = 0;
    float32x4_t v14 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v19, v24.columns[0].f32[0]), v20, *(float32x2_t *)v24.columns[0].f32, 1), v21, (float32x4_t)v24.columns[0], 2), v22, (float32x4_t)v24.columns[0], 3);
    float32x4_t v16 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v19, v24.columns[1].f32[0]), v20, *(float32x2_t *)v24.columns[1].f32, 1), v21, (float32x4_t)v24.columns[1], 2), v22, (float32x4_t)v24.columns[1], 3);
    float32x4_t v17 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v19, v24.columns[2].f32[0]), v20, *(float32x2_t *)v24.columns[2].f32, 1), v21, (float32x4_t)v24.columns[2], 2), v22, (float32x4_t)v24.columns[2], 3);
    float32x4_t v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v19, v24.columns[3].f32[0]), v20, *(float32x2_t *)v24.columns[3].f32, 1), v21, (float32x4_t)v24.columns[3], 2), v22, (float32x4_t)v24.columns[3], 3);
  }
  *a2 = v14;
  a2[1] = v16;
  a2[2] = v17;
  a2[3] = v18;
  a2[4].i8[0] = v15;
  return result;
}

uint64_t sub_1B695C5DC(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  long long v2 = *(_OWORD *)(a1 + 96);
  long long v22 = *(_OWORD *)(a1 + 80);
  long long v23 = v2;
  long long v3 = *(_OWORD *)(a1 + 128);
  long long v24 = *(_OWORD *)(a1 + 112);
  long long v25 = v3;
  long long v4 = *(_OWORD *)(a1 + 32);
  v19[0] = *(_OWORD *)(a1 + 16);
  v19[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v20 = *(_OWORD *)(a1 + 48);
  long long v21 = v5;
  uint64_t v6 = *(void *)&v19[0];
  swift_retain();
  unint64_t v7 = sub_1B695F440(*((unint64_t *)&v19[0] + 1));
  swift_release();
  sub_1B695C3B4((uint64_t)v19, v28);
  uint64_t result = sub_1B633C598((uint64_t)v28, (uint64_t)v29);
  if ((v30 & 1) == 0)
  {
    float v9 = *(float *)&v7;
    if ((v7 & 0xFF00000000) == 0x200000000) {
      float v9 = 1.0;
    }
    v26[0] = v29[0];
    v26[1] = v29[1];
    v26[2] = v29[2];
    v26[3] = v29[3];
    float v27 = v9;
    uint64_t v10 = *(void *)a1;
    if (*(void *)a1)
    {
      uint64_t ObjectType = swift_getObjectType();
      type metadata accessor for particle_attach_uniforms(0);
      sub_1B6B594A8((uint64_t)v26, 1, ObjectType, v12, v13, v14, v15, v16);
    }
    sub_1B62D879C(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B6E77050;
    *(_OWORD *)(v17 + 32) = xmmword_1B6E95C50;
    *(unsigned char *)(v17 + 48) = 0;
    *(void *)(v17 + 64) = HIDWORD(v7) & 1;
    *(_OWORD *)(v17 + 72) = 0u;
    *(_OWORD *)(v17 + 88) = 0u;
    *(_OWORD *)(v17 + 104) = 0u;
    *(void *)(v17 + 120) = 0;
    *(unsigned char *)(v17 + 128) = 13;
    uint64_t v18 = v20;
    swift_retain();
    sub_1B6786A24(a1);
    sub_1B6BFF388(v18, v6, v10 == 0, v17, a1, 0x656C636974726170, 0xEF6863617474615FLL, 0);
    sub_1B6786A7C(a1);
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();
    return swift_deallocClassInstance();
  }
  return result;
}

float sub_1B695C824(void *a1)
{
  sub_1B695D394(0, &qword_1E9DD2BC0, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  float v9 = (char *)&v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B695D340();
  sub_1B6E33A48();
  if (!v1)
  {
    char v14 = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    char v13 = 1;
    sub_1B6E32DA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t *sub_1B695C9DC(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  swift_retain();
  if (sub_1B6A81544())
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v3 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v77 = 0;
    swift_retain();
    sub_1B6B33E34(v3, (uint64_t *)&v77, 0xD00000000000002DLL, 0x80000001B6F3EA70);
    swift_release();
    swift_release();
    return (uint64_t *)swift_release();
  }
  unint64_t v4 = *(void *)(a1 + 8);
  swift_retain();
  uint64_t v5 = sub_1B695F440(v4);
  swift_release();
  float v6 = *(float *)&v5;
  if ((v5 & 0xFF00000000) == 0x200000000) {
    float v6 = 1.0;
  }
  float v68 = v6;
  sub_1B695C3B4(a1, v72);
  sub_1B633C598((uint64_t)v72, (uint64_t)v85);
  if (v86) {
    return (uint64_t *)swift_release();
  }
  uint64_t v7 = 0;
  float32x4_t v56 = v85[0];
  float32x4_t v58 = v85[1];
  float32x4_t v60 = v85[2];
  float32x4_t v62 = v85[3];
  if ((v5 & 0x100000000) != 0)
  {
    long long v24 = *(_OWORD *)(a1 + 104);
    long long v93 = *(_OWORD *)(a1 + 88);
    long long v94 = v24;
    uint64_t v95 = *(void *)(a1 + 120);
    sub_1B6781C58(2, 1, (uint64_t)&v73);
    long long v90 = v73;
    long long v91 = v74;
    uint64_t v92 = v75;
    sub_1B62C9DA8(v2, (uint64_t)&v90, 0x200000000, v76);
    sub_1B6311E40((uint64_t)v76, (uint64_t)&v77, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!(void)v77) {
      goto LABEL_49;
    }
    if (v84 <= 0) {
      goto LABEL_51;
    }
    uint64_t v55 = v81;
    if (!v81) {
      goto LABEL_51;
    }
    long long v25 = v83;
    uint64_t v71 = v83[4];
    char v26 = *(unsigned char *)(v82 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    long long v87 = v77;
    long long v88 = v78;
    uint64_t v89 = v79;
    uint64_t v51 = (uint64_t)(v83 + 6);
    uint64_t v53 = v80;
    int v49 = v83 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v27 = 0;
    char v47 = v26;
    while (1)
    {
      uint64_t v28 = (unsigned int *)(v53 + 48 * v27);
      uint64_t v67 = *v28;
      uint64_t v65 = v28[1];
      uint64_t v29 = (uint64_t *)*((void *)v28 + 2);
      uint64_t v30 = *((void *)v28 + 3);
      uint64_t v32 = *((void *)v28 + 4);
      uint64_t v31 = *((void *)v28 + 5);
      if (v26)
      {
        uint64_t v33 = v7;
        simd_float4x4 v34 = *(os_unfair_lock_s **)(v31 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v34);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 344));
        swift_release();
      }
      else
      {
        uint64_t v33 = v7;
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v71);
      sub_1B6311E40(v51, (uint64_t)v96, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v35 = v25[4];
      uint64_t v36 = *(void *)(*(void *)(*(void *)(*(void *)(v31 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v25[6] = ecs_stack_allocator_allocate(v35, 48 * v36, 8);
      v25[7] = v36;
      v49[1] = 0;
      void v49[2] = 0;
      void *v49 = 0;
      swift_release();
      uint64_t v37 = (float32x2_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v29, v30, v32, (uint64_t)v25);
      uint64_t v38 = (float *)sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v29, v30, v32, (uint64_t)v25);
      if (v29)
      {
        uint64_t v7 = v33;
        if (v32)
        {
          char v26 = v47;
          do
          {
            float v39 = *v38++;
            float v40 = fminf(fmaxf(v39 / v68, 0.0), 1.0);
            *(float32x4_t *)v37->f32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(vmlaq_n_f32(vmulq_n_f32(v56, 1.0 - v40), (float32x4_t)xmmword_1B6E4F300, v40), COERCE_FLOAT(*(_OWORD *)v37->f32)), vmlaq_n_f32(vmulq_n_f32(v58, 1.0 - v40), (float32x4_t)xmmword_1B6E4F320, v40), *v37, 1), vmlaq_n_f32(vmulq_n_f32(v60, 1.0 - v40), (float32x4_t)xmmword_1B6E4F2E0, v40), *(float32x4_t *)v37->f32, 2), vmlaq_n_f32(vmulq_n_f32(v62, 1.0 - v40), (float32x4_t)xmmword_1B6E4F370, v40), *(float32x4_t *)v37->f32,
                                         3);
            v37 += 2;
            --v32;
          }
          while (v32);
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v7 = v33;
        if (v67 != v65)
        {
          uint64_t v41 = v65 - v67;
          uint64_t v42 = &v38[v67];
          uint64_t v43 = &v37[2 * v67];
          char v26 = v47;
          do
          {
            float v44 = *v42++;
            float v45 = fminf(fmaxf(v44 / v68, 0.0), 1.0);
            *(float32x4_t *)v43->f32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(vmlaq_n_f32(vmulq_n_f32(v56, 1.0 - v45), (float32x4_t)xmmword_1B6E4F300, v45), COERCE_FLOAT(*(_OWORD *)v43->f32)), vmlaq_n_f32(vmulq_n_f32(v58, 1.0 - v45), (float32x4_t)xmmword_1B6E4F320, v45), *v43, 1), vmlaq_n_f32(vmulq_n_f32(v60, 1.0 - v45), (float32x4_t)xmmword_1B6E4F2E0, v45), *(float32x4_t *)v43->f32, 2), vmlaq_n_f32(vmulq_n_f32(v62, 1.0 - v45), (float32x4_t)xmmword_1B6E4F370, v45), *(float32x4_t *)v43->f32,
                                         3);
            v43 += 2;
            --v41;
          }
          while (v41);
          goto LABEL_47;
        }
      }
      char v26 = v47;
LABEL_47:
      sub_1B6345178(v25, (unsigned __int16 **)&v87, (uint64_t)v96);
      sub_1B634507C((char *)v31);
      ecs_stack_allocator_pop_snapshot(v71);
      if (v26)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 376));
      }
      swift_release();
      if (++v27 == v55) {
        goto LABEL_52;
      }
    }
  }
  long long v8 = *(_OWORD *)(a1 + 104);
  long long v93 = *(_OWORD *)(a1 + 88);
  long long v94 = v8;
  uint64_t v95 = *(void *)(a1 + 120);
  sub_1B6A6ED00(2, (uint64_t)&v73);
  long long v90 = v73;
  long long v91 = v74;
  uint64_t v92 = v75;
  sub_1B62C9DA8(v2, (uint64_t)&v90, 0x200000000, v76);
  sub_1B6311E40((uint64_t)v76, (uint64_t)&v77, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!(void)v77)
  {
LABEL_49:
    sub_1B62CA064((uint64_t)&v73);
    return (uint64_t *)swift_release();
  }
  if (v84 > 0)
  {
    uint64_t v66 = v81;
    if (v81)
    {
      float32x4_t v64 = vmlaq_n_f32(vmulq_n_f32(v56, v68), (float32x4_t)xmmword_1B6E4F300, 1.0 - v68);
      float32x4_t v59 = vmlaq_n_f32(vmulq_n_f32(v58, v68), (float32x4_t)xmmword_1B6E4F320, 1.0 - v68);
      float32x4_t v61 = vmlaq_n_f32(vmulq_n_f32(v60, v68), (float32x4_t)xmmword_1B6E4F2E0, 1.0 - v68);
      float32x4_t v63 = vmlaq_n_f32(vmulq_n_f32(v62, v68), (float32x4_t)xmmword_1B6E4F370, 1.0 - v68);
      float v9 = v83;
      uint64_t v10 = v83[4];
      char v11 = *(unsigned char *)(v82 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      long long v87 = v77;
      long long v88 = v78;
      uint64_t v89 = v79;
      uint64_t v52 = (uint64_t)(v83 + 6);
      uint64_t v54 = v80;
      long long v50 = v83 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v12 = 0;
      char v57 = v11;
      uint64_t v48 = v10;
      while (1)
      {
        char v13 = (unsigned int *)(v54 + 48 * v12);
        uint64_t v70 = *v13;
        uint64_t v69 = v13[1];
        uint64_t v15 = (uint64_t *)*((void *)v13 + 2);
        uint64_t v14 = *((void *)v13 + 3);
        uint64_t v17 = *((void *)v13 + 4);
        uint64_t v16 = *((void *)v13 + 5);
        if (v11)
        {
          uint64_t v18 = *(os_unfair_lock_s **)(v16 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v18);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v10);
        sub_1B6311E40(v52, (uint64_t)v96, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v19 = v9[4];
        uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v9[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
        v9[7] = v20;
        v50[1] = 0;
        _OWORD v50[2] = 0;
        *long long v50 = 0;
        swift_release();
        long long v21 = (float32x2_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v15, v14, v17, (uint64_t)v9);
        if (v15)
        {
          char v11 = v57;
          if (v17)
          {
            uint64_t v10 = v48;
            do
            {
              *(float32x4_t *)v21->f32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v64, COERCE_FLOAT(*(_OWORD *)v21->f32)), v59, *v21, 1), v61, *(float32x4_t *)v21->f32, 2), v63, *(float32x4_t *)v21->f32, 3);
              v21 += 2;
              --v17;
            }
            while (v17);
            goto LABEL_28;
          }
        }
        else
        {
          char v11 = v57;
          if (v70 != v69)
          {
            uint64_t v22 = v69 - v70;
            long long v23 = &v21[2 * v70];
            uint64_t v10 = v48;
            do
            {
              *(float32x4_t *)v23->f32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v64, COERCE_FLOAT(*(_OWORD *)v23->f32)), v59, *v23, 1), v61, *(float32x4_t *)v23->f32, 2), v63, *(float32x4_t *)v23->f32, 3);
              v23 += 2;
              --v22;
            }
            while (v22);
            goto LABEL_28;
          }
        }
        uint64_t v10 = v48;
LABEL_28:
        sub_1B6345178(v9, (unsigned __int16 **)&v87, (uint64_t)v96);
        sub_1B634507C((char *)v16);
        ecs_stack_allocator_pop_snapshot(v10);
        if (v11)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
        }
        swift_release();
        if (++v12 == v66) {
          goto LABEL_52;
        }
      }
    }
  }
LABEL_51:
  swift_retain();
  swift_retain();
  swift_retain();
LABEL_52:
  sub_1B62CA064((uint64_t)&v73);
  swift_release();
  sub_1B632F170(v76);
  return sub_1B632F170(v76);
}

ValueMetadata *type metadata accessor for Attach()
{
  return &type metadata for Attach;
}

unint64_t sub_1B695D340()
{
  unint64_t result = qword_1E9DD2BC8;
  if (!qword_1E9DD2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2BC8);
  }
  return result;
}

void sub_1B695D394(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B695D340();
    unint64_t v7 = a3(a1, &type metadata for Attach.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for Attach.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B695D4C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Attach.CodingKeys()
{
  return &type metadata for Attach.CodingKeys;
}

unint64_t sub_1B695D500()
{
  unint64_t result = qword_1E9DD2BD8;
  if (!qword_1E9DD2BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2BD8);
  }
  return result;
}

unint64_t sub_1B695D558()
{
  unint64_t result = qword_1E9DD2BE0;
  if (!qword_1E9DD2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2BE0);
  }
  return result;
}

unint64_t sub_1B695D5B0()
{
  unint64_t result = qword_1E9DD2BE8;
  if (!qword_1E9DD2BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2BE8);
  }
  return result;
}

uint64_t sub_1B695D604(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x2000000;
  }
  uint64_t result = 0x2000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B6964DCC(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 4, v1);
    }
  }
  return result;
}

uint64_t sub_1B695D6BC(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 1;
  }
  uint64_t result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B62EC2D0(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32));
    }
    return 1;
  }
  return result;
}

uint64_t sub_1B695D774@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unsigned int v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6963364(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 88, v2, a2);
  }
  else
  {
    *(_DWORD *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1B695D840(unint64_t a1)
{
  return sub_1B695F6BC(a1, (unint64_t *)&unk_1EB97F790, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
}

uint64_t sub_1B695D868(unint64_t a1)
{
  return sub_1B695E314(a1, sub_1B6965370);
}

uint64_t sub_1B695D880@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unsigned int v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6963500(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 40, v2, a2);
  }
  else
  {
    *(_OWORD *)a2 = xmmword_1B6E4F270;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 16) = 0;
  }
  return result;
}

uint64_t sub_1B695D94C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unsigned int v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6963598(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 120, v2, a2);
  }
  else
  {
    *(void *)(a2 + 112) = 0;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

double sub_1B695DA1C@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B696368C(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 36, v2, a2).n128_u64[0];
  }
  else
  {
    double result = 0.0;
    *a2 = (__n128)xmmword_1B6E95E80;
    a2[1].n128_u64[0] = 0;
    a2[1].n128_u64[1] = 0;
    a2[2].n128_u32[0] = 0;
  }
  return result;
}

uint64_t sub_1B695DAE8(unint64_t a1)
{
  return sub_1B62F45F8(a1, (uint64_t (*)(void))sub_1B633CFA0);
}

uint64_t sub_1B695DB00@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B695DB80(a1, type metadata accessor for GraphScript, type metadata accessor for GraphScript, type metadata accessor for GraphScript, a2);
}

uint64_t sub_1B695DB40@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B695DB80(a1, type metadata accessor for EmitterScript, type metadata accessor for EmitterScript, type metadata accessor for EmitterScript, a2);
}

uint64_t sub_1B695DB80@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  unint64_t v10 = HIDWORD(a1);
  uint64_t v11 = a2(0);
  uint64_t v12 = *(void **)(v11 - 8);
  if (v12[8])
  {
    uint64_t v13 = v12[9];
    if (a1 == -1)
    {
LABEL_5:
      if (!v10) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v13 = 0;
    if (a1 == -1) {
      goto LABEL_5;
    }
  }
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v10 == -1 || *(_DWORD *)(v14 + 12 * (int)a1 + 8) == v10)
    {
      uint64_t v17 = (unsigned int *)(v14 + 12 * (int)a1);
      return sub_1B696441C(*(void *)(*(void *)(v5 + 136) + 8 * (int)*v17 + 32), *v17 | ((unint64_t)*((unsigned __int16 *)v17 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v17 + 2) << 32), v13, v5, a3, a4, a5);
    }
  }
LABEL_10:
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12[7];

  return v15(a5, 1, 1, v11);
}

uint64_t sub_1B695DD0C(unint64_t a1)
{
  return sub_1B695E314(a1, sub_1B6965010);
}

double sub_1B695DD24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B69637B8(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 48, v2, a2).n128_u64[0];
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = xmmword_1B6E95E90;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 16) = 0;
    *(_DWORD *)(a2 + 40) = 0;
  }
  return result;
}

double sub_1B695DDF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B6963A20(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 72, v2, a2).n128_u64[0];
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0x300000000;
    double result = 0.0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 52) = 0u;
  }
  return result;
}

uint64_t sub_1B695DEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    unsigned int v6 = (unsigned int *)(v4 + 12 * (int)a1);
    return sub_1B6963ADC(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v6 + 32), *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v6+ 2) << 32), 248, v2, a2);
  }
  else
  {
    sub_1B6342918((uint64_t)v7);
    return sub_1B62EF28C((uint64_t)v7, a2, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
  }
}

unint64_t sub_1B695DFB4(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 2;
  }
  unint64_t result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 != -1 && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != v3) {
      return 2;
    }
    unsigned int v6 = (int *)(v5 + 12 * (int)a1);
    uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32);
    uint64_t v8 = *(void *)(v7 + 48);
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9) {
      return 2;
    }
    uint64_t v10 = *((__int16 *)v6 + 2);
    uint64_t v11 = (void *)(v8 + 56);
    unint64_t result = 2;
    while ((ValueMetadata *)*(v11 - 3) != &type metadata for OrientationConstraint)
    {
      v11 += 5;
      if (!--v9) {
        return result;
      }
    }
    uint64_t v12 = (unsigned __int8 *)(*(void *)(v7 + 128) + *v11 + 8 * v10);
    return *v12 | ((unint64_t)*((unsigned int *)v12 + 1) << 32);
  }
  return result;
}

uint64_t sub_1B695E090@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    uint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6963C10(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 32, v2, a2);
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 23) = 0;
    *(void *)(a2 + 16) = 0;
  }
  return result;
}

uint64_t sub_1B695E154@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    uint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6963CE0(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 64, v2, (uint64_t)a2);
  }
  else
  {
    *(_OWORD *)((char *)a2 + 41) = 0u;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t sub_1B695E21C(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (unsigned int v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleMassInit; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B695E2FC(unint64_t a1)
{
  return sub_1B695E314(a1, sub_1B6965468);
}

uint64_t sub_1B695E314(unint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 != -1 || (uint64_t result = 0, v4))
  {
    uint64_t result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v4 == -1 || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == v4) {
        return a2(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32));
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B695E3E0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62D1F5C(a1, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt, a2);
}

uint64_t sub_1B695E41C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62D1F5C(a1, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime, a2);
}

unint64_t sub_1B695E458(uint64_t a1)
{
  return sub_1B62E9908(a1, (uint64_t (*)(void))sub_1B6964EC0);
}

unint64_t sub_1B695E470(uint64_t a1)
{
  return sub_1B62E9908(a1, (uint64_t (*)(void))sub_1B69654DC);
}

uint64_t sub_1B695E488@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B6960564(a1, (uint64_t (*)(void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B6963DD0, a2);
}

uint64_t sub_1B695E4A0(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x200000000;
  }
  uint64_t result = 0x200000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B6965554(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 8, v1) & 0xFFFFFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_1B695E55C(unint64_t a1)
{
  return sub_1B6359BB8(a1, (uint64_t (*)(void))sub_1B69655DC);
}

double sub_1B695E574@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B6963EC4(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4 + 2) << 32), 32, v2, a2).n128_u64[0];
  }
  else
  {
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    a2[1].n128_u64[1] = 2;
  }
  return result;
}

double sub_1B695E638@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B6963F78(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 112, v2, a2).n128_u64[0];
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0x20000000000;
    double result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 89) = 0u;
  }
  return result;
}

uint64_t sub_1B695E70C(unint64_t a1)
{
  return sub_1B6359BB8(a1, (uint64_t (*)(void))sub_1B6965654);
}

uint64_t sub_1B695E724(unint64_t a1)
{
  return sub_1B636A834(a1, (uint64_t (*)(void))sub_1B69656CC);
}

uint64_t sub_1B695E73C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6964018(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 104, v2, a2);
  }
  else
  {
    *(void *)(a2 + 96) = 0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void *sub_1B695E808@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B695F918(a1, (void *(*)(_OWORD *__return_ptr, void, __n128))sub_1B6965760, a2);
}

uint64_t sub_1B695E820(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 != -1 || (uint64_t result = 0, v3))
  {
    uint64_t result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
        return sub_1B69651E8(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 32, v1);
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_1B695E910(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 5;
  }
  unint64_t result = 5;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 != -1 && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != v3) {
      return 5;
    }
    uint64_t v6 = (int *)(v5 + 12 * (int)a1);
    uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32);
    uint64_t v8 = *(void *)(v7 + 48);
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9) {
      return 5;
    }
    uint64_t v10 = *((__int16 *)v6 + 2);
    uint64_t v11 = (void *)(v8 + 56);
    unint64_t result = 5;
    while ((ValueMetadata *)*(v11 - 3) != &type metadata for TextureRequireMask)
    {
      v11 += 5;
      if (!--v9) {
        return result;
      }
    }
    uint64_t v12 = (unsigned __int8 *)(*(void *)(v7 + 128) + *v11 + 8 * v10);
    return *v12 | ((unint64_t)*((unsigned int *)v12 + 1) << 32);
  }
  return result;
}

uint64_t sub_1B695E9EC(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x200000000;
  }
  uint64_t result = 0x200000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a1);
      uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32);
      uint64_t v8 = *(void *)(v7 + 48);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = *((__int16 *)v6 + 2);
        for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleDrag; i += 5)
        {
          if (!--v9) {
            return 0x200000000;
          }
        }
        uint64_t v12 = (unsigned int *)(*(void *)(v7 + 128) + *i + 8 * v10);
        uint64_t v13 = *v12;
        BOOL v14 = *((unsigned char *)v12 + 4) == 0;
        uint64_t v15 = 0x100000000;
        if (v14) {
          uint64_t v15 = 0;
        }
        return v15 | v13;
      }
    }
  }
  return result;
}

uint64_t sub_1B695EAD0(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B69657F8(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 32, v1);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B695EBAC(unint64_t a1)
{
  return sub_1B6359BB8(a1, (uint64_t (*)(void))sub_1B6965864);
}

double sub_1B695EBC4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B6372C44(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 48, v2, (uint64_t)a2).n128_u64[0];
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
    *(void *)&double result = 2;
    a2[2] = xmmword_1B6E78210;
  }
  return result;
}

uint64_t sub_1B695EC90(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x200000000;
  }
  uint64_t result = 0x200000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B6965084(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 20, v1);
    }
  }
  return result;
}

uint64_t sub_1B695ED64@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6964138(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 40, v2, a2);
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 2;
    *(unsigned char *)(a2 + 36) = 0;
    *(_DWORD *)(a2 + 32) = 0;
  }
  return result;
}

uint64_t sub_1B695EE30(unint64_t a1)
{
  return sub_1B6359BB8(a1, (uint64_t (*)(void))sub_1B69658DC);
}

double sub_1B695EE48@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B69641F4(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4 + 2) << 32), 36, v2, a2).n128_u64[0];
  }
  else
  {
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    a2[1].n128_u64[1] = 2;
    a2[2].n128_u32[0] = 0;
  }
  return result;
}

uint64_t sub_1B695EF10(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B6965954(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 12, v1);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B695EFD8(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B69659F8(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 24, v1);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B695F0A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B69642D4(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 40, v2, a2);
  }
  else
  {
    *(_DWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B695F16C(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x200000000;
  }
  uint64_t result = 0x200000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a1);
      uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32);
      uint64_t v8 = *(void *)(v7 + 48);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = *((__int16 *)v6 + 2);
        for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for OrientationOverVelocity; i += 5)
        {
          if (!--v9) {
            return 0x200000000;
          }
        }
        uint64_t v12 = (unsigned int *)(*(void *)(v7 + 128) + *i + 8 * v10);
        uint64_t v13 = *v12;
        BOOL v14 = *((unsigned char *)v12 + 4) == 0;
        uint64_t v15 = 0x100000000;
        if (v14) {
          uint64_t v15 = 0;
        }
        return v15 | v13;
      }
    }
  }
  return result;
}

uint64_t sub_1B695F250(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleTextureFrameInit; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B695F330(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngleVelocityInit; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B695F410(unint64_t a1)
{
  return sub_1B6359BB8(a1, (uint64_t (*)(void))sub_1B6965A80);
}

void *sub_1B695F428@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6960278(a1, (void *(*)(_OWORD *__return_ptr, void, __n128, __n128))sub_1B6965AF8, a2);
}

uint64_t sub_1B695F440(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x200000000;
  }
  uint64_t result = 0x200000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a1);
      uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32);
      uint64_t v8 = *(void *)(v7 + 48);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = *((__int16 *)v6 + 2);
        for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Attach; i += 5)
        {
          if (!--v9) {
            return 0x200000000;
          }
        }
        uint64_t v12 = (unsigned int *)(*(void *)(v7 + 128) + *i + 8 * v10);
        uint64_t v13 = *v12;
        BOOL v14 = *((unsigned char *)v12 + 4) == 0;
        uint64_t v15 = 0x100000000;
        if (v14) {
          uint64_t v15 = 0;
        }
        return v15 | v13;
      }
    }
  }
  return result;
}

uint64_t sub_1B695F524@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B695DB80(a1, type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript, a2);
}

uint64_t sub_1B695F564@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B695DB80(a1, type metadata accessor for ParticleInitScript, type metadata accessor for ParticleInitScript, type metadata accessor for ParticleInitScript, a2);
}

uint64_t sub_1B695F5A4(unint64_t a1)
{
  return sub_1B695F6BC(a1, (unint64_t *)&unk_1EB9811A0, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
}

uint64_t sub_1B695F5CC(unint64_t a1)
{
  return sub_1B695F6BC(a1, (unint64_t *)&unk_1EB97F780, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
}

uint64_t sub_1B695F5F4(unint64_t a1)
{
  return sub_1B695F6BC(a1, (unint64_t *)&unk_1EB97F770, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
}

uint64_t sub_1B695F61C(unint64_t a1)
{
  return sub_1B695F6BC(a1, (unint64_t *)&unk_1EB97F7A0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10);
}

uint64_t sub_1B695F644(unint64_t a1)
{
  return sub_1B695F6BC(a1, (unint64_t *)&unk_1EB981190, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8);
}

uint64_t sub_1B695F66C(unint64_t a1)
{
  return sub_1B695F6BC(a1, (unint64_t *)&unk_1EB97F7B0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
}

uint64_t sub_1B695F694(unint64_t a1)
{
  return sub_1B695F6BC(a1, &qword_1EB97F7C0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
}

uint64_t sub_1B695F6BC(unint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  unint64_t v6 = HIDWORD(a1);
  if (a1 != -1 || (uint64_t result = 0, v6))
  {
    uint64_t result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v6 == -1 || *(_DWORD *)(v8 + 12 * (int)a1 + 8) == v6) {
        return sub_1B6965BE8(*(void *)(*(void *)(v4 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_DWORD *)(v8 + 12 * (int)a1), *(_WORD *)(v8 + 12 * (int)a1 + 4), 16, v4, a2, a3, a4);
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B695F7A0(unint64_t a1)
{
  return sub_1B636A834(a1, (uint64_t (*)(void))sub_1B6965CC4);
}

unint64_t sub_1B695F7B8(uint64_t a1)
{
  return sub_1B62E9908(a1, (uint64_t (*)(void))sub_1B6965FB8);
}

uint64_t sub_1B695F7D0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62D1F5C(a1, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime, a2);
}

uint64_t sub_1B695F80C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  long long v4 = 0uLL;
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v5 = 2;
    if (result << 32 < (uint64_t)0xFFFFFFFF00000001
      || (int)result >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      goto LABEL_3;
    }
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v7 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t result = sub_1B6966030(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v7 + 12 * (int)result) + 32), *(_DWORD *)(v7 + 12 * (int)result), *(_WORD *)(v7 + 12 * (int)result + 4), 48, v2, (unint64_t *)v8);
      long long v4 = v8[0];
      long long v6 = v8[1];
      uint64_t v5 = v9;
      goto LABEL_4;
    }
  }
  uint64_t v5 = 2;
LABEL_3:
  long long v6 = 0uLL;
LABEL_4:
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v6;
  *(void *)(a2 + 32) = v5;
  return result;
}

void *sub_1B695F8E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B695F918(a1, (void *(*)(_OWORD *__return_ptr, void, __n128))sub_1B6966158, a2);
}

void *sub_1B695F900@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B695F918(a1, (void *(*)(_OWORD *__return_ptr, void, __n128))sub_1B69661E4, a2);
}

void *sub_1B695F918@<X0>(void *result@<X0>, void *(*a2)(_OWORD *__return_ptr, void, __n128)@<X1>, uint64_t a3@<X8>)
{
  long long v5 = 0uLL;
  if (result != (void *)0xFFFFFFFFLL)
  {
    char v6 = 2;
    if ((void)result << 32 < (int64_t)0xFFFFFFFF00000001
      || (int)result >= *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      goto LABEL_3;
    }
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v9 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t result = a2(v10, *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(v9 + 12 * (int)result) + 32), (__n128)0);
      long long v5 = v10[0];
      long long v7 = v10[1];
      long long v8 = v10[2];
      char v6 = v11;
      goto LABEL_4;
    }
  }
  char v6 = 2;
LABEL_3:
  long long v7 = 0uLL;
  long long v8 = 0uLL;
LABEL_4:
  *(_OWORD *)a3 = v5;
  *(_OWORD *)(a3 + 16) = v7;
  *(_OWORD *)(a3 + 32) = v8;
  *(unsigned char *)(a3 + 48) = v6;
  return result;
}

double sub_1B695FA08@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    long long v4 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B6964514(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4 + 2) << 32), 28, v2, a2).n128_u64[0];
  }
  else
  {
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    a2[1].n128_u8[8] = 2;
  }
  return result;
}

uint64_t sub_1B695FAD0(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B6966270(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 32, v1);
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1B695FBBC(uint64_t a1)
{
  return sub_1B62E9908(a1, (uint64_t (*)(void))sub_1B69662E4);
}

uint64_t sub_1B695FBD4(unint64_t a1)
{
  return sub_1B695FDD0(a1, (uint64_t (*)(void))sub_1B696635C);
}

uint64_t sub_1B695FBEC@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = 0uLL;
  if (result == 0xFFFFFFFFLL
    || result << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)result >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    long long v6 = 0uLL;
    long long v7 = 0uLL;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || (long long v6 = 0uLL, v7 = 0uLL, *(_DWORD *)(v5 + 12 * (int)result + 8) == HIDWORD(result)))
    {
      uint64_t result = sub_1B6965108(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v5 + 12 * (int)result) + 32), *(_DWORD *)(v5 + 12 * (int)result), *(_WORD *)(v5 + 12 * (int)result + 4), 48, v2, (uint64_t)v8);
      long long v4 = v8[0];
      long long v6 = v8[1];
      long long v7 = v8[2];
    }
  }
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v7;
  return result;
}

uint64_t sub_1B695FCCC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  long long v4 = 0uLL;
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v5 = 0;
    char v6 = 2;
    if (result << 32 < (uint64_t)0xFFFFFFFF00000001
      || (int)result >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      goto LABEL_3;
    }
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v8 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t result = sub_1B6966494(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v8 + 12 * (int)result) + 32), *(_DWORD *)(v8 + 12 * (int)result), *(_WORD *)(v8 + 12 * (int)result + 4), 48, v2, (uint64_t)v9);
      long long v4 = v9[0];
      long long v7 = v9[1];
      uint64_t v5 = v10;
      char v6 = v11;
      goto LABEL_4;
    }
  }
  uint64_t v5 = 0;
  char v6 = 2;
LABEL_3:
  long long v7 = 0uLL;
LABEL_4:
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v7;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = v6;
  return result;
}

uint64_t sub_1B695FDB8(unint64_t a1)
{
  return sub_1B695FDD0(a1, (uint64_t (*)(void))sub_1B6966520);
}

uint64_t sub_1B695FDD0(unint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 != -1 || (uint64_t result = 0, v4))
  {
    uint64_t result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v4 == -1 || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == v4) {
        return a2(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32));
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B695FEC0(unint64_t a1)
{
  return sub_1B62F45F8(a1, (uint64_t (*)(void))sub_1B69665C8);
}

double sub_1B695FED8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B6964698(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 64, v2, a2).n128_u64[0];
  }
  else
  {
    *(void *)a2 = 3;
    double result = 0.0;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_DWORD *)(a2 + 56) = 0;
  }
  return result;
}

unint64_t sub_1B695FFAC(uint64_t a1)
{
  return sub_1B62E9908(a1, (uint64_t (*)(void))sub_1B69666C8);
}

double sub_1B695FFC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B696473C(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 48, v2, a2).n128_u64[0];
  }
  else
  {
    *(void *)a2 = 4;
    double result = 0.0;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_DWORD *)(a2 + 40) = 0;
  }
  return result;
}

double sub_1B6960094@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B69647DC(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 44, v2, a2).n128_u64[0];
  }
  else
  {
    double result = 0.0;
    *a2 = (__n128)xmmword_1B6E95930;
    a2[1].n128_u64[1] = 0;
    a2[2].n128_u64[0] = 0;
    a2[1].n128_u64[0] = 0;
    a2[2].n128_u32[2] = 0;
  }
  return result;
}

uint64_t sub_1B6960164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6960194(a1, (uint64_t (*)(void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B6964884, a2);
}

uint64_t sub_1B696017C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6960194(a1, (uint64_t (*)(void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B6964934, a2);
}

uint64_t sub_1B6960194@<X0>(uint64_t result@<X0>, uint64_t (*a2)(void, unint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries),
         uint64_t v5 = *(unsigned int *)(v4 + 12 * (int)result + 8),
         HIDWORD(result) == -1)
     || v5 == HIDWORD(result)))
  {
    uint64_t v6 = (unsigned int *)(v4 + 12 * (int)result);
    return a2(*(void *)(*(void *)(v3 + 136) + 8 * (int)*v6 + 32), *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v6+ 2) << 32), v5, 40, v3);
  }
  else
  {
    *(unsigned char *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

void *sub_1B6960260@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6960278(a1, (void *(*)(_OWORD *__return_ptr, void, __n128, __n128))sub_1B6966810, a2);
}

void *sub_1B6960278@<X0>(void *result@<X0>, void *(*a2)(_OWORD *__return_ptr, void, __n128, __n128)@<X1>, uint64_t a3@<X8>)
{
  long long v5 = xmmword_1B6E4F270;
  long long v6 = 0uLL;
  if (result == (void *)0xFFFFFFFFLL)
  {
LABEL_2:
    char v7 = 0;
    goto LABEL_3;
  }
  char v7 = 0;
  if ((void)result << 32 >= (int64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v8 + 12 * (int)result + 8) == HIDWORD(result))
    {
      double result = a2(v9, *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(v8 + 12 * (int)result) + 32), (__n128)xmmword_1B6E4F270, (__n128)0);
      long long v5 = v9[0];
      long long v6 = v9[1];
      char v7 = v10;
      goto LABEL_3;
    }
    goto LABEL_2;
  }
LABEL_3:
  *(_OWORD *)a3 = v5;
  *(_OWORD *)(a3 + 16) = v6;
  *(unsigned char *)(a3 + 32) = v7;
  return result;
}

uint64_t sub_1B6960360(unint64_t a1)
{
  return sub_1B6359BB8(a1, (uint64_t (*)(void))sub_1B69669E0);
}

uint64_t sub_1B6960378(unint64_t a1)
{
  return sub_1B62F45F8(a1, (uint64_t (*)(void))sub_1B6966A58);
}

uint64_t sub_1B6960390@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  long long v4 = xmmword_1B6E4F270;
  long long v5 = 0uLL;
  if (result == 0xFFFFFFFFLL)
  {
LABEL_2:
    uint64_t v6 = 0;
    goto LABEL_3;
  }
  uint64_t v6 = 0;
  if (result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v7 + 12 * (int)result + 8) == HIDWORD(result))
    {
      double result = sub_1B6966AC8(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v7 + 12 * (int)result) + 32), *(_DWORD *)(v7 + 12 * (int)result), *(_WORD *)(v7 + 12 * (int)result + 4), 40, v2, (uint64_t)v8);
      long long v5 = v8[0];
      long long v4 = v8[1];
      uint64_t v6 = v9;
      goto LABEL_3;
    }
    goto LABEL_2;
  }
LABEL_3:
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1B6960470@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  long long v4 = 0uLL;
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v5 = 0;
    if (result << 32 < (uint64_t)0xFFFFFFFF00000001
      || (int)result >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      goto LABEL_3;
    }
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v7 + 12 * (int)result + 8) == HIDWORD(result))
    {
      double result = sub_1B6965298(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v7 + 12 * (int)result) + 32), *(_DWORD *)(v7 + 12 * (int)result), *(_WORD *)(v7 + 12 * (int)result + 4), 40, v2, v8);
      long long v4 = v8[0];
      long long v6 = v8[1];
      uint64_t v5 = v9;
      goto LABEL_4;
    }
  }
  uint64_t v5 = 0;
LABEL_3:
  long long v6 = 0uLL;
LABEL_4:
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v6;
  *(void *)(a2 + 32) = v5;
  return result;
}

uint64_t sub_1B696054C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B6960564(a1, (uint64_t (*)(void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B69649E4, a2);
}

uint64_t sub_1B6960564@<X0>(uint64_t result@<X0>, uint64_t (*a2)(void, unint64_t, uint64_t, uint64_t, uint64_t)@<X1>, _OWORD *a3@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries),
         uint64_t v5 = *(unsigned int *)(v4 + 12 * (int)result + 8),
         HIDWORD(result) == -1)
     || v5 == HIDWORD(result)))
  {
    long long v6 = (unsigned int *)(v4 + 12 * (int)result);
    return a2(*(void *)(*(void *)(v3 + 136) + 8 * (int)*v6 + 32), *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v6+ 2) << 32), v5, 64, v3);
  }
  else
  {
    a3[2] = 0u;
    a3[3] = 0u;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1B6960630(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B6966B9C(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 16, v1);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B696072C()
{
  uint64_t v2 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  uint64_t v1 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (v1) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = v2 == 0xFFFFFFFFLL;
  }
  uint64_t v4 = v2 | (v1 << 32);
  if (v3) {
    return 0;
  }
  else {
    return v4;
  }
}

uint64_t sub_1B6960754(uint64_t result)
{
  if (v1[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] != (result & 1))
  {
    uint64_t v2 = v1;
    char v3 = result;
    v1[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] = result & 1;
    type metadata accessor for RemapContext();
    uint64_t inited = swift_initStackObject();
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_1B62FF544(MEMORY[0x1E4FBC860]);
    long long v6 = sub_1B67DD1D8(v5);
    swift_bridgeObjectRelease();
    *(void *)(inited + 24) = MEMORY[0x1E4FBC868];
    *(void *)(inited + 32) = v6;
    *(unsigned char *)(inited + 16) = 0;
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      uint64_t Strong = *(void *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
      if (Strong)
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    sub_1B69D81BC(Strong, v2, inited, v3 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B696088C(uint64_t a1, uint64_t a2, char a3)
{
  if (!swift_weakLoadStrong())
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  sub_1B69DF07C(*(void *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity), a2);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v46 = v6 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v43 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
  unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
  char v42 = a3 & 1;
  uint64_t v48 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  int64_t v47 = v11;
  unint64_t v39 = v11 - 7;
  uint64_t v41 = a1;
  char v40 = a3;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v58 = v12;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_27;
    }
    uint64_t v15 = v12 + 1;
    if (v12 + 1 >= v47) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v46 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v12 + 2;
      if (v12 + 2 >= v47) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v46 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v12 + 3;
        if (v12 + 3 >= v47) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v46 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v12 + 4;
          if (v12 + 4 >= v47) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v46 + 8 * v15);
          if (!v16)
          {
            uint64_t v15 = v12 + 5;
            if (v12 + 5 >= v47) {
              return swift_release();
            }
            unint64_t v16 = *(void *)(v46 + 8 * v15);
            if (!v16)
            {
              uint64_t v15 = v12 + 6;
              if (v12 + 6 >= v47) {
                return swift_release();
              }
              unint64_t v16 = *(void *)(v46 + 8 * v15);
              if (!v16) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v58 = v15;
LABEL_27:
    uint64_t v49 = *(void *)(*(void *)(v48 + 48) + 8 * v14);
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      uint64_t Strong = *(void *)(a1 + v43);
      if (Strong)
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    uint64_t v18 = *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
    if (v18)
    {
      char v19 = *(unsigned char *)(v18 + 80);
      MEMORY[0x1BA9B8670](v18 + 48);
      uint64_t v18 = *(void *)(v18 + 56);
    }
    else
    {
      char v19 = 0;
    }
    uint64_t v53 = 0;
    swift_unknownObjectUnownedInit();
    uint64_t v51 = Strong;
    uint64_t v53 = v18;
    swift_unknownObjectUnownedAssign();
    swift_unownedRetain();
    swift_unknownObjectRelease();
    char v54 = v19;
    sub_1B636C4E0((uint64_t)&v51, (uint64_t)v56);
    if (v49 != -1 || HIDWORD(v49) != 0)
    {
      uint64_t v21 = v56[0];
      swift_unownedRetainStrong();
      swift_release();
      if ((a3 & 1) == 0)
      {
        swift_unownedRetainStrong();
        sub_1B62E280C((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA130, v49 | ((unint64_t)HIDWORD(v49) << 32), 0);
        swift_release();
        if (!swift_unknownObjectUnownedLoadStrong()) {
          goto LABEL_49;
        }
        goto LABEL_48;
      }
      char v45 = v19;
      uint64_t v44 = swift_unknownObjectUnownedLoadStrong();
      if (!v44)
      {
LABEL_71:
        swift_unownedRetainStrong();
        sub_1B62E364C((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA130, v49 | ((unint64_t)HIDWORD(v49) << 32));
        swift_release();
        char v19 = v45;
        if (!swift_unknownObjectUnownedLoadStrong())
        {
LABEL_49:
          if (v57 == 1)
          {
            char v27 = v19;
            swift_unownedRetainStrong();
            uint64_t v51 = v49;
            char v52 = v42;
            char v55 = 6;
            uint64_t v28 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
            if (v28 && (*(unsigned char *)(v28 + 81) & 1) != 0)
            {
              if (*(void *)(v28 + 24) && swift_weakLoadStrong())
              {
                swift_retain();
                swift_unknownObjectRetain();
                swift_release();
                sub_1B6873570((uint64_t)&v51, (uint64_t)v50);
                uint64_t v29 = *(void **)(v28 + 16);
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(void *)(v28 + 16) = v29;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v29 = sub_1B68C0B2C(0, v29[2] + 1, 1, v29);
                  *(void *)(v28 + 16) = v29;
                }
                unint64_t v32 = v29[2];
                unint64_t v31 = v29[3];
                unint64_t v33 = v32 + 1;
                if (v32 >= v31 >> 1)
                {
                  uint64_t v37 = sub_1B68C0B2C(v31 > 1, v32 + 1, 1, v29);
                  unint64_t v33 = v32 + 1;
                  uint64_t v29 = v37;
                  *(void *)(v28 + 16) = v37;
                }
                v29[2] = v33;
                sub_1B68735CC((uint64_t)v50, (uint64_t)&v29[8 * v32 + 4]);
                swift_release();
                swift_unknownObjectRelease();
                swift_release();
                a1 = v41;
              }
              else
              {
                swift_release();
                a1 = v41;
              }
            }
            else
            {
              swift_release();
            }
            char v19 = v27;
            sub_1B67421B0((uint64_t)&v51);
          }
          goto LABEL_75;
        }
LABEL_48:
        swift_unknownObjectRelease();
        goto LABEL_49;
      }
      if (v49 == -1)
      {
        if (!HIDWORD(v49)) {
          goto LABEL_63;
        }
        swift_retain();
      }
      else
      {
        uint64_t v22 = (uint64_t *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
        swift_retain();
        if ((v49 & 0x80000000) == 0 && v23 > (int)v49)
        {
          uint64_t v24 = *v22;
          if (HIDWORD(v49) == -1 || *(_DWORD *)(v24 + 12 * (int)v49 + 8) == HIDWORD(v49))
          {
            uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v21 + 80)
                                                    + 8 * *(__int16 *)(v24 + 12 * (int)v49 + 6)
                                                    + 32)
                                        + 16)
                            + 32);
            swift_retain();
            swift_release();
            uint64_t v26 = *(void *)(v25 + 16);
            if (!v26)
            {
LABEL_46:
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
LABEL_70:
              a1 = v41;
              goto LABEL_71;
            }
LABEL_64:
            swift_bridgeObjectRetain();
            uint64_t v34 = v25 + 40;
            while (((*(uint64_t (**)(void))(*(void *)v34 + 24))() & 1) == 0)
            {
              v34 += 16;
              if (!--v26)
              {
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease_n();
                goto LABEL_69;
              }
            }
            swift_bridgeObjectRelease_n();
            uint64_t v35 = v44 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
            uint64_t v36 = type metadata accessor for ScriptingConfiguration();
            ++*(void *)(v35 + *(int *)(v36 + 36));
            swift_unknownObjectRelease();
LABEL_69:
            a3 = v40;
            goto LABEL_70;
          }
        }
      }
      swift_release();
LABEL_63:
      uint64_t v25 = MEMORY[0x1E4FBC860];
      uint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (!v26) {
        goto LABEL_46;
      }
      goto LABEL_64;
    }
LABEL_75:
    sub_1B636C450((uint64_t)v56);
    if (v19) {
      sub_1B6A667F0(1);
    }
    swift_release();
    uint64_t v12 = v58;
  }
  while (v39 != v12)
  {
    unint64_t v16 = *(void *)(v48 + 8 * v12++ + 120);
    if (v16)
    {
      uint64_t v15 = v12 + 6;
      goto LABEL_26;
    }
  }
  return swift_release();
}

id VFXEntityObject.__allocating_init(_:sharedEntityManager:)(unint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return VFXEntityObject.init(_:sharedEntityManager:)(a1, a2);
}

id VFXEntityObject.init(_:sharedEntityManager:)(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1) {
    int v4 = a1;
  }
  else {
    int v4 = -1;
  }
  sub_1B62CAAD8(a2, (uint64_t)v11);
  type metadata accessor for EntityManager();
  swift_dynamicCast();
  id v5 = (objc_class *)type metadata accessor for VFXEntityObject();
  uint64_t v6 = objc_allocWithZone(v5);
  swift_weakInit();
  *(void *)&v6[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager] = 0;
  v6[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] = 0;
  uint64_t v7 = (int *)&v6[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
  *uint64_t v7 = v4;
  v7[1] = v3;
  swift_weakAssign();
  v10.receiver = v6;
  v10.super_class = v5;
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a2);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v8;
}

uint64_t type metadata accessor for VFXEntityObject()
{
  return self;
}

id VFXEntityObject.__allocating_init(_:privateEntityManager:)(unint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return VFXEntityObject.init(_:privateEntityManager:)(a1, a2);
}

id VFXEntityObject.init(_:privateEntityManager:)(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1) {
    int v4 = a1;
  }
  else {
    int v4 = -1;
  }
  sub_1B62CAAD8(a2, (uint64_t)v14);
  type metadata accessor for EntityManager();
  swift_dynamicCast();
  uint64_t v5 = v13;
  uint64_t v6 = (objc_class *)type metadata accessor for VFXEntityObject();
  uint64_t v7 = objc_allocWithZone(v6);
  swift_weakInit();
  uint64_t v8 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
  v7[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] = 0;
  uint64_t v9 = (int *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
  *uint64_t v9 = v4;
  v9[1] = v3;
  *(void *)&v7[v8] = v5;
  v12.receiver = v7;
  v12.super_class = v6;
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a2);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_1B69612A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t *))
{
  swift_unknownObjectRetain();
  sub_1B6E32718();
  swift_unknownObjectRelease();
  return a5(a3, &v8);
}

id VFXEntityObject.__deallocating_deinit()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = MEMORY[0x1E4FBC860];
    int v4 = sub_1B62FF544(MEMORY[0x1E4FBC860]);
    type metadata accessor for RemapContext();
    uint64_t inited = swift_initStackObject();
    sub_1B62FF544(v3);
    uint64_t v6 = sub_1B67DD1D8(v3);
    swift_bridgeObjectRelease();
    *(void *)(inited + 24) = v4;
    *(void *)(inited + 32) = v6;
    *(unsigned char *)(inited + 16) = 0;
    swift_retain();
    id v7 = v0;
    swift_retain();
    sub_1B69D6990(v2, v2, v7, inited);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for VFXEntityObject();
  return objc_msgSendSuper2(&v9, sel_dealloc);
}

uint64_t sub_1B6961468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B69DF07C(*(void *)(a2 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity), a3);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v40 = v5 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  uint64_t v9 = OBJC_IVAR____TtC3VFX13EntityManager_replicationStream;
  unint64_t v10 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  int64_t v41 = v10;
  unint64_t v36 = v10 - 7;
  uint64_t v37 = a1;
  uint64_t v38 = v5;
  uint64_t v39 = v9;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v11 + 1;
    if (v11 + 1 >= v41) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v40 + 8 * v14);
    if (!v15)
    {
      uint64_t v14 = v11 + 2;
      if (v11 + 2 >= v41) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v40 + 8 * v14);
      if (!v15)
      {
        uint64_t v14 = v11 + 3;
        if (v11 + 3 >= v41) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v40 + 8 * v14);
        if (!v15)
        {
          uint64_t v14 = v11 + 4;
          if (v11 + 4 >= v41) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v40 + 8 * v14);
          if (!v15)
          {
            uint64_t v14 = v11 + 5;
            if (v11 + 5 >= v41) {
              return swift_release();
            }
            unint64_t v15 = *(void *)(v40 + 8 * v14);
            if (!v15)
            {
              uint64_t v14 = v11 + 6;
              if (v11 + 6 >= v41) {
                return swift_release();
              }
              unint64_t v15 = *(void *)(v40 + 8 * v14);
              if (!v15) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v11 = v14;
LABEL_22:
    uint64_t v43 = *(void *)(*(void *)(v5 + 48) + 8 * v13);
    uint64_t v16 = *(void *)(a1 + v9);
    if (v16)
    {
      int v17 = *(unsigned __int8 *)(v16 + 80);
      MEMORY[0x1BA9B8670](v16 + 48);
      uint64_t v16 = *(void *)(v16 + 56);
    }
    else
    {
      int v17 = 0;
    }
    uint64_t v46 = 0;
    swift_unknownObjectUnownedInit();
    v45[0] = a1;
    uint64_t v46 = v16;
    swift_unknownObjectUnownedAssign();
    swift_unownedRetain();
    swift_unknownObjectRelease();
    int v51 = v17;
    char v47 = v17;
    sub_1B636C4E0((uint64_t)v45, (uint64_t)v49);
    if (v43 == -1 && HIDWORD(v43) == 0) {
      goto LABEL_66;
    }
    uint64_t v42 = v11;
    uint64_t v19 = v49[0];
    swift_unownedRetainStrong();
    swift_release();
    uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
    if (Strong)
    {
      uint64_t v21 = Strong;
      if (v43 == -1)
      {
        if (HIDWORD(v43))
        {
          swift_retain();
          goto LABEL_42;
        }
LABEL_43:
        uint64_t v25 = MEMORY[0x1E4FBC860];
        uint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (!v26) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v22 = (void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v23 = *(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
        swift_retain();
        if ((v43 & 0x80000000) != 0
          || v23 <= (int)v43
          || (HIDWORD(v43) != -1 ? (BOOL v24 = *(_DWORD *)(*v22 + 12 * (int)v43 + 8) == HIDWORD(v43)) : (BOOL v24 = 1), !v24))
        {
LABEL_42:
          swift_release();
          goto LABEL_43;
        }
        uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v19 + 80)
                                                + 8 * *(__int16 *)(*v22 + 12 * (int)v43 + 6)
                                                + 32)
                                    + 16)
                        + 32);
        swift_retain();
        swift_release();
        uint64_t v26 = *(void *)(v25 + 16);
        if (!v26)
        {
LABEL_39:
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
LABEL_49:
          a1 = v37;
          uint64_t v5 = v38;
          uint64_t v9 = v39;
          goto LABEL_50;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v27 = v25 + 40;
      while (((*(uint64_t (**)(void))(*(void *)v27 + 24))() & 1) == 0)
      {
        v27 += 16;
        if (!--v26)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_49;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v28 = v21 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
      uint64_t v29 = type metadata accessor for ScriptingConfiguration();
      ++*(void *)(v28 + *(int *)(v29 + 36));
      swift_unknownObjectRelease();
      goto LABEL_49;
    }
LABEL_50:
    swift_unownedRetainStrong();
    sub_1B69DE144(v43 | ((unint64_t)HIDWORD(v43) << 32));
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong()) {
      swift_unknownObjectRelease();
    }
    uint64_t v11 = v42;
    if (v50 == 1)
    {
      swift_unownedRetainStrong();
      v45[0] = v43;
      char v48 = 4;
      uint64_t v30 = *(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
      if (v30 && (*(unsigned char *)(v30 + 81) & 1) != 0)
      {
        if (*(void *)(v30 + 24) && swift_weakLoadStrong())
        {
          swift_retain();
          swift_unknownObjectRetain();
          swift_release();
          sub_1B6873570((uint64_t)v45, (uint64_t)v44);
          unint64_t v31 = *(void **)(v30 + 16);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v30 + 16) = v31;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v31 = sub_1B68C0B2C(0, v31[2] + 1, 1, v31);
            *(void *)(v30 + 16) = v31;
          }
          unint64_t v34 = v31[2];
          unint64_t v33 = v31[3];
          if (v34 >= v33 >> 1)
          {
            unint64_t v31 = sub_1B68C0B2C(v33 > 1, v34 + 1, 1, v31);
            *(void *)(v30 + 16) = v31;
          }
          v31[2] = v34 + 1;
          sub_1B68735CC((uint64_t)v44, (uint64_t)&v31[8 * v34 + 4]);
          swift_release();
          swift_unknownObjectRelease();
          swift_release();
          uint64_t v9 = v39;
        }
        else
        {
          swift_release();
        }
        uint64_t v11 = v42;
      }
      else
      {
        swift_release();
      }
      sub_1B67421B0((uint64_t)v45);
    }
LABEL_66:
    sub_1B636C450((uint64_t)v49);
    if (v51) {
      sub_1B6A667F0(1);
    }
  }
  while (v36 != v11)
  {
    unint64_t v15 = *(void *)(v5 + 8 * v11++ + 120);
    if (v15)
    {
      uint64_t v14 = v11 + 6;
      goto LABEL_21;
    }
  }
  return swift_release();
}

uint64_t sub_1B6961A64@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t Strong = *(void *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  uint64_t result = swift_release();
  a1[3] = &type metadata for EntityInstance;
  *a1 = v3;
  a1[1] = Strong;
  return result;
}

id sub_1B6961B2C()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t Strong = *(void *)&v0[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  type metadata accessor for EntityManager();
  swift_allocObject();
  uint64_t v2 = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
  uint64_t v3 = v0[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned];
  sub_1B6960754(0);
  uint64_t v12 = 0xFFFFFFFFLL;
  swift_retain();
  int v4 = v0;
  uint64_t v5 = swift_retain();
  sub_1B69D83DC(v5, &v12, v2, v4, Strong);
  sub_1B6960754(v3);
  uint64_t v6 = (objc_class *)type metadata accessor for VFXEntityObject();
  uint64_t v7 = objc_allocWithZone(v6);
  swift_weakInit();
  uint64_t v8 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
  v7[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] = 0;
  *(void *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity] = v12;
  *(void *)&v7[v8] = v2;
  v11.receiver = v7;
  v11.super_class = v6;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  return v9;
}

uint64_t sub_1B6961CD4()
{
  uint64_t v1 = v0;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t result = swift_release();
    if ((v0[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] & 1) == 0)
    {
      v0[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] = 1;
      type metadata accessor for RemapContext();
      uint64_t inited = swift_initStackObject();
      uint64_t v4 = MEMORY[0x1E4FBC860];
      sub_1B62FF544(MEMORY[0x1E4FBC860]);
      uint64_t v5 = sub_1B67DD1D8(v4);
      swift_bridgeObjectRelease();
      *(void *)(inited + 24) = MEMORY[0x1E4FBC868];
      *(void *)(inited + 32) = v5;
      *(unsigned char *)(inited + 16) = 0;
      uint64_t Strong = swift_weakLoadStrong();
      if (!Strong)
      {
        uint64_t Strong = *(void *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (Strong)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      sub_1B69D81BC(Strong, v1, inited, 1);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B6961E18(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong && (uint64_t v5 = Strong, result = swift_release(), v5 == a1))
  {
    if (v2[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] == 1)
    {
      v2[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] = 0;
      type metadata accessor for RemapContext();
      uint64_t inited = swift_initStackObject();
      uint64_t v17 = MEMORY[0x1E4FBC860];
      sub_1B62FF544(MEMORY[0x1E4FBC860]);
      uint64_t v18 = sub_1B67DD1D8(v17);
      swift_bridgeObjectRelease();
      *(void *)(inited + 24) = MEMORY[0x1E4FBC868];
      *(void *)(inited + 32) = v18;
      *(unsigned char *)(inited + 16) = 0;
      uint64_t v19 = swift_weakLoadStrong();
      if (!v19)
      {
        uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (v19)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          uint64_t v19 = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      sub_1B69D81BC(v19, v2, inited, 0);
      return swift_release();
    }
  }
  else
  {
    uint64_t v7 = swift_weakLoadStrong();
    swift_release();
    if (v7)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v8 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v23 = 0;
      swift_retain();
      sub_1B6B33E34(v8, &v23, 0xD000000000000083, 0x80000001B6F3EBC0);
      swift_release();
      swift_release();
    }
    if (swift_weakLoadStrong())
    {
      swift_release();
      if ((v2[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] & 1) == 0) {
        sub_1B6960754(1);
      }
    }
    if (v2[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] == 1) {
      sub_1B6960754(0);
    }
    uint64_t v9 = swift_weakLoadStrong();
    uint64_t result = swift_release();
    if (v9)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v10 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v23 = 0;
      swift_retain();
      sub_1B6B33E34(v10, &v23, 0xD00000000000002FLL, 0x80000001B6F3EB90);
      swift_release();
      return swift_release();
    }
    objc_super v11 = (uint64_t *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
    if (*(_DWORD *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity] != -1
      || *(_DWORD *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4] != 0)
    {
      uint64_t v13 = swift_weakLoadStrong();
      uint64_t v14 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
      if (v13)
      {
        uint64_t v15 = v13;
      }
      else
      {
        uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (v15)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          uint64_t v15 = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
          uint64_t v14 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
        }
      }
      BOOL v20 = *(void *)&v2[v14] != 0;
      uint64_t v21 = v2;
      swift_retain();
      swift_retain();
      uint64_t v22 = sub_1B69E494C(v15, v15, v21, a1, v20);
      swift_release();

      swift_release();
      swift_weakAssign();
      *(void *)&v2[v14] = 0;
      swift_release();
      uint64_t result = swift_release();
      *objc_super v11 = v22;
    }
  }
  return result;
}

unint64_t sub_1B6962298@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, void *a4@<X8>)
{
  sub_1B62EF30C(0, &qword_1EB980C50, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  uint64_t v9 = OBJC_IVAR____TtC3VFX15VFXEntityObject_entity;
  *(void *)(inited + 32) = *(void *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  uint64_t v10 = sub_1B6A621D8(inited, a2, 0, 0x100000000uLL);
  swift_setDeallocating();
  if (*(void *)(v10 + 16)) {
    uint64_t v11 = *(void *)(v10 + 32);
  }
  else {
    uint64_t v11 = 0;
  }
  unint64_t result = swift_bridgeObjectRelease();
  if ((a3 & 1) == 0) {
    unint64_t result = sub_1B6A620EC(*(void *)(a1 + v9));
  }
  *a4 = v11;
  return result;
}

uint64_t sub_1B6962410()
{
  int v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  uint64_t v2 = *(int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t Strong = *(void *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  swift_retain();
  BOOL v4 = v2 == -1 && v1 == 0;
  if (v4
    || (v2 & 0x80000000) != 0
    || *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v2
    || ((uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries), v1 != -1)
      ? (BOOL v6 = *(_DWORD *)(v5 + 12 * (int)v2 + 8) == v1)
      : (BOOL v6 = 1),
        !v6))
  {
    swift_release();
    return 0;
  }
  else
  {
    uint64_t v7 = sub_1B6965CC4(*(void *)(*(void *)(Strong + 136) + 8 * *(int *)(v5 + 12 * (int)v2) + 32), *(_DWORD *)(v5 + 12 * (int)v2), *(_WORD *)(v5 + 12 * (int)v2 + 4), 16, Strong);
    uint64_t v9 = v8;
    swift_release();
    if (v9) {
      return v7;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1B69625F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t Strong = *(void *)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B69D8660(Strong, v3, a1, a2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B69626E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  uint64_t v7 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t Strong = *(void *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if (a3)
  {
    id v9 = objc_allocWithZone(MEMORY[0x1E4F29128]);
    swift_bridgeObjectRetain();
    id v10 = objc_msgSend(v9, sel_init);

    v16[0] = a2;
    v16[1] = a3;
    swift_retain();
    sub_1B6A60FF8(0, Strong, v16, v6 | (v7 << 32));
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
    swift_retain();
    if (v11)
    {
      int v12 = *(unsigned __int8 *)(v11 + 80);
      MEMORY[0x1BA9B8670](v11 + 48);
      uint64_t v11 = *(void *)(v11 + 56);
    }
    else
    {
      int v12 = 0;
    }
    swift_unknownObjectUnownedInit();
    v14[0] = Strong;
    v14[2] = v11;
    swift_unknownObjectUnownedAssign();
    swift_unownedRetain();
    swift_unknownObjectRelease();
    char v15 = v12;
    sub_1B636C4E0((uint64_t)v14, (uint64_t)v16);
    sub_1B6A61F04((uint64_t)&type metadata for VFXTag, (uint64_t)&off_1F0FA2150, v6 | (v7 << 32));
    sub_1B636C450((uint64_t)v16);
    if (v12) {
      sub_1B6A667F0(1);
    }
  }
  return swift_release();
}

uint64_t (*sub_1B6962904(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = sub_1B6962410();
  a1[1] = v3;
  return sub_1B696294C;
}

uint64_t sub_1B696294C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return sub_1B69625F0(*a1, v2);
  }
  swift_bridgeObjectRetain();
  sub_1B69625F0(v3, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B69629C0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (char *)sub_1B6961B2C();
  unint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t Strong = *(void *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);
  id v6 = objc_msgSend(v5, sel_UUIDString);

  uint64_t v7 = sub_1B6E31798();
  uint64_t v9 = v8;

  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B69D8898(Strong, v3, Strong, v7, v9);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = type metadata accessor for VFXEntityObject();
  a1[3] = result;
  *a1 = v2;
  return result;
}

uint64_t sub_1B6962B80(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v4 = sub_1B69EEC1C(a2);
  if (*(void *)(v4 + 16))
  {
    sub_1B6966C18();
    uint64_t v5 = sub_1B6E32C58();
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC868];
  }
  uint64_t v11 = v5;
  sub_1B6A00280(v4, 1, &v11);
  swift_bridgeObjectRelease();
  uint64_t v6 = v11;
  type metadata accessor for VFXBridgingRemapAndResolveContext();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = v6;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t Strong = *(void *)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  swift_retain();
  uint64_t v9 = v3;
  swift_retain();
  sub_1B69D8C5C(Strong, v9, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1B6962CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v2 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  uint64_t v3 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  uint64_t v44 = (unint64_t *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  uint64_t v34 = a1;
  uint64_t v38 = a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_referencedEntityManager;
  if (!swift_weakLoadStrong())
  {
    if (*(void *)(v34 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if (v2 == -1 && v3 == 0)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_retain();
    uint64_t v5 = sub_1B6BFADC0(v2 | (v3 << 32));
    swift_release();
  }
  uint64_t v37 = *(void *)(v5 + 16);
  if (!v37) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = 0;
  uint64_t v33 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
  uint64_t v36 = v5;
  do
  {
    long long v39 = *(_OWORD *)(v5 + 16 * v6 + 32);
    unint64_t v7 = *v44;
    if (!swift_weakLoadStrong())
    {
      if (*(void *)(v34 + v33))
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    swift_release();
    uint64_t v8 = v39;
    uint64_t v9 = sub_1B6E324B8();
    uint64_t v10 = *(void *)(v9 - 8);
    MEMORY[0x1F4188790](v9, v11);
    uint64_t v13 = (char *)&v31 - v12;
    uint64_t v14 = *((void *)&v39 + 1);
    sub_1B681F3A0(v7, v8, (uint64_t)&v31 - v12);
    uint64_t v15 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v8) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    else
    {
      *(_OWORD *)&v40[3] = v39;
      uint64_t v16 = sub_1B62C12C4(v40);
      (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v16, v13, v8);
      sub_1B62C15C4((long long *)v40, (uint64_t)v41);
      uint64_t v17 = v42;
      uint64_t v18 = v43;
      sub_1B62C550C((uint64_t)v41, v42);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, void))(*(void *)(v14 + 8) + 96))(v32, &off_1F0F9C088, v17, *(void *)(v18 + 8));
      uint64_t v19 = v42;
      *(void *)&long long v39 = v43;
      BOOL v20 = sub_1B62C14BC(v41, v42);
      unint64_t v21 = *v44;
      uint64_t Strong = swift_weakLoadStrong();
      if (!Strong)
      {
        uint64_t Strong = *(void *)(v34 + v33);
        if (Strong)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          uint64_t Strong = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      swift_release();
      uint64_t v23 = sub_1B6E324B8();
      uint64_t v35 = &v31;
      uint64_t v24 = *(void *)(v23 - 8);
      v26.n128_f64[0] = MEMORY[0x1F4188790](v23, v25);
      uint64_t v28 = (char *)&v31 - v27;
      uint64_t v29 = *(void *)(v19 - 8);
      (*(void (**)(char *, void *, uint64_t, __n128))(v29 + 16))((char *)&v31 - v27, v20, v19, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v19);
      sub_1B681F774((uint64_t)v28, v21, Strong, v19, v39);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v23);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
    }
    uint64_t v5 = v36;
    ++v6;
  }
  while (v37 != v6);
  return swift_bridgeObjectRelease();
}

id VFXEntityObject.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void VFXEntityObject.init()()
{
}

uint64_t sub_1B6963364@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for EmitterDescription)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t v12 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v13 = *(void *)(v8 + 32);
    uint64_t v14 = *(unsigned __int8 *)(v8 + 40);
    int v15 = *(unsigned __int8 *)(v8 + 41);
    int v16 = *(unsigned __int8 *)(v8 + 42);
    int v17 = *(unsigned __int8 *)(v8 + 43);
    int v18 = *(unsigned __int8 *)(v8 + 44);
    int v19 = *(unsigned __int8 *)(v8 + 45);
    uint64_t v20 = *(void *)(v8 + 48);
    uint64_t v21 = *(unsigned __int8 *)(v8 + 56);
    int v22 = *(unsigned __int8 *)(v8 + 57);
    int v23 = *(unsigned __int8 *)(v8 + 58);
    uint64_t v24 = *(void *)(v8 + 64);
    uint64_t v25 = *(unsigned __int8 *)(v8 + 72);
    uint64_t v26 = *(unsigned __int16 *)(v8 + 74);
    int v27 = *(unsigned __int8 *)(v8 + 76);
    int v28 = *(unsigned __int8 *)(v8 + 77);
    int v29 = *(_DWORD *)(v8 + 80);
    BOOL v30 = v15 == 0;
    uint64_t v31 = 256;
    if (v30) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = 256;
    }
    uint64_t v33 = v32 | v14;
    BOOL v30 = v16 == 0;
    uint64_t v34 = 0x10000;
    if (v30) {
      uint64_t v35 = 0;
    }
    else {
      uint64_t v35 = 0x10000;
    }
    BOOL v30 = v17 == 0;
    uint64_t v36 = 0x1000000;
    if (v30) {
      uint64_t v36 = 0;
    }
    uint64_t v37 = v33 | v35 | v36;
    uint64_t v38 = 0x100000000;
    if (v18) {
      uint64_t v39 = 0x100000000;
    }
    else {
      uint64_t v39 = 0;
    }
    if (v19) {
      uint64_t v40 = 0x10000000000;
    }
    else {
      uint64_t v40 = 0;
    }
    uint64_t v41 = v37 | v39 | v40;
    if (!v22) {
      uint64_t v31 = 0;
    }
    uint64_t v42 = v31 | v21;
    if (!v23) {
      uint64_t v34 = 0;
    }
    uint64_t v43 = v42 | v34;
    if (!v27) {
      uint64_t v38 = 0;
    }
    uint64_t v44 = v25 | (v26 << 16) | v38;
    if (v28) {
      uint64_t v45 = 0x10000000000;
    }
    else {
      uint64_t v45 = 0;
    }
    *(void *)a5 = v9;
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v12;
    *(void *)(a5 + 24) = v11;
    *(void *)(a5 + 32) = v13;
    *(void *)(a5 + 40) = v41;
    *(void *)(a5 + 48) = v20;
    *(void *)(a5 + 56) = v43;
    *(void *)(a5 + 64) = v24;
    *(void *)(a5 + 72) = v44 | v45;
    *(_DWORD *)(a5 + 80) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(_DWORD *)(a5 + 80) = 0;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)(a5 + 64) = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)a5 = 0u;
  }
  return result;
}

uint64_t sub_1B6963500@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for GraphComponent)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    return sub_1B664910C((void *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)+ *v7+ (a2 << 16 >> 48) * a3), a5);
  }
  else
  {
LABEL_5:
    *(_OWORD *)a5 = xmmword_1B6E4F270;
    *(void *)(a5 + 24) = 0;
    *(void *)(a5 + 32) = 0;
    *(void *)(a5 + 16) = 0;
  }
  return result;
}

uint64_t sub_1B6963598@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for TextureCPURuntime)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v9 = *(void *)(v8 + 16);
    uint64_t v10 = *(unsigned __int8 *)(v8 + 24);
    uint64_t v11 = *(void *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 96);
    uint64_t v13 = *(unsigned int *)(v8 + 104);
    uint64_t v14 = *(void *)(v8 + 112);
    uint64_t v15 = 0x10000;
    if (!*(unsigned char *)(v8 + 42)) {
      uint64_t v15 = 0;
    }
    unint64_t v16 = *(unsigned __int16 *)(v8 + 40) | (unint64_t)v15;
    *(_OWORD *)a5 = *(_OWORD *)v8;
    *(void *)(a5 + 16) = v9;
    *(void *)(a5 + 24) = v10;
    *(void *)(a5 + 32) = v11;
    *(void *)(a5 + 40) = v16;
    long long v17 = *(_OWORD *)(v8 + 64);
    *(_OWORD *)(a5 + 48) = *(_OWORD *)(v8 + 48);
    *(_OWORD *)(a5 + 64) = v17;
    *(_OWORD *)(a5 + 80) = *(_OWORD *)(v8 + 80);
    *(void *)(a5 + 96) = v12;
    *(void *)(a5 + 104) = v13;
    *(void *)(a5 + 112) = v14;
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(void *)(a5 + 112) = 0;
    *(_OWORD *)(a5 + 80) = 0u;
    *(_OWORD *)(a5 + 96) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)(a5 + 64) = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)a5 = 0u;
  }
  return result;
}

__n128 sub_1B696368C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, __n128 *a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ProjectorParameters)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = (__n128 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                  + *v7
                  + (a2 << 16 >> 48) * a3);
    unsigned __int32 v10 = v9[2].n128_u32[0];
    uint64_t v11 = 0x100000000;
    if (!v9->n128_u8[12]) {
      uint64_t v11 = 0;
    }
    uint64_t v12 = v11 | v9->n128_u32[2];
    a5->n128_u64[0] = v9->n128_u64[0];
    a5->n128_u64[1] = v12;
    __n128 result = v9[1];
    a5[1] = result;
    a5[2].n128_u32[0] = v10;
  }
  else
  {
LABEL_5:
    result.n128_u64[0] = 0;
    *a5 = (__n128)xmmword_1B6E95E80;
    a5[1].n128_u64[0] = 0;
    a5[1].n128_u64[1] = 0;
    a5[2].n128_u32[0] = 0;
  }
  return result;
}

__n128 sub_1B696372C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleForceField)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v10 = *(void *)(v9 + 32);
    int v11 = *(_DWORD *)(v9 + 40);
    __n128 result = *(__n128 *)v9;
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)a5 = *(_OWORD *)v9;
    *(_OWORD *)(a5 + 16) = v12;
    *(void *)(a5 + 32) = v10;
    *(_DWORD *)(a5 + 40) = v11;
    *(unsigned char *)(a5 + 44) = 0;
  }
  else
  {
LABEL_5:
    result.n128_u64[0] = 0;
    *(_OWORD *)(a5 + 28) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(unsigned char *)(a5 + 44) = 1;
  }
  return result;
}

__n128 sub_1B69637B8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticlePositionOverTexture)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    int v10 = *(_DWORD *)(v9 + 40);
    uint64_t v11 = *(unsigned int *)(v9 + 16);
    unint64_t v12 = *(unsigned __int16 *)(v9 + 8) | ((unint64_t)*(unsigned int *)(v9 + 12) << 32);
    *(void *)a5 = *(void *)v9;
    *(void *)(a5 + 8) = v12;
    *(void *)(a5 + 16) = v11;
    __n128 result = *(__n128 *)(v9 + 24);
    *(__n128 *)(a5 + 24) = result;
    *(_DWORD *)(a5 + 40) = v10;
  }
  else
  {
LABEL_5:
    result.n128_u64[0] = 0;
    *(_OWORD *)a5 = xmmword_1B6E95E90;
    *(void *)(a5 + 24) = 0;
    *(void *)(a5 + 32) = 0;
    *(void *)(a5 + 16) = 0;
    *(_DWORD *)(a5 + 40) = 0;
  }
  return result;
}

__n128 sub_1B6963854@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleFluidSolver2DEmitter)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    __int16 v9 = v8[24];
    if (v8[25]) {
      __int16 v10 = 256;
    }
    else {
      __int16 v10 = 0;
    }
    *(void *)a5 = *v8 | ((unint64_t)*((unsigned int *)v8 + 1) << 32);
    __n128 result = *(__n128 *)(v8 + 8);
    *(__n128 *)(a5 + 8) = result;
    *(_WORD *)(a5 + 24) = v10 | v9;
  }
  else
  {
LABEL_5:
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)a5 = 2;
    *(_WORD *)(a5 + 24) = 0;
  }
  return result;
}

uint64_t sub_1B69638F4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleFluidSolver2DSolver)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v9 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 32);
    uint64_t v10 = *(void *)(v8 + 40);
    char v12 = *(unsigned char *)(v8 + 80);
    uint64_t v13 = 256;
    if (*(unsigned char *)(v8 + 9)) {
      uint64_t v14 = 256;
    }
    else {
      uint64_t v14 = 0;
    }
    unint64_t v15 = v14 | *(unsigned __int8 *)(v8 + 8) | ((unint64_t)*(unsigned __int8 *)(v8 + 10) << 16) | ((unint64_t)*(unsigned __int8 *)(v8 + 11) << 24) | ((unint64_t)*(unsigned int *)(v8 + 12) << 32);
    if (!*(unsigned char *)(v8 + 65)) {
      uint64_t v13 = 0;
    }
    uint64_t v16 = v13 | *(unsigned __int8 *)(v8 + 64);
    uint64_t v17 = 0x10000;
    if (!*(unsigned char *)(v8 + 66)) {
      uint64_t v17 = 0;
    }
    unint64_t v18 = v16 | v17 | ((unint64_t)*(unsigned int *)(v8 + 68) << 32);
    unint64_t v19 = *(unsigned __int8 *)(v8 + 72) | ((unint64_t)*(unsigned int *)(v8 + 76) << 32);
    *(void *)a5 = *(void *)v8;
    *(void *)(a5 + 8) = v15;
    *(void *)(a5 + 16) = v9;
    *(void *)(a5 + 24) = 0;
    *(void *)(a5 + 32) = v11;
    *(void *)(a5 + 40) = v10;
    *(_OWORD *)(a5 + 48) = *(_OWORD *)(v8 + 48);
    *(void *)(a5 + 64) = v18;
    *(void *)(a5 + 72) = v19;
    *(unsigned char *)(a5 + 80) = v12;
    return swift_retain();
  }
  else
  {
LABEL_5:
    *(void *)a5 = 1;
    *(_OWORD *)(a5 + 8) = 0u;
    *(_OWORD *)(a5 + 24) = 0u;
    *(_OWORD *)(a5 + 40) = 0u;
    *(_OWORD *)(a5 + 56) = 0u;
    *(_OWORD *)(a5 + 65) = 0u;
  }
  return result;
}

__n128 sub_1B6963A20@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSizeOverTexture)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v10 = *(void *)(v9 + 56);
    int v11 = *(_DWORD *)(v9 + 64);
    unint64_t v12 = *(unsigned __int16 *)(v9 + 8) | ((unint64_t)*(unsigned __int8 *)(v9 + 12) << 32);
    unint64_t v13 = *(unsigned int *)(v9 + 16) | ((unint64_t)*(unsigned __int8 *)(v9 + 20) << 32);
    *(void *)a5 = *(void *)v9;
    *(void *)(a5 + 8) = v12;
    *(void *)(a5 + 16) = v13;
    *(_OWORD *)(a5 + 24) = *(_OWORD *)(v9 + 24);
    __n128 result = *(__n128 *)(v9 + 40);
    *(__n128 *)(a5 + 40) = result;
    *(void *)(a5 + 56) = v10;
    *(_DWORD *)(a5 + 64) = v11;
  }
  else
  {
LABEL_5:
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0x300000000;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a5 + 24) = 0u;
    *(_OWORD *)(a5 + 40) = 0u;
    *(_OWORD *)(a5 + 52) = 0u;
  }
  return result;
}

uint64_t sub_1B6963ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for MaterialRuntime)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    uint64_t v10 = (_OWORD *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                   + *v8
                   + (a2 << 16 >> 48) * a3);
    long long v11 = v10[3];
    long long v13 = *v10;
    long long v12 = v10[1];
    v23[2] = v10[2];
    _OWORD v23[3] = v11;
    v23[0] = v13;
    v23[1] = v12;
    long long v14 = v10[7];
    long long v16 = v10[4];
    long long v15 = v10[5];
    v23[6] = v10[6];
    v23[7] = v14;
    v23[4] = v16;
    v23[5] = v15;
    long long v17 = v10[11];
    long long v19 = v10[8];
    long long v18 = v10[9];
    v23[10] = v10[10];
    v23[11] = v17;
    v23[8] = v19;
    v23[9] = v18;
    long long v21 = v10[13];
    long long v20 = v10[14];
    long long v22 = v10[12];
    uint64_t v24 = *((void *)v10 + 30);
    v23[13] = v21;
    v23[14] = v20;
    v23[12] = v22;
    memmove(__dst, v10, 0xF8uLL);
    nullsub_1(__dst);
    sub_1B62EF28C((uint64_t)__dst, a5, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
    return sub_1B681C5EC((uint64_t)v23);
  }
  else
  {
LABEL_5:
    sub_1B6342918((uint64_t)__dst);
    return sub_1B62EF28C((uint64_t)__dst, a5, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
  }
}

uint64_t sub_1B6963C10@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for GraphScriptingConfig)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (unsigned __int16 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                            + *v7
                            + (a2 << 16 >> 48) * a3);
    uint64_t v9 = *((void *)v8 + 1);
    uint64_t v10 = *((void *)v8 + 2);
    __int16 v11 = *((unsigned __int8 *)v8 + 24);
    int v12 = *((unsigned __int8 *)v8 + 25);
    int v13 = *((unsigned __int8 *)v8 + 26);
    uint64_t v14 = *v8;
    if (v12) {
      __int16 v15 = 256;
    }
    else {
      __int16 v15 = 0;
    }
    *(void *)a5 = v14;
    *(void *)(a5 + 8) = v9;
    *(void *)(a5 + 16) = v10;
    *(unsigned char *)(a5 + 26) = v13 != 0;
    *(_WORD *)(a5 + 24) = v15 | v11;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(_DWORD *)(a5 + 23) = 0;
    *(void *)(a5 + 16) = 0;
  }
  return result;
}

uint64_t sub_1B6963CE0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for GraphEntityComponentPropertyReferences)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t v11 = *(void *)(v8 + 16);
    uint64_t v12 = *(void *)(v8 + 24);
    uint64_t v14 = *(void *)(v8 + 32);
    uint64_t v13 = *(void *)(v8 + 40);
    uint64_t v15 = *(void *)(v8 + 48);
    LOBYTE(v8) = *(unsigned char *)(v8 + 56);
    *(void *)a5 = v9;
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v11;
    *(void *)(a5 + 24) = v12;
    *(void *)(a5 + 32) = v14;
    *(void *)(a5 + 40) = v13;
    *(void *)(a5 + 48) = v15;
    *(unsigned char *)(a5 + 56) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(_OWORD *)(a5 + 41) = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)a5 = 0u;
  }
  return result;
}

uint64_t sub_1B6963DD0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSubSpawn.State)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (void *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                  + *v7
                  + (a2 << 16 >> 48) * a3);
    uint64_t v9 = v8[1];
    uint64_t v10 = v8[2];
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    uint64_t v13 = v8[5];
    uint64_t v14 = v8[6];
    uint64_t v15 = v8[7];
    *a5 = *v8;
    a5[1] = v9;
    a5[2] = v10;
    a5[3] = v11;
    a5[4] = v12;
    a5[5] = v13;
    a5[6] = v14;
    a5[7] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *((_OWORD *)a5 + 2) = 0u;
    *((_OWORD *)a5 + 3) = 0u;
    *(_OWORD *)a5 = 0u;
    *((_OWORD *)a5 + 1) = 0u;
  }
  return result;
}

__n128 sub_1B6963EC4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, __n128 *a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleRibbonTrails)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (__n128 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                  + *v7
                  + (a2 << 16 >> 48) * a3);
    unint64_t v9 = v8[1].n128_u8[0] | ((unint64_t)v8[1].n128_u32[1] << 32);
    uint64_t v10 = 256;
    if (!v8[1].n128_u8[9]) {
      uint64_t v10 = 0;
    }
    uint64_t v11 = v10 | v8[1].n128_u8[8];
    uint64_t v12 = 0x10000;
    if (!v8[1].n128_u8[10]) {
      uint64_t v12 = 0;
    }
    unint64_t v13 = v11 | v12 | ((unint64_t)v8[1].n128_u32[3] << 32);
    __n128 result = *v8;
    *a5 = *v8;
    a5[1].n128_u64[0] = v9;
    a5[1].n128_u64[1] = v13;
  }
  else
  {
LABEL_5:
    a5->n128_u64[0] = 0;
    a5->n128_u64[1] = 0;
    a5[1].n128_u64[0] = 0;
    a5[1].n128_u64[1] = 2;
  }
  return result;
}

__n128 sub_1B6963F78@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleRibbonRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v10 = *(void *)(v9 + 96);
    char v11 = *(unsigned char *)(v9 + 104);
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)a5 = *(_OWORD *)v9;
    *(_OWORD *)(a5 + 16) = v12;
    long long v13 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(a5 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(a5 + 48) = v13;
    __n128 result = *(__n128 *)(v9 + 64);
    long long v14 = *(_OWORD *)(v9 + 80);
    *(__n128 *)(a5 + 64) = result;
    *(_OWORD *)(a5 + 80) = v14;
    *(void *)(a5 + 96) = v10;
    *(unsigned char *)(a5 + 104) = v11;
  }
  else
  {
LABEL_5:
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 24) = 0x20000000000;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)(a5 + 64) = 0u;
    *(_OWORD *)(a5 + 80) = 0u;
    *(_OWORD *)(a5 + 89) = 0u;
  }
  return result;
}

uint64_t sub_1B6964018@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for Material)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    uint64_t v10 = *((void *)v8 + 1);
    uint64_t v9 = *((void *)v8 + 2);
    uint64_t v11 = *((void *)v8 + 7);
    uint64_t v12 = v8[64];
    uint64_t v13 = *((void *)v8 + 11);
    uint64_t v14 = *((void *)v8 + 12);
    uint64_t v15 = 0x100000000;
    if (!v8[44]) {
      uint64_t v15 = 0;
    }
    uint64_t v16 = v15 | *((unsigned int *)v8 + 10);
    unint64_t v17 = *((unsigned int *)v8 + 12) | ((unint64_t)v8[52] << 32);
    uint64_t v18 = 0x10000000000;
    if (!v8[53]) {
      uint64_t v18 = 0;
    }
    *(void *)a5 = *v8;
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v9;
    *(_OWORD *)(a5 + 24) = *(_OWORD *)(v8 + 24);
    *(void *)(a5 + 40) = v16;
    *(void *)(a5 + 48) = v17 | v18;
    *(void *)(a5 + 56) = v11;
    *(void *)(a5 + 64) = v12;
    *(_OWORD *)(a5 + 72) = *(_OWORD *)(v8 + 72);
    *(void *)(a5 + 88) = v13;
    *(void *)(a5 + 96) = v14;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  else
  {
LABEL_5:
    *(void *)(a5 + 96) = 0;
    *(_OWORD *)(a5 + 64) = 0u;
    *(_OWORD *)(a5 + 80) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B6964138@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for WrapAroundCamera)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v10 = *(void *)(v9 + 16);
    uint64_t v11 = *(void *)(v9 + 28);
    uint64_t v12 = 256;
    if (!*(unsigned char *)(v9 + 25)) {
      uint64_t v12 = 0;
    }
    uint64_t v13 = v12 | *(unsigned __int8 *)(v9 + 24) | (v11 << 32);
    uint64_t v14 = 0x100000000;
    if (!*(unsigned char *)(v9 + 36)) {
      uint64_t v14 = 0;
    }
    unint64_t v8 = v14 & 0xFFFFFFFF00000000 | HIDWORD(v11);
    *(_OWORD *)a5 = *(_OWORD *)v9;
    *(void *)(a5 + 16) = v10;
    *(void *)(a5 + 24) = v13;
  }
  else
  {
LABEL_5:
    unint64_t v8 = 0;
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 24) = 2;
  }
  *(_DWORD *)(a5 + 32) = v8;
  *(unsigned char *)(a5 + 36) = BYTE4(v8);
  return result;
}

__n128 sub_1B69641F4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, __n128 *a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for PointCacheEmitter)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unint64_t v8 = (__n128 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                  + *v7
                  + (a2 << 16 >> 48) * a3);
    unint64_t v9 = v8[1].n128_u64[0];
    unsigned __int32 v10 = v8[2].n128_u32[0];
    uint64_t v11 = 256;
    if (!v8[1].n128_u8[9]) {
      uint64_t v11 = 0;
    }
    uint64_t v12 = v11 | v8[1].n128_u8[8];
    uint64_t v13 = 0x10000;
    if (!v8[1].n128_u8[10]) {
      uint64_t v13 = 0;
    }
    uint64_t v14 = 0x1000000;
    if (!v8[1].n128_u8[11]) {
      uint64_t v14 = 0;
    }
    uint64_t v15 = v12 | v13 | v14;
    uint64_t v16 = 0x100000000;
    if (!v8[1].n128_u8[12]) {
      uint64_t v16 = 0;
    }
    unint64_t v17 = v15 | v16 | ((unint64_t)v8[1].n128_u8[13] << 40);
    __n128 result = *v8;
    *a5 = *v8;
    a5[1].n128_u64[0] = v9;
    a5[1].n128_u64[1] = v17;
    a5[2].n128_u32[0] = v10;
  }
  else
  {
LABEL_5:
    a5->n128_u64[0] = 0;
    a5->n128_u64[1] = 0;
    a5[1].n128_u64[0] = 0;
    a5[1].n128_u64[1] = 2;
    a5[2].n128_u32[0] = 0;
  }
  return result;
}

uint64_t sub_1B69642D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleColorOverLife)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unint64_t v8 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    uint64_t v9 = *((void *)v8 + 1);
    uint64_t v10 = *((void *)v8 + 2);
    unint64_t v11 = *v8 | ((unint64_t)*((unsigned int *)v8 + 1) << 32);
    uint64_t v12 = 256;
    if (!v8[25]) {
      uint64_t v12 = 0;
    }
    uint64_t v13 = v12 | v8[24];
    int v14 = *((_DWORD *)v8 + 8);
    unint64_t v15 = v13 | ((unint64_t)*((unsigned int *)v8 + 7) << 32);
    *(void *)a5 = v11;
    *(void *)(a5 + 8) = v9;
    *(void *)(a5 + 16) = v10;
    *(void *)(a5 + 24) = v15;
    *(_DWORD *)(a5 + 32) = v14;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(_DWORD *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B696439C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return sub_1B696441C(a1, a2, a3, a4, type metadata accessor for ParticleInitScript, type metadata accessor for ParticleInitScript, a5);
}

uint64_t sub_1B69643DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return sub_1B696441C(a1, a2, a3, a4, type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript, a5);
}

uint64_t sub_1B696441C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t (*a6)(void)@<X6>, uint64_t a7@<X8>)
{
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = a5(0);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v12 + 16);
  if (v15)
  {
    uint64_t v16 = (void *)(v12 + 56);
    while (*(v16 - 3) != v13)
    {
      v16 += 5;
      if (!--v15) {
        goto LABEL_5;
      }
    }
    sub_1B6966CCC(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v16 + (a2 << 16 >> 48) * a3, a7, a6);
    uint64_t v17 = 0;
  }
  else
  {
LABEL_5:
    uint64_t v17 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a7, v17, 1, v14);
}

__n128 sub_1B6964514@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, __n128 *a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleFlockingFlyTowardsArea)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unint64_t v8 = (__n128 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                  + *v7
                  + (a2 << 16 >> 48) * a3);
    unint64_t v9 = v8[1].n128_u64[0];
    unsigned __int8 v10 = v8[1].n128_u8[8];
    __n128 result = *v8;
    *a5 = *v8;
    a5[1].n128_u64[0] = v9;
    a5[1].n128_u8[8] = v10;
  }
  else
  {
LABEL_5:
    a5->n128_u64[0] = 0;
    a5->n128_u64[1] = 0;
    a5[1].n128_u64[0] = 0;
    a5[1].n128_u8[8] = 2;
  }
  return result;
}

uint64_t sub_1B6964598@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleFlockingSolver)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    long long v10 = *(_OWORD *)(v8 + 16);
    long long v9 = *(_OWORD *)(v8 + 32);
    long long v18 = *(_OWORD *)v8;
    long long v19 = v10;
    long long v20 = v9;
    long long v12 = *(_OWORD *)(v8 + 64);
    long long v11 = *(_OWORD *)(v8 + 80);
    long long v13 = *(_OWORD *)(v8 + 48);
    *(_DWORD *)&_OWORD v23[15] = *(_DWORD *)(v8 + 95);
    long long v22 = v12;
    *(_OWORD *)int v23 = v11;
    long long v21 = v13;
    LOWORD(v8) = *(_WORD *)&v23[16];
    char v14 = v23[18];
    long long v15 = v19;
    *(_OWORD *)a5 = v18;
    *(_OWORD *)(a5 + 16) = v15;
    long long v16 = v21;
    *(_OWORD *)(a5 + 32) = v20;
    *(_OWORD *)(a5 + 48) = v16;
    long long v17 = *(_OWORD *)v23;
    *(_OWORD *)(a5 + 64) = v22;
    *(_OWORD *)(a5 + 80) = v17;
    *(unsigned char *)(a5 + 98) = v14;
    *(_WORD *)(a5 + 96) = v8;
    return sub_1B62CA090((uint64_t)&v18);
  }
  else
  {
LABEL_5:
    *(void *)a5 = 1;
    *(_OWORD *)(a5 + 8) = 0u;
    *(_OWORD *)(a5 + 24) = 0u;
    *(_OWORD *)(a5 + 40) = 0u;
    *(_OWORD *)(a5 + 56) = 0u;
    *(_OWORD *)(a5 + 72) = 0u;
    *(_OWORD *)(a5 + 83) = 0u;
  }
  return result;
}

__n128 sub_1B6964698@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleGrowEmitter)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    long long v9 = (__n128 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                  + *v7
                  + (a2 << 16 >> 48) * a3);
    uint64_t v10 = v9->n128_u8[0];
    __n128 result = v9[1];
    unint64_t v11 = v9[2].n128_u64[0];
    uint64_t v12 = v9[2].n128_u32[2];
    unint64_t v13 = v9[3].n128_u64[0];
    LODWORD(v9) = v9[3].n128_u32[2];
    *(void *)a5 = v10;
    *(void *)(a5 + 8) = 0;
    *(__n128 *)(a5 + 16) = result;
    *(void *)(a5 + 32) = v11;
    *(void *)(a5 + 40) = v12;
    *(void *)(a5 + 48) = v13;
    *(_DWORD *)(a5 + 56) = v9;
  }
  else
  {
LABEL_5:
    *(void *)a5 = 3;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a5 + 8) = 0u;
    *(_OWORD *)(a5 + 24) = 0u;
    *(_OWORD *)(a5 + 40) = 0u;
    *(_DWORD *)(a5 + 56) = 0;
  }
  return result;
}

__n128 sub_1B696473C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleColorOverTexture)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    long long v9 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    uint64_t v10 = *((void *)v9 + 1);
    uint64_t v11 = v9[16];
    int v12 = *((_DWORD *)v9 + 10);
    *(void *)a5 = *v9 | ((unint64_t)*((unsigned int *)v9 + 1) << 32);
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v11;
    __n128 result = *(__n128 *)(v9 + 24);
    *(__n128 *)(a5 + 24) = result;
    *(_DWORD *)(a5 + 40) = v12;
  }
  else
  {
LABEL_5:
    *(void *)a5 = 4;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a5 + 8) = 0u;
    *(_OWORD *)(a5 + 24) = 0u;
    *(_DWORD *)(a5 + 40) = 0;
  }
  return result;
}

__n128 sub_1B69647DC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, __n128 *a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSizeOverVelocity)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    long long v9 = (__n128 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                  + *v7
                  + (a2 << 16 >> 48) * a3);
    unint64_t v10 = v9[2].n128_u64[0];
    unsigned __int32 v11 = v9[2].n128_u32[2];
    unint64_t v12 = v9->n128_u8[8] | ((unint64_t)v9->n128_u32[3] << 32);
    a5->n128_u64[0] = v9->n128_u8[0] | ((unint64_t)v9->n128_u32[1] << 32);
    a5->n128_u64[1] = v12;
    __n128 result = v9[1];
    a5[1] = result;
    a5[2].n128_u64[0] = v10;
    a5[2].n128_u32[2] = v11;
  }
  else
  {
LABEL_5:
    result.n128_u64[0] = 0;
    *a5 = (__n128)xmmword_1B6E95930;
    a5[1].n128_u64[1] = 0;
    a5[2].n128_u64[0] = 0;
    a5[1].n128_u64[0] = 0;
    a5[2].n128_u32[2] = 0;
  }
  return result;
}

uint64_t sub_1B6964884@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleColorOverPosition)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (unsigned __int16 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                            + *v7
                            + (a2 << 16 >> 48) * a3);
    uint64_t v9 = *((unsigned int *)v8 + 2);
    uint64_t v10 = *((void *)v8 + 2);
    uint64_t v11 = *((void *)v8 + 3);
    char v12 = *((unsigned char *)v8 + 32);
    *(void *)a5 = *v8 | ((unint64_t)*((unsigned __int8 *)v8 + 4) << 32);
    *(void *)(a5 + 8) = v9;
    *(void *)(a5 + 16) = v10;
    *(void *)(a5 + 24) = v11;
    *(unsigned char *)(a5 + 32) = v12;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(unsigned char *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B6964934@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleColorOverVelocity)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    uint64_t v10 = *((void *)v8 + 1);
    uint64_t v9 = *((void *)v8 + 2);
    uint64_t v11 = *((void *)v8 + 3);
    unsigned __int8 v12 = v8[32];
    *(void *)a5 = *v8 | ((unint64_t)*((unsigned int *)v8 + 1) << 32);
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v9;
    *(void *)(a5 + 24) = v11;
    *(unsigned char *)(a5 + 32) = v12;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(unsigned char *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B69649E4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for SceneFileAsset)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v12 = *(void *)(v8 + 48);
    uint64_t v13 = *(void *)(v8 + 56);
    *(void *)a5 = *(void *)v8;
    *(void *)(a5 + 8) = v9;
    *(void *)(a5 + 16) = v10;
    *(void *)(a5 + 24) = v11;
    long long v14 = *(_OWORD *)(v8 + 32);
    *(_OWORD *)(a5 + 32) = v14;
    *(void *)(a5 + 48) = v12;
    *(void *)(a5 + 56) = v13;
    id v15 = (id)v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B6964AB4(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else if (a1)
  {
    sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
    uint64_t result = sub_1B6E31C98();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B6964B64(uint64_t a1)
{
  return sub_1B6964B7C(a1, (void (*)(void))sub_1B663C11C);
}

uint64_t sub_1B6964B7C(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    uint64_t result = sub_1B6E31C98();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B6964C20(uint64_t a1)
{
  return sub_1B6964B7C(a1, (void (*)(void))sub_1B6966D34);
}

uint64_t sub_1B6964C38(uint64_t a1)
{
  return sub_1B6964B7C(a1, (void (*)(void))sub_1B6966E5C);
}

uint64_t sub_1B6964C50(uint64_t a1)
{
  return sub_1B6964C74(a1);
}

uint64_t sub_1B6964C5C(uint64_t a1)
{
  return sub_1B6964C74(a1);
}

uint64_t sub_1B6964C68(uint64_t a1)
{
  return sub_1B6964C74(a1);
}

uint64_t sub_1B6964C74(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1B6E31C98();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B6964D08(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else if (a1)
  {
    sub_1B62EF30C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    uint64_t result = sub_1B6E31C98();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B6964DCC(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0x2000000;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadPolicy; i += 5)
  {
    if (!--v6) {
      return 0x2000000;
    }
  }
  uint64_t v9 = (unsigned __int16 *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  int v10 = *((unsigned __int8 *)v9 + 3);
  int v11 = *v9 | (*((unsigned __int8 *)v9 + 2) << 16);
  if (v10) {
    int v12 = 0x1000000;
  }
  else {
    int v12 = 0;
  }
  return v11 | v12;
}

unint64_t sub_1B6964E48(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSpawnDelay)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

unint64_t sub_1B6964EC0(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSpawnDuration)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B6964F38(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0x200000000;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Seed; i += 5)
  {
    if (!--v6) {
      return 0x200000000;
    }
  }
  unsigned __int8 v9 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  uint64_t v10 = *v9;
  BOOL v11 = *((unsigned char *)v9 + 4) == 0;
  uint64_t v12 = 0x100000000;
  if (v11) {
    uint64_t v12 = 0;
  }
  return v12 | v10;
}

uint64_t sub_1B6964FAC(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Parent; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6965010(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for Children; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6965084(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0x200000000;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for OrthographicCamera; i += 5)
  {
    if (!--v6) {
      return 0x200000000;
    }
  }
  unsigned __int8 v9 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  uint64_t v10 = *v9;
  int v11 = *((unsigned __int8 *)v9 + 4);
  uint64_t v12 = 0x100000000;
  if (!v11) {
    uint64_t v12 = 0;
  }
  return v12 | v10;
}

uint64_t sub_1B6965108@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(result + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  long long v9 = 0uLL;
  if (v8)
  {
    uint64_t v10 = (void *)(v7 + 56);
    while ((ValueMetadata *)*(v10 - 3) != &type metadata for TextureFileAsset)
    {
      v10 += 5;
      if (!--v8) {
        goto LABEL_5;
      }
    }
    id v15 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v10 + a3 * a4);
    uint64_t v11 = *v15;
    uint64_t v12 = v15[1];
    uint64_t v13 = v15[2];
    uint64_t v14 = v15[3];
    long long v17 = *((_OWORD *)v15 + 2);
    id v16 = (id)v17;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    long long v9 = v17;
  }
  else
  {
LABEL_5:
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  *(void *)a6 = v11;
  *(void *)(a6 + 8) = v12;
  *(void *)(a6 + 16) = v13;
  *(void *)(a6 + 24) = v14;
  *(_OWORD *)(a6 + 32) = v9;
  return result;
}

uint64_t sub_1B69651E8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointCacheRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1B6965298@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = *(void *)(result + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    long long v9 = (void *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for Skeleton)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_5;
      }
    }
    id v15 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v9 + a3 * a4);
    uint64_t v10 = *v15;
    uint64_t v11 = v15[1];
    uint64_t v12 = v15[2];
    uint64_t v13 = v15[3];
    uint64_t v14 = v15[4];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  *a6 = v10;
  a6[1] = v11;
  a6[2] = v12;
  a6[3] = v13;
  a6[4] = v14;
  return result;
}

uint64_t sub_1B6965370(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for ScriptsHolder; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B69653E4@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for WorldAABB)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    char v13 = 0;
    uint64_t v14 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v14;
    uint64_t v10 = v14[1];
    uint64_t v11 = v14[2];
    uint64_t v12 = v14[3];
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 1;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v10;
  *(void *)(a6 + 16) = v11;
  *(void *)(a6 + 24) = v12;
  *(unsigned char *)(a6 + 32) = v13;
  return result;
}

uint64_t sub_1B6965468(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for MetalScriptReflection; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_1B69654DC(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleContinuousSpawn)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B6965554(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0x200000000;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnOverDistance; i += 5)
  {
    if (!--v6) {
      return 0x200000000;
    }
  }
  unsigned __int8 v9 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  uint64_t v10 = *v9;
  int v11 = *((unsigned __int8 *)v9 + 4);
  int v12 = *((unsigned __int8 *)v9 + 5);
  BOOL v13 = v11 == 0;
  uint64_t v14 = 0x100000000;
  if (v13) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v14 | v10;
  BOOL v13 = v12 == 0;
  uint64_t v16 = 0x10000000000;
  if (v13) {
    uint64_t v16 = 0;
  }
  return v15 | v16;
}

uint64_t sub_1B69655DC(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleVariableSpawn; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6965654(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleOrientationInit; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B69656CC(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MeshModel; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_retain();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1B6965760@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleNoise)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    uint64_t v14 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v14;
    uint64_t v7 = *((void *)v14 + 2);
    uint64_t v10 = *((void *)v14 + 3);
    uint64_t v15 = v14[8];
    uint64_t v16 = *((unsigned __int8 *)v14 + 36);
    uint64_t v12 = *((void *)v14 + 5);
    char v13 = *((unsigned char *)v14 + 48);
    uint64_t v11 = v15 | (v16 << 32);
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 2;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = v7;
  *(void *)(a6 + 24) = v10;
  *(void *)(a6 + 32) = v11;
  *(void *)(a6 + 40) = v12;
  *(unsigned char *)(a6 + 48) = v13;
  return result;
}

uint64_t sub_1B69657F8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleForce; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6965864(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleCollide; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B69658DC(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePivotInit; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6965954(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointCacheSpawner; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4;
  return *(void *)v9;
}

uint64_t sub_1B69659F8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleVelocityInit; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6965A80(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngularVelocityInit; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6965AF8@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(result + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (void *)(v7 + 56);
    uint64_t v10 = 1;
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for ParticleTextureFrameEvolution)
    {
      v9 += 5;
      if (!--v8)
      {
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        char v14 = 0;
        goto LABEL_8;
      }
    }
    uint64_t v15 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v9 + a3 * a4);
    uint64_t v11 = *v15;
    uint64_t v10 = *((void *)v15 + 1);
    uint64_t v12 = *((void *)v15 + 2);
    uint64_t v13 = *((void *)v15 + 3);
    char v14 = *((unsigned char *)v15 + 32);
    uint64_t result = sub_1B6761BE8(v10);
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    char v14 = 0;
    uint64_t v10 = 1;
  }
LABEL_8:
  *(void *)a6 = v11;
  *(void *)(a6 + 8) = v10;
  *(void *)(a6 + 16) = v12;
  *(void *)(a6 + 24) = v13;
  *(unsigned char *)(a6 + 32) = v14;
  return result;
}

uint64_t sub_1B6965BE8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v12 = *(void *)(a1 + 48);
  sub_1B62D229C(0, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v14 = *(void *)(v12 + 16);
  if (!v14) {
    return 0;
  }
  for (uint64_t i = (void *)(v12 + 56); *(i - 3) != v13; i += 5)
  {
    if (!--v14) {
      return 0;
    }
  }
  uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v16;
}

uint64_t sub_1B6965CC4(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for VFXTag; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1B6965D50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B6962410();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B6965D7C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1B69625F0(v1, v2);
}

uint64_t method lookup function for VFXEntityObject(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXEntityObject);
}

uint64_t dispatch thunk of VFXEntityObject.objectID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of VFXEntityObject._entityInstance.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of VFXEntityObject.removeFromEntityManager()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of VFXEntityObject.tag.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of VFXEntityObject.tag.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VFXEntityObject.tag.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of VFXEntityObject.copy(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

void sub_1B6965F70(void *a1)
{
}

double sub_1B6965F78(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0x20000;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 193) = 0u;
  return result;
}

unint64_t sub_1B6965FB8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for Opacity)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B6966030@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    unint64_t v9 = 2;
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleFlockingAlignOrientation)
    {
      v8 += 5;
      if (!--v7)
      {
        unint64_t v10 = 0;
        unint64_t v11 = 0;
        unint64_t v12 = 0;
        goto LABEL_8;
      }
    }
    uint64_t v13 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    unint64_t v7 = v13[8];
    unint64_t v11 = *((void *)v13 + 2);
    unint64_t v12 = *((void *)v13 + 3);
    unint64_t v10 = *v13 | ((unint64_t)*((unsigned int *)v13 + 1) << 32);
    unint64_t v9 = v13[32] | ((unint64_t)*((unsigned int *)v13 + 9) << 32);
  }
  else
  {
    unint64_t v10 = 0;
    unint64_t v11 = 0;
    unint64_t v12 = 0;
    unint64_t v9 = 2;
  }
LABEL_8:
  *a6 = v10;
  a6[1] = v7;
  a6[2] = v11;
  a6[3] = v12;
  a6[4] = v9;
  return result;
}

uint64_t sub_1B69660D8@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleFlockingAlignVelocityOnPlane)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    char v12 = 0;
    uint64_t v13 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v13;
    uint64_t v10 = *((void *)v13 + 2);
    uint64_t v11 = *((void *)v13 + 3);
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    char v12 = 1;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = v10;
  *(void *)(a6 + 24) = v11;
  *(unsigned char *)(a6 + 32) = v12;
  return result;
}

uint64_t sub_1B6966158@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleFlockingConstrainToArea)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    uint64_t v14 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v14;
    uint64_t v7 = *((void *)v14 + 2);
    uint64_t v10 = *((void *)v14 + 3);
    uint64_t v11 = *((void *)v14 + 4);
    uint64_t v12 = *((void *)v14 + 5);
    char v13 = *((unsigned char *)v14 + 48);
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 2;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = v7;
  *(void *)(a6 + 24) = v10;
  *(void *)(a6 + 32) = v11;
  *(void *)(a6 + 40) = v12;
  *(unsigned char *)(a6 + 48) = v13;
  return result;
}

uint64_t sub_1B69661E4@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleFlockingConstrainToPlane)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    uint64_t v14 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v14;
    uint64_t v7 = *((void *)v14 + 2);
    uint64_t v10 = *((void *)v14 + 3);
    uint64_t v11 = *((void *)v14 + 4);
    uint64_t v12 = *((void *)v14 + 5);
    char v13 = *((unsigned char *)v14 + 48);
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 2;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = v7;
  *(void *)(a6 + 24) = v10;
  *(void *)(a6 + 32) = v11;
  *(void *)(a6 + 40) = v12;
  *(unsigned char *)(a6 + 48) = v13;
  return result;
}

uint64_t sub_1B6966270(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingSpeedControl; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

unint64_t sub_1B69662E4(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for IBLGenerator)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B696635C(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Bindings; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1B6966408(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 1;
  }
  uint64_t v7 = (void *)(v5 + 56);
  uint64_t v8 = 1;
  while ((ValueMetadata *)*(v7 - 3) != &type metadata for TextureCGImage)
  {
    v7 += 5;
    if (!--v6) {
      return v8;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  id v9 = (id)v8;
  return v8;
}

uint64_t sub_1B6966494@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleLocalBoxCollider)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    uint64_t v14 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v7 = *v14;
    uint64_t v9 = v14[1];
    uint64_t v10 = v14[2];
    uint64_t v11 = v14[3];
    uint64_t v12 = v14[4];
    char v13 = *((unsigned char *)v14 + 40);
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 2;
  }
  *(void *)a6 = v7;
  *(void *)(a6 + 8) = v9;
  *(void *)(a6 + 16) = v10;
  *(void *)(a6 + 24) = v11;
  *(void *)(a6 + 32) = v12;
  *(unsigned char *)(a6 + 40) = v13;
  return result;
}

uint64_t sub_1B6966520(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for REMeshAssetPointCache; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1B69665C8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Vortex; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6966638(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleCopyData; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

unint64_t sub_1B69666C8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for DistanceConstraint)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B6966740@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(result + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    unsigned __int8 v9 = (void *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for ParticleOpacityOverVelocity)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_5;
      }
    }
    uint64_t v15 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v9 + a3 * a4);
    uint64_t v10 = *v15;
    uint64_t v11 = v15[1];
    uint64_t v12 = v15[2];
    int v14 = *((_DWORD *)v15 + 8);
    unint64_t v13 = *((unsigned __int8 *)v15 + 24) | ((unint64_t)*((unsigned int *)v15 + 7) << 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    double result = swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    int v14 = 0;
  }
  *(void *)a6 = v10;
  *(void *)(a6 + 8) = v11;
  *(void *)(a6 + 16) = v12;
  *(void *)(a6 + 24) = v13;
  *(_DWORD *)(a6 + 32) = v14;
  return result;
}

uint64_t sub_1B6966810@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(result + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    unsigned __int8 v9 = (void *)(v7 + 56);
    uint64_t v10 = 1;
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for ParticleAngleEvolution)
    {
      v9 += 5;
      if (!--v8)
      {
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        char v14 = 0;
        goto LABEL_8;
      }
    }
    uint64_t v15 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v9 + a3 * a4);
    uint64_t v11 = *v15;
    uint64_t v10 = *((void *)v15 + 1);
    uint64_t v12 = *((void *)v15 + 2);
    uint64_t v13 = *((void *)v15 + 3);
    char v14 = *((unsigned char *)v15 + 32);
    double result = sub_1B6761BE8(v10);
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    char v14 = 0;
    uint64_t v10 = 1;
  }
LABEL_8:
  *(void *)a6 = v11;
  *(void *)(a6 + 8) = v10;
  *(void *)(a6 + 16) = v12;
  *(void *)(a6 + 24) = v13;
  *(unsigned char *)(a6 + 32) = v14;
  return result;
}

uint64_t sub_1B6966900@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(result + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    unsigned __int8 v9 = (void *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for ParticleOpacityEvolution)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_5;
      }
    }
    uint64_t v16 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v9 + a3 * a4);
    uint64_t v10 = *v16;
    uint64_t v11 = *((unsigned __int8 *)v16 + 8);
    uint64_t v12 = v16[2];
    uint64_t v13 = v16[3];
    uint64_t v14 = v16[4];
    char v15 = *((unsigned char *)v16 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    double result = swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    char v15 = 0;
  }
  *(void *)a6 = v10;
  *(void *)(a6 + 8) = v11;
  *(void *)(a6 + 16) = v12;
  *(void *)(a6 + 24) = v13;
  *(void *)(a6 + 32) = v14;
  *(unsigned char *)(a6 + 40) = v15;
  return result;
}

uint64_t sub_1B69669E0(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleTargetFromPositionInit; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6966A58(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ModelRenderer; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6966AC8@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(result + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  long long v9 = 0uLL;
  if (v8)
  {
    uint64_t v10 = (void *)(v7 + 56);
    uint64_t v11 = 1;
    while ((ValueMetadata *)*(v10 - 3) != &type metadata for SDFRuntimeData)
    {
      v10 += 5;
      if (!--v8)
      {
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        goto LABEL_8;
      }
    }
    uint64_t v14 = (long long *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v10 + a3 * a4);
    long long v15 = *v14;
    uint64_t v12 = *((void *)v14 + 2);
    uint64_t v11 = *((void *)v14 + 3);
    uint64_t v13 = *((void *)v14 + 4);
    swift_unknownObjectRetain();
    double result = swift_unknownObjectRetain();
    long long v9 = v15;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v11 = 1;
  }
LABEL_8:
  *(_OWORD *)a6 = v9;
  *(void *)(a6 + 16) = v12;
  *(void *)(a6 + 24) = v11;
  *(void *)(a6 + 32) = v13;
  return result;
}

uint64_t sub_1B6966B9C(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureRequireMipmap; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

void sub_1B6966C18()
{
  if (!qword_1E9DD3A20)
  {
    sub_1B6966C78();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD3A20);
    }
  }
}

unint64_t sub_1B6966C78()
{
  unint64_t result = qword_1E9DD2C10;
  if (!qword_1E9DD2C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2C10);
  }
  return result;
}

uint64_t sub_1B6966CCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1B6966D34()
{
  if (!qword_1E9DD2C18)
  {
    sub_1B6966D9C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD2C18);
    }
  }
}

void sub_1B6966D9C()
{
  if (!qword_1EB9800C0)
  {
    sub_1B6E31118();
    sub_1B6966E04();
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9800C0);
    }
  }
}

unint64_t sub_1B6966E04()
{
  unint64_t result = qword_1EB97D9A0;
  if (!qword_1EB97D9A0)
  {
    sub_1B6E31118();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D9A0);
  }
  return result;
}

void sub_1B6966E5C()
{
  if (!qword_1E9DD2118)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD2118);
    }
  }
}

uint64_t sub_1B6966EC0(void *a1)
{
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(a1, sel_label);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1B6E31798();
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return 34;
}

uint64_t sub_1B696701C()
{
  return sub_1B6966EC0(*v0);
}

uint64_t sub_1B6967028()
{
  uint64_t v1 = sub_1B6E339D8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6967A5C(0, (unint64_t *)&qword_1E9DD2C20, MEMORY[0x1E4FBC420], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  long long v9 = (char *)v12 - v8;
  v12[1] = *(void *)v0;
  long long v13 = *(_OWORD *)(v0 + 8);
  v12[0] = MEMORY[0x1E4FBC860];
  uint64_t v10 = sub_1B6E339B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E4FBC430], v1);
  sub_1B6967A5C(0, &qword_1E9DD2C28, (uint64_t (*)(uint64_t))sub_1B6967AC0, MEMORY[0x1E4FBB320]);
  sub_1B6967B88();
  swift_unknownObjectRetain();
  return sub_1B6E339F8();
}

BOOL sub_1B6967244(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1B6967274()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PrivateHeap()
{
  return self;
}

uint64_t sub_1B69672D8()
{
  uint64_t v1 = *(void *)(v0 + 144);
  if (v1) {
    MEMORY[0x1BA9B84C0](v1, -1, -1);
  }
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 56), -1, -1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B696733C()
{
  sub_1B69672D8();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6967370(void *a1)
{
  uint64_t v2 = (char *)a1[15];
  uint64_t v3 = *((void *)v2 + 2);
  if (v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a1[15] = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v2 = sub_1B6C166A8((uint64_t)v2);
    }
    bzero(v2 + 32, 8 * v3);
    a1[15] = v2;
  }
  uint64_t v5 = a1[19];
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = a1[18] + v6;
      *(void *)(v7 + 8) = 0;
      *(void *)(v7 + 16) = 0;
      *(void *)uint64_t v7 = 0;
      *(_OWORD *)(v7 + 32) = 0u;
      *(_OWORD *)(v7 + 48) = 0u;
      *(_OWORD *)(v7 + 64) = 0u;
      *(_OWORD *)(v7 + 80) = 0u;
      swift_unknownObjectRelease();
      v6 += 96;
      --v5;
    }
    while (v5);
  }
  uint64_t v8 = swift_retain();
  sub_1B69677C4(v8, (uint64_t)a1);
  swift_release();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  a1[9] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  a1[8] = v9;
  return swift_bridgeObjectRelease();
}

void *sub_1B6967450(uint64_t a1, const void *a2, uint64_t a3)
{
  if (a2) {
    size_t v4 = a3 - (void)a2;
  }
  else {
    size_t v4 = 0;
  }
  uint64_t v5 = (void *)sub_1B62F1868(a1, v4);
  uint64_t v7 = v6;
  id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode);
  uint64_t v9 = 0;
  if (v8 != (id)2)
  {
    uint64_t v10 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v11 = v5;
    uint64_t v9 = &v10[v7];
  }
  memcpy(v9, a2, v4);
  return v5;
}

uint64_t initializeWithCopy for BufferPool.PaddedConstantBuffer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BufferPool.PaddedConstantBuffer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for BufferPool.PaddedConstantBuffer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for BufferPool.PaddedConstantBuffer(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 96)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BufferPool.PaddedConstantBuffer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BufferPool.PaddedConstantBuffer()
{
  return &type metadata for BufferPool.PaddedConstantBuffer;
}

uint64_t initializeBufferWithCopyOfBuffer for BufferSlice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for BufferSlice(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for BufferSlice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for BufferSlice()
{
  return &type metadata for BufferSlice;
}

uint64_t sub_1B69677C4(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + 24) == 1)
  {
    uint64_t v3 = result;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v3 + 96);
    uint64_t v7 = *(void *)(v3 + 88);
    uint64_t v8 = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6E316E8();
    sub_1B638491C();
    sub_1B6E31A38();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E328C8();
    sub_1B6E31948();
    if (*(void *)(a2 + 72) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
    int v6 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v7 = 0;
    swift_retain();
    sub_1B6B33E34(v6, &v7, v5, v8);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1B6967A5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B6967AC0()
{
  if (!qword_1E9DD2C30)
  {
    sub_1B6967B30();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD2C30);
    }
  }
}

void sub_1B6967B30()
{
  if (!qword_1EB980110)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980110);
    }
  }
}

unint64_t sub_1B6967B88()
{
  unint64_t result = qword_1E9DD2C40;
  if (!qword_1E9DD2C40)
  {
    sub_1B6967A5C(255, &qword_1E9DD2C28, (uint64_t (*)(uint64_t))sub_1B6967AC0, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2C40);
  }
  return result;
}

uint64_t sub_1B6967C10()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6967C48()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B6967C8C@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t v3 = 0xD000000000000015;
  v6[0] = 0xD000000000000015;
  v6[1] = 0x80000001B6F3EF10;
  _OWORD v6[2] = 0;
  v6[3] = 0;
  if ((a1 & 0x4000) != 0) {
    unint64_t v3 = 0xD00000000000001ELL;
  }
  void v6[4] = MEMORY[0x1E4FBC860];
  v6[5] = v3;
  unint64_t v4 = 0x80000001B6F3EF50;
  if ((a1 & 0x4000) == 0) {
    unint64_t v4 = 0x80000001B6F3EF30;
  }
  v6[6] = v4;
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = MEMORY[0x1E4FBC860];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  nullsub_1(v6);
  return sub_1B62CA210((uint64_t)v6, a2, &qword_1EB97EB68);
}

id sub_1B6967D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)a3;
  int v5 = *(_DWORD *)(a3 + 36);
  uint64_t v6 = *(int *)(a3 + 32);
  swift_retain();
  BOOL v7 = v6 == -1 && v5 == 0;
  if (v7
    || (v6 & 0x80000000) != 0
    || *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v6
    || (uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v5 != -1)
    && *(_DWORD *)(v8 + 12 * (int)v6 + 8) != v5
    || (sub_1B69653E4(*(void *)(*(void *)(v4 + 136) + 8 * *(int *)(v8 + 12 * (int)v6) + 32), *(_DWORD *)(v8 + 12 * (int)v6), *(_WORD *)(v8 + 12 * (int)v6 + 4), 32, v4, (uint64_t)v22), sub_1B62CA210((uint64_t)v22, (uint64_t)v23, &qword_1EB980080), (v24 & 1) != 0))
  {
    swift_release();
    return 0;
  }
  else
  {
    long long v19 = v23[1];
    long long v20 = v23[0];
    uint64_t v11 = *v3;
    uint64_t v12 = v3[1];
    uint64_t v13 = v3[2];
    swift_retain();
    id v9 = (id)sub_1B62F1868(0, 64);
    uint64_t v15 = v14;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      int v16 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v21[0] = 0;
      swift_retain();
      sub_1B6B33E34(v16, v21, 0xD000000000000049, 0x80000001B6F3EEC0);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      long long v17 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v9 = v9;
      long long v18 = &v17[v15];
      *(_OWORD *)long long v18 = v20;
      *((_OWORD *)v18 + 1) = v19;
      *((void *)v18 + 4) = v11;
      *((void *)v18 + 5) = v12;
      *((void *)v18 + 6) = v13;
      swift_release();
    }
    swift_release();
  }
  return v9;
}

unint64_t sub_1B6968034(char a1)
{
  unint64_t result = 0x656E68746F6F6D73;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6968104(void *a1)
{
  sub_1B6968B00(0, &qword_1E9DD2C60, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v10[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6968AAC();
  sub_1B6E33A88();
  v10[15] = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    v10[14] = 1;
    sub_1B6E32F78();
    v10[13] = 2;
    sub_1B6E32F78();
    v10[12] = 3;
    sub_1B6E32F78();
    v10[11] = 4;
    sub_1B6E32F78();
    v10[10] = 5;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B6968318(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB73E0(*a1, *a2);
}

unint64_t sub_1B6968324()
{
  return sub_1B6968034(*v0);
}

uint64_t sub_1B696832C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B69684D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6968354(uint64_t a1)
{
  unint64_t v2 = sub_1B6968AAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6968390(uint64_t a1)
{
  unint64_t v2 = sub_1B6968AAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B69683CC()
{
  return 0x100000000;
}

uint64_t sub_1B69683E8()
{
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v0 = sub_1B62FFCAC(7);
  *(void *)(v0 + 88) = sub_1B6967C8C;
  *(void *)(v0 + 96) = 0;
  swift_release();
  return v0;
}

double sub_1B6968450@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6968834(a1, &v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B6968494(void *a1)
{
  return sub_1B6968104(a1);
}

double sub_1B69684AC@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E96020;
  double result = 524288.0;
  *(void *)(a1 + 16) = 0x4120000000000000;
  return result;
}

ValueMetadata *type metadata accessor for ParticleSurfaceRenderer()
{
  return &type metadata for ParticleSurfaceRenderer;
}

uint64_t sub_1B69684D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E68746F6F6D73 && a2 == 0xEA00000000007373;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001B6F32C90 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B6F34070 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B6F34090 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001B6F340B0 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B6F340D0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1B6968738(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 4;
  *(void *)(a2 + 32) = 14;
  *(_OWORD *)(a2 + 16) = xmmword_1B6E50D30;
  uint64_t v2 = *(void *)(*(void *)a2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 240);
    swift_retain();
    swift_retain();
    sub_1B6BCB1C0(1u, 3, v3, v2, 1u, 3, (uint64_t)v6);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  uint64_t v4 = swift_unknownObjectRetain();
  sub_1B696BA40(v4, 0, 0, 0, 11, 0);
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1B6968834@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_1B6968B00(0, &qword_1E9DD2C50, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  long long v10 = (char *)&v24 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6968AAC();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v30 = 0;
  sub_1B6E32DC8();
  int v12 = v11;
  char v29 = 1;
  sub_1B6E32DC8();
  int v14 = v13;
  char v28 = 2;
  sub_1B6E32DC8();
  int v16 = v15;
  char v27 = 3;
  sub_1B6E32DC8();
  int v18 = v17;
  char v26 = 4;
  sub_1B6E32DC8();
  int v20 = v19;
  char v25 = 5;
  sub_1B6E32DC8();
  int v22 = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v12;
  a2[1] = v14;
  a2[2] = v16;
  a2[3] = v18;
  a2[4] = v20;
  a2[5] = v22;
  return result;
}

unint64_t sub_1B6968AAC()
{
  unint64_t result = qword_1E9DD2C58;
  if (!qword_1E9DD2C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2C58);
  }
  return result;
}

void sub_1B6968B00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6968AAC();
    unint64_t v7 = a3(a1, &type metadata for ParticleSurfaceRenderer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleSurfaceRenderer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6968C30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSurfaceRenderer.CodingKeys()
{
  return &type metadata for ParticleSurfaceRenderer.CodingKeys;
}

unint64_t sub_1B6968C6C()
{
  unint64_t result = qword_1E9DD2C68;
  if (!qword_1E9DD2C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2C68);
  }
  return result;
}

unint64_t sub_1B6968CC4()
{
  unint64_t result = qword_1E9DD2C70;
  if (!qword_1E9DD2C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2C70);
  }
  return result;
}

unint64_t sub_1B6968D1C()
{
  unint64_t result = qword_1E9DD2C78;
  if (!qword_1E9DD2C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2C78);
  }
  return result;
}

uint64_t sub_1B6968D70()
{
  return swift_initClassMetadata2();
}

BOOL sub_1B6968DB8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))() == 0xFFFFFFFFLL;
}

uint64_t sub_1B6968DEC(uint64_t a1)
{
  double v2 = MEMORY[0x1F4188790](a1, v1);
  (*(void (**)(unsigned char *, double))(v4 + 16))(&v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  return swift_dynamicCast();
}

BOOL sub_1B6968EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x1F4188790](v7, v10);
  int v13 = &v24[-v12];
  uint64_t v15 = MEMORY[0x1F4188790](v11, v14);
  int v17 = &v24[-v16];
  MEMORY[0x1F4188790](v15, v18);
  int v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v19(&v24[-v20], v3, a1);
  int v21 = swift_dynamicCast();
  v19(v17, v3, a1);
  if (v21)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v17, a1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v13, v17, a1);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v19(v9, v3, a1);
      BOOL v22 = 0;
      goto LABEL_6;
    }
  }
  v19(v9, v3, a1);
  BOOL v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2) == 0xFFFFFFFFLL;
LABEL_6:
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, a1);
  return v22;
}

uint64_t sub_1B6969108()
{
  return 4;
}

void *sub_1B6969110(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  return sub_1B6969208(a1, a2, a3, a4, a5, (uint64_t (*)(void))type metadata accessor for particle_primitive_material_constants, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DAA8);
}

void *sub_1B696918C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  return sub_1B6969208(a1, a2, a3, a4, a5, (uint64_t (*)(void))type metadata accessor for particle_box_material_constants, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D4D8);
}

void *sub_1B6969208(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  long long v8 = a1[3];
  _OWORD v47[2] = a1[2];
  v47[3] = v8;
  v47[4] = a1[4];
  long long v9 = a1[1];
  v47[0] = *a1;
  v47[1] = v9;
  uint64_t v10 = *(void **)(a2 + 16);
  if (!v10) {
    return 0;
  }
  uint64_t v15 = v10[22];
  if (v15 <= 0)
  {
    uint64_t v15 = v10[25];
    if (v15 < 1) {
      return 0;
    }
  }
  swift_retain();
  swift_retain();
  uint64_t v16 = (void *)sub_1B62F1868(0, v15);
  uint64_t v18 = v17;
  uint64_t v41 = v19;
  swift_unknownObjectRetain();
  swift_release();
  if (v10[21])
  {
    uint64_t v20 = (void *)v10[21];
  }
  else
  {
    uint64_t v20 = (void *)v10[24];
    if (!v20)
    {
      long long v30 = a1[3];
      long long v44 = a1[2];
      long long v45 = v30;
      long long v46 = a1[4];
      long long v31 = a1[1];
      long long v42 = *a1;
      long long v43 = v31;
      objc_msgSend(v16, sel_storageMode);
      uint64_t v32 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v33 = v16;
      uint64_t v34 = &v32[v18];
      long long v35 = v45;
      *((_OWORD *)v34 + 2) = v44;
      *((_OWORD *)v34 + 3) = v35;
      *((_OWORD *)v34 + 4) = v46;
      long long v36 = v43;
      *(_OWORD *)uint64_t v34 = v42;
      *((_OWORD *)v34 + 1) = v36;
      swift_release();
      return v16;
    }
    swift_unknownObjectRetain();
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  if (objc_msgSend(v20, sel_encodedLength) != (id)v15)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v22 = sub_1B6E32148();
    *(void *)&long long v42 = 1;
    sub_1B6B33B70(v22, 0xD00000000000002ELL, 0x80000001B6F3F1B0, (uint64_t *)&v42);
    swift_release();
  }
  sub_1B62EC494((uint64_t)v16, v18, v41, 0);
  uint64_t v23 = a6(0);
  sub_1B62EC4C0((uint64_t)v47, 0, ObjectType, v23);
  uint64_t v24 = *a4;
  uint64_t v25 = *(unsigned __int8 *)(a5 + 28);
  swift_retain();
  uint64_t v26 = sub_1B696AA18(a3, v24, v25, a7, a8);
  uint64_t v28 = v27;
  swift_release();
  sub_1B62EC578(v28, 200);
  sub_1B62EC1A8(v26, 201, (unint64_t *)(a2 + 136));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v16;
}

void *sub_1B6969514(_OWORD *a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  long long v2 = a1[3];
  void v33[2] = a1[2];
  v33[3] = v2;
  v33[4] = a1[4];
  long long v3 = a1[1];
  v33[0] = *a1;
  v33[1] = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v7 = v4[22];
  if (v7 <= 0)
  {
    uint64_t v7 = v4[25];
    if (v7 < 1) {
      return 0;
    }
  }
  swift_retain();
  swift_retain();
  long long v8 = (void *)sub_1B62F1868(0, v7);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  swift_unknownObjectRetain();
  swift_release();
  if (v4[21])
  {
    int v13 = (void *)v4[21];
  }
  else
  {
    int v13 = (void *)v4[24];
    if (!v13)
    {
      long long v21 = a1[3];
      long long v30 = a1[2];
      long long v31 = v21;
      long long v32 = a1[4];
      long long v22 = a1[1];
      long long v28 = *a1;
      long long v29 = v22;
      objc_msgSend(v8, sel_storageMode);
      uint64_t v23 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v24 = v8;
      uint64_t v25 = &v23[v10];
      long long v26 = v31;
      *((_OWORD *)v25 + 2) = v30;
      *((_OWORD *)v25 + 3) = v26;
      *((_OWORD *)v25 + 4) = v32;
      long long v27 = v29;
      *(_OWORD *)uint64_t v25 = v28;
      *((_OWORD *)v25 + 1) = v27;
      swift_release();
      return v8;
    }
    swift_unknownObjectRetain();
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  if (objc_msgSend(v13, sel_encodedLength) != (id)v7)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v15 = sub_1B6E32148();
    *(void *)&long long v28 = 1;
    sub_1B6B33B70(v15, 0xD00000000000002ELL, 0x80000001B6F3F1B0, (uint64_t *)&v28);
    swift_release();
  }
  sub_1B62EC494((uint64_t)v8, v10, v12, 0);
  type metadata accessor for particle_line_material_constants(0);
  sub_1B62EC4C0((uint64_t)v33, 0, ObjectType, v16);
  swift_retain();
  uint64_t v17 = sub_1B696AB90();
  uint64_t v19 = v18;
  swift_release();
  sub_1B62EC578(v19, 200);
  sub_1B62EC1A8(v17, 201, (unint64_t *)(a2 + 136));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v8;
}

void *sub_1B6969820(_OWORD *a1, uint64_t a2)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  long long v2 = a1[3];
  _OWORD v37[2] = a1[2];
  v37[3] = v2;
  long long v3 = a1[5];
  v37[4] = a1[4];
  v37[5] = v3;
  long long v4 = a1[1];
  v37[0] = *a1;
  v37[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  if (!v5) {
    return 0;
  }
  uint64_t v8 = v5[22];
  if (v8 <= 0)
  {
    uint64_t v8 = v5[25];
    if (v8 < 1) {
      return 0;
    }
  }
  swift_retain();
  swift_retain();
  uint64_t v9 = (void *)sub_1B62F1868(0, v8);
  uint64_t v11 = v10;
  uint64_t v30 = v12;
  swift_unknownObjectRetain();
  swift_release();
  if (v5[21])
  {
    int v13 = (void *)v5[21];
  }
  else
  {
    int v13 = (void *)v5[24];
    if (!v13)
    {
      long long v21 = a1[3];
      long long v33 = a1[2];
      long long v34 = v21;
      long long v22 = a1[5];
      long long v35 = a1[4];
      long long v36 = v22;
      long long v23 = a1[1];
      long long v31 = *a1;
      long long v32 = v23;
      objc_msgSend(v9, sel_storageMode);
      id v24 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v25 = v9;
      long long v26 = &v24[v11];
      long long v27 = v34;
      *((_OWORD *)v26 + 2) = v33;
      *((_OWORD *)v26 + 3) = v27;
      long long v28 = v36;
      *((_OWORD *)v26 + 4) = v35;
      *((_OWORD *)v26 + 5) = v28;
      long long v29 = v32;
      *(_OWORD *)long long v26 = v31;
      *((_OWORD *)v26 + 1) = v29;
      swift_release();
      return v9;
    }
    swift_unknownObjectRetain();
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  if (objc_msgSend(v13, sel_encodedLength) != (id)v8)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v15 = sub_1B6E32148();
    *(void *)&long long v31 = 1;
    sub_1B6B33B70(v15, 0xD00000000000002ELL, 0x80000001B6F3F1B0, (uint64_t *)&v31);
    swift_release();
  }
  sub_1B62EC494((uint64_t)v9, v11, v30, 0);
  type metadata accessor for particle_point_material_constants(0);
  sub_1B62EC4C0((uint64_t)v37, 0, ObjectType, v16);
  swift_retain();
  uint64_t v17 = sub_1B696AE38();
  uint64_t v19 = v18;
  swift_release();
  sub_1B62EC578(v19, 200);
  sub_1B62EC1A8(v17, 201, (unint64_t *)(a2 + 136));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v9;
}

void *sub_1B6969B1C(_OWORD *a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  long long v2 = a1[3];
  void v33[2] = a1[2];
  v33[3] = v2;
  v33[4] = a1[4];
  long long v3 = a1[1];
  v33[0] = *a1;
  v33[1] = v3;
  long long v4 = *(void **)(a2 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v7 = v4[22];
  if (v7 <= 0)
  {
    uint64_t v7 = v4[25];
    if (v7 < 1) {
      return 0;
    }
  }
  swift_retain();
  swift_retain();
  uint64_t v8 = (void *)sub_1B62F1868(0, v7);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  swift_unknownObjectRetain();
  swift_release();
  if (v4[21])
  {
    int v13 = (void *)v4[21];
  }
  else
  {
    int v13 = (void *)v4[24];
    if (!v13)
    {
      long long v21 = a1[3];
      long long v30 = a1[2];
      long long v31 = v21;
      long long v32 = a1[4];
      long long v22 = a1[1];
      long long v28 = *a1;
      long long v29 = v22;
      objc_msgSend(v8, sel_storageMode);
      long long v23 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v24 = v8;
      id v25 = &v23[v10];
      long long v26 = v31;
      *((_OWORD *)v25 + 2) = v30;
      *((_OWORD *)v25 + 3) = v26;
      *((_OWORD *)v25 + 4) = v32;
      long long v27 = v29;
      *(_OWORD *)id v25 = v28;
      *((_OWORD *)v25 + 1) = v27;
      swift_release();
      return v8;
    }
    swift_unknownObjectRetain();
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  if (objc_msgSend(v13, sel_encodedLength) != (id)v7)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v15 = sub_1B6E32148();
    *(void *)&long long v28 = 1;
    sub_1B6B33B70(v15, 0xD00000000000002ELL, 0x80000001B6F3F1B0, (uint64_t *)&v28);
    swift_release();
  }
  sub_1B62EC494((uint64_t)v8, v10, v12, 0);
  type metadata accessor for particle_primitive_material_constants(0);
  sub_1B62EC4C0((uint64_t)v33, 0, ObjectType, v16);
  swift_retain();
  uint64_t v17 = sub_1B696B160();
  uint64_t v19 = v18;
  swift_release();
  sub_1B62EC578(v19, 200);
  sub_1B62EC1A8(v17, 201, (unint64_t *)(a2 + 136));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v8;
}

void sub_1B6969E28()
{
}

uint64_t sub_1B6969E64(float *a1, uint64_t a2)
{
  return sub_1B6969FBC(a1, a2) & 1;
}

uint64_t sub_1B6969E84(float *a1, uint64_t a2)
{
  float v3 = *a1;
  uint64_t result = 1;
  if (LODWORD(v3) != *(_DWORD *)a2
    || *((_DWORD *)a1 + 1) != *(_DWORD *)(a2 + 4)
    || ((*((unsigned __int8 *)a1 + 20) ^ *(unsigned __int8 *)(a2 + 20)) & 1) != 0
    || ((*((unsigned __int8 *)a1 + 21) ^ *(unsigned __int8 *)(a2 + 21)) & 1) != 0)
  {
    return result;
  }
  float v5 = a1[2];
  float v6 = a1[4];
  int v7 = *((unsigned __int8 *)a1 + 22);
  int v8 = *((_DWORD *)a1 + 6);
  int v9 = *((unsigned __int8 *)a1 + 28);
  int v10 = *((unsigned __int8 *)a1 + 29);
  float v11 = a1[8];
  float v12 = *(float *)(a2 + 8);
  float v13 = *(float *)(a2 + 16);
  if (*((unsigned char *)a1 + 12) == 1)
  {
    if (v5 == 0.0)
    {
      if (v12 == 0.0) {
        char v16 = *(unsigned char *)(a2 + 12);
      }
      else {
        char v16 = 0;
      }
      if ((v16 & 1) == 0) {
        return 1;
      }
    }
    else
    {
      if (LODWORD(v5) == 1)
      {
        if (LODWORD(v12) == 1) {
          char v14 = *(unsigned char *)(a2 + 12);
        }
        else {
          char v14 = 0;
        }
        if (v14) {
          goto LABEL_12;
        }
        return 1;
      }
      if (LODWORD(v12) > 1) {
        int v17 = *(unsigned __int8 *)(a2 + 12);
      }
      else {
        int v17 = 0;
      }
      if (v17 != 1) {
        return 1;
      }
    }
LABEL_12:
    uint64_t result = 1;
    if (v6 != v13) {
      return result;
    }
    goto LABEL_19;
  }
  if (v5 == v12) {
    char v15 = *(unsigned char *)(a2 + 12);
  }
  else {
    char v15 = 1;
  }
  uint64_t result = 1;
  if ((v15 & 1) == 0 && v6 == v13)
  {
LABEL_19:
    if (v7 == *(unsigned __int8 *)(a2 + 22)
      && v8 == *(_DWORD *)(a2 + 24)
      && v9 == *(unsigned __int8 *)(a2 + 28)
      && ((v10 ^ *(unsigned __int8 *)(a2 + 29)) & 1) == 0)
    {
      return (v11 > 0.0) ^ (*(float *)(a2 + 32) > 0.0);
    }
  }
  return result;
}

uint64_t sub_1B6969FBC(float *a1, uint64_t a2)
{
  float v3 = *a1;
  uint64_t result = 1;
  if (LODWORD(v3) != *(_DWORD *)a2
    || *((_DWORD *)a1 + 1) != *(_DWORD *)(a2 + 4)
    || ((*((unsigned __int8 *)a1 + 30) ^ *(unsigned __int8 *)(a2 + 30)) & 1) != 0
    || ((*((unsigned __int8 *)a1 + 31) ^ *(unsigned __int8 *)(a2 + 31)) & 1) != 0)
  {
    return result;
  }
  float v5 = a1[2];
  float v6 = a1[4];
  int v7 = *((unsigned __int8 *)a1 + 20);
  int v8 = *((_DWORD *)a1 + 6);
  int v9 = *((unsigned __int8 *)a1 + 28);
  int v10 = *((unsigned __int8 *)a1 + 29);
  float v11 = a1[8];
  float v12 = *(float *)(a2 + 8);
  float v13 = *(float *)(a2 + 16);
  if (*((unsigned char *)a1 + 12) == 1)
  {
    if (v5 == 0.0)
    {
      if (v12 == 0.0) {
        char v16 = *(unsigned char *)(a2 + 12);
      }
      else {
        char v16 = 0;
      }
      if ((v16 & 1) == 0) {
        return 1;
      }
    }
    else
    {
      if (LODWORD(v5) == 1)
      {
        if (LODWORD(v12) == 1) {
          char v14 = *(unsigned char *)(a2 + 12);
        }
        else {
          char v14 = 0;
        }
        if (v14) {
          goto LABEL_12;
        }
        return 1;
      }
      if (LODWORD(v12) > 1) {
        int v17 = *(unsigned __int8 *)(a2 + 12);
      }
      else {
        int v17 = 0;
      }
      if (v17 != 1) {
        return 1;
      }
    }
LABEL_12:
    uint64_t result = 1;
    if (v6 != v13) {
      return result;
    }
    goto LABEL_19;
  }
  if (v5 == v12) {
    char v15 = *(unsigned char *)(a2 + 12);
  }
  else {
    char v15 = 1;
  }
  uint64_t result = 1;
  if ((v15 & 1) == 0 && v6 == v13)
  {
LABEL_19:
    if (v7 == *(unsigned __int8 *)(a2 + 20)
      && v8 == *(_DWORD *)(a2 + 24)
      && v9 == *(unsigned __int8 *)(a2 + 28)
      && ((v10 ^ *(unsigned __int8 *)(a2 + 29)) & 1) == 0)
    {
      return (v11 > 0.0) ^ (*(float *)(a2 + 32) > 0.0);
    }
  }
  return result;
}

void sub_1B696A0F8()
{
}

void sub_1B696A134()
{
}

void sub_1B696A170()
{
}

void sub_1B696A1AC(void *a1@<X8>)
{
  *a1 = &unk_1F0F88B68;
}

uint64_t sub_1B696A1BC()
{
  return sub_1B6E31B28();
}

void sub_1B696A20C(void *a1@<X8>)
{
  *a1 = &unk_1F0F90B40;
}