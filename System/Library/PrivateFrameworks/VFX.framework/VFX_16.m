uint64_t sub_1B6B8CCCC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v22 = *a4;
    v4 = *a4 + 8 * a3 - 8;
    do
    {
      v6 = v23;
      v7 = *(void **)(v22 + 8 * a3);
      v25 = v4;
      v26 = a3;
      while (1)
      {
        v8 = *(void **)v4;
        v9 = v7;
        v10 = v8;
        v11 = objc_msgSend(v9, sel_name);
        v12 = sub_1B6E31798();
        v14 = v13;

        v15 = objc_msgSend(v10, sel_name);
        v16 = sub_1B6E31798();
        v18 = v17;

        if (v12 == v16 && v14 == v18) {
          break;
        }
        v20 = sub_1B6E334B8();

        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v5 = v26;
        if (v20)
        {
          v21 = *(void **)v4;
          v7 = *(void **)(v4 + 8);
          *(void *)v4 = v7;
          *(void *)(v4 + 8) = v21;
          v4 -= 8;
          if (v26 != ++v6) {
            continue;
          }
        }
        goto LABEL_5;
      }

      result = swift_bridgeObjectRelease_n();
      v5 = v26;
LABEL_5:
      a3 = v5 + 1;
      v4 = v25 + 8;
    }
    while (a3 != a2);
  }
  return result;
}

uint64_t sub_1B6B8CE3C(void **__src, id *a2, id *a3, void **__dst)
{
  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    v51 = v4;
    v31 = &v4[v13];
    v59 = v31;
    v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_1B6D66D04((void **)&v61, (const void **)&v60, &v59);
      return 1;
    }
    v32 = v6;
    v56 = v7;
    while (1)
    {
      v52 = v31;
      v54 = v6;
      v58 = v5;
      v34 = *--v31;
      v33 = v34;
      v35 = *--v32;
      id v36 = v33;
      id v37 = v35;
      id v38 = objc_msgSend(v36, sel_name);
      uint64_t v39 = sub_1B6E31798();
      uint64_t v41 = v40;

      id v42 = objc_msgSend(v37, sel_name);
      uint64_t v43 = sub_1B6E31798();
      uint64_t v45 = v44;

      if (v39 == v43 && v41 == v45) {
        break;
      }
      char v47 = sub_1B6E334B8();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v58;
      v5 = v58 - 1;
      if ((v47 & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v49 = (unint64_t)v56;
      v31 = v52;
      if (v58 != v54 || v5 >= v54) {
        id *v5 = *v32;
      }
      v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        v6 = v32;
        if (v31 > v51) {
          continue;
        }
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v48 = v58;
    v5 = v58 - 1;
LABEL_46:
    v32 = v54;
    unint64_t v49 = (unint64_t)v56;
    v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52) {
      id *v5 = *v31;
    }
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    v53 = &v4[v10];
    v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      v57 = v5;
      while (1)
      {
        v55 = v7;
        v14 = v6;
        v15 = *v4;
        id v16 = *v6;
        id v17 = v15;
        id v18 = objc_msgSend(v16, sel_name);
        uint64_t v19 = sub_1B6E31798();
        uint64_t v21 = v20;

        id v22 = objc_msgSend(v17, sel_name);
        uint64_t v23 = sub_1B6E31798();
        uint64_t v25 = v24;

        if (v19 == v23 && v21 == v25) {
          break;
        }
        char v27 = sub_1B6E334B8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          goto LABEL_23;
        }
        v28 = v14 + 1;
        v29 = v55;
        v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14) {
          *v55 = *v14;
        }
LABEL_26:
        v7 = v29 + 1;
        if (v4 < v53)
        {
          v6 = v28;
          if (v28 < v30) {
            continue;
          }
        }
        v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v29 = v55;
      v30 = v57;
      if (v55 != v4) {
        *v55 = *v4;
      }
      v60 = ++v4;
      v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6B8D254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a3);
}

uint64_t sub_1B6B8D27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F6F8);
}

uint64_t sub_1B6B8D294@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, a3);
}

uint64_t sub_1B6B8D2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F75C);
}

uint64_t sub_1B6B8D2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a3);
}

uint64_t sub_1B6B8D2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F788);
}

uint64_t sub_1B6B8D300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, a3);
}

uint64_t sub_1B6B8D314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F7B4);
}

uint64_t sub_1B6B8D32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a3);
}

uint64_t sub_1B6B8D354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F7E0);
}

uint64_t sub_1B6B8D36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB71C, a3);
}

uint64_t sub_1B6B8D394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F80C);
}

uint64_t sub_1B6B8D3AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B671167C(a1, a2, (uint64_t)&type metadata for CameraController, a3);
}

uint64_t sub_1B6B8D3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DBF0(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8FE10);
}

uint64_t sub_1B6B8D3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for CameraController, (uint64_t)&off_1F0F6B000, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a3);
}

uint64_t sub_1B6B8D400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E43C(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8FE3C);
}

uint64_t sub_1B6B8D418@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraController, (uint64_t)&off_1F0F6B000, a3);
}

uint64_t sub_1B6B8D42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8FE68);
}

uint64_t sub_1B6B8D444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraController, (uint64_t)&off_1F0F6B000, a3);
}

uint64_t sub_1B6B8D458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8FE94);
}

uint64_t sub_1B6B8D470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for MaterialController, (uint64_t)&off_1F0F76D40, a3);
}

uint64_t sub_1B6B8D484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94570);
}

uint64_t sub_1B6B8D49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for MaterialController, (uint64_t)&off_1F0F76D40, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a3);
}

uint64_t sub_1B6B8D4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B9459C);
}

uint64_t sub_1B6B8D4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for WorldFogController, (uint64_t)&off_1F0F7B900, a3);
}

uint64_t sub_1B6B8D4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94CC8);
}

uint64_t sub_1B6B8D508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for WorldFogController, (uint64_t)&off_1F0F7B900, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a3);
}

uint64_t sub_1B6B8D530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94D20);
}

uint64_t sub_1B6B8D548@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B671167C(a1, a2, (uint64_t)&type metadata for WorldIBLController, a3);
}

uint64_t sub_1B6B8D55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DBF0(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94934);
}

uint64_t sub_1B6B8D574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for WorldIBLController, (uint64_t)&off_1F0F7BAE0, a3);
}

uint64_t sub_1B6B8D588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94990);
}

uint64_t sub_1B6B8D5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9324, a3);
}

uint64_t sub_1B6B8D5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93AD4);
}

uint64_t sub_1B6B8D5E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDAD0, a3);
}

uint64_t sub_1B6B8D608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93B00);
}

uint64_t sub_1B6B8D620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDAE8, a3);
}

uint64_t sub_1B6B8D648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93B2C);
}

uint64_t sub_1B6B8D660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a3);
}

uint64_t sub_1B6B8D688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93B58);
}

uint64_t sub_1B6B8D6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDB00, a3);
}

uint64_t sub_1B6B8D6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93B84);
}

uint64_t sub_1B6B8D6E0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, a3);
}

uint64_t sub_1B6B8D6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93BB0);
}

uint64_t sub_1B6B8D70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, a3);
}

uint64_t sub_1B6B8D720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93C08);
}

uint64_t sub_1B6B8D738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDB18, a3);
}

uint64_t sub_1B6B8D760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93C34);
}

uint64_t sub_1B6B8D778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a3);
}

uint64_t sub_1B6B8D7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93C60);
}

uint64_t sub_1B6B8D7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, a3);
}

uint64_t sub_1B6B8D7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B930B4);
}

uint64_t sub_1B6B8D7E4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, a3);
}

uint64_t sub_1B6B8D7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B930E0);
}

uint64_t sub_1B6B8D810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a3);
}

uint64_t sub_1B6B8D838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B9310C);
}

uint64_t sub_1B6B8D850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a3);
}

uint64_t sub_1B6B8D878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B93138);
}

uint64_t sub_1B6B8D890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for WorldPhysicsController, (uint64_t)&off_1F0F8EA48, a3);
}

uint64_t sub_1B6B8D8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94B1C);
}

uint64_t sub_1B6B8D8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for WorldPhysicsController, (uint64_t)&off_1F0F8EA48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a3);
}

uint64_t sub_1B6B8D8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94B48);
}

uint64_t sub_1B6B8D8FC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B671167C(a1, a2, (uint64_t)&type metadata for NodeTransformController, a3);
}

uint64_t sub_1B6B8D910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DBF0(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8ECC0);
}

uint64_t sub_1B6B8D928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for NodeTransformController, (uint64_t)&off_1F0F8FA38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9B6C, a3);
}

uint64_t sub_1B6B8D950(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6B8ECEC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B8DA10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for NodeTransformController, (uint64_t)&off_1F0F8FA38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a3);
}

uint64_t sub_1B6B8DA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for NodeTransformController, (uint64_t)&off_1F0F8FA38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a2);
}

uint64_t sub_1B6B8DA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8ED18);
}

uint64_t sub_1B6B8DA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8ED18);
}

uint64_t sub_1B6B8DAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for NodeVisibilityController, (uint64_t)&off_1F0F92320, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a3);
}

uint64_t sub_1B6B8DAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F004);
}

uint64_t sub_1B6B8DB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for NodeVisibilityController, (uint64_t)&off_1F0F92320, a3);
}

uint64_t sub_1B6B8DB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F030);
}

uint64_t sub_1B6B8DB2C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for NodeVisibilityController, (uint64_t)&off_1F0F92320, a3);
}

uint64_t sub_1B6B8DB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B8F05C);
}

uint64_t sub_1B6B8DB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for ParametricModelController, (uint64_t)&off_1F0F94618, a3);
}

uint64_t sub_1B6B8DB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B927D4);
}

uint64_t sub_1B6B8DB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for ParametricModelController, (uint64_t)&off_1F0F94618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE6F0, a3);
}

uint64_t sub_1B6B8DBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B92800);
}

uint64_t sub_1B6B8DBC4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B671167C(a1, a2, (uint64_t)&type metadata for WorldBackgroundController, a3);
}

uint64_t sub_1B6B8DBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DBF0(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94748);
}

uint64_t sub_1B6B8DBF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B8DCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for WorldBackgroundController, (uint64_t)&off_1F0F95E18, a3);
}

uint64_t sub_1B6B8DCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B94774);
}

uint64_t sub_1B6B8DCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectSSAOController, (uint64_t)&off_1F0F96080, a3);
}

uint64_t sub_1B6B8DCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B922F0);
}

uint64_t sub_1B6B8DD04@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectSSAOController, (uint64_t)&off_1F0F96080, a3);
}

uint64_t sub_1B6B8DD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B9231C);
}

uint64_t sub_1B6B8DD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a3);
}

uint64_t sub_1B6B8DD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B903C8);
}

uint64_t sub_1B6B8DD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a3);
}

uint64_t sub_1B6B8DD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B903F4);
}

uint64_t sub_1B6B8DDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, a3);
}

uint64_t sub_1B6B8DDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90420);
}

uint64_t sub_1B6B8DDDC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, a3);
}

uint64_t sub_1B6B8DDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B9044C);
}

uint64_t sub_1B6B8DE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectGrainController, (uint64_t)&off_1F0F97360, a3);
}

uint64_t sub_1B6B8DE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90F20);
}

uint64_t sub_1B6B8DE34@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectGrainController, (uint64_t)&off_1F0F97360, a3);
}

uint64_t sub_1B6B8DE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90F4C);
}

uint64_t sub_1B6B8DE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectExposureController, (uint64_t)&off_1F0F99DF0, a3);
}

uint64_t sub_1B6B8DE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90A90);
}

uint64_t sub_1B6B8DE8C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectExposureController, (uint64_t)&off_1F0F99DF0, a3);
}

uint64_t sub_1B6B8DEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90ABC);
}

uint64_t sub_1B6B8DEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectLensBlurController, (uint64_t)&off_1F0F99FD8, a3);
}

uint64_t sub_1B6B8DECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90C74);
}

uint64_t sub_1B6B8DEE4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectLensBlurController, (uint64_t)&off_1F0F99FD8, a3);
}

uint64_t sub_1B6B8DEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90CA0);
}

uint64_t sub_1B6B8DF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectMotionBlurController, (uint64_t)&off_1F0F9B208, a3);
}

uint64_t sub_1B6B8DF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91104);
}

uint64_t sub_1B6B8DF3C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectMotionBlurController, (uint64_t)&off_1F0F9B208, a3);
}

uint64_t sub_1B6B8DF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91130);
}

uint64_t sub_1B6B8DF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectToneMappingController, (uint64_t)&off_1F0F9BCB8, a3);
}

uint64_t sub_1B6B8DF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B90880);
}

uint64_t sub_1B6B8DF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for CameraEffectToneMappingController, (uint64_t)&off_1F0F9BCB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DEDBC, a3);
}

uint64_t sub_1B6B8DFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B908AC);
}

uint64_t sub_1B6B8DFD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B8E088@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectToneMappingController, (uint64_t)&off_1F0F9BCB8, a3);
}

uint64_t sub_1B6B8E09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B908D8);
}

uint64_t sub_1B6B8E0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for CameraEffectDepthOfFieldController, (uint64_t)&off_1F0F9C118, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a3);
}

uint64_t sub_1B6B8E0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8DFD4(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91424);
}

uint64_t sub_1B6B8E0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectDepthOfFieldController, (uint64_t)&off_1F0F9C118, a3);
}

uint64_t sub_1B6B8E108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91450);
}

uint64_t sub_1B6B8E120@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectDepthOfFieldController, (uint64_t)&off_1F0F9C118, a3);
}

uint64_t sub_1B6B8E134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B9147C);
}

uint64_t sub_1B6B8E14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for CameraEffectDoughnutBokehController, (uint64_t)&off_1F0F9C4B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a3);
}

uint64_t sub_1B6B8E174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E43C(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B9209C);
}

uint64_t sub_1B6B8E18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectDoughnutBokehController, (uint64_t)&off_1F0F9C4B8, a3);
}

uint64_t sub_1B6B8E1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B920F4);
}

uint64_t sub_1B6B8E1B8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectDoughnutBokehController, (uint64_t)&off_1F0F9C4B8, a3);
}

uint64_t sub_1B6B8E1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B92120);
}

uint64_t sub_1B6B8E1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E20C(a1, a2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a3);
}

uint64_t sub_1B6B8E20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  swift_retain();
  uint64_t v12 = a5(a1, a3, a4, a2);
  uint64_t v14 = v13;
  LOBYTE(a3) = v15;
  uint64_t result = swift_release();
  *(void *)a6 = v12;
  *(void *)(a6 + 8) = v14;
  *(unsigned char *)(a6 + 16) = a3 & 1;
  return result;
}

uint64_t sub_1B6B8E2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E2B8(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91BA0);
}

uint64_t sub_1B6B8E2B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B8E36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E394(a1, a2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a3);
}

uint64_t sub_1B6B8E394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  swift_retain();
  uint64_t v12 = a5(a1, a3, a4, a2);
  LOBYTE(a4) = v13;
  uint64_t result = swift_release();
  *(void *)a6 = v12;
  *(unsigned char *)(a6 + 8) = a4 & 1;
  return result;
}

uint64_t sub_1B6B8E424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E43C(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91BCC);
}

uint64_t sub_1B6B8E43C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B8E4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6B8E504(a1, a2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, a3);
}

uint64_t sub_1B6B8E504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  swift_retain();
  unint64_t v10 = sub_1B66D9444(a1, a3, a4, a2);
  uint64_t result = swift_release();
  *(_DWORD *)a5 = v10;
  *(unsigned char *)(a5 + 4) = BYTE4(v10) & 1;
  return result;
}

uint64_t sub_1B6B8E580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E598(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91BF8);
}

uint64_t sub_1B6B8E598(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B8E64C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B6B8E660(a1, a2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, a3);
}

uint64_t sub_1B6B8E660@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned char *a5@<X8>)
{
  swift_retain();
  LOBYTE(a4) = sub_1B66D9564(a1, a3, a4, a2);
  uint64_t result = swift_release();
  *a5 = a4;
  return result;
}

uint64_t sub_1B6B8E6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B8E6EC(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6B91C24);
}

uint64_t sub_1B6B8E6EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B8E7A0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(a1 + 32))(v7);
  uint64_t v3 = MEMORY[0x1E4FBC840] + 8;
  sub_1B62CA57C((uint64_t)v7, (uint64_t)v6, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980F60, v3, MEMORY[0x1E4FBB718]);
  uint64_t result = swift_dynamicCast();
  int v5 = v8;
  if (!result) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = result ^ 1;
  return result;
}

void sub_1B6B8E860(long long *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1B6B759A0();
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_orientation);
    long long v6 = v4;

    long long v5 = v6;
  }
  else
  {
    long long v5 = xmmword_1B6E4F370;
  }
  *a1 = v5;
}

void sub_1B6B8E8C0(long long *a1)
{
  long long v2 = *a1;
  id v1 = (id)sub_1B6B759A0();
  objc_msgSend(v1, sel_setOrientation_, *(double *)&v2);
}

uint64_t sub_1B6B8E91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for NodeTransformController, (uint64_t)&off_1F0F8FA38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9B6C, a2);
}

void sub_1B6B8E95C(_OWORD *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1B6B759A0();
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_scale);
    long long v10 = v4;

    _Q0 = v10;
  }
  else
  {
    __asm { FMOV            V0.4S, #1.0 }
  }
  *a1 = _Q0;
}

void sub_1B6B8E9B8(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8E9C4(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  long long v7 = *a1;
  id v6 = (id)sub_1B6B759A0();
  objc_msgSend(v6, *a5, *(double *)&v7);
}

void sub_1B6B8EA20(long long *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1B6B759A0();
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_transform);
    long long v15 = v4;
    long long v13 = v6;
    long long v14 = v5;
    long long v12 = v7;

    long long v8 = v15;
    long long v9 = v13;
    long long v10 = v14;
    long long v11 = v12;
  }
  else
  {
    long long v11 = xmmword_1B6E4F370;
    long long v9 = xmmword_1B6E4F2E0;
    long long v10 = xmmword_1B6E4F320;
    long long v8 = xmmword_1B6E4F300;
  }
  *a1 = v8;
  a1[1] = v10;
  a1[2] = v9;
  a1[3] = v11;
}

void sub_1B6B8EAAC(long long *a1)
{
  long long v5 = a1[3];
  long long v3 = a1[1];
  long long v4 = a1[2];
  long long v2 = *a1;
  id v1 = (id)sub_1B6B759A0();
  objc_msgSend(v1, sel_setTransform_, *(double *)&v2, *(double *)&v3, *(double *)&v4, *(double *)&v5);
}

uint64_t sub_1B6B8EB24@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671167C(a1, v2, (uint64_t)&type metadata for NodeTransformController, a2);
}

uint64_t sub_1B6B8EB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DBF0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8ECC0);
}

void sub_1B6B8EB80(uint64_t a1@<X0>, long long *a2@<X8>)
{
  uint64_t v3 = (void *)MEMORY[0x1BA9B8670](a1 + 32);
  if (v3)
  {
    long long v4 = v3;
    objc_msgSend(v3, sel_worldTransform);
    long long v16 = v5;
    long long v14 = v7;
    long long v15 = v6;
    long long v13 = v8;

    long long v9 = v16;
    long long v10 = v14;
    long long v11 = v15;
    long long v12 = v13;
  }
  else
  {
    long long v12 = xmmword_1B6E4F370;
    long long v10 = xmmword_1B6E4F2E0;
    long long v11 = xmmword_1B6E4F320;
    long long v9 = xmmword_1B6E4F300;
  }
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v10;
  a2[3] = v12;
}

void sub_1B6B8EC10(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = (void *)MEMORY[0x1BA9B8670](a1 + 32);
  if (v3)
  {
    long long v4 = v3;
    objc_msgSend(v3, sel_eulerAngles);
    long long v7 = v5;

    long long v6 = v7;
  }
  else
  {
    long long v6 = 0uLL;
  }
  *a2 = v6;
}

void sub_1B6B8EC6C(long long *a1, uint64_t a2)
{
  long long v3 = *a1;
  id v2 = (id)MEMORY[0x1BA9B8670](a2 + 32);
  objc_msgSend(v2, sel_setEulerAngles_, *(double *)&v3);
}

uint64_t sub_1B6B8ECC0(uint64_t a1)
{
  return sub_1B6B94960(a1, (uint64_t (*)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))sub_1B66D141C);
}

uint64_t sub_1B6B8ECEC(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D1608);
}

uint64_t sub_1B6B8ED18(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D17D0);
}

void sub_1B6B8ED44(char *a1@<X8>)
{
}

void sub_1B6B8ED64(char *a1)
{
}

uint64_t sub_1B6B8ED98@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for NodeVisibilityController, (uint64_t)&off_1F0F92320, a2);
}

uint64_t sub_1B6B8EDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F05C);
}

void sub_1B6B8EDF8(int *a1)
{
  int v1 = *a1;
  id v3 = (id)sub_1B6B759A0();
  LODWORD(v2) = v1;
  objc_msgSend(v3, sel_setOpacity_, v2);
}

uint64_t sub_1B6B8EE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for NodeVisibilityController, (uint64_t)&off_1F0F92320, a2);
}

uint64_t sub_1B6B8EE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F030);
}

void sub_1B6B8EEB8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  id v2 = (id)sub_1B6B759A0();
  objc_msgSend(v2, sel_setRenderingOrder_, v1);
}

uint64_t sub_1B6B8EF10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B76368();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B6B8EF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for NodeVisibilityController, (uint64_t)&off_1F0F92320, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6B8EF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F004);
}

void sub_1B6B8EFB0(char *a1@<X8>)
{
}

void sub_1B6B8EFD0(char *a1)
{
}

uint64_t sub_1B6B8F004(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D196C);
}

uint64_t sub_1B6B8F030(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D19DC);
}

uint64_t sub_1B6B8F05C(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D1A44);
}

void sub_1B6B8F08C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB71C, a2);
}

uint64_t sub_1B6B8F0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F80C);
}

float sub_1B6B8F110@<S0>(_OWORD *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_extendedLinearSRGBColor);
    long long v7 = v4;

    long long v5 = v7;
  }
  else
  {
    *(void *)&long long v5 = 0;
    DWORD2(v5) = 0;
  }
  float result = 1.0;
  HIDWORD(v5) = 1.0;
  *a1 = v5;
  return result;
}

void sub_1B6B8F180(__n128 *a1)
{
}

uint64_t sub_1B6B8F1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a2);
}

uint64_t sub_1B6B8F1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F7E0);
}

void sub_1B6B8F218(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B6B94F18(255, a3, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a4);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v6) {
      atomic_store(Set, a2);
    }
  }
}

void sub_1B6B8F290(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, a2);
}

uint64_t sub_1B6B8F2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F7B4);
}

void sub_1B6B8F300(_DWORD *a1@<X8>)
{
}

void sub_1B6B8F328(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F33C(_OWORD *a1@<X8>)
{
}

void sub_1B6B8F350(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a2);
}

uint64_t sub_1B6B8F3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F788);
}

void sub_1B6B8F3D8(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B8F400(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F414@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, a2);
}

uint64_t sub_1B6B8F440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F75C);
}

void sub_1B6B8F470(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B8F498(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F4AC(_DWORD *a1@<X8>)
{
}

void sub_1B6B8F4D4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F4EC(_DWORD *a1@<X8>)
{
}

void sub_1B6B8F514(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F528(_DWORD *a1@<X8>)
{
}

void sub_1B6B8F550(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F568(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B8F590(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F5A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B78308();
  *a1 = result & 1;
  return result;
}

void sub_1B6B8F5D4(_DWORD *a1@<X8>)
{
}

void sub_1B6B8F5FC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F610(void *a1@<X8>)
{
}

void sub_1B6B8F638(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for LightController, (uint64_t)&off_1F0F68C70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6B8F68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8F6F8);
}

void sub_1B6B8F6BC(_DWORD *a1@<X8>)
{
}

void sub_1B6B8F6E4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F6F8(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CC9F8);
}

uint64_t sub_1B6B8F724(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B8F75C(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CCA68);
}

uint64_t sub_1B6B8F788(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CCAD8);
}

uint64_t sub_1B6B8F7B4(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66CCC74);
}

uint64_t sub_1B6B8F7E0(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CCCDC);
}

uint64_t sub_1B6B8F80C(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CCE78);
}

void sub_1B6B8F838(float *a1@<X8>)
{
}

void sub_1B6B8F858(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F880(unsigned __int8 *a1@<X8>)
{
}

uint64_t sub_1B6B8F8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraController, (uint64_t)&off_1F0F6B000, a2);
}

uint64_t sub_1B6B8F8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8FE94);
}

void sub_1B6B8F918(float *a1@<X8>)
{
}

void sub_1B6B8F938(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8F960@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B79938();
  *a1 = result & 1;
  return result;
}

void sub_1B6B8F990(float *a1@<X8>)
{
}

void sub_1B6B8F9B0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8F9D8(float *a1@<X8>)
{
}

void sub_1B6B8F9F8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8FA20(_DWORD *a1@<X8>)
{
}

void sub_1B6B8FA5C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8FA84(float *a1@<X8>)
{
}

void sub_1B6B8FAA4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8FACC(float *a1@<X8>)
{
}

void sub_1B6B8FAEC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B8FB14(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B8FB50(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8FB78@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraController, (uint64_t)&off_1F0F6B000, a2);
}

uint64_t sub_1B6B8FBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8FE68);
}

void sub_1B6B8FBD4(void *a1@<X8>)
{
}

void sub_1B6B8FBFC(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8FC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for CameraController, (uint64_t)&off_1F0F6B000, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B6B8FC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E43C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8FE3C);
}

void sub_1B6B8FC94(_OWORD *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_camera);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_projectionTransform);
    long long v15 = v4;
    long long v13 = v6;
    long long v14 = v5;
    long long v12 = v7;

    long long v9 = v12;
    long long v8 = v13;
    long long v10 = v14;
    long long v11 = v15;
  }
  else
  {
    long long v11 = 0uLL;
    long long v10 = 0uLL;
    long long v8 = 0uLL;
    long long v9 = 0uLL;
  }
  *a1 = v11;
  a1[1] = v10;
  a1[2] = v8;
  a1[3] = v9;
}

void sub_1B6B8FD1C(long long *a1)
{
  long long v5 = a1[3];
  long long v3 = a1[1];
  long long v4 = a1[2];
  long long v2 = *a1;
  id v1 = sub_1B6B81AD4((SEL *)&selRef_camera);
  objc_msgSend(v1, sel_setProjectionTransform_, *(double *)&v2, *(double *)&v3, *(double *)&v4, *(double *)&v5);
}

uint64_t sub_1B6B8FD9C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671167C(a1, v2, (uint64_t)&type metadata for CameraController, a2);
}

uint64_t sub_1B6B8FDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DBF0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B8FE10);
}

uint64_t sub_1B6B8FE10(uint64_t a1)
{
  return sub_1B6B94960(a1, (uint64_t (*)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))sub_1B66CD3B0);
}

uint64_t sub_1B6B8FE3C(uint64_t a1)
{
  return sub_1B6B920C8(a1, (uint64_t (*)(uint64_t, void, void, void, double))sub_1B66CD59C);
}

uint64_t sub_1B6B8FE68(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CD604);
}

uint64_t sub_1B6B8FE94(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66CD674);
}

void sub_1B6B8FEC0(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B8FEFC(char *a1)
{
}

uint64_t sub_1B6B8FF30@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, a2);
}

uint64_t sub_1B6B8FF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B9044C);
}

void sub_1B6B8FF8C(_DWORD *a1@<X8>)
{
}

void sub_1B6B8FFC8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8FFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, a2);
}

uint64_t sub_1B6B9001C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90420);
}

void sub_1B6B9004C(_DWORD *a1@<X8>)
{
}

void sub_1B6B90088(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B900B0(_DWORD *a1@<X8>)
{
}

void sub_1B6B900EC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B90114(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B90150(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B90178(_OWORD *a1@<X8>)
{
  id v2 = sub_1B6B7ABA8((SEL *)&selRef_bloom);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_colorFilter);
    long long v10 = v4;

    _Q0 = v10;
  }
  else
  {
    __asm { FMOV            V0.4S, #1.0 }
  }
  *a1 = _Q0;
}

void sub_1B6B901E0(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a2);
}

uint64_t sub_1B6B90248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B903F4);
}

void sub_1B6B90278(_DWORD *a1@<X8>)
{
}

void sub_1B6B902B4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B902DC(_DWORD *a1@<X8>)
{
}

void sub_1B6B90318(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B90344(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for CameraEffectBloomController, (uint64_t)&off_1F0F97178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6B90398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B903C8);
}

uint64_t sub_1B6B903C8(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D24C8);
}

uint64_t sub_1B6B903F4(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D2538);
}

uint64_t sub_1B6B90420(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D26D4);
}

uint64_t sub_1B6B9044C(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D273C);
}

void sub_1B6B90478(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B904B4(char *a1)
{
}

uint64_t sub_1B6B904E8@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectToneMappingController, (uint64_t)&off_1F0F9BCB8, a2);
}

uint64_t sub_1B6B90514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B908D8);
}

void sub_1B6B90548(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B9055C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for CameraEffectToneMappingController, (uint64_t)&off_1F0F9BCB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DEDBC, a2);
}

uint64_t sub_1B6B9059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B908AC);
}

void sub_1B6B905CC(_DWORD *a1@<X8>)
{
}

void sub_1B6B90608(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectToneMappingController, (uint64_t)&off_1F0F9BCB8, a2);
}

uint64_t sub_1B6B9065C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90880);
}

void sub_1B6B9068C(_DWORD *a1@<X8>)
{
}

void sub_1B6B906C8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B906F0(_DWORD *a1@<X8>)
{
}

void sub_1B6B9072C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B90754(_DWORD *a1@<X8>)
{
}

void sub_1B6B90790(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B907B8(_DWORD *a1@<X8>)
{
}

void sub_1B6B907F4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B9081C(_DWORD *a1@<X8>)
{
}

void sub_1B6B90858(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90880(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D2FE0);
}

uint64_t sub_1B6B908AC(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D3048);
}

uint64_t sub_1B6B908D8(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D31F4);
}

void sub_1B6B90904(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B90940(char *a1)
{
}

uint64_t sub_1B6B90974@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectExposureController, (uint64_t)&off_1F0F99DF0, a2);
}

uint64_t sub_1B6B909A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90ABC);
}

void sub_1B6B909D0(_DWORD *a1@<X8>)
{
}

void sub_1B6B90A0C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectExposureController, (uint64_t)&off_1F0F99DF0, a2);
}

uint64_t sub_1B6B90A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90A90);
}

uint64_t sub_1B6B90A90(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D2884);
}

uint64_t sub_1B6B90ABC(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D28EC);
}

void sub_1B6B90AE8(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B90B24(char *a1)
{
}

uint64_t sub_1B6B90B58@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectLensBlurController, (uint64_t)&off_1F0F99FD8, a2);
}

uint64_t sub_1B6B90B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90CA0);
}

void sub_1B6B90BB4(_DWORD *a1@<X8>)
{
}

void sub_1B6B90BF0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectLensBlurController, (uint64_t)&off_1F0F99FD8, a2);
}

uint64_t sub_1B6B90C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90C74);
}

uint64_t sub_1B6B90C74(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D295C);
}

uint64_t sub_1B6B90CA0(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D29C4);
}

void sub_1B6B90CCC(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B90D08(char *a1)
{
}

uint64_t sub_1B6B90D3C@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectGrainController, (uint64_t)&off_1F0F97360, a2);
}

uint64_t sub_1B6B90D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90F4C);
}

void sub_1B6B90D98(_DWORD *a1@<X8>)
{
}

void sub_1B6B90DD4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectGrainController, (uint64_t)&off_1F0F97360, a2);
}

uint64_t sub_1B6B90E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B90F20);
}

void sub_1B6B90E58(_DWORD *a1@<X8>)
{
}

void sub_1B6B90E94(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B90EBC(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B90EF8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B90F20(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D27AC);
}

uint64_t sub_1B6B90F4C(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D2814);
}

void sub_1B6B90F78(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B90FB4(char *a1)
{
}

uint64_t sub_1B6B90FE8@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectMotionBlurController, (uint64_t)&off_1F0F9B208, a2);
}

uint64_t sub_1B6B91014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91130);
}

void sub_1B6B91044(_DWORD *a1@<X8>)
{
}

void sub_1B6B91080(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B910A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectMotionBlurController, (uint64_t)&off_1F0F9B208, a2);
}

uint64_t sub_1B6B910D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91104);
}

uint64_t sub_1B6B91104(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D2BD0);
}

uint64_t sub_1B6B91130(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D2C38);
}

void sub_1B6B9115C(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B91198(char *a1)
{
}

uint64_t sub_1B6B911CC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectDepthOfFieldController, (uint64_t)&off_1F0F9C118, a2);
}

uint64_t sub_1B6B911F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B9147C);
}

void sub_1B6B91228(_DWORD *a1@<X8>)
{
}

void sub_1B6B91264(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B9128C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectDepthOfFieldController, (uint64_t)&off_1F0F9C118, a2);
}

uint64_t sub_1B6B912B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91450);
}

void sub_1B6B912E8(uint64_t *a1@<X8>)
{
}

void sub_1B6B91308(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B9131C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for CameraEffectDepthOfFieldController, (uint64_t)&off_1F0F9C118, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6B9135C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91424);
}

void sub_1B6B9138C(uint64_t *a1@<X8>)
{
}

void sub_1B6B913AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B913C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, SEL *a6)
{
  uint64_t v7 = *a1;
  id v8 = sub_1B6B7ABA8(a5);
  objc_msgSend(v8, *a6, v7);
}

uint64_t sub_1B6B91424(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D3264);
}

uint64_t sub_1B6B91450(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D32D4);
}

uint64_t sub_1B6B9147C(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D333C);
}

void sub_1B6B914A8(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B914E4(char *a1)
{
}

uint64_t sub_1B6B91518@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, a2);
}

uint64_t sub_1B6B91544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91C24);
}

void sub_1B6B91574(float *a1@<X8>)
{
  *a1 = sub_1B6B7D164();
}

void sub_1B6B915A0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B915C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, a2);
}

uint64_t sub_1B6B915F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91BF8);
}

void sub_1B6B91624(void *a1@<X8>)
{
}

void sub_1B6B9164C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B91674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B6B916B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E43C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91BCC);
}

void sub_1B6B916E4(float *a1@<X8>)
{
  *a1 = sub_1B6B7D18C();
}

void sub_1B6B91710(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91738(float *a1@<X8>)
{
  *a1 = sub_1B6B7D1A0();
}

void sub_1B6B91764(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B9178C(void *a1@<X8>)
{
}

void sub_1B6B917B4(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B917DC(float *a1@<X8>)
{
  *a1 = sub_1B6B7D2E8();
}

void sub_1B6B91808(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91830(float *a1@<X8>)
{
  *a1 = sub_1B6B7D2FC();
}

void sub_1B6B9185C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91884(void *a1@<X8>)
{
}

void sub_1B6B918AC(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B918D4(_OWORD *a1@<X8>)
{
}

void sub_1B6B918FC(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B91924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for CameraEffectChromaticTransformController, (uint64_t)&off_1F0F9DC90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a2);
}

uint64_t sub_1B6B91964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B91BA0);
}

void sub_1B6B91994(_OWORD *a1@<X8>)
{
}

void sub_1B6B919BC(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B919E4(_OWORD *a1@<X8>)
{
}

void sub_1B6B91A0C(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91A34(void *a1@<X8>)
{
}

void sub_1B6B91A5C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91A84(_DWORD *a1@<X8>)
{
}

void sub_1B6B91AC0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91AE8(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B91B24(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91B4C(float *a1@<X8>)
{
  *a1 = sub_1B6B7D4A8();
}

void sub_1B6B91B78(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B91BA0(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D3688);
}

uint64_t sub_1B6B91BCC(uint64_t a1)
{
  return sub_1B6B920C8(a1, (uint64_t (*)(uint64_t, void, void, void, double))sub_1B66D3824);
}

uint64_t sub_1B6B91BF8(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D388C);
}

uint64_t sub_1B6B91C24(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D38F4);
}

void sub_1B6B91C50(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B91C8C(char *a1)
{
}

uint64_t sub_1B6B91CC0@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectDoughnutBokehController, (uint64_t)&off_1F0F9C4B8, a2);
}

uint64_t sub_1B6B91CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B92120);
}

void sub_1B6B91D1C(_DWORD *a1@<X8>)
{
}

void sub_1B6B91D58(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B91D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectDoughnutBokehController, (uint64_t)&off_1F0F9C4B8, a2);
}

uint64_t sub_1B6B91DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B920F4);
}

void sub_1B6B91DDC(void *a1@<X8>)
{
}

void sub_1B6B91E04(uint64_t a1@<X3>, uint64_t (*a2)(uint64_t)@<X4>, SEL *a3@<X5>, void *a4@<X8>)
{
  long long v6 = (void *)a2(a1);
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 *a3];
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v9 = 0;
  }
  *a4 = v9;
}

void sub_1B6B91E6C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91E94(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), SEL *a7)
{
  double v8 = *a1;
  id v9 = (id)a6(a5);
  objc_msgSend(v9, *a7, v8);
}

uint64_t sub_1B6B91EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for CameraEffectDoughnutBokehController, (uint64_t)&off_1F0F9C4B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B6B91F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E43C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B9209C);
}

void sub_1B6B91F6C(_DWORD *a1@<X8>)
{
}

void sub_1B6B91FA8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B91FD0(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B9200C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92034(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), SEL *a7)
{
  uint64_t v8 = *a1;
  id v9 = (id)a6(a5);
  objc_msgSend(v9, *a7, v8);
}

uint64_t sub_1B6B9209C(uint64_t a1)
{
  return sub_1B6B920C8(a1, (uint64_t (*)(uint64_t, void, void, void, double))sub_1B66D33AC);
}

uint64_t sub_1B6B920C8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, double))
{
  return a2(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), **(double **)(v2 + 16));
}

uint64_t sub_1B6B920F4(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D3414);
}

uint64_t sub_1B6B92120(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D347C);
}

uint64_t sub_1B6B92154@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for CameraEffectSSAOController, (uint64_t)&off_1F0F96080, a2);
}

uint64_t sub_1B6B92180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B9231C);
}

void sub_1B6B921B0(_DWORD *a1@<X8>)
{
}

void sub_1B6B921D0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B921DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for CameraEffectSSAOController, (uint64_t)&off_1F0F96080, a2);
}

uint64_t sub_1B6B92208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B922F0);
}

void sub_1B6B92238(_DWORD *a1@<X8>)
{
}

void sub_1B6B92258(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92264(_DWORD *a1@<X8>)
{
}

void sub_1B6B92284(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92290(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  int v6 = *a1;
  id v8 = sub_1B6B7EB88();
  LODWORD(v7) = v6;
  objc_msgSend(v8, *a5, v7);
}

uint64_t sub_1B6B922F0(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D2254);
}

uint64_t sub_1B6B9231C(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D22BC);
}

uint64_t sub_1B6B92350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for ParametricModelController, (uint64_t)&off_1F0F94618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE6F0, a2);
}

uint64_t sub_1B6B92390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B92800);
}

void sub_1B6B923C0(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B923E0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B92400@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B809D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B6B92430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for ParametricModelController, (uint64_t)&off_1F0F94618, a2);
}

uint64_t sub_1B6B9245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B927D4);
}

void sub_1B6B9248C(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B924AC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B924D0(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B924F0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B92510@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B80E14();
  *a1 = result & 1;
  return result;
}

void sub_1B6B92540(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B92560(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B92580@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B80FA8();
  *a1 = result & 1;
  return result;
}

void sub_1B6B925B0(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B925D0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B925F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B81350();
  *a1 = result & 1;
  return result;
}

void sub_1B6B92620(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B92640(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92664(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B92684(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B926A8(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B926C8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B926EC(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B9270C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B9272C(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B9274C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B9276C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B81870();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B6B9279C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B927D4(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D1DEC);
}

uint64_t sub_1B6B92800(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D1E54);
}

void sub_1B6B9282C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_1B6B92834(__n128 *a1)
{
}

uint64_t sub_1B6B9285C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a2);
}

uint64_t sub_1B6B9289C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93138);
}

void sub_1B6B928CC(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_1B6B928D4(__n128 *a1)
{
}

uint64_t sub_1B6B928FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a2);
}

uint64_t sub_1B6B9293C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B9310C);
}

id sub_1B6B9296C@<X0>(unsigned char *a1@<X8>)
{
  id result = sub_1B6B81C94();
  *a1 = result & 1;
  return result;
}

void sub_1B6B9299C()
{
}

uint64_t sub_1B6B929DC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, a2);
}

uint64_t sub_1B6B92A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B930E0);
}

id sub_1B6B92A38@<X0>(unsigned char *a1@<X8>)
{
  id result = sub_1B6B81CB0();
  *a1 = result & 1;
  return result;
}

void sub_1B6B92A68()
{
}

void sub_1B6B92AA8(_OWORD *a1@<X8>)
{
}

void sub_1B6B92AD0(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92AF8(_OWORD *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_physicsBody);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_angularVelocity);
    long long v6 = v4;

    long long v5 = v6;
  }
  else
  {
    long long v5 = 0uLL;
  }
  *a1 = v5;
}

void sub_1B6B92B60(long long *a1)
{
  long long v2 = *a1;
  id v1 = sub_1B6B81AD4((SEL *)&selRef_physicsBody);
  objc_msgSend(v1, sel_setAngularVelocity_, *(double *)&v2);
}

void sub_1B6B92BC4(_OWORD *a1@<X8>)
{
}

void sub_1B6B92BEC(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92C14(_OWORD *a1@<X8>)
{
}

void sub_1B6B92C3C(uint64_t a1@<X3>, uint64_t (*a2)(uint64_t)@<X4>, SEL *a3@<X5>, _OWORD *a4@<X8>)
{
  long long v6 = (void *)a2(a1);
  if (v6)
  {
    double v7 = v6;
    [v6 *a3];
    long long v10 = v8;

    long long v9 = v10;
  }
  else
  {
    long long v9 = 0uLL;
  }
  *a4 = v9;
}

void sub_1B6B92CA8(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92CD0(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), SEL *a7)
{
  long long v9 = *a1;
  id v8 = (id)a6(a5);
  objc_msgSend(v8, *a7, *(double *)&v9);
}

void sub_1B6B92D34(_DWORD *a1@<X8>)
{
}

void sub_1B6B92D70(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B92D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for PhysicsBodyController, (uint64_t)&off_1F0F8A5E0, a2);
}

uint64_t sub_1B6B92DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B930B4);
}

void sub_1B6B92DF4(_DWORD *a1@<X8>)
{
}

void sub_1B6B92E30(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92E58(_DWORD *a1@<X8>)
{
}

void sub_1B6B92E94(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92EBC(_DWORD *a1@<X8>)
{
}

void sub_1B6B92EF8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92F20(_DWORD *a1@<X8>)
{
}

void sub_1B6B92F5C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92F84(_DWORD *a1@<X8>)
{
}

void sub_1B6B92FC0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B92FE8(_DWORD *a1@<X8>)
{
}

void sub_1B6B93024(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B9304C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), SEL *a7)
{
  int v8 = *a1;
  id v10 = (id)a6(a5);
  LODWORD(v9) = v8;
  objc_msgSend(v10, *a7, v9);
}

uint64_t sub_1B6B930B4(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D0890);
}

uint64_t sub_1B6B930E0(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D08F8);
}

uint64_t sub_1B6B9310C(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D0968);
}

uint64_t sub_1B6B93138(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D0B04);
}

void sub_1B6B93164(void *a1@<X8>)
{
}

void sub_1B6B93184(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_1B6B93198@<X0>(void *a1@<X8>)
{
  id result = sub_1B6B84BE0();
  *a1 = result;
  return result;
}

void sub_1B6B931C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B931D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6B93210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93C60);
}

uint64_t sub_1B6B93240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDB18, a2);
}

uint64_t sub_1B6B93280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93C34);
}

void sub_1B6B932B0(_DWORD *a1@<X8>)
{
}

void sub_1B6B932D8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B932EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, a2);
}

uint64_t sub_1B6B93318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93C08);
}

void sub_1B6B93348(_DWORD *a1@<X8>)
{
}

void sub_1B6B93370(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B93384(unsigned __int8 *a1@<X8>)
{
}

void sub_1B6B933AC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B933C0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, SEL *a6)
{
  uint64_t v7 = *a1;
  id v8 = sub_1B6B81AD4(a5);
  objc_msgSend(v8, *a6, v7);
}

uint64_t sub_1B6B93424@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E660(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, a2);
}

uint64_t sub_1B6B93450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6EC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93BB0);
}

void sub_1B6B93484(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B93498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B6B838BC();
  *a1 = result;
  return result;
}

void sub_1B6B934C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B934D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDB00, a2);
}

uint64_t sub_1B6B93510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93B84);
}

void sub_1B6B93540(_OWORD *a1@<X8>)
{
}

void sub_1B6B93554(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B93568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a2);
}

uint64_t sub_1B6B935A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93B58);
}

void sub_1B6B935D8(void *a1@<X8>)
{
}

void sub_1B6B935F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_1B6B9360C@<X0>(void *a1@<X8>)
{
  id result = sub_1B6B84CAC();
  *a1 = result;
  return result;
}

void sub_1B6B93638(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B93644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDAE8, a2);
}

uint64_t sub_1B6B93684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93B2C);
}

void sub_1B6B936B4(void *a1@<X8>)
{
}

void sub_1B6B936D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_1B6B936E8@<X0>(void *a1@<X8>)
{
  id result = sub_1B6B84E0C();
  *a1 = result;
  return result;
}

void sub_1B6B93714(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B93720(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a1;
  id v7 = sub_1B6B81AD4((SEL *)&selRef_forceField);
  objc_msgSend(v7, *a5, v6);
}

uint64_t sub_1B6B93788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDAD0, a2);
}

uint64_t sub_1B6B937C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93B00);
}

void sub_1B6B937F8(_OWORD *a1@<X8>)
{
}

void sub_1B6B9380C(SEL *a1@<X3>, SEL *a2@<X4>, _OWORD *a3@<X8>)
{
  id v5 = sub_1B6B81AD4(a1);
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 *a2];
    long long v9 = v7;

    long long v8 = v9;
  }
  else
  {
    long long v8 = 0uLL;
  }
  *a3 = v8;
}

void sub_1B6B93874(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B93888(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, SEL *a6)
{
  long long v8 = *a1;
  id v7 = sub_1B6B81AD4(a5);
  objc_msgSend(v7, *a6, *(double *)&v8);
}

void sub_1B6B938E8(void *a1@<X8>)
{
}

void sub_1B6B93910(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B93924(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, SEL *a6)
{
  uint64_t v7 = *a1;
  id v8 = sub_1B6B81AD4(a5);
  objc_msgSend(v8, *a6, v7);
}

uint64_t sub_1B6B93988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E394(a1, v2, (uint64_t)&type metadata for ForceFieldsController, (uint64_t)&off_1F0F84FD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9324, a2);
}

uint64_t sub_1B6B939C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFD4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B93AD4);
}

void sub_1B6B939F8(_DWORD *a1@<X8>)
{
}

void sub_1B6B93A20(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B93A34(_DWORD *a1@<X8>)
{
}

void sub_1B6B93A5C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B6B93A70(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, SEL *a6)
{
  int v7 = *a1;
  id v9 = sub_1B6B81AD4(a5);
  LODWORD(v8) = v7;
  objc_msgSend(v9, *a6, v8);
}

uint64_t sub_1B6B93AD4(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CFCFC);
}

uint64_t sub_1B6B93B00(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CFD6C);
}

uint64_t sub_1B6B93B2C(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CFF18);
}

uint64_t sub_1B6B93B58(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D00C4);
}

uint64_t sub_1B6B93B84(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D0260);
}

uint64_t sub_1B6B93BB0(uint64_t a1)
{
  return sub_1B6B93BDC(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D040C);
}

uint64_t sub_1B6B93BDC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, **(unsigned __int8 **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1B6B93C08(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D047C);
}

uint64_t sub_1B6B93C34(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D04E4);
}

uint64_t sub_1B6B93C60(uint64_t a1)
{
  return sub_1B6B93C8C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D0690);
}

uint64_t sub_1B6B93C8C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, **(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1B6B93CB8()
{
  if (swift_dynamicCastMetatype())
  {
    int v0 = 0;
    int v1 = 3;
  }
  else if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    int v0 = 0;
    int v1 = 2;
  }
  else
  {
    sub_1B6B94F18(0, &qword_1EB980EA0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC280]);
    if (swift_dynamicCastMetatype())
    {
      int v0 = 0;
      int v1 = 17;
    }
    else
    {
      sub_1B6B94F18(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
      if (swift_dynamicCastMetatype())
      {
        int v0 = 0;
        int v1 = 18;
      }
      else
      {
        sub_1B6B94F18(0, &qword_1EB980F08, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2F8]);
        if (swift_dynamicCastMetatype())
        {
          int v0 = 0;
          int v1 = 19;
        }
        else if (swift_dynamicCastMetatype())
        {
          int v0 = 0;
          int v1 = 1;
        }
        else
        {
          sub_1B6B94F18(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
          if (swift_dynamicCastMetatype())
          {
            int v0 = 0;
            int v1 = 7;
          }
          else
          {
            sub_1B6B94F18(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
            if (swift_dynamicCastMetatype())
            {
              int v0 = 0;
              int v1 = 8;
            }
            else
            {
              sub_1B6B94F18(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
              if (swift_dynamicCastMetatype())
              {
                int v0 = 0;
                int v1 = 9;
              }
              else
              {
                type metadata accessor for simd_float3x3(0);
                if (swift_dynamicCastMetatype())
                {
                  int v0 = 0;
                  int v1 = 11;
                }
                else
                {
                  type metadata accessor for simd_float4x4(0);
                  if (swift_dynamicCastMetatype())
                  {
                    int v0 = 0;
                    int v1 = 10;
                  }
                  else
                  {
                    type metadata accessor for simd_quatf(0);
                    uint64_t v3 = swift_dynamicCastMetatype();
                    int v0 = v3 == 0;
                    if (v3) {
                      int v1 = 9;
                    }
                    else {
                      int v1 = 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v1 | (v0 << 16);
}

uint64_t sub_1B6B93FC4()
{
  sub_1B6B96284((void *)(v0 + 8), v26);
  uint64_t v1 = MEMORY[0x1BA9B8670](v26);
  sub_1B6B47018((uint64_t)v26);
  if (!v1) {
    return 0;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(v2, sel_presentationMaterial);
  swift_unknownObjectRelease();
  id v4 = v3;
  id v5 = objc_msgSend(v4, sel_materialRef);
  if (!v5
    || (uint64_t v6 = v5,
        swift_unknownObjectRetain(),
        int v7 = (__CFString *)sub_1B6E31768(),
        double v8 = (__CFString *)sub_1B660CA68(v6, v7, 0),
        swift_unknownObjectRelease(),
        v7,
        !v8))
  {

    return 0;
  }
  uint64_t v9 = sub_1B6B93CB8();
  if ((v9 & 0x10000) != 0
    || (unsigned __int16)sub_1B660FA40((uint64_t)v8, v10, v11, v12, v13, v14, v15, v16) != (unsigned __int16)v9)
  {

    return 0;
  }
  uint64_t v24 = sub_1B660F8C4((uint64_t)v8, v17, v18, v19, v20, v21, v22, v23);

  return v24;
}

void sub_1B6B9411C(_OWORD *a1@<X8>)
{
}

void sub_1B6B9413C(__n128 *a1)
{
}

uint64_t sub_1B6B9416C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for MaterialController, (uint64_t)&off_1F0F76D40, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a2);
}

uint64_t sub_1B6B941AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B9459C);
}

void sub_1B6B941DC(_DWORD *a1@<X8>)
{
}

void sub_1B6B941FC(float *a1)
{
}

uint64_t sub_1B6B9422C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for MaterialController, (uint64_t)&off_1F0F76D40, a2);
}

uint64_t sub_1B6B94258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94570);
}

void sub_1B6B94288(_OWORD *a1@<X8>)
{
}

void sub_1B6B942A8(__n128 *a1)
{
}

void sub_1B6B942D8(_OWORD *a1@<X8>)
{
}

void sub_1B6B942F8(__n128 *a1)
{
}

void sub_1B6B94328(float *a1@<X8>)
{
  *a1 = sub_1B6B85694();
}

void sub_1B6B94354(float *a1)
{
}

BOOL sub_1B6B94384@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B6B85BB0();
  *a1 = result;
  return result;
}

void sub_1B6B943B4(float *a1@<X8>)
{
  *a1 = sub_1B6B856A0();
}

void sub_1B6B943E0(float *a1)
{
}

void sub_1B6B94410(_DWORD *a1@<X8>)
{
}

void sub_1B6B94430(float *a1)
{
}

BOOL sub_1B6B94460@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B6B85C70();
  *a1 = result;
  return result;
}

void sub_1B6B94490(_DWORD *a1@<X8>)
{
}

void sub_1B6B944B0(float *a1@<X8>)
{
  *a1 = sub_1B6B85998();
}

void sub_1B6B944DC(float *a1)
{
}

void sub_1B6B94510(int *a1)
{
  int v1 = *a1;
  id v3 = sub_1B6B85408();
  LODWORD(v2) = v1;
  objc_msgSend(v3, sel_setAlphaCutoff_, v2);
}

uint64_t sub_1B6B94570(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66CE0F4);
}

uint64_t sub_1B6B9459C(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CE15C);
}

uint64_t sub_1B6B945C8()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6B945D8()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

void sub_1B6B945E8(void *a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B94608(float *a1)
{
}

uint64_t sub_1B6B94644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for WorldBackgroundController, (uint64_t)&off_1F0F95E18, a2);
}

uint64_t sub_1B6B94670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94774);
}

void sub_1B6B946A0(_OWORD *a1@<X8>)
{
}

void sub_1B6B946B8(double *a1)
{
}

uint64_t sub_1B6B946EC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671167C(a1, v2, (uint64_t)&type metadata for WorldBackgroundController, a2);
}

uint64_t sub_1B6B94718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DBF0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94748);
}

uint64_t sub_1B6B94748(uint64_t a1)
{
  return sub_1B6B94960(a1, (uint64_t (*)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))sub_1B66D2000);
}

uint64_t sub_1B6B94774(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D21EC);
}

void sub_1B6B947A0(void *a1@<X0>, _DWORD *a2@<X8>)
{
}

void sub_1B6B947C0(float *a1)
{
}

uint64_t sub_1B6B947FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for WorldIBLController, (uint64_t)&off_1F0F7BAE0, a2);
}

uint64_t sub_1B6B94828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94990);
}

void sub_1B6B94858(_OWORD *a1@<X8>)
{
}

void sub_1B6B94870(double (*a1)(void)@<X3>, _OWORD *a2@<X8>)
{
  *(double *)&long long v3 = a1();
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
}

void sub_1B6B948A4(double *a1)
{
}

uint64_t sub_1B6B948D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671167C(a1, v2, (uint64_t)&type metadata for WorldIBLController, a2);
}

uint64_t sub_1B6B94904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DBF0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94934);
}

uint64_t sub_1B6B94934(uint64_t a1)
{
  return sub_1B6B94960(a1, (uint64_t (*)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))sub_1B66CED70);
}

uint64_t sub_1B6B94960(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))
{
  return a2(a1, v2[3], v2[4], v2[5], *(__n128 *)v2[2], *(__n128 *)(v2[2] + 16), *(__n128 *)(v2[2] + 32), *(__n128 *)(v2[2] + 48));
}

uint64_t sub_1B6B94990(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66CEF5C);
}

void sub_1B6B949BC(_OWORD *a1@<X8>)
{
  *(double *)&long long v2 = sub_1B6B8AC74();
  *a1 = v2;
}

void sub_1B6B949E8(double *a1)
{
}

uint64_t sub_1B6B94A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for WorldPhysicsController, (uint64_t)&off_1F0F8EA48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9304, a2);
}

uint64_t sub_1B6B94A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94B48);
}

void sub_1B6B94A84(float *a1)
{
}

uint64_t sub_1B6B94AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for WorldPhysicsController, (uint64_t)&off_1F0F8EA48, a2);
}

uint64_t sub_1B6B94AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94B1C);
}

uint64_t sub_1B6B94B1C(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66D0E90);
}

uint64_t sub_1B6B94B48(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D0EF8);
}

uint64_t sub_1B6B94B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E20C(a1, v2, (uint64_t)&type metadata for WorldFogController, (uint64_t)&off_1F0F7B900, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D99D0, a2);
}

uint64_t sub_1B6B94BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2B8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94D20);
}

uint64_t sub_1B6B94BEC@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1B6B8B94C(a1, (SEL *)&selRef_fogStartDistance, a2);
}

void sub_1B6B94C0C(int *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B94C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E504(a1, v2, (uint64_t)&type metadata for WorldFogController, (uint64_t)&off_1F0F7B900, a2);
}

uint64_t sub_1B6B94C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E598(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6B94CC8);
}

uint64_t sub_1B6B94C88@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1B6B8B94C(a1, (SEL *)&selRef_fogEndDistance, a2);
}

void sub_1B6B94CA8(int *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B94CC8(uint64_t a1)
{
  return sub_1B6B94CF4(a1, (uint64_t (*)(uint64_t, void, void, void, float))sub_1B66CEB6C);
}

uint64_t sub_1B6B94CF4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, float))
{
  return a2(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), **(float **)(v2 + 16));
}

uint64_t sub_1B6B94D20(uint64_t a1)
{
  return sub_1B6B94D4C(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CEBD4);
}

uint64_t sub_1B6B94D4C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, __n128))
{
  return a2(a1, v2[3], v2[4], v2[5], *(__n128 *)v2[2]);
}

uint64_t sub_1B6B94D80()
{
  return 40;
}

uint64_t sub_1B6B94D8C()
{
  return swift_bridgeObjectRelease();
}

__n128 sub_1B6B94D94(__n128 *a1, __n128 *a2)
{
  sub_1B674DD54((uint64_t)a1, (uint64_t)a2);
  unint64_t v4 = a1[2].n128_u64[0];
  __n128 result = a1[1];
  a2[1] = result;
  a2[2].n128_u64[0] = v4;
  return result;
}

__n128 sub_1B6B94DD4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)a1;
  *(void *)(a2 + 32) = *(void *)(a1 + 16);
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1B6B94DF0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B66D9054(a1, v2, a2);
}

uint64_t sub_1B6B94DF8(uint64_t result)
{
  return sub_1B66DF868(result);
}

uint64_t sub_1B6B94E00@<X0>(uint64_t a1@<X8>)
{
  return sub_1B6B8E7A0(v1, a1);
}

uint64_t sub_1B6B94E0C(uint64_t a1, uint64_t a2, int *a3)
{
  int v4 = *a3;
  uint64_t v7 = MEMORY[0x1E4FBB470];
  v6[0] = v4;
  (*(void (**)(uint64_t, uint64_t, _DWORD *))(v3 + 16))(a1, a2, v6);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
}

uint64_t sub_1B6B94E5C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B6B72258(a1, a2, v3, a3);
}

uint64_t sub_1B6B94E64()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B6B94E9C()
{
  return sub_1B6B72370(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6B94EA8()
{
  return MEMORY[0x1F4186498](v0, 44, 7);
}

uint64_t sub_1B6B94EB8()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B6B94EC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1B6B94F08()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

void sub_1B6B94F18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B6B94F80()
{
  unint64_t result = qword_1E9DD6690;
  if (!qword_1E9DD6690)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6690);
  }
  return result;
}

uint64_t sub_1B6B94FD8()
{
  return MEMORY[0x1F4186498](v0, 96, 15);
}

uint64_t sub_1B6B94FF0()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 57, 7);
}

uint64_t sub_1B6B95038()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

id sub_1B6B95048(void *a1, uint64_t a2)
{
  return sub_1B6B73CD0(a1, a2, v2);
}

uint64_t sub_1B6B95050()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B95060(uint64_t a1, uint64_t a2)
{
  return sub_1B69F0B28(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

void sub_1B6B95068(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for LightController()
{
  return &type metadata for LightController;
}

ValueMetadata *type metadata accessor for CameraController()
{
  return &type metadata for CameraController;
}

ValueMetadata *type metadata accessor for CameraEffectBloomController()
{
  return &type metadata for CameraEffectBloomController;
}

ValueMetadata *type metadata accessor for CameraEffectToneMappingController()
{
  return &type metadata for CameraEffectToneMappingController;
}

ValueMetadata *type metadata accessor for CameraEffectExposureController()
{
  return &type metadata for CameraEffectExposureController;
}

ValueMetadata *type metadata accessor for CameraEffectLensBlurController()
{
  return &type metadata for CameraEffectLensBlurController;
}

ValueMetadata *type metadata accessor for CameraEffectGrainController()
{
  return &type metadata for CameraEffectGrainController;
}

ValueMetadata *type metadata accessor for CameraEffectMotionBlurController()
{
  return &type metadata for CameraEffectMotionBlurController;
}

ValueMetadata *type metadata accessor for CameraEffectDepthOfFieldController()
{
  return &type metadata for CameraEffectDepthOfFieldController;
}

ValueMetadata *type metadata accessor for CameraEffectChromaticTransformController()
{
  return &type metadata for CameraEffectChromaticTransformController;
}

ValueMetadata *type metadata accessor for CameraEffectDoughnutBokehController()
{
  return &type metadata for CameraEffectDoughnutBokehController;
}

uint64_t destroy for CameraEffectSSAOController()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CameraEffectSSAOController(void *a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyInit();
  uint64_t v5 = a2[2];
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = v5;
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CameraEffectSSAOController(void *a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CameraEffectSSAOController(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeInit();
  *(void *)(v4 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

void *assignWithTake for CameraEffectSSAOController(void *a1, uint64_t a2)
{
  *(_OWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_OWORD *)(a2 + 8);
  a1[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  uint64_t v4 = *(void *)(a2 + 48);
  a1[5] = *(void *)(a2 + 40);
  a1[6] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CameraEffectSSAOController()
{
  return &type metadata for CameraEffectSSAOController;
}

ValueMetadata *type metadata accessor for ParametricModelController()
{
  return &type metadata for ParametricModelController;
}

uint64_t _s3VFX16CameraControllerVwxx_0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s3VFX16CameraControllerVwcp_0(void *a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyInit();
  uint64_t v5 = a2[2];
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = v5;
  uint64_t v6 = (void *)a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a2[6];
  a1[5] = v7;
  a1[6] = v8;
  swift_bridgeObjectRetain();
  id v9 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s3VFX16CameraControllerVwca_0(void *a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)a1[4];
  uint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  id v7 = v6;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s3VFX16CameraControllerVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  *(void *)(v3 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(v3 + 32) = *(void *)(a2 + 32);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v3 + 40) = result;
  return result;
}

void *_s3VFX16CameraControllerVwta_0(void *a1, uint64_t a2)
{
  *(_OWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_OWORD *)(a2 + 8);
  a1[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  a1[4] = *(void *)(a2 + 32);

  uint64_t v5 = *(void *)(a2 + 48);
  a1[5] = *(void *)(a2 + 40);
  a1[6] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s3VFX16CameraControllerVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B6B955C4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhysicsBodyController()
{
  return &type metadata for PhysicsBodyController;
}

ValueMetadata *type metadata accessor for ForceFieldsController()
{
  return &type metadata for ForceFieldsController;
}

uint64_t destroy for MaterialController(id *a1)
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MaterialController(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *a1 = *(void *)a2;
  id v5 = v4;
  swift_unknownObjectWeakCopyInit();
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  id v7 = *(void **)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  a1[6] = v8;
  a1[7] = v9;
  swift_bridgeObjectRetain();
  id v10 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MaterialController(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 40);
  uint64_t v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v8;
  id v9 = v8;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MaterialController(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MaterialController(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MaterialController(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 16) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)(a1 + 8) & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MaterialController(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      *(void *)(result + 16) = 1;
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterialController()
{
  return &type metadata for MaterialController;
}

void destroy for ModelController(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  int v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for ModelController(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *a1 = *(void *)a2;
  id v5 = v4;
  swift_unknownObjectWeakCopyInit();
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for ModelController(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v8;
  id v9 = v8;

  return a1;
}

uint64_t initializeWithTake for ModelController(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for ModelController(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for ModelController(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 16) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)(a1 + 8) & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelController(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      *(void *)(result + 16) = 1;
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelController()
{
  return &type metadata for ModelController;
}

ValueMetadata *type metadata accessor for WorldBackgroundController()
{
  return &type metadata for WorldBackgroundController;
}

ValueMetadata *type metadata accessor for WorldIBLController()
{
  return &type metadata for WorldIBLController;
}

ValueMetadata *type metadata accessor for WorldPhysicsController()
{
  return &type metadata for WorldPhysicsController;
}

uint64_t destroy for WorldFogController()
{
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

uint64_t _s3VFX22VFXBridgeableReferenceVwcp_0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyInit();
  uint64_t v5 = a2[2];
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = v5;
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s3VFX22VFXBridgeableReferenceVwca_0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for WorldFogController(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = (__n128 *)swift_unknownObjectWeakTakeInit();
  v3->n128_u64[1] = a2->n128_u64[1];
  __n128 result = a2[1];
  v3[1] = result;
  return result;
}

uint64_t _s3VFX22VFXBridgeableReferenceVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s3VFX22VFXBridgeableReferenceVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B6B95D90(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorldFogController()
{
  return &type metadata for WorldFogController;
}

void _s3VFX15LightControllerVwxx_0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  int v2 = *(void **)(a1 + 32);
}

uint64_t _s3VFX15LightControllerVwcp_0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyInit();
  uint64_t v5 = a2[2];
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = v5;
  uint64_t v6 = a2[3];
  uint64_t v7 = (void *)a2[4];
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  id v8 = v7;
  return a1;
}

uint64_t _s3VFX15LightControllerVwca_0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = (void *)a2[4];
  *(void *)(a1 + 32) = v6;
  id v7 = v6;

  return a1;
}

uint64_t _s3VFX15LightControllerVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for MorpherController()
{
  return &type metadata for MorpherController;
}

uint64_t sub_1B6B95F3C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B95F74(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B95FAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B95FE4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B9601C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B96054(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B9608C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B960C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B960FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B96134(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1B6B9616C(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1B6B961A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B961DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1B6B96214(uint64_t a1, void *a2)
{
  return a2;
}

void *sub_1B6B9624C(uint64_t a1, void *a2)
{
  return a2;
}

void *sub_1B6B96284(void *a1, void *a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = a1[2];
  a2[1] = a1[1];
  a2[2] = v4;
  a2[3] = a1[3];
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1B6B962CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B9631C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B6B963E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  id v10 = (void **)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (id *)((v8 + 17) & 0xFFFFFFFFFFFFFFF8);
  id v12 = *v11;
  id v13 = *v11;
  uint64_t v14 = *v10;
  *id v10 = v12;

  uint64_t v15 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B6B964E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  id v10 = (void *)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((v8 + 17) & 0xFFFFFFFFFFFFFFF8);
  *id v10 = *v11;
  id v12 = (_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v13 = (_OWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v12 = *v13;
  *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B6B965A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  id v10 = (void **)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void **)((v8 + 17) & 0xFFFFFFFFFFFFFFF8);
  id v12 = *v10;
  *id v10 = *v11;

  id v13 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B6B96694(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B6B96808);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1B6B9681C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8)
                              + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *uint64_t v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[1] = a2 - 1;
              }
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((v9 + 7) & 0xFFFFFFF8) + 17) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((((v9 + 7) & 0xFFFFFFF8) + 17) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((((v9 + 7) & 0xFFFFFFF8) + 17) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1B6B96A30);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ScriptCompileAttempt()
{
  return sub_1B62C36EC();
}

int *sub_1B6B96A70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(void))(*(void *)(a1 + 8) + 8))();
  uint64_t result = (int *)type metadata accessor for ScriptCompileAttempt();
  uint64_t v4 = a2 + result[9];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  *(unsigned char *)(a2 + result[10]) = 0;
  *(void *)(a2 + result[11]) = 0;
  unsigned int v5 = (void *)(a2 + result[12]);
  void *v5 = 0;
  v5[1] = 0xE000000000000000;
  *(void *)(a2 + result[13]) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1B6B96B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(a3 + 24) + 192))(a1, a2, *(void *)(a3 + 16));
}

int *sub_1B6B96B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B96A70(*(void *)(a1 + 24), a2);
}

uint64_t sub_1B6B96B34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6B480B8(*a1, *a2);
}

uint64_t sub_1B6B96B40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B97FEC();
  *a1 = result;
  return result;
}

void sub_1B6B96B70(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x676E696E726177;
  if (v2 != 1)
  {
    uint64_t v5 = 1702129518;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x726F727265;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B6B96BC4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B96C5C()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B96CE0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B96D74()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B96DD0()
{
  return sub_1B6E33928();
}

uint64_t sub_1B6B96E0C()
{
  return sub_1B6E33988();
}

BOOL sub_1B6B96E64(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double sub_1B6B96E7C()
{
  sub_1B6B97A2C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77D10;
  id v1 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id v2 = sub_1B6B9705C(0xD00000000000003ALL, 0x80000001B6F4B880, 16);
  *(void *)(v0 + 32) = 0xD00000000000003ALL;
  *(void *)(v0 + 40) = 0x80000001B6F4B880;
  *(void *)(v0 + 48) = 3;
  *(unsigned char *)(v0 + 56) = 0;
  *(_OWORD *)(v0 + 64) = xmmword_1B6EADE30;
  *(unsigned char *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 2;
  *(unsigned char *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 4;
  *(unsigned char *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = v2;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id v4 = sub_1B6B9705C(0xD00000000000001FLL, 0x80000001B6F4B8E0, 16);
  *(void *)(v0 + 128) = 0xD00000000000001FLL;
  *(void *)(v0 + 136) = 0x80000001B6F4B8E0;
  *(void *)(v0 + 144) = 3;
  *(unsigned char *)(v0 + 152) = 0;
  *(_OWORD *)(v0 + 160) = xmmword_1B6E72AD0;
  *(unsigned char *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 2;
  *(unsigned char *)(v0 + 192) = 0;
  *(void *)(v0 + 200) = 0;
  *(unsigned char *)(v0 + 208) = 1;
  *(void *)(v0 + 216) = v4;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id v6 = sub_1B6B9705C(0xD000000000000013, 0x80000001B6F4B900, 16);
  *(void *)(v0 + 224) = 0xD000000000000013;
  *(void *)(v0 + 232) = 0x80000001B6F4B900;
  *(void *)(v0 + 240) = 1;
  *(unsigned char *)(v0 + 248) = 0;
  *(void *)&double result = 2;
  *(_OWORD *)(v0 + 256) = xmmword_1B6E78210;
  *(unsigned char *)(v0 + 272) = 1;
  *(void *)(v0 + 280) = 0;
  *(unsigned char *)(v0 + 288) = 1;
  *(void *)(v0 + 296) = 0;
  *(unsigned char *)(v0 + 304) = 1;
  *(void *)(v0 + 312) = v6;
  off_1E9DD66F0 = (_UNKNOWN *)v0;
  return result;
}

id sub_1B6B9705C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  id v5 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1B6E30D78();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1B6B97138()
{
  sub_1B633AF88();
  uint64_t v0 = sub_1B6E325F8();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    id v3 = (void *)(v0 + 40);
    while ((*(v3 - 1) != 0xD00000000000001CLL || *v3 != 0x80000001B6F35960) && (sub_1B6E334B8() & 1) == 0)
    {
      ++v2;
      v3 += 2;
      if (v1 == v2) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    return v2 + 2;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
}

void *sub_1B6B97234(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  sub_1B633AF88();
  uint64_t v68 = *(void *)(sub_1B6E325F8() + 16);
  if (v68)
  {
    uint64_t v5 = 0;
    BOOL v65 = (a4 & 1) == 0;
    id v6 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v7 = qword_1E9DCC670;
      swift_bridgeObjectRetain();
      if (v7 != -1) {
        swift_once();
      }
      id v8 = off_1E9DD66F0;
      uint64_t v9 = *((void *)off_1E9DD66F0 + 2);
      if (v9) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v5 == v68)
      {
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
    }
    uint64_t v69 = v5;
    v70 = v6;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    v80 = v8;
    while (1)
    {
      uint64_t v72 = *(void *)&v8[v10 + 48];
      int v71 = v8[v10 + 56];
      uint64_t v75 = *(void *)&v8[v10 + 72];
      uint64_t v76 = *(void *)&v8[v10 + 64];
      char v78 = v8[v10 + 80];
      uint64_t v74 = *(void *)&v8[v10 + 88];
      char v73 = v8[v10 + 96];
      uint64_t v11 = *(void *)&v8[v10 + 104];
      char v12 = v8[v10 + 112];
      int v13 = *(void **)&v8[v10 + 120];
      swift_bridgeObjectRetain();
      id v14 = v13;
      int v15 = (void *)sub_1B6E31768();
      sub_1B6B97974();
      sub_1B6B979D4();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1B6E32388();
      id v18 = objc_msgSend(v14, sel_firstMatchInString_options_range_, v15, 0, v16, v17);

      if (v18) {
        break;
      }

      swift_bridgeObjectRelease();
      v10 += 96;
      --v9;
      id v8 = v80;
      if (!v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v6 = v70;
        goto LABEL_42;
      }
    }
    char v67 = v12;
    uint64_t v66 = v11;
    v82 = v14;
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_rangeAtIndex_, v76);
    sub_1B6E320D8();
    uint64_t v19 = sub_1B6E31A78();
    uint64_t v20 = MEMORY[0x1BA9B34C0](v19);
    uint64_t v81 = v21;
    swift_bridgeObjectRelease();
    if (v78)
    {
      uint64_t v22 = 0;
      int v23 = 1;
    }
    else
    {
      objc_msgSend(v18, sel_rangeAtIndex_, v75);
      sub_1B6E320D8();
      uint64_t v24 = sub_1B6E31A78();
      uint64_t v25 = MEMORY[0x1BA9B34C0](v24);
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_1B6A032AC(v25, v27);
      int v23 = v28 & 1;
    }
    int v79 = v23;
    uint64_t v29 = v20;
    if (v73)
    {
      uint64_t v30 = 0;
      int v31 = 1;
    }
    else
    {
      objc_msgSend(v18, sel_rangeAtIndex_, v74);
      sub_1B6E320D8();
      uint64_t v32 = sub_1B6E31A78();
      uint64_t v33 = MEMORY[0x1BA9B34C0](v32);
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_1B6A032AC(v33, v35);
      int v31 = v36 & 1;
    }
    int v77 = v31;
    if (v67)
    {
      uint64_t v37 = 0;
      int v38 = 1;
    }
    else
    {
      objc_msgSend(v18, sel_rangeAtIndex_, v66);
      sub_1B6E320D8();
      uint64_t v39 = sub_1B6E31A78();
      uint64_t v40 = MEMORY[0x1BA9B34C0](v39);
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_1B6A032AC(v40, v42);
      int v38 = v43 & 1;
    }
    if (v71)
    {
      swift_bridgeObjectRelease();
      char v44 = 0;
LABEL_27:
      int v49 = v77;
      goto LABEL_28;
    }
    objc_msgSend(v18, sel_rangeAtIndex_, v72);
    sub_1B6E320D8();
    uint64_t v45 = sub_1B6E31A78();
    uint64_t v46 = MEMORY[0x1BA9B34C0](v45);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v46 == 0x676E696E726177 && v48 == 0xE700000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      char v44 = 1;
      goto LABEL_27;
    }
    if (v46 == 1702129518 && v48 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      int v49 = v77;
    }
    else
    {
      char v56 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      char v44 = 0;
      int v49 = v77;
      if ((v56 & 1) == 0) {
        goto LABEL_28;
      }
    }
    char v44 = 2;
LABEL_28:
    if (v79) {
      uint64_t v50 = 1;
    }
    else {
      uint64_t v50 = v22;
    }
    uint64_t v51 = v65 + v50;
    if (v65 + v50 <= 1) {
      uint64_t v51 = 1;
    }
    if (v38) {
      uint64_t v37 = v51;
    }
    id v6 = v70;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (v49) {
      uint64_t v30 = 1;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v6 = sub_1B68C4B90(0, v70[2] + 1, 1, v70);
    }
    unint64_t v54 = v6[2];
    unint64_t v53 = v6[3];
    if (v54 >= v53 >> 1) {
      id v6 = sub_1B68C4B90(v53 > 1, v54 + 1, 1, v6);
    }
    v6[2] = v54 + 1;
    v55 = &v6[7 * v54];
    v55[4] = v37;
    v55[5] = v30;
    v55[6] = v50;
    v55[7] = v30;
    *((unsigned char *)v55 + 64) = v44;
    v55[9] = v29;
    v55[10] = v81;

    swift_bridgeObjectRelease();
LABEL_42:
    uint64_t v5 = v69;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  id v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_50:
  uint64_t v57 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v57 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v57 && !v6[2])
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v6 = sub_1B68C4B90(0, 1, 1, v6);
    }
    unint64_t v59 = v6[2];
    unint64_t v58 = v6[3];
    if (v59 >= v58 >> 1) {
      id v6 = sub_1B68C4B90(v58 > 1, v59 + 1, 1, v6);
    }
    v6[2] = v59 + 1;
    int64x2_t v60 = vdupq_n_s64(1uLL);
    v61 = (int64x2_t *)&v6[7 * v59];
    v61[2] = v60;
    v61[3] = v60;
    v61[4].i8[0] = 0;
    v61[4].i64[1] = a1;
    v61[5].i64[0] = a2;
  }
  return v6;
}

void sub_1B6B97974()
{
  if (!qword_1E9DD66F8)
  {
    unint64_t v0 = sub_1B6E320E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD66F8);
    }
  }
}

unint64_t sub_1B6B979D4()
{
  unint64_t result = qword_1E9DD6700;
  if (!qword_1E9DD6700)
  {
    sub_1B6B97974();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6700);
  }
  return result;
}

void sub_1B6B97A2C()
{
  if (!qword_1E9DD6708)
  {
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6708);
    }
  }
}

void destroy for DiagnosticsFormat(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 88);
}

uint64_t initializeWithCopy for DiagnosticsFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v5 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for DiagnosticsFormat(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  id v8 = *(void **)(a2 + 88);
  uint64_t v9 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = v8;
  id v10 = v8;

  return a1;
}

uint64_t assignWithTake for DiagnosticsFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v6 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  return a1;
}

uint64_t getEnumTagSinglePayload for DiagnosticsFormat(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiagnosticsFormat(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticsFormat()
{
  return &type metadata for DiagnosticsFormat;
}

uint64_t destroy for ScriptDiagnostic()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScriptDiagnostic(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScriptDiagnostic(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScriptDiagnostic(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ScriptDiagnostic()
{
  return &type metadata for ScriptDiagnostic;
}

unsigned char *storeEnumTagSinglePayload for ScriptDiagnostic.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B97EF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptDiagnostic.Kind()
{
  return &type metadata for ScriptDiagnostic.Kind;
}

ValueMetadata *type metadata accessor for ScriptDiagnostic.SourceLocation()
{
  return &type metadata for ScriptDiagnostic.SourceLocation;
}

unint64_t sub_1B6B97F40()
{
  unint64_t result = qword_1E9DD6710;
  if (!qword_1E9DD6710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6710);
  }
  return result;
}

unint64_t sub_1B6B97F98()
{
  unint64_t result = qword_1E9DD6718;
  if (!qword_1E9DD6718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6718);
  }
  return result;
}

uint64_t sub_1B6B97FEC()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6B98038(void *a1, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    goto LABEL_8;
  }
  uint64_t v5 = a3;
  if (!a3) {
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)(v3 + 16);
  if (!*(void *)(v6 + 16))
  {
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_11;
  }
  uint64_t v7 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = 1;
  for (uint64_t i = 88; ; i += 64)
  {
    uint64_t v11 = *(void *)(v6 + i - 48);
    uint64_t v12 = *(void *)(v6 + i - 8);
    uint64_t v13 = *(void *)(v3 + 24) + v8;
    char v14 = *(unsigned char *)(v13 + 96);
    char v22 = *(unsigned char *)(v6 + i);
    long long v15 = *(_OWORD *)(v6 + i - 40);
    long long v16 = *(_OWORD *)(v6 + i - 24);
    long long v17 = *(_OWORD *)(v13 + 32);
    long long v18 = *(_OWORD *)(v13 + 48);
    long long v19 = *(_OWORD *)(v13 + 64);
    long long v20 = *(_OWORD *)(v13 + 80);
    *(void *)uint64_t v7 = *(void *)(v6 + i - 56);
    *(void *)(v7 + 8) = v11;
    *(_OWORD *)(v7 + 16) = v15;
    *(_OWORD *)(v7 + 32) = v16;
    *(void *)(v7 + 48) = v12;
    *(unsigned char *)(v7 + 56) = v22;
    *(_OWORD *)(v7 + 64) = v17;
    *(_OWORD *)(v7 + 80) = v18;
    *(_OWORD *)(v7 + 96) = v19;
    *(_OWORD *)(v7 + 112) = v20;
    *(unsigned char *)(v7 + 128) = v14;
    if (v5 == v9)
    {
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    uint64_t v6 = *(void *)(v3 + 16);
    if (v9 == *(void *)(v6 + 16)) {
      break;
    }
    v7 += 144;
    ++v9;
    swift_bridgeObjectRetain();
    v8 += 80;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = v9;
LABEL_11:
  *a1 = v3;
  a1[1] = v5;
  return v5;
}

uint64_t sub_1B6B9813C(void *a1, unsigned char *a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  if (!a2)
  {
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  if (!a3) {
    goto LABEL_8;
  }
  uint64_t v5 = a5;
  if (!a5) {
    goto LABEL_10;
  }
  *a2 = *a4 & 1;
  if (a3 == 1)
  {
LABEL_8:
    uint64_t v5 = a3;
    goto LABEL_10;
  }
  uint64_t v6 = 1;
  while (a5 != v6)
  {
    a2[v6] = (*(void *)&a4[8 * (v6 >> 6)] >> v6) & 1;
    if (a3 == ++v6) {
      goto LABEL_8;
    }
  }
  uint64_t v5 = a5;
LABEL_10:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = v5;
  return v5;
}

uint64_t sub_1B6B981B4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1B6E32C18();
    if (v3) {
      goto LABEL_3;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_27;
  }
LABEL_3:
  uint64_t v4 = 0;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1BA9B4580](v4, a1);
    }
    else {
      id v6 = *(id *)(a1 + 8 * v4 + 32);
    }
    uint64_t v7 = v6;
    id v18 = v6;
    sub_1B6B9CEA0(&v18, &v17);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return (uint64_t)v5;
    }

    uint64_t v8 = v17;
    uint64_t v9 = *(void *)(v17 + 16);
    uint64_t v10 = v5[2];
    uint64_t v11 = v10 + v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v11 <= v5[3] >> 1)
    {
      if (!*(void *)(v8 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v10 <= v11) {
        uint64_t v13 = v10 + v9;
      }
      else {
        uint64_t v13 = v10;
      }
      uint64_t v5 = sub_1B68C4E38(isUniquelyReferenced_nonNull_native, v13, 1, v5);
      if (!*(void *)(v8 + 16)) {
        goto LABEL_4;
      }
    }
    unint64_t v14 = (unint64_t)&v5[8 * v5[2] + 4];
    if (v8 + 32 < v14 + (v9 << 6) && v14 < v8 + 32 + (v9 << 6))
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v9) {
      v5[2] += v9;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    ++v4;
  }
  while (v3 != v4);
  swift_bridgeObjectRelease();
  return (uint64_t)v5;
}

uint64_t sub_1B6B983D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1B6BA2634();

  return v4;
}

void sub_1B6B98418(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (void *)(v5 + 32);
    uint64_t v11 = 96;
    while (1)
    {
      BOOL v12 = *v10 == a1 && v10[1] == a2;
      if (v12 || (sub_1B6E334B8() & 1) != 0) {
        break;
      }
      ++v9;
      v11 += 80;
      v10 += 8;
      if (v6 == v9) {
        goto LABEL_9;
      }
    }
    uint64_t v13 = *(void *)(v3 + 24);
    if (v9 >= *(void *)(v13 + 16))
    {
      sub_1B6B9A9D4((uint64_t *)a3);
    }
    else
    {
      unint64_t v14 = (char *)(v13 + v11);
      uint64_t v15 = *((void *)v14 - 8);
      if (*v14 < 0)
      {
        *(void *)(a3 + 24) = &type metadata for Entity;
        *(void *)a3 = v15;
      }
      else
      {
        sub_1B6790258((uint64_t *)a3);
      }
    }
  }
  else
  {
LABEL_9:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
}

uint64_t sub_1B6B98550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1B62CAAD8(a3, (uint64_t)v45);
  sub_1B6D031A4((uint64_t)v45, (uint64_t)v40);
  sub_1B6BA27CC((uint64_t)v40, (uint64_t)v41, &qword_1E9DD85C0, (uint64_t)&type metadata for ShaderParameter);
  if (v41[64] > 0xEFu)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&v45[0] = 0;
    *((void *)&v45[0] + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E32B18();
    sub_1B6E31948();
    sub_1B6E31948();
    long long v7 = v45[0];
    int v8 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&v45[0] = 0;
    swift_retain();
    sub_1B6B33E34(v8, (uint64_t *)v45, v7, *((uint64_t *)&v7 + 1));
    swift_release();
    goto LABEL_25;
  }
  sub_1B634F71C((uint64_t)v41, (uint64_t)v42);
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t result = sub_1B6BA214C(*(void *)(v4 + 16), a1, a2);
  if (v11) {
    return result;
  }
  uint64_t v12 = result;
  sub_1B634F71C((uint64_t)v42, (uint64_t)v43);
  if (v44 < 0)
  {
    v44 &= ~0x80u;
    if (*(unsigned char *)(v9 + (v12 << 6) + 88) != 1)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      *(void *)&v45[0] = 0;
      *((void *)&v45[0] + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      v48[0] = v45[0];
      sub_1B6E31948();
      uint64_t v26 = *(void *)(v4 + 16) + (v12 << 6);
      uint64_t v27 = *(void *)(v26 + 40);
      uint64_t v28 = *(void *)(v26 + 80);
      char v29 = *(unsigned char *)(v26 + 88);
      long long v30 = *(_OWORD *)(v26 + 48);
      long long v31 = *(_OWORD *)(v26 + 64);
      *(void *)&v45[0] = *(void *)(v26 + 32);
      *((void *)&v45[0] + 1) = v27;
      v45[1] = v30;
      v45[2] = v31;
      uint64_t v46 = v28;
      char v47 = v29;
      sub_1B6E32B18();
      uint64_t v20 = *((void *)&v48[0] + 1);
      uint64_t v21 = *(void *)&v48[0];
      int v22 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&v45[0] = 0;
      swift_retain();
      int v23 = (uint64_t *)v45;
      goto LABEL_24;
    }
  }
  else
  {
    sub_1B62D6998((uint64_t)v43, (uint64_t)v45);
    uint64_t v13 = (_OWORD *)(v9 + (v12 << 6));
    v48[0] = v13[2];
    v48[1] = v13[3];
    v49[0] = v13[4];
    *(_OWORD *)((char *)v49 + 9) = *(_OWORD *)((char *)v13 + 73);
    if (!sub_1B6790594((uint64_t)v48))
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      uint64_t v38 = 0;
      unint64_t v39 = 0xE000000000000000;
      sub_1B62D5A28();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v14 = *(void *)(v4 + 16) + (v12 << 6);
      unint64_t v15 = *(void *)(v14 + 40);
      uint64_t v16 = *(void *)(v14 + 80);
      char v17 = *(unsigned char *)(v14 + 88);
      long long v18 = *(_OWORD *)(v14 + 48);
      long long v19 = *(_OWORD *)(v14 + 64);
      uint64_t v32 = *(void *)(v14 + 32);
      unint64_t v33 = v15;
      long long v34 = v18;
      long long v35 = v19;
      uint64_t v36 = v16;
      char v37 = v17;
      sub_1B6E32B18();
      uint64_t v21 = 0;
      uint64_t v20 = 0xE000000000000000;
      int v22 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v32 = 0;
      swift_retain();
      int v23 = &v32;
LABEL_24:
      sub_1B6B33E34(v22, v23, v21, v20);
      swift_release();
LABEL_25:
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  uint64_t v24 = *(char **)(v4 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 24) = v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v24 = sub_1B6C16784((uint64_t)v24);
  }
  uint64_t result = sub_1B634F71C((uint64_t)v42, (uint64_t)&v24[80 * v12 + 32]);
  *(void *)(v4 + 24) = v24;
  return result;
}

uint64_t sub_1B6B98A6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3D76C(0, v2, 0);
    uint64_t v4 = v1 + 64;
    while (1)
    {
      uint64_t v5 = *(void *)(v4 - 32);
      uint64_t v6 = *(void *)(v4 - 24);
      if (*(unsigned char *)(v4 + 24) == 1)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v7 = 8;
        int v8 = &type metadata for Entity;
      }
      else
      {
        uint64_t v9 = *(void *)v4;
        sub_1B6BBC964(*(void *)v4);
        int v8 = v10;
        if (v9 == 3)
        {
          *(void *)&v17[0] = v5;
          *((void *)&v17[0] + 1) = v6;
          sub_1B633AF88();
          swift_bridgeObjectRetain_n();
          if ((sub_1B6E32648() & 1) == 0) {
            goto LABEL_14;
          }
          uint64_t v7 = 3;
        }
        else
        {
          if (v9 != 6)
          {
            swift_bridgeObjectRetain_n();
LABEL_14:
            uint64_t v7 = 1;
            goto LABEL_15;
          }
          *(void *)&v17[0] = v5;
          *((void *)&v17[0] + 1) = v6;
          sub_1B633AF88();
          swift_bridgeObjectRetain_n();
          if (sub_1B6E32648())
          {
            uint64_t v7 = 6;
          }
          else
          {
            *(void *)&v17[0] = v5;
            *((void *)&v17[0] + 1) = v6;
            if ((sub_1B6E32648() & 1) == 0) {
              goto LABEL_14;
            }
            uint64_t v7 = 7;
          }
        }
      }
LABEL_15:
      memset(v17, 0, sizeof(v17));
      uint64_t v11 = sub_1B62B2E34((uint64_t)v8, (uint64_t)v17, v5, v6, 0, 1, 0, 1, 0, 1, v7, 0, 0, 0, 0, (uint64_t)&type metadata for Material, (uint64_t)v8, (uint64_t)&off_1F0FA6600);
      sub_1B62B32CC((uint64_t)v17);
      swift_bridgeObjectRelease();
      uint64_t v3 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D76C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v18;
      }
      unint64_t v13 = *(void *)(v3 + 16);
      unint64_t v12 = *(void *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3D76C(v12 > 1, v13 + 1, 1);
        uint64_t v3 = v18;
      }
      *(void *)(v3 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v3 + 24 * v13);
      v14[4] = v5;
      v14[5] = v6;
      v14[6] = v11;
      v4 += 64;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v15 = sub_1B6BA2230(v3);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B6B98D5C(uint64_t a1, uint64_t a2, ValueMetadata *a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v10 = v4 + 64;
  for (uint64_t i = 96; ; i += 80)
  {
    BOOL v12 = *(void *)(v10 - 32) == a1 && *(void *)(v10 - 24) == a2;
    if (v12 || (sub_1B6E334B8() & 1) != 0) {
      break;
    }
    ++v9;
    v10 += 64;
    if (v5 == v9) {
      return 0;
    }
  }
  if (*(unsigned char *)(v10 + 24)) {
    unint64_t v13 = &type metadata for Entity;
  }
  else {
    sub_1B6BBC964(*(void *)v10);
  }
  if (v13 == (ValueMetadata *)(MEMORY[0x1E4FBC848] + 8)) {
    return 0;
  }
  if (*(unsigned char *)(v10 + 24))
  {
    if (&type metadata for Entity == a3) {
      goto LABEL_18;
    }
    return 0;
  }
  sub_1B6BBC964(*(void *)v10);
  if (v14 != a3) {
    return 0;
  }
LABEL_18:
  uint64_t v15 = *(void *)(v3 + 24);
  if (v9 >= *(void *)(v15 + 16)) {
    return 0;
  }
  uint64_t v16 = v15 + i;
  int v17 = *(char *)(v15 + i);
  if (v17 < 0) {
    return 0;
  }
  long long v18 = *(_OWORD *)(v16 - 48);
  v24[0] = *(_OWORD *)(v16 - 64);
  v24[1] = v18;
  long long v19 = *(_OWORD *)(v16 - 16);
  v24[2] = *(_OWORD *)(v16 - 32);
  v24[3] = v19;
  char v25 = v17;
  uint64_t v23 = 0;
  sub_1B679019C((uint64_t)v24, &v23);
  if (v23 < 1) {
    return 0;
  }
  uint64_t v20 = *(char **)(v3 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 24) = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v20 = sub_1B6C16784((uint64_t)v20);
  }
  uint64_t result = (uint64_t)&v20[i - 64];
  *(void *)(v3 + 24) = v20;
  return result;
}

uint64_t sub_1B6B98ED8(uint64_t a1)
{
  sub_1B6BA284C();
  uint64_t v159 = v2;
  MEMORY[0x1F4188790](v2, v3);
  v158 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v149 = (uint64_t)&v128 - v7;
  sub_1B6BA3C28(0, &qword_1EB980868, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBD80]);
  uint64_t v9 = v8;
  uint64_t v134 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  v148 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v13);
  v133 = (char *)&v128 - v14;
  MEMORY[0x1F4188790](v15, v16);
  v132 = (char *)&v128 - v17;
  int64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v150 = v20;
  uint64_t v131 = a1;
  if (v18)
  {
    *(void *)&v171[0] = MEMORY[0x1E4FBC860];
    sub_1B6C3D78C(0, v18, 0);
    uint64_t v19 = *(void *)&v171[0];
    uint64_t v21 = (unsigned __int8 *)(a1 + 88);
    do
    {
      uint64_t v22 = *((void *)v21 - 7);
      uint64_t v23 = *((void *)v21 - 6);
      uint64_t v25 = *((void *)v21 - 4);
      uint64_t v24 = *((void *)v21 - 3);
      v161 = (char **)*((void *)v21 - 2);
      uint64_t v162 = v24;
      uint64_t v160 = *((void *)v21 - 1);
      LODWORD(v163) = *v21;
      *(void *)&v171[0] = v19;
      unint64_t v27 = *(void *)(v19 + 16);
      unint64_t v26 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain();
      if (v27 >= v26 >> 1)
      {
        sub_1B6C3D78C(v26 > 1, v27 + 1, 1);
        uint64_t v19 = *(void *)&v171[0];
      }
      *(void *)(v19 + 16) = v27 + 1;
      uint64_t v28 = v19 + (v27 << 6);
      *(void *)(v28 + 32) = v22;
      *(void *)(v28 + 40) = v23;
      *(void *)(v28 + 48) = -1;
      *(void *)(v28 + 56) = v25;
      char v29 = v161;
      *(void *)(v28 + 64) = v162;
      *(void *)(v28 + 72) = v29;
      *(void *)(v28 + 80) = v160;
      v21 += 64;
      *(unsigned char *)(v28 + 88) = v163;
      --v18;
    }
    while (v18);
    uint64_t v9 = v150;
  }
  uint64_t v30 = *(void *)(v135 + 16);
  int64_t v31 = *(void *)(v30 + 16);
  uint64_t v32 = MEMORY[0x1E4FBC860];
  if (v31)
  {
    uint64_t v157 = v19;
    *(void *)&v171[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3D78C(0, v31, 0);
    uint64_t v32 = *(void *)&v171[0];
    uint64_t v156 = v30;
    unint64_t v33 = (unsigned __int8 *)(v30 + 88);
    do
    {
      uint64_t v34 = *((void *)v33 - 7);
      uint64_t v35 = *((void *)v33 - 6);
      uint64_t v36 = *((void *)v33 - 4);
      uint64_t v37 = *((void *)v33 - 2);
      v161 = (char **)*((void *)v33 - 3);
      uint64_t v162 = v36;
      uint64_t v160 = *((void *)v33 - 1);
      LODWORD(v163) = *v33;
      *(void *)&v171[0] = v32;
      unint64_t v39 = *(void *)(v32 + 16);
      unint64_t v38 = *(void *)(v32 + 24);
      swift_bridgeObjectRetain();
      if (v39 >= v38 >> 1)
      {
        sub_1B6C3D78C(v38 > 1, v39 + 1, 1);
        uint64_t v32 = *(void *)&v171[0];
      }
      *(void *)(v32 + 16) = v39 + 1;
      uint64_t v40 = v32 + (v39 << 6);
      *(void *)(v40 + 32) = v34;
      *(void *)(v40 + 40) = v35;
      uint64_t v41 = v162;
      *(void *)(v40 + 48) = -1;
      *(void *)(v40 + 56) = v41;
      *(void *)(v40 + 64) = v161;
      *(void *)(v40 + 72) = v37;
      *(void *)(v40 + 80) = v160;
      v33 += 64;
      *(unsigned char *)(v40 + 88) = v163;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v9 = v150;
    uint64_t v19 = v157;
  }
  *(void *)&v171[0] = v19;
  v170[0] = v32;
  unint64_t v42 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1B6BA3C28(0, &qword_1EB980218, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBB320]);
  sub_1B6BA2908(&qword_1EB980220, &qword_1EB980218, v42);
  sub_1B6E31628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6BA2958();
  char v43 = v133;
  sub_1B6E32C98();
  v136 = sub_1B67F43D8(MEMORY[0x1E4FBC860]);
  uint64_t v44 = v134;
  uint64_t v45 = (uint64_t)v158;
  v146 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  uint64_t v147 = v134 + 16;
  v146(v158, v43, v9);
  uint64_t v46 = sub_1B6BA2908(&qword_1EB980860, &qword_1EB980868, MEMORY[0x1E4FBBD80]);
  sub_1B6E31F98();
  uint64_t v47 = v159;
  *(void *)(v45 + *(int *)(v159 + 36)) = *(void *)&v171[0];
  uint64_t v48 = v149;
  sub_1B6BA29AC(v45, v149);
  int v49 = (uint64_t *)(v48 + *(int *)(v47 + 36));
  uint64_t v50 = *v49;
  sub_1B6E31FE8();
  if (v50 == v166[0])
  {
LABEL_14:
    uint64_t v51 = v131;
LABEL_15:
    sub_1B6BA2A20(v48);
    *(void *)(v135 + 16) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v52 = v132;
    sub_1B6E31F98();
    sub_1B6E31FE8();
    uint64_t v53 = sub_1B6E31FD8();
    unint64_t v54 = *(void (**)(char *, uint64_t))(v134 + 8);
    v54(v133, v9);
    v54(v52, v9);
    swift_bridgeObjectRelease();
    return v53 > 0;
  }
  v161 = (char **)(v135 + 24);
  v143 = (void (**)(char *, uint64_t))(v44 + 8);
  v144 = v49;
  uint64_t v145 = v46;
  while (1)
  {
    unint64_t v59 = (void (*)(void *, void))sub_1B6E320B8();
    uint64_t v61 = *(void *)v60;
    uint64_t v62 = *(void *)(v60 + 8);
    uint64_t v63 = *(void *)(v60 + 16);
    uint64_t v64 = *(void *)(v60 + 24);
    uint64_t v65 = *(void *)(v60 + 32);
    uint64_t v66 = *(void *)(v60 + 40);
    uint64_t v67 = *(void *)(v60 + 48);
    uint64_t v68 = *(void *)(v60 + 56);
    uint64_t v69 = *(void *)(v60 + 64);
    int v70 = *(unsigned __int8 *)(v60 + 80);
    int v71 = *(unsigned __int8 *)(v60 + 81);
    uint64_t v160 = *(void *)(v60 + 72);
    uint64_t v163 = v69;
    uint64_t v159 = v61;
    uint64_t v72 = v63;
    uint64_t v153 = v64;
    uint64_t v154 = v68;
    uint64_t v155 = v67;
    uint64_t v156 = v65;
    uint64_t v162 = v66;
    sub_1B6BA2A10();
    v59(v166, 0);
    char v73 = v148;
    v146(v148, (char *)v48, v9);
    sub_1B6E31FF8();
    (*v143)(v73, v9);
    LODWORD(v151) = v71;
    uint64_t v157 = v62;
    LODWORD(v158) = v70;
    uint64_t v152 = v72;
    if (v71 != 1) {
      break;
    }
    uint64_t v74 = v161;
    uint64_t v75 = *v161;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v74 = v75;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v75 = sub_1B6C16784((uint64_t)v75);
      *v161 = v75;
    }
    uint64_t v77 = *((void *)v75 + 2) - 1;
    uint64_t v78 = v159;
    if (v77 - v159 < 0) {
      goto LABEL_53;
    }
    int v79 = &v75[80 * v159];
    uint64_t v80 = *((void *)v79 + 4);
    v79 += 32;
    LODWORD(v139) = v79[64];
    uint64_t v142 = *((void *)v79 + 7);
    uint64_t v82 = *((void *)v79 + 5);
    uint64_t v81 = *((void *)v79 + 6);
    uint64_t v140 = v80;
    uint64_t v141 = v81;
    uint64_t v83 = *((void *)v79 + 3);
    uint64_t v84 = *((void *)v79 + 4);
    uint64_t v86 = *((void *)v79 + 1);
    uint64_t v85 = *((void *)v79 + 2);
    memmove(v79, v79 + 80, 80 * (v77 - v159));
    *((void *)v75 + 2) = v77;
    *v161 = v75;
    uint64_t v9 = v150;
    if (v158)
    {
LABEL_19:
      sub_1B6BA2A18();
      uint64_t v58 = *v144;
      uint64_t v48 = v149;
      sub_1B6E31FE8();
      if (v58 == v166[0]) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v137 = v86;
      uint64_t v138 = v85;
      uint64_t v151 = v83;
      uint64_t v129 = v84;
      uint64_t v130 = v82;
      char v87 = v139;
      v88 = v136;
      char v89 = swift_isUniquelyReferenced_nonNull_native();
      v166[0] = v88;
      unint64_t v91 = sub_1B62C1A30(v78);
      uint64_t v92 = v88[2] + ((v90 & 1) == 0);
      if (v88[3] >= v92)
      {
        char v121 = v89;
        uint64_t v98 = v141;
        uint64_t v97 = v142;
        uint64_t v99 = v129;
        uint64_t v100 = v130;
        uint64_t v101 = v140;
        uint64_t v102 = v151;
        uint64_t v104 = v137;
        uint64_t v103 = v138;
        if ((v121 & 1) == 0)
        {
          unint64_t v127 = v91;
          LODWORD(v136) = v90;
          sub_1B6ACE194();
          LOBYTE(v90) = (_BYTE)v136;
          unint64_t v91 = v127;
          uint64_t v104 = v137;
          uint64_t v103 = v138;
          uint64_t v102 = v151;
        }
      }
      else
      {
        char v93 = v90;
        sub_1B6ABA390(v92, v89);
        unint64_t v94 = sub_1B62C1A30(v78);
        int v95 = v90 & 1;
        LOBYTE(v90) = v93;
        int v96 = v93 & 1;
        uint64_t v98 = v141;
        uint64_t v97 = v142;
        uint64_t v99 = v129;
        uint64_t v100 = v130;
        uint64_t v101 = v140;
        if (v96 != v95) {
          goto LABEL_54;
        }
        unint64_t v91 = v94;
        uint64_t v102 = v151;
        uint64_t v104 = v137;
        uint64_t v103 = v138;
      }
      v122 = (void *)v166[0];
      v136 = (void *)v166[0];
      if (v90)
      {
        uint64_t v123 = *(void *)(v166[0] + 56) + 80 * v91;
        *(void *)uint64_t v123 = v101;
        *(void *)(v123 + 8) = v104;
        *(void *)(v123 + 16) = v103;
        *(void *)(v123 + 24) = v102;
        *(void *)(v123 + 32) = v99;
        *(void *)(v123 + 40) = v100;
        *(void *)(v123 + 48) = v98;
        *(void *)(v123 + 56) = v97;
        *(unsigned char *)(v123 + 64) = v87;
      }
      else
      {
        *(void *)(v166[0] + 8 * (v91 >> 6) + 64) |= 1 << v91;
        *(void *)(v122[6] + 8 * v91) = v159;
        uint64_t v124 = v122[7] + 80 * v91;
        *(void *)uint64_t v124 = v101;
        *(void *)(v124 + 8) = v104;
        *(void *)(v124 + 16) = v103;
        *(void *)(v124 + 24) = v102;
        *(void *)(v124 + 32) = v99;
        *(void *)(v124 + 40) = v100;
        *(void *)(v124 + 48) = v98;
        *(void *)(v124 + 56) = v97;
        *(unsigned char *)(v124 + 64) = v87;
        ++v122[2];
      }
      swift_bridgeObjectRelease();
      sub_1B6BA2A18();
      uint64_t v125 = *v144;
      uint64_t v48 = v149;
      sub_1B6E31FE8();
      BOOL v126 = v125 == v166[0];
      uint64_t v51 = v131;
      if (v126) {
        goto LABEL_15;
      }
    }
  }
  if ((v70 & 1) == 0)
  {
    if (v136[2])
    {
      unint64_t v105 = sub_1B62C1A30(v160);
      if (v106)
      {
        uint64_t v56 = v136[7] + 80 * v105;
        char v57 = *(unsigned char *)(v56 + 64);
        v171[0] = *(_OWORD *)v56;
        v171[1] = *(_OWORD *)(v56 + 16);
        v171[2] = *(_OWORD *)(v56 + 32);
        v171[3] = *(_OWORD *)(v56 + 48);
        char v172 = v57;
        sub_1B68E8B3C(v159, v159, (uint64_t)v171);
LABEL_18:
        uint64_t v9 = v150;
        goto LABEL_19;
      }
    }
  }
  if (v163)
  {
    uint64_t v141 = 0;
    uint64_t v142 = 0;
    uint64_t v137 = 0;
    uint64_t v138 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = 0;
    int v110 = 128;
LABEL_36:
    LODWORD(v140) = v110;
    uint64_t v139 = 0xFFFFFFFFLL;
    goto LABEL_39;
  }
  v166[0] = v62;
  v166[1] = v72;
  uint64_t v164 = 0x726F6C6F63;
  unint64_t v165 = 0xE500000000000000;
  sub_1B633AF88();
  if ((sub_1B6E32648() & 1) == 0 || v162 != 6)
  {
    sub_1B62D97D8(v162, (uint64_t)v167);
    uint64_t v139 = v167[0];
    uint64_t v111 = v167[2];
    uint64_t v107 = v167[3];
    uint64_t v112 = v167[4];
    uint64_t v108 = v167[5];
    uint64_t v109 = v167[6];
    uint64_t v141 = v167[1];
    uint64_t v142 = v167[7];
    LODWORD(v140) = v168;
    sub_1B6BA27CC((uint64_t)v167, (uint64_t)v169, (unint64_t *)&qword_1EB980018, (uint64_t)&type metadata for DataValue);
    if (v169[64] != 255)
    {
      uint64_t v137 = v111;
      uint64_t v138 = v112;
      sub_1B62D6998((uint64_t)v169, (uint64_t)v170);
      goto LABEL_39;
    }
    uint64_t v141 = 0;
    uint64_t v142 = 0;
    uint64_t v137 = 0;
    uint64_t v138 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = 0;
    int v110 = 14;
    goto LABEL_36;
  }
  uint64_t v137 = 0;
  uint64_t v138 = 0;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  uint64_t v109 = 0;
  LODWORD(v140) = 3;
  uint64_t v139 = 0x3F8000003F800000;
  uint64_t v141 = 0x3F8000003F800000;
  uint64_t v142 = 0;
LABEL_39:
  v113 = v161;
  v114 = *v161;
  unint64_t v115 = *((void *)*v161 + 2);
  int v116 = swift_isUniquelyReferenced_nonNull_native();
  *v113 = v114;
  if (!v116 || v115 >= *((void *)v114 + 3) >> 1)
  {
    v114 = sub_1B68C1E4C(v116, v115 + 1, 1, v114);
    *v161 = v114;
  }
  uint64_t v117 = *((void *)v114 + 2) - v159;
  if (v117 >= 0)
  {
    v118 = &v114[80 * v159];
    memmove(v118 + 112, v118 + 32, 80 * v117);
    ++*((void *)v114 + 2);
    uint64_t v119 = v141;
    *((void *)v118 + 4) = v139;
    *((void *)v118 + 5) = v119;
    *((void *)v118 + 6) = v137;
    *((void *)v118 + 7) = v107;
    *((void *)v118 + 8) = v138;
    *((void *)v118 + 9) = v108;
    uint64_t v120 = v142;
    *((void *)v118 + 10) = v109;
    *((void *)v118 + 11) = v120;
    v118[96] = v140;
    *v161 = v114;
    goto LABEL_18;
  }
LABEL_53:
  sub_1B6E32C88();
  __break(1u);
LABEL_54:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B6B99B34()
{
  qword_1EB997DD8 = 0;
  qword_1EB997DE0 = 0;
  qword_1EB997DD0 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1B6B99B50(uint64_t *a1, uint64_t *a2)
{
  return sub_1B6BA172C(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1B6B99B6C()
{
  if (qword_1EB97F888 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB997DD0;
  uint64_t v1 = qword_1EB997DD8;
  uint64_t v2 = qword_1EB997DE0;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1B6918E2C(v0, v0);
  qword_1EB997C30 = v0;
  *(void *)algn_1EB997C38 = v1;
  qword_1EB997C40 = v2;
  qword_1EB997C48 = v0;
  *(void *)&xmmword_1EB997C50 = v1;
  *((void *)&xmmword_1EB997C50 + 1) = v2;
  byte_1EB997C60 = result & 1;
  return result;
}

uint64_t sub_1B6B99C10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a3;
  uint64_t v16 = a5;
  uint64_t v14 = a4;
  sub_1B6395BC8(0, &qword_1E9DD6828, (uint64_t (*)(void))sub_1B6BA446C, (uint64_t)&type metadata for ShaderArgument.BufferDesc.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = (char *)&v14 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA446C();
  sub_1B6E33A88();
  char v21 = 0;
  sub_1B6E32F88();
  if (!v5)
  {
    uint64_t v17 = v15;
    char v20 = 1;
    type metadata accessor for MTLDataType(0);
    sub_1B6BA4514(&qword_1E9DD6820, 255, type metadata accessor for MTLDataType);
    sub_1B6E32FA8();
    char v19 = 2;
    sub_1B6E32F88();
    char v18 = 3;
    sub_1B6E32F88();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B6B99E58(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  v14[3] = a4;
  uint64_t v15 = a3;
  sub_1B6395BC8(0, &qword_1E9DD6810, (uint64_t (*)(void))sub_1B6BA44C0, (uint64_t)&type metadata for ShaderArgument.TextureDesc.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = (char *)v14 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA44C0();
  sub_1B6E33A88();
  uint64_t v17 = a2;
  char v16 = 0;
  type metadata accessor for MTLTextureType(0);
  sub_1B6BA4514(&qword_1E9DD6818, 255, type metadata accessor for MTLTextureType);
  sub_1B6E32FA8();
  if (!v4)
  {
    uint64_t v17 = v15;
    char v16 = 1;
    type metadata accessor for MTLDataType(0);
    sub_1B6BA4514(&qword_1E9DD6820, 255, type metadata accessor for MTLDataType);
    sub_1B6E32FA8();
    LOBYTE(v17) = 2;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B6B9A0C8(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB04A0(*a1, *a2);
}

uint64_t sub_1B6B9A0D4()
{
  uint64_t result = 0x657A695361746164;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6570795461746164;
      break;
    case 2:
      uint64_t result = 0x74657366666FLL;
      break;
    case 3:
      uint64_t result = 0x6E656D6E67696C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6B9A160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6BA1A48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6B9A188(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA446C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B9A1C4(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA446C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B9A200@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6BA30A8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1B6B9A230(void *a1)
{
  return sub_1B6B99C10(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1B6B9A250(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB071C(*a1, *a2);
}

uint64_t sub_1B6B9A25C()
{
  uint64_t v1 = 0x6570795461746164;
  if (*v0 != 1) {
    uint64_t v1 = 0x68747065447369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1B6B9A2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6BA1D38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6B9A2D8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA44C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B9A314(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA44C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B9A350(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return *(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16) ^ 1u;
  }
  return 0;
}

uint64_t sub_1B6B9A38C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6BA3330(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1B6B9A3C0(void *a1)
{
  return sub_1B6B99E58(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1B6B9A3E0(char *a1, char *a2)
{
  return sub_1B6BB0828(*a1, *a2);
}

uint64_t sub_1B6B9A3EC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B9A46C()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B9A4D8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B9A554@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B6B9A5B4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x726566667562;
  if (*v1) {
    uint64_t v2 = 0x65727574786574;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6B9A5F0()
{
  if (*v0) {
    return 0x65727574786574;
  }
  else {
    return 0x726566667562;
  }
}

uint64_t sub_1B6B9A628@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B6B9A68C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA409C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B9A6C8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA409C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B9A704(void *a1)
{
  uint64_t v2 = v1;
  sub_1B6395BC8(0, &qword_1E9DD67F0, (uint64_t (*)(void))sub_1B6BA409C, (uint64_t)&type metadata for ShaderArgument.Desc.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA409C();
  sub_1B6E33A88();
  sub_1B634FDFC(v2, (uint64_t)&v13);
  long long v11 = v13;
  if (v15)
  {
    LOBYTE(v12) = v14;
    char v16 = 1;
    sub_1B6BA4198();
  }
  else
  {
    long long v12 = v14;
    char v16 = 0;
    sub_1B6BA41EC();
  }
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

BOOL sub_1B6B9A8D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  if (*((unsigned char *)a1 + 32) == 1) {
    return (a2[4] & 1) != 0 && v3 == v5 && v2 == v4 && ((a2[2] ^ ((a1[2] & 1) == 0)) & 1) != 0;
  }
  BOOL v8 = v3 == v5 && v2 == v4;
  return (a2[4] & 1) == 0 && v8;
}

uint64_t sub_1B6B9A93C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6BA35E0(a1, v5);
  if (!v2) {
    return sub_1B634FDFC((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_1B6B9A984(void *a1)
{
  sub_1B634FDFC(v1, (uint64_t)v4);
  return sub_1B6B9A704(a1);
}

void sub_1B6B9A9D4(uint64_t *a1@<X8>)
{
  sub_1B634FDFC(v1 + 24, (uint64_t)v22);
  sub_1B634FDFC((uint64_t)v22, (uint64_t)v23);
  if (v25)
  {
    a1[3] = (uint64_t)&type metadata for Entity;
    *a1 = 0xFFFFFFFFLL;
  }
  else
  {
    switch(v24)
    {
      case 3:
        a1[3] = MEMORY[0x1E4FBB470];
        *(_DWORD *)a1 = 0;
        return;
      case 4:
        sub_1B6395BC8(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        a1[3] = v3;
        *a1 = 0;
        return;
      case 5:
        uint64_t v4 = &qword_1EB980EB0;
        uint64_t v5 = MEMORY[0x1E4FBB470];
        uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
        goto LABEL_9;
      case 6:
        uint64_t v4 = &qword_1EB980EF0;
        uint64_t v5 = MEMORY[0x1E4FBB470];
        uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
LABEL_9:
        sub_1B6395BC8(0, (unint64_t *)v4, (uint64_t (*)(void))sub_1B6645830, v5, v6);
        a1[3] = v7;
        uint64_t v8 = swift_allocObject();
        *a1 = v8;
        *(void *)(v8 + 16) = 0;
        *(void *)(v8 + 24) = 0;
        return;
      case 7:
        type metadata accessor for simd_float2x2(0);
        a1[3] = v9;
        goto LABEL_15;
      case 8:
        type metadata accessor for simd_float2x3(0);
        goto LABEL_13;
      case 9:
        type metadata accessor for simd_float2x4(0);
LABEL_13:
        a1[3] = v10;
        uint64_t v11 = swift_allocObject();
        *a1 = v11;
        *(_OWORD *)(v11 + 16) = xmmword_1B6E4F300;
        *(_OWORD *)(v11 + 32) = xmmword_1B6E4F320;
        return;
      case 10:
        type metadata accessor for simd_float3x2(0);
        a1[2] = 0;
        a1[3] = v12;
LABEL_15:
        *a1 = 1065353216;
        a1[1] = 0x3F80000000000000;
        return;
      case 11:
        type metadata accessor for simd_float3x3(0);
        goto LABEL_18;
      case 12:
        type metadata accessor for simd_float3x4(0);
LABEL_18:
        a1[3] = v13;
        long long v14 = (_OWORD *)swift_allocObject();
        *a1 = (uint64_t)v14;
        v14[1] = xmmword_1B6E4F300;
        v14[2] = xmmword_1B6E4F320;
        v14[3] = xmmword_1B6E4F2E0;
        return;
      case 13:
        type metadata accessor for simd_float4x2(0);
        a1[3] = v15;
        char v16 = (void *)swift_allocObject();
        *a1 = (uint64_t)v16;
        v16[2] = 1065353216;
        v16[3] = 0x3F80000000000000;
        v16[4] = 0;
        v16[5] = 0;
        return;
      case 14:
        type metadata accessor for simd_float4x3(0);
        a1[3] = v17;
        uint64_t v18 = swift_allocObject();
        *a1 = v18;
        *(_OWORD *)(v18 + 16) = xmmword_1B6E4F300;
        *(_OWORD *)(v18 + 32) = xmmword_1B6E4F320;
        *(_OWORD *)(v18 + 48) = xmmword_1B6E4F2E0;
        *(void *)(v18 + 64) = 0;
        *(void *)(v18 + 72) = 0;
        return;
      case 15:
        type metadata accessor for simd_float4x4(0);
        a1[3] = v19;
        char v20 = (_OWORD *)swift_allocObject();
        *a1 = (uint64_t)v20;
        v20[1] = xmmword_1B6E4F300;
        v20[2] = xmmword_1B6E4F320;
        v20[3] = xmmword_1B6E4F2E0;
        v20[4] = xmmword_1B6E4F370;
        return;
      case 29:
        uint64_t v21 = MEMORY[0x1E4FBB550];
        goto LABEL_25;
      case 33:
        uint64_t v21 = MEMORY[0x1E4FBB808];
LABEL_25:
        a1[3] = v21;
        *a1 = 0;
        break;
      case 53:
        a1[3] = MEMORY[0x1E4FBB390];
        *(unsigned char *)a1 = 0;
        break;
      default:
        a1[3] = MEMORY[0x1E4FBC848] + 8;
        break;
    }
  }
}

uint64_t sub_1B6B9AE1C(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6395BC8(0, &qword_1E9DD67B8, (uint64_t (*)(void))sub_1B6BA3B2C, (uint64_t)&type metadata for ShaderArgument.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA3B2C();
  sub_1B6E33A88();
  v12[0] = 0;
  sub_1B6E32F48();
  if (!v2)
  {
    v12[0] = 1;
    sub_1B6E32F88();
    sub_1B634FDFC(v3 + 24, (uint64_t)v13);
    sub_1B634FDFC((uint64_t)v13, (uint64_t)v12);
    v13[55] = 2;
    sub_1B6BA3BD4();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6B9B004(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB0628(*a1, *a2);
}

uint64_t sub_1B6B9B010()
{
  uint64_t v1 = 0x7865646E69;
  if (*v0 != 1) {
    uint64_t v1 = 1668506980;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1B6B9B058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6BA1C08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6B9B080(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA3B2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B9B0BC(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA3B2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6B9B0F8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6BA389C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1B6B9B144(void *a1)
{
  return sub_1B6B9AE1C(a1);
}

uint64_t sub_1B6B9B188(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 56);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v8) {
      return 0;
    }
LABEL_7:
    if (v6)
    {
      if (v4 == v7) {
        char v14 = v11;
      }
      else {
        char v14 = 0;
      }
      if ((v14 & 1) == 0 || v3 != v9 || ((((v5 & 1) == 0) ^ v10) & 1) == 0) {
        return 0;
      }
    }
    else if ((v11 & 1) != 0 || v4 != v7 || v3 != v9)
    {
      return 0;
    }
    return 1;
  }
  char v12 = sub_1B6E334B8();
  uint64_t result = 0;
  if ((v12 & 1) != 0 && v2 == v8) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1B6B9B274()
{
  sub_1B6E33918();
  sub_1B62C7C20(v0);
  sub_1B6E318B8();
  sub_1B62C7BF4(v0);
  sub_1B6E33928();
  sub_1B634FDFC(v0 + 24, (uint64_t)v2);
  sub_1B634FDFC((uint64_t)v2, (uint64_t)v5);
  sub_1B6E33928();
  sub_1B634FDFC((uint64_t)v2, (uint64_t)v3);
  if (v4 == 1)
  {
    sub_1B6E33938();
    sub_1B6E33928();
  }
  else
  {
    sub_1B6E33938();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B6B9B360()
{
  return sub_1B6B9B274();
}

uint64_t sub_1B6B9B3A4()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E33928();
  sub_1B6E33928();
  if (v1 != 1) {
    return sub_1B6E33938();
  }
  sub_1B6E33938();
  return sub_1B6E33928();
}

uint64_t sub_1B6B9B44C()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  sub_1B6E33918();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33938();
  if (v1 == 1) {
    sub_1B6E33928();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B6B9B518(uint64_t *a1, long long *a2)
{
  int v2 = *((char *)a1 + 64);
  long long v3 = *a2;
  int v4 = *((char *)a2 + 64);
  if (v2 < 0)
  {
    char v9 = v4 < 0 && *a1 == (void)v3;
  }
  else
  {
    long long v5 = a2[1];
    long long v6 = a2[2];
    long long v7 = a2[3];
    uint64_t v8 = a1[7];
    uint64_t v12 = *a1;
    long long v13 = *(_OWORD *)(a1 + 1);
    long long v14 = *(_OWORD *)(a1 + 3);
    long long v15 = *(_OWORD *)(a1 + 5);
    uint64_t v16 = v8;
    char v17 = v2;
    if (v4 < 0)
    {
      char v9 = 0;
    }
    else
    {
      v18[0] = v3;
      v18[1] = v5;
      v18[2] = v6;
      v18[3] = v7;
      char v19 = v4;
      char v9 = sub_1B6790DC4((uint64_t)&v12, (uint64_t)v18);
    }
  }
  return v9 & 1;
}

void sub_1B6B9B5B4(uint64_t a1@<X8>)
{
  long long v3 = *v1;
  int v4 = *((char *)v1 + 64);
  if (v4 < 0)
  {
    unint64_t v8 = sub_1B6A69610(*(void *)v1);
    long long v5 = 0uLL;
    long long v3 = v8;
    LOBYTE(v4) = 0x80;
    long long v6 = 0uLL;
    long long v7 = 0uLL;
  }
  else
  {
    long long v5 = v1[1];
    long long v6 = v1[2];
    long long v7 = v1[3];
  }
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = v4;
}

uint64_t sub_1B6B9B620@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  id v5 = objc_msgSend(a1, sel_elementStructType);
  if (v5)
  {
    v196 = v5;
    id v6 = objc_msgSend(v5, sel_members);
    sub_1B630FF28();
    unint64_t v7 = sub_1B6E31C28();

    unint64_t v198 = v7;
    if (v7 >> 62) {
      goto LABEL_240;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v8)
    {
      uint64_t v10 = 0;
      v203 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v199 = v8;
      while (1)
      {
        uint64_t v202 = v10;
        if ((v198 & 0xC000000000000001) != 0) {
          id v11 = (id)MEMORY[0x1BA9B4580](v10, v198, v9);
        }
        else {
          id v11 = *(id *)(v198 + 32 + 8 * v10);
        }
        uint64_t v12 = v11;
        id v13 = objc_msgSend(v11, sel_structType, v193, v194, v195);
        if (v13)
        {
          v200 = v13;
          v201 = v12;
          id v14 = objc_msgSend(v13, sel_members);
          unint64_t v15 = sub_1B6E31C28();

          if (!(v15 >> 62))
          {
            uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v16) {
              goto LABEL_12;
            }
LABEL_220:
            v211 = (void *)MEMORY[0x1E4FBC860];
LABEL_221:
            swift_bridgeObjectRelease_n();

            uint64_t v168 = v211[2];
LABEL_222:
            uint64_t v184 = v203[2];
            uint64_t v185 = v184 + v168;
            if (swift_isUniquelyReferenced_nonNull_native())
            {
LABEL_223:
              v187 = v203;
              if (v185 <= v203[3] >> 1) {
                goto LABEL_229;
              }
              LOBYTE(v186) = 1;
            }
            else
            {
              LOBYTE(v186) = 0;
              v187 = v203;
            }
            if (v184 > v185) {
              uint64_t v185 = v184;
            }
            goto LABEL_228;
          }
          swift_bridgeObjectRetain();
          uint64_t v16 = sub_1B6E32C18();
          if (!v16) {
            goto LABEL_220;
          }
LABEL_12:
          uint64_t v17 = 0;
          unint64_t v206 = v15 & 0xC000000000000001;
          unint64_t v204 = v15 + 32;
          v211 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v205 = v16;
          while (2)
          {
            uint64_t v210 = v17;
            if (v206) {
              id v18 = (id)MEMORY[0x1BA9B4580]();
            }
            else {
              id v18 = *(id *)(v204 + 8 * v17);
            }
            char v19 = v18;
            id v20 = objc_msgSend(v18, sel_structType);
            if (v20)
            {
              v207 = v20;
              v208 = v19;
              id v21 = objc_msgSend(v20, sel_members);
              unint64_t v22 = sub_1B6E31C28();

              if (!(v22 >> 62))
              {
                uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (v23) {
                  goto LABEL_20;
                }
LABEL_194:
                v219 = (void *)MEMORY[0x1E4FBC860];
LABEL_195:
                swift_bridgeObjectRelease_n();

LABEL_196:
                uint64_t v163 = v219[2];
                uint64_t v160 = v211[2];
                uint64_t v161 = v160 + v163;
                if (swift_isUniquelyReferenced_nonNull_native())
                {
LABEL_197:
                  uint64_t v164 = v219;
                  if (v161 <= v211[3] >> 1)
                  {
                    if (!v219[2])
                    {
LABEL_13:
                      swift_bridgeObjectRelease();
                      uint64_t v17 = v210 + 1;
                      if (v210 + 1 == v205) {
                        goto LABEL_221;
                      }
                      continue;
                    }
LABEL_204:
                    unint64_t v165 = (unint64_t)&v211[8 * v211[2] + 4];
                    if ((unint64_t)(v164 + 4) < v165 + (v163 << 6)
                      && v165 < (unint64_t)&v164[8 * v163 + 4])
                    {
                      goto LABEL_239;
                    }
                    swift_arrayInitWithCopy();
                    if (v163) {
                      v211[2] += v163;
                    }
                    goto LABEL_13;
                  }
                  LOBYTE(v162) = 1;
                }
                else
                {
                  LOBYTE(v162) = 0;
                }
                if (v160 > v161) {
                  uint64_t v161 = v160;
                }
LABEL_203:
                v211 = sub_1B68C4E38(v162, v161, 1, v211);
                uint64_t v164 = v219;
                if (!v219[2]) {
                  goto LABEL_13;
                }
                goto LABEL_204;
              }
              swift_bridgeObjectRetain();
              uint64_t v23 = sub_1B6E32C18();
              if (!v23) {
                goto LABEL_194;
              }
LABEL_20:
              uint64_t v24 = 0;
              unint64_t v214 = v22 & 0xC000000000000001;
              unint64_t v212 = v22 + 32;
              v219 = (void *)MEMORY[0x1E4FBC860];
              uint64_t v213 = v23;
              while (2)
              {
                uint64_t v218 = v24;
                if (v214) {
                  id v25 = (id)MEMORY[0x1BA9B4580]();
                }
                else {
                  id v25 = *(id *)(v212 + 8 * v24);
                }
                unint64_t v26 = v25;
                id v27 = objc_msgSend(v25, sel_structType);
                if (v27)
                {
                  v215 = v27;
                  v216 = v26;
                  id v28 = objc_msgSend(v27, sel_members);
                  unint64_t v29 = sub_1B6E31C28();

                  if (!(v29 >> 62))
                  {
                    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    swift_bridgeObjectRetain();
                    if (v30) {
                      goto LABEL_28;
                    }
LABEL_149:
                    v226 = (void *)MEMORY[0x1E4FBC860];
LABEL_150:
                    swift_bridgeObjectRelease_n();

LABEL_151:
                    uint64_t v127 = v226[2];
                    uint64_t v124 = v219[2];
                    uint64_t v125 = v124 + v127;
                    if (swift_isUniquelyReferenced_nonNull_native())
                    {
LABEL_152:
                      uint64_t v128 = v219;
                      uint64_t v129 = v226;
                      if (v125 <= v219[3] >> 1)
                      {
                        if (!v226[2])
                        {
LABEL_21:
                          v219 = v128;
                          swift_bridgeObjectRelease();
                          uint64_t v24 = v218 + 1;
                          if (v218 + 1 == v213) {
                            goto LABEL_195;
                          }
                          continue;
                        }
LABEL_159:
                        uint64_t v130 = v128;
                        unint64_t v131 = (unint64_t)&v128[8 * v128[2] + 4];
                        if ((unint64_t)(v129 + 4) < v131 + (v127 << 6)
                          && v131 < (unint64_t)&v129[8 * v127 + 4])
                        {
                          goto LABEL_239;
                        }
                        swift_arrayInitWithCopy();
                        uint64_t v128 = v130;
                        if (v127) {
                          v130[2] += v127;
                        }
                        goto LABEL_21;
                      }
                      LOBYTE(v126) = 1;
                    }
                    else
                    {
                      LOBYTE(v126) = 0;
                      uint64_t v128 = v219;
                    }
                    if (v124 > v125) {
                      uint64_t v125 = v124;
                    }
LABEL_158:
                    uint64_t v128 = sub_1B68C4E38(v126, v125, 1, v128);
                    uint64_t v129 = v226;
                    if (!v226[2]) {
                      goto LABEL_21;
                    }
                    goto LABEL_159;
                  }
                  swift_bridgeObjectRetain();
                  uint64_t v30 = sub_1B6E32C18();
                  if (!v30) {
                    goto LABEL_149;
                  }
LABEL_28:
                  uint64_t v31 = 0;
                  unint64_t v222 = v29 & 0xC000000000000001;
                  unint64_t v220 = v29 + 32;
                  v226 = (void *)MEMORY[0x1E4FBC860];
                  uint64_t v221 = v30;
                  while (2)
                  {
                    uint64_t v225 = v31;
                    if (v222) {
                      id v32 = (id)MEMORY[0x1BA9B4580]();
                    }
                    else {
                      id v32 = *(id *)(v220 + 8 * v31);
                    }
                    unint64_t v33 = v32;
                    id v34 = objc_msgSend(v32, sel_structType);
                    if (!v34)
                    {
                      id v72 = objc_msgSend(v33, sel_arrayType);
                      if (v72)
                      {
                        unint64_t v39 = (void *)sub_1B6B983D8(0, (uint64_t)objc_msgSend(v72, sel_arrayLength), v72);

                        goto LABEL_103;
                      }
                      id v73 = v33;
                      id v74 = objc_msgSend(v73, sel_argumentIndex);
                      id v75 = objc_msgSend(v73, sel_name);
                      uint64_t v76 = sub_1B6E31798();
                      uint64_t v78 = v77;

                      id v79 = objc_msgSend(v73, sel_textureReferenceType);
                      uint64_t v80 = v79;
                      uint64_t v235 = v3;
                      if (v79)
                      {
                        id v81 = objc_msgSend(v79, sel_textureType);
                        id v82 = objc_msgSend(v80, sel_textureDataType);
                        LODWORD(v84) = objc_msgSend(v80, sel_isDepthTexture);

                        id v83 = 0;
                        unint64_t v84 = v84;
                      }
                      else
                      {
                        id v85 = objc_msgSend(v73, sel_pointerType);
                        if (v85)
                        {
                          uint64_t v86 = v85;
                          id v81 = objc_msgSend(v85, sel_dataSize);
                          id v82 = objc_msgSend(v86, sel_elementType);
                          id v83 = objc_msgSend(v86, sel_alignment);

                          unint64_t v84 = 0;
                        }
                        else
                        {
                          id v81 = (id)sub_1B630E8E0();
                          id v82 = objc_msgSend(v73, sel_dataType);
                          unint64_t v84 = (unint64_t)objc_msgSend(v73, sel_offset);

                          id v83 = v81;
                        }
                      }
                      sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
                      uint64_t v87 = swift_allocObject();
                      *(_OWORD *)(v87 + 16) = xmmword_1B6E77050;
                      *(void *)(v87 + 32) = v76;
                      *(void *)(v87 + 40) = v78;
                      unint64_t v39 = (void *)v87;
                      *(void *)(v87 + 48) = v74;
                      *(void *)(v87 + 56) = v81;
                      *(void *)(v87 + 64) = v82;
                      *(void *)(v87 + 72) = v84;
                      *(void *)(v87 + 80) = v83;
                      *(unsigned char *)(v87 + 88) = v80 != 0;

                      uint64_t v88 = v226[2];
                      uint64_t v89 = v88 + 1;
                      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      uint64_t v91 = 1;
                      if (isUniquelyReferenced_nonNull_native)
                      {
                        uint64_t v3 = v235;
                        goto LABEL_104;
                      }
                      uint64_t v3 = v235;
                      uint64_t v92 = v226;
                      goto LABEL_110;
                    }
                    v223 = v34;
                    id v35 = objc_msgSend(v34, sel_members);
                    unint64_t v36 = sub_1B6E31C28();

                    if (!(v36 >> 62))
                    {
                      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
                      swift_bridgeObjectRetain();
                      v224 = v33;
                      if (v37) {
                        goto LABEL_36;
                      }
LABEL_101:
                      unint64_t v39 = (void *)MEMORY[0x1E4FBC860];
LABEL_102:
                      swift_bridgeObjectRelease_n();

LABEL_103:
                      uint64_t v91 = v39[2];
                      uint64_t v88 = v226[2];
                      uint64_t v89 = v88 + v91;
                      if (swift_isUniquelyReferenced_nonNull_native())
                      {
LABEL_104:
                        uint64_t v92 = v226;
                        if (v89 <= v226[3] >> 1)
                        {
                          if (!v39[2])
                          {
LABEL_29:
                            v226 = v92;
                            swift_bridgeObjectRelease();
                            uint64_t v31 = v225 + 1;
                            if (v225 + 1 == v221) {
                              goto LABEL_150;
                            }
                            continue;
                          }
LABEL_111:
                          unint64_t v93 = (unint64_t)&v92[8 * v92[2] + 4];
                          if ((unint64_t)(v39 + 4) < v93 + (v91 << 6)
                            && v93 < (unint64_t)&v39[8 * v91 + 4])
                          {
                            goto LABEL_239;
                          }
                          int v95 = v92;
                          swift_arrayInitWithCopy();
                          uint64_t v92 = v95;
                          if (v91) {
                            v95[2] += v91;
                          }
                          goto LABEL_29;
                        }
                        LOBYTE(isUniquelyReferenced_nonNull_native) = 1;
                      }
                      else
                      {
                        LOBYTE(isUniquelyReferenced_nonNull_native) = 0;
                        uint64_t v92 = v226;
                      }
                      if (v88 > v89) {
                        uint64_t v89 = v88;
                      }
LABEL_110:
                      uint64_t v92 = sub_1B68C4E38(isUniquelyReferenced_nonNull_native, v89, 1, v92);
                      if (!v39[2]) {
                        goto LABEL_29;
                      }
                      goto LABEL_111;
                    }
                    break;
                  }
                  swift_bridgeObjectRetain();
                  uint64_t v37 = sub_1B6E32C18();
                  v224 = v33;
                  if (!v37) {
                    goto LABEL_101;
                  }
LABEL_36:
                  uint64_t v38 = 0;
                  unint64_t v229 = v36 & 0xC000000000000001;
                  unint64_t v227 = v36 + 32;
                  unint64_t v39 = (void *)MEMORY[0x1E4FBC860];
                  uint64_t v228 = v37;
                  while (2)
                  {
                    uint64_t v233 = v38;
                    if (v229) {
                      id v40 = (id)MEMORY[0x1BA9B4580]();
                    }
                    else {
                      id v40 = *(id *)(v227 + 8 * v38);
                    }
                    id v41 = v40;
                    id v42 = objc_msgSend(v40, sel_structType);
                    if (v42)
                    {
                      v230 = v42;
                      id v43 = objc_msgSend(v42, sel_members);
                      unint64_t v44 = sub_1B6E31C28();

                      if (v44 >> 62)
                      {
                        swift_bridgeObjectRetain();
                        uint64_t v45 = sub_1B6E32C18();
                        v231 = v41;
                        v232 = v39;
                        if (v45)
                        {
LABEL_44:
                          uint64_t v46 = 0;
                          unint64_t v234 = v44 & 0xC000000000000001;
                          uint64_t v47 = MEMORY[0x1E4FBC860];
                          unint64_t v48 = v44;
                          while (1)
                          {
                            uint64_t v49 = v45;
                            if (v234) {
                              id v50 = (id)MEMORY[0x1BA9B4580](v46, v44);
                            }
                            else {
                              id v50 = *(id *)(v44 + 8 * v46 + 32);
                            }
                            uint64_t v51 = v50;
                            id v243 = v50;
                            uint64_t v52 = v3;
                            sub_1B6B9CEA0(&v239, &v243);

                            uint64_t v53 = v239;
                            uint64_t v54 = *(void *)(v239 + 16);
                            uint64_t v55 = *(void *)(v47 + 16);
                            uint64_t v56 = v55 + v54;
                            int v57 = swift_isUniquelyReferenced_nonNull_native();
                            if (!v57 || v56 > *(void *)(v47 + 24) >> 1)
                            {
                              if (v55 <= v56) {
                                uint64_t v58 = v55 + v54;
                              }
                              else {
                                uint64_t v58 = v55;
                              }
                              uint64_t v47 = (uint64_t)sub_1B68C4E38(v57, v58, 1, (void *)v47);
                            }
                            uint64_t v3 = v52;
                            if (*(void *)(v53 + 16))
                            {
                              unint64_t v59 = v47 + (*(void *)(v47 + 16) << 6) + 32;
                              if (v53 + 32 < v59 + (v54 << 6) && v59 < v53 + 32 + (v54 << 6)) {
                                goto LABEL_239;
                              }
                              swift_arrayInitWithCopy();
                              if (v54) {
                                *(void *)(v47 + 16) += v54;
                              }
                            }
                            swift_bridgeObjectRelease();
                            ++v46;
                            uint64_t v45 = v49;
                            unint64_t v44 = v48;
                            if (v49 == v46) {
                              goto LABEL_72;
                            }
                          }
                        }
                      }
                      else
                      {
                        uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        swift_bridgeObjectRetain();
                        v231 = v41;
                        v232 = v39;
                        if (v45) {
                          goto LABEL_44;
                        }
                      }
                      uint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_72:
                      swift_bridgeObjectRelease_n();

                      uint64_t v65 = *(void *)(v47 + 16);
                      unint64_t v39 = v232;
                      uint64_t v66 = v232[2];
                      uint64_t v67 = v66 + v65;
                      if (swift_isUniquelyReferenced_nonNull_native())
                      {
                        uint64_t v37 = v228;
                        goto LABEL_74;
                      }
                      char v68 = 0;
                      uint64_t v37 = v228;
LABEL_78:
                      if (v66 <= v67) {
                        uint64_t v69 = v67;
                      }
                      else {
                        uint64_t v69 = v66;
                      }
                      unint64_t v39 = sub_1B68C4E38(v68, v69, 1, v39);
                      if (*(void *)(v47 + 16)) {
                        goto LABEL_82;
                      }
                    }
                    else
                    {
                      id v61 = objc_msgSend(v41, sel_arrayType);
                      if (v61)
                      {
                        uint64_t v47 = sub_1B6B983D8(0, (uint64_t)objc_msgSend(v61, sel_arrayLength), v61);
                      }
                      else
                      {
                        id v41 = v41;
                        sub_1B6BA2488(v41, (uint64_t)v240);
                        sub_1B6BA27CC((uint64_t)v240, (uint64_t)v241, (unint64_t *)&unk_1E9DD6768, (uint64_t)&type metadata for ShaderArgument);
                        if (*((void *)&v241[0] + 1))
                        {
                          sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
                          uint64_t v47 = swift_allocObject();
                          long long v62 = v241[0];
                          long long v63 = v241[1];
                          *(_OWORD *)(v47 + 16) = xmmword_1B6E77050;
                          *(_OWORD *)(v47 + 32) = v62;
                          long long v64 = v242[0];
                          *(_OWORD *)(v47 + 48) = v63;
                          *(_OWORD *)(v47 + 64) = v64;
                          *(_OWORD *)(v47 + 73) = *(_OWORD *)((char *)v242 + 9);
                        }
                        else
                        {
                          uint64_t v47 = MEMORY[0x1E4FBC860];
                        }
                      }

                      uint64_t v65 = *(void *)(v47 + 16);
                      uint64_t v66 = v39[2];
                      uint64_t v67 = v66 + v65;
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      {
                        char v68 = 0;
                        goto LABEL_78;
                      }
LABEL_74:
                      if (v67 > v39[3] >> 1)
                      {
                        char v68 = 1;
                        goto LABEL_78;
                      }
                      if (*(void *)(v47 + 16))
                      {
LABEL_82:
                        unint64_t v70 = (unint64_t)&v39[8 * v39[2] + 4];
                        if (v47 + 32 < v70 + (v65 << 6) && v70 < v47 + 32 + (v65 << 6)) {
                          goto LABEL_239;
                        }
                        swift_arrayInitWithCopy();
                        if (v65) {
                          v39[2] += v65;
                        }
                      }
                    }
                    swift_bridgeObjectRelease();
                    uint64_t v38 = v233 + 1;
                    if (v233 + 1 == v37) {
                      goto LABEL_102;
                    }
                    continue;
                  }
                }
                break;
              }
              id v96 = objc_msgSend(v26, sel_arrayType);
              if (!v96)
              {
                id v109 = v26;
                id v110 = objc_msgSend(v109, sel_argumentIndex);
                id v111 = objc_msgSend(v109, sel_name);
                uint64_t v112 = sub_1B6E31798();
                uint64_t v114 = v113;

                id v115 = objc_msgSend(v109, sel_textureReferenceType);
                int v116 = v115;
                uint64_t v236 = v3;
                if (v115)
                {
                  id v117 = objc_msgSend(v115, sel_textureType);
                  id v118 = objc_msgSend(v116, sel_textureDataType);
                  LODWORD(v120) = objc_msgSend(v116, sel_isDepthTexture);

                  id v119 = 0;
                  unint64_t v120 = v120;
                }
                else
                {
                  id v121 = objc_msgSend(v109, sel_pointerType);
                  if (v121)
                  {
                    v122 = v121;
                    id v117 = objc_msgSend(v121, sel_dataSize);
                    id v118 = objc_msgSend(v122, sel_elementType);
                    id v119 = objc_msgSend(v122, sel_alignment);

                    unint64_t v120 = 0;
                  }
                  else
                  {
                    id v117 = (id)sub_1B630E8E0();
                    id v118 = objc_msgSend(v109, sel_dataType);
                    unint64_t v120 = (unint64_t)objc_msgSend(v109, sel_offset);

                    id v119 = v117;
                  }
                }
                sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
                uint64_t v123 = swift_allocObject();
                *(_OWORD *)(v123 + 16) = xmmword_1B6E77050;
                *(void *)(v123 + 32) = v112;
                *(void *)(v123 + 40) = v114;
                *(void *)(v123 + 48) = v110;
                *(void *)(v123 + 56) = v117;
                *(void *)(v123 + 64) = v118;
                *(void *)(v123 + 72) = v120;
                *(void *)(v123 + 80) = v119;
                v226 = (void *)v123;
                *(unsigned char *)(v123 + 88) = v116 != 0;

                uint64_t v124 = v219[2];
                uint64_t v125 = v124 + 1;
                int v126 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v127 = 1;
                if (v126)
                {
                  uint64_t v3 = v236;
                  goto LABEL_152;
                }
                uint64_t v3 = v236;
                uint64_t v128 = v219;
                goto LABEL_158;
              }
              uint64_t v97 = v96;
              v217 = v26;
              uint64_t v98 = (char *)objc_msgSend(v96, sel_arrayLength);
              if (!v98)
              {
                v226 = (void *)MEMORY[0x1E4FBC860];
LABEL_141:

                goto LABEL_151;
              }
              uint64_t v99 = v98;
              v226 = (void *)MEMORY[0x1E4FBC860];
              while (2)
              {
                sub_1B6B9B620(&v239, &v243, v97);
                uint64_t v100 = v239;
                uint64_t v101 = *(void *)(v239 + 16);
                uint64_t v102 = v226;
                uint64_t v103 = v226[2];
                uint64_t v104 = v103 + v101;
                int v105 = swift_isUniquelyReferenced_nonNull_native();
                if (v105 && v104 <= v226[3] >> 1)
                {
                  if (!*(void *)(v100 + 16)) {
                    goto LABEL_122;
                  }
                }
                else
                {
                  if (v103 <= v104) {
                    uint64_t v106 = v103 + v101;
                  }
                  else {
                    uint64_t v106 = v103;
                  }
                  uint64_t v102 = sub_1B68C4E38(v105, v106, 1, v226);
                  if (!*(void *)(v100 + 16))
                  {
LABEL_122:
                    v226 = v102;
                    swift_bridgeObjectRelease();
                    if (!--v99) {
                      goto LABEL_141;
                    }
                    continue;
                  }
                }
                break;
              }
              unint64_t v107 = (unint64_t)&v102[8 * v102[2] + 4];
              if (v100 + 32 < v107 + (v101 << 6) && v107 < v100 + 32 + (v101 << 6)) {
                goto LABEL_239;
              }
              swift_arrayInitWithCopy();
              if (v101) {
                v102[2] += v101;
              }
              goto LABEL_122;
            }
            break;
          }
          id v132 = objc_msgSend(v19, sel_arrayType);
          if (!v132)
          {
            id v145 = v19;
            id v146 = objc_msgSend(v145, sel_argumentIndex);
            id v147 = objc_msgSend(v145, sel_name);
            uint64_t v148 = sub_1B6E31798();
            uint64_t v150 = v149;

            id v151 = objc_msgSend(v145, sel_textureReferenceType);
            uint64_t v152 = v151;
            uint64_t v237 = v3;
            if (v151)
            {
              id v153 = objc_msgSend(v151, sel_textureType);
              id v154 = objc_msgSend(v152, sel_textureDataType);
              LODWORD(v156) = objc_msgSend(v152, sel_isDepthTexture);

              id v155 = 0;
              unint64_t v156 = v156;
            }
            else
            {
              id v157 = objc_msgSend(v145, sel_pointerType);
              if (v157)
              {
                v158 = v157;
                id v153 = objc_msgSend(v157, sel_dataSize);
                id v154 = objc_msgSend(v158, sel_elementType);
                id v155 = objc_msgSend(v158, sel_alignment);

                unint64_t v156 = 0;
              }
              else
              {
                id v153 = (id)sub_1B630E8E0();
                id v154 = objc_msgSend(v145, sel_dataType);
                unint64_t v156 = (unint64_t)objc_msgSend(v145, sel_offset);

                id v155 = v153;
              }
            }
            sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
            uint64_t v159 = swift_allocObject();
            *(_OWORD *)(v159 + 16) = xmmword_1B6E77050;
            *(void *)(v159 + 32) = v148;
            *(void *)(v159 + 40) = v150;
            *(void *)(v159 + 48) = v146;
            *(void *)(v159 + 56) = v153;
            *(void *)(v159 + 64) = v154;
            *(void *)(v159 + 72) = v156;
            *(void *)(v159 + 80) = v155;
            v219 = (void *)v159;
            *(unsigned char *)(v159 + 88) = v152 != 0;

            uint64_t v160 = v211[2];
            uint64_t v161 = v160 + 1;
            int v162 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v163 = 1;
            if (v162)
            {
              uint64_t v3 = v237;
              goto LABEL_197;
            }
            uint64_t v3 = v237;
            goto LABEL_203;
          }
          v133 = v132;
          v209 = v19;
          uint64_t v134 = (char *)objc_msgSend(v132, sel_arrayLength);
          if (!v134)
          {
            v219 = (void *)MEMORY[0x1E4FBC860];
LABEL_186:

            goto LABEL_196;
          }
          uint64_t v135 = v134;
          v219 = (void *)MEMORY[0x1E4FBC860];
          while (2)
          {
            sub_1B6B9B620(&v239, &v243, v133);
            uint64_t v136 = v239;
            uint64_t v137 = *(void *)(v239 + 16);
            uint64_t v138 = v219;
            uint64_t v139 = v219[2];
            uint64_t v140 = v139 + v137;
            int v141 = swift_isUniquelyReferenced_nonNull_native();
            if (v141 && v140 <= v219[3] >> 1)
            {
              if (!*(void *)(v136 + 16)) {
                goto LABEL_167;
              }
            }
            else
            {
              if (v139 <= v140) {
                uint64_t v142 = v139 + v137;
              }
              else {
                uint64_t v142 = v139;
              }
              uint64_t v138 = sub_1B68C4E38(v141, v142, 1, v219);
              if (!*(void *)(v136 + 16))
              {
LABEL_167:
                v219 = v138;
                swift_bridgeObjectRelease();
                if (!--v135) {
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          unint64_t v143 = (unint64_t)&v138[8 * v138[2] + 4];
          if (v136 + 32 < v143 + (v137 << 6) && v143 < v136 + 32 + (v137 << 6)) {
            goto LABEL_239;
          }
          swift_arrayInitWithCopy();
          if (v137) {
            v138[2] += v137;
          }
          goto LABEL_167;
        }
        id v166 = objc_msgSend(v12, sel_arrayType);
        if (v166)
        {
          uint64_t v167 = sub_1B6B983D8(0, (uint64_t)objc_msgSend(v166, sel_arrayLength), v166);

          v211 = (void *)v167;
          uint64_t v168 = *(void *)(v167 + 16);
          goto LABEL_222;
        }
        id v169 = v12;
        id v170 = objc_msgSend(v169, sel_argumentIndex);
        id v171 = objc_msgSend(v169, sel_name);
        uint64_t v172 = sub_1B6E31798();
        uint64_t v174 = v173;

        id v175 = objc_msgSend(v169, sel_textureReferenceType);
        v176 = v175;
        uint64_t v238 = v3;
        if (v175)
        {
          id v177 = objc_msgSend(v175, sel_textureType);
          id v178 = objc_msgSend(v176, sel_textureDataType);
          LODWORD(v180) = objc_msgSend(v176, sel_isDepthTexture);

          id v179 = 0;
          unint64_t v180 = v180;
        }
        else
        {
          id v181 = objc_msgSend(v169, sel_pointerType);
          if (v181)
          {
            v182 = v181;
            id v177 = objc_msgSend(v181, sel_dataSize);
            id v178 = objc_msgSend(v182, sel_elementType);
            id v179 = objc_msgSend(v182, sel_alignment);

            unint64_t v180 = 0;
          }
          else
          {
            id v177 = (id)sub_1B630E8E0();
            id v178 = objc_msgSend(v169, sel_dataType);
            unint64_t v180 = (unint64_t)objc_msgSend(v169, sel_offset);

            id v179 = v177;
          }
        }
        sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
        uint64_t v183 = swift_allocObject();
        *(_OWORD *)(v183 + 16) = xmmword_1B6E77050;
        *(void *)(v183 + 32) = v172;
        *(void *)(v183 + 40) = v174;
        *(void *)(v183 + 48) = v170;
        *(void *)(v183 + 56) = v177;
        *(void *)(v183 + 64) = v178;
        *(void *)(v183 + 72) = v180;
        *(void *)(v183 + 80) = v179;
        v211 = (void *)v183;
        *(unsigned char *)(v183 + 88) = v176 != 0;

        uint64_t v184 = v203[2];
        uint64_t v185 = v184 + 1;
        int v186 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v168 = 1;
        if (v186)
        {
          uint64_t v3 = v238;
          goto LABEL_223;
        }
        uint64_t v3 = v238;
        v187 = v203;
LABEL_228:
        v187 = sub_1B68C4E38(v186, v185, 1, v187);
LABEL_229:
        if (v211[2]) {
          break;
        }
LABEL_5:
        v203 = v187;
        swift_bridgeObjectRelease();
        uint64_t v10 = v202 + 1;
        if (v202 + 1 == v199) {
          goto LABEL_242;
        }
      }
      unint64_t v188 = (unint64_t)&v187[8 * v187[2] + 4];
      if ((unint64_t)(v211 + 4) >= v188 + (v168 << 6) || v188 >= (unint64_t)&v211[8 * v168 + 4])
      {
        v190 = v187;
        swift_arrayInitWithCopy();
        v187 = v190;
        if (v168) {
          v190[2] += v168;
        }
        goto LABEL_5;
      }
LABEL_239:
      LODWORD(v195) = 0;
      uint64_t v194 = 1092;
      LOBYTE(v193) = 2;
      sub_1B6E32C88();
      __break(1u);
LABEL_240:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1B6E32C18();
    }
    v203 = (void *)MEMORY[0x1E4FBC860];
LABEL_242:
    swift_bridgeObjectRelease_n();

    uint64_t result = (uint64_t)v203;
    goto LABEL_243;
  }
  id v191 = objc_msgSend(a1, sel_elementArrayType);
  if (v191)
  {
    uint64_t result = sub_1B6B983D8(0, (uint64_t)objc_msgSend(v191, sel_arrayLength), v191);
LABEL_243:
    *a2 = result;
    return result;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B6B9CEA0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(*a1, sel_structType);
  if (v4)
  {
    unint64_t v26 = v4;
    id v27 = a2;
    id v5 = objc_msgSend(v4, sel_members);
    sub_1B630FF28();
    unint64_t v6 = sub_1B6E31C28();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1B6E32C18();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        uint64_t v8 = 0;
        unint64_t v31 = v6 & 0xC000000000000001;
        uint64_t v9 = MEMORY[0x1E4FBC860];
        unint64_t v10 = v6;
        while (1)
        {
          if (v31) {
            id v11 = (id)MEMORY[0x1BA9B4580](v8, v6);
          }
          else {
            id v11 = *(id *)(v6 + 8 * v8 + 32);
          }
          uint64_t v12 = v11;
          *(void *)&v29[0] = v11;
          sub_1B6B9CEA0(v28, v29);

          uint64_t v13 = v28[0];
          uint64_t v14 = *(void *)(v28[0] + 16);
          uint64_t v15 = *(void *)(v9 + 16);
          uint64_t v16 = v15 + v14;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native && v16 <= *(void *)(v9 + 24) >> 1)
          {
            if (!*(void *)(v13 + 16)) {
              goto LABEL_5;
            }
          }
          else
          {
            if (v15 <= v16) {
              uint64_t v18 = v15 + v14;
            }
            else {
              uint64_t v18 = v15;
            }
            uint64_t v9 = (uint64_t)sub_1B68C4E38(isUniquelyReferenced_nonNull_native, v18, 1, (void *)v9);
            if (!*(void *)(v13 + 16)) {
              goto LABEL_5;
            }
          }
          unint64_t v19 = v9 + (*(void *)(v9 + 16) << 6) + 32;
          if (v13 + 32 < v19 + (v14 << 6) && v19 < v13 + 32 + (v14 << 6))
          {
            sub_1B6E32C88();
            __break(1u);
            return;
          }
          swift_arrayInitWithCopy();
          if (v14) {
            *(void *)(v9 + 16) += v14;
          }
LABEL_5:
          swift_bridgeObjectRelease();
          ++v8;
          unint64_t v6 = v10;
          if (v7 == v8) {
            goto LABEL_31;
          }
        }
      }
    }
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_31:
    swift_bridgeObjectRelease_n();

    a2 = v27;
  }
  else
  {
    id v21 = objc_msgSend(v3, sel_arrayType);
    if (v21)
    {
      unint64_t v22 = v21;
      uint64_t v9 = sub_1B6BA2634(0, (uint64_t)objc_msgSend(v21, sel_arrayLength), v21);
    }
    else
    {
      sub_1B6BA2488(v3, (uint64_t)v28);
      sub_1B6BA27CC((uint64_t)v28, (uint64_t)v29, (unint64_t *)&unk_1E9DD6768, (uint64_t)&type metadata for ShaderArgument);
      if (*((void *)&v29[0] + 1))
      {
        sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
        uint64_t v9 = swift_allocObject();
        long long v23 = v29[0];
        long long v24 = v29[1];
        *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
        *(_OWORD *)(v9 + 32) = v23;
        long long v25 = v30[0];
        *(_OWORD *)(v9 + 48) = v24;
        *(_OWORD *)(v9 + 64) = v25;
        *(_OWORD *)(v9 + 73) = *(_OWORD *)((char *)v30 + 9);
      }
      else
      {
        uint64_t v9 = MEMORY[0x1E4FBC860];
      }
    }
  }
  *a2 = v9;
}

uint64_t sub_1B6B9D1FC(uint64_t a1)
{
  v290[2] = &unk_1F108F780;
  uint64_t v2 = swift_dynamicCastObjCProtocolConditional();
  if (!v2)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v300 = 0;
    *((void *)&v300 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    *(void *)&v298[0] = a1;
    sub_1B62F3064(0, (unint64_t *)&qword_1EB97D7E0);
    sub_1B6E32B18();
    sub_1B6E31948();
    long long v238 = v300;
    int v239 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v300 = 0;
    swift_retain();
    sub_1B6B33E34(v239, (uint64_t *)&v300, v238, *((uint64_t *)&v238 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  id v3 = (void *)v2;
  swift_unknownObjectRetain();
  id v4 = objc_msgSend(v3, sel_bufferStructType);
  if (!v4)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v300 = 0;
    *((void *)&v300 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    *(void *)&v298[0] = v3;
    sub_1B62F3064(0, &qword_1E9DD6760);
    sub_1B6E32B18();
    sub_1B6E31948();
    long long v240 = v300;
    int v241 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v300 = 0;
    swift_retain();
    sub_1B6B33E34(v241, (uint64_t *)&v300, v240, *((uint64_t *)&v240 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  id v243 = v4;
  id v5 = objc_msgSend(v4, sel_members);
  sub_1B630FF28();
  unint64_t v6 = sub_1B6E31C28();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B6E32C18();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v7)
  {
    uint64_t v8 = 0;
    unint64_t v245 = v6 & 0xC000000000000001;
    unint64_t v244 = v6 + 32;
    v249 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v248 = v8;
      id v9 = v245 ? (id)MEMORY[0x1BA9B4580]() : *(id *)(v244 + 8 * v8);
      unint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_structType);
      if (v11) {
        break;
      }
      id v212 = objc_msgSend(v10, sel_arrayType);
      if (v212)
      {
        uint64_t v213 = v212;
        uint64_t v214 = sub_1B6BA2634(0, (uint64_t)objc_msgSend(v212, sel_arrayLength), v212);

        v256 = (void *)v214;
        uint64_t v215 = *(void *)(v214 + 16);
        goto LABEL_299;
      }
      id v216 = v10;
      id v217 = objc_msgSend(v216, sel_argumentIndex);
      id v218 = objc_msgSend(v216, sel_name);
      uint64_t v219 = sub_1B6E31798();
      uint64_t v221 = v220;

      id v222 = objc_msgSend(v216, sel_textureReferenceType);
      v223 = v222;
      if (v222)
      {
        id v224 = objc_msgSend(v222, sel_textureType);
        id v225 = objc_msgSend(v223, sel_textureDataType);
        LODWORD(v227) = objc_msgSend(v223, sel_isDepthTexture);

        id v226 = 0;
        unint64_t v227 = v227;
      }
      else
      {
        id v228 = objc_msgSend(v216, sel_pointerType);
        if (v228)
        {
          unint64_t v229 = v228;
          id v224 = objc_msgSend(v228, sel_dataSize);
          id v225 = objc_msgSend(v229, sel_elementType);
          id v226 = objc_msgSend(v229, sel_alignment);

          unint64_t v227 = 0;
        }
        else
        {
          id v224 = (id)sub_1B630E8E0();
          id v225 = objc_msgSend(v216, sel_dataType);
          unint64_t v227 = (unint64_t)objc_msgSend(v216, sel_offset);

          id v226 = v224;
        }
      }
      sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
      uint64_t v230 = swift_allocObject();
      *(_OWORD *)(v230 + 16) = xmmword_1B6E77050;
      *(void *)(v230 + 32) = v219;
      *(void *)(v230 + 40) = v221;
      *(void *)(v230 + 48) = v217;
      *(void *)(v230 + 56) = v224;
      *(void *)(v230 + 64) = v225;
      *(void *)(v230 + 72) = v227;
      *(void *)(v230 + 80) = v226;
      v256 = (void *)v230;
      *(unsigned char *)(v230 + 88) = v223 != 0;

      uint64_t v231 = v249[2];
      uint64_t v232 = v231 + 1;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v215 = 1;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_300;
      }
      unint64_t v234 = v249;
LABEL_305:
      unint64_t v234 = sub_1B68C4E38(isUniquelyReferenced_nonNull_native, v232, 1, v234);
LABEL_306:
      if (v256[2])
      {
        unint64_t v235 = (unint64_t)&v234[8 * v234[2] + 4];
        if ((unint64_t)(v256 + 4) < v235 + (v215 << 6) && v235 < (unint64_t)&v256[8 * v215 + 4])
        {
LABEL_328:
          sub_1B6E32C88();
          __break(1u);
LABEL_329:
          uint64_t result = sub_1B6E32BE8();
          __break(1u);
          return result;
        }
        uint64_t v237 = v234;
        swift_arrayInitWithCopy();
        unint64_t v234 = v237;
        if (v215) {
          v237[2] += v215;
        }
      }
      v249 = v234;
      swift_bridgeObjectRelease();
      uint64_t v8 = v248 + 1;
      if (v248 + 1 == v7) {
        goto LABEL_326;
      }
    }
    v246 = v11;
    v247 = v10;
    id v12 = objc_msgSend(v11, sel_members);
    unint64_t v13 = sub_1B6E31C28();

    if (!(v13 >> 62))
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_14;
      }
      goto LABEL_297;
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B6E32C18();
    if (!v14)
    {
LABEL_297:
      v256 = (void *)MEMORY[0x1E4FBC860];
LABEL_298:
      swift_bridgeObjectRelease_n();

      uint64_t v215 = v256[2];
LABEL_299:
      uint64_t v231 = v249[2];
      uint64_t v232 = v231 + v215;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_300:
        unint64_t v234 = v249;
        if (v232 <= v249[3] >> 1) {
          goto LABEL_306;
        }
        LOBYTE(isUniquelyReferenced_nonNull_native) = 1;
      }
      else
      {
        LOBYTE(isUniquelyReferenced_nonNull_native) = 0;
        unint64_t v234 = v249;
      }
      if (v231 > v232) {
        uint64_t v232 = v231;
      }
      goto LABEL_305;
    }
LABEL_14:
    uint64_t v15 = 0;
    unint64_t v252 = v13 & 0xC000000000000001;
    unint64_t v250 = v13 + 32;
    v256 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v251 = v14;
    while (1)
    {
      uint64_t v255 = v15;
      if (v252) {
        id v16 = (id)MEMORY[0x1BA9B4580]();
      }
      else {
        id v16 = *(id *)(v250 + 8 * v15);
      }
      uint64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_structType);
      if (v18)
      {
        v253 = v17;
        id v257 = v18;
        id v19 = objc_msgSend(v18, sel_members);
        unint64_t v20 = sub_1B6E31C28();

        unint64_t v261 = v20;
        if (!(v20 >> 62))
        {
          uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          uint64_t v22 = v21;
          if (v21) {
            goto LABEL_22;
          }
          goto LABEL_272;
        }
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_1B6E32C18();
        if (!v22)
        {
LABEL_272:
          v272 = (void *)MEMORY[0x1E4FBC860];
LABEL_273:
          swift_bridgeObjectRelease_n();

          uint64_t v202 = v257;
          goto LABEL_274;
        }
LABEL_22:
        long long v23 = 0;
        unint64_t v263 = v20 & 0xC000000000000001;
        v259 = (id *)(v20 + 32);
        v272 = (void *)MEMORY[0x1E4FBC860];
        v265 = (char *)v22;
        while (1)
        {
          v270 = v23;
          if (v263) {
            id v24 = (id)MEMORY[0x1BA9B4580](v23, v261);
          }
          else {
            id v24 = v259[(void)v23];
          }
          long long v25 = v24;
          id v26 = objc_msgSend(v24, sel_structType);
          if (v26)
          {
            v281 = v26;
            id v27 = objc_msgSend(v26, sel_members);
            unint64_t v28 = sub_1B6E31C28();

            if (!(v28 >> 62))
            {
              uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              v267 = v25;
              if (v29) {
                goto LABEL_30;
              }
              goto LABEL_119;
            }
            swift_bridgeObjectRetain();
            uint64_t v29 = sub_1B6E32C18();
            v267 = v25;
            if (!v29)
            {
LABEL_119:
              unint64_t v31 = (void *)MEMORY[0x1E4FBC860];
LABEL_120:
              swift_bridgeObjectRelease_n();

              unint64_t v59 = v31;
              uint64_t v98 = v31[2];
              goto LABEL_121;
            }
LABEL_30:
            uint64_t v30 = 0;
            unint64_t v31 = (void *)MEMORY[0x1E4FBC860];
            while (1)
            {
              if ((v28 & 0xC000000000000001) != 0) {
                id v32 = (id)MEMORY[0x1BA9B4580](v30, v28);
              }
              else {
                id v32 = *(id *)(v28 + 8 * v30 + 32);
              }
              unint64_t v33 = v32;
              id v34 = objc_msgSend(v32, sel_structType);
              if (v34)
              {
                id v35 = v34;
                id v36 = objc_msgSend(v34, sel_members);
                unint64_t v37 = sub_1B6E31C28();

                uint64_t v38 = sub_1B6B981B4(v37);
                swift_bridgeObjectRelease();
                uint64_t v39 = *(void *)(v38 + 16);
                uint64_t v40 = v31[2];
                uint64_t v41 = v40 + v39;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  char v44 = 0;
                  goto LABEL_50;
                }
              }
              else
              {
                id v42 = objc_msgSend(v33, sel_arrayType);
                if (v42)
                {
                  id v43 = v42;
                  uint64_t v38 = sub_1B6BA2634(0, (uint64_t)objc_msgSend(v42, sel_arrayLength), v42);
                }
                else
                {
                  id v45 = v33;
                  sub_1B6BA2488(v45, (uint64_t)v291);
                  sub_1B6BA27CC((uint64_t)v291, (uint64_t)v293, (unint64_t *)&unk_1E9DD6768, (uint64_t)&type metadata for ShaderArgument);
                  if (*((void *)&v293[0] + 1))
                  {
                    long long v295 = v293[0];
                    long long v296 = v293[1];
                    v297[0] = v294[0];
                    *(_OWORD *)((char *)v297 + 9) = *(_OWORD *)((char *)v294 + 9);
                    sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
                    uint64_t v46 = swift_allocObject();
                    uint64_t v47 = sub_1B68D6DD0(v46, 1);
                    long long v49 = v296;
                    long long v48 = v297[0];
                    long long v50 = v295;
                    *(_OWORD *)((char *)v51 + 41) = *(_OWORD *)((char *)v297 + 9);
                    v51[1] = v49;
                    v51[2] = v48;
                    *uint64_t v51 = v50;
                    nullsub_1(v47);
                  }
                  else
                  {
                    uint64_t v52 = sub_1B6964C5C(0);
                  }
                  uint64_t v38 = v52;
                }
                uint64_t v39 = *(void *)(v38 + 16);
                uint64_t v40 = v31[2];
                uint64_t v41 = v40 + v39;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  char v44 = 0;
                  goto LABEL_50;
                }
              }
              if (v41 <= v31[3] >> 1)
              {
                if (!*(void *)(v38 + 16)) {
                  goto LABEL_31;
                }
                goto LABEL_54;
              }
              char v44 = 1;
LABEL_50:
              if (v40 <= v41) {
                uint64_t v53 = v41;
              }
              else {
                uint64_t v53 = v40;
              }
              unint64_t v31 = sub_1B68C4E38(v44, v53, 1, v31);
              if (!*(void *)(v38 + 16)) {
                goto LABEL_31;
              }
LABEL_54:
              unint64_t v54 = (unint64_t)&v31[8 * v31[2] + 4];
              if (v38 + 32 < v54 + (v39 << 6) && v54 < v38 + 32 + (v39 << 6)) {
                goto LABEL_328;
              }
              swift_arrayInitWithCopy();
              if (v39) {
                v31[2] += v39;
              }
LABEL_31:
              swift_bridgeObjectRelease();
              if (v29 == ++v30) {
                goto LABEL_120;
              }
            }
          }
          id v56 = objc_msgSend(v25, sel_arrayType);
          if (!v56)
          {
            id v86 = v25;
            id v286 = objc_msgSend(v86, sel_argumentIndex);
            id v87 = objc_msgSend(v86, sel_name);
            uint64_t v88 = sub_1B6E31798();
            uint64_t v90 = v89;

            id v91 = objc_msgSend(v86, sel_textureReferenceType);
            uint64_t v92 = v91;
            if (v91)
            {
              id v93 = objc_msgSend(v91, sel_textureType);
              id v94 = objc_msgSend(v92, sel_textureDataType);
              unsigned int v95 = objc_msgSend(v92, sel_isDepthTexture);

              id v96 = 0;
              id v97 = (id)v95;
            }
            else
            {
              id v99 = objc_msgSend(v86, sel_pointerType);
              if (v99)
              {
                uint64_t v100 = v99;
                id v93 = objc_msgSend(v99, sel_dataSize);
                id v94 = objc_msgSend(v100, sel_elementType);
                id v96 = objc_msgSend(v100, sel_alignment);

                id v97 = 0;
              }
              else
              {
                id v93 = (id)sub_1B630E8E0();
                id v94 = objc_msgSend(v86, sel_dataType);
                id v97 = objc_msgSend(v86, sel_offset);

                id v96 = v93;
              }
            }
            sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
            uint64_t v101 = swift_allocObject();
            *(_OWORD *)(v101 + 16) = xmmword_1B6E77050;
            *(void *)(v101 + 32) = v88;
            *(void *)(v101 + 40) = v90;
            unint64_t v59 = (void *)v101;
            *(void *)(v101 + 48) = v286;
            *(void *)(v101 + 56) = v93;
            *(void *)(v101 + 64) = v94;
            *(void *)(v101 + 72) = v97;
            *(void *)(v101 + 80) = v96;
            *(unsigned char *)(v101 + 88) = v92 != 0;

            uint64_t v102 = v272[2];
            uint64_t v103 = v102 + 1;
            int v104 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v98 = 1;
            if (!v104)
            {
              int v105 = v272;
              goto LABEL_128;
            }
            goto LABEL_122;
          }
          int v57 = v56;
          v268 = v25;
          id v275 = objc_msgSend(v56, sel_arrayLength);
          if (v275) {
            break;
          }
          unint64_t v59 = (void *)MEMORY[0x1E4FBC860];
LABEL_112:

          uint64_t v98 = v59[2];
LABEL_121:
          uint64_t v102 = v272[2];
          uint64_t v103 = v102 + v98;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            LOBYTE(v104) = 0;
            int v105 = v272;
            goto LABEL_126;
          }
LABEL_122:
          int v105 = v272;
          if (v103 > v272[3] >> 1)
          {
            LOBYTE(v104) = 1;
LABEL_126:
            if (v102 > v103) {
              uint64_t v103 = v102;
            }
LABEL_128:
            int v105 = sub_1B68C4E38(v104, v103, 1, v105);
            if (!v59[2]) {
              goto LABEL_23;
            }
            goto LABEL_129;
          }
          if (!v59[2]) {
            goto LABEL_23;
          }
LABEL_129:
          uint64_t v106 = v105;
          unint64_t v107 = (unint64_t)&v105[8 * v105[2] + 4];
          if ((unint64_t)(v59 + 4) < v107 + (v98 << 6) && v107 < (unint64_t)&v59[8 * v98 + 4]) {
            goto LABEL_328;
          }
          swift_arrayInitWithCopy();
          int v105 = v106;
          if (v98) {
            v106[2] += v98;
          }
LABEL_23:
          v272 = v105;
          swift_bridgeObjectRelease();
          long long v23 = v270 + 1;
          if (v270 + 1 == v265) {
            goto LABEL_273;
          }
        }
        uint64_t v58 = 0;
        unint64_t v59 = (void *)MEMORY[0x1E4FBC860];
        v273 = v57;
        while (1)
        {
          id v60 = objc_msgSend(v57, sel_elementStructType);
          if (v60) {
            break;
          }
          id v77 = objc_msgSend(v57, sel_elementArrayType);
          if (!v77) {
            goto LABEL_329;
          }
          uint64_t v78 = v77;
          uint64_t v66 = (void *)sub_1B6BA2634(0, (uint64_t)objc_msgSend(v77, sel_arrayLength), v77);
LABEL_94:

          uint64_t v79 = v66[2];
          uint64_t v80 = v59[2];
          uint64_t v81 = v80 + v79;
          char v82 = swift_isUniquelyReferenced_nonNull_native();
          if ((v82 & 1) != 0 && v81 <= v59[3] >> 1)
          {
            if (!v66[2]) {
              goto LABEL_65;
            }
          }
          else
          {
            if (v80 <= v81) {
              uint64_t v83 = v80 + v79;
            }
            else {
              uint64_t v83 = v80;
            }
            unint64_t v59 = sub_1B68C4E38(v82, v83, 1, v59);
            if (!v66[2]) {
              goto LABEL_65;
            }
          }
          unint64_t v84 = (unint64_t)&v59[8 * v59[2] + 4];
          if ((unint64_t)(v66 + 4) < v84 + (v79 << 6) && v84 < (unint64_t)&v66[8 * v79 + 4]) {
            goto LABEL_328;
          }
          swift_arrayInitWithCopy();
          if (v79) {
            v59[2] += v79;
          }
LABEL_65:
          swift_bridgeObjectRelease();
          if ((id)++v58 == v275) {
            goto LABEL_112;
          }
        }
        id v61 = v60;
        uint64_t v282 = v58;
        v285 = v59;
        id v62 = objc_msgSend(v60, sel_members);
        unint64_t v63 = sub_1B6E31C28();

        if (!(v63 >> 62))
        {
          uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          v278 = v61;
          if (v64) {
            goto LABEL_69;
          }
          goto LABEL_92;
        }
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_1B6E32C18();
        v278 = v61;
        if (!v64)
        {
LABEL_92:
          uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
LABEL_93:
          swift_bridgeObjectRelease_n();
          uint64_t v58 = v282;
          unint64_t v59 = v285;
          int v57 = v273;
          uint64_t v78 = v278;
          goto LABEL_94;
        }
LABEL_69:
        uint64_t v65 = 0;
        uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
        while (1)
        {
          if ((v63 & 0xC000000000000001) != 0) {
            id v67 = (id)MEMORY[0x1BA9B4580](v65, v63);
          }
          else {
            id v67 = *(id *)(v63 + 8 * v65 + 32);
          }
          char v68 = v67;
          v290[0] = v67;
          sub_1B6B9CEA0(v290, &v289);

          uint64_t v69 = v289;
          uint64_t v70 = *(void *)(v289 + 16);
          uint64_t v71 = v66[2];
          uint64_t v72 = v71 + v70;
          int v73 = swift_isUniquelyReferenced_nonNull_native();
          if (v73 && v72 <= v66[3] >> 1)
          {
            if (!*(void *)(v69 + 16)) {
              goto LABEL_70;
            }
          }
          else
          {
            if (v71 <= v72) {
              uint64_t v74 = v71 + v70;
            }
            else {
              uint64_t v74 = v71;
            }
            uint64_t v66 = sub_1B68C4E38(v73, v74, 1, v66);
            if (!*(void *)(v69 + 16)) {
              goto LABEL_70;
            }
          }
          unint64_t v75 = (unint64_t)&v66[8 * v66[2] + 4];
          if (v69 + 32 < v75 + (v70 << 6) && v75 < v69 + 32 + (v70 << 6)) {
            goto LABEL_328;
          }
          swift_arrayInitWithCopy();
          if (v70) {
            v66[2] += v70;
          }
LABEL_70:
          swift_bridgeObjectRelease();
          if (v64 == ++v65) {
            goto LABEL_93;
          }
        }
      }
      id v260 = objc_msgSend(v17, sel_arrayType);
      if (!v260)
      {
        id v190 = v17;
        id v191 = objc_msgSend(v190, sel_argumentIndex);
        id v192 = objc_msgSend(v190, sel_name);
        uint64_t v193 = sub_1B6E31798();
        uint64_t v195 = v194;

        id v196 = objc_msgSend(v190, sel_textureReferenceType);
        v197 = v196;
        if (v196)
        {
          id v198 = objc_msgSend(v196, sel_textureType);
          id v199 = objc_msgSend(v197, sel_textureDataType);
          LODWORD(v201) = objc_msgSend(v197, sel_isDepthTexture);

          id v200 = 0;
          unint64_t v201 = v201;
        }
        else
        {
          id v203 = objc_msgSend(v190, sel_pointerType);
          if (v203)
          {
            unint64_t v204 = v203;
            id v198 = objc_msgSend(v203, sel_dataSize);
            id v199 = objc_msgSend(v204, sel_elementType);
            id v200 = objc_msgSend(v204, sel_alignment);

            unint64_t v201 = 0;
          }
          else
          {
            id v198 = (id)sub_1B630E8E0();
            id v199 = objc_msgSend(v190, sel_dataType);
            unint64_t v201 = (unint64_t)objc_msgSend(v190, sel_offset);

            id v200 = v198;
          }
        }
        sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
        uint64_t v205 = swift_allocObject();
        *(_OWORD *)(v205 + 16) = xmmword_1B6E77050;
        *(void *)(v205 + 32) = v193;
        *(void *)(v205 + 40) = v195;
        *(void *)(v205 + 48) = v191;
        *(void *)(v205 + 56) = v198;
        *(void *)(v205 + 64) = v199;
        *(void *)(v205 + 72) = v201;
        *(void *)(v205 + 80) = v200;
        v272 = (void *)v205;
        *(unsigned char *)(v205 + 88) = v197 != 0;

        uint64_t v206 = v256[2];
        uint64_t v207 = v206 + 1;
        int v208 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v209 = 1;
        if (!v208) {
          goto LABEL_281;
        }
        goto LABEL_275;
      }
      v254 = v17;
      id v258 = objc_msgSend(v260, sel_arrayLength);
      if (v258) {
        break;
      }
      v272 = (void *)MEMORY[0x1E4FBC860];
LABEL_265:

      uint64_t v202 = v260;
LABEL_274:

      uint64_t v209 = v272[2];
      uint64_t v206 = v256[2];
      uint64_t v207 = v206 + v209;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        LOBYTE(v208) = 0;
        goto LABEL_279;
      }
LABEL_275:
      uint64_t v210 = v272;
      if (v207 > v256[3] >> 1)
      {
        LOBYTE(v208) = 1;
LABEL_279:
        if (v206 > v207) {
          uint64_t v207 = v206;
        }
LABEL_281:
        v256 = sub_1B68C4E38(v208, v207, 1, v256);
        uint64_t v210 = v272;
        if (!v272[2]) {
          goto LABEL_15;
        }
        goto LABEL_282;
      }
      if (!v272[2]) {
        goto LABEL_15;
      }
LABEL_282:
      unint64_t v211 = (unint64_t)&v256[8 * v256[2] + 4];
      if ((unint64_t)(v210 + 4) < v211 + (v209 << 6) && v211 < (unint64_t)&v210[8 * v209 + 4]) {
        goto LABEL_328;
      }
      swift_arrayInitWithCopy();
      if (v209) {
        v256[2] += v209;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v15 = v255 + 1;
      if (v255 + 1 == v251) {
        goto LABEL_298;
      }
    }
    uint64_t v108 = 0;
    v272 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v262 = v108;
      id v109 = objc_msgSend(v260, sel_elementStructType);
      if (!v109) {
        break;
      }
      id v271 = v109;
      id v110 = objc_msgSend(v109, sel_members);
      unint64_t v111 = sub_1B6E31C28();

      if (!(v111 >> 62))
      {
        uint64_t v112 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v112) {
          goto LABEL_141;
        }
        goto LABEL_246;
      }
      swift_bridgeObjectRetain();
      uint64_t v112 = sub_1B6E32C18();
      if (v112)
      {
LABEL_141:
        uint64_t v113 = 0;
        unint64_t v274 = v111 & 0xC000000000000001;
        unint64_t v264 = v111 + 32;
        uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v266 = v112;
        unint64_t v269 = v111;
        while (1)
        {
          if (v274) {
            id v115 = (id)MEMORY[0x1BA9B4580](v113, v111);
          }
          else {
            id v115 = *(id *)(v264 + 8 * v113);
          }
          int v116 = v115;
          id v117 = objc_msgSend(v115, sel_structType);
          if (!v117)
          {
            id v133 = objc_msgSend(v116, sel_arrayType);
            if (v133)
            {
              uint64_t v134 = v133;
              v122 = (void *)sub_1B6BA2634(0, (uint64_t)objc_msgSend(v133, sel_arrayLength), v133);

              uint64_t v135 = v122[2];
              uint64_t v136 = v114[2];
              uint64_t v137 = v114;
              uint64_t v138 = v136 + v135;
              uint64_t v139 = v137;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                goto LABEL_176;
              }
            }
            else
            {
              id v140 = v116;
              sub_1B6BA2488(v140, (uint64_t)v292);
              sub_1B6BA27CC((uint64_t)v292, (uint64_t)v298, (unint64_t *)&unk_1E9DD6768, (uint64_t)&type metadata for ShaderArgument);
              if (*((void *)&v298[0] + 1))
              {
                long long v300 = v298[0];
                long long v301 = v298[1];
                v302[0] = v299[0];
                *(_OWORD *)((char *)v302 + 9) = *(_OWORD *)((char *)v299 + 9);
                sub_1B6BA3C28(0, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBE00]);
                uint64_t v141 = swift_allocObject();
                uint64_t v142 = sub_1B68D6DD0(v141, 1);
                long long v144 = v301;
                long long v143 = v302[0];
                long long v145 = v300;
                *(_OWORD *)((char *)v146 + 41) = *(_OWORD *)((char *)v302 + 9);
                v146[1] = v144;
                v146[2] = v143;
                *id v146 = v145;
                nullsub_1(v142);
              }
              else
              {
                uint64_t v147 = sub_1B6964C5C(0);
              }
              v122 = (void *)v147;

              uint64_t v135 = v122[2];
              uint64_t v136 = v114[2];
              uint64_t v148 = v114;
              uint64_t v138 = v136 + v135;
              uint64_t v139 = v148;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
LABEL_176:
                char v149 = 0;
                goto LABEL_185;
              }
            }
            goto LABEL_181;
          }
          uint64_t v283 = v113;
          v276 = v117;
          id v118 = objc_msgSend(v117, sel_members);
          unint64_t v119 = sub_1B6E31C28();

          v287 = v114;
          if (!(v119 >> 62))
          {
            uint64_t v120 = *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            v279 = v116;
            if (v120) {
              break;
            }
            goto LABEL_178;
          }
          swift_bridgeObjectRetain();
          uint64_t v120 = sub_1B6E32C18();
          v279 = v116;
          if (v120) {
            break;
          }
LABEL_178:
          v122 = (void *)MEMORY[0x1E4FBC860];
LABEL_179:
          swift_bridgeObjectRelease_n();

          uint64_t v135 = v122[2];
          uint64_t v136 = v287[2];
          uint64_t v138 = v136 + v135;
          uint64_t v139 = v287;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            char v149 = 0;
            uint64_t v112 = v266;
            unint64_t v111 = v269;
            uint64_t v113 = v283;
            goto LABEL_185;
          }
          uint64_t v112 = v266;
          unint64_t v111 = v269;
          uint64_t v113 = v283;
LABEL_181:
          if (v138 <= v139[3] >> 1)
          {
            uint64_t v114 = v139;
            if (!v122[2]) {
              goto LABEL_142;
            }
            goto LABEL_189;
          }
          char v149 = 1;
LABEL_185:
          if (v136 <= v138) {
            uint64_t v150 = v138;
          }
          else {
            uint64_t v150 = v136;
          }
          uint64_t v114 = sub_1B68C4E38(v149, v150, 1, v139);
          if (!v122[2]) {
            goto LABEL_142;
          }
LABEL_189:
          unint64_t v151 = (unint64_t)&v114[8 * v114[2] + 4];
          if ((unint64_t)(v122 + 4) < v151 + (v135 << 6) && v151 < (unint64_t)&v122[8 * v135 + 4]) {
            goto LABEL_328;
          }
          swift_arrayInitWithCopy();
          if (v135) {
            v114[2] += v135;
          }
LABEL_142:
          swift_bridgeObjectRelease();
          if (++v113 == v112) {
            goto LABEL_247;
          }
        }
        uint64_t v121 = 0;
        v122 = (void *)MEMORY[0x1E4FBC860];
        while (2)
        {
          if ((v119 & 0xC000000000000001) != 0) {
            id v123 = (id)MEMORY[0x1BA9B4580](v121, v119);
          }
          else {
            id v123 = *(id *)(v119 + 8 * v121 + 32);
          }
          uint64_t v124 = v123;
          v290[0] = v123;
          sub_1B6B9CEA0(v290, &v289);

          uint64_t v125 = v289;
          uint64_t v126 = *(void *)(v289 + 16);
          uint64_t v127 = v122[2];
          uint64_t v128 = v127 + v126;
          int v129 = swift_isUniquelyReferenced_nonNull_native();
          if (v129 && v128 <= v122[3] >> 1)
          {
            if (!*(void *)(v125 + 16)) {
              goto LABEL_150;
            }
          }
          else
          {
            if (v127 <= v128) {
              uint64_t v130 = v127 + v126;
            }
            else {
              uint64_t v130 = v127;
            }
            v122 = sub_1B68C4E38(v129, v130, 1, v122);
            if (!*(void *)(v125 + 16))
            {
LABEL_150:
              swift_bridgeObjectRelease();
              if (v120 == ++v121) {
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        unint64_t v131 = (unint64_t)&v122[8 * v122[2] + 4];
        if (v125 + 32 < v131 + (v126 << 6) && v131 < v125 + 32 + (v126 << 6)) {
          goto LABEL_328;
        }
        swift_arrayInitWithCopy();
        if (v126) {
          v122[2] += v126;
        }
        goto LABEL_150;
      }
LABEL_246:
      uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
LABEL_247:
      swift_bridgeObjectRelease_n();
LABEL_248:

      id v181 = v114;
      uint64_t v182 = v114[2];
      uint64_t v183 = v272;
      uint64_t v184 = v272[2];
      uint64_t v185 = v184 + v182;
      char v186 = swift_isUniquelyReferenced_nonNull_native();
      if ((v186 & 1) == 0 || v185 > v272[3] >> 1)
      {
        if (v184 <= v185) {
          uint64_t v187 = v184 + v182;
        }
        else {
          uint64_t v187 = v184;
        }
        uint64_t v183 = sub_1B68C4E38(v186, v187, 1, v272);
      }
      if (v181[2])
      {
        unint64_t v188 = (unint64_t)&v183[8 * v183[2] + 4];
        if ((unint64_t)(v181 + 4) < v188 + (v182 << 6) && v188 < (unint64_t)&v181[8 * v182 + 4]) {
          goto LABEL_328;
        }
        swift_arrayInitWithCopy();
        if (v182) {
          v183[2] += v182;
        }
      }
      v272 = v183;
      swift_bridgeObjectRelease();
      uint64_t v108 = v262 + 1;
      if ((id)(v262 + 1) == v258) {
        goto LABEL_265;
      }
    }
    id v153 = objc_msgSend(v260, sel_elementArrayType);
    if (!v153) {
      goto LABEL_329;
    }
    id v271 = v153;
    id v277 = objc_msgSend(v153, sel_arrayLength);
    if (!v277)
    {
      uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_248;
    }
    uint64_t v154 = 0;
    uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      id v155 = objc_msgSend(v271, sel_elementStructType);
      if (v155) {
        break;
      }
      id v171 = objc_msgSend(v271, sel_elementArrayType);
      if (!v171) {
        goto LABEL_329;
      }
      uint64_t v172 = v171;
      uint64_t v160 = (void *)sub_1B6BA2634(0, (uint64_t)objc_msgSend(v171, sel_arrayLength), v171);
LABEL_229:

      uint64_t v173 = v160[2];
      uint64_t v174 = v114[2];
      id v175 = v114;
      uint64_t v176 = v174 + v173;
      char v177 = swift_isUniquelyReferenced_nonNull_native();
      if ((v177 & 1) != 0 && v176 <= v175[3] >> 1)
      {
        uint64_t v114 = v175;
        if (!v160[2]) {
          goto LABEL_200;
        }
      }
      else
      {
        if (v174 <= v176) {
          uint64_t v178 = v174 + v173;
        }
        else {
          uint64_t v178 = v174;
        }
        uint64_t v114 = sub_1B68C4E38(v177, v178, 1, v175);
        if (!v160[2]) {
          goto LABEL_200;
        }
      }
      unint64_t v179 = (unint64_t)&v114[8 * v114[2] + 4];
      if ((unint64_t)(v160 + 4) < v179 + (v173 << 6) && v179 < (unint64_t)&v160[8 * v173 + 4]) {
        goto LABEL_328;
      }
      swift_arrayInitWithCopy();
      if (v173) {
        v114[2] += v173;
      }
LABEL_200:
      swift_bridgeObjectRelease();
      if ((id)++v154 == v277) {
        goto LABEL_248;
      }
    }
    uint64_t v284 = v154;
    v288 = v114;
    id v280 = v155;
    id v156 = objc_msgSend(v155, sel_members);
    unint64_t v157 = sub_1B6E31C28();

    if (!(v157 >> 62))
    {
      uint64_t v158 = *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v158) {
        goto LABEL_204;
      }
      goto LABEL_227;
    }
    swift_bridgeObjectRetain();
    uint64_t v158 = sub_1B6E32C18();
    if (!v158)
    {
LABEL_227:
      uint64_t v160 = (void *)MEMORY[0x1E4FBC860];
LABEL_228:
      swift_bridgeObjectRelease_n();
      uint64_t v154 = v284;
      uint64_t v114 = v288;
      uint64_t v172 = v280;
      goto LABEL_229;
    }
LABEL_204:
    uint64_t v159 = 0;
    uint64_t v160 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      if ((v157 & 0xC000000000000001) != 0) {
        id v161 = (id)MEMORY[0x1BA9B4580](v159, v157);
      }
      else {
        id v161 = *(id *)(v157 + 8 * v159 + 32);
      }
      int v162 = v161;
      v290[0] = v161;
      sub_1B6B9CEA0(v290, &v289);

      uint64_t v163 = v289;
      uint64_t v164 = *(void *)(v289 + 16);
      uint64_t v165 = v160[2];
      uint64_t v166 = v165 + v164;
      int v167 = swift_isUniquelyReferenced_nonNull_native();
      if (v167 && v166 <= v160[3] >> 1)
      {
        if (!*(void *)(v163 + 16)) {
          goto LABEL_205;
        }
      }
      else
      {
        if (v165 <= v166) {
          uint64_t v168 = v165 + v164;
        }
        else {
          uint64_t v168 = v165;
        }
        uint64_t v160 = sub_1B68C4E38(v167, v168, 1, v160);
        if (!*(void *)(v163 + 16)) {
          goto LABEL_205;
        }
      }
      unint64_t v169 = (unint64_t)&v160[8 * v160[2] + 4];
      if (v163 + 32 < v169 + (v164 << 6) && v169 < v163 + 32 + (v164 << 6)) {
        goto LABEL_328;
      }
      swift_arrayInitWithCopy();
      if (v164) {
        v160[2] += v164;
      }
LABEL_205:
      swift_bridgeObjectRelease();
      if (v158 == ++v159) {
        goto LABEL_228;
      }
    }
  }
  v249 = (void *)MEMORY[0x1E4FBC860];
LABEL_326:
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();

  return (uint64_t)v249;
}

uint64_t sub_1B6B9F0E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB1360(*a1, *a2);
}

uint64_t sub_1B6B9F0F4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B9F1A0()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B9F238()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B9F2E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BA1E80();
  *a1 = result;
  return result;
}

void sub_1B6B9F310(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC000000736E6F69;
  unint64_t v4 = 0xE600000000000000;
  unint64_t v5 = 0x7365756C6176;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000011;
    unint64_t v4 = 0x80000001B6F2E700;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7470697263736564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B6B9F378()
{
  unint64_t v1 = 0x7365756C6176;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7470697263736564;
  }
}

uint64_t sub_1B6B9F3DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BA1E80();
  *a1 = result;
  return result;
}

uint64_t sub_1B6B9F404(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA2A7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B9F440(uint64_t a1)
{
  unint64_t v2 = sub_1B6BA2A7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B9F47C(void *a1)
{
  unint64_t v3 = v1;
  sub_1B6395BC8(0, &qword_1E9DD6778, (uint64_t (*)(void))sub_1B6BA2A7C, (uint64_t)&type metadata for CustomParameters.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA2A7C();
  sub_1B6E33A88();
  uint64_t v14 = v3[2];
  char v13 = 0;
  sub_1B6BA3C28(0, &qword_1EB980218, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBB320]);
  sub_1B6BA2D88();
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v14 = v3[3];
    char v13 = 1;
    sub_1B6BA3C28(0, &qword_1EB980238, (uint64_t)&type metadata for ShaderParameter, MEMORY[0x1E4FBB320]);
    sub_1B6BA2E70();
    sub_1B6E32FA8();
    uint64_t v14 = v3[4];
    char v13 = 2;
    sub_1B6BA3C28(0, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBB320]);
    sub_1B6BA2F58();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6B9F708(void *a1)
{
  uint64_t v2 = v1;
  sub_1B6395BC8(0, &qword_1EB980938, (uint64_t (*)(void))sub_1B6BA2A7C, (uint64_t)&type metadata for CustomParameters.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v16 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA2A7C();
  uint64_t v9 = v18;
  sub_1B6E33A48();
  if (v9)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v17;
    sub_1B6BA3C28(0, &qword_1EB980218, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBB320]);
    char v19 = 0;
    sub_1B6BA2AD0();
    sub_1B6E32DF8();
    id v11 = v8;
    *(void *)(v1 + 16) = v20;
    sub_1B6BA3C28(0, &qword_1EB980238, (uint64_t)&type metadata for ShaderParameter, MEMORY[0x1E4FBB320]);
    char v19 = 1;
    sub_1B6BA2BB8();
    sub_1B6E32DF8();
    *(void *)(v1 + 24) = v20;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_1B62C14BC(a1, v13);
    if (sub_1B62B8F14(2021, v13, v14))
    {
      sub_1B6BA3C28(0, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBB320]);
      char v19 = 2;
      sub_1B6BA2CA0();
      sub_1B6E32D78();
      if (v20) {
        uint64_t v15 = v20;
      }
      else {
        uint64_t v15 = MEMORY[0x1E4FBC860];
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v5);
      uint64_t v15 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v2 + 32) = v15;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t type metadata accessor for CustomParameters()
{
  return self;
}

uint64_t destroy for ShaderArguments()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ShaderArguments(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShaderArguments(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ShaderArguments(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderArguments(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderArguments(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderArguments()
{
  return &type metadata for ShaderArguments;
}

uint64_t getEnumTagSinglePayload for ShaderParameter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 15);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 0xE | (*(unsigned __int8 *)(a1 + 64) >> 7)) ^ 0xF;
  if (v3 >= 0xE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ShaderParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 - 15;
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 64) = 16 * (((-a2 >> 1) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1B6B9FE24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64) >> 7;
}

uint64_t sub_1B6B9FE30(uint64_t result)
{
  *(unsigned char *)(result + 64) &= ~0x80u;
  return result;
}

uint64_t sub_1B6B9FE40(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = *(unsigned char *)(result + 64) & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for ShaderParameter()
{
  return &type metadata for ShaderParameter;
}

uint64_t initializeWithCopy for ShaderArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShaderArgument(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for ShaderArgument(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderArgument(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderArgument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderArgument()
{
  return &type metadata for ShaderArgument;
}

uint64_t sub_1B6BA0024@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1B6B9F708(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B6BA007C(void *a1)
{
  return sub_1B6B9F47C(a1);
}

void *sub_1B6BA00A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v4 = (char *)v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v5;
  v7[3] = v4;
  void v7[4] = v6;
  uint64_t v8 = *((void *)v4 + 2);
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    do
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1B6C16784((uint64_t)v4);
      }
      uint64_t v10 = &v4[v9];
      if (v4[v9 + 96] < 0)
      {
        uint64_t v13 = *((void *)v10 + 4);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(a2 + 8))(&v13, 0, ObjectType, a2);
        *((void *)v10 + 4) = v13;
        *(_OWORD *)(v10 + 40) = 0u;
        *(_OWORD *)(v10 + 56) = 0u;
        *(_OWORD *)(v10 + 72) = 0u;
        *((void *)v10 + 11) = 0;
        v10[96] = 0x80;
      }
      v9 += 80;
      --v8;
    }
    while (v8);
    v7[3] = v4;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

void sub_1B6BA0218(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(*(void *)v1 + 16) + 16);
}

void (*sub_1B6BA022C(void *a1, void *a2))(void **a1)
{
  uint64_t v5 = malloc(0x111uLL);
  *a1 = v5;
  uint64_t v6 = *(void *)(*(void *)v2 + 16) + (*a2 << 6);
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(v6 + 80);
  char v9 = *(unsigned char *)(v6 + 88);
  uint64_t v10 = *(void *)(*(void *)v2 + 24) + 80 * *a2;
  char v11 = *(unsigned char *)(v10 + 96);
  long long v12 = *(_OWORD *)(v6 + 48);
  long long v13 = *(_OWORD *)(v6 + 64);
  long long v14 = *(_OWORD *)(v10 + 32);
  long long v15 = *(_OWORD *)(v10 + 48);
  long long v16 = *(_OWORD *)(v10 + 64);
  long long v17 = *(_OWORD *)(v10 + 80);
  void *v5 = *(void *)(v6 + 32);
  v5[1] = v7;
  *((_OWORD *)v5 + 1) = v12;
  *((_OWORD *)v5 + 2) = v13;
  v5[6] = v8;
  *((unsigned char *)v5 + 56) = v9;
  *((_OWORD *)v5 + 4) = v14;
  *((_OWORD *)v5 + 5) = v15;
  *((_OWORD *)v5 + 6) = v16;
  *((_OWORD *)v5 + 7) = v17;
  *((unsigned char *)v5 + 128) = v11;
  swift_bridgeObjectRetain();
  return sub_1B6BA02DC;
}

void sub_1B6BA02DC(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t)*a1 + 144;
  long long v3 = v1[7];
  v1[15] = v1[6];
  v1[16] = v3;
  *((unsigned char *)v1 + 272) = *((unsigned char *)v1 + 128);
  long long v4 = v1[3];
  v1[11] = v1[2];
  v1[12] = v4;
  long long v5 = v1[5];
  v1[13] = v1[4];
  v1[14] = v5;
  long long v6 = v1[1];
  v1[9] = *v1;
  v1[10] = v6;
  sub_1B62C7BF4(v2);

  free(v1);
}

uint64_t sub_1B6BA0340@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2;
  *(_OWORD *)a2 = *a1;
  *(void *)(a2 + 16) = v3;
  return swift_retain();
}

uint64_t sub_1B6BA0358@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)v1 + 16) + 16);
  *a1 = *(void *)v1;
  a1[1] = 0;
  a1[2] = v2;
  return swift_retain();
}

void *sub_1B6BA0370@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result + (a2 & ~(a2 >> 63));
  return result;
}

uint64_t sub_1B6BA0384@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1B6BA179C(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1B6BA03BC()
{
  return *(void *)(*(void *)(*(void *)v0 + 16) + 16);
}

void *sub_1B6BA03CC()
{
  uint64_t v1 = sub_1B69FEBA0(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1B6BA0404(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B98038(a1, a2, a3);
}

void *sub_1B6BA0428(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B6BA1848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v3;
  v7[3] = v5;
  void v7[4] = v6;
  swift_bridgeObjectRetain();
  return v7;
}

void *sub_1B6BA0500@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B6BA0428(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B6BA052C()
{
  return sub_1B6BA4514(&qword_1E9DD6720, 255, sub_1B6BA0578);
}

void sub_1B6BA0578(uint64_t a1)
{
}

uint64_t sub_1B6BA0598(uint64_t a1, uint64_t a2)
{
  return sub_1B6BA4514(&qword_1E9DD6738, a2, (void (*)(uint64_t))type metadata accessor for CustomParameters);
}

uint64_t sub_1B6BA05E0()
{
  return sub_1B6BA4514(&qword_1E9DD6740, 255, sub_1B6BA062C);
}

void sub_1B6BA062C(uint64_t a1)
{
}

void sub_1B6BA064C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for CustomParameters();
    uint64_t v8 = sub_1B6BA4514(&qword_1E9DD6730, v7, (void (*)(uint64_t))type metadata accessor for CustomParameters);
    unint64_t v9 = a3(a1, v6, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1B6BA06E4()
{
  return sub_1B6BA4514(&qword_1E9DD6750, 255, sub_1B6BA0730);
}

void sub_1B6BA0730(uint64_t a1)
{
}

uint64_t sub_1B6BA0750(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1B6BA4514(&qword_1EB97EC00, a2, (void (*)(uint64_t))type metadata accessor for CustomParameters);
  uint64_t result = sub_1B6BA4514(&qword_1EB97EBF8, v3, (void (*)(uint64_t))type metadata accessor for CustomParameters);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B6BA07D8()
{
  unint64_t result = qword_1EB97E9F0;
  if (!qword_1EB97E9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9F0);
  }
  return result;
}

id sub_1B6BA082C(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  sub_1B634F71C(a1, (uint64_t)v9);
  if (v10 < 0)
  {
    v10 &= ~0x80u;
    id result = (id)sub_1B62EBE70(v9[0], &v12);
    if (result)
    {
      objc_msgSend(v2, sel_setTexture_atIndex_, result, a2);
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1B62D6998((uint64_t)v9, (uint64_t)v11);
    sub_1B62D6998((uint64_t)v11, (uint64_t)&v12);
    switch(v16)
    {
      case 1:
        *(void *)&long long v5 = v12;
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 8, a2, v5, v6, v7, v8);
        break;
      case 2:
      case 3:
      case 4:
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 16, a2, v12, v6, v7, v8);
        break;
      case 5:
      case 6:
      case 10:
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 32, a2, v12, v13, v7, v8);
        break;
      case 7:
        *(void *)&long long v6 = v13;
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 24, a2, v12, v6, v7, v8);
        break;
      case 8:
      case 9:
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 48, a2, v12, v13, v14, v8);
        break;
      case 11:
      case 12:
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 64, a2, v12, v13, v14, v15);
        break;
      case 13:
        LOBYTE(v5) = v12;
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 1, a2, v5, v6, v7, v8);
        break;
      case 14:
      case 15:
        LODWORD(v5) = v12;
        goto LABEL_11;
      default:
        LODWORD(v5) = v12;
LABEL_11:
        id result = objc_msgSend(v2, sel_setBytes_length_atIndex_, &v5, 4, a2, v5, v6, v7, v8);
        break;
    }
  }
  return result;
}

uint64_t sub_1B6BA0A84(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B6BA0DE8(a1, a2, a3, (void (*)(void))sub_1B6ACC40C, (void (*)(void))sub_1B6AB6A6C, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1B636A59C);
}

uint64_t sub_1B6BA0AC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  unint64_t v7 = sub_1B62C1A30(a1);
  unsigned __int8 v9 = v8;
  char v10 = v8 ^ 1;
  uint64_t v11 = *(void *)(v6 + 24);
  uint64_t v12 = *(void *)(v6 + 16) + ((v8 ^ 1) & 1);
  if (v11 >= v12 && (a2 & 1) != 0)
  {
LABEL_6:
    if (v9) {
      return v10 & 1;
    }
LABEL_7:
    sub_1B6AD7634(v7, a1, *v3);
    return v10 & 1;
  }
  if (v11 >= v12 && (a2 & 1) == 0)
  {
    sub_1B6ACC424();
    goto LABEL_6;
  }
  sub_1B6AB6A84(v12, a2 & 1);
  unint64_t v14 = sub_1B62C1A30(a1);
  if ((v9 & 1) == (v15 & 1))
  {
    unint64_t v7 = v14;
    if (v9) {
      return v10 & 1;
    }
    goto LABEL_7;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA0BA0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B6BA1510(a1, a2, a3, (void (*)(void))sub_1B6ACC9A8, (void (*)(void))sub_1B6AB76C4, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1B636A59C);
}

uint64_t sub_1B6BA0BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  long long v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62C1A30(a2);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a3 & 1) != 0)
  {
LABEL_6:
    char v16 = *v5;
    if (v13)
    {
LABEL_7:
      uint64_t v17 = (void *)(v16[7] + 88 * v11);
      uint64_t v32 = v17[1];
      uint64_t v18 = v17[2];
      uint64_t v19 = v17[3];
      uint64_t v20 = v17[4];
      uint64_t v21 = v17[5];
      uint64_t v22 = v17[6];
      uint64_t v23 = v17[7];
      uint64_t v24 = a1;
      uint64_t v26 = v17[8];
      uint64_t v25 = v17[9];
      uint64_t v27 = v17[10];
      *a4 = *v17;
      uint64_t result = sub_1B6BA27CC(v24, (uint64_t)v17, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom);
      uint64_t v29 = v32;
LABEL_11:
      a4[1] = v29;
      a4[2] = v18;
      a4[3] = v19;
      a4[4] = v20;
      a4[5] = v21;
      a4[6] = v22;
      a4[7] = v23;
      a4[8] = v26;
      a4[9] = v25;
      a4[10] = v27;
      return result;
    }
LABEL_10:
    uint64_t result = sub_1B6AD7668(v11, a2, a1, v16);
    uint64_t v29 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v26 = 0;
    uint64_t v25 = 0;
    uint64_t v27 = 0;
    *a4 = 1;
    goto LABEL_11;
  }
  if (v14 >= v15 && (a3 & 1) == 0)
  {
    sub_1B6ACC9C0();
    goto LABEL_6;
  }
  sub_1B6AB76DC(v15, a3 & 1);
  unint64_t v30 = sub_1B62C1A30(a2);
  if ((v13 & 1) == (v31 & 1))
  {
    unint64_t v11 = v30;
    char v16 = *v5;
    if (v13) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA0D68(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B6BA1510(a1, a2, a3, (void (*)(void))sub_1B6ACCBB8, (void (*)(void))sub_1B6AB7CD8, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1B636A59C);
}

uint64_t sub_1B6BA0DA8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B6BA0DE8(a1, a2, a3, (void (*)(void))sub_1B6ACCBD0, (void (*)(void))sub_1B6AB7D08, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1B636A59C);
}

uint64_t sub_1B6BA0DE8(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), void (*a6)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  char v10 = v6;
  uint64_t v14 = *v6;
  unint64_t v15 = sub_1B62C1A30(a2);
  char v17 = v16;
  uint64_t v18 = *(void *)(v14 + 24);
  uint64_t v19 = *(void *)(v14 + 16) + ((v16 & 1) == 0);
  if (v18 >= v19 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v20 = *v10;
    if (v17)
    {
LABEL_7:
      uint64_t v21 = *(void *)(v20 + 56);
      uint64_t result = *(void *)(v21 + 8 * v15);
      *(void *)(v21 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v18 >= v19 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_6;
  }
  a5();
  unint64_t v23 = sub_1B62C1A30(a2);
  if ((v17 & 1) == (v24 & 1))
  {
    unint64_t v15 = v23;
    uint64_t v20 = *v10;
    if (v17) {
      goto LABEL_7;
    }
LABEL_10:
    a6(v15, a2, a1, v20);
    return 0;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA0F04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  long long v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62B2CE0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    char v16 = *v5;
    if (v13)
    {
LABEL_7:
      uint64_t v17 = v16[7];
      uint64_t result = *(void *)(v17 + 8 * v11);
      *(void *)(v17 + 8 * v11) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6ACD41C();
    goto LABEL_6;
  }
  sub_1B62B3CB0(v15, a4 & 1);
  uint64_t v19 = sub_1B62B2CE0(a2, a3);
  if ((v13 & 1) == (v20 & 1))
  {
    unint64_t v11 = v19;
    char v16 = *v5;
    if (v13) {
      goto LABEL_7;
    }
LABEL_10:
    sub_1B62B3510(v11, a2, a3, a1, v16);
    swift_bridgeObjectRetain();
    return 0;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA1018(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unsigned __int8 v8 = (void *)*v3;
  unint64_t v9 = sub_1B62BE38C(a2);
  unsigned __int8 v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 ^ 1) & 1);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = (uint64_t *)(v14[7] + 8 * v9);
      uint64_t result = *v15;
      uint64_t *v15 = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACF9E4();
    goto LABEL_6;
  }
  sub_1B6ABCA9C(v13, a3 & 1);
  uint64_t v17 = sub_1B62BE38C(a2);
  if ((v11 & 1) == (v18 & 1))
  {
    unint64_t v9 = v17;
    uint64_t v14 = *v4;
    if (v11) {
      goto LABEL_7;
    }
LABEL_10:
    sub_1B636A55C(v9, a2, a1, v14);
    return 0;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B6BA111C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  long long v5 = v4;
  uint64_t v10 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(a1 + 32);
  uint64_t v24 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v27 = *(void *)(a1 + 64);
  uint64_t v28 = *(void *)(a1 + 72);
  uint64_t v29 = *(void *)(a1 + 80);
  uint64_t v30 = *(void *)(a1 + 88);
  uint64_t v31 = *(void *)(a1 + 96);
  uint64_t v32 = *(void *)(a1 + 104);
  uint64_t v33 = *(void *)(a1 + 112);
  uint64_t v34 = *(void *)(a1 + 120);
  uint64_t v35 = *(void *)(a1 + 128);
  uint64_t v36 = *(void *)(a1 + 136);
  char v37 = *(unsigned char *)(a1 + 144);
  uint64_t v12 = *v4;
  unint64_t v13 = sub_1B62C1A30(a2);
  char v15 = v14;
  uint64_t v16 = *(void *)(v12 + 24);
  uint64_t v17 = *(void *)(v12 + 16) + ((v14 & 1) == 0);
  if (v16 >= v17 && (a3 & 1) != 0)
  {
LABEL_6:
    if (v15) {
      goto LABEL_7;
    }
LABEL_12:
    uint64_t v21 = (void *)*v5;
    v38[0] = v10;
    v38[1] = v9;
    v38[2] = v11;
    v38[3] = v22;
    v38[4] = v23;
    v38[5] = v24;
    v38[6] = v25;
    v38[7] = v26;
    v38[8] = v27;
    v38[9] = v28;
    v38[10] = v29;
    v38[11] = v30;
    v38[12] = v31;
    v38[13] = v32;
    v38[14] = v33;
    v38[15] = v34;
    v38[16] = v35;
    v38[17] = v36;
    char v39 = v37;
    sub_1B6AD8094(v13, a2, v38, v21);
    sub_1B68D608C((uint64_t)v40);
    sub_1B634FED8((uint64_t)v40, (uint64_t)a4, (unint64_t *)&unk_1E9DD2080, (void (*)(uint64_t))sub_1B68D60AC);
    return;
  }
  if (v16 >= v17 && (a3 & 1) == 0)
  {
    sub_1B6AD1AE0();
    goto LABEL_6;
  }
  sub_1B6AC0020(v17, a3 & 1);
  unint64_t v19 = sub_1B62C1A30(a2);
  if ((v15 & 1) != (v20 & 1))
  {
    sub_1B6E33838();
    __break(1u);
    return;
  }
  unint64_t v13 = v19;
  if ((v15 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_7:
  char v18 = (uint64_t *)(*(void *)(*v5 + 56) + 152 * v13);
  memmove(a4, v18, 0x91uLL);
  *char v18 = v10;
  v18[1] = v9;
  v18[2] = v11;
  v18[3] = v22;
  _OWORD v18[4] = v23;
  v18[5] = v24;
  v18[6] = v25;
  v18[7] = v26;
  v18[8] = v27;
  v18[9] = v28;
  v18[10] = v29;
  v18[11] = v30;
  v18[12] = v31;
  v18[13] = v32;
  v18[14] = v33;
  v18[15] = v34;
  v18[16] = v35;
  v18[17] = v36;
  *((unsigned char *)v18 + 144) = v37;

  nullsub_1(a4);
}

uint64_t sub_1B6BA13C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  long long v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_1B62C1A30(a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v16 = *v5;
    if (v13)
    {
LABEL_7:
      uint64_t v17 = (uint64_t *)(v16[7] + 16 * v11);
      uint64_t result = *v17;
      *uint64_t v17 = a1;
      v17[1] = a2;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6AD1D1C();
    goto LABEL_6;
  }
  sub_1B6AC03A4(v15, a4 & 1);
  unint64_t v19 = sub_1B62C1A30(a3);
  if ((v13 & 1) == (v20 & 1))
  {
    unint64_t v11 = v19;
    uint64_t v16 = *v5;
    if (v13) {
      goto LABEL_7;
    }
LABEL_10:
    sub_1B6378C68(v11, a3, a1, a2, v16);
    return 0;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA14D0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B6BA1510(a1, a2, a3, (void (*)(void))sub_1B6AD5B38, (void (*)(void))sub_1B6AC5B6C, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1B636A59C);
}

uint64_t sub_1B6BA1510(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), void (*a6)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = v6;
  uint64_t v14 = *v6;
  unint64_t v15 = sub_1B62C1A30(a2);
  char v17 = v16;
  uint64_t v18 = *(void *)(v14 + 24);
  uint64_t v19 = *(void *)(v14 + 16) + ((v16 & 1) == 0);
  if (v18 >= v19 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v20 = *v10;
    if (v17)
    {
LABEL_7:
      uint64_t v21 = *(void *)(v20 + 56);
      uint64_t result = *(void *)(v21 + 8 * v15);
      *(void *)(v21 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v18 >= v19 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_6;
  }
  a5();
  unint64_t v23 = sub_1B62C1A30(a2);
  if ((v17 & 1) == (v24 & 1))
  {
    unint64_t v15 = v23;
    uint64_t v20 = *v10;
    if (v17) {
      goto LABEL_7;
    }
LABEL_10:
    a6(v15, a2, a1, v20);
    return 1;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA162C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unsigned __int8 v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  unsigned __int8 v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 ^ 1) & 1);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      uint64_t result = *(void *)(v15 + 8 * v9);
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD5ED4();
    goto LABEL_6;
  }
  sub_1B6AC6154(v13, a3 & 1);
  unint64_t v17 = sub_1B62C1A30(a2);
  if ((v11 & 1) == (v18 & 1))
  {
    unint64_t v9 = v17;
    uint64_t v14 = *v4;
    if (v11) {
      goto LABEL_7;
    }
LABEL_10:
    sub_1B636A59C(v9, a2, a1, v14);
    return 0;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA172C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    if (!a5 || a2 != a5) {
      return 0;
    }
  }
  else if (a5)
  {
    return 0;
  }
  if (a3 == a6) {
    return sub_1B6918E2C(a1, a4);
  }
  return 0;
}

uint64_t sub_1B6BA175C(uint64_t a1)
{
  return sub_1B6BA1F0C(a1, (uint64_t (*)(void))sub_1B67F46D4, (void (*)(void))sub_1B6AB6A6C, (void (*)(void))sub_1B6ACC40C);
}

uint64_t sub_1B6BA179C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 >= 1)
  {
    if (result == a3)
    {
      return 0;
    }
    else
    {
      uint64_t v3 = result + 1;
      unint64_t v4 = a2 - 2;
      if ((unint64_t)a2 < 2)
      {
        ++result;
      }
      else
      {
        if (~result + a3 < v4) {
          unint64_t v4 = ~result + a3;
        }
        unint64_t v5 = v4 + 1;
        if (v5 >= 0x21)
        {
          uint64_t v7 = v5 & 0x1F;
          if ((v5 & 0x1F) == 0) {
            uint64_t v7 = 32;
          }
          unint64_t v8 = v5 - v7;
          uint64_t v6 = v8 + 1;
          v3 += v8;
          do
            v8 -= 32;
          while (v8);
        }
        else
        {
          uint64_t v6 = 1;
        }
        uint64_t v9 = a2 - v6;
        uint64_t result = v3;
        while (a3 != result)
        {
          ++result;
          if (!--v9) {
            return result;
          }
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B6BA1848(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1B6C3D488(0, v2, 0);
    uint64_t v3 = v31;
    for (uint64_t i = (char *)(a1 + 96); ; i += 80)
    {
      unsigned long long v7 = *((_OWORD *)i - 4);
      int v8 = *i;
      if (v8 < 0) {
        break;
      }
      long long v9 = *((_OWORD *)i - 3);
      long long v10 = *((_OWORD *)i - 2);
      long long v11 = *((_OWORD *)i - 1);
LABEL_18:
      unint64_t v24 = *(void *)(v31 + 16);
      unint64_t v23 = *(void *)(v31 + 24);
      if (v24 >= v23 >> 1)
      {
        long long v29 = v9;
        unsigned long long v30 = v7;
        long long v27 = v11;
        long long v28 = v10;
        sub_1B6C3D488(v23 > 1, v24 + 1, 1);
        long long v11 = v27;
        long long v10 = v28;
        long long v9 = v29;
        unsigned long long v7 = v30;
      }
      *(void *)(v31 + 16) = v24 + 1;
      uint64_t v25 = v31 + 80 * v24;
      *(_OWORD *)(v25 + 32) = v7;
      *(_OWORD *)(v25 + 48) = v9;
      *(_OWORD *)(v25 + 64) = v10;
      *(_OWORD *)(v25 + 80) = v11;
      *(unsigned char *)(v25 + 96) = v8;
      if (!--v2) {
        return v3;
      }
    }
    uint64_t v12 = *((void *)i - 8);
    if ((void)v7 == 0xFFFFFFFFLL)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0xFFFFFFFFLL;
LABEL_17:
      long long v9 = 0uLL;
      unsigned long long v7 = (unint64_t)v14 | (unsigned __int128)(unint64_t)(v13 << 32);
      LOBYTE(v8) = 0x80;
      long long v10 = 0uLL;
      long long v11 = 0uLL;
      goto LABEL_18;
    }
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0xFFFFFFFFLL;
      goto LABEL_17;
    }
    uint64_t v16 = Strong;
    int v17 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC3VFX15DefaultRemapper_isReversed);
    char v18 = *(void **)(Strong + 16);
    objc_msgSend(v18, sel_lock);
    if (v17 == 1)
    {
      uint64_t v19 = *(void *)(v16 + 32);
      if (!*(void *)(v19 + 16)) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v19 = *(void *)(v16 + 24);
      if (!*(void *)(v19 + 16)) {
        goto LABEL_15;
      }
    }
    uint64_t v20 = sub_1B62BE38C(v12);
    if (v21)
    {
      uint64_t v22 = (unsigned int *)(*(void *)(v19 + 56) + 8 * v20);
      uint64_t v14 = *v22;
      uint64_t v13 = v22[1];
LABEL_16:
      objc_msgSend(v18, sel_unlock, v27, v28, v29, v30);
      swift_release();
      goto LABEL_17;
    }
LABEL_15:
    uint64_t v13 = 0;
    uint64_t v14 = 0xFFFFFFFFLL;
    goto LABEL_16;
  }
  return v3;
}

uint64_t sub_1B6BA1A48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657A695361746164 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795461746164 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B6BA1C08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1668506980 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B6BA1D38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795461746164 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x68747065447369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B6BA1E80()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6BA1ECC(uint64_t a1)
{
  return sub_1B6BA1F0C(a1, (uint64_t (*)(void))sub_1B67F4ED0, (void (*)(void))sub_1B6AB7D08, (void (*)(void))sub_1B6ACCBD0);
}

uint64_t sub_1B6BA1F0C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(void))
{
  unsigned long long v7 = (char *)MEMORY[0x1E4FBC860];
  int v8 = (void *)a2(MEMORY[0x1E4FBC860]);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return (uint64_t)v8;
  }
  unint64_t v23 = a4;
  swift_bridgeObjectRetain();
  for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    uint64_t v12 = *(i - 1);
    uint64_t v11 = *i;
    swift_retain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = sub_1B62C1A30(v12);
    char v16 = v14;
    if (v8[3] < (int64_t)(v8[2] + ((v14 & 1) == 0))) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v14 & 1) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      v23();
      if ((v16 & 1) == 0)
      {
LABEL_11:
        v8[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v19 = 8 * v15;
        *(void *)(v8[6] + v19) = v12;
        *(void *)(v8[7] + v19) = v11;
        ++v8[2];
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned long long v7 = sub_1B68C1000(0, *((void *)v7 + 2) + 1, 1, v7);
        }
        unint64_t v21 = *((void *)v7 + 2);
        unint64_t v20 = *((void *)v7 + 3);
        if (v21 >= v20 >> 1) {
          unsigned long long v7 = sub_1B68C1000(v20 > 1, v21 + 1, 1, v7);
        }
        *((void *)v7 + 2) = v21 + 1;
        *(void *)&v7[8 * v21 + 32] = v12;
        swift_release();
        goto LABEL_4;
      }
    }
LABEL_3:
    *(void *)(v8[7] + 8 * v15) = v11;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_4:
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v8;
    }
  }
  a3();
  unint64_t v17 = sub_1B62C1A30(v12);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v15 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BA214C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (uint64_t i = (void *)(a1 + 40); ; i += 8)
  {
    BOOL v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_1B6E334B8() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1B6BA21E0()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6BA21F0()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B6BA2200()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

uint64_t sub_1B6BA2210()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B6BA2220()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

uint64_t sub_1B6BA2230(uint64_t a1)
{
  BOOL v2 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = sub_1B62A6F14(MEMORY[0x1E4FBC860]);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (uint64_t)v3;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = (uint64_t *)(a1 + 48); ; i += 3)
  {
    uint64_t v7 = *(i - 2);
    uint64_t v6 = *(i - 1);
    uint64_t v8 = *i;
    swift_retain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = sub_1B62B2CE0(v7, v6);
    char v12 = v10;
    uint64_t v13 = v3[2] + ((v10 & 1) == 0);
    if (v3[3] < v13) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v10 & 1) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      sub_1B6ACD41C();
      if ((v12 & 1) == 0)
      {
LABEL_11:
        v3[(v11 >> 6) + 8] |= 1 << v11;
        char v16 = (uint64_t *)(v3[6] + 16 * v11);
        *char v16 = v7;
        v16[1] = v6;
        *(void *)(v3[7] + 8 * v11) = v8;
        ++v3[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v2 = sub_1B6335858(0, v2[2] + 1, 1, v2);
        }
        unint64_t v18 = v2[2];
        unint64_t v17 = v2[3];
        if (v18 >= v17 >> 1) {
          BOOL v2 = sub_1B6335858(v17 > 1, v18 + 1, 1, v2);
        }
        v2[2] = v18 + 1;
        uint64_t v19 = &v2[2 * v18];
        v19[4] = v7;
        v19[5] = v6;
        swift_release_n();
        goto LABEL_4;
      }
    }
LABEL_3:
    *(void *)(v3[7] + 8 * v11) = v8;
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  sub_1B62B3CB0(v13, isUniquelyReferenced_nonNull_native);
  uint64_t v14 = sub_1B62B2CE0(v7, v6);
  if ((v12 & 1) == (v15 & 1))
  {
    unint64_t v11 = v14;
    if ((v12 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B6BA2488(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_argumentIndex);
  id v5 = objc_msgSend(a1, sel_name);
  uint64_t v6 = sub_1B6E31798();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a1, sel_textureReferenceType);
  char v10 = v9;
  if (v9)
  {
    id v11 = objc_msgSend(v9, sel_textureType);
    id v12 = objc_msgSend(v10, sel_textureDataType);
    LODWORD(v14) = objc_msgSend(v10, sel_isDepthTexture);

    id v13 = 0;
    unint64_t v14 = v14;
  }
  else
  {
    id v15 = objc_msgSend(a1, sel_pointerType);
    if (v15)
    {
      char v16 = v15;
      id v11 = objc_msgSend(v15, sel_dataSize);
      id v12 = objc_msgSend(v16, sel_elementType);
      id v13 = objc_msgSend(v16, sel_alignment);

      unint64_t v14 = 0;
    }
    else
    {
      id v11 = (id)sub_1B630E8E0();
      id v12 = objc_msgSend(a1, sel_dataType);
      unint64_t v14 = (unint64_t)objc_msgSend(a1, sel_offset);

      id v13 = v11;
    }
  }
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v13;
  *(unsigned char *)(a2 + 56) = v10 != 0;
}

uint64_t sub_1B6BA2634(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 - a1;
  if (a2 != a1)
  {
    id v5 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_1B6B9B620(a3, &v16);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
      uint64_t v7 = v16;
      uint64_t v8 = *(void *)(v16 + 16);
      uint64_t v9 = v5[2];
      uint64_t v10 = v9 + v8;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v10 <= v5[3] >> 1)
      {
        if (!*(void *)(v7 + 16)) {
          goto LABEL_4;
        }
      }
      else
      {
        if (v9 <= v10) {
          uint64_t v12 = v9 + v8;
        }
        else {
          uint64_t v12 = v9;
        }
        id v5 = sub_1B68C4E38(isUniquelyReferenced_nonNull_native, v12, 1, v5);
        if (!*(void *)(v7 + 16)) {
          goto LABEL_4;
        }
      }
      unint64_t v13 = (unint64_t)&v5[8 * v5[2] + 4];
      if (v7 + 32 < v13 + (v8 << 6) && v13 < v7 + 32 + (v8 << 6))
      {

        uint64_t result = sub_1B6E32C88();
        __break(1u);
        return result;
      }
      swift_arrayInitWithCopy();
      if (v8) {
        v5[2] += v8;
      }
LABEL_4:
      swift_bridgeObjectRelease();
      if (!--v4) {
        return (uint64_t)v5;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B6BA27CC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6BA3C28(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6BA284C()
{
  if (!qword_1EB980690)
  {
    uint64_t v0 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBD80];
    sub_1B6BA3C28(255, &qword_1EB980868, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBBD80]);
    sub_1B6BA2908(&qword_1EB980860, &qword_1EB980868, v0);
    unint64_t v1 = sub_1B6E32B28();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB980690);
    }
  }
}

uint64_t sub_1B6BA2908(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6BA3C28(255, a2, (uint64_t)&type metadata for ShaderArgument, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6BA2958()
{
  unint64_t result = qword_1EB97E9E8;
  if (!qword_1EB97E9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9E8);
  }
  return result;
}

uint64_t sub_1B6BA29AC(uint64_t a1, uint64_t a2)
{
  sub_1B6BA284C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6BA2A10()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6BA2A18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BA2A20(uint64_t a1)
{
  sub_1B6BA284C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B6BA2A7C()
{
  unint64_t result = qword_1EB97EBF0;
  if (!qword_1EB97EBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EBF0);
  }
  return result;
}

unint64_t sub_1B6BA2AD0()
{
  unint64_t result = qword_1EB980228;
  if (!qword_1EB980228)
  {
    sub_1B6BA3C28(255, &qword_1EB980218, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBB320]);
    sub_1B6BA2B64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980228);
  }
  return result;
}

unint64_t sub_1B6BA2B64()
{
  unint64_t result = qword_1EB97EA00;
  if (!qword_1EB97EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EA00);
  }
  return result;
}

unint64_t sub_1B6BA2BB8()
{
  unint64_t result = qword_1EB980240;
  if (!qword_1EB980240)
  {
    sub_1B6BA3C28(255, &qword_1EB980238, (uint64_t)&type metadata for ShaderParameter, MEMORY[0x1E4FBB320]);
    sub_1B6BA2C4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980240);
  }
  return result;
}

unint64_t sub_1B6BA2C4C()
{
  unint64_t result = qword_1EB97EBA0;
  if (!qword_1EB97EBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EBA0);
  }
  return result;
}

unint64_t sub_1B6BA2CA0()
{
  unint64_t result = qword_1EB980258;
  if (!qword_1EB980258)
  {
    sub_1B6BA3C28(255, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBB320]);
    sub_1B6BA2D34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980258);
  }
  return result;
}

unint64_t sub_1B6BA2D34()
{
  unint64_t result = qword_1EB97EC40;
  if (!qword_1EB97EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EC40);
  }
  return result;
}

unint64_t sub_1B6BA2D88()
{
  unint64_t result = qword_1E9DD6780;
  if (!qword_1E9DD6780)
  {
    sub_1B6BA3C28(255, &qword_1EB980218, (uint64_t)&type metadata for ShaderArgument, MEMORY[0x1E4FBB320]);
    sub_1B6BA2E1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6780);
  }
  return result;
}

unint64_t sub_1B6BA2E1C()
{
  unint64_t result = qword_1E9DD6788;
  if (!qword_1E9DD6788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6788);
  }
  return result;
}

unint64_t sub_1B6BA2E70()
{
  unint64_t result = qword_1E9DD6790;
  if (!qword_1E9DD6790)
  {
    sub_1B6BA3C28(255, &qword_1EB980238, (uint64_t)&type metadata for ShaderParameter, MEMORY[0x1E4FBB320]);
    sub_1B6BA2F04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6790);
  }
  return result;
}

unint64_t sub_1B6BA2F04()
{
  unint64_t result = qword_1E9DD6798;
  if (!qword_1E9DD6798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6798);
  }
  return result;
}

unint64_t sub_1B6BA2F58()
{
  unint64_t result = qword_1E9DD67A0;
  if (!qword_1E9DD67A0)
  {
    sub_1B6BA3C28(255, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBB320]);
    sub_1B6BA2FEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD67A0);
  }
  return result;
}

unint64_t sub_1B6BA2FEC()
{
  unint64_t result = qword_1E9DD67A8;
  if (!qword_1E9DD67A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD67A8);
  }
  return result;
}

void sub_1B6BA3040()
{
  if (!qword_1EB981028)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB981028);
    }
  }
}

uint64_t sub_1B6BA30A8(void *a1)
{
  sub_1B6395BC8(0, (unint64_t *)&unk_1EB9808F0, (uint64_t (*)(void))sub_1B6BA446C, (uint64_t)&type metadata for ShaderArgument.BufferDesc.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v11[-v7];
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6BA446C();
  sub_1B6E33A48();
  if (!v1)
  {
    v11[31] = 0;
    uint64_t v9 = sub_1B6E32DD8();
    type metadata accessor for MTLDataType(0);
    v11[30] = 1;
    sub_1B6BA4514(&qword_1EB9804B0, 255, type metadata accessor for MTLDataType);
    sub_1B6E32DF8();
    v11[29] = 2;
    sub_1B6E32DD8();
    v11[28] = 3;
    sub_1B6E32DD8();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1B6BA3330(void *a1)
{
  sub_1B6395BC8(0, (unint64_t *)&unk_1EB980908, (uint64_t (*)(void))sub_1B6BA44C0, (uint64_t)&type metadata for ShaderArgument.TextureDesc.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6BA44C0();
  sub_1B6E33A48();
  if (!v1)
  {
    type metadata accessor for MTLTextureType(0);
    char v12 = 0;
    sub_1B6BA4514(&qword_1EB980578, 255, type metadata accessor for MTLTextureType);
    sub_1B6E32DF8();
    uint64_t v9 = v13;
    type metadata accessor for MTLDataType(0);
    char v12 = 1;
    sub_1B6BA4514(&qword_1EB9804B0, 255, type metadata accessor for MTLDataType);
    sub_1B6E32DF8();
    LOBYTE(v13) = 2;
    sub_1B6E32DA8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1B6BA35E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v17 = a2;
  sub_1B6395BC8(0, &qword_1EB980918, (uint64_t (*)(void))sub_1B6BA409C, (uint64_t)&type metadata for ShaderArgument.Desc.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA409C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v16 = v6;
  char v22 = 0;
  sub_1B6BA40F0();
  sub_1B6E32DF8();
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  uint64_t v13 = v20;
  uint64_t v14 = v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  id v15 = v17;
  *unint64_t v17 = v11;
  v15[1] = v12;
  v15[2] = v13;
  v15[3] = v14;
  *((unsigned char *)v15 + 32) = 0;
  return result;
}

uint64_t sub_1B6BA389C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1B6395BC8(0, &qword_1EB980900, (uint64_t (*)(void))sub_1B6BA3B2C, (uint64_t)&type metadata for ShaderArgument.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v19 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BA3B2C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v21;
  LOBYTE(v22) = 0;
  uint64_t v12 = sub_1B6E32D98();
  uint64_t v14 = v13;
  LOBYTE(v22) = 1;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1B6E32DD8();
  char v26 = 2;
  sub_1B6BA3B80();
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v5);
  long long v19 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v17 = v25;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v11 = v12;
  *(void *)(v11 + 8) = v14;
  *(void *)(v11 + 16) = v20;
  *(_OWORD *)(v11 + 24) = v19;
  *(void *)(v11 + 40) = v15;
  *(void *)(v11 + 48) = v16;
  *(unsigned char *)(v11 + 56) = v17;
  return result;
}

unint64_t sub_1B6BA3B2C()
{
  unint64_t result = qword_1EB97E978;
  if (!qword_1EB97E978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E978);
  }
  return result;
}

unint64_t sub_1B6BA3B80()
{
  unint64_t result = qword_1EB97E9E0;
  if (!qword_1EB97E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9E0);
  }
  return result;
}

unint64_t sub_1B6BA3BD4()
{
  unint64_t result = qword_1E9DD67C0;
  if (!qword_1E9DD67C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD67C0);
  }
  return result;
}

void sub_1B6BA3C28(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ShaderArgument.CodingKeys()
{
  return &type metadata for ShaderArgument.CodingKeys;
}

ValueMetadata *type metadata accessor for CustomParameters.CodingKeys()
{
  return &type metadata for CustomParameters.CodingKeys;
}

uint64_t destroy for PerStageShaderArguments()
{
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void *_s3VFX23PerStageShaderArgumentsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for PerStageShaderArguments(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for PerStageShaderArguments(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for PerStageShaderArguments()
{
  return &type metadata for PerStageShaderArguments;
}

uint64_t getEnumTagSinglePayload for ShaderArgument.Desc(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderArgument.Desc(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6BA3E68(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1B6BA3E70(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ShaderArgument.Desc()
{
  return &type metadata for ShaderArgument.Desc;
}

unint64_t sub_1B6BA3E90()
{
  unint64_t result = qword_1E9DD67D8;
  if (!qword_1E9DD67D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD67D8);
  }
  return result;
}

unint64_t sub_1B6BA3EE8()
{
  unint64_t result = qword_1E9DD67E0;
  if (!qword_1E9DD67E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD67E0);
  }
  return result;
}

unint64_t sub_1B6BA3F40()
{
  unint64_t result = qword_1EB97E988;
  if (!qword_1EB97E988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E988);
  }
  return result;
}

unint64_t sub_1B6BA3F98()
{
  unint64_t result = qword_1EB97E980;
  if (!qword_1EB97E980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E980);
  }
  return result;
}

unint64_t sub_1B6BA3FF0()
{
  unint64_t result = qword_1EB97EBE8;
  if (!qword_1EB97EBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EBE8);
  }
  return result;
}

unint64_t sub_1B6BA4048()
{
  unint64_t result = qword_1EB97EBE0;
  if (!qword_1EB97EBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EBE0);
  }
  return result;
}

unint64_t sub_1B6BA409C()
{
  unint64_t result = qword_1EB97E9C0;
  if (!qword_1EB97E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9C0);
  }
  return result;
}

unint64_t sub_1B6BA40F0()
{
  unint64_t result = qword_1EB97E968;
  if (!qword_1EB97E968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E968);
  }
  return result;
}

unint64_t sub_1B6BA4144()
{
  unint64_t result = qword_1EB97E9B0;
  if (!qword_1EB97E9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9B0);
  }
  return result;
}

unint64_t sub_1B6BA4198()
{
  unint64_t result = qword_1E9DD67F8;
  if (!qword_1E9DD67F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD67F8);
  }
  return result;
}

unint64_t sub_1B6BA41EC()
{
  unint64_t result = qword_1E9DD6800;
  if (!qword_1E9DD6800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6800);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShaderArgument.Desc.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BA430CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderArgument.Desc.CodingKeys()
{
  return &type metadata for ShaderArgument.Desc.CodingKeys;
}

ValueMetadata *type metadata accessor for ShaderArgument.TextureDesc()
{
  return &type metadata for ShaderArgument.TextureDesc;
}

ValueMetadata *type metadata accessor for ShaderArgument.BufferDesc()
{
  return &type metadata for ShaderArgument.BufferDesc;
}

unint64_t sub_1B6BA4368()
{
  unint64_t result = qword_1E9DD6808;
  if (!qword_1E9DD6808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6808);
  }
  return result;
}

unint64_t sub_1B6BA43C0()
{
  unint64_t result = qword_1EB97E9D0;
  if (!qword_1EB97E9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9D0);
  }
  return result;
}

unint64_t sub_1B6BA4418()
{
  unint64_t result = qword_1EB97E9C8;
  if (!qword_1EB97E9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9C8);
  }
  return result;
}

unint64_t sub_1B6BA446C()
{
  unint64_t result = qword_1EB97E948;
  if (!qword_1EB97E948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E948);
  }
  return result;
}

unint64_t sub_1B6BA44C0()
{
  unint64_t result = qword_1EB97E990;
  if (!qword_1EB97E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E990);
  }
  return result;
}

uint64_t sub_1B6BA4514(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s3VFX14ShaderArgumentV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BA4628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderArgument.TextureDesc.CodingKeys()
{
  return &type metadata for ShaderArgument.TextureDesc.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ShaderArgument.BufferDesc.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BA472CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderArgument.BufferDesc.CodingKeys()
{
  return &type metadata for ShaderArgument.BufferDesc.CodingKeys;
}

unint64_t sub_1B6BA4768()
{
  unint64_t result = qword_1E9DD6830;
  if (!qword_1E9DD6830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6830);
  }
  return result;
}

unint64_t sub_1B6BA47C0()
{
  unint64_t result = qword_1E9DD6838;
  if (!qword_1E9DD6838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6838);
  }
  return result;
}

unint64_t sub_1B6BA4818()
{
  unint64_t result = qword_1EB97E9A0;
  if (!qword_1EB97E9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E9A0);
  }
  return result;
}

unint64_t sub_1B6BA4870()
{
  unint64_t result = qword_1EB97E998;
  if (!qword_1EB97E998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E998);
  }
  return result;
}

unint64_t sub_1B6BA48C8()
{
  unint64_t result = qword_1EB97E960;
  if (!qword_1EB97E960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E960);
  }
  return result;
}

unint64_t sub_1B6BA4920()
{
  unint64_t result = qword_1EB97E958;
  if (!qword_1EB97E958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E958);
  }
  return result;
}

uint64_t sub_1B6BA4978@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  v6[0] = 0xD000000000000013;
  sub_1B6E31948();
  sub_1B6E31948();
  if ((a1 & 0x800) != 0 || (a1 & 0x4000) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    unint64_t v4 = 0xD000000000000013;
  }
  else
  {
    unint64_t v4 = v6[0];
    swift_bridgeObjectRelease();
  }
  v6[0] = 0xD000000000000017;
  v6[1] = 0x80000001B6F4BA60;
  _OWORD v6[2] = 0;
  v6[3] = 0;
  v6[4] = MEMORY[0x1E4FBC860];
  v6[5] = v4;
  _DWORD v6[6] = 0x80000001B6F4BA80;
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = MEMORY[0x1E4FBC860];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  nullsub_1(v6);
  return sub_1B6BA570C((uint64_t)v6, a2, &qword_1EB97EB68, (uint64_t)&type metadata for RenderFunctions);
}

void sub_1B6BA4C20(void *a1@<X8>)
{
  *a1 = &unk_1F0F95440;
}

uint64_t sub_1B6BA4C30()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6BA4C90()
{
  return sub_1B6E31B28();
}

void *sub_1B6BA4CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a3 + 8);
  swift_retain();
  sub_1B62E9D50(v5, (uint64_t)v17);
  swift_release();
  sub_1B6BA570C((uint64_t)v17, (uint64_t)v18, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
  if (v19)
  {
    long long v6 = xmmword_1B6E4F370;
    long long v7 = xmmword_1B6E4F2E0;
    long long v8 = xmmword_1B6E4F320;
    long long v9 = xmmword_1B6E4F300;
  }
  else
  {
    long long v9 = v18[0];
    long long v8 = v18[1];
    long long v7 = v18[2];
    long long v6 = v18[3];
  }
  unsigned int v10 = *(_DWORD *)(v3 + 24);
  if (v10 - 11 > 0xF4)
  {
    float v13 = *(float *)(v3 + 16);
    if (v13 > -1.0) {
      float v14 = *(float *)(v3 + 16);
    }
    else {
      float v14 = -1.0;
    }
    if (v13 >= 0.0) {
      float v11 = v14;
    }
    else {
      float v11 = -1.0;
    }
  }
  else
  {
    float v11 = 1.0 / (float)v10;
    float v12 = *(float *)(v3 + 16);
    if (v12 >= 0.0 && v12 > v11) {
      float v11 = *(float *)(v3 + 16);
    }
  }
  int v15 = *(_DWORD *)(v3 + 32);
  v20[0] = v9;
  v20[1] = v8;
  v20[2] = v7;
  v20[3] = v6;
  float v21 = v11;
  int v22 = v15;
  return sub_1B6969B1C(v20, a1);
}

uint64_t sub_1B6BA4E10()
{
  uint64_t v1 = v0;
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v2 = sub_1B62FFCAC(7);
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 45) = *(void *)(v1 + 29);
  *(void *)(v2 + 88) = sub_1B6BA57E8;
  *(void *)(v2 + 96) = v3;
  swift_release();
  return v2;
}

void *sub_1B6BA4E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BA4CE0(a1, a2, a3);
}

double sub_1B6BA4EDC@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 1;
  *(_DWORD *)(a1 + 16) = -1082130432;
  *(unsigned char *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 256;
  *(void *)&double result = 16843008;
  *(void *)(a1 + 28) = 16843008;
  *(unsigned char *)(a1 + 36) = 0;
  return result;
}

double sub_1B6BA4F1C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6BA51FC(a1, (uint64_t)&v6);
  if (!v2)
  {
    double result = *(double *)&v6;
    long long v5 = *(_OWORD *)v7;
    *(_OWORD *)a2 = v6;
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 29) = *(void *)&v7[13];
  }
  return result;
}

uint64_t sub_1B6BA4F64(void *a1)
{
  sub_1B62A7DBC(0, (unint64_t *)&unk_1E9DD01B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  long long v9 = &v12[-v8];
  long long v10 = v1[1];
  long long v13 = *v1;
  *(_OWORD *)float v14 = v10;
  *(void *)&v14[13] = *(void *)((char *)v1 + 29);
  uint64_t result = sub_1B67C68C0(a1, (uint64_t)&v12[-v8]);
  if (!v2)
  {
    v12[15] = v14[20];
    v12[14] = 15;
    sub_1B66C5D1C();
    sub_1B6E32FA8();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_1B6BA50B4(float *a1, uint64_t a2)
{
  float v3 = *a1;
  uint64_t result = 1;
  if (LODWORD(v3) != *(_DWORD *)a2
    || *((_DWORD *)a1 + 1) != *(_DWORD *)(a2 + 4)
    || ((*((unsigned __int8 *)a1 + 30) ^ *(unsigned __int8 *)(a2 + 30)) & 1) != 0
    || ((*((unsigned __int8 *)a1 + 31) ^ *(unsigned __int8 *)(a2 + 31)) & 1) != 0)
  {
    return result;
  }
  float v5 = a1[2];
  float v6 = a1[4];
  int v7 = *((unsigned __int8 *)a1 + 20);
  int v8 = *((_DWORD *)a1 + 6);
  int v9 = *((unsigned __int8 *)a1 + 28);
  int v10 = *((unsigned __int8 *)a1 + 29);
  float v11 = a1[8];
  int v12 = *((unsigned __int8 *)a1 + 36);
  float v13 = *(float *)(a2 + 8);
  float v14 = *(float *)(a2 + 16);
  if (*((unsigned char *)a1 + 12) == 1)
  {
    if (v5 == 0.0)
    {
      if (v13 == 0.0) {
        char v17 = *(unsigned char *)(a2 + 12);
      }
      else {
        char v17 = 0;
      }
      if ((v17 & 1) == 0) {
        return 1;
      }
    }
    else
    {
      if (LODWORD(v5) == 1)
      {
        if (LODWORD(v13) == 1) {
          char v15 = *(unsigned char *)(a2 + 12);
        }
        else {
          char v15 = 0;
        }
        if (v15) {
          goto LABEL_12;
        }
        return 1;
      }
      if (LODWORD(v13) > 1) {
        int v18 = *(unsigned __int8 *)(a2 + 12);
      }
      else {
        int v18 = 0;
      }
      if (v18 != 1) {
        return 1;
      }
    }
LABEL_12:
    uint64_t result = 1;
    if (v6 != v14) {
      return result;
    }
    goto LABEL_19;
  }
  if (v5 == v13) {
    char v16 = *(unsigned char *)(a2 + 12);
  }
  else {
    char v16 = 1;
  }
  uint64_t result = 1;
  if ((v16 & 1) == 0 && v6 == v14)
  {
LABEL_19:
    if (v7 == *(unsigned __int8 *)(a2 + 20)
      && v8 == *(_DWORD *)(a2 + 24)
      && v9 == *(unsigned __int8 *)(a2 + 28)
      && ((v10 ^ *(unsigned __int8 *)(a2 + 29)) & 1) == 0)
    {
      if (v12 == *(unsigned __int8 *)(a2 + 36)) {
        return (v11 > 0.0) ^ (*(float *)(a2 + 32) > 0.0);
      }
      else {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_1B6BA51FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  int v10 = (char *)&v23 - v9;
  uint64_t v24 = 0xFFFFFFFFLL;
  int v25 = 0;
  char v26 = 1;
  int v27 = -1082130432;
  char v28 = 0;
  int v29 = 256;
  uint64_t v30 = 16843008;
  char v31 = 0;
  sub_1B67C76D0(a1);
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v32 = 15;
  sub_1B66C5CC8();
  sub_1B6E32DF8();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  char v12 = v33;
  int v13 = v25;
  char v14 = v26;
  int v15 = v27;
  char v16 = v28;
  int v17 = v29;
  char v18 = v30;
  char v19 = BYTE1(v30);
  char v20 = BYTE2(v30);
  char v21 = BYTE3(v30);
  int v22 = HIDWORD(v30);
  *(void *)a2 = v24;
  *(_DWORD *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 12) = v14;
  *(_DWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 20) = v16;
  *(_DWORD *)(a2 + 24) = v17;
  *(unsigned char *)(a2 + 28) = v18;
  *(unsigned char *)(a2 + 29) = v19;
  *(unsigned char *)(a2 + 30) = v20;
  *(unsigned char *)(a2 + 31) = v21;
  *(_DWORD *)(a2 + 32) = v22;
  *(unsigned char *)(a2 + 36) = v12;
  return result;
}

unint64_t sub_1B6BA5418()
{
  unint64_t result = qword_1E9DD6840;
  if (!qword_1E9DD6840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6840);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticlePrimitiveRenderer.Shape(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BA5538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticlePrimitiveRenderer.Shape()
{
  return &type metadata for ParticlePrimitiveRenderer.Shape;
}

__n128 initializeWithCopy for ParticlePrimitiveRenderer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 29) = *(void *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticlePrimitiveRenderer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 37)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 29);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticlePrimitiveRenderer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 37) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 37) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 29) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticlePrimitiveRenderer()
{
  return &type metadata for ParticlePrimitiveRenderer;
}

unint64_t sub_1B6BA5638()
{
  unint64_t result = qword_1E9DD6848;
  if (!qword_1E9DD6848)
  {
    sub_1B6BA578C(255, &qword_1E9DD6850, (uint64_t)&type metadata for ParticlePrimitiveRenderer.Shape, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6848);
  }
  return result;
}

unint64_t sub_1B6BA56B8()
{
  unint64_t result = qword_1E9DD6858;
  if (!qword_1E9DD6858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6858);
  }
  return result;
}

uint64_t sub_1B6BA570C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6BA578C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6BA578C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6BA57D8()
{
  return MEMORY[0x1F4186498](v0, 53, 7);
}

uint64_t sub_1B6BA57E8@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  sub_1B6BA4978(a1, (uint64_t)v4);
  return sub_1B6BA570C((uint64_t)v4, a2, &qword_1EB97EB68, (uint64_t)&type metadata for RenderFunctions);
}

uint64_t sub_1B6BA583C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB9B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA5878(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB9B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BA58B4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B6BAB274(a1, &qword_1E9DD68D0, (uint64_t (*)(void))sub_1B6BAB9B0, (uint64_t)&type metadata for Rect2D.CodingKeys, (void (*)(void))sub_1B6BAB9B0);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B6BA5918(void *a1)
{
  return sub_1B6BA5CEC(a1, &qword_1E9DD68E0, (uint64_t (*)(void))sub_1B6BAB9B0, (uint64_t)&type metadata for Rect2D.CodingKeys, (void (*)(void))sub_1B6BAB9B0, *v1);
}

uint64_t sub_1B6BA596C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB95C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA59A8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB95C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BA59E4(void *a1)
{
  sub_1B6BAC260(0, &qword_1E9DD68C0, (uint64_t (*)(void))sub_1B6BAB95C, (uint64_t)&type metadata for DiscShape.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BAB95C();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6BA5B24()
{
  return 0x737569646172;
}

uint64_t sub_1B6BA5B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x737569646172 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6BA5BC8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB908();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA5C04(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB908();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BA5C40@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1B6BA60B8(a1, &qword_1E9DD68A8, (uint64_t (*)(void))sub_1B6BAB908, (uint64_t)&type metadata for RoundedRectShape.CodingKeys, (void (*)(void))sub_1B6BAB908, a2);
}

uint64_t sub_1B6BA5C90(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BA62AC(a1, a2, a3, &qword_1E9DD68B8, (uint64_t (*)(void))sub_1B6BAB908, (uint64_t)&type metadata for RoundedRectShape.CodingKeys, (void (*)(void))sub_1B6BAB908);
}

void sub_1B6BA5CE0(_DWORD *a1@<X8>)
{
  *a1 = 1077936128;
}

uint64_t sub_1B6BA5CEC(void *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(void), __n128 a6)
{
  v16[0] = a6;
  sub_1B6BAC260(0, a2, a3, a4, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  int v13 = (char *)v16 - v12;
  sub_1B62C14BC(a1, a1[3]);
  a5();
  sub_1B6E33A88();
  v16[1] = v16[0];
  char v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
  sub_1B6BAC260(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  sub_1B6BAB7FC((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v14);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B6BA5EC0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB8B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA5EFC(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB8B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BA5F38@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B6BAB274(a1, &qword_1E9DD6890, (uint64_t (*)(void))sub_1B6BAB8B4, (uint64_t)&type metadata for StrokeColor.CodingKeys, (void (*)(void))sub_1B6BAB8B4);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B6BA5F9C(void *a1)
{
  return sub_1B6BA5CEC(a1, &qword_1E9DD68A0, (uint64_t (*)(void))sub_1B6BAB8B4, (uint64_t)&type metadata for StrokeColor.CodingKeys, (void (*)(void))sub_1B6BAB8B4, *v1);
}

uint64_t sub_1B6BA5FF0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB860();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA602C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB860();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BA6068@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1B6BA60B8(a1, &qword_1E9DD6878, (uint64_t (*)(void))sub_1B6BAB860, (uint64_t)&type metadata for StrokeWidth.CodingKeys, (void (*)(void))sub_1B6BAB860, a2);
}

uint64_t sub_1B6BA60B8@<X0>(void *a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X5>, void (*a5)(void)@<X6>, _DWORD *a6@<X8>)
{
  char v20 = a6;
  sub_1B6BAC260(0, a2, a3, a4, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v19 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  int v13 = (char *)&v19 - v12;
  sub_1B62C14BC(a1, a1[3]);
  a5();
  sub_1B6E33A48();
  if (v6) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v15 = v19;
  char v14 = v20;
  sub_1B6E32DC8();
  int v17 = v16;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v10);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  _DWORD *v14 = v17;
  return result;
}

uint64_t sub_1B6BA625C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BA62AC(a1, a2, a3, &qword_1E9DD6888, (uint64_t (*)(void))sub_1B6BAB860, (uint64_t)&type metadata for StrokeWidth.CodingKeys, (void (*)(void))sub_1B6BAB860);
}

uint64_t sub_1B6BA62AC(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B6BAC260(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  char v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  sub_1B6E32F78();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6BA640C(void *a1, double a2, double a3, __n128 a4)
{
  __n128 v16 = a4;
  sub_1B6BAC260(0, &qword_1E9DD6870, (uint64_t (*)(void))sub_1B6BAB7A8, (uint64_t)&type metadata for Shadow2D.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = (char *)&v16 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BAB7A8();
  sub_1B6E33A88();
  v17.n128_f64[0] = a2;
  char v18 = 0;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  sub_1B6BAC260(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B6BAB7FC((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v13);
  sub_1B6E32FA8();
  if (!v4)
  {
    v17.n128_u8[0] = 1;
    sub_1B6E32F78();
    __n128 v17 = v16;
    char v18 = 2;
    char v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
    sub_1B6BAC260(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    sub_1B6BAB7FC((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v14);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B6BA66D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BBA700(*a1, *a2);
}

uint64_t sub_1B6BA66E4()
{
  uint64_t v1 = 0x737569646172;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F6C6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74657366666FLL;
  }
}

uint64_t sub_1B6BA6734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6BAAB34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6BA675C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB7A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA6798(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAB7A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6BA67D4(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1B6BAB48C(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_DWORD *)(a2 + 8) = v5;
    *(_OWORD *)(a2 + 16) = v6;
  }
}

uint64_t sub_1B6BA6808(void *a1, double a2, double a3)
{
  LODWORD(a3) = v3->n128_u32[2];
  return sub_1B6BA640C(a1, v3->n128_f64[0], a3, v3[1]);
}

double sub_1B6BA682C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1084227584;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1B6E4F370;
  return result;
}

uint64_t sub_1B6BA6848(void *a1, double a2)
{
  sub_1B6BAC260(0, &qword_1E9DD69B0, (uint64_t (*)(void))sub_1B6BAC20C, (uint64_t)&type metadata for Velocity2D.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BAC20C();
  sub_1B6E33A88();
  *(double *)&v12[1] = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  sub_1B6BAC260(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B6BAB7FC((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v10);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6BA6A2C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAC20C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA6A68(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAC20C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6BA6AA4(void *a1@<X0>, double *a2@<X8>)
{
  double v4 = sub_1B6BAB040(a1);
  if (!v2) {
    *a2 = v4;
  }
}

uint64_t sub_1B6BA6AD0(void *a1)
{
  return sub_1B6BA6848(a1, *v1);
}

uint64_t sub_1B6BA6AEC(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAC1B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA6B28(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAC1B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BA6B64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6BA6CCC(a1, &qword_1E9DD6988, (uint64_t (*)(void))sub_1B6BAC1B8, (uint64_t)&type metadata for ZOrder.CodingKeys, (void (*)(void))sub_1B6BAC1B8, a2);
}

uint64_t sub_1B6BA6BB4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BA6EBC(a1, a2, a3, &qword_1E9DD6998, (uint64_t (*)(void))sub_1B6BAC1B8, (uint64_t)&type metadata for ZOrder.CodingKeys, (void (*)(void))sub_1B6BAC1B8);
}

uint64_t sub_1B6BA6C04(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAC164();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BA6C40(uint64_t a1)
{
  unint64_t v2 = sub_1B6BAC164();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BA6C7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6BA6CCC(a1, &qword_1E9DD6970, (uint64_t (*)(void))sub_1B6BAC164, (uint64_t)&type metadata for HZOrder.CodingKeys, (void (*)(void))sub_1B6BAC164, a2);
}

uint64_t sub_1B6BA6CCC@<X0>(void *a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X5>, void (*a5)(void)@<X6>, uint64_t *a6@<X8>)
{
  char v20 = a6;
  sub_1B6BAC260(0, a2, a3, a4, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v19 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v18 - v12;
  sub_1B62C14BC(a1, a1[3]);
  a5();
  sub_1B6E33A48();
  if (v6) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  uint64_t v16 = sub_1B6E32DD8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v10);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t *v15 = v16;
  return result;
}

uint64_t sub_1B6BA6E6C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BA6EBC(a1, a2, a3, &qword_1E9DD6980, (uint64_t (*)(void))sub_1B6BAC164, (uint64_t)&type metadata for HZOrder.CodingKeys, (void (*)(void))sub_1B6BAC164);
}

uint64_t sub_1B6BA6EBC(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  uint64_t v16 = a7;
  sub_1B6BAC260(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)&v15 - v12;
  sub_1B62C14BC(a1, a1[3]);
  v16();
  sub_1B6E33A88();
  sub_1B6E32F88();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B6BA7018(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a4[2];
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = a4[6];
  uint64_t v31 = a4[7];
  swift_retain();
  uint64_t v9 = (void *)sub_1B62F1868(v7, 96 * (v31 - v8));
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_unknownObjectRetain();
  swift_release();
  if (objc_msgSend(v9, sel_storageMode) == (id)2)
  {
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v14 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v15 = v9;
    uint64_t v30 = &v14[v11];
  }
  uint64_t ObjectType = swift_getObjectType();
  sub_1B635FB18(a2, ObjectType);
  sub_1B62E738C((uint64_t)v9, v11, v13, 0, 4, ObjectType);
  __n128 v17 = (uint64_t *)a4[11];
  uint64_t v18 = a4[12];
  uint64_t v19 = a4[13];
  uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for Rect2D, (uint64_t)&off_1F0FA0C68, v17, v18, v19, v6);
  uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v17, v18, v19, v6);
  uint64_t v22 = v31 - v8;
  if (v31 != v8)
  {
    uint64_t v23 = (uint64_t)&v30[96 * v8 + 32];
    uint64_t v24 = (long long *)(v20 + 16 * v8);
    int v25 = (long long *)(v21 + 16 * v8);
    do
    {
      long long v26 = *v24++;
      long long v27 = v26;
      long long v28 = *v25++;
      *(_OWORD *)(v23 - 32) = v27;
      *(_OWORD *)(v23 - 16) = v28;
      *(void *)(v23 + 8) = 0;
      *(void *)(v23 + 16) = 0;
      *(void *)uint64_t v23 = 0;
      *(_DWORD *)(v23 + 24) = 0;
      *(void *)(v23 + 40) = 0;
      *(void *)(v23 + 48) = 0;
      *(void *)(v23 + 32) = 0;
      v23 += 96;
      --v22;
    }
    while (v22);
  }
  sub_1B6CC8618(v31 - v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6BA7208(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a4[2];
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = a4[6];
  uint64_t v33 = a4[7];
  swift_retain();
  uint64_t v9 = (void *)sub_1B62F1868(v7, 96 * (v33 - v8));
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_unknownObjectRetain();
  swift_release();
  if (objc_msgSend(v9, sel_storageMode) == (id)2)
  {
    char v32 = 0;
  }
  else
  {
    uint64_t v14 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v15 = v9;
    char v32 = &v14[v11];
  }
  uint64_t ObjectType = swift_getObjectType();
  sub_1B635FB18(a2, ObjectType);
  sub_1B62E738C((uint64_t)v9, v11, v13, 0, 4, ObjectType);
  __n128 v17 = (uint64_t *)a4[11];
  uint64_t v18 = a4[12];
  uint64_t v19 = a4[13];
  uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for Rect2D, (uint64_t)&off_1F0FA0C68, v17, v18, v19, v6);
  uint64_t v30 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v17, v18, v19, v6);
  uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for StrokeColor, (uint64_t)&off_1F0F58798, v17, v18, v19, v6);
  uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for StrokeWidth, (uint64_t)&off_1F0F58900, v17, v18, v19, v6);
  uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for RoundedRectShape, (uint64_t)&off_1F0F6F288, v17, v18, v19, v6);
  if (v33 != v8)
  {
    uint64_t v23 = 0;
    uint64_t v24 = &v32[96 * v8];
    do
    {
      long long v25 = *(_OWORD *)(v30 + 16 * v8 + 16 * v23);
      long long v26 = *(_OWORD *)(v20 + 16 * v8 + 16 * v23);
      int v27 = *(_DWORD *)(v21 + 4 * v8 + 4 * v23);
      int v28 = *(_DWORD *)(v22 + 4 * v8 + 4 * v23);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)(v31 + 16 * v8 + 16 * v23);
      *((_OWORD *)v24 + 1) = v25;
      *((_OWORD *)v24 + 2) = v26;
      *((_DWORD *)v24 + 12) = v27;
      *((_DWORD *)v24 + 13) = v28;
      *((_DWORD *)v24 + 14) = 0;
      *((void *)v24 + 9) = 0;
      *((void *)v24 + 10) = 0;
      *((void *)v24 + 8) = 0;
      ++v23;
      v24 += 96;
    }
    while (v33 - v8 != v23);
  }
  sub_1B6CC8618(v33 - v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6BA7494(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a4[2];
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = a4[6];
  uint64_t v38 = a4[7];
  swift_retain();
  uint64_t v9 = (void *)sub_1B62F1868(v7, 96 * (v38 - v8));
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_unknownObjectRetain();
  swift_release();
  if (objc_msgSend(v9, sel_storageMode) == (id)2)
  {
    char v37 = 0;
  }
  else
  {
    uint64_t v14 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v15 = v9;
    char v37 = &v14[v11];
  }
  uint64_t ObjectType = swift_getObjectType();
  sub_1B635FB18(a2, ObjectType);
  sub_1B62E738C((uint64_t)v9, v11, v13, 0, 4, ObjectType);
  __n128 v17 = (uint64_t *)a4[11];
  uint64_t v18 = a4[12];
  uint64_t v19 = a4[13];
  uint64_t v36 = sub_1B62C9024((uint64_t)&type metadata for Rect2D, (uint64_t)&off_1F0FA0C68, v17, v18, v19, v6);
  uint64_t v35 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v17, v18, v19, v6);
  uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for StrokeColor, (uint64_t)&off_1F0F58798, v17, v18, v19, v6);
  uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for StrokeWidth, (uint64_t)&off_1F0F58900, v17, v18, v19, v6);
  uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for RoundedRectShape, (uint64_t)&off_1F0F6F288, v17, v18, v19, v6);
  uint64_t v23 = sub_1B62C9024((uint64_t)&type metadata for Shadow2D, (uint64_t)&off_1F0FA7618, v17, v18, v19, v6);
  if (v38 != v8)
  {
    uint64_t v24 = 0;
    long long v25 = &v37[96 * v8];
    long long v26 = (_OWORD *)(v23 + 32 * v8 + 16);
    do
    {
      long long v27 = *(_OWORD *)(v35 + 16 * v8 + 16 * v24);
      long long v28 = *(_OWORD *)(v20 + 16 * v8 + 16 * v24);
      int v29 = *(_DWORD *)(v21 + 4 * v8 + 4 * v24);
      int v30 = *(_DWORD *)(v22 + 4 * v8 + 4 * v24);
      int v31 = *((_DWORD *)v26 - 2);
      long long v32 = *v26;
      uint64_t v33 = *((void *)v26 - 2);
      *(_OWORD *)long long v25 = *(_OWORD *)(v36 + 16 * v8 + 16 * v24);
      *((_OWORD *)v25 + 1) = v27;
      *((_OWORD *)v25 + 2) = v28;
      *((_DWORD *)v25 + 12) = v29;
      *((_DWORD *)v25 + 13) = v30;
      *((_DWORD *)v25 + 14) = v31;
      *((_OWORD *)v25 + 4) = v32;
      *((void *)v25 + 10) = v33;
      v25 += 96;
      ++v24;
      v26 += 2;
    }
    while (v38 - v8 != v24);
  }
  sub_1B6CC8618(v38 - v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6BA7764(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  sub_1B6BAAC94(v2 + 16, (uint64_t)v4, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAD60(v4, sub_1B630BB08);
  sub_1B6BAAC94(v2 + 824, (uint64_t)v5, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAD60(v5, sub_1B630BB08);
  sub_1B6BAAC94(v2 + 1632, (uint64_t)v6, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAD60(v6, sub_1B630BB08);
  sub_1B6BAAC94(v2 + 2440, (uint64_t)v7, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAD60(v7, sub_1B630BB08);
  sub_1B6BAAC94(v2 + 3248, (uint64_t)v8, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAD60(v8, sub_1B630BB08);
  sub_1B6BAAC94(v2 + 4056, (uint64_t)v9, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAD60(v9, sub_1B630BB08);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VectorRenderSystemRenderPipelineStates()
{
  return self;
}

uint64_t sub_1B6BA78C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B6BAAA20();
  *a1 = result;
  return result;
}

uint64_t sub_1B6BA78EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  double v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76900;
  *(void *)(inited + 32) = &type metadata for Rect2D;
  *(void *)(inited + 40) = &off_1F0FA0CE0;
  *(void *)(inited + 48) = &type metadata for Color;
  *(void *)(inited + 56) = &off_1F0F9ED50;
  *(void *)(inited + 64) = &type metadata for RoundedRectShape;
  *(void *)(inited + 72) = &off_1F0F6F2B8;
  *(void *)(inited + 80) = &type metadata for StrokeColor;
  *(void *)(inited + 88) = &off_1F0F587C8;
  *(void *)(inited + 96) = &type metadata for StrokeWidth;
  *(void *)(inited + 104) = &off_1F0F58930;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 5;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 5;
  *(_DWORD *)(v12 + 32) = 50529027;
  *(unsigned char *)(v12 + 36) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B6BA7B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  double v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E89D00;
  *(void *)(inited + 32) = &type metadata for Rect2D;
  *(void *)(inited + 40) = &off_1F0FA0CE0;
  *(void *)(inited + 48) = &type metadata for Color;
  *(void *)(inited + 56) = &off_1F0F9ED50;
  *(void *)(inited + 64) = &type metadata for RoundedRectShape;
  *(void *)(inited + 72) = &off_1F0F6F2B8;
  *(void *)(inited + 80) = &type metadata for StrokeColor;
  *(void *)(inited + 88) = &off_1F0F587C8;
  *(void *)(inited + 96) = &type metadata for StrokeWidth;
  *(void *)(inited + 104) = &off_1F0F58930;
  *(void *)(inited + 112) = &type metadata for Shadow2D;
  *(void *)(inited + 120) = &off_1F0FA7648;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 6;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 6;
  *(_DWORD *)(v12 + 32) = 50529027;
  *(_WORD *)(v12 + 36) = 771;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

void sub_1B6BA7D98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    swift_retain();
    swift_retain();
    unint64_t v11 = (void *)sub_1B63340E8(a1);
    swift_release();
    if (v11)
    {
      uint64_t v3 = sub_1B6E328F8();
      sub_1B6388754(v3, v4, v11);
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void **)(v1 + 392);
      if (v5)
      {
        id v6 = v5;
        sub_1B638963C((uint64_t)v12);

        MEMORY[0x1F4188790](v7, v8);
        uint64_t v9 = *(void **)(a1 + 176);
        uint64_t v10 = type metadata accessor for VectorRenderSystemRenderPipelineStates();
        swift_retain();
        sub_1B636E6CC(v10, (uint64_t)&off_1F0F517B8, v9, (void (*)(uint64_t))sub_1B6BAAC74);
        swift_release();

        swift_release();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t *sub_1B6BA7F50(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v3 = v2;
  id v225 = v4;
  uint64_t v226 = v5;
  uint64_t v7 = v6;
  uint64_t v224 = v8;
  uint64_t v10 = v9;
  uint64_t v11 = *v4;
  long long v12 = *(_OWORD *)(*v4 + 4880);
  v318[0] = *(_OWORD *)(*v4 + 4864);
  v318[1] = v12;
  long long v13 = *(_OWORD *)(v11 + 4896);
  long long v14 = *(_OWORD *)(v11 + 4912);
  long long v15 = *(_OWORD *)(v11 + 4928);
  uint64_t v319 = *(void *)(v11 + 4944);
  v318[3] = v14;
  v318[4] = v15;
  v318[2] = v13;
  uint64_t v173 = v6;
  if (!sub_1B67CD970((uint64_t)v318, v9))
  {
    long long v16 = *(_OWORD *)(v10 + 48);
    *(_OWORD *)(v11 + 4896) = *(_OWORD *)(v10 + 32);
    *(_OWORD *)(v11 + 4912) = v16;
    *(_OWORD *)(v11 + 4928) = *(_OWORD *)(v10 + 64);
    *(void *)(v11 + 4944) = *(void *)(v10 + 80);
    long long v17 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)(v11 + 4864) = *(_OWORD *)v10;
    *(_OWORD *)(v11 + 4880) = v17;
    v227[0] = xmmword_1B6EAED10;
    v227[1] = 0uLL;
    *(void *)id v228 = MEMORY[0x1E4FBC860];
    *(_OWORD *)&v228[8] = xmmword_1B6EAED20;
    uint64_t v229 = 0;
    *(void *)&long long v230 = 0;
    *((void *)&v230 + 1) = MEMORY[0x1E4FBC860];
    long long v233 = 0u;
    long long v234 = 0u;
    long long v231 = 0u;
    long long v232 = 0u;
    long long v235 = 0u;
    long long v236 = 0u;
    v315[1] = 0uLL;
    v315[0] = xmmword_1B6EAED10;
    memset(&v315[5], 0, 96);
    v315[4] = v230;
    v315[2] = *(_OWORD *)v228;
    v315[3] = 0xEB00000000676172;
    sub_1B6BAAD14(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1B6E77D10;
    *(_OWORD *)(v18 + 32) = xmmword_1B6EA6B10;
    *(unsigned char *)(v18 + 48) = 0;
    *(void *)(v18 + 64) = 1;
    *(_OWORD *)(v18 + 72) = 0u;
    *(_OWORD *)(v18 + 88) = 0u;
    *(_OWORD *)(v18 + 104) = 0u;
    *(void *)(v18 + 120) = 0;
    uint64_t v320 = v3;
    *(unsigned char *)(v18 + 128) = 13;
    *(_OWORD *)(v18 + 144) = xmmword_1B6EAED30;
    *(unsigned char *)(v18 + 160) = 0;
    *(_OWORD *)(v18 + 176) = 0u;
    *(_OWORD *)(v18 + 192) = 0u;
    *(_OWORD *)(v18 + 208) = 0u;
    *(_OWORD *)(v18 + 224) = 0u;
    *(unsigned char *)(v18 + 240) = 13;
    *(_OWORD *)(v18 + 256) = xmmword_1B6EAED40;
    *(unsigned char *)(v18 + 272) = 0;
    *(_OWORD *)(v18 + 320) = 0u;
    *(_OWORD *)(v18 + 336) = 0u;
    *(_OWORD *)(v18 + 288) = 0u;
    *(_OWORD *)(v18 + 304) = 0u;
    *(unsigned char *)(v18 + 352) = 14;
    memset(v316, 0, sizeof(v316));
    __int16 v317 = 256;
    v314[0] = 0;
    v314[1] = 0;
    v314[2] = 2;
    memset(&v314[3], 0, 24);
    swift_retain();
    sub_1B62D5ED4((uint64_t *)v315, (void *)v10, 0, 0, v18, (uint64_t)v316, 3, (uint64_t)v314, (uint64_t)__src, 1, 1);
    sub_1B638A224((uint64_t *)v227);
    memcpy(__dst, __src, sizeof(__dst));
    nullsub_1(__dst);
    sub_1B6BAAC94(v11 + 16, (uint64_t)v239, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAC94((uint64_t)__dst, v11 + 16, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAD60(v239, sub_1B630BB08);
    swift_release();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1B6E77D10;
    *(_OWORD *)(v19 + 32) = xmmword_1B6EA6B10;
    *(unsigned char *)(v19 + 48) = 0;
    *(void *)(v19 + 64) = 1;
    *(_OWORD *)(v19 + 72) = 0u;
    *(_OWORD *)(v19 + 88) = 0u;
    *(_OWORD *)(v19 + 104) = 0u;
    *(void *)(v19 + 120) = 0;
    *(unsigned char *)(v19 + 128) = 13;
    *(_OWORD *)(v19 + 144) = xmmword_1B6EAED30;
    *(unsigned char *)(v19 + 160) = 0;
    *(_OWORD *)(v19 + 176) = 0u;
    *(_OWORD *)(v19 + 192) = 0u;
    *(_OWORD *)(v19 + 208) = 0u;
    *(_OWORD *)(v19 + 224) = 0u;
    *(unsigned char *)(v19 + 240) = 13;
    *(_OWORD *)(v19 + 256) = xmmword_1B6EAED40;
    *(unsigned char *)(v19 + 272) = 0;
    *(void *)(v19 + 288) = 1;
    *(void *)(v19 + 344) = 0;
    *(_OWORD *)(v19 + 312) = 0u;
    *(_OWORD *)(v19 + 328) = 0u;
    *(_OWORD *)(v19 + 296) = 0u;
    *(unsigned char *)(v19 + 352) = 14;
    swift_retain();
    sub_1B62D5ED4((uint64_t *)v315, (void *)v10, 0, 0, v19, (uint64_t)v316, 3, (uint64_t)v314, (uint64_t)v246, 1, 1);
    sub_1B638A224((uint64_t *)v227);
    memcpy(v247, v246, sizeof(v247));
    nullsub_1(v247);
    sub_1B6BAAC94(v11 + 824, (uint64_t)v248, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAC94((uint64_t)v247, v11 + 824, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAD60(v248, sub_1B630BB08);
    swift_release();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B6E77D10;
    *(_OWORD *)(v20 + 32) = xmmword_1B6EA6B10;
    *(unsigned char *)(v20 + 48) = 0;
    *(void *)(v20 + 64) = 1;
    *(_OWORD *)(v20 + 72) = 0u;
    *(_OWORD *)(v20 + 88) = 0u;
    *(_OWORD *)(v20 + 104) = 0u;
    *(void *)(v20 + 120) = 0;
    *(unsigned char *)(v20 + 128) = 13;
    *(_OWORD *)(v20 + 144) = xmmword_1B6EAED30;
    *(unsigned char *)(v20 + 160) = 0;
    *(_OWORD *)(v20 + 176) = 0u;
    *(_OWORD *)(v20 + 192) = 0u;
    *(_OWORD *)(v20 + 208) = 0u;
    *(_OWORD *)(v20 + 224) = 0u;
    *(unsigned char *)(v20 + 240) = 13;
    *(_OWORD *)(v20 + 256) = xmmword_1B6EAED40;
    *(unsigned char *)(v20 + 272) = 0;
    *(void *)(v20 + 288) = 2;
    *(void *)(v20 + 344) = 0;
    *(_OWORD *)(v20 + 312) = 0u;
    *(_OWORD *)(v20 + 328) = 0u;
    *(_OWORD *)(v20 + 296) = 0u;
    *(unsigned char *)(v20 + 352) = 14;
    swift_retain();
    sub_1B62D5ED4((uint64_t *)v315, (void *)v10, 0, 0, v20, (uint64_t)v316, 3, (uint64_t)v314, (uint64_t)v255, 1, 1);
    sub_1B638A224((uint64_t *)v227);
    memcpy(v256, v255, sizeof(v256));
    nullsub_1(v256);
    sub_1B6BAAC94(v11 + 1632, (uint64_t)v257, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAC94((uint64_t)v256, v11 + 1632, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAD60(v257, sub_1B630BB08);
    swift_release();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1B6E85730;
    *(_OWORD *)(v21 + 32) = xmmword_1B6EA6B10;
    *(unsigned char *)(v21 + 48) = 0;
    *(void *)(v21 + 64) = 1;
    *(_OWORD *)(v21 + 72) = 0u;
    *(_OWORD *)(v21 + 88) = 0u;
    *(_OWORD *)(v21 + 104) = 0u;
    *(void *)(v21 + 120) = 0;
    *(unsigned char *)(v21 + 128) = 13;
    *(_OWORD *)(v21 + 144) = xmmword_1B6EA6B00;
    *(unsigned char *)(v21 + 160) = 0;
    *(void *)(v21 + 176) = 1;
    *(_OWORD *)(v21 + 184) = 0u;
    *(_OWORD *)(v21 + 200) = 0u;
    *(_OWORD *)(v21 + 216) = 0u;
    *(void *)(v21 + 232) = 0;
    *(unsigned char *)(v21 + 240) = 13;
    *(_OWORD *)(v21 + 256) = xmmword_1B6EAED30;
    *(unsigned char *)(v21 + 272) = 0;
    *(_OWORD *)(v21 + 320) = 0u;
    *(_OWORD *)(v21 + 336) = 0u;
    *(_OWORD *)(v21 + 288) = 0u;
    *(_OWORD *)(v21 + 304) = 0u;
    *(unsigned char *)(v21 + 352) = 13;
    *(_OWORD *)(v21 + 368) = xmmword_1B6EAED40;
    *(unsigned char *)(v21 + 384) = 0;
    *(void *)(v21 + 400) = 2;
    *(_OWORD *)(v21 + 408) = 0u;
    *(_OWORD *)(v21 + 424) = 0u;
    *(_OWORD *)(v21 + 440) = 0u;
    *(void *)(v21 + 456) = 0;
    *(unsigned char *)(v21 + 464) = 14;
    swift_retain();
    sub_1B62D5ED4((uint64_t *)v315, (void *)v10, 0, 0, v21, (uint64_t)v316, 3, (uint64_t)v314, (uint64_t)v262, 1, 1);
    sub_1B638A224((uint64_t *)v227);
    memcpy(v263, v262, sizeof(v263));
    nullsub_1(v263);
    sub_1B6BAAC94(v11 + 2440, (uint64_t)v264, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    uint64_t v7 = v173;
    sub_1B6BAAC94((uint64_t)v263, v11 + 2440, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAD60(v264, sub_1B630BB08);
    swift_release();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1B6E85730;
    *(_OWORD *)(v22 + 32) = xmmword_1B6EA6B10;
    *(unsigned char *)(v22 + 48) = 0;
    *(void *)(v22 + 64) = 1;
    *(_OWORD *)(v22 + 72) = 0u;
    *(_OWORD *)(v22 + 88) = 0u;
    *(_OWORD *)(v22 + 104) = 0u;
    *(void *)(v22 + 120) = 0;
    *(unsigned char *)(v22 + 128) = 13;
    *(_OWORD *)(v22 + 144) = xmmword_1B6EA6B00;
    *(unsigned char *)(v22 + 160) = 0;
    *(void *)(v22 + 176) = 1;
    *(_OWORD *)(v22 + 184) = 0u;
    *(_OWORD *)(v22 + 200) = 0u;
    *(_OWORD *)(v22 + 216) = 0u;
    *(void *)(v22 + 232) = 0;
    *(unsigned char *)(v22 + 240) = 13;
    *(_OWORD *)(v22 + 256) = xmmword_1B6EAED30;
    *(unsigned char *)(v22 + 272) = 0;
    *(void *)(v22 + 288) = 1;
    *(void *)(v22 + 344) = 0;
    *(_OWORD *)(v22 + 312) = 0u;
    *(_OWORD *)(v22 + 328) = 0u;
    *(_OWORD *)(v22 + 296) = 0u;
    *(unsigned char *)(v22 + 352) = 13;
    uint64_t v3 = v320;
    *(_OWORD *)(v22 + 368) = xmmword_1B6EAED40;
    *(unsigned char *)(v22 + 384) = 0;
    *(void *)(v22 + 400) = 2;
    *(_OWORD *)(v22 + 408) = 0u;
    *(_OWORD *)(v22 + 424) = 0u;
    *(_OWORD *)(v22 + 440) = 0u;
    *(void *)(v22 + 456) = 0;
    *(unsigned char *)(v22 + 464) = 14;
    v310[0] = 0;
    v310[1] = 0;
    long long v311 = xmmword_1B6EAED50;
    long long v312 = xmmword_1B6EAED50;
    __int16 v313 = 15;
    swift_retain();
    sub_1B62D5ED4((uint64_t *)v315, (void *)v10, 0, 0, v22, (uint64_t)v310, 3, (uint64_t)v314, (uint64_t)v265, 1, 1);
    sub_1B638A224((uint64_t *)v227);
    memcpy(v290, v265, sizeof(v290));
    nullsub_1(v290);
    sub_1B6BAAC94(v11 + 3248, (uint64_t)v294, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAC94((uint64_t)v290, v11 + 3248, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAD60(v294, sub_1B630BB08);
    swift_release();
    *(void *)&v266[0] = 0xD000000000000012;
    *((void *)&v266[0] + 1) = 0x80000001B6F4BC10;
    v266[1] = 0uLL;
    *(void *)&long long v267 = MEMORY[0x1E4FBC860];
    *((void *)&v267 + 1) = 0xD000000000000012;
    unint64_t v268 = 0x80000001B6F4BC30;
    uint64_t v269 = 0;
    *(void *)&long long v270 = 0;
    *((void *)&v270 + 1) = MEMORY[0x1E4FBC860];
    long long v271 = 0u;
    long long v272 = 0u;
    long long v273 = 0u;
    long long v274 = 0u;
    long long v275 = 0u;
    long long v276 = 0u;
    v309[1] = 0uLL;
    v309[0] = v266[0];
    memset(&v309[5], 0, 96);
    v309[4] = v270;
    v309[2] = v267;
    v309[3] = 0x80000001B6F4BC30;
    swift_retain();
    sub_1B62D5ED4((uint64_t *)v309, (void *)v10, 0, 0, (uint64_t)&unk_1F0F7B650, (uint64_t)v310, 3, (uint64_t)v314, (uint64_t)v298, 1, 1);
    sub_1B638A224((uint64_t *)v266);
    memcpy(v302, v298, sizeof(v302));
    nullsub_1(v302);
    sub_1B6BAAC94(v11 + 4056, (uint64_t)v306, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAC94((uint64_t)v302, v11 + 4056, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
    sub_1B6BAAD60(v306, sub_1B630BB08);
    swift_release();
  }
  long long v23 = *(_OWORD *)(v7 + 32);
  v307[0] = *(_OWORD *)(v7 + 16);
  v307[1] = v23;
  uint64_t v308 = *(void *)(v7 + 48);
  sub_1B62C9DA8(v224, (uint64_t)v307, 0x200000000, v277);
  sub_1B6BAAC94((uint64_t)v277, (uint64_t)v248, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v248[0])
  {
    uint64_t v199 = v254;
    if (v254 >= 1)
    {
      uint64_t v24 = v251;
      if (v251)
      {
        uint64_t v25 = v253;
        uint64_t v219 = v253[4];
        uint64_t v194 = v252;
        int v26 = *(unsigned __int8 *)(v252 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v279[0] = v248[0];
        v279[1] = v248[1];
        uint64_t v27 = v250;
        uint64_t v280 = v249;
        uint64_t v174 = v253 + 13;
        unint64_t v179 = v253 + 8;
        uint64_t v184 = (uint64_t)(v253 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        long long v28 = (uint64_t *)(v27 + 24);
        int v189 = v26;
        do
        {
          uint64_t v214 = v24;
          uint64_t v320 = v3;
          uint64_t v29 = *((unsigned int *)v28 - 6);
          uint64_t v30 = *((unsigned int *)v28 - 5);
          uint64_t v31 = *((unsigned int *)v28 - 4);
          uint64_t v32 = *v28;
          uint64_t v209 = *(v28 - 1);
          uint64_t v33 = v28[2];
          uint64_t v204 = v28[1];
          if (v26)
          {
            uint64_t v34 = *(os_unfair_lock_s **)(v33 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v34);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v33 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v219);
          sub_1B6BAAC94(v184, (uint64_t)v305, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v35 = v25[4];
          uint64_t v36 = *(void *)(*(void *)(*(void *)(*(void *)(v33 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v25[6] = ecs_stack_allocator_allocate(v35, 48 * v36, 8);
          v25[7] = v36;
          v179[1] = 0;
          v179[2] = 0;
          *unint64_t v179 = 0;
          swift_release();
          v263[0] = v194;
          v263[1] = v33;
          v263[2] = v25;
          v263[3] = v31;
          v263[4] = (v30 - v29 + v31);
          v263[5] = v199;
          v263[6] = v29;
          v263[7] = v30;
          v263[8] = 0;
          v263[9] = 0;
          LOBYTE(v263[10]) = 1;
          v263[11] = v209;
          v263[12] = v32;
          v263[13] = v204;
          uint64_t v37 = sub_1B6388ED8(v25[3]);
          uint64_t v38 = v320;
          if (v37)
          {
            char v39 = (void *)v37;
            sub_1B6BAAC94(*v225 + 16, (uint64_t)v298, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            sub_1B6BAAC94((uint64_t)v298, (uint64_t)v302, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            memcpy(v306, v302, sizeof(v306));
            swift_unknownObjectRetain();
            sub_1B6BAAD60(v298, sub_1B6BAAF1C);
            unint64_t v40 = sub_1B638A310((uint64_t)v306, 0);
            unint64_t v42 = v40;
            id v43 = v41;
            if (v40 >= 3)
            {
              unint64_t v44 = swift_unknownObjectRetain();
              sub_1B630B7D8(v44, v43);
              sub_1B6BAAD60(v298, sub_1B630BB08);
              objc_msgSend(v39, sel_setCullMode_, 2);
              objc_msgSend(v39, sel_setDepthStencilState_, *(void *)(*(void *)(v226 + 248) + 64));
              objc_msgSend(v39, sel_setRenderPipelineState_, v42);
              sub_1B6BA7018(v226, v224, (uint64_t)v39, v263);
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1B630B7D8(v40, v41);
              sub_1B6BAAD60(v298, sub_1B630BB08);
            }
            swift_unknownObjectRelease();
            uint64_t v38 = v320;
          }
          sub_1B6345178(v25, (unsigned __int16 **)v279, (uint64_t)v305);
          uint64_t v3 = v38;
          if (*(void *)(v25[13] + 16))
          {
            uint64_t v45 = swift_bridgeObjectRetain();
            sub_1B639147C(v45, v33);
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v47 = v25[13];
            if (isUniquelyReferenced_nonNull_native)
            {
              sub_1B6399BB8(0, *(void *)(v47 + 16));
            }
            else
            {
              long long v48 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v47 + 24) >= 2uLL)
              {
                sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                long long v48 = (void *)swift_allocObject();
                size_t v49 = j__malloc_size(v48);
                _OWORD v48[2] = 0;
                v48[3] = 2 * ((uint64_t)(v49 - 32) / 72);
              }
              *uint64_t v174 = v48;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v25[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              long long v50 = *(char **)(v33 + 232);
              uint64_t v51 = *(char **)(v33 + 256);
              if (v50 == v51)
              {
                uint64_t v52 = *(char **)(v33 + 240);
              }
              else
              {
                sub_1B666018C(v51, v50);
                uint64_t v51 = *(char **)(v33 + 232);
                uint64_t v52 = *(char **)(v33 + 240);
                if (v52 == v51)
                {
                  uint64_t v52 = 0;
                  uint64_t v51 = 0;
                  *(void *)(v33 + 232) = 0;
                  *(void *)(v33 + 240) = 0;
                }
              }
              *(void *)(v33 + 248) = v52;
              *(void *)(v33 + 256) = v51;
            }
          }
          ecs_stack_allocator_pop_snapshot(v219);
          int v26 = v189;
          if (v189)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
          }
          swift_release();
          v28 += 6;
          uint64_t v24 = v214 - 1;
        }
        while (v214 != 1);
        sub_1B632F170(v277);
        uint64_t v7 = v173;
      }
    }
    sub_1B632F170(v277);
  }
  long long v53 = *(_OWORD *)(v7 + 72);
  v303[0] = *(_OWORD *)(v7 + 56);
  v303[1] = v53;
  uint64_t v304 = *(void *)(v7 + 88);
  sub_1B62C9DA8(v224, (uint64_t)v303, 0x200000000, v278);
  sub_1B6BAAC94((uint64_t)v278, (uint64_t)v247, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)v247)
  {
    uint64_t v200 = *(void *)&v247[80];
    if (*(uint64_t *)&v247[80] >= 1)
    {
      uint64_t v54 = *(void *)&v247[56];
      if (*(void *)&v247[56])
      {
        uint64_t v55 = *(void **)&v247[72];
        uint64_t v220 = *(void *)(*(void *)&v247[72] + 32);
        uint64_t v195 = *(void *)&v247[64];
        int v56 = *(unsigned __int8 *)(*(void *)&v247[64] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v281[0] = *(_OWORD *)v247;
        v281[1] = *(_OWORD *)&v247[16];
        uint64_t v57 = *(void *)&v247[40];
        uint64_t v282 = *(void *)&v247[32];
        id v175 = (void *)(*(void *)&v247[72] + 104);
        unint64_t v180 = (void *)(*(void *)&v247[72] + 64);
        uint64_t v185 = *(void *)&v247[72] + 48;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v58 = (uint64_t *)(v57 + 24);
        int v190 = v56;
        do
        {
          uint64_t v215 = v54;
          uint64_t v320 = v3;
          uint64_t v59 = *((unsigned int *)v58 - 6);
          uint64_t v60 = *((unsigned int *)v58 - 5);
          uint64_t v61 = *((unsigned int *)v58 - 4);
          uint64_t v62 = *v58;
          uint64_t v210 = *(v58 - 1);
          uint64_t v63 = v58[2];
          uint64_t v205 = v58[1];
          if (v56)
          {
            uint64_t v64 = *(os_unfair_lock_s **)(v63 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v64);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v63 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v220);
          sub_1B6BAAC94(v185, (uint64_t)v301, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v65 = v55[4];
          uint64_t v66 = *(void *)(*(void *)(*(void *)(*(void *)(v63 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v55[6] = ecs_stack_allocator_allocate(v65, 48 * v66, 8);
          v55[7] = v66;
          v180[1] = 0;
          v180[2] = 0;
          *unint64_t v180 = 0;
          swift_release();
          v262[0] = v195;
          v262[1] = v63;
          v262[2] = v55;
          v262[3] = v61;
          v262[4] = (v60 - v59 + v61);
          v262[5] = v200;
          v262[6] = v59;
          v262[7] = v60;
          v262[8] = 0;
          v262[9] = 0;
          LOBYTE(v262[10]) = 1;
          v262[11] = v210;
          v262[12] = v62;
          v262[13] = v205;
          uint64_t v67 = sub_1B6388ED8(v55[3]);
          uint64_t v68 = v320;
          if (v67)
          {
            uint64_t v69 = (void *)v67;
            sub_1B6BAAC94(*v225 + 824, (uint64_t)v294, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            sub_1B6BAAC94((uint64_t)v294, (uint64_t)v298, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            memcpy(v302, v298, sizeof(v302));
            swift_unknownObjectRetain();
            sub_1B6BAAD60(v294, sub_1B6BAAF1C);
            unint64_t v70 = sub_1B638A310((uint64_t)v302, 0);
            unint64_t v72 = v70;
            int v73 = v71;
            if (v70 >= 3)
            {
              unint64_t v74 = swift_unknownObjectRetain();
              sub_1B630B7D8(v74, v73);
              sub_1B6BAAD60(v294, sub_1B630BB08);
              objc_msgSend(v69, sel_setCullMode_, 2);
              objc_msgSend(v69, sel_setDepthStencilState_, *(void *)(*(void *)(v226 + 248) + 168));
              objc_msgSend(v69, sel_setRenderPipelineState_, v72);
              sub_1B6BA7018(v226, v224, (uint64_t)v69, v262);
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1B630B7D8(v70, v71);
              sub_1B6BAAD60(v294, sub_1B630BB08);
            }
            swift_unknownObjectRelease();
            uint64_t v68 = v320;
          }
          sub_1B6345178(v55, (unsigned __int16 **)v281, (uint64_t)v301);
          uint64_t v3 = v68;
          if (*(void *)(v55[13] + 16))
          {
            uint64_t v75 = swift_bridgeObjectRetain();
            sub_1B639147C(v75, v63);
            swift_bridgeObjectRelease();
            char v76 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v77 = v55[13];
            if (v76)
            {
              sub_1B6399BB8(0, *(void *)(v77 + 16));
            }
            else
            {
              uint64_t v78 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v77 + 24) >= 2uLL)
              {
                sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                uint64_t v78 = (void *)swift_allocObject();
                size_t v79 = j__malloc_size(v78);
                v78[2] = 0;
                v78[3] = 2 * ((uint64_t)(v79 - 32) / 72);
              }
              *id v175 = v78;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v55[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              uint64_t v80 = *(char **)(v63 + 232);
              uint64_t v81 = *(char **)(v63 + 256);
              if (v80 == v81)
              {
                char v82 = *(char **)(v63 + 240);
              }
              else
              {
                sub_1B666018C(v81, v80);
                uint64_t v81 = *(char **)(v63 + 232);
                char v82 = *(char **)(v63 + 240);
                if (v82 == v81)
                {
                  char v82 = 0;
                  uint64_t v81 = 0;
                  *(void *)(v63 + 232) = 0;
                  *(void *)(v63 + 240) = 0;
                }
              }
              *(void *)(v63 + 248) = v82;
              *(void *)(v63 + 256) = v81;
            }
          }
          ecs_stack_allocator_pop_snapshot(v220);
          int v56 = v190;
          if (v190)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v63 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v63 + 376));
          }
          swift_release();
          v58 += 6;
          uint64_t v54 = v215 - 1;
        }
        while (v215 != 1);
        sub_1B632F170(v278);
        uint64_t v7 = v173;
      }
    }
    sub_1B632F170(v278);
  }
  long long v83 = *(_OWORD *)(v7 + 112);
  v299[0] = *(_OWORD *)(v7 + 96);
  v299[1] = v83;
  uint64_t v300 = *(void *)(v7 + 128);
  sub_1B62C9DA8(v224, (uint64_t)v299, 0x200000000, v227);
  sub_1B6BAAC94((uint64_t)v227, (uint64_t)v246, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)v246)
  {
    uint64_t v201 = *(void *)&v246[80];
    if (*(uint64_t *)&v246[80] >= 1)
    {
      uint64_t v84 = *(void *)&v246[56];
      if (*(void *)&v246[56])
      {
        id v85 = *(void **)&v246[72];
        uint64_t v221 = *(void *)(*(void *)&v246[72] + 32);
        uint64_t v196 = *(void *)&v246[64];
        int v86 = *(unsigned __int8 *)(*(void *)&v246[64] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v283[0] = *(_OWORD *)v246;
        v283[1] = *(_OWORD *)&v246[16];
        uint64_t v87 = *(void *)&v246[40];
        uint64_t v284 = *(void *)&v246[32];
        uint64_t v176 = (void *)(*(void *)&v246[72] + 104);
        id v181 = (void *)(*(void *)&v246[72] + 64);
        uint64_t v186 = *(void *)&v246[72] + 48;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v88 = (uint64_t *)(v87 + 24);
        int v191 = v86;
        do
        {
          uint64_t v216 = v84;
          uint64_t v320 = v3;
          uint64_t v89 = *((unsigned int *)v88 - 6);
          uint64_t v90 = *((unsigned int *)v88 - 5);
          uint64_t v91 = *((unsigned int *)v88 - 4);
          uint64_t v92 = *v88;
          uint64_t v211 = *(v88 - 1);
          uint64_t v93 = v88[2];
          uint64_t v206 = v88[1];
          if (v86)
          {
            id v94 = *(os_unfair_lock_s **)(v93 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v94);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v93 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v221);
          sub_1B6BAAC94(v186, (uint64_t)v297, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v95 = v85[4];
          uint64_t v96 = *(void *)(*(void *)(*(void *)(*(void *)(v93 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v85[6] = ecs_stack_allocator_allocate(v95, 48 * v96, 8);
          v85[7] = v96;
          v181[1] = 0;
          v181[2] = 0;
          *id v181 = 0;
          swift_release();
          v257[0] = v196;
          v257[1] = v93;
          v257[2] = v85;
          v257[3] = v91;
          v257[4] = (v90 - v89 + v91);
          v257[5] = v201;
          v257[6] = v89;
          v257[7] = v90;
          v257[8] = 0;
          v257[9] = 0;
          char v258 = 1;
          uint64_t v259 = v211;
          uint64_t v260 = v92;
          uint64_t v261 = v206;
          uint64_t v97 = sub_1B6388ED8(v85[3]);
          uint64_t v98 = v320;
          if (v97)
          {
            id v99 = (void *)v97;
            sub_1B6BAAC94(*v225 + 1632, (uint64_t)v290, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            sub_1B6BAAC94((uint64_t)v290, (uint64_t)v294, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            memcpy(v298, v294, sizeof(v298));
            swift_unknownObjectRetain();
            sub_1B6BAAD60(v290, sub_1B6BAAF1C);
            unint64_t v100 = sub_1B638A310((uint64_t)v298, 0);
            unint64_t v102 = v100;
            uint64_t v103 = v101;
            if (v100 >= 3)
            {
              unint64_t v104 = swift_unknownObjectRetain();
              sub_1B630B7D8(v104, v103);
              sub_1B6BAAD60(v290, sub_1B630BB08);
              objc_msgSend(v99, sel_setCullMode_, 2);
              objc_msgSend(v99, sel_setDepthStencilState_, *(void *)(*(void *)(v226 + 248) + 168));
              objc_msgSend(v99, sel_setRenderPipelineState_, v102);
              sub_1B6BA7018(v226, v224, (uint64_t)v99, v257);
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1B630B7D8(v100, v101);
              sub_1B6BAAD60(v290, sub_1B630BB08);
            }
            swift_unknownObjectRelease();
            uint64_t v98 = v320;
          }
          sub_1B6345178(v85, (unsigned __int16 **)v283, (uint64_t)v297);
          uint64_t v3 = v98;
          if (*(void *)(v85[13] + 16))
          {
            uint64_t v105 = swift_bridgeObjectRetain();
            sub_1B639147C(v105, v93);
            swift_bridgeObjectRelease();
            char v106 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v107 = v85[13];
            if (v106)
            {
              sub_1B6399BB8(0, *(void *)(v107 + 16));
            }
            else
            {
              uint64_t v108 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v107 + 24) >= 2uLL)
              {
                sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                uint64_t v108 = (void *)swift_allocObject();
                size_t v109 = j__malloc_size(v108);
                v108[2] = 0;
                v108[3] = 2 * ((uint64_t)(v109 - 32) / 72);
              }
              void *v176 = v108;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v85[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              id v110 = *(char **)(v93 + 232);
              unint64_t v111 = *(char **)(v93 + 256);
              if (v110 == v111)
              {
                uint64_t v112 = *(char **)(v93 + 240);
              }
              else
              {
                sub_1B666018C(v111, v110);
                unint64_t v111 = *(char **)(v93 + 232);
                uint64_t v112 = *(char **)(v93 + 240);
                if (v112 == v111)
                {
                  uint64_t v112 = 0;
                  unint64_t v111 = 0;
                  *(void *)(v93 + 232) = 0;
                  *(void *)(v93 + 240) = 0;
                }
              }
              *(void *)(v93 + 248) = v112;
              *(void *)(v93 + 256) = v111;
            }
          }
          ecs_stack_allocator_pop_snapshot(v221);
          int v86 = v191;
          if (v191)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 376));
          }
          swift_release();
          v88 += 6;
          uint64_t v84 = v216 - 1;
        }
        while (v216 != 1);
        sub_1B632F170((uint64_t *)v227);
        uint64_t v7 = v173;
      }
    }
    sub_1B632F170((uint64_t *)v227);
  }
  long long v113 = *(_OWORD *)(v7 + 152);
  v295[0] = *(_OWORD *)(v7 + 136);
  v295[1] = v113;
  uint64_t v296 = *(void *)(v7 + 168);
  sub_1B62C9DA8(v224, (uint64_t)v295, 0x200000000, v266);
  sub_1B6BAAC94((uint64_t)v266, (uint64_t)v239, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v239[0])
  {
    uint64_t v202 = v245;
    if (v245 >= 1)
    {
      uint64_t v114 = v242;
      if (v242)
      {
        id v115 = v244;
        uint64_t v222 = v244[4];
        uint64_t v197 = v243;
        int v116 = *(unsigned __int8 *)(v243 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v285[0] = v239[0];
        v285[1] = v239[1];
        uint64_t v117 = v241;
        uint64_t v286 = v240;
        char v177 = v244 + 13;
        uint64_t v182 = v244 + 8;
        uint64_t v187 = (uint64_t)(v244 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        id v118 = (uint64_t *)(v117 + 24);
        int v192 = v116;
        do
        {
          uint64_t v217 = v114;
          uint64_t v320 = v3;
          uint64_t v119 = *((unsigned int *)v118 - 6);
          uint64_t v120 = *((unsigned int *)v118 - 5);
          uint64_t v121 = *((unsigned int *)v118 - 4);
          uint64_t v122 = *v118;
          uint64_t v212 = *(v118 - 1);
          uint64_t v123 = v118[2];
          uint64_t v207 = v118[1];
          if (v116)
          {
            uint64_t v124 = *(os_unfair_lock_s **)(v123 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v124);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v123 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v222);
          sub_1B6BAAC94(v187, (uint64_t)v293, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v125 = v115[4];
          uint64_t v126 = *(void *)(*(void *)(*(void *)(*(void *)(v123 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v115[6] = ecs_stack_allocator_allocate(v125, 48 * v126, 8);
          v115[7] = v126;
          v182[1] = 0;
          v182[2] = 0;
          void *v182 = 0;
          swift_release();
          v256[0] = v197;
          v256[1] = v123;
          v256[2] = v115;
          v256[3] = v121;
          v256[4] = (v120 - v119 + v121);
          v256[5] = v202;
          v256[6] = v119;
          v256[7] = v120;
          v256[8] = 0;
          v256[9] = 0;
          LOBYTE(v256[10]) = 1;
          v256[11] = v212;
          v256[12] = v122;
          v256[13] = v207;
          uint64_t v127 = sub_1B6388ED8(v115[3]);
          uint64_t v128 = v320;
          if (v127)
          {
            int v129 = (void *)v127;
            sub_1B6BAAC94(*v225 + 2440, (uint64_t)v265, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            sub_1B6BAAC94((uint64_t)v265, (uint64_t)v290, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            memcpy(v294, v290, sizeof(v294));
            swift_unknownObjectRetain();
            sub_1B6BAAD60(v265, sub_1B6BAAF1C);
            unint64_t v130 = sub_1B638A310((uint64_t)v294, 0);
            unint64_t v132 = v130;
            id v133 = v131;
            if (v130 >= 3)
            {
              unint64_t v134 = swift_unknownObjectRetain();
              sub_1B630B7D8(v134, v133);
              sub_1B6BAAD60(v265, sub_1B630BB08);
              objc_msgSend(v129, sel_setCullMode_, 2);
              objc_msgSend(v129, sel_setDepthStencilState_, *(void *)(*(void *)(v226 + 248) + 168));
              objc_msgSend(v129, sel_setRenderPipelineState_, v132);
              sub_1B6BA7208(v226, v224, (uint64_t)v129, v256);
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1B630B7D8(v130, v131);
              sub_1B6BAAD60(v265, sub_1B630BB08);
            }
            swift_unknownObjectRelease();
            uint64_t v128 = v320;
          }
          sub_1B6345178(v115, (unsigned __int16 **)v285, (uint64_t)v293);
          uint64_t v3 = v128;
          if (*(void *)(v115[13] + 16))
          {
            uint64_t v135 = swift_bridgeObjectRetain();
            sub_1B639147C(v135, v123);
            swift_bridgeObjectRelease();
            char v136 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v137 = v115[13];
            if (v136)
            {
              sub_1B6399BB8(0, *(void *)(v137 + 16));
            }
            else
            {
              uint64_t v138 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v137 + 24) >= 2uLL)
              {
                sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                uint64_t v138 = (void *)swift_allocObject();
                size_t v139 = j__malloc_size(v138);
                v138[2] = 0;
                v138[3] = 2 * ((uint64_t)(v139 - 32) / 72);
              }
              *char v177 = v138;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v115[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              id v140 = *(char **)(v123 + 232);
              uint64_t v141 = *(char **)(v123 + 256);
              if (v140 == v141)
              {
                uint64_t v142 = *(char **)(v123 + 240);
              }
              else
              {
                sub_1B666018C(v141, v140);
                uint64_t v141 = *(char **)(v123 + 232);
                uint64_t v142 = *(char **)(v123 + 240);
                if (v142 == v141)
                {
                  uint64_t v142 = 0;
                  uint64_t v141 = 0;
                  *(void *)(v123 + 232) = 0;
                  *(void *)(v123 + 240) = 0;
                }
              }
              *(void *)(v123 + 248) = v142;
              *(void *)(v123 + 256) = v141;
            }
          }
          ecs_stack_allocator_pop_snapshot(v222);
          int v116 = v192;
          if (v192)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v123 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v123 + 376));
          }
          swift_release();
          v118 += 6;
          uint64_t v114 = v217 - 1;
        }
        while (v217 != 1);
        sub_1B632F170((uint64_t *)v266);
        uint64_t v7 = v173;
      }
    }
    sub_1B632F170((uint64_t *)v266);
  }
  long long v143 = *(_OWORD *)(v7 + 192);
  v291[0] = *(_OWORD *)(v7 + 176);
  v291[1] = v143;
  uint64_t v292 = *(void *)(v7 + 208);
  sub_1B62C9DA8(v224, (uint64_t)v291, 0x200000000, __src);
  uint64_t result = (uint64_t *)sub_1B6BAAC94((uint64_t)__src, (uint64_t)__dst, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)__dst)
  {
    uint64_t v198 = *(void *)&__dst[80];
    if (*(uint64_t *)&__dst[80] >= 1)
    {
      uint64_t v145 = *(void *)&__dst[56];
      if (*(void *)&__dst[56])
      {
        id v146 = *(void **)&__dst[72];
        uint64_t v223 = *(void *)(*(void *)&__dst[72] + 32);
        int v218 = *(unsigned __int8 *)(*(void *)&__dst[64] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v287[0] = *(_OWORD *)__dst;
        v287[1] = *(_OWORD *)&__dst[16];
        uint64_t v147 = *(void *)&__dst[40];
        uint64_t v288 = *(void *)&__dst[32];
        uint64_t v188 = *(void *)&__dst[72] + 48;
        uint64_t v193 = *(void *)&__dst[64];
        uint64_t v178 = (void *)(*(void *)&__dst[72] + 104);
        uint64_t v183 = (void *)(*(void *)&__dst[72] + 64);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v148 = (uint64_t *)(v147 + 24);
        do
        {
          uint64_t v213 = v145;
          uint64_t v320 = v3;
          uint64_t v149 = *((unsigned int *)v148 - 6);
          uint64_t v150 = *((unsigned int *)v148 - 5);
          uint64_t v151 = *((unsigned int *)v148 - 4);
          uint64_t v152 = *v148;
          uint64_t v208 = *(v148 - 1);
          uint64_t v153 = v148[2];
          uint64_t v203 = v148[1];
          if (v218)
          {
            uint64_t v154 = *(os_unfair_lock_s **)(v153 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v154);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v153 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v223);
          sub_1B6BAAC94(v188, (uint64_t)v289, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v155 = v146[4];
          uint64_t v156 = *(void *)(*(void *)(*(void *)(*(void *)(v153 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v146[6] = ecs_stack_allocator_allocate(v155, 48 * v156, 8);
          v146[7] = v156;
          v183[1] = 0;
          v183[2] = 0;
          *uint64_t v183 = 0;
          swift_release();
          v255[0] = v193;
          v255[1] = v153;
          v255[2] = v146;
          v255[3] = v151;
          v255[4] = (v150 - v149 + v151);
          v255[5] = v198;
          v255[6] = v149;
          v255[7] = v150;
          v255[8] = 0;
          v255[9] = 0;
          LOBYTE(v255[10]) = 1;
          v255[11] = v208;
          v255[12] = v152;
          v255[13] = v203;
          uint64_t v157 = sub_1B6388ED8(v146[3]);
          uint64_t v158 = v320;
          if (v157)
          {
            uint64_t v159 = (void *)v157;
            sub_1B6BAAC94(*v225 + 3248, (uint64_t)v264, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            sub_1B6BAAC94((uint64_t)v264, (uint64_t)v265, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
            memcpy(v290, v265, sizeof(v290));
            swift_unknownObjectRetain();
            sub_1B6BAAD60(v264, sub_1B6BAAF1C);
            unint64_t v160 = sub_1B638A310((uint64_t)v290, 0);
            unint64_t v162 = v160;
            uint64_t v163 = v161;
            if (v160 >= 3)
            {
              unint64_t v164 = swift_unknownObjectRetain();
              sub_1B630B7D8(v164, v163);
              sub_1B6BAAD60(v264, sub_1B630BB08);
              objc_msgSend(v159, sel_setCullMode_, 2);
              objc_msgSend(v159, sel_setDepthStencilState_, *(void *)(*(void *)(v226 + 248) + 168));
              objc_msgSend(v159, sel_setRenderPipelineState_, v162);
              sub_1B6BA7494(v226, v224, (uint64_t)v159, v255);
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1B630B7D8(v160, v161);
              sub_1B6BAAD60(v264, sub_1B630BB08);
            }
            swift_unknownObjectRelease();
            uint64_t v158 = v320;
          }
          sub_1B6345178(v146, (unsigned __int16 **)v287, (uint64_t)v289);
          uint64_t v3 = v158;
          if (*(void *)(v146[13] + 16))
          {
            uint64_t v165 = swift_bridgeObjectRetain();
            sub_1B639147C(v165, v153);
            swift_bridgeObjectRelease();
            char v166 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v167 = v146[13];
            if (v166)
            {
              sub_1B6399BB8(0, *(void *)(v167 + 16));
            }
            else
            {
              uint64_t v168 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v167 + 24) >= 2uLL)
              {
                sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                uint64_t v168 = (void *)swift_allocObject();
                size_t v169 = j__malloc_size(v168);
                v168[2] = 0;
                v168[3] = 2 * ((uint64_t)(v169 - 32) / 72);
              }
              *uint64_t v178 = v168;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v146[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              id v170 = *(char **)(v153 + 232);
              id v171 = *(char **)(v153 + 256);
              if (v170 == v171)
              {
                uint64_t v172 = *(char **)(v153 + 240);
              }
              else
              {
                sub_1B666018C(v171, v170);
                id v171 = *(char **)(v153 + 232);
                uint64_t v172 = *(char **)(v153 + 240);
                if (v172 == v171)
                {
                  uint64_t v172 = 0;
                  id v171 = 0;
                  *(void *)(v153 + 232) = 0;
                  *(void *)(v153 + 240) = 0;
                }
              }
              *(void *)(v153 + 248) = v172;
              *(void *)(v153 + 256) = v171;
            }
          }
          ecs_stack_allocator_pop_snapshot(v223);
          if (v218)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v153 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v153 + 376));
          }
          swift_release();
          v148 += 6;
          uint64_t v145 = v213 - 1;
        }
        while (v213 != 1);
        sub_1B632F170(__src);
      }
    }
    return sub_1B632F170(__src);
  }
  return result;
}

uint64_t type metadata accessor for VectorRenderSystem()
{
  return self;
}

ValueMetadata *type metadata accessor for Shadow2D()
{
  return &type metadata for Shadow2D;
}

ValueMetadata *type metadata accessor for StrokeWidth()
{
  return &type metadata for StrokeWidth;
}

ValueMetadata *type metadata accessor for StrokeColor()
{
  return &type metadata for StrokeColor;
}

ValueMetadata *type metadata accessor for RoundedRectShape()
{
  return &type metadata for RoundedRectShape;
}

ValueMetadata *type metadata accessor for DiscShape()
{
  return &type metadata for DiscShape;
}

ValueMetadata *type metadata accessor for Rect2D()
{
  return &type metadata for Rect2D;
}

uint64_t sub_1B6BAA59C()
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_1EB997A18;
  int v49 = 0;
  char v50 = 2;
  uint64_t v51 = 0;
  char v52 = 2;
  uint64_t v53 = 0;
  swift_retain();
  sub_1B663C458((uint64_t)v10);
  swift_release();
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E85730;
  *(void *)(inited + 32) = &type metadata for RoundedRectShape;
  *(void *)(inited + 40) = &off_1F0F6F2B8;
  *(void *)(inited + 48) = &type metadata for DiscShape;
  *(void *)(inited + 56) = &off_1F0FA8568;
  *(void *)(inited + 64) = &type metadata for StrokeColor;
  *(void *)(inited + 72) = &off_1F0F587C8;
  *(void *)(inited + 80) = &type metadata for StrokeWidth;
  *(void *)(inited + 88) = &off_1F0F58930;
  sub_1B62AD184(v11);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v10);
  long long v2 = v11[1];
  *(_OWORD *)(v0 + 16) = v11[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v12;
  uint64_t v42 = qword_1EB997A18;
  int v43 = 0;
  char v44 = 2;
  uint64_t v45 = 0;
  char v46 = 2;
  uint64_t v47 = 0;
  swift_retain();
  sub_1B67A6C70((uint64_t)v13);
  swift_release();
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77D10;
  *(void *)(v3 + 32) = &type metadata for RoundedRectShape;
  *(void *)(v3 + 40) = &off_1F0F6F2B8;
  *(void *)(v3 + 48) = &type metadata for StrokeColor;
  *(void *)(v3 + 56) = &off_1F0F587C8;
  *(void *)(v3 + 64) = &type metadata for StrokeWidth;
  *(void *)(v3 + 72) = &off_1F0F58930;
  sub_1B62AD184(v14);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v13);
  *(_OWORD *)(v0 + 56) = v14[0];
  *(_OWORD *)(v0 + 72) = v14[1];
  *(void *)(v0 + 88) = v15;
  uint64_t v36 = qword_1EB997A18;
  int v37 = 0;
  char v38 = 2;
  uint64_t v39 = 0;
  char v40 = 2;
  uint64_t v41 = 0;
  swift_retain();
  sub_1B67A6EA8((uint64_t)v16);
  swift_release();
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E76B30;
  *(void *)(v4 + 32) = &type metadata for StrokeColor;
  *(void *)(v4 + 40) = &off_1F0F587C8;
  *(void *)(v4 + 48) = &type metadata for StrokeWidth;
  *(void *)(v4 + 56) = &off_1F0F58930;
  sub_1B62AD184(v17);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v16);
  long long v5 = v17[1];
  *(_OWORD *)(v0 + 96) = v17[0];
  *(_OWORD *)(v0 + 112) = v5;
  *(void *)(v0 + 128) = v18;
  uint64_t v30 = qword_1EB997A18;
  int v31 = 0;
  char v32 = 2;
  uint64_t v33 = 0;
  char v34 = 2;
  uint64_t v35 = 0;
  swift_retain();
  sub_1B6BA78EC((uint64_t)v19);
  swift_release();
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = &type metadata for Shadow2D;
  *(void *)(v6 + 40) = &off_1F0FA7648;
  sub_1B62AD184(v20);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v19);
  long long v7 = v20[1];
  *(_OWORD *)(v0 + 136) = v20[0];
  *(_OWORD *)(v0 + 152) = v7;
  *(void *)(v0 + 168) = v21;
  uint64_t v24 = qword_1EB997A18;
  int v25 = 0;
  char v26 = 2;
  uint64_t v27 = 0;
  char v28 = 2;
  uint64_t v29 = 0;
  swift_retain();
  sub_1B6BA7B38((uint64_t)v22);
  swift_release();
  long long v8 = v22[1];
  *(_OWORD *)(v0 + 176) = v22[0];
  *(_OWORD *)(v0 + 192) = v8;
  *(void *)(v0 + 208) = v23;
  return v0;
}

uint64_t sub_1B6BAA964()
{
  uint64_t v0 = swift_allocObject();
  sub_1B6BAA59C();
  return v0;
}

const char *sub_1B6BAA99C()
{
  return "Vector Render";
}

uint64_t sub_1B6BAA9B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VectorRenderSystemRenderPipelineStates();
  uint64_t v3 = *(void **)(a1 + 176);
  swift_retain();
  sub_1B636E270(v2, (uint64_t)&off_1F0F517B8, v3);

  return swift_release();
}

uint64_t sub_1B6BAAA20()
{
  type metadata accessor for VectorRenderSystemRenderPipelineStates();
  uint64_t v0 = swift_allocObject();
  sub_1B6BAAB20(v2);
  sub_1B6BAAC94((uint64_t)v2, v0 + 16, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAC94((uint64_t)v2, v0 + 824, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAC94((uint64_t)v2, v0 + 1632, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAC94((uint64_t)v2, v0 + 2440, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAC94((uint64_t)v2, v0 + 3248, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  sub_1B6BAAC94((uint64_t)v2, v0 + 4056, &qword_1EB97F970, (uint64_t)&type metadata for RenderPipelineDescriptor);
  *(_OWORD *)(v0 + 4864) = 0u;
  *(_OWORD *)(v0 + 4880) = 0u;
  *(_OWORD *)(v0 + 4896) = 0u;
  *(_OWORD *)(v0 + 4912) = 0u;
  *(_OWORD *)(v0 + 4928) = 0u;
  *(void *)(v0 + 4944) = 1;
  return v0;
}

void sub_1B6BAAB20(_OWORD *a1)
{
  *a1 = xmmword_1B6E4F270;
  bzero(a1 + 1, 0x318uLL);
}

uint64_t sub_1B6BAAB34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74657366666FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t *sub_1B6BAAC74(uint64_t a1)
{
  return sub_1B6BA7F50(a1, *(void *)(v1 + 16));
}

uint64_t sub_1B6BAAC94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6BAAD14(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6BAAD14(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

#error "1B6BAAEF4: call analysis failed (funcsize=111)"

uint64_t sub_1B6BAAF1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2 != 1)
  {
    sub_1B6312ABC(result, a2);
    sub_1B6312ABC(a6, a7);
    sub_1B6312ABC(a11, a12);
    sub_1B6312ABC(a16, a17);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1B6BAB040(void *a1)
{
  sub_1B6BAC260(0, &qword_1E9DD69A0, (uint64_t (*)(void))sub_1B6BAC20C, (uint64_t)&type metadata for Velocity2D.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BAC20C();
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
    sub_1B6BAC260(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    sub_1B6BAB7FC((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v10);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    double v2 = *(double *)&v12[1];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B6BAB274(void *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(void))
{
  sub_1B6BAC260(0, a2, a3, a4, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  *(void *)&v16[0] = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)v16 - v11;
  sub_1B62C14BC(a1, a1[3]);
  a5();
  sub_1B6E33A48();
  if (!v5)
  {
    uint64_t v13 = *(void *)&v16[0];
    long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
    sub_1B6BAC260(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    sub_1B6BAB7FC((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v14);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v9);
    v16[0] = v16[1];
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

double sub_1B6BAB48C(void *a1)
{
  sub_1B6BAC260(0, &qword_1E9DD6860, (uint64_t (*)(void))sub_1B6BAB7A8, (uint64_t)&type metadata for Shadow2D.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BAB7A8();
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
    sub_1B6BAC260(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    char v15 = 0;
    sub_1B6BAB7FC((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v10);
    sub_1B6E32DF8();
    double v2 = *(double *)&v14;
    LOBYTE(v14) = 1;
    sub_1B6E32DC8();
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
    sub_1B6BAC260(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    char v15 = 2;
    sub_1B6BAB7FC((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v11);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    long long v13 = v14;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B6BAB7A8()
{
  unint64_t result = qword_1E9DD6868;
  if (!qword_1E9DD6868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6868);
  }
  return result;
}

uint64_t sub_1B6BAB7FC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6BAC260(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6BAB860()
{
  unint64_t result = qword_1E9DD6880;
  if (!qword_1E9DD6880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6880);
  }
  return result;
}

unint64_t sub_1B6BAB8B4()
{
  unint64_t result = qword_1E9DD6898;
  if (!qword_1E9DD6898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6898);
  }
  return result;
}

unint64_t sub_1B6BAB908()
{
  unint64_t result = qword_1E9DD68B0;
  if (!qword_1E9DD68B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD68B0);
  }
  return result;
}

unint64_t sub_1B6BAB95C()
{
  unint64_t result = qword_1E9DD68C8;
  if (!qword_1E9DD68C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD68C8);
  }
  return result;
}

unint64_t sub_1B6BAB9B0()
{
  unint64_t result = qword_1E9DD68D8;
  if (!qword_1E9DD68D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD68D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HZOrder()
{
  return &type metadata for HZOrder;
}

ValueMetadata *type metadata accessor for ZOrder()
{
  return &type metadata for ZOrder;
}

ValueMetadata *type metadata accessor for Velocity2D()
{
  return &type metadata for Velocity2D;
}

ValueMetadata *type metadata accessor for Rect2D.CodingKeys()
{
  return &type metadata for Rect2D.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscShape.CodingKeys()
{
  return &type metadata for DiscShape.CodingKeys;
}

ValueMetadata *type metadata accessor for RoundedRectShape.CodingKeys()
{
  return &type metadata for RoundedRectShape.CodingKeys;
}

ValueMetadata *type metadata accessor for StrokeColor.CodingKeys()
{
  return &type metadata for StrokeColor.CodingKeys;
}

ValueMetadata *type metadata accessor for StrokeWidth.CodingKeys()
{
  return &type metadata for StrokeWidth.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Shadow2D.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BABB54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Shadow2D.CodingKeys()
{
  return &type metadata for Shadow2D.CodingKeys;
}

unint64_t sub_1B6BABB90()
{
  unint64_t result = qword_1E9DD68E8;
  if (!qword_1E9DD68E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD68E8);
  }
  return result;
}

unint64_t sub_1B6BABBE8()
{
  unint64_t result = qword_1E9DD68F0;
  if (!qword_1E9DD68F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD68F0);
  }
  return result;
}

unint64_t sub_1B6BABC40()
{
  unint64_t result = qword_1E9DD68F8;
  if (!qword_1E9DD68F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD68F8);
  }
  return result;
}

unint64_t sub_1B6BABC98()
{
  unint64_t result = qword_1E9DD6900;
  if (!qword_1E9DD6900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6900);
  }
  return result;
}

unint64_t sub_1B6BABCF0()
{
  unint64_t result = qword_1E9DD6908;
  if (!qword_1E9DD6908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6908);
  }
  return result;
}

unint64_t sub_1B6BABD48()
{
  unint64_t result = qword_1E9DD6910;
  if (!qword_1E9DD6910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6910);
  }
  return result;
}

unint64_t sub_1B6BABDA0()
{
  unint64_t result = qword_1E9DD6918;
  if (!qword_1E9DD6918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6918);
  }
  return result;
}

unint64_t sub_1B6BABDF8()
{
  unint64_t result = qword_1E9DD6920;
  if (!qword_1E9DD6920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6920);
  }
  return result;
}

unint64_t sub_1B6BABE50()
{
  unint64_t result = qword_1E9DD6928;
  if (!qword_1E9DD6928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6928);
  }
  return result;
}

unint64_t sub_1B6BABEA8()
{
  unint64_t result = qword_1E9DD6930;
  if (!qword_1E9DD6930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6930);
  }
  return result;
}

unint64_t sub_1B6BABF00()
{
  unint64_t result = qword_1E9DD6938;
  if (!qword_1E9DD6938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6938);
  }
  return result;
}

unint64_t sub_1B6BABF58()
{
  unint64_t result = qword_1E9DD6940;
  if (!qword_1E9DD6940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6940);
  }
  return result;
}

unint64_t sub_1B6BABFB0()
{
  unint64_t result = qword_1E9DD6948;
  if (!qword_1E9DD6948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6948);
  }
  return result;
}

unint64_t sub_1B6BAC008()
{
  unint64_t result = qword_1E9DD6950;
  if (!qword_1E9DD6950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6950);
  }
  return result;
}

unint64_t sub_1B6BAC060()
{
  unint64_t result = qword_1E9DD6958;
  if (!qword_1E9DD6958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6958);
  }
  return result;
}

unint64_t sub_1B6BAC0B8()
{
  unint64_t result = qword_1E9DD6960;
  if (!qword_1E9DD6960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6960);
  }
  return result;
}

unint64_t sub_1B6BAC110()
{
  unint64_t result = qword_1E9DD6968;
  if (!qword_1E9DD6968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6968);
  }
  return result;
}

unint64_t sub_1B6BAC164()
{
  unint64_t result = qword_1E9DD6978;
  if (!qword_1E9DD6978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6978);
  }
  return result;
}

unint64_t sub_1B6BAC1B8()
{
  unint64_t result = qword_1E9DD6990;
  if (!qword_1E9DD6990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6990);
  }
  return result;
}

unint64_t sub_1B6BAC20C()
{
  unint64_t result = qword_1E9DD69A8;
  if (!qword_1E9DD69A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69A8);
  }
  return result;
}

void sub_1B6BAC260(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

ValueMetadata *type metadata accessor for Velocity2D.CodingKeys()
{
  return &type metadata for Velocity2D.CodingKeys;
}

ValueMetadata *type metadata accessor for ZOrder.CodingKeys()
{
  return &type metadata for ZOrder.CodingKeys;
}

unsigned char *_s3VFX6Rect2DV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6BAC384);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HZOrder.CodingKeys()
{
  return &type metadata for HZOrder.CodingKeys;
}

unint64_t sub_1B6BAC3C0()
{
  unint64_t result = qword_1E9DD69B8;
  if (!qword_1E9DD69B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69B8);
  }
  return result;
}

unint64_t sub_1B6BAC418()
{
  unint64_t result = qword_1E9DD69C0;
  if (!qword_1E9DD69C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69C0);
  }
  return result;
}

unint64_t sub_1B6BAC470()
{
  unint64_t result = qword_1E9DD69C8;
  if (!qword_1E9DD69C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69C8);
  }
  return result;
}

unint64_t sub_1B6BAC4C8()
{
  unint64_t result = qword_1E9DD69D0;
  if (!qword_1E9DD69D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69D0);
  }
  return result;
}

unint64_t sub_1B6BAC520()
{
  unint64_t result = qword_1E9DD69D8;
  if (!qword_1E9DD69D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69D8);
  }
  return result;
}

unint64_t sub_1B6BAC578()
{
  unint64_t result = qword_1E9DD69E0;
  if (!qword_1E9DD69E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69E0);
  }
  return result;
}

unint64_t sub_1B6BAC5D0()
{
  unint64_t result = qword_1E9DD69E8;
  if (!qword_1E9DD69E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69E8);
  }
  return result;
}

unint64_t sub_1B6BAC628()
{
  unint64_t result = qword_1E9DD69F0;
  if (!qword_1E9DD69F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69F0);
  }
  return result;
}

unint64_t sub_1B6BAC680()
{
  unint64_t result = qword_1E9DD69F8;
  if (!qword_1E9DD69F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD69F8);
  }
  return result;
}

uint64_t sub_1B6BAC6D4@<X0>(uint64_t a1@<X8>)
{
  v3[0] = 0xD000000000000013;
  v3[1] = 0x80000001B6F4BC50;
  v3[2] = 0;
  v3[3] = 0;
  void v3[4] = MEMORY[0x1E4FBC860];
  v3[5] = 0xD000000000000013;
  v3[6] = 0x80000001B6F4BC70;
  v3[7] = 0;
  v3[8] = 0;
  v3[9] = MEMORY[0x1E4FBC860];
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  nullsub_1(v3);
  return sub_1B62CA210((uint64_t)v3, a1, &qword_1EB97EB68);
}

uint64_t sub_1B6BAC774(void *a1)
{
  sub_1B6BACC40(0, &qword_1E9DD6A10, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)&v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BACBEC();
  sub_1B6E33A88();
  char v12 = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    char v11 = 1;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B6BAC8F0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BACBEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BAC92C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BACBEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BAC968()
{
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v0 = sub_1B62FFCAC(4);
  *(void *)(v0 + 88) = sub_1B6BAC6D4;
  *(void *)(v0 + 96) = 0;
  swift_release();
  return v0;
}

void sub_1B6BAC9C8(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B6BACA30(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B6BAC9F4(void *a1)
{
  return sub_1B6BAC774(a1);
}

double sub_1B6BACA10@<D0>(void *a1@<X8>)
{
  double result = 0.0000305175854;
  *a1 = 0x3F0000003FC00000;
  return result;
}

ValueMetadata *type metadata accessor for ParticleAOBoxRenderer()
{
  return &type metadata for ParticleAOBoxRenderer;
}

float sub_1B6BACA30(void *a1)
{
  sub_1B6BACC40(0, &qword_1E9DD6A00, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  long long v9 = &v12[-v8];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BACBEC();
  sub_1B6E33A48();
  if (!v1)
  {
    v12[15] = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    v12[14] = 1;
    sub_1B6E32DC8();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B6BACBEC()
{
  unint64_t result = qword_1E9DD6A08;
  if (!qword_1E9DD6A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A08);
  }
  return result;
}

void sub_1B6BACC40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6BACBEC();
    unint64_t v7 = a3(a1, &type metadata for ParticleAOBoxRenderer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleAOBoxRenderer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BACD70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleAOBoxRenderer.CodingKeys()
{
  return &type metadata for ParticleAOBoxRenderer.CodingKeys;
}

unint64_t sub_1B6BACDAC()
{
  unint64_t result = qword_1E9DD6A18;
  if (!qword_1E9DD6A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A18);
  }
  return result;
}

unint64_t sub_1B6BACE04()
{
  unint64_t result = qword_1E9DD6A20;
  if (!qword_1E9DD6A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A20);
  }
  return result;
}

unint64_t sub_1B6BACE5C()
{
  unint64_t result = qword_1E9DD6A28;
  if (!qword_1E9DD6A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A28);
  }
  return result;
}

uint64_t sub_1B6BACEB0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656D61;
  uint64_t v3 = 0x4E7463656A6F7250;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4E7463656A6F7250;
  unint64_t v6 = 0xEB00000000656D61;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1145656661;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6E6F6973726556;
      break;
    case 3:
      uint64_t v5 = 0x74726F7078457349;
      unint64_t v6 = 0xEA00000000006465;
      break;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x325846567349;
      break;
    case 5:
      uint64_t v5 = 0x486E6F6973726556;
      unint64_t v6 = 0xEE0079726F747369;
      break;
    case 6:
      uint64_t v5 = 0x6C6946656E656353;
      unint64_t v6 = 0xED0000656D616E65;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1145656661) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x6E6F6973726556) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xEA00000000006465;
      if (v5 != 0x74726F7078457349) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x325846567349) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v3 = 0x486E6F6973726556;
      unint64_t v2 = 0xEE0079726F747369;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xED0000656D616E65;
      if (v5 != 0x6C6946656E656353) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAD12C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E61696461727269;
  }
  else {
    uint64_t v3 = 0x65636E6169646172;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006563;
  }
  if (a2) {
    uint64_t v5 = 0x6E61696461727269;
  }
  else {
    uint64_t v5 = 0x65636E6169646172;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006563;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAD1D8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1702521203;
    }
    else {
      uint64_t v3 = 0x656469727473;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1702521203;
      }
      else {
        uint64_t v6 = 0x656469727473;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x74657366666FLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x74657366666FLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BAD2D4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000079;
  uint64_t v3 = 0x7469736E65746E69;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7469736E65746E69;
  unint64_t v6 = 0xE900000000000079;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000001B6F2E000;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x7261654E7ALL;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1918977658;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001B6F2E000;
      if (v5 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7261654E7ALL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1918977658) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAD45C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7469736E65746E69;
  unint64_t v3 = 0xE900000000000079;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7469736E65746E69;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x617265744978616DLL;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 2:
      unint64_t v5 = 0x6C6F687365726874;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v3 = 0x80000001B6F2E040;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 4:
      unint64_t v5 = 0x6C6946726F6C6F63;
      unint64_t v3 = 0xEB00000000726574;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x74736172746E6F63;
      break;
    case 6:
      unint64_t v5 = 0x6974617275746173;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    case 7:
      unint64_t v5 = 0x5168676948657375;
      unint64_t v3 = 0xEE007974696C6175;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE900000000000079;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 == 0x617265744978616DLL) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x6C6F687365726874) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0x80000001B6F2E040;
      if (v5 != 0xD000000000000013) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEB00000000726574;
      if (v5 != 0x6C6946726F6C6F63) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x74736172746E6F63) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x6974617275746173;
      unint64_t v6 = 0xEA00000000006E6FLL;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEE007974696C6175;
      if (v5 != 0x5168676948657375) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAD740(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E656E6F706D6F63;
    }
    else {
      uint64_t v3 = 0x657669746361;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA00000000007374;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E656E6F706D6F63;
      }
      else {
        uint64_t v6 = 0x657669746361;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA00000000007374;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x7865646E69;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x7865646E69)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BAD854(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080931;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701080931;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xED000073656D614ELL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x65676175676E616CLL;
      break;
    case 3:
      uint64_t v5 = 0x6574656D61726170;
      unint64_t v3 = 0xEA00000000007372;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6567617473;
      break;
    case 5:
      uint64_t v5 = 0x5668706172477369;
      unint64_t v3 = 0xE900000000000032;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED000073656D614ELL;
      if (v5 == 0x6E6F6974636E7566) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65676175676E616CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xEA00000000007372;
      if (v5 != 0x6574656D61726170) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6567617473;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE900000000000032;
      if (v5 != 0x5668706172477369) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BADA70(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001B6F2E350;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000036;
    }
    else {
      unint64_t v5 = 0xD000000000000021;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001B6F2E370;
    }
    else {
      unint64_t v6 = 0x80000001B6F2E3B0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000010;
  unint64_t v6 = 0x80000001B6F2E350;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000036;
    }
    else {
      unint64_t v2 = 0xD000000000000021;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x80000001B6F2E370;
    }
    else {
      unint64_t v3 = 0x80000001B6F2E3B0;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BADB70(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E6F6974636E7566;
    }
    else {
      uint64_t v3 = 0x746E6174736E6F63;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xEF7365756C61765FLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E6F6974636E7566;
      }
      else {
        uint64_t v6 = 0x746E6174736E6F63;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xEF7365756C61765FLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x6C6562616CLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x6C6562616CLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BADC9C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v4 = 0x80000001B6F2E3E0;
  }
  else {
    unint64_t v4 = 0x80000001B6F2E400;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F2E400;
  }
  else {
    unint64_t v6 = 0x80000001B6F2E3E0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BADD48(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000073;
  unint64_t v3 = 0x656972617262696CLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x656E696C65706970;
    }
    else {
      unint64_t v5 = 0xD000000000000010;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000073;
    }
    else {
      unint64_t v6 = 0x80000001B6F2E430;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  else
  {
    unint64_t v5 = 0x656972617262696CLL;
    unint64_t v6 = 0xE900000000000073;
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  if (v7 == 1) {
    unint64_t v3 = 0x656E696C65706970;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v7 != 1) {
    unint64_t v2 = 0x80000001B6F2E430;
  }
LABEL_14:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BADE5C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000015;
  }
  else {
    unint64_t v3 = 0x7368746170;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0x80000001B6F2E450;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000015;
  }
  else {
    unint64_t v5 = 0x7368746170;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F2E450;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BADF04(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x657079745F6469;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x657079745F6469;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 25705;
      break;
    case 2:
      uint64_t v5 = 0x79745F65756C6176;
      unint64_t v3 = 0xEA00000000006570;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x65756C6176;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 25705) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x79745F65756C6176;
      unint64_t v6 = 0xEA00000000006570;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x65756C6176) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAE07C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1752457584;
  }
  else {
    uint64_t v3 = 0x6C6562616CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1752457584;
  }
  else {
    uint64_t v5 = 0x6C6562616CLL;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAE118(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x647574696C706D61;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x636E657571657266;
    }
    else {
      uint64_t v5 = 0x6968536573616870;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000079;
    }
    else {
      unint64_t v6 = 0xEA00000000007466;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x647574696C706D61;
  unint64_t v6 = 0xE900000000000065;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x636E657571657266;
    }
    else {
      uint64_t v3 = 0x6968536573616870;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE900000000000079;
    }
    else {
      unint64_t v2 = 0xEA00000000007466;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BAE23C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7055646C726F77;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7055646C726F77;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "worldOrbitTarget";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v3 = 0x80000001B6F4C0D0;
      break;
    case 3:
      unint64_t v6 = "dollySensitivity";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x69736E65536E6170;
      unint64_t v3 = 0xEE00797469766974;
      break;
    case 5:
      unint64_t v5 = 0x6C754D7466696873;
      unint64_t v3 = 0xEF7265696C706974;
      break;
    case 6:
      unint64_t v5 = 0x636F6C6556796C66;
      unint64_t v3 = 0xEB00000000797469;
      break;
    case 7:
      unint64_t v5 = 0x6E6F697461746F72;
      unint64_t v3 = 0xEC00000065646F4DLL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      char v8 = "worldOrbitTarget";
      goto LABEL_15;
    case 2:
      unint64_t v7 = 0x80000001B6F4C0D0;
      if (v5 != 0xD000000000000013) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 3:
      char v8 = "dollySensitivity";
LABEL_15:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000010) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      unint64_t v7 = 0xEE00797469766974;
      if (v5 != 0x69736E65536E6170) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 5:
      unint64_t v7 = 0xEF7265696C706974;
      if (v5 != 0x6C754D7466696873) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      uint64_t v2 = 0x636F6C6556796C66;
      unint64_t v7 = 0xEB00000000797469;
      goto LABEL_22;
    case 7:
      unint64_t v7 = 0xEC00000065646F4DLL;
      if (v5 != 0x6E6F697461746F72) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_26;
      }
LABEL_23:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_26:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BAE510(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0x65756C6176;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0x80000001B6F339F0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0x65756C6176;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F339F0;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAE5B8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1936291937;
  }
  else {
    uint64_t v3 = 0x656C676E61;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1936291937;
  }
  else {
    uint64_t v5 = 0x656C676E61;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAE654(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080931;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701080931;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001B6F2E5A0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xED000073656D614ELL;
      break;
    case 3:
      unint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xEC000000656D614ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001B6F2E5A0;
      if (v5 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6E6F6974636E7566;
      unint64_t v6 = 0xED000073656D614ELL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEC000000656D614ELL;
      if (v5 == 0x6E6F6974636E7566) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAE808(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701667182;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701667182;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x756F437475706E69;
      unint64_t v3 = 0xEA0000000000746ELL;
      break;
    case 2:
      uint64_t v5 = 0x6F4374757074756FLL;
      uint64_t v6 = 7630453;
      goto LABEL_6;
    case 3:
      uint64_t v5 = 0x6D614E7475706E69;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 4:
      uint64_t v5 = 0x614E74757074756FLL;
      uint64_t v6 = 7562605;
LABEL_6:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEA0000000000746ELL;
      if (v5 == 0x756F437475706E69) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 2:
      uint64_t v8 = 0x6F4374757074756FLL;
      uint64_t v9 = 7630453;
      goto LABEL_15;
    case 3:
      uint64_t v2 = 0x6D614E7475706E69;
      unint64_t v7 = 0xEA00000000007365;
      goto LABEL_12;
    case 4:
      uint64_t v8 = 0x614E74757074756FLL;
      uint64_t v9 = 7562605;
LABEL_15:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 == v8) {
        goto LABEL_16;
      }
      goto LABEL_18;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_18;
      }
LABEL_16:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_18:
      }
        char v10 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_1B6BAE9F0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7475626972747461;
  }
  else {
    uint64_t v3 = 0x73726566667562;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000007365;
  }
  if (a2) {
    uint64_t v5 = 0x7475626972747461;
  }
  else {
    uint64_t v5 = 0x73726566667562;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007365;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAEA9C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65727574706163;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65727574706163;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7461746E6569726FLL;
      unint64_t v3 = 0xEF65646F4D6E6F69;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6465726F7272696DLL;
      break;
    case 3:
      uint64_t v5 = 0x696669746E656469;
      unint64_t v3 = 0xEA00000000007265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEF65646F4D6E6F69;
      if (v5 == 0x7461746E6569726FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6465726F7272696DLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEA00000000007265;
      if (v5 == 0x696669746E656469) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAEC4C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6D726F6665766177;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6D726F6665766177;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6D75727463657073;
      break;
    case 2:
      uint64_t v5 = 0x6D75727463657073;
      unint64_t v3 = 0xEE00736552776F4CLL;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7564658;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6D75727463657073) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6D75727463657073;
      unint64_t v6 = 0xEE00736552776F4CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7564658) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAEDDC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6D726F6665766177;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6D726F6665766177;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x647574696E67616DLL;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 2:
      unint64_t v3 = 0x80000001B6F2E620;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v5 = 7564658;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007365;
      if (v5 == 0x647574696E67616DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001B6F2E620;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7564658) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAEF6C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE90000000000006ELL;
  uint64_t v3 = 0x49746E65676E6174;
  uint64_t v4 = a1;
  uint64_t v5 = 0x49746E65676E6174;
  unint64_t v6 = 0xE90000000000006ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4F746E65676E6174;
      unint64_t v6 = 0xEA00000000007475;
      break;
    case 2:
      uint64_t v5 = 0x73746E65676E6174;
      unint64_t v6 = 0xEE0064656B6E694CLL;
      break;
    case 3:
      uint64_t v5 = 0x6C6F707265746E69;
      unint64_t v6 = 0xED00006E6F697461;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007475;
      if (v5 == 0x4F746E65676E6174) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x73746E65676E6174;
      unint64_t v2 = 0xEE0064656B6E694CLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xED00006E6F697461;
      if (v5 == 0x6C6F707265746E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAF13C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 1701080931;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701080931;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xED000073656D614ELL;
      break;
    case 2:
      unint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xEC000000656D614ELL;
      break;
    case 3:
      unint64_t v3 = 0x80000001B6F2E5A0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x65676175676E616CLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED000073656D614ELL;
      if (v5 == 0x6E6F6974636E7566) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEC000000656D614ELL;
      if (v5 != 0x6E6F6974636E7566) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x80000001B6F2E5A0;
      unint64_t v2 = 0xD000000000000011;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65676175676E616CLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAF328(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6874615065646F6ELL;
  }
  else {
    uint64_t v3 = 0x7465737361;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6874615065646F6ELL;
  }
  else {
    uint64_t v5 = 0x7465737361;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAF3CC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0x6C65646F6DLL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0x80000001B6F2E650;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0x6C65646F6DLL;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F2E650;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAF474(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6F6465626C61;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F6465626C61;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6576697373696D65;
      break;
    case 2:
      uint64_t v6 = 0x6E6867756F72;
      goto LABEL_5;
    case 3:
      uint64_t v6 = 0x6E6C6174656DLL;
LABEL_5:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x7365000000000000;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 4:
      uint64_t v5 = 0x6F6973756C63636FLL;
      unint64_t v3 = 0xE90000000000006ELL;
      break;
    case 5:
      uint64_t v5 = 0x6C616D726F6ELL;
      break;
    case 6:
      unint64_t v3 = 0x80000001B6F4C090;
      uint64_t v5 = 0xD00000000000001ALL;
      break;
    case 7:
      uint64_t v5 = 0x656C62756F447369;
      unint64_t v3 = 0xED00006465646953;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      if (v5 == 0x6576697373696D65) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 2:
      uint64_t v8 = 0x6E6867756F72;
      goto LABEL_15;
    case 3:
      uint64_t v8 = 0x6E6C6174656DLL;
LABEL_15:
      unint64_t v7 = 0xE900000000000073;
      if (v5 != (v8 & 0xFFFFFFFFFFFFLL | 0x7365000000000000)) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      unint64_t v7 = 0xE90000000000006ELL;
      if (v5 != 0x6F6973756C63636FLL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 5:
      if (v5 != 0x6C616D726F6ELL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      unint64_t v7 = 0x80000001B6F4C090;
      unint64_t v2 = 0xD00000000000001ALL;
      goto LABEL_22;
    case 7:
      unint64_t v7 = 0xED00006465646953;
      if (v5 != 0x656C62756F447369) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_26;
      }
LABEL_23:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_26:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BAF708(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6563617073;
  }
  else {
    uint64_t v2 = 0x6563726F66;
  }
  if (a2) {
    uint64_t v3 = 0x6563617073;
  }
  else {
    uint64_t v3 = 0x6563726F66;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B6BAF780(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C616373;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656C616373;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1935763810;
      break;
    case 2:
      uint64_t v5 = 0x7469736E65746E69;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 3:
      uint64_t v5 = 0x6573696F6ELL;
      break;
    case 4:
      uint64_t v5 = 0x657A6974726F6D61;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 5:
      uint64_t v5 = 0x6F69736E656D6964;
      unint64_t v3 = 0xEA0000000000736ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1935763810) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE900000000000079;
      if (v5 != 0x7469736E65746E69) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x6573696F6ELL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x657A6974726F6D61;
      unint64_t v6 = 0xE900000000000064;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA0000000000736ELL;
      if (v5 != 0x6F69736E656D6964) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAF984(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000079;
  unint64_t v3 = 0x7469736E65746E69;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x73746E65747865;
    }
    else {
      unint64_t v5 = 0xD000000000000010;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE700000000000000;
    }
    else {
      unint64_t v6 = 0x80000001B6F415E0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x7469736E65746E69;
  unint64_t v6 = 0xE900000000000079;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0x73746E65747865;
    }
    else {
      unint64_t v3 = 0xD000000000000010;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE700000000000000;
    }
    else {
      unint64_t v2 = 0x80000001B6F415E0;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BAFAA0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080931;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701080931;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xED000073656D614ELL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x65676175676E616CLL;
      break;
    case 3:
      uint64_t v5 = 0x6574656D61726170;
      unint64_t v3 = 0xEA00000000007372;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6567617473;
      break;
    case 5:
      uint64_t v5 = 0x5668706172477369;
      unint64_t v3 = 0xE900000000000032;
      break;
    case 6:
      uint64_t v5 = 0x5472656767697274;
      unint64_t v3 = 0xEB00000000657079;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED000073656D614ELL;
      if (v5 == 0x6E6F6974636E7566) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65676175676E616CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEA00000000007372;
      if (v5 != 0x6574656D61726170) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6567617473) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x5668706172477369;
      unint64_t v6 = 0xE900000000000032;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEB00000000657079;
      if (v5 != 0x5472656767697274) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BAFD0C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x75517265746C6966;
    }
    else {
      uint64_t v3 = 0x656E72654B78616DLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xED00007974696C61;
    }
    else {
      unint64_t v4 = 0xEF7375696461526CLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x75517265746C6966;
      }
      else {
        uint64_t v6 = 0x656E72654B78616DLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xED00007974696C61;
      }
      else {
        unint64_t v7 = 0xEF7375696461526CLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x737569646172;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x737569646172)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BAFE50(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73746E65746E6F63;
  }
  else {
    uint64_t v3 = 1701869940;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73746E65746E6F63;
  }
  else {
    uint64_t v5 = 1701869940;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BAFEF0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7465737361;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7465737361;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2036427888;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702131053;
      break;
    case 3:
      uint64_t v5 = 0x73706F6F6CLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 2036427888) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1702131053;
      goto LABEL_9;
    case 3:
      if (v5 == 0x73706F6F6CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB0048(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x74616D726F66;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x74616D726F66;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x615265757161706FLL;
      unint64_t v3 = 0xEB000000006F6974;
      break;
    case 2:
      unint64_t v3 = 0x80000001B6F32920;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v5 = 0x6F69736E656D6964;
      unint64_t v3 = 0xEA0000000000736ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB000000006F6974;
      if (v5 == 0x615265757161706FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001B6F32920;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEA0000000000736ELL;
      if (v5 == 0x6F69736E656D6964) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB01F0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x746867696568;
    }
    else {
      uint64_t v3 = 0x6874706564;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x746867696568;
      }
      else {
        uint64_t v6 = 0x6874706564;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x6874646977;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x6874646977)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB02F4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x696669746E656469;
  }
  else {
    uint64_t v3 = 0x7465737361;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000007265;
  }
  if (a2) {
    uint64_t v5 = 0x696669746E656469;
  }
  else {
    uint64_t v5 = 0x7465737361;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007265;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB039C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1752457584;
    }
    else {
      uint64_t v3 = 0x746E6572727563;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1752457584;
      }
      else {
        uint64_t v6 = 0x746E6572727563;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x746365726964;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x746365726964)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB04A0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x657A695361746164;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x657A695361746164;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6570795461746164;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x74657366666FLL;
      break;
    case 3:
      uint64_t v5 = 0x6E656D6E67696C61;
      unint64_t v3 = 0xE900000000000074;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6570795461746164) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x74657366666FLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000074;
      if (v5 == 0x6E656D6E67696C61) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB0628(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7865646E69;
    }
    else {
      uint64_t v3 = 1668506980;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7865646E69;
      }
      else {
        uint64_t v6 = 1668506980;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701667182;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701667182)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB071C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6570795461746164;
    }
    else {
      uint64_t v3 = 0x68747065447369;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6570795461746164;
      }
      else {
        uint64_t v6 = 0x68747065447369;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701869940;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701869940)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB0828(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x65727574786574;
  }
  else {
    uint64_t v3 = 0x726566667562;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x65727574786574;
  }
  else {
    uint64_t v5 = 0x726566667562;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB08CC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x647574696C706D61;
  unint64_t v4 = 0xE900000000000065;
  uint64_t v5 = a1;
  uint64_t v6 = 0x647574696C706D61;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x636E657571657266;
      unint64_t v4 = 0xE900000000000079;
      break;
    case 2:
      uint64_t v6 = 0x6968536573616870;
      unint64_t v4 = 0xEA00000000007466;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x61746C6564;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000079;
      if (v6 == 0x636E657571657266) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6968536573616870;
      unint64_t v2 = 0xEA00000000007466;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v6 == 0x61746C6564) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v6 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB0A64(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000072;
  uint64_t v3 = 0x65746C694667616DLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65746C694667616DLL;
  unint64_t v6 = 0xE900000000000072;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x65746C69466E696DLL;
      break;
    case 2:
      uint64_t v5 = 0x65746C694670696DLL;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x5370617277;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x5470617277;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x65746C69466E696DLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 0x65746C694670696DLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x5370617277;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x5470617277) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB0C20(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1702131053;
    }
    else {
      uint64_t v3 = 0x73706F6F6CLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1702131053;
      }
      else {
        uint64_t v6 = 0x73706F6F6CLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 2036427888;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 2036427888)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB0D14(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x756F437475706E69;
    }
    else {
      uint64_t v3 = 0x6567617373656DLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA0000000000746ELL;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x756F437475706E69;
      }
      else {
        uint64_t v6 = 0x6567617373656DLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA0000000000746ELL;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701667182;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701667182)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB0E28(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x737365636361;
    }
    else {
      unint64_t v3 = 0xD00000000000001ALL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0x80000001B6F3D7D0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x737365636361;
      }
      else {
        unint64_t v6 = 0xD00000000000001ALL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0x80000001B6F3D7D0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    unint64_t v3 = 0x6E6F697461636F6CLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x6E6F697461636F6CLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB0F3C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x65727574786574;
  }
  else {
    uint64_t v3 = 1635017060;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x65727574786574;
  }
  else {
    uint64_t v5 = 1635017060;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB0FDC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000079;
  uint64_t v3 = 0x7469736E65746E69;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7469736E65746E69;
  unint64_t v6 = 0xE900000000000079;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6870726F6D616E61;
      unint64_t v6 = 0xEA00000000006369;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x7373656E74666F73;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x737569646172;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA00000000006369;
      if (v5 == 0x6870726F6D616E61) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7373656E74666F73;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x737569646172) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB1174(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65676E61726FLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65676E61726FLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x776F6C6C6579;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6E65657267;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702194274;
      break;
    case 4:
      uint64_t v5 = 0x656C70727570;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802398064;
      break;
    case 6:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2036429415;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x776F6C6C6579) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6E65657267) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702194274) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      if (v5 != 0x656C70727570) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1802398064;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 2036429415) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB1360(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC000000736E6F69;
  unint64_t v3 = 0x7470697263736564;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x7365756C6176;
    }
    else {
      unint64_t v5 = 0xD000000000000011;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE600000000000000;
    }
    else {
      unint64_t v6 = 0x80000001B6F2E700;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x7470697263736564;
  unint64_t v6 = 0xEC000000736E6F69;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0x7365756C6176;
    }
    else {
      unint64_t v3 = 0xD000000000000011;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE600000000000000;
    }
    else {
      unint64_t v2 = 0x80000001B6F2E700;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB147C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000079;
  uint64_t v3 = 0x7469736E65746E69;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7469736E65746E69;
  unint64_t v6 = 0xE900000000000079;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6152776F64616873;
      unint64_t v6 = 0xEC00000073756964;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x7261654E7ALL;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1918977658;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000073756964;
      if (v5 == 0x6152776F64616873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7261654E7ALL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1918977658) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB160C(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x7865646E69;
    }
    else {
      uint64_t v2 = 0x65756C6176;
    }
    unint64_t v3 = 0xE500000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x7865646E69;
      }
      else {
        uint64_t v5 = 0x65756C6176;
      }
      unint64_t v6 = 0xE500000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE400000000000000;
    uint64_t v2 = 1701667182;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE400000000000000;
  if (v2 != 1701667182)
  {
LABEL_15:
    char v7 = sub_1B6E334B8();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB1708(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7365756C6176;
    }
    else {
      uint64_t v3 = 0x6576727563;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7365756C6176;
      }
      else {
        uint64_t v6 = 0x6576727563;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x73656D6974;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x73656D6974)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB1810(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED00007265747469;
  uint64_t v3 = 0x6D45656372756F73;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6D45656372756F73;
  unint64_t v6 = 0xED00007265747469;
  switch(v4)
  {
    case 1:
      uint64_t v7 = 0x656372756F73;
      goto LABEL_4;
    case 2:
      uint64_t v7 = 0x746567726174;
LABEL_4:
      uint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      unint64_t v6 = 0xEA00000000006174;
      break;
    case 3:
      unint64_t v6 = 0x80000001B6F2E760;
      uint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA00000000006174;
      if (v5 == 0x6144656372756F73) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      uint64_t v3 = 0x6144746567726174;
      unint64_t v2 = 0xEA00000000006174;
      goto LABEL_10;
    case 3:
      unint64_t v2 = 0x80000001B6F2E760;
      if (v5 == 0xD000000000000011) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v3) {
        goto LABEL_15;
      }
LABEL_13:
      if (v6 == v2) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1B6BB19C4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000011;
  }
  else {
    unint64_t v3 = 0x65676E6172;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0x80000001B6F2E780;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000011;
  }
  else {
    unint64_t v5 = 0x65676E6172;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F2E780;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB1A6C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080941;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701080941;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x65676E615278;
      break;
    case 2:
      uint64_t v5 = 0x65676E615279;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x65676E61527ALL;
LABEL_5:
      unint64_t v3 = 0xE600000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x65676E615278;
      break;
    case 2:
      uint64_t v2 = 0x65676E615279;
      goto LABEL_10;
    case 3:
      uint64_t v2 = 0x65676E61527ALL;
LABEL_10:
      unint64_t v6 = 0xE600000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB1BA8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC00000079746974;
  uint64_t v3 = 0x6E45746E65726170;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E45746E65726170;
  unint64_t v6 = 0xEC00000079746974;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6C696261626F7270;
      unint64_t v6 = 0xEB00000000797469;
      break;
    case 2:
      unint64_t v5 = 0x4374697265686E69;
      uint64_t v7 = 1919904879;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0x5674697265686E69;
      unint64_t v6 = 0xEF797469636F6C65;
      break;
    case 4:
      unint64_t v6 = 0x80000001B6F2E7F0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 5:
      unint64_t v5 = 0x797469636F6C6576;
      unint64_t v6 = 0xEE00726F74636146;
      break;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1701080941;
      break;
    case 7:
      unint64_t v5 = 0x5374697265686E69;
      uint64_t v7 = 1701601635;
LABEL_9:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB00000000797469;
      if (v5 == 0x6C696261626F7270) {
        goto LABEL_25;
      }
      goto LABEL_27;
    case 2:
      uint64_t v8 = 0x4374697265686E69;
      uint64_t v9 = 1919904879;
      goto LABEL_24;
    case 3:
      unint64_t v2 = 0xEF797469636F6C65;
      if (v5 != 0x5674697265686E69) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 4:
      unint64_t v2 = 0x80000001B6F2E7F0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xEE00726F74636146;
      if (v5 != 0x797469636F6C6576) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 6:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701080941;
      goto LABEL_21;
    case 7:
      uint64_t v8 = 0x5374697265686E69;
      uint64_t v9 = 1701601635;
LABEL_24:
      unint64_t v2 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 == v8) {
        goto LABEL_25;
      }
      goto LABEL_27;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_27;
      }
LABEL_25:
      if (v6 == v2) {
        char v10 = 1;
      }
      else {
LABEL_27:
      }
        char v10 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_1B6BB1E90(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x614D6C616D726F6ELL;
    }
    else {
      unint64_t v3 = 0xD000000000000010;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000070;
    }
    else {
      unint64_t v4 = 0x80000001B6F2E840;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x614D6C616D726F6ELL;
      }
      else {
        unint64_t v6 = 0xD000000000000010;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000070;
      }
      else {
        unint64_t v7 = 0x80000001B6F2E840;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    unint64_t v3 = 0x70614D726F6C6F63;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x70614D726F6C6F63)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB1FB4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7366664F7466656CLL;
  unint64_t v3 = 0xEA00000000007465;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7366664F7466656CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x66664F7468676972;
      unint64_t v3 = 0xEB00000000746573;
      break;
    case 2:
      uint64_t v5 = 0x657366664F706F74;
      unint64_t v3 = 0xE900000000000074;
      break;
    case 3:
      uint64_t v5 = 0x664F6D6F74746F62;
      unint64_t v3 = 0xEC00000074657366;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1918985582;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7496038;
      break;
    case 6:
      uint64_t v5 = 0x7073726550657375;
      unint64_t v3 = 0xEE00657669746365;
      break;
    case 7:
      uint64_t v5 = 0x756C6F56776F6873;
      unint64_t v3 = 0xEA0000000000656DLL;
      break;
    case 8:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6172656D6163;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xEA00000000007465;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000746573;
      if (v5 == 0x66664F7468676972) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE900000000000074;
      if (v5 != 0x657366664F706F74) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xEC00000074657366;
      if (v5 != 0x664F6D6F74746F62) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1918985582) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7496038) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xEE00657669746365;
      if (v5 != 0x7073726550657375) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x756C6F56776F6873;
      unint64_t v6 = 0xEA0000000000656DLL;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6172656D6163) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB22A8(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000013;
  unint64_t v4 = 0x80000001B6F2E8B0;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0x79747265706F7270;
      unint64_t v4 = 0xEC00000068746150;
      break;
    case 2:
      unint64_t v3 = 0x79747265706F7270;
      unint64_t v4 = 0xEC00000065707954;
      break;
    case 3:
      unint64_t v4 = 0x80000001B6F2E8E0;
      unint64_t v3 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD000000000000013;
  unint64_t v6 = 0x80000001B6F2E8B0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC00000068746150;
      if (v3 == 0x79747265706F7270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0x79747265706F7270;
      unint64_t v6 = 0xEC00000065707954;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000001B6F2E8E0;
      if (v3 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v3 != v5) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB2460(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7265746E6563;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7265746E6563;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x68637465727473;
      break;
    case 2:
      uint64_t v5 = 0x69466F54657A6973;
      unint64_t v3 = 0xEA00000000006C6CLL;
      break;
    case 3:
      uint64_t v5 = 0x69466F54657A6973;
      unint64_t v3 = 0xE900000000000074;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x68637465727473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x69466F54657A6973;
      unint64_t v6 = 0xEA00000000006C6CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000074;
      if (v5 == 0x69466F54657A6973) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB25F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x736E6F6974706FLL;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x736E6F6974706FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001B6F2E9B0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v5 = 0x7A696C616D726F6ELL;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 3:
      unint64_t v5 = 0x6572726566657270;
      unint64_t v3 = 0xEF726564616F4C64;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001B6F2E9B0;
      if (v5 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x7A696C616D726F6ELL;
      unint64_t v6 = 0xE900000000000065;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF726564616F4C64;
      if (v5 == 0x6572726566657270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB27B0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7469736E65746E69;
  unint64_t v3 = 0xE900000000000079;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7469736E65746E69;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x65727574786574;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x72656C706D6173;
      break;
    case 3:
      uint64_t v5 = 0x616942656C616373;
      unint64_t v3 = 0xE900000000000073;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE900000000000079;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x65727574786574) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x72656C706D6173;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000073;
      if (v5 == 0x616942656C616373) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB2950(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB000000006E6F69;
  uint64_t v3 = 0x7469736F706D6F63;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7469736F706D6F63;
  unint64_t v6 = 0xEB000000006E6F69;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1701080941;
      break;
    case 2:
      uint64_t v5 = 0x7469736E65746E69;
      unint64_t v6 = 0xE900000000000079;
      break;
    case 3:
      uint64_t v5 = 0x4173746365666661;
      unint64_t v6 = 0xEC0000006168706CLL;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x65756C6176;
      break;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1886216562;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1701080941) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xE900000000000079;
      if (v5 != 0x7469736E65746E69) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xEC0000006168706CLL;
      if (v5 != 0x4173746365666661) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x65756C6176;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1886216562) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB2B60(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000687467;
  unint64_t v3 = 0x6E654C6C61636F66;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E654C6C61636F66;
  unint64_t v6 = 0xEB00000000687467;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x7369447375636F66;
      unint64_t v6 = 0xED000065636E6174;
      break;
    case 2:
      unint64_t v5 = 0x6953726F736E6573;
      unint64_t v6 = 0xEA0000000000657ALL;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x706F745366;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x657275736F707865;
      break;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x65676E61527ALL;
      break;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x5A65737265766572;
      break;
    case 7:
      unint64_t v6 = 0x80000001B6F2EA20;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 8:
      unint64_t v5 = 0x7366664F6D6C6966;
      unint64_t v6 = 0xEA00000000007465;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xED000065636E6174;
      if (v5 == 0x7369447375636F66) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v2 = 0xEA0000000000657ALL;
      if (v5 != 0x6953726F736E6573) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x706F745366) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x657275736F707865) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x65676E61527ALL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x5A65737265766572) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v2 = 0x80000001B6F2EA20;
      unint64_t v3 = 0xD000000000000013;
      goto LABEL_24;
    case 8:
      unint64_t v2 = 0xEA00000000007465;
      if (v5 != 0x7366664F6D6C6966) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v3) {
        goto LABEL_28;
      }
LABEL_25:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB2E64(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006568;
  unint64_t v3 = 0x636143746E696F70;
  uint64_t v4 = a1;
  unint64_t v5 = 0x636143746E696F70;
  unint64_t v6 = 0xEA00000000006568;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = 0x80000001B6F33090;
      break;
    case 2:
      unint64_t v5 = 0x4374697265686E69;
      unint64_t v6 = 0xEC000000726F6C6FLL;
      break;
    case 3:
      unint64_t v6 = 0x80000001B6F2E7F0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0x5374697265686E69;
      unint64_t v6 = 0xEB00000000657A69;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001B6F33090;
      if (v5 == 0xD000000000000013) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEC000000726F6C6FLL;
      if (v5 != 0x4374697265686E69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x80000001B6F2E7F0;
      unint64_t v3 = 0xD000000000000012;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xEB00000000657A69;
      if (v5 != 0x5374697265686E69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB3070(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080941;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701080941;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x65646F4D757063;
      break;
    case 2:
      uint64_t v5 = 0x65646F4D757067;
      unint64_t v3 = 0xE700000000000000;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6B6361626C6C6166;
      break;
    case 4:
      uint64_t v5 = 0x6F7268636E797361;
      unint64_t v3 = 0xEC00000073756F6ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x65646F4D757063) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x65646F4D757067) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6B6361626C6C6166;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEC00000073756F6ELL;
      if (v5 != 0x6F7268636E797361) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB3244(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1701869940;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x65756C6176;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x6870617267627573;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x6F666E4972657375;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE400000000000000;
      if (v4 == 1701869940) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v5 = 0xE500000000000000;
      if (v4 != 0x65756C6176) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v5 = 0xE800000000000000;
      uint64_t v6 = 0x6870617267627573;
      goto LABEL_12;
    case 4:
      unint64_t v5 = 0xE800000000000000;
      if (v4 != 0x6F666E4972657375) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v4 != v6) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB33E4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6163537375636F66;
  }
  else {
    uint64_t v3 = 0x696F507375636F66;
  }
  if (v2) {
    unint64_t v4 = 0xEA0000000000746ELL;
  }
  else {
    unint64_t v4 = 0xEA0000000000656CLL;
  }
  if (a2) {
    uint64_t v5 = 0x6163537375636F66;
  }
  else {
    uint64_t v5 = 0x696F507375636F66;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000656CLL;
  }
  else {
    unint64_t v6 = 0xEA0000000000746ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB3490(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656C62;
  uint64_t v3 = 0x6154797469746E65;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6154797469746E65;
  unint64_t v6 = 0xEB00000000656C62;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x7365697469746E65;
      break;
    case 2:
      uint64_t v5 = 0x6E6F6974616C6572;
      unint64_t v6 = 0xE900000000000073;
      break;
    case 3:
      uint64_t v5 = 0x6E656E6F706D6F63;
      unint64_t v6 = 0xEE00656C62615474;
      break;
    case 4:
      uint64_t v5 = 0x79747265706F7270;
      unint64_t v6 = 0xED0000656C626154;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x7365697469746E65) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE900000000000073;
      if (v5 != 0x6E6F6974616C6572) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x6E656E6F706D6F63;
      unint64_t v2 = 0xEE00656C62615474;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xED0000656C626154;
      if (v5 != 0x79747265706F7270) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB36A4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x746E756F63;
    }
    else {
      uint64_t v3 = 0x614D6D6F646E6172;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xED00007269446E69;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x746E756F63;
      }
      else {
        uint64_t v6 = 0x614D6D6F646E6172;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xED00007269446E69;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v3 = 7498084;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE300000000000000;
  if (v3 != 7498084)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB37C0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000012;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v2) {
    unint64_t v4 = 0x80000001B6F2ECA0;
  }
  else {
    unint64_t v4 = 0x80000001B6F2ECC0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000012;
  }
  else {
    unint64_t v5 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F2ECC0;
  }
  else {
    unint64_t v6 = 0x80000001B6F2ECA0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB386C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6564496873656DLL;
  }
  else {
    uint64_t v3 = 0x656449656E656373;
  }
  if (v2) {
    unint64_t v4 = 0xEF7265696669746ELL;
  }
  else {
    unint64_t v4 = 0xEE00726569666974;
  }
  if (a2) {
    uint64_t v5 = 0x6E6564496873656DLL;
  }
  else {
    uint64_t v5 = 0x656449656E656373;
  }
  if (a2) {
    unint64_t v6 = 0xEE00726569666974;
  }
  else {
    unint64_t v6 = 0xEF7265696669746ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB392C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C616373;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656C616373;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001B6F2EA20;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x65676E61527ALL;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x5A65737265766572;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001B6F2EA20;
      if (v5 == 0xD000000000000013) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x65676E61527ALL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x5A65737265766572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB3AB8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C6F687365726874;
  }
  else {
    uint64_t v3 = 0x6C656E6E616863;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000064;
  }
  if (a2) {
    uint64_t v5 = 0x6C6F687365726874;
  }
  else {
    uint64_t v5 = 0x6C656E6E616863;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000064;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB3B64(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE006E6F6974636ELL;
  uint64_t v3 = 0x75466C656E72656BLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x75466C656E72656BLL;
  unint64_t v6 = 0xEE006E6F6974636ELL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1668506980;
      break;
    case 2:
      uint64_t v5 = 0x6574656D61726170;
      unint64_t v6 = 0xEA00000000007372;
      break;
    case 3:
      uint64_t v5 = 0x63536C656E72656BLL;
      unint64_t v6 = 0xEC00000074706972;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x7365727574786574;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1668506980) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEA00000000007372;
      if (v5 != 0x6574656D61726170) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x63536C656E72656BLL;
      unint64_t v2 = 0xEC00000074706972;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x7365727574786574) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB3D50(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7365676465;
    }
    else {
      uint64_t v3 = 0x6F666E4972657375;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7365676465;
      }
      else {
        uint64_t v6 = 0x6F666E4972657375;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x7365646F6ELL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x7365646F6ELL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB3E5C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 1701080931;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701080931;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001B6F2E5A0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v3 = 0xED000073656D614ELL;
      goto LABEL_7;
    case 3:
      uint64_t v6 = 1701667150;
      goto LABEL_6;
    case 4:
      uint64_t v6 = 1701869908;
LABEL_6:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
LABEL_7:
      unint64_t v5 = 0x6E6F6974636E7566;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0x80000001B6F2E5A0;
      unint64_t v2 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v7 = 0xED000073656D614ELL;
      goto LABEL_14;
    case 3:
      uint64_t v8 = 1701667150;
      goto LABEL_13;
    case 4:
      uint64_t v8 = 1701869908;
LABEL_13:
      unint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
LABEL_14:
      unint64_t v2 = 0x6E6F6974636E7566;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1B6BB3FFC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6573696F6ELL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6573696F6ELL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x7269446E69616DLL;
      break;
    case 2:
      unint64_t v5 = 0x537269446E69616DLL;
      unint64_t v3 = 0xED00006461657270;
      break;
    case 3:
      unint64_t v5 = 0x746E496573696F6ELL;
      unint64_t v3 = 0xEE00797469736E65;
      break;
    case 4:
      unint64_t v5 = 0x6163536573696F6ELL;
      unint64_t v3 = 0xEA0000000000656CLL;
      break;
    case 5:
      unint64_t v3 = 0x80000001B6F32F50;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 6:
      unint64_t v5 = 0x676E654C70657473;
      unint64_t v3 = 0xEA00000000006874;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x7269446E69616DLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xED00006461657270;
      if (v5 != 0x537269446E69616DLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEE00797469736E65;
      if (v5 != 0x746E496573696F6ELL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xEA0000000000656CLL;
      if (v5 != 0x6163536573696F6ELL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0x80000001B6F32F50;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEA00000000006874;
      if (v5 != 0x676E654C70657473) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB4290(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007974;
  uint64_t v3 = 0x69746E456873656DLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x69746E456873656DLL;
  unint64_t v6 = 0xEA00000000007974;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x746E756F63;
      break;
    case 2:
      uint64_t v5 = 0x7562697274736964;
      unint64_t v6 = 0xEC0000006E6F6974;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x736E6F6974706FLL;
      break;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1684366707;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x746E756F63) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEC0000006E6F6974;
      if (v5 != 0x7562697274736964) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x736E6F6974706FLL;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1684366707) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB445C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000656CLL;
  uint64_t v3 = 0x676E4172656E6E69;
  uint64_t v4 = a1;
  uint64_t v5 = 0x676E4172656E6E69;
  unint64_t v6 = 0xEA0000000000656CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x676E41726574756FLL;
      break;
    case 2:
      uint64_t v5 = 0x6152746365707361;
      unint64_t v6 = 0xEB000000006F6974;
      break;
    case 3:
      uint64_t v5 = 0x75676E6174636572;
      unint64_t v6 = 0xEB0000000072616CLL;
      break;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1918985582;
      break;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7496038;
      break;
    case 6:
      uint64_t v5 = 0x7469736E65746E69;
      unint64_t v6 = 0xE900000000000079;
      break;
    case 7:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x65727574786574;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x676E41726574756FLL) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      uint64_t v7 = 0x6152746365707361;
      uint64_t v8 = 7301492;
      goto LABEL_14;
    case 3:
      uint64_t v7 = 0x75676E6174636572;
      uint64_t v8 = 7496044;
LABEL_14:
      unint64_t v2 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v7) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1918985582) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0xE300000000000000;
      if (v5 != 7496038) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v3 = 0x7469736E65746E69;
      unint64_t v2 = 0xE900000000000079;
      goto LABEL_21;
    case 7:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x65727574786574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_25;
      }
LABEL_22:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_25:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BB46E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6C6F687365726874;
    }
    else {
      uint64_t v3 = 0x706D61736E776F64;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000064;
    }
    else {
      unint64_t v4 = 0xEC000000676E696CLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6C6F687365726874;
      }
      else {
        uint64_t v6 = 0x706D61736E776F64;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000064;
      }
      else {
        unint64_t v7 = 0xEC000000676E696CLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x656372756F73;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x656372756F73)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB4810(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080941;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701080941;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000023;
      uint64_t v6 = "entityComponentPropertyOutputsTable";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0x65746172656E6567;
      uint64_t v7 = 0x65646F4364;
      goto LABEL_10;
    case 3:
      unint64_t v5 = 0xD00000000000001ALL;
      uint64_t v6 = "userDataForGeneratedInArgs";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v5 = 0x65746172656E6567;
      unint64_t v3 = 0xEF736772416E4964;
      break;
    case 5:
      unint64_t v3 = 0x80000001B6F2EEB0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x65676175676E616CLL;
      break;
    case 7:
      unint64_t v5 = 0x65746172656E6567;
      uint64_t v7 = 0x6174614464;
LABEL_10:
      unint64_t v3 = v7 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xD000000000000023;
      char v10 = "entityComponentPropertyOutputsTable";
      goto LABEL_15;
    case 2:
      uint64_t v11 = 0x65646F4364;
      goto LABEL_25;
    case 3:
      unint64_t v9 = 0xD00000000000001ALL;
      char v10 = "userDataForGeneratedInArgs";
LABEL_15:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 != v9) {
        goto LABEL_28;
      }
      goto LABEL_26;
    case 4:
      unint64_t v8 = 0xEF736772416E4964;
      if (v5 != 0x65746172656E6567) {
        goto LABEL_28;
      }
      goto LABEL_26;
    case 5:
      unint64_t v8 = 0x80000001B6F2EEB0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_28;
      }
      goto LABEL_26;
    case 6:
      unint64_t v8 = 0xE800000000000000;
      uint64_t v2 = 0x65676175676E616CLL;
      goto LABEL_22;
    case 7:
      uint64_t v11 = 0x6174614464;
LABEL_25:
      unint64_t v8 = v11 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      if (v5 == 0x65746172656E6567) {
        goto LABEL_26;
      }
      goto LABEL_28;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_26:
      if (v3 == v8) {
        char v12 = 1;
      }
      else {
LABEL_28:
      }
        char v12 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1B6BB4AD8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE00617461447265;
  uint64_t v3 = 0x7355736772416E69;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7355736772416E69;
  unint64_t v6 = 0xEE00617461447265;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x736772416E69;
      break;
    case 2:
      uint64_t v5 = 0x67724174754F6E69;
      unint64_t v6 = 0xE900000000000073;
      break;
    case 3:
      uint64_t v5 = 0x6E49747069726373;
      unint64_t v6 = 0xEB00000000786564;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x736772416E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x67724174754F6E69;
      unint64_t v2 = 0xE900000000000073;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEB00000000786564;
      if (v5 == 0x6E49747069726373) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB4C90(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1701869940;
  }
  else {
    uint64_t v3 = 6580597;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1701869940;
  }
  else {
    uint64_t v5 = 6580597;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB4D28(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007974;
  uint64_t v3 = 0x69746E456873656DLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x69746E456873656DLL;
  unint64_t v6 = 0xEA00000000007974;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000001B6F2E650;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x65646F4D74726F73;
      break;
    case 3:
      unint64_t v5 = 0x65646E4974726170;
      unint64_t v6 = 0xE900000000000078;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x7865646E49646F6CLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001B6F2E650;
      if (v5 == 0xD000000000000010) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x65646F4D74726F73) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x65646E4974726170;
      unint64_t v2 = 0xE900000000000078;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x7865646E49646F6CLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB4F0C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656372756F73;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656372756F73;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "particlesPerRibbon";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0x654C6E6F62626972;
      unint64_t v3 = 0xEC0000006874676ELL;
      break;
    case 3:
      unint64_t v6 = "clearAllVelocities";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v3 = 0x80000001B6F2EF60;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6F666E49676F6CLL;
      break;
    case 6:
      unint64_t v5 = 0x6963697473616C65;
      unint64_t v3 = 0xEA00000000007974;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = "particlesPerRibbon";
      goto LABEL_14;
    case 2:
      unint64_t v7 = 0xEC0000006874676ELL;
      if (v5 != 0x654C6E6F62626972) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 3:
      unint64_t v8 = "clearAllVelocities";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000012) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      unint64_t v7 = 0x80000001B6F2EF60;
      if (v5 != 0xD000000000000014) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 5:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v2 = 0x6F666E49676F6CLL;
      goto LABEL_19;
    case 6:
      unint64_t v7 = 0xEA00000000007974;
      if (v5 != 0x6963697473616C65) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v5 != v2) {
        goto LABEL_23;
      }
LABEL_20:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_23:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BB5160(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7265746E6563;
    }
    else {
      uint64_t v3 = 0x657A6953666C6168;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7265746E6563;
      }
      else {
        uint64_t v6 = 0x657A6953666C6168;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x61746144666473;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x61746144666473)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB5274(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB000000006E6F69;
  uint64_t v3 = 0x7469736F706D6F63;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7469736F706D6F63;
  unint64_t v6 = 0xEB000000006E6F69;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1701080941;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x657672754378;
      break;
    case 3:
      uint64_t v5 = 0x657672754379;
      goto LABEL_6;
    case 4:
      uint64_t v5 = 0x65767275437ALL;
LABEL_6:
      unint64_t v6 = 0xE600000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701080941;
      break;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x657672754378;
      break;
    case 3:
      uint64_t v3 = 0x657672754379;
      goto LABEL_12;
    case 4:
      uint64_t v3 = 0x65767275437ALL;
LABEL_12:
      unint64_t v2 = 0xE600000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB53F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080931;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701080931;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xED000073656D614ELL;
      break;
    case 2:
      unint64_t v5 = 0x6E6F6974636E7566;
      unint64_t v3 = 0xEC000000656D614ELL;
      break;
    case 3:
      unint64_t v3 = 0x80000001B6F2E5A0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x65676175676E616CLL;
      break;
    case 5:
      unint64_t v5 = 0x5668706172477369;
      unint64_t v3 = 0xE900000000000032;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED000073656D614ELL;
      if (v5 == 0x6E6F6974636E7566) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEC000000656D614ELL;
      if (v5 != 0x6E6F6974636E7566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0x80000001B6F2E5A0;
      if (v5 != 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x65676175676E616CLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE900000000000032;
      if (v5 != 0x5668706172477369) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB562C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E69646165727073;
    }
    else {
      uint64_t v3 = 0x7469736F706D6F63;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEE0065676E615267;
    }
    else {
      unint64_t v4 = 0xEB000000006E6F69;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E69646165727073;
      }
      else {
        uint64_t v6 = 0x7469736F706D6F63;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEE0065676E615267;
      }
      else {
        unint64_t v7 = 0xEB000000006E6F69;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x65676E6172;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x65676E6172)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB5768(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC00000074616D72;
  unint64_t v3 = 0x6F665F6C65786970;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6F665F6C65786970;
  unint64_t v6 = 0xEC00000074616D72;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x616D5F6574697277;
      unint64_t v6 = 0xEA00000000006B73;
      break;
    case 2:
      unint64_t v6 = 0x80000001B6F2EFB0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v7 = "alpha_blend_operation";
      goto LABEL_10;
    case 4:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v7 = "rgb_blend_operation";
      goto LABEL_10;
    case 5:
      unint64_t v5 = 0xD00000000000001ELL;
      unint64_t v7 = "destination_alpha_blend_factor";
      goto LABEL_10;
    case 6:
      unint64_t v5 = 0xD00000000000001CLL;
      unint64_t v7 = "destination_rgb_blend_factor";
      goto LABEL_10;
    case 7:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v7 = "source_alpha_blend_factor";
      goto LABEL_10;
    case 8:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v7 = "source_rgb_blend_factor";
LABEL_10:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x616D5F6574697277;
      unint64_t v2 = 0xEA00000000006B73;
      break;
    case 2:
      unint64_t v2 = 0x80000001B6F2EFB0;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000015;
      char v8 = "alpha_blend_operation";
      goto LABEL_20;
    case 4:
      unint64_t v3 = 0xD000000000000013;
      char v8 = "rgb_blend_operation";
      goto LABEL_20;
    case 5:
      unint64_t v3 = 0xD00000000000001ELL;
      char v8 = "destination_alpha_blend_factor";
      goto LABEL_20;
    case 6:
      unint64_t v3 = 0xD00000000000001CLL;
      char v8 = "destination_rgb_blend_factor";
      goto LABEL_20;
    case 7:
      unint64_t v3 = 0xD000000000000019;
      char v8 = "source_alpha_blend_factor";
      goto LABEL_20;
    case 8:
      unint64_t v3 = 0xD000000000000017;
      char v8 = "source_rgb_blend_factor";
LABEL_20:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1B6BB59D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x69746172656E6567;
  }
  else {
    uint64_t v3 = 0x7865646E69;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006E6FLL;
  }
  if (a2) {
    uint64_t v5 = 0x69746172656E6567;
  }
  else {
    uint64_t v5 = 0x7865646E69;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006E6FLL;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB5A80(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1701869940;
  }
  else {
    uint64_t v2 = 1701667182;
  }
  if (a2) {
    uint64_t v3 = 1701869940;
  }
  else {
    uint64_t v3 = 1701667182;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B6BB5AF0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656D61;
  unint64_t v3 = 0x4E7972617262696CLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4E7972617262696CLL;
  unint64_t v6 = 0xEB00000000656D61;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x4E74657070696E73;
      break;
    case 2:
      unint64_t v6 = 0x80000001B6F34A10;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v5 = 0x617461646174656DLL;
      unint64_t v6 = 0xEC00000074636944;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x4E74657070696E73) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x80000001B6F34A10;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEC00000074636944;
      if (v5 == 0x617461646174656DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB5CA0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 6580597;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 6580597;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "inParameterNames";
      goto LABEL_4;
    case 2:
      unint64_t v6 = "inParameterTypes";
LABEL_4:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000011;
      char v7 = "outParameterNames";
      goto LABEL_7;
    case 4:
      unint64_t v5 = 0xD000000000000011;
      char v7 = "outParameterTypes";
LABEL_7:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      char v9 = "inParameterNames";
      goto LABEL_11;
    case 2:
      char v9 = "inParameterTypes";
LABEL_11:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_12;
    case 3:
      char v10 = "outParameterNames";
      goto LABEL_16;
    case 4:
      char v10 = "outParameterTypes";
LABEL_16:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == 0xD000000000000011) {
        goto LABEL_17;
      }
      goto LABEL_19;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_17:
      if (v3 == v8) {
        char v11 = 1;
      }
      else {
LABEL_19:
      }
        char v11 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_1B6BB5E38(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000012;
  }
  else {
    unint64_t v3 = 0x73747865746E6F63;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0x80000001B6F2F2E0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000012;
  }
  else {
    unint64_t v5 = 0x73747865746E6F63;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F2F2E0;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB5EE4(char a1, char a2)
{
  if (*(void *)&aType_31[8 * a1] == *(void *)&aType_31[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1B6BB5F4C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000015;
    }
    else {
      unint64_t v3 = 0xD000000000000016;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001B6F2F300;
    }
    else {
      unint64_t v4 = 0x80000001B6F2F320;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000015;
      }
      else {
        unint64_t v6 = 0xD000000000000016;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000001B6F2F300;
      }
      else {
        unint64_t v7 = 0x80000001B6F2F320;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    unint64_t v3 = 1701869940;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701869940)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB6040(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6570795465736162;
    }
    else {
      uint64_t v3 = 0x6574656D61726170;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xED0000656D614E72;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6570795465736162;
      }
      else {
        uint64_t v6 = 0x6574656D61726170;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xED0000656D614E72;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x44495565736162;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x44495565736162)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB6174(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7374657070696E73;
  }
  else {
    uint64_t v3 = 0x726F6C6F63;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7374657070696E73;
  }
  else {
    uint64_t v5 = 0x726F6C6F63;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB6218(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x726F74636166;
  }
  else {
    uint64_t v3 = 1701080941;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x726F74636166;
  }
  else {
    uint64_t v5 = 1701080941;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB62B8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEB000000006E6F69;
  uint64_t v3 = 0x7469736F706D6F63;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1886216562;
    }
    else {
      uint64_t v5 = 0x4173746365666661;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xEC0000006168706CLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x7469736F706D6F63;
  unint64_t v6 = 0xEB000000006E6F69;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 1886216562;
    }
    else {
      uint64_t v3 = 0x4173746365666661;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE400000000000000;
    }
    else {
      unint64_t v2 = 0xEC0000006168706CLL;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB63DC(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC000000656D6954;
  uint64_t v3 = 0x7265764F65746172;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x7473727562;
    }
    else {
      uint64_t v4 = 0x74696D655FLL;
    }
    unint64_t v5 = 0xE500000000000000;
    int v6 = a2;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v4 = 0x7265764F65746172;
  unint64_t v5 = 0xEC000000656D6954;
  int v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1) {
      uint64_t v3 = 0x7473727562;
    }
    else {
      uint64_t v3 = 0x74696D655FLL;
    }
    unint64_t v2 = 0xE500000000000000;
  }
LABEL_10:
  if (v4 == v3 && v5 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB64F0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC000000656D6954;
  uint64_t v3 = 0x7265764F65746172;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6E6F697461727564;
    }
    else {
      uint64_t v5 = 0x6954746165706572;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xEA0000000000656DLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x7265764F65746172;
  unint64_t v6 = 0xEC000000656D6954;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6E6F697461727564;
    }
    else {
      uint64_t v3 = 0x6954746165706572;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE800000000000000;
    }
    else {
      unint64_t v2 = 0xEA0000000000656DLL;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB661C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x726F6C6F63;
  }
  else {
    uint64_t v3 = 0x7974696361706FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x726F6C6F63;
  }
  else {
    uint64_t v5 = 0x7974696361706FLL;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB66C0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x676E6979616C70;
  }
  else {
    uint64_t v3 = 0x746E457465737361;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000797469;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x676E6979616C70;
  }
  else {
    uint64_t v5 = 0x746E457465737361;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xEB00000000797469;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB6770(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1702521203;
  }
  else {
    uint64_t v2 = 1701667182;
  }
  if (a2) {
    uint64_t v3 = 1702521203;
  }
  else {
    uint64_t v3 = 1701667182;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B6BB67E0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7374756F79616CLL;
  }
  else {
    uint64_t v3 = 0x7475626972747461;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007365;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7374756F79616CLL;
  }
  else {
    uint64_t v5 = 0x7475626972747461;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007365;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB688C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E75665F70657473;
    }
    else {
      uint64_t v3 = 0x7461725F70657473;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xED00006E6F697463;
    }
    else {
      unint64_t v4 = 0xE900000000000065;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E75665F70657473;
      }
      else {
        uint64_t v6 = 0x7461725F70657473;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xED00006E6F697463;
      }
      else {
        unint64_t v7 = 0xE900000000000065;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x656469727473;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x656469727473)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB69C0(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC0000007865646ELL;
  uint64_t v3 = 0x695F726566667562;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x74657366666FLL;
    }
    else {
      uint64_t v4 = 0x74616D726F66;
    }
    unint64_t v5 = 0xE600000000000000;
    int v6 = a2;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v4 = 0x695F726566667562;
  unint64_t v5 = 0xEC0000007865646ELL;
  int v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1) {
      uint64_t v3 = 0x74657366666FLL;
    }
    else {
      uint64_t v3 = 0x74616D726F66;
    }
    unint64_t v2 = 0xE600000000000000;
  }
LABEL_10:
  if (v4 == v3 && v5 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB6AD4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6576727563;
  }
  else {
    uint64_t v3 = 0x797469636F6C6576;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6576727563;
  }
  else {
    uint64_t v5 = 0x797469636F6C6576;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB6B78(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x746152706574735FLL;
    }
    else {
      uint64_t v3 = 0x6E7546706574735FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000065;
    }
    else {
      unint64_t v4 = 0xED00006E6F697463;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x746152706574735FLL;
      }
      else {
        uint64_t v6 = 0x6E7546706574735FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000065;
      }
      else {
        unint64_t v7 = 0xED00006E6F697463;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6564697274735FLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6564697274735FLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB6CB4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x74616D726F665FLL;
    }
    else {
      uint64_t v3 = 0x497265666675625FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xEC0000007865646ELL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x74616D726F665FLL;
      }
      else {
        uint64_t v6 = 0x497265666675625FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xEC0000007865646ELL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x74657366666F5FLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x74657366666F5FLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB6DE0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000011;
  }
  else {
    unint64_t v3 = 0x797469746E65;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0x80000001B6F2F6D0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000011;
  }
  else {
    unint64_t v5 = 0x797469746E65;
  }
  if (a2) {
    unint64_t v6 = 0x80000001B6F2F6D0;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB6E88(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000657A69;
  uint64_t v3 = 0x5373726566667562;
  uint64_t v4 = a1;
  uint64_t v5 = 0x5373726566667562;
  unint64_t v6 = 0xEB00000000657A69;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x737475706E69;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x7374757074756FLL;
      break;
    case 3:
      uint64_t v5 = 0x74754F7475706E69;
      unint64_t v6 = 0xEC00000073747570;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x737475706E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x7374757074756FLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEC00000073747570;
      if (v5 == 0x74754F7475706E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB7030(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1684957547;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1684957547;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x7865646E69;
      break;
    case 2:
      unint64_t v5 = 0x79747265706F7270;
      unint64_t v3 = 0xEC00000065707954;
      break;
    case 3:
      unint64_t v3 = 0x80000001B6F2E8E0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x79747265706F7270;
      unint64_t v3 = 0xEC000000656D614ELL;
      break;
    case 5:
      unint64_t v5 = 0x5465727574786574;
      unint64_t v3 = 0xEB00000000657079;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x74657366666FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x7865646E69) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      uint64_t v7 = 1701869908;
      goto LABEL_15;
    case 3:
      unint64_t v6 = 0x80000001B6F2E8E0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      uint64_t v7 = 1701667150;
LABEL_15:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 != 0x79747265706F7270) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x5465727574786574;
      unint64_t v6 = 0xEB00000000657079;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x74657366666FLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_22:
      }
        char v8 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1B6BB7288(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6F69746365726964;
  }
  else {
    uint64_t v3 = 0x726F74636166;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xED0000736978416ELL;
  }
  if (a2) {
    uint64_t v5 = 0x6F69746365726964;
  }
  else {
    uint64_t v5 = 0x726F74636166;
  }
  if (a2) {
    unint64_t v6 = 0xED0000736978416ELL;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB7338(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7469736E65746E69;
  }
  else {
    uint64_t v3 = 0x657265687073;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000079;
  }
  if (a2) {
    uint64_t v5 = 0x7469736E65746E69;
  }
  else {
    uint64_t v5 = 0x657265687073;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000079;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB73E0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007373;
  unint64_t v3 = 0x656E68746F6F6D73;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656E68746F6F6D73;
  unint64_t v6 = 0xEA00000000007373;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000012;
      char v7 = "occlusionIntensity";
      goto LABEL_6;
    case 2:
      char v8 = "occlusionDistance";
      goto LABEL_8;
    case 3:
      unint64_t v5 = 0xD000000000000010;
      char v7 = "occlusionFalloff";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD000000000000015;
      char v7 = "displacementIntensity";
LABEL_6:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 5:
      char v8 = "displacementScale";
LABEL_8:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xD000000000000012;
      char v9 = "occlusionIntensity";
      goto LABEL_14;
    case 2:
      char v10 = "occlusionDistance";
      goto LABEL_18;
    case 3:
      unint64_t v3 = 0xD000000000000010;
      char v9 = "occlusionFalloff";
      goto LABEL_14;
    case 4:
      unint64_t v3 = 0xD000000000000015;
      char v9 = "displacementIntensity";
LABEL_14:
      unint64_t v2 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      goto LABEL_15;
    case 5:
      char v10 = "displacementScale";
LABEL_18:
      unint64_t v2 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_21;
      }
LABEL_19:
      if (v6 == v2) {
        char v11 = 1;
      }
      else {
LABEL_21:
      }
        char v11 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_1B6BB75B8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x686769654878616DLL;
    }
    else {
      uint64_t v3 = 0x657073417065656BLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000074;
    }
    else {
      unint64_t v4 = 0xEF6F697461527463;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x686769654878616DLL;
      }
      else {
        uint64_t v6 = 0x657073417065656BLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000074;
      }
      else {
        unint64_t v7 = 0xEF6F697461527463;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x687464695778616DLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x687464695778616DLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB76F4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1701869940;
  }
  else {
    uint64_t v3 = 0x797469746E65;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1701869940;
  }
  else {
    uint64_t v5 = 0x797469746E65;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB7790(unsigned __int8 a1, unsigned __int8 a2)
{
  if ((unint64_t)a1 << 48 == (unint64_t)a2 << 48) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1B6BB7808(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7469736E65746E69;
  }
  else {
    uint64_t v3 = 0x656C616373;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000079;
  }
  if (a2) {
    uint64_t v5 = 0x7469736E65746E69;
  }
  else {
    uint64_t v5 = 0x656C616373;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000079;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB78B0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB000000006E6F69;
  uint64_t v3 = 0x7469736F706D6F63;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7469736F706D6F63;
  unint64_t v6 = 0xEB000000006E6F69;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x65727574786574;
      break;
    case 2:
      unint64_t v5 = 0x4D73736572646461;
      unint64_t v6 = 0xEB0000000065646FLL;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v7 = 1818321779;
      goto LABEL_7;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1935763810;
      break;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v7 = 1818717793;
LABEL_7:
      unint64_t v5 = v7 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x65727574786574) {
        goto LABEL_19;
      }
      goto LABEL_21;
    case 2:
      unint64_t v2 = 0xEB0000000065646FLL;
      if (v5 != 0x4D73736572646461) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v8 = 1818321779;
      goto LABEL_18;
    case 4:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1935763810;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v8 = 1818717793;
LABEL_18:
      if (v5 == (v8 & 0xFFFF0000FFFFFFFFLL | 0x6500000000)) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_21;
      }
LABEL_19:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_21:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BB7AB0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65646F4D6C6C7563;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65646F4D6C6C7563;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x65646F4D74726F73;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656C616373;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6168706C61;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7265776F70;
      break;
    case 5:
      uint64_t v5 = 0x536873654D657375;
      unint64_t v3 = 0xED00007265646168;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x65646F4D74726F73) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656C616373) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6168706C61) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x7265776F70;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xED00007265646168;
      if (v5 != 0x536873654D657375) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB7CB4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7892834;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7892834;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6963697473616C65;
      unint64_t v3 = 0xEA00000000007974;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697463697266;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1885957222;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007974;
      if (v5 == 0x6963697473616C65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6E6F697463697266;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1885957222) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB7E2C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6576727563;
  }
  else {
    uint64_t v3 = 1701080941;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6576727563;
  }
  else {
    uint64_t v5 = 1701080941;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB7EC8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB000000006E6F69;
  uint64_t v3 = 0x7469736F706D6F63;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7469736F706D6F63;
  unint64_t v6 = 0xEB000000006E6F69;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1701080941;
      break;
    case 2:
      uint64_t v5 = 0x797469636F6C6576;
      unint64_t v6 = 0xED000065676E6152;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x65676E615278;
      break;
    case 4:
      uint64_t v5 = 0x65676E615279;
      goto LABEL_7;
    case 5:
      uint64_t v5 = 0x65676E61527ALL;
LABEL_7:
      unint64_t v6 = 0xE600000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701080941;
      break;
    case 2:
      uint64_t v3 = 0x797469636F6C6576;
      unint64_t v2 = 0xED000065676E6152;
      break;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x65676E615278;
      break;
    case 4:
      uint64_t v3 = 0x65676E615279;
      goto LABEL_14;
    case 5:
      uint64_t v3 = 0x65676E61527ALL;
LABEL_14:
      unint64_t v2 = 0xE600000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB80C0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701080941;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701080941;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4D73736572646461;
      unint64_t v3 = 0xEB0000000065646FLL;
      break;
    case 2:
      uint64_t v5 = 0x7469736F706D6F63;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 3:
      uint64_t v5 = 1886216562;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB0000000065646FLL;
      if (v5 == 0x4D73736572646461) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x7469736F706D6F63;
      unint64_t v6 = 0xEB000000006E6F69;
      goto LABEL_9;
    case 3:
      if (v5 == 1886216562) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB8248(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEB000000006E6F69;
  uint64_t v3 = 0x7469736F706D6F63;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x65676E6172;
    }
    else {
      uint64_t v5 = 1886216562;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x7469736F706D6F63;
  unint64_t v6 = 0xEB000000006E6F69;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x65676E6172;
    }
    else {
      uint64_t v3 = 1886216562;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE500000000000000;
    }
    else {
      unint64_t v2 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB8354(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001B6F2F730;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0x776F6C6C6F66;
    }
    else {
      unint64_t v4 = 0x7261656E696CLL;
    }
    unint64_t v5 = 0xE600000000000000;
    int v6 = a2;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  unint64_t v4 = 0xD000000000000010;
  unint64_t v5 = 0x80000001B6F2F730;
  int v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1) {
      unint64_t v2 = 0x776F6C6C6F66;
    }
    else {
      unint64_t v2 = 0x7261656E696CLL;
    }
    unint64_t v3 = 0xE600000000000000;
  }
LABEL_10:
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB8454(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6954746165706572;
  }
  else {
    uint64_t v3 = 0x746E756F63;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xEA0000000000656DLL;
  }
  if (a2) {
    uint64_t v5 = 0x6954746165706572;
  }
  else {
    uint64_t v5 = 0x746E756F63;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000656DLL;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB84FC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000007373;
  unint64_t v3 = 0x656E68746F6F6D73;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000015;
    }
    else {
      unint64_t v5 = 0xD000000000000011;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001B6F340B0;
    }
    else {
      unint64_t v6 = 0x80000001B6F340D0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x656E68746F6F6D73;
  unint64_t v6 = 0xEA00000000007373;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000015;
    }
    else {
      unint64_t v3 = 0xD000000000000011;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000001B6F340B0;
    }
    else {
      unint64_t v2 = 0x80000001B6F340D0;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB8608(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x65676E6172;
  }
  else {
    uint64_t v2 = 0x6576727563;
  }
  if (a2) {
    uint64_t v3 = 0x65676E6172;
  }
  else {
    uint64_t v3 = 0x6576727563;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B6BB8680(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65727574786574;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x65727574786574;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6C656E6E616863;
      break;
    case 2:
      unint64_t v5 = 0x4D73736572646461;
      unint64_t v3 = 0xEB0000000065646FLL;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v6 = 1735287154;
      goto LABEL_8;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v6 = 1818321779;
      goto LABEL_8;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1935763810;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v6 = 1818717793;
LABEL_8:
      unint64_t v5 = v6 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6C656E6E616863) {
        goto LABEL_21;
      }
      goto LABEL_23;
    case 2:
      unint64_t v7 = 0xEB0000000065646FLL;
      if (v5 != 0x4D73736572646461) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 3:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 1735287154;
      goto LABEL_20;
    case 4:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 1818321779;
      goto LABEL_20;
    case 5:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v2 = 1935763810;
      goto LABEL_17;
    case 6:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 1818717793;
LABEL_20:
      if (v5 == (v8 & 0xFFFF0000FFFFFFFFLL | 0x6500000000)) {
        goto LABEL_21;
      }
      goto LABEL_23;
    default:
LABEL_17:
      if (v5 != v2) {
        goto LABEL_23;
      }
LABEL_21:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_23:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BB8890(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001B6F2F8C0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x676E697369757263;
      unint64_t v3 = 0xED00006465657053;
      break;
    case 2:
      unint64_t v5 = 0x657053706D616C63;
      unint64_t v3 = 0xEA00000000006465;
      break;
    case 3:
      unint64_t v5 = 0x7244656C706D6973;
      unint64_t v3 = 0xEF6563726F466761;
      break;
    case 4:
      uint64_t v6 = "kickStartThreshold";
      goto LABEL_7;
    case 5:
      uint64_t v6 = "kickStartDirection";
LABEL_7:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001B6F2F8C0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x676E697369757263;
      unint64_t v7 = 0xED00006465657053;
      break;
    case 2:
      unint64_t v2 = 0x657053706D616C63;
      unint64_t v7 = 0xEA00000000006465;
      break;
    case 3:
      unint64_t v2 = 0x7244656C706D6973;
      unint64_t v7 = 0xEF6563726F466761;
      break;
    case 4:
      uint64_t v8 = "kickStartThreshold";
      goto LABEL_14;
    case 5:
      uint64_t v8 = "kickStartDirection";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000012;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1B6BB8AA8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1953066341;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1953066341;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656372756F73;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x737569646172;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x797469736E6564;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x797469636F6C6576;
      break;
    case 5:
      uint64_t v5 = 0x74696D45776F6873;
      unint64_t v3 = 0xEB00000000726574;
      break;
    case 6:
      uint64_t v5 = 0x6F6C6556776F6873;
      unint64_t v3 = 0xEC00000079746963;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x656372756F73) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x737569646172) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x797469736E6564) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x797469636F6C6576) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x74696D45776F6873;
      unint64_t v6 = 0xEB00000000726574;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEC00000079746963;
      if (v5 != 0x6F6C6556776F6873) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB8CF4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6576727563;
  }
  else {
    uint64_t v3 = 0x6E6F697461727564;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6576727563;
  }
  else {
    uint64_t v5 = 0x6E6F697461727564;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB8D98(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x636E65756C666E69;
  unint64_t v4 = 0xE900000000000065;
  uint64_t v5 = a1;
  unint64_t v6 = 0x636E65756C666E69;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v6 = 0x737569646172;
      break;
    case 2:
      unint64_t v6 = 0x65636E6174736964;
      unint64_t v4 = 0xEF66666F6C6C6146;
      break;
    case 3:
      unint64_t v6 = 0x6C676E4177656976;
      break;
    case 4:
      unint64_t v4 = 0x80000001B6F2F510;
      unint64_t v6 = 0xD000000000000010;
      break;
    case 5:
      unint64_t v6 = 0x6556746F5278616DLL;
      unint64_t v4 = 0xE90000000000006CLL;
      break;
    case 6:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x61657241776F6873;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v6 == 0x737569646172) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xEF66666F6C6C6146;
      if (v6 != 0x65636E6174736964) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      if (v6 != 0x6C676E4177656976) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0x80000001B6F2F510;
      if (v6 != 0xD000000000000010) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v3 = 0x6556746F5278616DLL;
      unint64_t v2 = 0xE90000000000006CLL;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE800000000000000;
      if (v6 != 0x61657241776F6873) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v6 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v4 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB8FFC(char a1, char a2)
{
  if (a1 == a2) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1B6BB9064(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF7373656E6B6369;
  uint64_t v3 = 0x6854726564726F62;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6854726564726F62;
  unint64_t v6 = 0xEF7373656E6B6369;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x3172656E726F63;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x3272656E726F63;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x61657241776F6873;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x3172656E726F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x3272656E726F63;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x61657241776F6873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB920C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE90000000000006ELL;
  uint64_t v3 = 0x6F69746365726964;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F69746365726964;
  unint64_t v6 = 0xE90000000000006ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6556746F5278616DLL;
      unint64_t v6 = 0xEC0000007269446CLL;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x726F746365567075;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x7441746E696F70;
      break;
    case 4:
      uint64_t v5 = 0x6C46656375646572;
      uint64_t v7 = 0x676E69707069;
      goto LABEL_7;
    case 5:
      uint64_t v5 = 0x6556746F5278616DLL;
      uint64_t v7 = 0x63655670556CLL;
LABEL_7:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC0000007269446CLL;
      if (v5 == 0x6556746F5278616DLL) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x726F746365567075) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x7441746E696F70) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      uint64_t v3 = 0x6C46656375646572;
      unint64_t v2 = 0xEE00676E69707069;
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xEE0063655670556CLL;
      if (v5 != 0x6556746F5278616DLL) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v3) {
        goto LABEL_20;
      }
LABEL_17:
      if (v6 == v2) {
        char v8 = 1;
      }
      else {
LABEL_20:
      }
        char v8 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1B6BB945C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x636E65756C666E69;
  uint64_t v4 = a1;
  uint64_t v5 = 0x636E65756C666E69;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E6543656E616C70;
      unint64_t v6 = 0xEB00000000726574;
      break;
    case 2:
      uint64_t v5 = 0x726F4E656E616C70;
      unint64_t v6 = 0xEB000000006C616DLL;
      break;
    case 3:
      uint64_t v5 = 0x6E616C50776F6873;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB00000000726574;
      if (v5 == 0x6E6543656E616C70) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x726F4E656E616C70;
      unint64_t v2 = 0xEB000000006C616DLL;
      goto LABEL_9;
    case 3:
      if (v5 == 0x6E616C50776F6873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB960C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x726F4E656E616C70;
  }
  else {
    uint64_t v3 = 0x636E65756C666E69;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xEB000000006C616DLL;
  }
  if (a2) {
    uint64_t v5 = 0x726F4E656E616C70;
  }
  else {
    uint64_t v5 = 0x636E65756C666E69;
  }
  if (a2) {
    unint64_t v6 = 0xEB000000006C616DLL;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB96C0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000746ELL;
  uint64_t v3 = 0x756F43656D617266;
  uint64_t v4 = a1;
  uint64_t v5 = 0x756F43656D617266;
  unint64_t v6 = 0xEA0000000000746ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x726550656D617266;
      unint64_t v6 = 0xEB00000000776F52;
      break;
    case 2:
      uint64_t v5 = 0x726550656D617266;
      unint64_t v6 = 0xEE006E6D756C6F43;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1684957547;
      break;
    case 4:
      uint64_t v5 = 0x7574786554657375;
      unint64_t v6 = 0xEC00000044336572;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB00000000776F52;
      if (v5 == 0x726550656D617266) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEE006E6D756C6F43;
      if (v5 != 0x726550656D617266) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1684957547;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xEC00000044336572;
      if (v5 != 0x7574786554657375) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB98C0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73746567726174;
  }
  else {
    uint64_t v3 = 0x656372756F73;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73746567726174;
  }
  else {
    uint64_t v5 = 0x656372756F73;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB9964(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x657A6953666C6168;
  }
  else {
    uint64_t v3 = 0x7265746E6563;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x657A6953666C6168;
  }
  else {
    uint64_t v5 = 0x7265746E6563;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB9A08(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x74756F79616CLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x74756F79616CLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x73726566667562;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7374726170;
      break;
    case 3:
      uint64_t v5 = 0x6F43786574726576;
      unint64_t v3 = 0xEB00000000746E75;
      break;
    case 4:
      uint64_t v5 = 0x696669746E656469;
      unint64_t v3 = 0xEA00000000007265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x73726566667562) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7374726170) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6F43786574726576;
      unint64_t v6 = 0xEB00000000746E75;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000007265;
      if (v5 != 0x696669746E656469) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BB9BDC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7A696D6F646E6172;
  }
  else {
    uint64_t v3 = 0x65756C6176;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v5 = 0x7A696D6F646E6172;
  }
  else {
    uint64_t v5 = 0x65756C6176;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000065;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB9C84(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6566694C7265766FLL;
  }
  else {
    uint64_t v3 = 0x726F74636166;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6566694C7265766FLL;
  }
  else {
    uint64_t v5 = 0x726F74636166;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BB9D28(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1953460082;
    }
    else {
      uint64_t v3 = 0x6C6576654C706F74;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xEF737463656A624FLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1953460082;
      }
      else {
        uint64_t v6 = 0x6C6576654C706F74;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xEF737463656A624FLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x656372756F73;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x656372756F73)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BB9E44(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65727574786574;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65727574786574;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7469736E65746E69;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 2:
      uint64_t v5 = 0x6576654C72756C62;
      unint64_t v3 = 0xE90000000000006CLL;
      break;
    case 3:
      uint64_t v5 = 0x646F4D646E656C62;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x66666F747563;
      break;
    case 5:
      uint64_t v5 = 0x676E697A69736572;
      unint64_t v3 = 0xEC00000065646F4DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000079;
      if (v5 == 0x7469736E65746E69) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE90000000000006CLL;
      if (v5 != 0x6576654C72756C62) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x646F4D646E656C62) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x66666F747563;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEC00000065646F4DLL;
      if (v5 != 0x676E697A69736572) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BBA080(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x737569646172;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x737569646172;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7053646E756F7261;
      unint64_t v3 = 0xEB00000000646565;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64656570536E69;
      break;
    case 3:
      uint64_t v5 = 0x73656E7468676974;
      unint64_t v3 = 0xE900000000000073;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000646565;
      if (v5 == 0x7053646E756F7261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x64656570536E69;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000073;
      if (v5 == 0x73656E7468676974) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BBA220(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1701869940;
  }
  else {
    uint64_t v3 = 0x65756C6176;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1701869940;
  }
  else {
    uint64_t v5 = 0x65756C6176;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BBA2BC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73657361436C6C61;
  }
  else {
    uint64_t v3 = 1701667182;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73657361436C6C61;
  }
  else {
    uint64_t v5 = 1701667182;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BBA35C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x49646F4C7473616CLL;
  }
  else {
    uint64_t v3 = 0x676E61527473616CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xEC0000007865646ELL;
  }
  if (a2) {
    uint64_t v5 = 0x49646F4C7473616CLL;
  }
  else {
    uint64_t v5 = 0x676E61527473616CLL;
  }
  if (a2) {
    unint64_t v6 = 0xEC0000007865646ELL;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BBA410(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1684957547;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1684957547;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x646F4D646E656C62;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v5 = 0x68536D6F74737563;
      unint64_t v3 = 0xEC00000072656461;
      break;
    case 3:
      unint64_t v5 = 0x6574656D61726170;
      unint64_t v3 = 0xEA00000000007372;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x65646F4D6C6C7563;
      break;
    case 5:
      unint64_t v3 = 0x80000001B6F2FDE0;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 6:
      unint64_t v5 = 0x6D6F436874706564;
      unint64_t v3 = 0xEC00000065726170;
      break;
    case 7:
      unint64_t v5 = 0x6972576874706564;
      unint64_t v3 = 0xEA00000000006574;
      break;
    case 8:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x66666F747563;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x646F4D646E656C62) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      uint64_t v7 = 0x68536D6F74737563;
      uint64_t v8 = 1919247457;
      goto LABEL_21;
    case 3:
      unint64_t v6 = 0xEA00000000007372;
      if (v5 != 0x6574656D61726170) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65646F4D6C6C7563) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0x80000001B6F2FDE0;
      if (v5 != 0xD000000000000014) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      uint64_t v7 = 0x6D6F436874706564;
      uint64_t v8 = 1701994864;
LABEL_21:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 != v7) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x6972576874706564;
      unint64_t v6 = 0xEA00000000006574;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x66666F747563) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_28:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BBA700(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x737569646172;
    }
    else {
      uint64_t v3 = 0x726F6C6F63;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x737569646172;
      }
      else {
        uint64_t v6 = 0x726F6C6F63;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x74657366666FLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x74657366666FLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BBA804(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x73656D6974;
    }
    else {
      uint64_t v3 = 1701080941;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x73656D6974;
      }
      else {
        uint64_t v6 = 1701080941;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x73726F6C6F63;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x73726F6C6F63)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BBA900(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x44497475706E69;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x44497475706E69;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x646E497475706E69;
      unint64_t v3 = 0xEA00000000007865;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x444974757074756FLL;
      break;
    case 3:
      uint64_t v5 = 0x6E4974757074756FLL;
      unint64_t v3 = 0xEB00000000786564;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007865;
      if (v5 == 0x646E497475706E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x444974757074756FLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEB00000000786564;
      if (v5 == 0x6E4974757074756FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BBAAA8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656469736E69;
  }
  else {
    uint64_t v3 = 0x6570616873;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656469736E69;
  }
  else {
    uint64_t v5 = 0x6570616873;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BBAB48(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C6169726574616DLL;
  }
  else {
    uint64_t v3 = 1752393069;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000073;
  }
  if (a2) {
    uint64_t v5 = 0x6C6169726574616DLL;
  }
  else {
    uint64_t v5 = 1752393069;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000073;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BBABEC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000079;
  uint64_t v3 = 0x7469736E65746E69;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7469736E65746E69;
  unint64_t v6 = 0xE900000000000079;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000001B6F2E000;
      uint64_t v5 = 0xD000000000000011;
      break;
    case 2:
      unsigned int v7 = 1702131055;
      goto LABEL_5;
    case 3:
      unsigned int v7 = 1701736041;
LABEL_5:
      uint64_t v5 = v7 | 0x676E417200000000;
      unint64_t v6 = 0xEA0000000000656CLL;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x7261654E7ALL;
      break;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1918977658;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001B6F2E000;
      if (v5 == 0xD000000000000011) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      unsigned int v8 = 1702131055;
      goto LABEL_13;
    case 3:
      unsigned int v8 = 1701736041;
LABEL_13:
      unint64_t v2 = 0xEA0000000000656CLL;
      if (v5 != (v8 | 0x676E417200000000)) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7261654E7ALL;
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1918977658) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v3) {
        goto LABEL_20;
      }
LABEL_17:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_20:
      }
        char v9 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1B6BBADD8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x4572657474696D65;
  }
  else {
    uint64_t v3 = 0x746E65726170;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xED0000797469746ELL;
  }
  if (a2) {
    uint64_t v5 = 0x4572657474696D65;
  }
  else {
    uint64_t v5 = 0x746E65726170;
  }
  if (a2) {
    unint64_t v6 = 0xED0000797469746ELL;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6BBAE88(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 6579570;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 6579570;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6E65657267;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702194274;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6168706C61;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6E65657267) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1702194274;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6168706C61) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6BBAFE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)objc_msgSend(v0, sel_pixelFormat);
  id v3 = objc_msgSend(v1, sel_width);
  if ((unint64_t)(v2 - 160) > 0x3A || ((1 << (v2 + 96)) & 0x7FDF1FF7CFD54FFLL) == 0) {
    return sub_1B6368160((uint64_t)v2) * (void)v3;
  }
  if ((unint64_t)(v2 - 186) > 0x20) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = qword_1B6EB0900[(void)(v2 - 186)];
  }
  return 16 * (((uint64_t)v3 + v5 - 1) / v5);
}

uint64_t sub_1B6BBB94C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E312C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B6E31288();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v7, v8);
  char v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1B6385660(v2, (uint64_t)qword_1EB997E68);
  sub_1B6E312A8();
  sub_1B6E31268();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v11, v2);
  swift_unknownObjectRetain_n();
  char v12 = (uint8_t *)swift_slowAlloc();
  uint64_t v13 = swift_slowAlloc();
  uint64_t v30 = v13;
  *(_DWORD *)char v12 = 136315138;
  id v14 = objc_msgSend(v1, sel_label);
  uint64_t v27 = v3;
  uint64_t v28 = v2;
  if (v14)
  {
    char v15 = v14;
    uint64_t v16 = sub_1B6E31798();
    unint64_t v18 = v17;
  }
  else
  {
    unint64_t v18 = 0xE700000000000000;
    uint64_t v16 = 0x64656D616E6E55;
  }
  uint64_t v29 = sub_1B6385A2C(v16, v18, &v30);
  sub_1B6E325A8();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1B6E312A8();
  os_signpost_type_t v20 = sub_1B6E322B8();
  os_signpost_id_t v21 = sub_1B6E31278();
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v19, v20, v21, "waitUntilCompleted", "CB: %s", v12, 0xCu);
  objc_msgSend(v1, sel_waitUntilCompleted);
  os_signpost_type_t v22 = sub_1B6E322A8();
  os_signpost_id_t v23 = sub_1B6E31278();
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v19, v22, v23, "waitUntilCompleted", "CB: %s", v12, 0xCu);

  swift_arrayDestroy();
  MEMORY[0x1BA9B84C0](v13, -1, -1);
  MEMORY[0x1BA9B84C0](v12, -1, -1);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
}

double sub_1B6BBC0D0()
{
  *(float *)&unsigned int v3 = (float)(uint64_t)objc_msgSend(v0, sel_width);
  *(float *)&unsigned int v2 = (float)(uint64_t)objc_msgSend(v0, sel_height);
  objc_msgSend(v0, sel_depth);
  return COERCE_DOUBLE(__PAIR64__(v2, v3));
}

void sub_1B6BBC294()
{
}

uint64_t sub_1B6BBC7DC(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  if (unint64_t)(a1 - 1) < 0x35 && ((0x1FF1FFFFFFFFFFuLL >> v1)) {
    return qword_1B6EB0758[v1];
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6BBC86C()
{
  MTLPixelFormatGetInfoForDevice();
  return v1 & 1;
}

uint64_t sub_1B6BBC8A0()
{
  objc_msgSend(v0, sel_pixelFormat);
  objc_msgSend(v0, sel_mipmapLevelCount);

  return sub_1B6E32108();
}

uint64_t sub_1B6BBC91C()
{
  sub_1B638955C(2 * (void)objc_msgSend(v0, sel_threadExecutionWidth), 1, 1, &v2);
  return v2;
}

void sub_1B6BBC964(uint64_t a1)
{
  switch(a1)
  {
    case 3:
    case 16:
    case 29:
    case 33:
    case 37:
    case 41:
    case 45:
    case 49:
    case 53:
    case 59:
      return;
    case 4:
      char v1 = &qword_1EB980E90;
      uint64_t v2 = MEMORY[0x1E4FBB470];
      unsigned int v3 = sub_1B6645830;
      goto LABEL_34;
    case 5:
      char v1 = (unint64_t *)&qword_1EB980EB0;
      uint64_t v2 = MEMORY[0x1E4FBB470];
      uint64_t v5 = sub_1B6645830;
      goto LABEL_29;
    case 6:
      char v1 = (unint64_t *)&qword_1EB980EF0;
      uint64_t v2 = MEMORY[0x1E4FBB470];
      uint64_t v4 = sub_1B6645830;
      goto LABEL_32;
    case 7:
      type metadata accessor for simd_float2x2(0);
      return;
    case 8:
      type metadata accessor for simd_float2x3(0);
      return;
    case 9:
      type metadata accessor for simd_float2x4(0);
      return;
    case 10:
      type metadata accessor for simd_float3x2(0);
      return;
    case 11:
      type metadata accessor for simd_float3x3(0);
      return;
    case 12:
      type metadata accessor for simd_float3x4(0);
      return;
    case 13:
      type metadata accessor for simd_float4x2(0);
      return;
    case 14:
      type metadata accessor for simd_float4x3(0);
      return;
    case 15:
      type metadata accessor for simd_float4x4(0);
      return;
    case 17:
    case 38:
      char v1 = &qword_1EB980E98;
      uint64_t v2 = MEMORY[0x1E4FBC0F8];
      unsigned int v3 = sub_1B6645884;
      goto LABEL_34;
    case 18:
    case 39:
      char v1 = &qword_1EB980EB8;
      uint64_t v2 = MEMORY[0x1E4FBC0F8];
      uint64_t v5 = sub_1B6645884;
      goto LABEL_29;
    case 19:
    case 40:
      char v1 = &qword_1EB980F00;
      uint64_t v2 = MEMORY[0x1E4FBC0F8];
      uint64_t v4 = sub_1B6645884;
      goto LABEL_32;
    case 30:
      char v1 = (unint64_t *)&unk_1E9DD6B10;
      uint64_t v2 = MEMORY[0x1E4FBC150];
      unsigned int v3 = sub_1B6BC0BB4;
      goto LABEL_34;
    case 31:
      char v1 = (unint64_t *)&unk_1E9DD6B08;
      uint64_t v2 = MEMORY[0x1E4FBC150];
      uint64_t v5 = sub_1B6BC0BB4;
      goto LABEL_29;
    case 32:
      char v1 = (unint64_t *)&unk_1E9DD6AF8;
      uint64_t v2 = MEMORY[0x1E4FBC150];
      uint64_t v4 = sub_1B6BC0BB4;
      goto LABEL_32;
    case 34:
      char v1 = &qword_1EB980EA0;
      uint64_t v2 = MEMORY[0x1E4FBC4C0];
      unsigned int v3 = sub_1B675900C;
      goto LABEL_34;
    case 35:
      char v1 = (unint64_t *)&unk_1EB980EC0;
      uint64_t v2 = MEMORY[0x1E4FBC4C0];
      uint64_t v5 = sub_1B675900C;
      goto LABEL_29;
    case 36:
      char v1 = &qword_1EB980F08;
      uint64_t v2 = MEMORY[0x1E4FBC4C0];
      uint64_t v4 = sub_1B675900C;
      goto LABEL_32;
    case 42:
      char v1 = (unint64_t *)&unk_1E9DD6AB0;
      uint64_t v2 = MEMORY[0x1E4FBC450];
      unsigned int v3 = sub_1B6BC0AB8;
      goto LABEL_34;
    case 43:
      char v1 = (unint64_t *)&unk_1E9DD6AA8;
      uint64_t v2 = MEMORY[0x1E4FBC450];
      uint64_t v5 = sub_1B6BC0AB8;
      goto LABEL_29;
    case 44:
      char v1 = (unint64_t *)&unk_1E9DD6A98;
      uint64_t v2 = MEMORY[0x1E4FBC450];
      uint64_t v4 = sub_1B6BC0AB8;
      goto LABEL_32;
    case 46:
      char v1 = (unint64_t *)&unk_1E9DD6AF0;
      uint64_t v2 = MEMORY[0x1E4FBC098];
      unsigned int v3 = sub_1B6BC0B60;
      goto LABEL_34;
    case 47:
      char v1 = (unint64_t *)&unk_1E9DD6AE8;
      uint64_t v2 = MEMORY[0x1E4FBC098];
      uint64_t v5 = sub_1B6BC0B60;
      goto LABEL_29;
    case 48:
      char v1 = (unint64_t *)&unk_1E9DD6AD8;
      uint64_t v2 = MEMORY[0x1E4FBC098];
      uint64_t v4 = sub_1B6BC0B60;
      goto LABEL_32;
    case 50:
      char v1 = (unint64_t *)&unk_1E9DD6AD0;
      uint64_t v2 = MEMORY[0x1E4FBC358];
      unsigned int v3 = sub_1B6BC0B0C;
LABEL_34:
      unint64_t v6 = (uint64_t (*)(void))v3;
      uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
      break;
    case 51:
      char v1 = (unint64_t *)&unk_1E9DD6AC8;
      uint64_t v2 = MEMORY[0x1E4FBC358];
      uint64_t v5 = sub_1B6BC0B0C;
LABEL_29:
      unint64_t v6 = (uint64_t (*)(void))v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      break;
    case 52:
      char v1 = (unint64_t *)&unk_1E9DD6AB8;
      uint64_t v2 = MEMORY[0x1E4FBC358];
      uint64_t v4 = sub_1B6BC0B0C;
LABEL_32:
      unint64_t v6 = (uint64_t (*)(void))v4;
      uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      break;
    default:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B6BBCE08);
  }
  sub_1B6BC0C60(0, v1, v6, v2, v7);
}

uint64_t sub_1B6BBCEEC()
{
  return sub_1B6E31BB8();
}

uint64_t sub_1B6BBCF7C()
{
  return sub_1B6E31B18();
}

uint64_t sub_1B6BBCFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return MEMORY[0x1F41873C8](a1, a4 + a2, a5 + a2, a6, a7);
}

id sub_1B6BBD014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return objc_msgSend(v7, sel_copyFromBuffer_sourceOffset_toBuffer_destinationOffset_size_, a1, a2, a4, a7 + a5, a3);
}

uint64_t sub_1B6BBD24C(uint64_t result)
{
  switch(result)
  {
    case 70:
      uint64_t result = 71;
      break;
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 209:
      return result;
    case 80:
      uint64_t result = 81;
      break;
    case 204:
      uint64_t result = 186;
      break;
    case 205:
      uint64_t result = 187;
      break;
    case 206:
      uint64_t result = 188;
      break;
    case 207:
      uint64_t result = 189;
      break;
    case 208:
      uint64_t result = 190;
      break;
    case 210:
      uint64_t result = 192;
      break;
    case 211:
      uint64_t result = 193;
      break;
    case 212:
      uint64_t result = 194;
      break;
    case 213:
      uint64_t result = 195;
      break;
    case 214:
      uint64_t result = 196;
      break;
    case 215:
      uint64_t result = 197;
      break;
    case 216:
      uint64_t result = 198;
      break;
    case 217:
      uint64_t result = 199;
      break;
    case 218:
      uint64_t result = 200;
      break;
    default:
      if (result == 10) {
        uint64_t result = 11;
      }
      break;
  }
  return result;
}

void sub_1B6BBD55C()
{
  qword_1E9E49710 = 500;
}

void sub_1B6BBD56C()
{
  qword_1E9E49718 = 520;
}

void sub_1B6BBD57C()
{
  qword_1E9E49720 = 505;
}

void sub_1B6BBD58C()
{
  qword_1E9E49728 = 525;
}

void sub_1B6BBD59C()
{
  qword_1E9E49730 = 502;
}

void sub_1B6BBD5AC()
{
  qword_1E9E49738 = 522;
}

void sub_1B6BBD5BC()
{
  qword_1E9E49740 = 506;
}

void sub_1B6BBD5CC()
{
  qword_1E9E49748 = 526;
}

uint64_t sub_1B6BBD5DC()
{
  return _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(*v0);
}

uint64_t sub_1B6BBD5E4()
{
  id v1 = objc_msgSend(v0, sel_pixelFormat);
  id v2 = objc_msgSend(v0, sel_width);
  id v3 = objc_msgSend(v0, sel_height);

  return sub_1B6367EB4((uint64_t)v2, (uint64_t)v3, 1, 0, (uint64_t)v1);
}

uint64_t sub_1B6BBD664(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_pixelFormat);
  id v4 = objc_msgSend(v1, sel_width);
  id v5 = objc_msgSend(v1, sel_height);
  id v6 = objc_msgSend(v1, sel_depth);

  return sub_1B6367EB4((uint64_t)v4, (uint64_t)v5, (uint64_t)v6, a1, (uint64_t)v3);
}

uint64_t sub_1B6BBD724()
{
  objc_msgSend(v0, sel_pixelFormat);
  objc_msgSend(v0, sel_mipmapLevelCount);

  return sub_1B6E32108();
}

uint64_t sub_1B6BBD79C()
{
  switch((unint64_t)objc_msgSend(v0, sel_textureType))
  {
    case 0uLL:
    case 5uLL:
      sub_1B6E328C8();
      sub_1B6E31948();
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)objc_msgSend(v0, sel_pixelFormat));
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_width);
      goto LABEL_6;
    case 2uLL:
      sub_1B6E328C8();
      sub_1B6E31948();
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)objc_msgSend(v0, sel_pixelFormat));
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_width);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_height);
      goto LABEL_6;
    case 7uLL:
      sub_1B6E328C8();
      sub_1B6E31948();
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)objc_msgSend(v0, sel_pixelFormat));
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_width);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_height);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_depth);
LABEL_6:
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_mipmapLevelCount);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      objc_msgSend(v0, sel_usage);
      type metadata accessor for MTLTextureUsage(0);
      sub_1B6E32B18();
      sub_1B6E31948();
      break;
    default:
      sub_1B6E31948();
      sub_1B6E33458();
      break;
  }
  return 0;
}

id sub_1B6BBDC04()
{
  sub_1B63989B8(0, (unint64_t *)&unk_1EB94A1D0);
  id v1 = (void *)swift_unknownObjectRetain();
  id v2 = sub_1B6BBFFB0(v1);
  objc_msgSend(v2, sel_setResourceOptions_, 0);
  objc_msgSend(v2, sel_setUsage_, 0);
  id v3 = objc_msgSend(objc_msgSend(v0, sel_device), sel_newTextureWithDescriptor_, v2);
  swift_unknownObjectRelease();
  sub_1B66483DC(&v6);
  id v4 = objc_msgSend(v0, sel_device);
  sub_1B6BBDEE0((void (*)(void))sub_1B6BC0C50);

  swift_unknownObjectRelease();
  return v3;
}

char *sub_1B6BBDD40(void *a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *((void *)&v24 + 1) = a4;
  *(void *)&long long v24 = a3;
  uint64_t v7 = (uint64_t)objc_msgSend(a2, sel_width);
  uint64_t v8 = (uint64_t)objc_msgSend(a2, sel_height);
  uint64_t v9 = (uint64_t)objc_msgSend(a2, sel_depth);
  id v10 = objc_msgSend(a2, sel_textureType);
  uint64_t v11 = 6;
  if (v10 != (id)5) {
    uint64_t v11 = 1;
  }
  uint64_t v27 = v11;
  id v28 = a2;
  uint64_t result = (char *)objc_msgSend(a2, sel_mipmapLevelCount);
  os_signpost_id_t v23 = result;
  if (result)
  {
    uint64_t v13 = 0;
    do
    {
      for (uint64_t i = 0; i != v27; ++i)
      {
        sub_1B638955C(v7, v8, v9, &v34);
        uint64_t v15 = v35;
        long long v16 = v34;
        long long v34 = v24;
        uint64_t v35 = a5;
        long long v32 = v16;
        uint64_t v33 = v15;
        long long v30 = v24;
        uint64_t v31 = a5;
        uint64_t result = (char *)objc_msgSend(a1, sel_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, v28, i, v13, &v34, &v32, a6, i, v13, &v30);
      }
      ++v13;
      if (v7 >= 0) {
        uint64_t v17 = v7;
      }
      else {
        uint64_t v17 = v7 + 1;
      }
      uint64_t v18 = v17 >> 1;
      if (v7 > 1) {
        uint64_t v7 = v18;
      }
      if (v8 >= 0) {
        uint64_t v19 = v8;
      }
      else {
        uint64_t v19 = v8 + 1;
      }
      uint64_t v20 = v19 >> 1;
      if (v8 > 1) {
        uint64_t v8 = v20;
      }
      if (v9 >= 0) {
        uint64_t v21 = v9;
      }
      else {
        uint64_t v21 = v9 + 1;
      }
      uint64_t v22 = v21 >> 1;
      if (v9 > 1) {
        uint64_t v9 = v22;
      }
    }
    while (v13 != v23);
  }
  return result;
}

uint64_t sub_1B6BBDEE0(void (*a1)(void))
{
  id v3 = objc_msgSend(objc_msgSend(v1, sel_newCommandQueue), sel_commandBuffer);
  id v4 = objc_msgSend(v3, sel_blitCommandEncoder);
  a1();
  objc_msgSend(v4, sel_endEncoding);
  objc_msgSend(v3, sel_commit);
  sub_1B6BBB94C();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t MTLClearColor.encode(to:)(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v3, v4);
  sub_1B6E33288();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v3, v4);
    sub_1B6E33288();
    sub_1B62C550C((uint64_t)v3, v4);
    sub_1B6E33288();
    sub_1B62C550C((uint64_t)v3, v4);
    sub_1B6E33288();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v3);
}

double MTLClearColor.init(from:)(void *a1)
{
  return sub_1B6BC0268(a1);
}

void sub_1B6BBE114(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1B6BC0268(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
}

uint64_t sub_1B6BBE144(void *a1)
{
  return MTLClearColor.encode(to:)(a1);
}

uint64_t MTLTextureType.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5C8], MEMORY[0x1E4FBBE60]);
}

uint64_t MTLTextureType.init(from:)(void *a1)
{
  return sub_1B6BBE26C(a1);
}

uint64_t sub_1B6BBE1BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6BBE328(a1, a2);
}

uint64_t sub_1B6BBE1D4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BBF78C(a1, a2, a3, MEMORY[0x1E4FBC5C8], MEMORY[0x1E4FBBE60]);
}

uint64_t MTLPixelFormat.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5C8], MEMORY[0x1E4FBBE60]);
}

uint64_t MTLPixelFormat.init(from:)(void *a1)
{
  return sub_1B6BBE26C(a1);
}

uint64_t sub_1B6BBE26C(void *a1)
{
  uint64_t v3 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C550C((uint64_t)v5, v6);
    uint64_t v3 = sub_1B6E33158();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1B6BBE328@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C550C((uint64_t)v7, v8);
  uint64_t v5 = sub_1B6E33158();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v5;
  return result;
}

uint64_t MTLTextureSwizzle.encode(to:)(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6E335E8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t MTLTextureSwizzle.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C14BC(v5, v5[3]);
    uint64_t v3 = sub_1B6E33538();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1B6BBE538@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(v7, v7[3]);
  char v5 = sub_1B6E33538();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v5;
  return result;
}

uint64_t MTLResourceOptions.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

unint64_t MTLResourceOptions.init(from:)(void *a1)
{
  return sub_1B6BC03D8(a1);
}

unint64_t sub_1B6BBE650@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1B6BC03D8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6BBE67C(void *a1)
{
  return sub_1B6BBE9C0(a1);
}

uint64_t MTLStorageMode.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

void *MTLStorageMode.init(from:)(void *a1)
{
  uint64_t v3 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C14BC(v6, v6[3]);
    uint64_t v4 = sub_1B6E33508();
    if (v4 == 1) {
      uint64_t v3 = 0;
    }
    else {
      uint64_t v3 = (void *)v4;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1B6BBE79C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(v8, v8[3]);
  uint64_t v5 = sub_1B6E33508();
  if (v5 == 1) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v5;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v7;
  return result;
}

uint64_t sub_1B6BBE868(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BBF78C(a1, a2, a3, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

uint64_t MTLTextureUsage.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

uint64_t MTLTextureUsage.init(from:)(void *a1)
{
  return sub_1B6BBF6D0(a1);
}

uint64_t sub_1B6BBE900@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(v7, v7[3]);
  uint64_t v5 = sub_1B6E33508();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1B6BBE9C0(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6E335B8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t MTLCPUCacheMode.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

uint64_t MTLCPUCacheMode.init(from:)(void *a1)
{
  return sub_1B6BBF6D0(a1);
}

uint64_t sub_1B6BBEAAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6BBE900(a1, a2);
}

uint64_t MTLCullMode.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

uint64_t MTLCullMode.init(from:)(void *a1)
{
  return sub_1B6BBF6D0(a1);
}

void *static MTLCullMode.allCases.getter()
{
  return &unk_1F0FAB4F8;
}

void sub_1B6BBEB28(void *a1@<X8>)
{
  *a1 = &unk_1F0FAB550;
}

uint64_t MTLWinding.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

uint64_t MTLWinding.init(from:)(void *a1)
{
  return sub_1B6BBF6D0(a1);
}

void *static MTLWinding.allCases.getter()
{
  return &unk_1F0FAB308;
}

void sub_1B6BBEB9C(void *a1@<X8>)
{
  *a1 = &unk_1F0FAB358;
}

uint64_t MTLHazardTrackingMode.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

uint64_t MTLHazardTrackingMode.init(from:)(void *a1)
{
  return sub_1B6BBF6D0(a1);
}

uint64_t sub_1B6BBEC04(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BBAE88(*a1, *a2);
}

uint64_t sub_1B6BBEC10()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BBECD4()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BBED80()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BBEE40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BC01B0();
  *a1 = result;
  return result;
}

void sub_1B6BBEE70(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 6579570;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6E65657267;
      goto LABEL_3;
    case 2:
      *a1 = 1702194274;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6168706C61;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B6BBEEF4()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6BBEF6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BC01B0();
  *a1 = result;
  return result;
}

uint64_t sub_1B6BBEF94(uint64_t a1)
{
  unint64_t v2 = sub_1B6BC049C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BBEFD0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BC049C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MTLTextureSwizzleChannels.encode(to:)(void *a1, int a2)
{
  sub_1B6BC0C60(0, &qword_1E9DD6A30, (uint64_t (*)(void))sub_1B6BC049C, (uint64_t)&_s10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  id v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BC049C();
  sub_1B6E33A88();
  char v20 = a2;
  char v19 = 0;
  type metadata accessor for MTLTextureSwizzle(0);
  sub_1B6BC0C08(&qword_1E9DD6A40, type metadata accessor for MTLTextureSwizzle);
  sub_1B6E32FA8();
  if (!v2)
  {
    char v18 = BYTE1(a2);
    char v17 = 1;
    sub_1B6E32FA8();
    char v16 = BYTE2(a2);
    char v15 = 2;
    sub_1B6E32FA8();
    char v14 = HIBYTE(a2);
    char v13 = 3;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t MTLTextureSwizzleChannels.init(from:)(void *a1)
{
  return sub_1B6BC04F0(a1);
}

uint64_t sub_1B6BBF288@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1B6BC04F0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6BBF2B4(void *a1)
{
  return MTLTextureSwizzleChannels.encode(to:)(a1, *v1);
}

uint64_t sub_1B6BBF2D0(uint64_t a1, uint64_t a2)
{
  MTLPixelFormatGetInfoForDevice();
  switch(a2)
  {
    case 3:
      uint64_t result = WORD1(v6) & 1;
      break;
    case 16:
      uint64_t result = (v6 >> 17) & 1;
      break;
    case 29:
      uint64_t result = (v6 >> 18) & 1;
      break;
    case 33:
      uint64_t result = (v6 >> 19) & 1;
      break;
    case 37:
      uint64_t result = (v6 >> 20) & 1;
      break;
    case 41:
      uint64_t result = (v6 >> 21) & 1;
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v6 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      type metadata accessor for MTLDataType(0);
      sub_1B6E32B18();
      sub_1B6E31948();
      int v4 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v5 = 0;
      swift_retain();
      sub_1B6B33E34(v4, &v5, 0, 0xE000000000000000);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = 0;
      break;
  }
  return result;
}

id sub_1B6BBF540()
{
  return objc_msgSend(v0, sel_supportsFeatureSet_, 11);
}

id sub_1B6BBF568()
{
  return objc_msgSend(v0, sel_supportsFamily_, 1001);
}

void sub_1B6BBF590(void *a1@<X8>)
{
  *a1 = &unk_1F0F54318;
}

void sub_1B6BBF5A0(void *a1@<X8>)
{
  *a1 = &unk_1F0F52380;
}

void *static MTLCompareFunction.allCases.getter()
{
  return &unk_1F0FACE30;
}

void sub_1B6BBF5BC(void *a1@<X8>)
{
  *a1 = &unk_1F0FACE30;
}

uint64_t MTLCompareFunction.encode(to:)(void *a1, uint64_t a2)
{
  return sub_1B6BBF60C(a1, a2, MEMORY[0x1E4FBC5D0], MEMORY[0x1E4FBBF40]);
}

uint64_t sub_1B6BBF60C(void *a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1B62C14BC(a1, v7);
  a3(v12, v7, v8);
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  sub_1B62C550C((uint64_t)v12, v13);
  a4(a2, v9, v10);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
}

uint64_t MTLCompareFunction.init(from:)(void *a1)
{
  return sub_1B6BBF6D0(a1);
}

uint64_t sub_1B6BBF6D0(void *a1)
{
  uint64_t v3 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C14BC(v5, v5[3]);
    uint64_t v3 = sub_1B6E33508();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1B6BBF78C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *v5;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  a4(v14, v9, v10);
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  sub_1B62C550C((uint64_t)v14, v15);
  a5(v8, v11, v12);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
}

void sub_1B6BBF838()
{
}

uint64_t sub_1B6BBFAE0(uint64_t a1)
{
  char v1 = a1;
  if ((~(_BYTE)a1 & 0xF) != 0)
  {
    if (!a1) {
      return 1701736270;
    }
    if ((a1 & 8) != 0)
    {
      sub_1B6E31948();
      if ((v1 & 4) == 0)
      {
LABEL_6:
        if ((v1 & 2) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((a1 & 4) == 0)
    {
      goto LABEL_6;
    }
    sub_1B6E31948();
    if ((v1 & 2) == 0)
    {
LABEL_7:
      if ((v1 & 1) == 0) {
        return 0;
      }
LABEL_8:
      sub_1B6E31948();
      return 0;
    }
LABEL_14:
    sub_1B6E31948();
    if ((v1 & 1) == 0) {
      return 0;
    }
    goto LABEL_8;
  }
  return 7105601;
}

uint64_t sub_1B6BBFC38(uint64_t a1)
{
  switch(a1)
  {
    case 3:
    case 4:
    case 5:
    case 6:
    case 16:
    case 17:
    case 18:
    case 19:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
      return 0x746E6174736E6F43;
    default:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B6BBFED8);
  }
}

id sub_1B6BBFFB0(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v2, sel_setTextureType_, objc_msgSend(a1, sel_textureType));
  objc_msgSend(v2, sel_setPixelFormat_, objc_msgSend(a1, sel_pixelFormat));
  objc_msgSend(v2, sel_setWidth_, objc_msgSend(a1, sel_width));
  objc_msgSend(v2, sel_setHeight_, objc_msgSend(a1, sel_height));
  objc_msgSend(v2, sel_setDepth_, objc_msgSend(a1, sel_depth));
  objc_msgSend(v2, sel_setMipmapLevelCount_, objc_msgSend(a1, sel_mipmapLevelCount));
  objc_msgSend(v2, sel_setSampleCount_, objc_msgSend(a1, sel_sampleCount));
  objc_msgSend(v2, sel_setArrayLength_, objc_msgSend(a1, sel_arrayLength));
  objc_msgSend(v2, sel_setCpuCacheMode_, objc_msgSend(a1, sel_cpuCacheMode));
  objc_msgSend(v2, sel_setStorageMode_, objc_msgSend(a1, sel_storageMode));
  objc_msgSend(v2, sel_setHazardTrackingMode_, objc_msgSend(a1, sel_hazardTrackingMode));
  objc_msgSend(v2, sel_setUsage_, objc_msgSend(a1, sel_usage));

  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1B6BC01B0()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6BC01FC(int32x4_t a1, int32x4_t a2)
{
  int32x4_t v2 = vaddq_s32(a2, a1);
  sub_1B638955C((v2.i32[0] - 1) / a2.i32[0], (v2.i32[1] - 1) / a2.i32[1], (v2.i32[2] - 1) / a2.i32[2], &v4);
  return v4;
}

double sub_1B6BC0268(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  sub_1B62C550C((uint64_t)v5, v6);
  sub_1B6E33128();
  double v3 = v2;
  sub_1B62C550C((uint64_t)v5, v6);
  sub_1B6E33128();
  sub_1B62C550C((uint64_t)v5, v6);
  sub_1B6E33128();
  sub_1B62C550C((uint64_t)v5, v6);
  sub_1B6E33128();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

unint64_t sub_1B6BC03D8(void *a1)
{
  unint64_t v3 = (unint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v1)
  {
    sub_1B62C14BC(v5, v5[3]);
    unint64_t v3 = sub_1B6E33508() & 0xFFFFFFFFFFFFFFEFLL;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

unint64_t sub_1B6BC049C()
{
  unint64_t result = qword_1E9DD6A38;
  if (!qword_1E9DD6A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A38);
  }
  return result;
}

uint64_t sub_1B6BC04F0(void *a1)
{
  sub_1B6BC0C60(0, &qword_1E9DD6B18, (uint64_t (*)(void))sub_1B6BC049C, (uint64_t)&_s10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v14 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BC049C();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  type metadata accessor for MTLTextureSwizzle(0);
  char v23 = 0;
  sub_1B6BC0C08(&qword_1E9DD6B20, type metadata accessor for MTLTextureSwizzle);
  sub_1B6E32DF8();
  int v9 = v24;
  char v21 = 1;
  sub_1B6E32DF8();
  int v16 = v9;
  int v10 = v22;
  char v19 = 2;
  sub_1B6E32DF8();
  int v15 = v10;
  int v11 = v20;
  char v17 = 3;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  int v12 = v18;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v16 | (v15 << 8) | (v11 << 16) | (v12 << 24);
}

uint64_t sub_1B6BC07B0()
{
  return sub_1B6BC0800(&qword_1E9DD6A48, (uint64_t)&unk_1E9DD6A50, (uint64_t)type metadata accessor for MTLCullMode, (void (*)(uint64_t))sub_1B6BC08F4);
}

uint64_t sub_1B6BC0800(unint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a4(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6BC0854()
{
  return sub_1B6BC0800(&qword_1E9DD6A58, (uint64_t)&unk_1E9DD6A60, (uint64_t)type metadata accessor for MTLWinding, (void (*)(uint64_t))sub_1B6BC08F4);
}

uint64_t sub_1B6BC08A4()
{
  return sub_1B6BC0800(&qword_1E9DD6A68, (uint64_t)&unk_1E9DD6A70, (uint64_t)type metadata accessor for MTLCompareFunction, (void (*)(uint64_t))sub_1B6BC08F4);
}

void sub_1B6BC08F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E31D18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_1B6BC095C()
{
  unint64_t result = qword_1E9DD6A78;
  if (!qword_1E9DD6A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A78);
  }
  return result;
}

unint64_t sub_1B6BC09B4()
{
  unint64_t result = qword_1E9DD6A80;
  if (!qword_1E9DD6A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A80);
  }
  return result;
}

unint64_t sub_1B6BC0A0C()
{
  unint64_t result = qword_1E9DD6A88;
  if (!qword_1E9DD6A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A88);
  }
  return result;
}

unint64_t sub_1B6BC0A64()
{
  unint64_t result = qword_1E9DD6A90;
  if (!qword_1E9DD6A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6A90);
  }
  return result;
}

unint64_t sub_1B6BC0AB8()
{
  unint64_t result = qword_1E9DD6AA0;
  if (!qword_1E9DD6AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6AA0);
  }
  return result;
}

unint64_t sub_1B6BC0B0C()
{
  unint64_t result = qword_1E9DD6AC0;
  if (!qword_1E9DD6AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6AC0);
  }
  return result;
}

unint64_t sub_1B6BC0B60()
{
  unint64_t result = qword_1E9DD6AE0;
  if (!qword_1E9DD6AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6AE0);
  }
  return result;
}

unint64_t sub_1B6BC0BB4()
{
  unint64_t result = qword_1E9DD6B00;
  if (!qword_1E9DD6B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6B00);
  }
  return result;
}

uint64_t sub_1B6BC0C08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1B6BC0C50(void *a1)
{
  return sub_1B6BBDD40(a1, *(id *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

void sub_1B6BC0C60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FilterMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BC0D94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterMode()
{
  return &type metadata for FilterMode;
}

ValueMetadata *type metadata accessor for AddressMode()
{
  return &type metadata for AddressMode;
}

uint64_t sub_1B6BC0E04()
{
  return sub_1B6BC0800(&qword_1E9DD6B28, (uint64_t)&unk_1E9DD6B30, (uint64_t)&type metadata for AddressMode, (void (*)(uint64_t))sub_1B6399A70);
}

uint64_t sub_1B6BC0E48()
{
  return sub_1B6BC0800(&qword_1E9DD6B38, (uint64_t)&unk_1E9DD6B40, (uint64_t)&type metadata for FilterMode, (void (*)(uint64_t))sub_1B6399A70);
}

unint64_t sub_1B6BC0E90()
{
  unint64_t result = qword_1E9DD6B48;
  if (!qword_1E9DD6B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6B48);
  }
  return result;
}

BOOL sub_1B6BC0EE4(void *a1)
{
  return sub_1B62EC480(a1);
}

uint64_t *sub_1B6BC0F00(void *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(_OWORD *)(a3 + 104);
  v75[0] = *(_OWORD *)(a3 + 88);
  v75[1] = v3;
  uint64_t v76 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v75, 0x200000000, v69);
  unint64_t result = (uint64_t *)sub_1B6309B40((uint64_t)v69, (uint64_t)v70);
  uint64_t v68 = (unsigned __int16 *)v70[0];
  if (v70[0])
  {
    uint64_t v57 = v74;
    if (v74 >= 1)
    {
      uint64_t v56 = v71;
      if (v71)
      {
        uint64_t v5 = 0;
        uint64_t v55 = v70[5];
        uint64_t v6 = v73[4];
        uint64_t v54 = v72;
        int v7 = *(unsigned __int8 *)(v72 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v51 = v73 + 8;
        uint64_t v67 = v70[0] + 41;
        int v52 = v7;
        char v82 = v73;
        uint64_t v53 = v6;
        do
        {
          uint64_t v8 = (unsigned int *)(v55 + 48 * v5);
          uint64_t v9 = *v8;
          uint64_t v10 = v8[1];
          uint64_t v11 = v8[2];
          uint64_t v12 = *((void *)v8 + 2);
          uint64_t v13 = *((void *)v8 + 3);
          uint64_t v14 = *((void *)v8 + 5);
          uint64_t v63 = v5;
          uint64_t v64 = *((void *)v8 + 4);
          if (v7)
          {
            int v15 = *(os_unfair_lock_s **)(v14 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          int v16 = v82;
          uint64_t v59 = v82[7];
          uint64_t v60 = v82[6];
          uint64_t v62 = v82[8];
          uint64_t v65 = v82[10];
          uint64_t v66 = v82[9];
          uint64_t v17 = v82[4];
          uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v16[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v16[7] = v18;
          v51[1] = 0;
          v51[2] = 0;
          *uint64_t v51 = 0;
          swift_release();
          v77[0] = v54;
          v77[1] = v14;
          uint64_t v61 = v14;
          v77[2] = v16;
          v77[3] = v11;
          v77[4] = (v10 - v9 + v11);
          v77[5] = v57;
          v77[6] = v9;
          char v19 = v16;
          v77[7] = v10;
          v77[8] = 0;
          v77[9] = 0;
          char v78 = 1;
          uint64_t v79 = v12;
          uint64_t v80 = v13;
          uint64_t v81 = v64;
          sub_1B6BC17F4(v77, a1);
          unint64_t v20 = v16[6];
          uint64_t v21 = v19[8];
          if (!v21)
          {
            uint64_t v47 = v19[7];
            uint64_t v48 = (void *)v19[4];
            uint64_t v50 = v62;
            uint64_t v49 = v63;
            goto LABEL_46;
          }
          for (uint64_t i = 0; i != v21; ++i)
          {
            unsigned __int8 v24 = (uint64_t *)(v20 + 48 * i);
            uint64_t v25 = *v24;
            uint64_t v26 = (void (*)(uint64_t))v24[4];
            uint64_t v27 = v19[9];
            if (v27) {
              BOOL v28 = v25 == v27;
            }
            else {
              BOOL v28 = 0;
            }
            if (v28 || !v68[11]) {
              goto LABEL_11;
            }
            unint64_t v29 = v68[9];
            long long v30 = (void *)(v67 + v68[8]);
            uint64_t v31 = v24[2];
            long long v32 = v30;
            unint64_t v33 = v29 >> 4;
            uint64_t v34 = v67;
            if (v29 >= 0x10)
            {
              while (*v32 != v25)
              {
                ++v34;
                v32 += 2;
                if (!--v33) {
                  goto LABEL_26;
                }
              }
              unsigned int v35 = *(unsigned __int8 *)(v34 + v68[10]);
              BOOL v36 = v35 > 5;
              int v37 = (1 << v35) & 0x23;
              if (v36 || v37 == 0)
              {
LABEL_11:
                uint64_t v23 = swift_retain();
                v26(v23);
                swift_release();
                goto LABEL_12;
              }
            }
LABEL_26:
            if (swift_conformsToProtocol2()) {
              uint64_t v39 = v31;
            }
            else {
              uint64_t v39 = 0;
            }
            if (v39)
            {
              if (v29 < 0x10) {
                goto LABEL_11;
              }
              char v40 = v30;
              unint64_t v41 = v29 >> 4;
              uint64_t v42 = v67;
              while (*v40 != v39)
              {
                ++v42;
                v40 += 2;
                if (!--v41) {
                  goto LABEL_39;
                }
              }
              unsigned int v43 = *(unsigned __int8 *)(v42 + v68[10]);
              BOOL v36 = v43 > 5;
              int v44 = (1 << v43) & 0x23;
              if (v36 || v44 == 0) {
                goto LABEL_11;
              }
LABEL_39:
              uint64_t v46 = 16 * (v29 >> 4);
              while (*v30 != v39)
              {
                v30 += 2;
                v46 -= 16;
                if (!v46) {
                  goto LABEL_11;
                }
              }
            }
LABEL_12:
            char v19 = v82;
          }
          uint64_t v47 = v82[7];
          unint64_t v20 = v82[6];
          uint64_t v48 = (void *)v82[4];
          uint64_t v50 = v62;
          uint64_t v49 = v63;
          if ((uint64_t)v82[8] >= 1) {
            swift_arrayDestroy();
          }
LABEL_46:
          ecs_stack_allocator_deallocate(v48, v20, 48 * v47);
          v19[6] = v60;
          v19[7] = v59;
          v19[8] = v50;
          v19[9] = v66;
          v19[10] = v65;
          sub_1B634507C((char *)v61);
          uint64_t v6 = v53;
          ecs_stack_allocator_pop_snapshot(v53);
          int v7 = v52;
          if (v52)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 376));
          }
          swift_release();
          uint64_t v5 = v49 + 1;
        }
        while (v5 != v56);
      }
    }
    return sub_1B632F170(v69);
  }
  return result;
}

uint64_t type metadata accessor for ParticleTargetFromPositionInit.System()
{
  return self;
}

uint64_t sub_1B6BC13A4(void *a1)
{
  long long v3 = v1;
  sub_1B6BC1CEC(0, &qword_1E9DD6B60, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BC1C98();
  sub_1B6E33A88();
  uint64_t v13 = *v3;
  HIBYTE(v12) = 0;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v13 = v3[1];
    HIBYTE(v12) = 1;
    sub_1B6E32FA8();
    uint64_t v13 = v3[2];
    HIBYTE(v12) = 2;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6BC15A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  swift_retain_n();
  unint64_t v4 = sub_1B6960360(v3);
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  unint64_t v11 = HIDWORD(v4);
  unint64_t v12 = HIDWORD(v8);
  if (v10) {
    int v13 = 0;
  }
  else {
    int v13 = v4;
  }
  if (v10)
  {
    LODWORD(v11) = 0;
    int v14 = 1065353216;
  }
  else
  {
    int v14 = v6;
  }
  if (v10) {
    int v15 = 1065353216;
  }
  else {
    int v15 = HIDWORD(v6);
  }
  if (v10) {
    int v16 = 0;
  }
  else {
    int v16 = v8;
  }
  if (v10) {
    LODWORD(v12) = 0;
  }
  v19[0] = v13;
  v19[1] = v11;
  v19[2] = v14;
  v19[3] = v15;
  v19[4] = v16;
  v19[5] = v12;
  uint64_t v17 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B6C01CFC(v17, v2, v2, (uint64_t)a1, (uint64_t)v19);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

const char *sub_1B6BC1690()
{
  return "ParticleTargetFromPositionInitSystem";
}

uint64_t sub_1B6BC16A4(uint64_t a1)
{
  unint64_t v2 = sub_1B6BC1C98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BC16E0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BC1C98();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6BC171C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6BC1A38(a1, &v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B6BC1760(void *a1)
{
  return sub_1B6BC13A4(a1);
}

uint64_t sub_1B6BC1778()
{
  return type metadata accessor for ParticleTargetFromPositionInit.System();
}

double sub_1B6BC1798()
{
  sub_1B62D2B64();
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for ParticleTarget;
  *(void *)(v0 + 40) = &off_1F0F64DE8;
  return result;
}

double sub_1B6BC17E0@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1B6E4F360;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1B6BC17F4(void *a1, void *a2)
{
  long long v5 = (uint64_t *)a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[2];
  uint64_t v9 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v5, v6, v7, v8);
  uint64_t result = sub_1B62C9024((uint64_t)&type metadata for ParticleTarget, (uint64_t)&off_1F0F64DE8, v5, v6, v7, v8);
  v14.i32[0] = *(_DWORD *)v2;
  float v15 = *(float *)(v2 + 4);
  if (*(float *)v2 == v15 && *(float *)(v2 + 8) == *(float *)(v2 + 12) && *(float *)(v2 + 16) == *(float *)(v2 + 20))
  {
    uint64_t v16 = a1[6];
    uint64_t v17 = a1[7] - v16;
    if (v17)
    {
      v14.i32[1] = *(_DWORD *)(v2 + 8);
      v14.i32[2] = *(_DWORD *)(v2 + 16);
      uint64_t v18 = 16 * v16;
      char v19 = (float32x4_t *)(result + 16 * v16);
      unint64_t v20 = (float32x4_t *)(v9 + v18);
      do
      {
        float32x4_t v21 = *v20++;
        float32x4_t v22 = vaddq_f32(v14, v21);
        v22.i32[3] = v11;
        *v19++ = v22;
        --v17;
      }
      while (v17);
    }
  }
  else
  {
    uint64_t v23 = a1[6];
    uint64_t v24 = a1[7] - v23;
    if (v24)
    {
      uint64_t v25 = a2[3];
      uint64_t v26 = a2[4];
      uint64_t v28 = a2[1];
      uint64_t v27 = a2[2];
      float v29 = v15 - v14.f32[0];
      float v30 = *(float *)(v2 + 8);
      float v31 = *(float *)(v2 + 12) - v30;
      float v32 = *(float *)(v2 + 16);
      float v33 = *(float *)(v2 + 20) - v32;
      uint64_t v34 = 16 * v23;
      unsigned int v35 = (float32x4_t *)(result + 16 * v23);
      BOOL v36 = (float32x4_t *)(v9 + v34);
      do
      {
        uint64_t v37 = v28 ^ v25;
        uint64_t v38 = v27 ^ v26;
        uint64_t v39 = v37 ^ v27;
        uint64_t v40 = v28 ^ v38;
        v13.f32[0] = (float)((9 * ((((unint64_t)(5 * v27) >> 32) >> 25) | (640 * v27))) & 0xFFFFFF)
                   * 0.000000059605;
        uint64_t v41 = v37 ^ (v27 << 17) ^ v40;
        uint64_t v42 = v39 ^ __ROR8__(v38, 19);
        uint64_t v43 = v41 ^ v39;
        uint64_t v44 = v42 ^ v40;
        float v45 = v31
            * (float)((float)((9 * ((((unint64_t)(5 * v39) >> 32) >> 25) | (640 * v39))) & 0xFFFFFF)
                    * 0.000000059605);
        v13.f32[0] = v14.f32[0] + (float)(v29 * v13.f32[0]);
        uint64_t v46 = v41 ^ (v39 << 17) ^ v44;
        uint64_t v47 = __ROR8__(v42, 19);
        v13.f32[1] = v30 + v45;
        uint64_t v27 = v46 ^ v43;
        v13.f32[2] = v32
                   + (float)(v33
                           * (float)((float)((9
                                            * ((((unint64_t)(5 * v43) >> 32) >> 25) | (640 * v43))) & 0xFFFFFF)
                                   * 0.000000059605));
        float32x4_t v48 = *v36++;
        float32x4_t v13 = vaddq_f32(v48, v13);
        uint64_t v28 = v43 ^ v47 ^ v44;
        v13.i32[3] = v12;
        uint64_t v26 = __ROR8__(v43 ^ v47, 19);
        uint64_t v25 = v46 ^ (v43 << 17);
        *v35++ = v13;
        --v24;
      }
      while (v24);
      a2[1] = v28;
      a2[2] = v27;
      a2[3] = v25;
      a2[4] = v26;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleTargetFromPositionInit()
{
  return &type metadata for ParticleTargetFromPositionInit;
}

uint64_t sub_1B6BC1A38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B6BC1CEC(0, &qword_1E9DD6B50, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)&v15 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BC1C98();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62AA858();
  HIBYTE(v15) = 0;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v11 = v16;
  HIBYTE(v15) = 1;
  sub_1B6E32DF8();
  uint64_t v12 = v16;
  HIBYTE(v15) = 2;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v13 = v16;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  return result;
}

unint64_t sub_1B6BC1C98()
{
  unint64_t result = qword_1E9DD6B58;
  if (!qword_1E9DD6B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6B58);
  }
  return result;
}

void sub_1B6BC1CEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6BC1C98();
    unint64_t v7 = a3(a1, &type metadata for ParticleTargetFromPositionInit.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleTargetFromPositionInit.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BC1E1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleTargetFromPositionInit.CodingKeys()
{
  return &type metadata for ParticleTargetFromPositionInit.CodingKeys;
}

unint64_t sub_1B6BC1E58()
{
  unint64_t result = qword_1E9DD6B68;
  if (!qword_1E9DD6B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6B68);
  }
  return result;
}

unint64_t sub_1B6BC1EB0()
{
  unint64_t result = qword_1E9DD6B70;
  if (!qword_1E9DD6B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6B70);
  }
  return result;
}

unint64_t sub_1B6BC1F08()
{
  unint64_t result = qword_1E9DD6B78;
  if (!qword_1E9DD6B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6B78);
  }
  return result;
}

uint64_t sub_1B6BC1F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1;
  char v15 = 0;
  if (qword_1E9DCC4A0 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1, a2);
  _OWORD v14[2] = v6;
  void v14[3] = a2;
  _DWORD v14[4] = a3;
  v14[5] = &v15;
  sub_1B68B7388((uint64_t)sub_1B6BC34E8, (uint64_t)v14, v7, v8, v9, MEMORY[0x1E4FBC860]);
  uint64_t v10 = sub_1B68C70AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = v10;
  uint64_t result = swift_bridgeObjectRelease();
  if (v15 == 1)
  {
    uint64_t v12 = *(void *)(a3 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
    if (*(void *)(v12 + 16))
    {
      id v13 = *(id *)(v12 + 32);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1B6BC20C4(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    swift_getObjectType();
    unint64_t v8 = sub_1B6B7286C();
    BOOL v10 = v9 == 0;
    if (v9) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
    BOOL v10 = 1;
  }
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                              + 8 * *(void *)thread_worker_index(&thread_worker_index, a2)
                              + 8)
                  + 32);
  uint64_t v13 = ecs_stack_allocator_push_snapshot(v12);
  MEMORY[0x1F4188790](v13, v14);
  v21[6] = a4;
  v21[7] = v11;
  BOOL v22 = v10;
  uint64_t v23 = a5;
  MEMORY[0x1F4188790](v15, v16);
  v21[2] = sub_1B6BC34C4;
  v21[3] = v17;
  unint64_t v18 = MEMORY[0x1E4FBC860];
  v24[0] = sub_1B68C967C(MEMORY[0x1E4FBC860]);
  v24[1] = v19;
  sub_1B68B9930((uint64_t)sub_1B678FEB4, (uint64_t)v21, 1, 0x1000000000000000uLL, 0, v18, v24);
  swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return ecs_stack_allocator_pop_snapshot(v12);
  }
  return result;
}

uint64_t sub_1B6BC2264(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (qword_1E9DCC4A0 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1, a2);
  v9[2] = v3;
  sub_1B68B7388((uint64_t)sub_1B6BC2BF0, (uint64_t)v9, v4, v5, v6, MEMORY[0x1E4FBC860]);
  uint64_t v7 = sub_1B68C70AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2[2] = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BC2388@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  type metadata accessor for EnumConstantNode(0);
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1B62C1550(v4 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value, (uint64_t)&v72);
    uint64_t v6 = v74;
    uint64_t v7 = v75;
    sub_1B62C14BC(&v72, v74);
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 48);
    swift_retain();
    uint64_t v9 = v8(v6, v7);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v72);
    v76[3] = MEMORY[0x1E4FBC1C8];
    v76[0] = v9;
    sub_1B62CAAD8((uint64_t)v76, (uint64_t)&v73);
    unint64_t v72 = 0x8000000000000040;
    type metadata accessor for ConstantNode(0);
    BOOL v10 = (void *)swift_allocObject();
    uint64_t v11 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
    sub_1B66506CC((uint64_t)&v72, (uint64_t)v10 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
    *(_OWORD *)((char *)v10 + v11) = xmmword_1B6E50D30;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    id v10[2] = MEMORY[0x1E4FBC860];
    v10[3] = 0;
    v10[4] = 0;
    uint64_t v13 = (char *)v10 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    sub_1B6E31108();
    sub_1B6650728((uint64_t)&v72);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v76);
    uint64_t v14 = v5 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    uint64_t v15 = sub_1B6E31118();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
    swift_retain();
    swift_release();
    uint64_t v16 = v10[3];
    v10[3] = v12;
    v10[4] = &unk_1F0F9F128;
    sub_1B678FE58(v16);
    uint64_t result = swift_release();
    *a2 = (uint64_t)v10;
    return result;
  }
  type metadata accessor for _ECSValueNode(0);
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v18 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
    uint64_t v21 = *(void *)(v18 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 32);
    swift_retain_n();
    if (!swift_conformsToProtocol2()) {
      uint64_t v21 = 0;
    }
    if (v21)
    {
      uint64_t v77 = a2;
      unint64_t v22 = *(void *)(v20 + 8);
      uint64_t v23 = *(void *)(v20 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v24 = sub_1B6BC33B8();
      if (v24)
      {
        uint64_t v25 = v24;
        unint64_t v72 = v22;
        uint64_t v73 = v23;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_release();
        swift_bridgeObjectRelease();
        *(void *)(v20 + 8) = v22;
        *(void *)(v20 + 16) = v23;
        uint64_t v26 = MEMORY[0x1E4FBC1C8];
        *(void *)(v20 + 24) = v25;
        *(void *)(v20 + 32) = v26;
        *(void *)(v20 + 40) = 0;
        *(unsigned char *)(v20 + 48) = 1;
        *(_WORD *)(v20 + 50) = 0;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        swift_bridgeObjectRelease();
        type metadata accessor for SetECSValueNode(0);
        if (swift_dynamicCastClass())
        {
          swift_retain();
          unint64_t v27 = sub_1B69C5080();
          uint64_t v28 = *(void **)(v19 + 24);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v19 + 24) = v28;
          float v30 = v77;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v28 = sub_1B6C16A20(v28);
            *(void *)(v19 + 24) = v28;
          }
          unint64_t v31 = v28[5];
          v28[5] = v27;
        }
        else
        {
          swift_retain();
          unint64_t v46 = sub_1B69C5080();
          uint64_t v47 = *(void **)(v19 + 32);
          char v48 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v19 + 32) = v47;
          float v30 = v77;
          if ((v48 & 1) == 0)
          {
            uint64_t v47 = sub_1B6C16A20(v47);
            *(void *)(v19 + 32) = v47;
          }
          unint64_t v31 = v47[4];
          v47[4] = v46;
        }
LABEL_58:
        sub_1B678FC34(v31);
        swift_release_n();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t *v30 = v19;
        return result;
      }
      goto LABEL_59;
    }
    uint64_t result = swift_release();
LABEL_29:
    *a2 = v3;
    return result;
  }
  type metadata accessor for _WorldValueNode(0);
  uint64_t v32 = swift_dynamicCastClass();
  if (!v32)
  {
    uint64_t v49 = *(void *)(v3 + 24);
    swift_retain();
    sub_1B68289A0(v49);
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void *)(v49 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v50)
    {
      uint64_t v51 = -v50;
      uint64_t v52 = 4;
      do
      {
        unint64_t v54 = *(void *)(*(void *)(v3 + 24) + 8 * v52);
        sub_1B68289A0(*(void *)(v3 + 24));
        sub_1B67C52A4(v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v55 = sub_1B69B18E4(v54, 0x8000000000000020);
        uint64_t result = sub_1B678FC34(v54);
        if (v55)
        {
          uint64_t v56 = *(void **)(v3 + 24);
          char v57 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v3 + 24) = v56;
          if ((v57 & 1) == 0)
          {
            uint64_t v56 = sub_1B6C16A20(v56);
            *(void *)(v3 + 24) = v56;
          }
          unint64_t v53 = v56[v52];
          v56[v52] = 0x8000000000000040;
          uint64_t result = sub_1B678FC34(v53);
        }
        ++v52;
      }
      while (v51 + v52 != 4);
    }
    uint64_t v58 = *(void *)(*(void *)(v3 + 32) + 16);
    if (v58)
    {
      uint64_t v59 = -v58;
      uint64_t v60 = 4;
      do
      {
        unint64_t v62 = *(void *)(*(void *)(v3 + 32) + 8 * v60);
        sub_1B68289A0(*(void *)(v3 + 24));
        sub_1B67C52A4(v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v63 = sub_1B69B18E4(v62, 0x8000000000000020);
        uint64_t result = sub_1B678FC34(v62);
        if (v63)
        {
          uint64_t v64 = *(void **)(v3 + 32);
          char v65 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v3 + 32) = v64;
          if ((v65 & 1) == 0)
          {
            uint64_t v64 = sub_1B6C16A20(v64);
            *(void *)(v3 + 32) = v64;
          }
          unint64_t v61 = v64[v60];
          v64[v60] = 0x8000000000000040;
          uint64_t result = sub_1B678FC34(v61);
        }
        ++v60;
      }
      while (v59 + v60 != 4);
    }
    goto LABEL_29;
  }
  uint64_t v19 = v32;
  uint64_t v33 = v32 + OBJC_IVAR____TtC3VFX15_WorldValueNode_scriptKeyPath;
  uint64_t v34 = *(void *)(v32 + OBJC_IVAR____TtC3VFX15_WorldValueNode_scriptKeyPath + 24);
  if (!swift_conformsToProtocol2()) {
    uint64_t v34 = 0;
  }
  if (!v34)
  {
    *a2 = v3;
    return swift_retain();
  }
  uint64_t v77 = a2;
  unint64_t v35 = *(void *)v33;
  uint64_t v36 = *(void *)(v33 + 8);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v37 = sub_1B6BC33B8();
  if (v37)
  {
    uint64_t v38 = v37;
    unint64_t v72 = v35;
    uint64_t v73 = v36;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v33 = v35;
    *(void *)(v33 + 8) = v36;
    uint64_t v39 = MEMORY[0x1E4FBC1C8];
    *(void *)(v33 + 16) = v38;
    *(void *)(v33 + 24) = v39;
    *(void *)(v33 + 32) = 0;
    *(unsigned char *)(v33 + 40) = 1;
    *(_WORD *)(v33 + 42) = 0;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    type metadata accessor for SetWorldValueNode(0);
    if (swift_dynamicCastClass())
    {
      uint64_t v40 = *(void *)(v33 + 24);
      if (swift_conformsToProtocol2()) {
        uint64_t v41 = v40;
      }
      else {
        uint64_t v41 = 0;
      }
      swift_retain();
      float v30 = v77;
      unint64_t v42 = 0x8000000000000020;
      if (!v41)
      {
        unint64_t v43 = sub_1B69B1CC4(v40);
        if ((~v43 & 0xF000000000000007) != 0) {
          unint64_t v42 = v43;
        }
        else {
          unint64_t v42 = 0x8000000000000000;
        }
      }
      uint64_t v44 = *(void **)(v19 + 24);
      char v45 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v19 + 24) = v44;
      if ((v45 & 1) == 0)
      {
        uint64_t v44 = sub_1B6C16A20(v44);
        *(void *)(v19 + 24) = v44;
      }
      unint64_t v31 = v44[5];
      v44[5] = v42;
    }
    else
    {
      type metadata accessor for GetWorldValueNode(0);
      swift_dynamicCastClass();
      uint64_t v66 = *(void *)(v33 + 24);
      if (swift_conformsToProtocol2()) {
        uint64_t v67 = v66;
      }
      else {
        uint64_t v67 = 0;
      }
      swift_retain();
      float v30 = v77;
      unint64_t v68 = 0x8000000000000020;
      if (!v67)
      {
        unint64_t v69 = sub_1B69B1CC4(v66);
        if ((~v69 & 0xF000000000000007) != 0) {
          unint64_t v68 = v69;
        }
        else {
          unint64_t v68 = 0x8000000000000000;
        }
      }
      unint64_t v70 = *(void **)(v19 + 32);
      char v71 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v19 + 32) = v70;
      if ((v71 & 1) == 0)
      {
        unint64_t v70 = sub_1B6C16A20(v70);
        *(void *)(v19 + 32) = v70;
      }
      unint64_t v31 = v70[4];
      v70[4] = v68;
    }
    goto LABEL_58;
  }
LABEL_59:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6BC2BF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6BC2388(a1, a2);
}

void sub_1B6BC2C0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v12 = sub_1B6E31118();
  uint64_t v43 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 8);
  type metadata accessor for _WorldValueNode(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (v17)
  {
    uint64_t v18 = v17;
    unint64_t v42 = a5;
    char v45 = a6;
    v50[5] = v6;
    uint64_t v19 = v17 + OBJC_IVAR____TtC3VFX15_WorldValueNode_target;
    sub_1B6BC3508(v17 + OBJC_IVAR____TtC3VFX15_WorldValueNode_target, (uint64_t)v50);
    uint64_t v20 = v50[0];
    uint64_t v21 = v50[1];
    swift_retain();
    sub_1B6BC35C4((uint64_t)v50);
    if (v20 || v21 != 1) {
      goto LABEL_6;
    }
    if (a2)
    {
      uint64_t v47 = 0;
      swift_unknownObjectWeakInit();
      uint64_t v47 = a3;
      swift_unknownObjectWeakAssign();
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
      swift_unknownObjectRetain();
      uint64_t v24 = v23(ObjectType, a3);
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
      uint64_t v48 = v24;
      uint64_t v49 = v26;
      sub_1B6649008((uint64_t)v46, (uint64_t)v50);
      sub_1B6BC3620((uint64_t)v50, v19);
LABEL_6:
      *char v45 = v18;
      return;
    }
    uint64_t v27 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v15, v16 + OBJC_IVAR____TtC3VFX4Node_authoringID, v12);
    uint64_t v28 = (int *)type metadata accessor for GraphError();
    sub_1B683DB30();
    float v29 = (void *)swift_allocError();
    unint64_t v31 = v30;
    void *v30 = 0;
    uint64_t v32 = (char *)v30 + v28[5];
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v32, v15, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v32, 0, 1, v12);
    uint64_t v33 = (char *)v31 + v28[6];
    *(void *)uint64_t v33 = 2;
    v33[8] = -96;
    *(_OWORD *)((char *)v31 + v28[7]) = xmmword_1B6EB0D30;
    uint64_t v34 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
    uint64_t v35 = v44;
    uint64_t v36 = *(void **)(v44 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
    id v37 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v35 + v34) = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v36 = sub_1B68C1084(0, v36[2] + 1, 1, v36);
      *(void *)(v35 + v34) = v36;
    }
    unint64_t v40 = v36[2];
    unint64_t v39 = v36[3];
    uint64_t v41 = v45;
    if (v40 >= v39 >> 1)
    {
      uint64_t v36 = sub_1B68C1084(v39 > 1, v40 + 1, 1, v36);
      *(void *)(v35 + v34) = v36;
    }
    v36[2] = v40 + 1;
    v36[v40 + 4] = v29;

    *unint64_t v42 = 1;
    *uint64_t v41 = v18;
  }
  else
  {
    *a6 = v16;
    swift_retain();
  }
}

unint64_t sub_1B6BC2F70(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v62 = a3;
  uint64_t v61 = a2;
  uint64_t v10 = sub_1B6E31118();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(uint64_t **)(a1 + 8);
  unint64_t result = swift_conformsToProtocol2();
  if (result) {
    unint64_t v17 = result;
  }
  else {
    unint64_t v17 = 0;
  }
  if (result) {
    uint64_t v18 = v15;
  }
  else {
    uint64_t v18 = 0;
  }
  if (!v18) {
    return result;
  }
  uint64_t v52 = v14;
  uint64_t v53 = v11;
  uint64_t v54 = v10;
  uint64_t v55 = a5;
  uint64_t v19 = *v18;
  uint64_t v20 = *(uint64_t (**)(uint64_t, unint64_t))(v17 + 32);
  swift_retain();
  uint64_t v21 = v20(v19, v17);
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
LABEL_14:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v56 = v15;
  uint64_t v57 = v6;
  int v60 = a4 & 1;
  uint64_t v59 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  uint64_t v23 = 32;
  uint64_t v58 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
  while (1)
  {
    unint64_t v24 = *(void *)(v21 + v23);
    if ((v24 >> 60) - 9 >= 2) {
      break;
    }
LABEL_10:
    v23 += 32;
    if (!--v22) {
      goto LABEL_14;
    }
  }
  uint64_t v25 = (void *)v58(&thread_worker_index);
  uint64_t v26 = *(void *)(*(void *)(v61 + v59) + 8 * *v25 + 8);
  sub_1B62C6AA8(v24);
  sub_1B62C6AA8(v24);
  uint64_t v27 = sub_1B62C6B10(v24, 1, 0, 1, v62, v60, v26, 0);
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  unsigned __int8 v33 = v32;
  unsigned int v34 = v32;
  sub_1B62C6A70(v24);
  if (v34 < 0xFC)
  {
    sub_1B62CCEE8(v27, v29, v31, v33);
    sub_1B62C6A70(v24);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = v52;
  uint64_t v35 = v53;
  uint64_t v37 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, (uint64_t)v56 + OBJC_IVAR____TtC3VFX4Node_authoringID, v54);
  uint64_t v38 = (int *)type metadata accessor for GraphError();
  sub_1B683DB30();
  unint64_t v39 = (void *)swift_allocError();
  uint64_t v41 = v40;
  *unint64_t v40 = 0;
  unint64_t v42 = (char *)v40 + v38[5];
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v42, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v42, 0, 1, v37);
  uint64_t v43 = (char *)v41 + v38[6];
  *(void *)uint64_t v43 = 0;
  v43[8] = -127;
  uint64_t v44 = (void *)((char *)v41 + v38[7]);
  *uint64_t v44 = 0xD000000000000012;
  v44[1] = 0x80000001B6F4C1A0;
  uint64_t v45 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
  uint64_t v46 = v55;
  uint64_t v47 = *(void **)(v55 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
  id v48 = v39;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v46 + v45) = v47;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v47 = sub_1B68C1084(0, v47[2] + 1, 1, v47);
    *(void *)(v46 + v45) = v47;
  }
  unint64_t v51 = v47[2];
  unint64_t v50 = v47[3];
  if (v51 >= v50 >> 1)
  {
    uint64_t v47 = sub_1B68C1084(v50 > 1, v51 + 1, 1, v47);
    *(void *)(v46 + v45) = v47;
  }
  v47[2] = v51 + 1;
  v47[v51 + 4] = v39;
  swift_release();

  return sub_1B62C6A70(v24);
}

uint64_t sub_1B6BC33B8()
{
  swift_getKeyPath();
  sub_1B6E32768();
  uint64_t v0 = sub_1B6E32CB8();
  swift_release();
  return v0;
}

uint64_t sub_1B6BC3420@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 48))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_1B6BC3468(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 56))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B6BC34AC()
{
  return 16;
}

__n128 sub_1B6BC34B8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1B6BC34C4(uint64_t a1)
{
  return sub_1B6BC2F70(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1B6BC34E8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B6BC2C0C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char **)(v2 + 40), a2);
}

uint64_t sub_1B6BC3508(uint64_t a1, uint64_t a2)
{
  sub_1B6BC356C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B6BC356C()
{
  if (!qword_1E9DD5CE0)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5CE0);
    }
  }
}

uint64_t sub_1B6BC35C4(uint64_t a1)
{
  sub_1B6BC356C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B6BC3620(uint64_t a1, uint64_t a2)
{
  sub_1B6BC356C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_1B6BC3684@<D0>(void *a1@<X8>)
{
  sub_1B6BC38BC();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 32) = sub_1B67F45A8(MEMORY[0x1E4FBC860]);
  *(void *)(v2 + 40) = sub_1B67F45A8(v3);
  *(void *)(v2 + 48) = sub_1B67F45A8(v3);
  double result = 0.00781250183;
  *a1 = 0x3F8000003F000000;
  a1[1] = v2;
  return result;
}

uint64_t type metadata accessor for FluidSpheresRenderSystem()
{
  return self;
}

const char *sub_1B6BC3730()
{
  return "FluidSpheresRender";
}

uint64_t type metadata accessor for FluidAbsorbRenderSystem()
{
  return self;
}

const char *sub_1B6BC3768()
{
  return "FluidAbsorbRender";
}

uint64_t type metadata accessor for FluidBlurRenderSystem()
{
  return self;
}

const char *sub_1B6BC37A0()
{
  return "FluidBlur";
}

uint64_t type metadata accessor for FluidCompositeRenderSystem()
{
  return self;
}

const char *sub_1B6BC37D8()
{
  return "FluidCompositeRender";
}

void *initializeBufferWithCopyOfBuffer for FluidRenderSystemState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FluidRenderSystemState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FluidRenderSystemState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FluidRenderSystemState()
{
  return &type metadata for FluidRenderSystemState;
}

void sub_1B6BC38BC()
{
  if (!qword_1E9DD6B80)
  {
    sub_1B6BC3914();
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6B80);
    }
  }
}

void sub_1B6BC3914()
{
  if (!qword_1E9DD6B88)
  {
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6B88);
    }
  }
}

uint64_t sub_1B6BC3980(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74616F6C66 && a2 == 0xE500000000000000
    || (sub_1B6E334B8() & 1) != 0
    || a1 == 0x323374616F6C66 && a2 == 0xE700000000000000
    || (sub_1B6E334B8() & 1) != 0)
  {
    return 28;
  }
  if (a1 == 0x7261686375 && a2 == 0xE500000000000000) {
    return 45;
  }
  char v5 = sub_1B6E334B8();
  BOOL v7 = a1 == 0x38746E6975 && a2 == 0xE500000000000000;
  uint64_t result = 45;
  if ((v5 & 1) == 0 && !v7)
  {
    if (sub_1B6E334B8()) {
      return 45;
    }
    if (a1 == 1918986339 && a2 == 0xE400000000000000) {
      return 46;
    }
    char v8 = sub_1B6E334B8();
    BOOL v9 = a1 == 947154537 && a2 == 0xE400000000000000;
    BOOL v10 = v9;
    uint64_t result = 46;
    if ((v8 & 1) == 0 && !v10)
    {
      if (sub_1B6E334B8()) {
        return 46;
      }
      if (a1 == 0x74726F687375 && a2 == 0xE600000000000000) {
        return 49;
      }
      char v11 = sub_1B6E334B8();
      BOOL v12 = a1 == 0x3631746E6975 && a2 == 0xE600000000000000;
      BOOL v13 = v12;
      uint64_t result = 49;
      if ((v11 & 1) == 0 && !v13)
      {
        if (sub_1B6E334B8()) {
          return 49;
        }
        if (a1 == 0x74726F6873 && a2 == 0xE500000000000000) {
          return 50;
        }
        char v14 = sub_1B6E334B8();
        BOOL v15 = a1 == 0x3631746E69 && a2 == 0xE500000000000000;
        BOOL v16 = v15;
        uint64_t result = 50;
        if ((v14 & 1) == 0 && !v16)
        {
          if (sub_1B6E334B8()) {
            return 50;
          }
          if (a1 == 1953393013 && a2 == 0xE400000000000000) {
            return 36;
          }
          char v17 = sub_1B6E334B8();
          BOOL v18 = a1 == 0x3233746E6975 && a2 == 0xE600000000000000;
          BOOL v19 = v18;
          uint64_t result = 36;
          if ((v17 & 1) == 0 && !v19)
          {
            if (sub_1B6E334B8()) {
              return 36;
            }
            if (a1 == 7630441 && a2 == 0xE300000000000000) {
              return 32;
            }
            char v20 = sub_1B6E334B8();
            BOOL v22 = a1 == 0x3233746E69 && a2 == 0xE500000000000000;
            uint64_t result = 32;
            if ((v20 & 1) == 0 && !v22)
            {
              if ((sub_1B6E334B8() & 1) == 0)
              {
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              return 32;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B6BC3E04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v8 = *a8;
  if (!*(void *)(*a8 + 16)) {
    return result;
  }
  uint64_t v15 = result;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B62B2CE0(v15, a2);
  if (v17)
  {
    BOOL v18 = (void **)(*(void *)(v8 + 56) + 32 * v16);
    BOOL v19 = *v18;
    char v20 = v18[3];
    uint64_t v64 = (uint64_t)v18[2];
    uint64_t v65 = (uint64_t)v18[1];
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (v20 != (void *)28 || (uint64_t v21 = *a8, !*(void *)(*a8 + 16)))
    {
LABEL_20:
      return swift_unknownObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1B62B2CE0(a3, a4);
    if (v23)
    {
      char v63 = v19;
      unint64_t v24 = (void **)(*(void *)(v21 + 56) + 32 * v22);
      uint64_t v25 = *v24;
      uint64_t v26 = v24[3];
      uint64_t v61 = (uint64_t)v24[2];
      uint64_t v62 = (uint64_t)v24[1];
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      if (v26 == (void *)28)
      {
        int v60 = v25;
        unint64_t v27 = a8[3];
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        sub_1B6E31948();
        uint64_t v28 = sub_1B6C8A814(v27, 29);
        uint64_t v59 = v29;
        uint64_t v58 = v30;
        uint64_t v32 = v31;
        swift_bridgeObjectRelease();
        if (v28)
        {
          uint64_t v57 = sub_1B6C8AA54(v63, v65, v64, 28);
          unsigned __int8 v33 = sub_1B6C8AA54(v60, v62, v61, 28);
          unsigned int v34 = (void *)v28;
          uint64_t v35 = (float32x4_t *)v33;
          uint64_t v66 = (uint64_t)v34;
          uint64_t v36 = sub_1B6C8AAF4(v34, v59, v58, v32);
          if (v27)
          {
            if (v27 >= 0x18)
            {
              unint64_t v37 = 0;
              uint64_t v47 = 8 * (v27 - 1);
              if (&v36[v47] >= v36 && &v36[v47 + 4] >= v36 + 4 && !((v27 - 1) >> 61))
              {
                unint64_t v37 = 0;
                id v48 = &v36[8 * v27];
                BOOL v49 = &v35->f32[v27] > (float32_t *)v36 && v48 > (char *)v35;
                BOOL v50 = v49;
                if ((v48 <= v57 || &v57[4 * v27] <= v36) && !v50)
                {
                  unint64_t v37 = v27 & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v52 = (float *)(v36 + 32);
                  uint64_t v53 = (float32x4_t *)(v57 + 16);
                  uint64_t v54 = v35 + 1;
                  unint64_t v55 = v27 & 0xFFFFFFFFFFFFFFF8;
                  do
                  {
                    v69.val[0] = v53[-1];
                    v70.val[0] = *v53;
                    v69.val[1] = v54[-1];
                    v70.val[1] = *v54;
                    uint64_t v56 = v52 - 8;
                    vst2q_f32(v56, v69);
                    vst2q_f32(v52, v70);
                    v52 += 16;
                    v53 += 2;
                    v54 += 2;
                    v55 -= 8;
                  }
                  while (v55);
                  if (v27 == v37) {
                    goto LABEL_13;
                  }
                }
              }
            }
            else
            {
              unint64_t v37 = 0;
            }
            uint64_t v38 = &v36[8 * v37 + 4];
            unint64_t v39 = v27 - v37;
            uint64_t v40 = 4 * v37;
            uint64_t v41 = &v35->i32[v37];
            unint64_t v42 = &v57[v40];
            do
            {
              int v43 = *(_DWORD *)v42;
              v42 += 4;
              int v44 = v43;
              int v45 = *v41++;
              *((_DWORD *)v38 - 1) = v44;
              *(_DWORD *)uint64_t v38 = v45;
              v38 += 8;
              --v39;
            }
            while (v39);
          }
LABEL_13:
          swift_bridgeObjectRetain();
          sub_1B67E381C(v15, a2);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRetain();
          sub_1B67E381C(a3, a4);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v67 = *a8;
          *a8 = 0x8000000000000000;
          sub_1B67E9180(v66, v59, v58, v32, a5, a6, isUniquelyReferenced_nonNull_native);
          *a8 = v67;
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    swift_unknownObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BC4224(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  if ((a9 & 0xFFFFFFFFFFFFFFFELL) != 0x1E)
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  uint64_t v11 = *a11;
  if (*(void *)(*a11 + 16))
  {
    uint64_t v17 = result;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1B62B2CE0(v17, a2);
    if (v19)
    {
      uint64_t v97 = a5;
      char v20 = (void **)(*(void *)(v11 + 56) + 32 * v18);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[3];
      uint64_t v94 = (uint64_t)v20[2];
      uint64_t v95 = (uint64_t)v20[1];
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      if (v22 != (void *)28) {
        goto LABEL_26;
      }
      uint64_t v96 = v21;
      uint64_t v23 = *a11;
      if (!*(void *)(*a11 + 16)) {
        goto LABEL_26;
      }
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1B62B2CE0(a3, a4);
      if (v25)
      {
        uint64_t v26 = (void **)(*(void *)(v23 + 56) + 32 * v24);
        unint64_t v27 = *v26;
        uint64_t v28 = v26[3];
        uint64_t v92 = (uint64_t)v26[2];
        uint64_t v93 = (uint64_t)v26[1];
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if (v28 != (void *)28 || (uint64_t v29 = *a11, !*(void *)(*a11 + 16)))
        {
LABEL_25:
          swift_unknownObjectRelease();
LABEL_26:
          return swift_unknownObjectRelease();
        }
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1B62B2CE0(v97, a6);
        if (v31)
        {
          uint64_t v91 = v27;
          uint64_t v32 = (void **)(*(void *)(v29 + 56) + 32 * v30);
          unsigned __int8 v33 = *v32;
          unsigned int v34 = v32[3];
          uint64_t v88 = (uint64_t)v32[2];
          uint64_t v89 = (uint64_t)v32[1];
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          if (v34 == (void *)28)
          {
            uint64_t v90 = v33;
            uint64_t v35 = a11[3];
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            sub_1B6E31948();
            unint64_t v83 = v35;
            uint64_t v36 = sub_1B6C8A814(v35, a9);
            uint64_t v86 = v38;
            uint64_t v87 = v37;
            uint64_t v85 = v39;
            swift_bridgeObjectRelease();
            uint64_t v84 = (void *)v36;
            if (v36)
            {
              uint64_t v40 = sub_1B6C8AA54(v96, v95, v94, 28);
              uint64_t v41 = sub_1B6C8AA54(v91, v93, v92, 28);
              unint64_t v42 = sub_1B6C8AA54(v90, v89, v88, 28);
              if (a9 == 31)
              {
                uint64_t v57 = v42;
                uint64_t v58 = sub_1B6C8AC3C(v84, v87, v86, v85);
                unint64_t v59 = v83;
                if (v83)
                {
                  int v60 = v57;
                  __asm { FMOV            V0.4S, #1.0 }
                  do
                  {
                    HIDWORD(v66) = HIDWORD(_Q0);
                    LODWORD(v66) = *(_DWORD *)v40;
                    v40 += 4;
                    DWORD1(v66) = *(_DWORD *)v41;
                    v41 += 4;
                    DWORD2(v66) = *(_DWORD *)v60;
                    v60 += 4;
                    *(_OWORD *)uint64_t v58 = v66;
                    v58 += 16;
                    --v59;
                  }
                  while (v59);
                }
                goto LABEL_35;
              }
              if (a9 == 30)
              {
                int v43 = (float32x4_t *)v42;
                int v44 = sub_1B6C8AB94(v84, v87, v86, v85);
                if (v83)
                {
                  if (v83 >= 0x1C)
                  {
                    unint64_t v45 = 0;
                    BOOL v68 = !is_mul_ok(v83 - 1, 0xCuLL);
                    uint64_t v69 = 12 * (v83 - 1);
                    if (&v44[v69 + 4] >= v44 + 4
                      && !v68
                      && &v44[v69 + 8] >= v44 + 8
                      && !v68
                      && &v44[v69] >= v44
                      && !v68)
                    {
                      unint64_t v45 = 0;
                      float32x4x2_t v70 = &v44[12 * v83];
                      BOOL v71 = &v41[4 * v83] > v44 && v70 > v41;
                      BOOL v72 = v71;
                      BOOL v73 = &v43->f32[v83] > (float32_t *)v44 && v70 > (char *)v43;
                      BOOL v74 = v73;
                      if ((v70 <= v40 || &v40[4 * v83] <= v44) && !v72 && !v74)
                      {
                        unint64_t v45 = v83 & 0xFFFFFFFFFFFFFFF8;
                        uint64_t v76 = (float32x4_t *)(v40 + 16);
                        uint64_t v77 = (float32x4_t *)(v41 + 16);
                        char v78 = v43 + 1;
                        unint64_t v79 = v83 & 0xFFFFFFFFFFFFFFF8;
                        uint64_t v80 = (float *)v44;
                        do
                        {
                          v102.val[0] = v76[-1];
                          v103.val[0] = *v76;
                          v102.val[1] = v77[-1];
                          v103.val[1] = *v77;
                          v102.val[2] = v78[-1];
                          v103.val[2] = *v78;
                          uint64_t v81 = v80 + 24;
                          vst3q_f32(v80, v102);
                          char v82 = v80 + 12;
                          vst3q_f32(v82, v103);
                          v76 += 2;
                          v77 += 2;
                          v78 += 2;
                          uint64_t v80 = v81;
                          v79 -= 8;
                        }
                        while (v79);
                        if (v83 == v45) {
                          goto LABEL_35;
                        }
                      }
                    }
                  }
                  else
                  {
                    unint64_t v45 = 0;
                  }
                  uint64_t v46 = 4 * v45;
                  uint64_t v47 = &v40[4 * v45];
                  id v48 = &v41[4 * v45];
                  unint64_t v49 = v83 - v45;
                  BOOL v50 = &v44[12 * v45 + 4];
                  unint64_t v51 = (__int32 *)((char *)v43 + v46);
                  do
                  {
                    int v52 = *(_DWORD *)v47;
                    v47 += 4;
                    int v53 = v52;
                    int v54 = *(_DWORD *)v48;
                    v48 += 4;
                    int v55 = v54;
                    int v56 = *v51++;
                    *((_DWORD *)v50 - 1) = v53;
                    *(_DWORD *)BOOL v50 = v55;
                    *((_DWORD *)v50 + 1) = v56;
                    v50 += 12;
                    --v49;
                  }
                  while (v49);
                }
              }
LABEL_35:
              swift_bridgeObjectRetain();
              sub_1B67E381C(v17, a2);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRetain();
              sub_1B67E381C(a3, a4);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRetain();
              sub_1B67E381C(v97, a6);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v100 = *a11;
              *a11 = 0x8000000000000000;
              sub_1B67E9180((uint64_t)v84, v87, v86, v85, a7, a8, isUniquelyReferenced_nonNull_native);
              *a11 = v100;
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            goto LABEL_26;
          }
          swift_unknownObjectRelease();
          goto LABEL_25;
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6BC47F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v12 = *a12;
  if (!*(void *)(*a12 + 16)) {
    return result;
  }
  uint64_t v18 = result;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B62B2CE0(v18, a2);
  if ((v20 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v21 = (void **)(*(void *)(v12 + 56) + 32 * v19);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[3];
  uint64_t v70 = (uint64_t)v21[2];
  uint64_t v71 = (uint64_t)v21[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (v23 != (void *)28 || (v69 = v22, uint64_t v24 = *a12, !*(void *)(*a12 + 16)))
  {
LABEL_28:
    return swift_unknownObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1B62B2CE0(a3, a4);
  if ((v26 & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  unint64_t v27 = (void **)(*(void *)(v24 + 56) + 32 * v25);
  uint64_t v28 = *v27;
  uint64_t v29 = v27[3];
  uint64_t v65 = (uint64_t)v27[2];
  uint64_t v67 = (uint64_t)v27[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (v29 != (void *)28 || (uint64_t v30 = *a12, !*(void *)(*a12 + 16)))
  {
    swift_unknownObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1B62B2CE0(a5, a6);
  if (v32)
  {
    unsigned __int8 v33 = (void **)(*(void *)(v30 + 56) + 32 * v31);
    unsigned int v34 = *v33;
    uint64_t v61 = (uint64_t)v33[2];
    uint64_t v62 = (uint64_t)v33[1];
    char v63 = v33[3];
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (v63 == (void *)28 && (v64 = v34, uint64_t v35 = *a12, *(void *)(*a12 + 16)))
    {
      int v60 = v28;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1B62B2CE0(a7, a8);
      if (v37)
      {
        uint64_t v38 = *(void *)(v35 + 56) + 32 * v36;
        uint64_t v39 = *(void *)(v38 + 24);
        uint64_t v57 = *(void *)(v38 + 16);
        uint64_t v58 = *(void *)(v38 + 8);
        unint64_t v59 = *(void **)v38;
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if (v39 == 28)
        {
          uint64_t v40 = a12[3];
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          sub_1B6E31948();
          uint64_t v54 = v40;
          uint64_t v41 = sub_1B6C8A814(v40, 31);
          uint64_t v43 = v42;
          uint64_t v55 = v45;
          uint64_t v56 = v44;
          swift_bridgeObjectRelease();
          if (v41)
          {
            BOOL v72 = sub_1B6C8AA54(v69, v71, v70, 28);
            BOOL v68 = sub_1B6C8AA54(v60, v67, v65, 28);
            uint64_t v66 = v43;
            uint64_t v46 = (void *)v41;
            uint64_t v47 = sub_1B6C8AA54(v64, v62, v61, 28);
            id v48 = sub_1B6C8AA54(v59, v58, v57, 28);
            unint64_t v49 = sub_1B6C8AC3C(v46, v66, v56, v55);
            BOOL v50 = v68;
            for (uint64_t i = v54; i; --i)
            {
              LODWORD(v52) = *(_DWORD *)v72;
              v72 += 4;
              DWORD1(v52) = *(_DWORD *)v50;
              v50 += 4;
              DWORD2(v52) = *(_DWORD *)v47;
              v47 += 4;
              HIDWORD(v52) = *(_DWORD *)v48;
              v48 += 4;
              *(_OWORD *)unint64_t v49 = v52;
              v49 += 16;
            }
            swift_bridgeObjectRetain();
            sub_1B67E381C(v18, a2);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRetain();
            sub_1B67E381C(a3, a4);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRetain();
            sub_1B67E381C(a5, a6);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRetain();
            sub_1B67E381C(a7, a8);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v75 = *a12;
            *a12 = 0x8000000000000000;
            sub_1B67E9180((uint64_t)v46, v66, v56, v55, a9, a10, isUniquelyReferenced_nonNull_native);
            *a12 = v75;
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    goto LABEL_28;
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
LABEL_18:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BC4CF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v12 = *a12;
  if (!*(void *)(*a12 + 16)) {
    return result;
  }
  uint64_t v18 = result;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B62B2CE0(v18, a2);
  if ((v20 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v21 = (void **)(*(void *)(v12 + 56) + 32 * v19);
  uint64_t v22 = *v21;
  uint64_t v98 = (uint64_t)v21[1];
  uint64_t v23 = v21[3];
  uint64_t v94 = (uint64_t)v21[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (v23 != (void *)45 || (v93 = v22, uint64_t v24 = *a12, !*(void *)(*a12 + 16)))
  {
LABEL_24:
    return swift_unknownObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1B62B2CE0(a3, a4);
  if ((v26 & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  unint64_t v27 = (void **)(*(void *)(v24 + 56) + 32 * v25);
  uint64_t v28 = *v27;
  uint64_t v89 = (uint64_t)v27[1];
  uint64_t v29 = v27[3];
  uint64_t v86 = (uint64_t)v27[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (v29 != (void *)45 || (uint64_t v30 = *a12, !*(void *)(*a12 + 16)))
  {
    swift_unknownObjectRelease();
    goto LABEL_24;
  }
  uint64_t v85 = v28;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1B62B2CE0(a5, a6);
  if (v32)
  {
    unsigned __int8 v33 = (void **)(*(void *)(v30 + 56) + 32 * v31);
    unsigned int v34 = *v33;
    uint64_t v78 = (uint64_t)v33[2];
    uint64_t v80 = (uint64_t)v33[1];
    char v82 = v33[3];
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (v82 == (void *)45)
    {
      uint64_t v77 = v34;
      uint64_t v35 = a12[3];
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B6E31948();
      uint64_t v83 = v35;
      uint64_t v36 = (void *)sub_1B6C8A814(v35, 31);
      uint64_t v38 = v37;
      uint64_t v75 = v40;
      uint64_t v76 = v39;
      swift_bridgeObjectRelease();
      if (v36)
      {
        id v99 = sub_1B6C8ACDC(v93, v98, v94, 45);
        uint64_t v95 = sub_1B6C8ACDC(v85, v89, v86, 45);
        uint64_t v90 = sub_1B6C8ACDC(v77, v80, v78, 45);
        uint64_t v79 = v38;
        uint64_t v81 = (uint64_t)v36;
        uint64_t v41 = sub_1B6C8AC3C(v36, v38, v76, v75);
        uint64_t v42 = v41;
        if (a8)
        {
          uint64_t v43 = *a12;
          if (*(void *)(*a12 + 16))
          {
            uint64_t v87 = v41;
            swift_bridgeObjectRetain();
            uint64_t v44 = sub_1B62B2CE0(a7, a8);
            if (v45)
            {
              uint64_t v46 = (void *)(*(void *)(v43 + 56) + 32 * v44);
              if (v46[3] == 28)
              {
                uint64_t v48 = v46[1];
                uint64_t v47 = v46[2];
                BOOL v74 = (void *)swift_unknownObjectRetain();
                unint64_t v49 = sub_1B6C8AA54(v74, v48, v47, 28);
                uint64_t v50 = v83;
                unint64_t v51 = v99;
                long long v52 = v95;
                int v53 = v90;
                uint64_t v54 = v87;
                if (v83)
                {
                  do
                  {
                    uint64_t v84 = v50;
                    uint64_t v96 = v49;
                    uint64_t v100 = (unsigned __int8 *)(v51 + 1);
                    float v91 = sub_1B6BC7EB8(*v51);
                    unsigned int v55 = *v52++;
                    float v88 = sub_1B6BC7EB8(v55);
                    unsigned int v56 = *v53++;
                    float v57 = sub_1B6BC7EB8(v56);
                    unint64_t v51 = (char *)v100;
                    *(void *)&long long v58 = __PAIR64__(LODWORD(v88), LODWORD(v91));
                    *((float *)&v58 + 2) = v57;
                    HIDWORD(v58) = *(_DWORD *)v96;
                    unint64_t v49 = v96 + 4;
                    *(_OWORD *)uint64_t v54 = v58;
                    v54 += 16;
                    uint64_t v50 = v84 - 1;
                  }
                  while (v84 != 1);
                }
                sub_1B67E381C(a7, a8);
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
LABEL_34:
                swift_bridgeObjectRetain();
                sub_1B67E381C(v18, a2);
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_bridgeObjectRetain();
                sub_1B67E381C(a3, a4);
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_bridgeObjectRetain();
                sub_1B67E381C(a5, a6);
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v104 = *a12;
                *a12 = 0x8000000000000000;
                sub_1B67E9180(v81, v79, v76, v75, a9, a10, isUniquelyReferenced_nonNull_native);
                *a12 = v104;
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v42 = v87;
          }
        }
        uint64_t v59 = v83;
        int v60 = v99;
        uint64_t v61 = v95;
        uint64_t v62 = v90;
        if (v83)
        {
          __asm { FMOV            V0.4S, #1.0 }
          unsigned int v92 = HIDWORD(_Q0);
          do
          {
            unsigned int v68 = *v60++;
            float v101 = sub_1B6BC7EB8(v68);
            unsigned int v69 = *v61++;
            float v97 = sub_1B6BC7EB8(v69);
            unsigned int v70 = *v62++;
            float v71 = sub_1B6BC7EB8(v70);
            *(void *)&long long v72 = __PAIR64__(LODWORD(v97), LODWORD(v101));
            *((void *)&v72 + 1) = __PAIR64__(v92, LODWORD(v71));
            *(_OWORD *)uint64_t v42 = v72;
            v42 += 16;
            --v59;
          }
          while (v59);
        }
        goto LABEL_34;
      }
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_24;
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
LABEL_18:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BC5278(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = sub_1B6E32AF8();
  uint64_t v58 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  float v57 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v54 - v16;
  uint64_t v18 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v18)
  {
    int v53 = 0;
    uint64_t v52 = 147;
    sub_1B6E32BE8();
    __break(1u);
    JUMPOUT(0x1B6BC591CLL);
  }
  swift_retain();
  int v60 = v17;
  sub_1B6E32AD8();
  MEMORY[0x1F4188790](&v54, v19);
  unint64_t v61 = a4;
  uint64_t v62 = v18;
  *(&v54 - 6) = v18;
  *(&v54 - 5) = a3;
  *(&v54 - 4) = a4;
  *(&v54 - 3) = v5;
  uint64_t v52 = (uint64_t)a5;
  unint64_t v20 = a3;
  uint64_t v21 = v5;
  uint64_t v59 = v11;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v55 = v5;
      sub_1B62FFBB0(a1, a2);
      uint64_t v35 = v56;
      sub_1B6BC7DB4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t (*)(void *))sub_1B6BC7D90);
      if (v35)
      {
        uint64_t v56 = v35;
        sub_1B62C2360(a1, a2);
        uint64_t v21 = v55;
        goto LABEL_11;
      }
      sub_1B62C2360(a1, a2);
      uint64_t v21 = v55;
      goto LABEL_15;
    case 2uLL:
      uint64_t v26 = *(void *)(a1 + 16);
      uint64_t v27 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v28 = v26;
      uint64_t v29 = v56;
      sub_1B6BC7DB4(v28, v27, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t (*)(void *))sub_1B6BC7D90);
      if (v29)
      {
        uint64_t v56 = v29;
        swift_release();
        swift_release();
LABEL_11:
        unsigned int v34 = v57;
LABEL_12:
        sub_1B6E32AD8();
        uint64_t v36 = v60;
        sub_1B6E32AE8();
        uint64_t v37 = *(void (**)(char *, uint64_t))(v58 + 8);
        uint64_t v38 = v34;
        uint64_t v39 = v59;
        v37(v38, v59);
        uint64_t v40 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        uint64_t v69 = 0;
        unint64_t v70 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v69 = 0x6E6964616F4C202DLL;
        unint64_t v70 = 0xEA00000000002067;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E33AA8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v41 = v69;
        unint64_t v42 = v70;
        uint64_t v43 = sub_1B6E32168();
        uint64_t v69 = 0;
        (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(void *)v40 + 88))(v43, &v69, v41, v42);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(char *, uint64_t))v37)(v36, v39);
      }
      else
      {
        swift_release();
        swift_release();
LABEL_15:
        unsigned int v34 = v57;
LABEL_16:
        sub_1B6E32AD8();
        sub_1B6E32AE8();
        char v45 = *(void (**)(char *, uint64_t))(v58 + 8);
        uint64_t v46 = v34;
        uint64_t v47 = v59;
        v45(v46, v59);
        uint64_t v48 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        uint64_t v69 = 0;
        unint64_t v70 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v69 = 0x6E6964616F4C202DLL;
        unint64_t v70 = 0xEA00000000002067;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E33AA8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v49 = v69;
        unint64_t v50 = v70;
        uint64_t v51 = sub_1B6E32168();
        uint64_t v69 = 0;
        (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(void *)v48 + 88))(v51, &v69, v49, v50);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(char *, uint64_t))v45)(v60, v47);
      }
    case 3uLL:
      uint64_t v69 = sub_1B6973190((uint64_t)&v63);
      unint64_t v70 = v30;
      uint64_t v71 = v31;
      char v72 = v32;
      uint64_t v33 = v56;
      sub_1B6BC592C((uint64_t)&v69, v62, v20, v61, v5, a5);
      unsigned int v34 = v57;
      if (!v33) {
        goto LABEL_16;
      }
      uint64_t v56 = v33;
      goto LABEL_12;
    default:
      uint64_t v63 = a1;
      __int16 v64 = a2;
      char v65 = BYTE2(a2);
      char v66 = BYTE3(a2);
      char v67 = BYTE4(a2);
      char v68 = BYTE5(a2);
      uint64_t v69 = sub_1B6973190((uint64_t)&v63);
      unint64_t v70 = v22;
      uint64_t v71 = v23;
      char v72 = v24;
      uint64_t v25 = v56;
      sub_1B6BC592C((uint64_t)&v69, v62, v20, v61, v5, a5);
      if (!v25) {
        goto LABEL_15;
      }
      uint64_t v56 = v25;
      goto LABEL_11;
  }
}

uint64_t sub_1B6BC592C(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v268 = a5;
  unint64_t v258 = a4;
  unint64_t v257 = a3;
  uint64_t v259 = a2;
  v274.i64[0] = sub_1B6E323C8();
  uint64_t v9 = *(void *)(v274.i64[0] - 8);
  MEMORY[0x1F4188790](v274.i64[0], v10);
  v273.i64[0] = (uint64_t)&v249 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275.i64[0] = sub_1B6E30AB8();
  uint64_t v12 = *(void *)(v275.i64[0] - 8);
  MEMORY[0x1F4188790](v275.i64[0], v13);
  long long v267 = (char *)&v249 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1B6E31808();
  MEMORY[0x1F4188790](v15 - 8, v16);
  unint64_t v264 = (char *)&v249 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1B6973014();
  if (!v19) {
    goto LABEL_91;
  }
  if (v18 != 7957616 || v19 != 0xE300000000000000)
  {
    char v20 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_6;
    }
LABEL_91:
    sub_1B6BC7E64();
    swift_allocError();
    *uint64_t v96 = 0;
    v96[1] = 0;
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
LABEL_6:
  unint64_t v266 = 0;
  unint64_t v262 = 0;
  uint64_t v255 = (void (**)(char *, uint64_t))(v12 + 8);
  v272.i32[0] = *MEMORY[0x1E4F280B8];
  v271.i64[0] = v9 + 104;
  v270.i64[0] = v9 + 8;
  unint64_t v263 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v261 = 0xE000000000000000;
  char v21 = 4;
  unint64_t v260 = (unint64_t)"VFX/PointCache+PLY.swift";
  v265 = a6;
  v269.i64[0] = a1;
  uint64_t v256 = v6;
  while (1)
  {
    int64_t v22 = *(void *)(a1 + 16);
    v278.i64[0] = *(void *)a1;
    if (v278.i64[0])
    {
      uint64_t v23 = *(void *)(a1 + 8) - v278.i64[0];
      if (v22 >= v23) {
        goto LABEL_93;
      }
    }
    else
    {
      if ((v22 & 0x8000000000000000) == 0) {
        goto LABEL_93;
      }
      uint64_t v23 = 0;
    }
    int v24 = *(unsigned __int8 *)(a1 + 24);
    unint64_t v25 = v22;
    if (*(unsigned __int8 *)(v278.i64[0] + v22) != v24)
    {
      unint64_t v25 = v23;
      if (v22 + 1 != v23)
      {
        unint64_t v25 = v22 + 1;
        if (*(unsigned __int8 *)(v278.i64[0] + v22 + 1) != v24)
        {
          int64_t v26 = v22 + 2;
          while (v23 != v26)
          {
            int v27 = *(unsigned __int8 *)(v278.i64[0] + v26++);
            if (v27 == v24)
            {
              unint64_t v25 = v26 - 1;
              goto LABEL_20;
            }
          }
          unint64_t v25 = v23;
        }
      }
    }
LABEL_20:
    unint64_t v281 = v22;
    unint64_t v282 = v25;
    uint64_t v283 = v278.i64[0];
    uint64_t v284 = v23;
    sub_1B6E317F8();
    sub_1B6973228();
    sub_1B6973314(&qword_1E9DD2E30, (void (*)(uint64_t))sub_1B6973228);
    sub_1B6E317C8();
    if (!v28) {
      goto LABEL_93;
    }
    v22 += sub_1B6E318C8() + 1;
    *(void *)(v269.i64[0] + 16) = v22;
    id v29 = objc_allocWithZone(MEMORY[0x1E4F28FE8]);
    swift_bridgeObjectRetain();
    unint64_t v30 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v29, sel_initWithString_, v30);

    sub_1B6E323A8();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_22;
    }
    sub_1B6E323A8();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    if (v35) {
      break;
    }
    sub_1B6E323A8();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if (v37)
    {
      uint64_t v38 = v267;
      sub_1B6E30A58();
      uint64_t v39 = sub_1B6E323B8();
      unint64_t v41 = v40;
      (*v255)(v38, v275.i64[0]);
      swift_bridgeObjectRelease();
      if (v41)
      {
        if (v39 == 0x6969637361 && v41 == 0xE500000000000000)
        {
          unint64_t v261 = 0xE500000000000000;
          unint64_t v42 = 0x6969637361;
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v39 = 0;
        unint64_t v41 = 0xE000000000000000;
      }
      if ((sub_1B6E334B8() & 1) == 0)
      {
        if (v39 == 0xD000000000000014 && v41 == (v260 | 0x8000000000000000))
        {
          unint64_t v261 = v260 | 0x8000000000000000;
          unint64_t v42 = 0xD000000000000014;
LABEL_35:
          unint64_t v266 = v42;
LABEL_38:
          uint64_t v43 = v273.i64[0];
          uint64_t v44 = v274.i64[0];
          (*(void (**)(uint64_t, void, uint64_t))v271.i64[0])(v273.i64[0], v272.u32[0], v274.i64[0]);
          uint64_t v45 = sub_1B6E323E8();
          (*(void (**)(uint64_t, uint64_t))v270.i64[0])(v43, v44);
          if ((v45 & 0x100000000) != 0 || *(float *)&v45 != 1.0)
          {
            swift_bridgeObjectRelease();
            unint64_t v281 = 0;
            unint64_t v282 = 0xE000000000000000;
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            unint64_t v281 = 0xD000000000000010;
            unint64_t v282 = 0x80000001B6F4C3B0;
            goto LABEL_198;
          }
LABEL_22:
          swift_bridgeObjectRelease();

          goto LABEL_23;
        }
        if ((sub_1B6E334B8() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v281 = 0;
          unint64_t v282 = 0xE000000000000000;
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          unint64_t v281 = 0xD000000000000015;
          unint64_t v282 = 0x80000001B6F4C390;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          unint64_t v246 = v281;
          unint64_t v247 = v282;
          sub_1B6BC7E64();
          swift_allocError();
          *uint64_t v248 = v246;
          v248[1] = v247;
          swift_willThrow();

          return swift_bridgeObjectRelease();
        }
      }
      unint64_t v266 = v39;
      unint64_t v261 = v41;
      goto LABEL_38;
    }
    sub_1B6E323A8();
    uint64_t v47 = v46;
    swift_bridgeObjectRelease();
    if (v47)
    {
      uint64_t v48 = v267;
      sub_1B6E30A58();
      uint64_t v49 = sub_1B6E323B8();
      unint64_t v51 = v50;
      (*v255)(v48, v275.i64[0]);
      if (!v51) {
        goto LABEL_22;
      }
      if (v49 == 1701011814 && v51 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        char v21 = 1;
        goto LABEL_23;
      }
      if ((v49 != 0x786574726576 || v51 != 0xE600000000000000) && (sub_1B6E334B8() & 1) == 0)
      {
        if (v49 == 0x69736E6972746E69 && v51 == 0xE900000000000063 || (sub_1B6E334B8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = v273.i64[0];
          uint64_t v81 = v274.i64[0];
          (*(void (**)(uint64_t, void, uint64_t))v271.i64[0])(v273.i64[0], v272.u32[0], v274.i64[0]);
          sub_1B6E323D8();

          (*(void (**)(uint64_t, uint64_t))v270.i64[0])(v80, v81);
          char v21 = 2;
          goto LABEL_23;
        }
        if ((v49 != 0x69736E6972747865 || v51 != 0xE900000000000063) && (sub_1B6E334B8() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v281 = 0;
          unint64_t v282 = 0xE000000000000000;
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          unint64_t v281 = v49;
          unint64_t v282 = v51;
          sub_1B6E31948();
LABEL_198:
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          unint64_t v243 = v281;
          unint64_t v244 = v282;
          sub_1B6BC7E64();
          swift_allocError();
          *uint64_t v245 = v243;
          v245[1] = v244;
          swift_willThrow();

          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v82 = v273.i64[0];
        uint64_t v83 = v274.i64[0];
        (*(void (**)(uint64_t, void, uint64_t))v271.i64[0])(v273.i64[0], v272.u32[0], v274.i64[0]);
        sub_1B6E323D8();

        (*(void (**)(uint64_t, uint64_t))v270.i64[0])(v82, v83);
        char v21 = 3;
        goto LABEL_90;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = v273.i64[0];
      uint64_t v55 = v274.i64[0];
      (*(void (**)(uint64_t, void, uint64_t))v271.i64[0])(v273.i64[0], v272.u32[0], v274.i64[0]);
      uint64_t v56 = sub_1B6E323D8();
      char v58 = v57;

      (*(void (**)(uint64_t, uint64_t))v270.i64[0])(v54, v55);
      char v21 = 0;
      if (v58) {
        unint64_t v59 = 0;
      }
      else {
        unint64_t v59 = v56;
      }
      unint64_t v262 = v59;
LABEL_23:
      a1 = v269.i64[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B6E323A8();
      uint64_t v53 = v52;
      swift_bridgeObjectRelease();
      a1 = v269.i64[0];
      if (!v53) {
        goto LABEL_51;
      }
      if (!v21)
      {
        int v60 = v267;
        sub_1B6E30A58();
        uint64_t v61 = sub_1B6E323B8();
        uint64_t v63 = v62;
        __int16 v64 = *v255;
        uint64_t v65 = v275.i64[0];
        (*v255)(v60, v275.i64[0]);
        if (!v63) {
          goto LABEL_72;
        }
        uint64_t v254 = v61;
        sub_1B6E30A58();
        v278.i64[0] = sub_1B6E323B8();
        char v66 = v60;
        uint64_t v68 = v67;
        v64(v66, v65);
        if (!v68) {
          goto LABEL_71;
        }
        uint64_t v69 = sub_1B6BC3980(v254, v63);
        swift_bridgeObjectRelease();
        unint64_t v281 = v257;
        unint64_t v282 = v258;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        sub_1B6E31948();
        unint64_t v70 = (void *)sub_1B6C8A814(v262, v69);
        uint64_t v72 = v71;
        uint64_t v74 = v73;
        uint64_t v76 = v75;
        swift_bridgeObjectRelease();
        if (!v70)
        {
LABEL_71:
          swift_bridgeObjectRelease();
LABEL_72:

          char v21 = 0;
          goto LABEL_23;
        }
        uint64_t v254 = v72;
        if (v76 == 28)
        {
          if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
          {
            uint64_t v251 = 0;
            uint64_t v252 = 0;
            v253 = 0;
            uint64_t v79 = 0;
          }
          else
          {
            uint64_t v84 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
            id v85 = v70;
            v253 = 0;
            uint64_t v79 = 0;
            uint64_t v252 = &v84[v254];
            uint64_t v251 = v74 / 4;
          }
          char v78 = 1;
        }
        else
        {
          uint64_t v250 = v74;
          uint64_t v77 = v72;
          swift_unknownObjectRetain();
          uint64_t v249 = v76;
          if (v76 == 45)
          {
            if (objc_msgSend(v70, sel_storageMode) == (id)2)
            {
              char v78 = 0;
              uint64_t v251 = 0;
              uint64_t v252 = 0;
              v253 = 0;
              uint64_t v79 = 0;
              goto LABEL_81;
            }
            uint64_t v86 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
            id v87 = v70;
            char v78 = 0;
            uint64_t v251 = 0;
            uint64_t v252 = 0;
            v253 = &v86[v77];
            uint64_t v79 = v250;
            uint64_t v74 = v250;
          }
          else
          {
            uint64_t v251 = 0;
            uint64_t v252 = 0;
            v253 = 0;
            uint64_t v79 = 0;
            char v78 = 1;
LABEL_81:
            uint64_t v74 = v250;
          }
          uint64_t v76 = v249;
        }
        float v88 = v263;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          float v88 = sub_1B68C649C(0, v88[2] + 1, 1, v88);
        }
        uint64_t v89 = v88;
        unint64_t v90 = v88[2];
        unint64_t v263 = v89;
        unint64_t v91 = v89[3];
        if (v90 >= v91 >> 1) {
          unint64_t v263 = sub_1B68C649C(v91 > 1, v90 + 1, 1, v263);
        }
        unsigned int v92 = v263;
        v263[2] = v90 + 1;
        uint64_t v93 = &v92[12 * v90];
        v93[4] = v278.i64[0];
        v93[5] = v68;
        uint64_t v94 = v254;
        v93[6] = v70;
        v93[7] = v94;
        v93[8] = v74;
        v93[9] = v76;
        uint64_t v95 = v251;
        v93[10] = v252;
        v93[11] = v95;
        *((unsigned char *)v93 + 96) = v76 != 28;
        v93[13] = v253;
        v93[14] = v79;
        *((unsigned char *)v93 + 120) = v78;
        swift_unknownObjectRelease();

        char v21 = 0;
LABEL_90:
        a6 = v265;
        goto LABEL_23;
      }
      if (v21 == 4)
      {

        char v21 = 4;
      }
      else
      {
LABEL_51:
      }
    }
  }
  swift_bridgeObjectRelease();

LABEL_93:
  unint64_t v98 = v266;
  if ((v266 != 0x6969637361 || v261 != 0xE500000000000000) && (sub_1B6E334B8() & 1) == 0)
  {
    uint64_t v136 = v269.i64[0];
    if (v98 == 0xD000000000000014 && v261 == (v260 | 0x8000000000000000))
    {
      unint64_t v99 = v262;
      if (!v262)
      {
        unint64_t v261 = v260 | 0x8000000000000000;
        goto LABEL_149;
      }
    }
    else
    {
      if ((sub_1B6E334B8() & 1) == 0)
      {
        unint64_t v99 = v262;
        goto LABEL_149;
      }
      unint64_t v99 = v262;
      if (!v262)
      {
LABEL_149:
        float v101 = v263;
LABEL_150:
        a6[1] = v257;
        a6[2] = v258;
        a6[3] = v99;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v149 = v101[2];
        if (v149)
        {
          uint64_t v150 = v263 + 9;
          do
          {
            uint64_t v157 = *(v150 - 5);
            uint64_t v156 = *(v150 - 4);
            uint64_t v158 = *(v150 - 3);
            v274.i64[0] = *(v150 - 2);
            v275.i64[0] = *(v150 - 1);
            v278.i64[0] = *v150;
            swift_bridgeObjectRetain_n();
            swift_unknownObjectRetain_n();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v160 = a6;
            char v161 = isUniquelyReferenced_nonNull_native;
            unint64_t v281 = *v160;
            unint64_t v162 = v281;
            *unint64_t v160 = 0x8000000000000000;
            unint64_t v164 = sub_1B62B2CE0(v157, v156);
            char v165 = v163;
            uint64_t v166 = *(void *)(v162 + 16) + ((v163 & 1) == 0);
            if (*(void *)(v162 + 24) >= v166)
            {
              if (v161)
              {
                size_t v169 = (void *)v281;
                if (v163) {
                  goto LABEL_160;
                }
              }
              else
              {
                sub_1B6AD5EF0();
                size_t v169 = (void *)v281;
                if (v165) {
                  goto LABEL_160;
                }
              }
            }
            else
            {
              sub_1B6AC63EC(v166, v161);
              uint64_t v167 = sub_1B62B2CE0(v157, v156);
              if ((v165 & 1) != (v168 & 1)) {
                goto LABEL_203;
              }
              unint64_t v164 = v167;
              size_t v169 = (void *)v281;
              if (v165)
              {
LABEL_160:
                id v170 = (void *)(v169[7] + 32 * v164);
                swift_unknownObjectRelease();
                uint64_t v171 = v274.i64[0];
                *id v170 = v158;
                v170[1] = v171;
                uint64_t v172 = v278.i64[0];
                v170[2] = v275.i64[0];
                v170[3] = v172;
                goto LABEL_153;
              }
            }
            v169[(v164 >> 6) + 8] |= 1 << v164;
            uint64_t v151 = (uint64_t *)(v169[6] + 16 * v164);
            *uint64_t v151 = v157;
            v151[1] = v156;
            uint64_t v152 = (void *)(v169[7] + 32 * v164);
            uint64_t v153 = v274.i64[0];
            *uint64_t v152 = v158;
            v152[1] = v153;
            uint64_t v154 = v278.i64[0];
            v152[2] = v275.i64[0];
            v152[3] = v154;
            ++v169[2];
            swift_bridgeObjectRetain();
LABEL_153:
            v150 += 12;
            uint64_t v155 = v265;
            void *v265 = v169;
            a6 = v155;
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            --v149;
          }
          while (v149);
        }
        swift_bridgeObjectRelease();
        if (!*(void *)(*a6 + 16) || (sub_1B62B2CE0(0x305F63645F66, 0xE600000000000000), (v173 & 1) == 0))
        {
          uint64_t v207 = v259;
          sub_1B6BC4224(120, 0xE100000000000000, 121, 0xE100000000000000, 122, 0xE100000000000000, 0x6E6F697469736F70, 0xE800000000000000, 30, v259, a6);
          sub_1B6BC4224(30830, 0xE200000000000000, 31086, 0xE200000000000000, 31342, 0xE200000000000000, 0x6C616D726F6ELL, 0xE600000000000000, 30, v207, a6);
          sub_1B6BC4224(0x305F656C616373, 0xE700000000000000, 0x315F656C616373, 0xE700000000000000, 0x325F656C616373, 0xE700000000000000, 1702521203, 0xE400000000000000, 30, v207, a6);
          sub_1B6BC3E04(117, 0xE100000000000000, 118, 0xE100000000000000, 30325, 0xE200000000000000, v207, a6);
          sub_1B6BC4CF8(6579570, 0xE300000000000000, 0x6E65657267, 0xE500000000000000, 1702194274, 0xE400000000000000, 0, 0, 0x726F6C6F63, 0xE500000000000000, v207, a6);
          sub_1B6BC4CF8(0x5F65737566666964, 0xEB00000000646572, 0x5F65737566666964, 0xED00006E65657267, 0x5F65737566666964, 0xEC00000065756C62, 0x7469736E65746E69, 0xE900000000000079, 0x726F6C6F63, 0xE500000000000000, v207, a6);
          sub_1B6BC47F0(0x305F63645F66, 0xE600000000000000, 0x315F63645F66, 0xE600000000000000, 0x325F63645F66, 0xE600000000000000, 0x7974696361706FLL, 0xE700000000000000, 0x726F6C6F63, 0xE500000000000000, v207, a6);
          sub_1B6BC47F0(0x315F746F72, 0xE500000000000000, 0x325F746F72, 0xE500000000000000, 0x335F746F72, 0xE500000000000000, 0x305F746F72, 0xE500000000000000, 0x7461746E6569726FLL, 0xEB000000006E6F69, v207, a6);
          return swift_bridgeObjectRelease();
        }
        uint64_t v174 = v259;
        sub_1B6BC4224(120, 0xE100000000000000, 121, 0xE100000000000000, 122, 0xE100000000000000, 0x6E6F697469736F70, 0xE800000000000000, 30, v259, a6);
        sub_1B6BC4224(30830, 0xE200000000000000, 31086, 0xE200000000000000, 31342, 0xE200000000000000, 0x6C616D726F6ELL, 0xE600000000000000, 30, v174, a6);
        sub_1B6BC4224(0x305F656C616373, 0xE700000000000000, 0x315F656C616373, 0xE700000000000000, 0x325F656C616373, 0xE700000000000000, 1702521203, 0xE400000000000000, 30, v174, a6);
        sub_1B6BC3E04(117, 0xE100000000000000, 118, 0xE100000000000000, 30325, 0xE200000000000000, v174, a6);
        sub_1B6BC4CF8(6579570, 0xE300000000000000, 0x6E65657267, 0xE500000000000000, 1702194274, 0xE400000000000000, 0, 0, 0x726F6C6F63, 0xE500000000000000, v174, a6);
        sub_1B6BC4CF8(0x5F65737566666964, 0xEB00000000646572, 0x5F65737566666964, 0xED00006E65657267, 0x5F65737566666964, 0xEC00000065756C62, 0x7469736E65746E69, 0xE900000000000079, 0x726F6C6F63, 0xE500000000000000, v174, a6);
        sub_1B6BC47F0(0x305F63645F66, 0xE600000000000000, 0x315F63645F66, 0xE600000000000000, 0x325F63645F66, 0xE600000000000000, 0x7974696361706FLL, 0xE700000000000000, 0x726F6C6F63, 0xE500000000000000, v174, a6);
        sub_1B6BC47F0(0x315F746F72, 0xE500000000000000, 0x325F746F72, 0xE500000000000000, 0x335F746F72, 0xE500000000000000, 0x305F746F72, 0xE500000000000000, 0x7461746E6569726FLL, 0xEB000000006E6F69, v174, a6);
        uint64_t v175 = *a6;
        if (*(void *)(*a6 + 16))
        {
          uint64_t v176 = sub_1B62B2CE0(0x726F6C6F63, 0xE500000000000000);
          if (v177)
          {
            uint64_t v178 = (void *)(*(void *)(v175 + 56) + 32 * v176);
            uint64_t v179 = v178[1];
            uint64_t v180 = v178[2];
            uint64_t v181 = v178[3];
            uint64_t v182 = (void *)swift_unknownObjectRetain();
            uint64_t v183 = (float32x4_t *)sub_1B6C8AC3C(v182, v179, v180, v181);
            LOBYTE(v181) = v184;
            swift_unknownObjectRelease();
            if ((v181 & 1) == 0)
            {
              if (v262)
              {
                float32x4_t v273 = (float32x4_t)vdupq_n_s32(0x3D6147AEu);
                float32x4_t v274 = (float32x4_t)vdupq_n_s32(0x3E906EBBu);
                float32x4_t v272 = (float32x4_t)vdupq_n_s32(0x3F870A3Du);
                float32x4_t v271 = (float32x4_t)vdupq_n_s32(0x414EB852u);
                simd_float4 v270 = (simd_float4)xmmword_1B6E72D40;
                float32x4_t v269 = (float32x4_t)vdupq_n_s32(0x3D25AEE6u);
                unint64_t v185 = v262;
                do
                {
                  float32x4_t v278 = *v183;
                  v186.i64[0] = 0x3F0000003F000000;
                  v186.i64[1] = 0x3F0000003F000000;
                  float32x4_t v187 = vaddq_f32(vmulq_f32(v278, v274), v186);
                  v187.i32[3] = 0;
                  float32x4_t v275 = vmaxnmq_f32(v187, (float32x4_t)0);
                  simd_float4 v188 = (simd_float4)vdivq_f32(vaddq_f32(v275, v273), v272);
                  v188.i32[3] = 0;
                  simd_float4 v189 = _simd_pow_f4(v188, v270);
                  int32x4_t v190 = vcgeq_f32(v269, v275);
                  v190.i32[3] = 0;
                  float32x4_t v275 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v190), (int8x16_t)vdivq_f32(v275, v271), (int8x16_t)v189);
                  float v191 = expf(-v278.f32[3]);
                  float32x4_t v192 = v275;
                  v192.f32[3] = 1.0 / (float)(v191 + 1.0);
                  *v183++ = v192;
                  --v185;
                }
                while (v185);
              }
            }
          }
        }
        uint64_t v193 = *a6;
        if (*(void *)(*a6 + 16))
        {
          uint64_t v194 = sub_1B62B2CE0(1702521203, 0xE400000000000000);
          if (v195)
          {
            uint64_t v196 = (void *)(*(void *)(v193 + 56) + 32 * v194);
            uint64_t v197 = v196[1];
            uint64_t v198 = v196[2];
            uint64_t v199 = v196[3];
            uint64_t v200 = (void *)swift_unknownObjectRetain();
            uint64_t v201 = sub_1B6C8AB94(v200, v197, v198, v199);
            LOBYTE(v199) = v202;
            swift_unknownObjectRelease();
            if ((v199 & 1) == 0)
            {
              if (v262)
              {
                if (v262 < 0x16)
                {
                  unint64_t v206 = 0;
LABEL_188:
                  uint64_t v221 = (float *)&v201[12 * v206 + 8];
                  unint64_t v222 = v262 - v206;
                  do
                  {
                    *(v221 - 2) = expf(*(v221 - 2));
                    *(v221 - 1) = expf(*(v221 - 1));
                    *uint64_t v221 = expf(*v221);
                    v221 += 3;
                    --v222;
                  }
                  while (v222);
                  goto LABEL_190;
                }
                unint64_t v206 = 0;
                uint64_t v208 = 12 * (v262 - 1);
                if (&v201[v208 + 8] < v201 + 8) {
                  goto LABEL_188;
                }
                if (!is_mul_ok(v262 - 1, 0xCuLL)) {
                  goto LABEL_188;
                }
                if (&v201[v208 + 4] < v201 + 4) {
                  goto LABEL_188;
                }
                if (!is_mul_ok(v262 - 1, 0xCuLL)) {
                  goto LABEL_188;
                }
                if (&v201[v208] < v201) {
                  goto LABEL_188;
                }
                if (!is_mul_ok(v262 - 1, 0xCuLL)) {
                  goto LABEL_188;
                }
                unint64_t v206 = v262 & 0xFFFFFFFFFFFFFFFELL;
                unint64_t v209 = v262 & 0xFFFFFFFFFFFFFFFELL;
                uint64_t v210 = (float *)v201;
                do
                {
                  *(float32x2x3_t *)v203.f32 = vld3_f32(v210);
                  float32x4_t v278 = v203;
                  float32x4_t v279 = v204;
                  long long v280 = v205;
                  *(float *)&uint64_t v211 = expf(v203.f32[1]);
                  v275.i64[0] = v211;
                  v212.f32[0] = expf(v278.f32[0]);
                  v212.i32[1] = v275.i32[0];
                  float32x4_t v275 = v212;
                  long long v276 = v213;
                  long long v277 = v214;
                  *(float *)&uint64_t v215 = expf(v279.f32[1]);
                  v274.i64[0] = v215;
                  float v216 = expf(v279.f32[0]);
                  *((void *)&v217 + 1) = *((void *)&v276 + 1);
                  *(void *)&long long v217 = __PAIR64__(v274.u32[0], LODWORD(v216));
                  long long v276 = v217;
                  *(float *)&uint64_t v218 = expf(*((float *)&v280 + 1));
                  v274.i64[0] = v218;
                  v203.f32[0] = expf(*(float *)&v280);
                  float32x4_t v204 = v275;
                  long long v205 = v276;
                  __int32 v219 = v203.i32[0];
                  v203.i64[1] = v274.i64[1];
                  __int32 v220 = v274.i32[0];
                  vst3_f32(v210, *(float32x2x3_t *)v204.f32);
                  v210 += 6;
                  v209 -= 2;
                }
                while (v209);
                if (v262 != v206) {
                  goto LABEL_188;
                }
              }
            }
          }
        }
LABEL_190:
        uint64_t v223 = *a6;
        if (*(void *)(*a6 + 16))
        {
          uint64_t v224 = sub_1B62B2CE0(0x7461746E6569726FLL, 0xEB000000006E6F69);
          if (v225)
          {
            uint64_t v226 = (void *)(*(void *)(v223 + 56) + 32 * v224);
            uint64_t v227 = v226[1];
            uint64_t v228 = v226[2];
            uint64_t v229 = v226[3];
            long long v230 = (void *)swift_unknownObjectRetain();
            long long v231 = (float32x4_t *)sub_1B6C8AC3C(v230, v227, v228, v229);
            LOBYTE(v229) = v232;
            swift_unknownObjectRelease();
            unint64_t v233 = v262;
            if ((v229 & 1) == 0)
            {
              if (v262)
              {
                __asm { FMOV            V0.4S, #1.0 }
                do
                {
                  int8x16_t v239 = (int8x16_t)vmulq_f32(*v231, *v231);
                  *(float32x2_t *)v239.i8 = vadd_f32(*(float32x2_t *)v239.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v239, v239, 8uLL));
                  float32x4_t v240 = (float32x4_t)vdupq_lane_s32((int32x2_t)vadd_f32(*(float32x2_t *)v239.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v239.i8, 1)), 0);
                  float32x4_t v241 = vrsqrteq_f32(v240);
                  float32x4_t v242 = vmulq_f32(v241, vrsqrtsq_f32(v240, vmulq_f32(v241, v241)));
                  float32x4_t *v231 = vmulq_f32(*v231, (float32x4_t)vbslq_s8((int8x16_t)vceqzq_f32(v240), _Q0, (int8x16_t)vmulq_f32(v242, vrsqrtsq_f32(v240, vmulq_f32(v242, v242)))));
                  ++v231;
                  --v233;
                }
                while (v233);
              }
            }
          }
        }
        return swift_bridgeObjectRelease();
      }
    }
    v275.i64[0] = 0;
    uint64_t v137 = v263[2];
    v274.i64[0] = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    v270.i64[0] = (uint64_t)(v263 + 9);
    v273.i64[0] = 0xD000000000000011;
    v272.i64[0] = 0x80000001B6F4C310;
    v271.i64[0] = v137;
    while (!v137)
    {
LABEL_138:
      if (++v275.i64[0] == v99) {
        goto LABEL_149;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v138 = (uint64_t *)v270.i64[0];
    uint64_t v139 = v137;
    while (1)
    {
      uint64_t v142 = *v138;
      uint64_t v141 = v138[1];
      uint64_t v143 = v138[4];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      if (v142 == 28)
      {
        int v140 = *(_DWORD *)(v278.i64[0] + v22);
        v22 += 4;
        *(void *)(v136 + 16) = v22;
        *(_DWORD *)(v141 + 4 * v275.i64[0]) = v140;
      }
      else
      {
        if (v142 != 45)
        {
          uint64_t v145 = *(void *)(v268 + v274.i64[0]);
          unint64_t v281 = 0;
          unint64_t v282 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          uint64_t v285 = v142;
          type metadata accessor for MTLVertexFormat(0);
          sub_1B6E32B18();
          sub_1B6E31948();
          sub_1B6E31948();
          unint64_t v146 = v281;
          unint64_t v147 = v282;
          uint64_t v148 = sub_1B6E32148();
          unint64_t v281 = 0;
          (*(void (**)(uint64_t, unint64_t *, unint64_t, unint64_t))(*(void *)v145
                                                                                                  + 88))(v148, &v281, v146, v147);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v136 = v269.i64[0];
          swift_release();
          goto LABEL_143;
        }
        char v144 = *(unsigned char *)(v278.i64[0] + v22++);
        *(void *)(v136 + 16) = v22;
        *(unsigned char *)(v143 + v275.i64[0]) = v144;
      }
      swift_unknownObjectRelease();
LABEL_143:
      swift_bridgeObjectRelease();
      v138 += 12;
      if (!--v139)
      {
        swift_bridgeObjectRelease();
        a6 = v265;
        unint64_t v99 = v262;
        uint64_t v137 = v271.i64[0];
        goto LABEL_138;
      }
    }
  }
  unint64_t v99 = v262;
  uint64_t v100 = v269.i64[0];
  if (!v262) {
    goto LABEL_149;
  }
  v278.i64[0] = 0;
  long long v267 = (char *)OBJC_IVAR____TtC3VFX13EntityManager_logger;
  float v101 = v263;
  unint64_t v260 = (unint64_t)(v263 + 9);
  unint64_t v266 = 0x80000001B6F4C310;
  while (1)
  {
    uint64_t v102 = *(void *)(v100 + 16);
    uint64_t v103 = *(void *)v100;
    if (*(void *)v100)
    {
      uint64_t v104 = *(void *)(v100 + 8) - v103;
      if (v102 >= v104) {
        goto LABEL_129;
      }
    }
    else
    {
      if ((v102 & 0x8000000000000000) == 0) {
        goto LABEL_129;
      }
      uint64_t v104 = 0;
    }
    int v105 = *(unsigned __int8 *)(v100 + 24);
    unint64_t v106 = *(void *)(v100 + 16);
    if (*(unsigned __int8 *)(v103 + v102) != v105)
    {
      unint64_t v106 = *(void *)(v100 + 16);
      while (v104 - 1 != v106)
      {
        int v107 = *(unsigned __int8 *)(v103 + 1 + v106++);
        if (v107 == v105) {
          goto LABEL_111;
        }
      }
      unint64_t v106 = v104;
    }
LABEL_111:
    unint64_t v281 = *(void *)(v100 + 16);
    unint64_t v282 = v106;
    uint64_t v283 = v103;
    uint64_t v284 = v104;
    sub_1B6E317F8();
    sub_1B6973228();
    sub_1B6973314(&qword_1E9DD2E30, (void (*)(uint64_t))sub_1B6973228);
    sub_1B6E317C8();
    if (!v108)
    {
LABEL_129:
      uint64_t v131 = *(void *)&v267[v268];
      unint64_t v281 = 0;
      unint64_t v282 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v281 = 0xD000000000000027;
      unint64_t v282 = 0x80000001B6F4C330;
      uint64_t v285 = v278.i64[0];
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      unint64_t v132 = v262;
      uint64_t v285 = v262;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v133 = v281;
      unint64_t v134 = v282;
      uint64_t v135 = sub_1B6E32148();
      unint64_t v281 = 0;
      (*(void (**)(uint64_t, unint64_t *, unint64_t, unint64_t))(*(void *)v131 + 88))(v135, &v281, v133, v134);
      swift_release();
      float v101 = v263;
      swift_bridgeObjectRelease();
      unint64_t v99 = v132;
      goto LABEL_150;
    }
    *(void *)(v100 + 16) = v102 + sub_1B6E318C8() + 1;
    id v109 = objc_allocWithZone(MEMORY[0x1E4F28FE8]);
    id v110 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    id v111 = objc_msgSend(v109, sel_initWithString_, v110);

    uint64_t v112 = v101[2];
    if (!v112)
    {

      goto LABEL_99;
    }
    v275.i64[0] = (uint64_t)v111;
    swift_bridgeObjectRetain();
    long long v113 = (uint64_t *)v260;
LABEL_119:
    uint64_t v118 = *v113;
    uint64_t v119 = v113[1];
    uint64_t v120 = v113[4];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v118 == 28)
    {
      uint64_t v114 = v273.i64[0];
      uint64_t v115 = v274.i64[0];
      (*(void (**)(uint64_t, void, uint64_t))v271.i64[0])(v273.i64[0], v272.u32[0], v274.i64[0]);
      uint64_t v116 = sub_1B6E323E8();
      (*(void (**)(uint64_t, uint64_t))v270.i64[0])(v114, v115);
      float v117 = *(float *)&v116;
      if ((v116 & 0x100000000) != 0) {
        float v117 = 0.0;
      }
      *(float *)(v119 + 4 * v278.i64[0]) = v117;
      goto LABEL_117;
    }
    if (v118 == 45) {
      break;
    }
    uint64_t v127 = *(void *)&v267[v268];
    unint64_t v281 = 0;
    unint64_t v282 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    uint64_t v285 = v118;
    type metadata accessor for MTLVertexFormat(0);
    sub_1B6E32B18();
    sub_1B6E31948();
    sub_1B6E31948();
    unint64_t v128 = v281;
    unint64_t v129 = v282;
    uint64_t v130 = sub_1B6E32148();
    unint64_t v281 = 0;
    (*(void (**)(uint64_t, unint64_t *, unint64_t, unint64_t))(*(void *)v127 + 88))(v130, &v281, v128, v129);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_118:
    swift_bridgeObjectRelease();
    v113 += 12;
    if (--v112) {
      goto LABEL_119;
    }

    float v101 = v263;
    swift_bridgeObjectRelease();
    a6 = v265;
    uint64_t v100 = v269.i64[0];
LABEL_99:
    unint64_t v99 = v262;
    if (++v278.i64[0] == v262) {
      goto LABEL_150;
    }
  }
  uint64_t v121 = v273.i64[0];
  uint64_t v122 = v274.i64[0];
  (*(void (**)(uint64_t, void, uint64_t))v271.i64[0])(v273.i64[0], v272.u32[0], v274.i64[0]);
  uint64_t v123 = sub_1B6E323D8();
  char v125 = v124;
  (*(void (**)(uint64_t, uint64_t))v270.i64[0])(v121, v122);
  if (v125) {
    unint64_t v126 = 0;
  }
  else {
    unint64_t v126 = v123;
  }
  if ((v126 & 0x8000000000000000) == 0 && v126 < 0x100)
  {
    *(unsigned char *)(v120 + v278.i64[0]) = v126;
LABEL_117:
    swift_unknownObjectRelease();
    goto LABEL_118;
  }
  sub_1B6E32BD8();
  __break(1u);
LABEL_203:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BC7D90(uint64_t a1)
{
  return sub_1B6BC592C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1B6BC7DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  uint64_t v6 = sub_1B6E30B98();
  if (v6) {
    v6 += a1 - sub_1B6E30BC8();
  }
  sub_1B6E30BB8();
  v11[0] = sub_1B6973190(v6);
  v11[1] = v7;
  _OWORD v11[2] = v8;
  char v12 = v9;
  return a4(v11);
}

unint64_t sub_1B6BC7E64()
{
  unint64_t result = qword_1E9DD6B90;
  if (!qword_1E9DD6B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6B90);
  }
  return result;
}

float sub_1B6BC7EB8(unsigned int a1)
{
  return (float)a1 * 0.0039216;
}

uint64_t sub_1B6BC7ECC()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DisplayLinkTarget()
{
  return self;
}

void sub_1B6BC7F28()
{
  type metadata accessor for DisplayClock();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *uint64_t v1 = 0;
  *(void *)(v0 + 16) = "DisplayClock.tickHandlers";
  *(void *)(v0 + 24) = 25;
  *(unsigned char *)(v0 + 32) = 2;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = 0;
  *(_WORD *)(v0 + 72) = 256;
  sub_1B63BBEB8();
  qword_1E9E49750 = v0;
}

void sub_1B6BC7FA4()
{
  type metadata accessor for DisplayClock();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *uint64_t v1 = 0;
  *(void *)(v0 + 16) = "DisplayClock.tickHandlers";
  *(void *)(v0 + 24) = 25;
  *(unsigned char *)(v0 + 32) = 2;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = 0;
  *(_WORD *)(v0 + 72) = 257;
  sub_1B63BBEB8();
  qword_1EB997A38 = v0;
}

uint64_t sub_1B6BC8020()
{
  type metadata accessor for RunloopThread();
  swift_allocObject();
  uint64_t result = sub_1B63B9B90(0x707369642E786676, 0xEF6B6E696C79616CLL, 33);
  qword_1EB997930 = result;
  return result;
}

uint64_t sub_1B6BC8084()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  objc_msgSend(*(id *)(v0 + 64), sel_invalidate);
  uint64_t v2 = *(void **)(v0 + 64);
  *(void *)(v0 + 64) = 0;

  MEMORY[0x1BA9B84C0](*(void *)(v0 + 40), -1, -1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1B6BC8120()
{
  sub_1B6BC8084();

  return swift_deallocClassInstance();
}

void sub_1B6BC8154(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 40));
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *(void **)(v1 + 48);
    if (v3[2] > a1)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v1 + 48) = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v3 = sub_1B6C16904(v3);
        *(void *)(v1 + 48) = v3;
      }
      uint64_t v5 = &v3[2 * a1];
      sub_1B62C6A50(v5[4]);
      void v5[4] = 0;
      void v5[5] = 0;
    }
  }
  uint64_t v6 = *(os_unfair_lock_s **)(v1 + 40);

  os_unfair_lock_unlock(v6);
}

uint64_t type metadata accessor for DisplayClock()
{
  return self;
}

uint64_t sub_1B6BC845C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6BC8494()
{
  sub_1B62E17B4();
  uint64_t v115 = v1;
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v114 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1B6E31098();
  uint64_t v4 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113, v5);
  uint64_t v112 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v106 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117, v7);
  char v9 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6290A98(0, (unint64_t *)&unk_1E9DD6BA8, (unint64_t *)&unk_1E9DD6B98);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v17 = (char *)&v98 - v16;
  uint64_t v101 = v0;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 48));
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v18 = sub_1B6E32168();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  id v130 = 0;
  swift_retain();
  sub_1B6B33E34(v18, (uint64_t *)&v130, 0xD000000000000015, 0x80000001B6F4C840);
  swift_release();
  swift_release();
  uint64_t v19 = *(void *)(v101 + 72);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v102 = v19 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  unint64_t v24 = (unint64_t)(v21 + 63) >> 6;
  int v105 = &v129;
  id v109 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  unint64_t v98 = v24 - 1;
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v103 = 0;
  int64_t v104 = v24;
  unint64_t v26 = 0;
  uint64_t v107 = v25;
  uint64_t v99 = v25 + 104;
  unint64_t v100 = v24 - 5;
  long long v116 = xmmword_1B6E77050;
  id v110 = v17;
  id v111 = v14;
  uint64_t v108 = v9;
  if (!v23) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v121 = (v23 - 1) & v23;
  unint64_t v27 = __clz(__rbit64(v23)) | (v26 << 6);
LABEL_9:
  uint64_t v28 = v107;
  sub_1B63675F4(*(void *)(v107 + 48) + *(void *)(v106 + 72) * v27, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  uint64_t v29 = *(void *)(v28 + 56) + 160 * v27;
  sub_1B62909A8(0, (unint64_t *)&unk_1E9DD6B98);
  uint64_t v31 = v30;
  sub_1B6367A74(v29, (uint64_t)&v14[*(int *)(v30 + 48)]);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 0, 1, v31);
  while (1)
  {
    sub_1B6290A28((uint64_t)v14, (uint64_t)v17, (unint64_t *)&unk_1E9DD6BA8, (unint64_t *)&unk_1E9DD6B98);
    sub_1B62909A8(0, (unint64_t *)&unk_1E9DD6B98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v17, 1, v31) == 1) {
      break;
    }
    unint64_t v120 = v26;
    uint64_t v35 = (uint64_t *)&v17[*(int *)(v31 + 48)];
    sub_1B6365FC8((uint64_t)v17, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    sub_1B6380BC4(v35, (uint64_t)&v130);
    sub_1B63800F4((uint64_t)v35);
    switch(v132)
    {
      case 1:
        sub_1B6380AB0((uint64_t)&v130, (uint64_t)v128);
        uint64_t v119 = *(void *)&v9[*(int *)(v117 + 24)];
        sub_1B6380DF0((uint64_t)v128, (uint64_t)&v124, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
        if (v127)
        {
          uint64_t v36 = (void *)MEMORY[0x1BA9B8670](&v124);
          sub_1B6BCB7DC((uint64_t)&v124);
          if (v36)
          {
            id v37 = objc_msgSend(v36, sel_length);
            uint64_t v124 = 1534423139;
            unint64_t v125 = 0xE400000000000000;
            id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
            objc_msgSend(v38, sel_setCountStyle_, 3);
            id v39 = objc_msgSend(v38, sel_stringFromByteCount_, v37);
            sub_1B6E31798();

            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            uint64_t v40 = v124;
            unint64_t v41 = v125;
            unint64_t v42 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
            unint64_t v44 = v42[2];
            unint64_t v43 = v42[3];
            if (v44 >= v43 >> 1) {
              unint64_t v42 = sub_1B6335858(v43 > 1, v44 + 1, 1, v42);
            }
            v42[2] = v44 + 1;
            uint64_t v45 = &v42[2 * v44];
            v45[4] = v40;
            v45[5] = v41;
            swift_unknownObjectRelease();
            v103 += (uint64_t)v37;
          }
          else
          {
            unint64_t v42 = (void *)MEMORY[0x1E4FBC860];
          }
        }
        else
        {
          sub_1B6380D80((uint64_t)&v124, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
          unint64_t v42 = (void *)MEMORY[0x1E4FBC860];
        }
        sub_1B6380DF0((uint64_t)v105, (uint64_t)&v124, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
        if (v125 == 1)
        {
          sub_1B6380D80((uint64_t)&v124, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
        }
        else
        {
          uint64_t v47 = MEMORY[0x1BA9B8670](&v124);
          sub_1B6380F60((uint64_t)&v124);
          if (v47)
          {
            swift_getObjectType();
            uint64_t v48 = sub_1B6367DD0();
            uint64_t v124 = 1534423143;
            unint64_t v125 = 0xE400000000000000;
            id v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
            objc_msgSend(v49, sel_setCountStyle_, 3);
            uint64_t v118 = v48;
            id v50 = objc_msgSend(v49, sel_stringFromByteCount_, v48);
            sub_1B6E31798();

            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            uint64_t v51 = v124;
            unint64_t v52 = v125;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v42 = sub_1B6335858(0, v42[2] + 1, 1, v42);
            }
            unint64_t v54 = v42[2];
            unint64_t v53 = v42[3];
            if (v54 >= v53 >> 1) {
              unint64_t v42 = sub_1B6335858(v53 > 1, v54 + 1, 1, v42);
            }
            v42[2] = v54 + 1;
            uint64_t v55 = &v42[2 * v54];
            v55[4] = v51;
            v55[5] = v52;
            v103 += v118;
            sub_1B67A36D0();
            uint64_t v56 = swift_allocObject();
            *(_OWORD *)(v56 + 16) = v116;
            *(void *)(v56 + 56) = MEMORY[0x1E4FBB550];
            *(void *)(v56 + 64) = MEMORY[0x1E4FBB5C8];
            *(void *)(v56 + 32) = v47;
            sub_1B6E317D8();
            swift_unknownObjectRelease();
          }
        }
        sub_1B6380DF0((uint64_t)v105, (uint64_t)&v124, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
        if (v125 == 1)
        {
          sub_1B6380D80((uint64_t)&v124, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
          uint64_t v57 = 0;
        }
        else
        {
          uint64_t v57 = v126;
          sub_1B6380F60((uint64_t)&v124);
        }
        sub_1B6380DF0((uint64_t)v128, (uint64_t)&v124, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
        if (v127)
        {
          uint64_t v58 = v126;
          sub_1B6BCB7DC((uint64_t)&v124);
        }
        else
        {
          sub_1B6380D80((uint64_t)&v124, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
          uint64_t v58 = 0;
        }
        if (v58 + v57 < 1)
        {
          if (v42[2]) {
            goto LABEL_58;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v42 = sub_1B6335858(0, 1, 1, v42);
          }
          unint64_t v89 = v42[2];
          unint64_t v88 = v42[3];
          if (v89 >= v88 >> 1) {
            unint64_t v42 = sub_1B6335858(v88 > 1, v89 + 1, 1, v42);
          }
          v42[2] = v89 + 1;
          unint64_t v90 = &v42[2 * v89];
          v90[4] = 1701736302;
          char v66 = v90 + 4;
          unint64_t v61 = 0xE400000000000000;
        }
        else
        {
          uint64_t v122 = 0x284B41454CLL;
          unint64_t v123 = 0xE500000000000000;
          sub_1B6380DF0((uint64_t)v105, (uint64_t)&v124, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
          if (v125 == 1)
          {
            sub_1B6380D80((uint64_t)&v124, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
            uint64_t v59 = 0;
          }
          else
          {
            uint64_t v59 = v126;
            sub_1B6380F60((uint64_t)&v124);
          }
          sub_1B6380DF0((uint64_t)v128, (uint64_t)&v124, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
          if (v127)
          {
            uint64_t v60 = v126;
            sub_1B6BCB7DC((uint64_t)&v124);
          }
          else
          {
            sub_1B6380D80((uint64_t)&v124, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
            uint64_t v60 = 0;
          }
          uint64_t v124 = v60 + v59;
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v62 = v122;
          unint64_t v61 = v123;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v42 = sub_1B6335858(0, v42[2] + 1, 1, v42);
          }
          unint64_t v64 = v42[2];
          unint64_t v63 = v42[3];
          if (v64 >= v63 >> 1) {
            unint64_t v42 = sub_1B6335858(v63 > 1, v64 + 1, 1, v42);
          }
          v42[2] = v64 + 1;
          uint64_t v65 = &v42[2 * v64];
          v65[4] = v62;
          char v66 = v65 + 4;
        }
        v66[1] = v61;
LABEL_58:
        if ((v119 & 0x60) == 0)
        {
          if ((v119 & 0x100) == 0) {
            goto LABEL_71;
          }
LABEL_66:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v42 = sub_1B6335858(0, v42[2] + 1, 1, v42);
          }
          unint64_t v73 = v42[2];
          unint64_t v72 = v42[3];
          if (v73 >= v72 >> 1) {
            unint64_t v42 = sub_1B6335858(v72 > 1, v73 + 1, 1, v42);
          }
          v42[2] = v73 + 1;
          uint64_t v74 = &v42[2 * v73];
          v74[4] = 0x6361667275736F69;
          v74[5] = 0xE900000000000065;
          goto LABEL_71;
        }
        uint64_t v124 = 0;
        unint64_t v125 = 0xE000000000000000;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v67 = v124;
        unint64_t v68 = v125;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v42 = sub_1B6335858(0, v42[2] + 1, 1, v42);
        }
        unint64_t v70 = v42[2];
        unint64_t v69 = v42[3];
        if (v70 >= v69 >> 1) {
          unint64_t v42 = sub_1B6335858(v69 > 1, v70 + 1, 1, v42);
        }
        v42[2] = v70 + 1;
        uint64_t v71 = &v42[2 * v70];
        v71[4] = v67;
        v71[5] = v68;
        if ((v119 & 0x100) != 0) {
          goto LABEL_66;
        }
LABEL_71:
        uint64_t v124 = (uint64_t)v42;
        sub_1B6380E70(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1B6646D3C();
        sub_1B6E31638();
        swift_bridgeObjectRelease();
        sub_1B6380EBC((uint64_t)v128);
LABEL_72:
        id v130 = (id)sub_1B6E30E58();
        unint64_t v131 = v75;
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        id v77 = v130;
        unint64_t v76 = v131;
        uint64_t v119 = qword_1EB997FD0;
        swift_retain();
        char v78 = sub_1B6E32168();
        uint64_t v79 = qword_1EB997FF0;
        uint64_t v80 = qword_1EB985528;
        swift_retain();
        if (v80 != -1) {
          swift_once();
        }
        sub_1B67A36D0();
        uint64_t v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = v116;
        *(void *)(v81 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v81 + 64) = sub_1B678615C();
        *(void *)(v81 + 32) = v77;
        *(void *)(v81 + 40) = v76;
        swift_bridgeObjectRetain();
        sub_1B6E31258();
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v82 = v112;
        sub_1B6E31088();
        uint64_t v83 = v115[12];
        uint64_t v84 = v115[16];
        uint64_t v85 = v115[20];
        uint64_t v118 = v79;
        uint64_t v86 = (uint64_t)v114;
        id v87 = &v114[v85];
        (*v109)(v114, v82, v113);
        *(unsigned char *)(v86 + v83) = v78;
        *(void *)(v86 + v84) = 0;
        *(void *)id v87 = v77;
        *((void *)v87 + 1) = v76;
        swift_bridgeObjectRetain();
        sub_1B6E31368();
        swift_release();
        sub_1B63677B8(v86, (uint64_t (*)(void))sub_1B62E17B4);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        char v9 = v108;
        sub_1B63677B8((uint64_t)v108, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
        uint64_t v17 = v110;
        uint64_t v14 = v111;
        unint64_t v26 = v120;
        unint64_t v23 = v121;
        if (v121) {
          goto LABEL_8;
        }
LABEL_10:
        unint64_t v32 = v26 + 1;
        if ((uint64_t)(v26 + 1) >= v104)
        {
          unint64_t v32 = v26;
        }
        else
        {
          unint64_t v33 = *(void *)(v102 + 8 * v32);
          if (v33) {
            goto LABEL_12;
          }
          if ((uint64_t)(v26 + 2) < v104)
          {
            unint64_t v33 = *(void *)(v102 + 8 * (v26 + 2));
            if (v33)
            {
              unint64_t v32 = v26 + 2;
LABEL_12:
              uint64_t v121 = (v33 - 1) & v33;
              unint64_t v27 = __clz(__rbit64(v33)) + (v32 << 6);
              unint64_t v26 = v32;
              goto LABEL_9;
            }
            unint64_t v32 = v26 + 2;
            if ((uint64_t)(v26 + 3) < v104)
            {
              unint64_t v33 = *(void *)(v102 + 8 * (v26 + 3));
              if (v33)
              {
                unint64_t v32 = v26 + 3;
                goto LABEL_12;
              }
              unint64_t v32 = v26 + 3;
              if ((uint64_t)(v26 + 4) < v104)
              {
                unint64_t v33 = *(void *)(v102 + 8 * (v26 + 4));
                unint64_t v32 = v26 + 4;
                if (v33) {
                  goto LABEL_12;
                }
                while (v100 != v26)
                {
                  unint64_t v33 = *(void *)(v99 + 8 * v26++);
                  if (v33)
                  {
                    unint64_t v32 = v26 + 4;
                    goto LABEL_12;
                  }
                }
                unint64_t v32 = v98;
              }
            }
          }
        }
        sub_1B62909A8(0, (unint64_t *)&unk_1E9DD6B98);
        uint64_t v31 = v34;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v14, 1, 1, v34);
        uint64_t v121 = 0;
        unint64_t v26 = v32;
        break;
      case 2:
        id v46 = v130;
        swift_getErrorValue();
        sub_1B6E33868();

        goto LABEL_72;
      case 3:
        goto LABEL_72;
      default:

        goto LABEL_72;
    }
  }
  swift_release();
  id v130 = 0;
  unint64_t v131 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  id v130 = (id)0xD000000000000014;
  unint64_t v131 = 0x80000001B6F4C860;
  id v91 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  objc_msgSend(v91, sel_setCountStyle_, 3);
  uint64_t v92 = v103;
  id v93 = objc_msgSend(v91, sel_stringFromByteCount_, v103);
  sub_1B6E31798();

  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v94 = (uint64_t)v130;
  uint64_t v95 = v131;
  int v96 = sub_1B6E32168();
  id v130 = 0;
  swift_retain();
  sub_1B6B33E34(v96, (uint64_t *)&v130, v94, v95);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v101 + 48));
  return v92;
}

void *sub_1B6BC96DC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B6BC970C(void *a1)
{
  sub_1B6BCB6F0(v1, (uint64_t)v10);
  *(void *)uint64_t v1 = a1;
  *(unsigned char *)(v1 + 152) = 2;
  sub_1B6380BC4(v10, (uint64_t)v8);
  if (v9)
  {
    id v3 = a1;
    sub_1B6367968((uint64_t)v10);
    uint64_t v4 = v8;
  }
  else
  {
    uint64_t v5 = v8[0];
    id v6 = a1;
    dispatch_group_leave(v5);

    uint64_t v4 = v10;
  }
  return sub_1B6367968((uint64_t)v4);
}

uint64_t sub_1B6BC97A0()
{
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 48), -1, -1);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B6BC9828()
{
  sub_1B6BC97A0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TextureCache()
{
  return self;
}

uint64_t assignWithCopy for TextureCache.CacheEntry(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_1B6367968(a1);
    int v4 = *((unsigned __int8 *)a2 + 152);
    if (v4 == 2)
    {
      uint64_t v7 = *(void **)a2;
      id v8 = v7;
      *(void *)a1 = v7;
      char v9 = 2;
    }
    else
    {
      if (v4 != 1)
      {
        if (*((unsigned char *)a2 + 152))
        {
          long long v13 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v13;
          long long v14 = a2[2];
          long long v15 = a2[3];
          long long v16 = a2[5];
          *(_OWORD *)(a1 + 64) = a2[4];
          *(_OWORD *)(a1 + 80) = v16;
          *(_OWORD *)(a1 + 32) = v14;
          *(_OWORD *)(a1 + 48) = v15;
          long long v17 = a2[6];
          long long v18 = a2[7];
          long long v19 = a2[8];
          *(_OWORD *)(a1 + 137) = *(long long *)((char *)a2 + 137);
          *(_OWORD *)(a1 + 112) = v18;
          *(_OWORD *)(a1 + 128) = v19;
          *(_OWORD *)(a1 + 96) = v17;
        }
        else
        {
          uint64_t v5 = *(void **)a2;
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *((void *)a2 + 1);
          *(unsigned char *)(a1 + 152) = 0;
          id v6 = v5;
        }
        return a1;
      }
      if (*((void *)a2 + 15))
      {
        swift_unknownObjectWeakCopyInit();
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
        long long v10 = *(long long *)((char *)a2 + 56);
        long long v11 = *(long long *)((char *)a2 + 72);
        long long v12 = *(long long *)((char *)a2 + 88);
        *(_OWORD *)(a1 + 104) = *(long long *)((char *)a2 + 104);
        *(_OWORD *)(a1 + 88) = v12;
        *(_OWORD *)(a1 + 72) = v11;
        *(_OWORD *)(a1 + 56) = v10;
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v20 = *a2;
        long long v21 = a2[1];
        long long v22 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v22;
        *(_OWORD *)a1 = v20;
        *(_OWORD *)(a1 + 16) = v21;
        long long v23 = a2[4];
        long long v24 = a2[5];
        long long v25 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v25;
        *(_OWORD *)(a1 + 64) = v23;
        *(_OWORD *)(a1 + 80) = v24;
      }
      if (*((void *)a2 + 17) == 1)
      {
        long long v26 = a2[8];
        *(void *)(a1 + 144) = *((void *)a2 + 18);
        *(_OWORD *)(a1 + 128) = v26;
      }
      else
      {
        swift_unknownObjectWeakCopyInit();
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(void *)(a1 + 144) = *((void *)a2 + 18);
        swift_unknownObjectRetain();
      }
      char v9 = 1;
    }
    *(unsigned char *)(a1 + 152) = v9;
  }
  return a1;
}

uint64_t assignWithTake for TextureCache.CacheEntry(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1B6367968(a1);
    if (*(unsigned char *)(a2 + 152) == 1)
    {
      if (*(void *)(a2 + 120))
      {
        swift_unknownObjectWeakTakeInit();
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
      }
      else
      {
        long long v8 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v8;
        long long v9 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v9;
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        long long v11 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 136) == 1)
      {
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
      }
      else
      {
        swift_unknownObjectWeakTakeInit();
        uint64_t v12 = *(void *)(a2 + 144);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = v12;
      }
      *(unsigned char *)(a1 + 152) = 1;
    }
    else
    {
      long long v4 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v4;
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
      long long v5 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v5;
      long long v6 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v6;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for TextureCache.CacheEntry()
{
  return &type metadata for TextureCache.CacheEntry;
}

uint64_t assignWithCopy for TextureCache.CacheEntry.State(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 152);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 != 2)
    {
      if (v4 == 1)
      {
        if (*(void *)(a1 + 120))
        {
          swift_unknownObjectWeakDestroy();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 136) != 1)
        {
          swift_unknownObjectWeakDestroy();
          swift_unknownObjectRelease();
        }
LABEL_13:
        unsigned int v5 = *((unsigned __int8 *)a2 + 152);
        if (v5 >= 3) {
          unsigned int v5 = *(_DWORD *)a2 + 3;
        }
        if (v5 == 2)
        {
          long long v8 = *(void **)a2;
          id v9 = v8;
          *(void *)a1 = v8;
          char v10 = 2;
        }
        else
        {
          if (v5 != 1)
          {
            if (v5)
            {
              long long v14 = a2[1];
              *(_OWORD *)a1 = *a2;
              *(_OWORD *)(a1 + 16) = v14;
              long long v15 = a2[2];
              long long v16 = a2[3];
              long long v17 = a2[5];
              *(_OWORD *)(a1 + 64) = a2[4];
              *(_OWORD *)(a1 + 80) = v17;
              *(_OWORD *)(a1 + 32) = v15;
              *(_OWORD *)(a1 + 48) = v16;
              long long v18 = a2[6];
              long long v19 = a2[7];
              long long v20 = a2[8];
              *(_OWORD *)(a1 + 137) = *(long long *)((char *)a2 + 137);
              *(_OWORD *)(a1 + 112) = v19;
              *(_OWORD *)(a1 + 128) = v20;
              *(_OWORD *)(a1 + 96) = v18;
            }
            else
            {
              long long v6 = *(void **)a2;
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = *((void *)a2 + 1);
              *(unsigned char *)(a1 + 152) = 0;
              id v7 = v6;
            }
            return a1;
          }
          if (*((void *)a2 + 15))
          {
            swift_unknownObjectWeakCopyInit();
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(void *)(a1 + 24) = *((void *)a2 + 3);
            *(void *)(a1 + 32) = *((void *)a2 + 4);
            *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
            long long v11 = *(long long *)((char *)a2 + 56);
            long long v12 = *(long long *)((char *)a2 + 72);
            long long v13 = *(long long *)((char *)a2 + 88);
            *(_OWORD *)(a1 + 104) = *(long long *)((char *)a2 + 104);
            *(_OWORD *)(a1 + 88) = v13;
            *(_OWORD *)(a1 + 72) = v12;
            *(_OWORD *)(a1 + 56) = v11;
            *(void *)(a1 + 120) = *((void *)a2 + 15);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v21 = *a2;
            long long v22 = a2[1];
            long long v23 = a2[3];
            *(_OWORD *)(a1 + 32) = a2[2];
            *(_OWORD *)(a1 + 48) = v23;
            *(_OWORD *)a1 = v21;
            *(_OWORD *)(a1 + 16) = v22;
            long long v24 = a2[4];
            long long v25 = a2[5];
            long long v26 = a2[7];
            *(_OWORD *)(a1 + 96) = a2[6];
            *(_OWORD *)(a1 + 112) = v26;
            *(_OWORD *)(a1 + 64) = v24;
            *(_OWORD *)(a1 + 80) = v25;
          }
          if (*((void *)a2 + 17) == 1)
          {
            long long v27 = a2[8];
            *(void *)(a1 + 144) = *((void *)a2 + 18);
            *(_OWORD *)(a1 + 128) = v27;
          }
          else
          {
            swift_unknownObjectWeakCopyInit();
            *(void *)(a1 + 136) = *((void *)a2 + 17);
            *(void *)(a1 + 144) = *((void *)a2 + 18);
            swift_unknownObjectRetain();
          }
          char v10 = 1;
        }
        *(unsigned char *)(a1 + 152) = v10;
        return a1;
      }
      if (v4) {
        goto LABEL_13;
      }
    }

    goto LABEL_13;
  }
  return a1;
}

uint64_t initializeWithTake for TextureCache.CacheEntry.State(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 152);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    *(void *)a1 = *(void *)a2;
    char v5 = 2;
LABEL_16:
    *(unsigned char *)(a1 + 152) = v5;
    return a1;
  }
  if (v4 == 1)
  {
    if (*(void *)(a2 + 120))
    {
      swift_unknownObjectWeakTakeInit();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
    }
    else
    {
      long long v10 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v10;
      long long v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      long long v13 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v13;
    }
    if (*(void *)(a2 + 136) == 1)
    {
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
    }
    else
    {
      swift_unknownObjectWeakTakeInit();
      uint64_t v14 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v14;
    }
    char v5 = 1;
    goto LABEL_16;
  }
  if (v4)
  {
    long long v6 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v6;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 152) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TextureCache.CacheEntry.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 153)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 152);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TextureCache.CacheEntry.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 137) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 153) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 153) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 152) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6BC9F78(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 152);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1B6BC9F94(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    unsigned int v2 = a2 - 3;
    *(void *)(result + 144) = 0;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 152) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TextureCache.CacheEntry.State()
{
  return &type metadata for TextureCache.CacheEntry.State;
}

uint64_t *sub_1B6BC9FDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    long long v8 = (char *)a1 + v7;
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1B6E30F48();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    long long v12 = (_OWORD *)((char *)v4 + v11);
    long long v13 = (_OWORD *)((char *)a2 + v11);
    long long v14 = v13[1];
    *long long v12 = *v13;
    v12[1] = v14;
    void v12[2] = v13[2];
    *(_OWORD *)((char *)v12 + 42) = *(_OWORD *)((char *)v13 + 42);
  }
  return v4;
}

unsigned char *sub_1B6BCA0DC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_1B6E30F48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  long long v12 = &a2[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  long long v13 = *(_OWORD *)(v12 + 8);
  v11[24] = v12[24];
  *(_OWORD *)(v11 + 8) = v13;
  long long v14 = *(_OWORD *)(v12 + 42);
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *(_OWORD *)(v11 + 42) = v14;
  return a1;
}

unsigned char *sub_1B6BCA19C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_1B6E30F48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  long long v12 = &a2[v10];
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  _OWORD v11[2] = v12[2];
  *(_OWORD *)((char *)v11 + 42) = *(_OWORD *)((char *)v12 + 42);
  return a1;
}

unsigned char *sub_1B6BCA24C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_1B6E30F48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  long long v12 = &a2[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
  v11[24] = v12[24];
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *(_OWORD *)(v11 + 42) = *(_OWORD *)(v12 + 42);
  return a1;
}

uint64_t sub_1B6BCA30C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1B6E30F48();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

unsigned char *sub_1B6BCA3B4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1B6E30F48();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1B6BCA458()
{
  uint64_t result = sub_1B6E30F48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureCache.AsyncGroupRequestState()
{
  return &type metadata for TextureCache.AsyncGroupRequestState;
}

uint64_t sub_1B6BCA508()
{
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v1 = type metadata accessor for TextureCache.TextureKey();
  sub_1B6E30F48();
  sub_1B6BCB80C((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
  sub_1B6E315B8();
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  unsigned int v3 = *(unsigned __int8 *)(v2 + 24);
  __int16 v4 = *(_WORD *)(v2 + 56);
  sub_1B6E33928();
  if (v3 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v3 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v4 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v4 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  sub_1B6E33938();
  return sub_1B6E33988();
}

uint64_t sub_1B6BCA6E8(uint64_t a1, uint64_t a2)
{
  sub_1B6E33928();
  sub_1B6E30F48();
  sub_1B6BCB80C((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
  sub_1B6E315B8();
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  unsigned int v5 = *(unsigned __int8 *)(v4 + 24);
  __int16 v6 = *(_WORD *)(v4 + 56);
  sub_1B6E33928();
  if (v5 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v5 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v6 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v6 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  return sub_1B6E33938();
}

uint64_t sub_1B6BCA894(uint64_t a1, uint64_t a2)
{
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E30F48();
  sub_1B6BCB80C((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
  sub_1B6E315B8();
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  unsigned int v5 = *(unsigned __int8 *)(v4 + 24);
  __int16 v6 = *(_WORD *)(v4 + 56);
  sub_1B6E33928();
  if (v5 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v5 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v6 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v6 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  sub_1B6E33938();
  return sub_1B6E33988();
}

BOOL sub_1B6BCAA64(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*a1 == *a2 && (MEMORY[0x1BA9B2B40](&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)]) & 1) != 0)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    long long v7 = *(_OWORD *)&a1[v6 + 16];
    v12[0] = *(_OWORD *)&a1[v6];
    v12[1] = v7;
    v13[0] = *(_OWORD *)&a1[v6 + 32];
    *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)&a1[v6 + 42];
    uint64_t v8 = &a2[v6];
    long long v9 = *((_OWORD *)v8 + 1);
    v14[0] = *(_OWORD *)v8;
    v14[1] = v9;
    v15[0] = *((_OWORD *)v8 + 2);
    *(_OWORD *)((char *)v15 + 10) = *(_OWORD *)(v8 + 42);
    return sub_1B6D01570((uint64_t)v12, (uint64_t)v14);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BCAB14()
{
  return sub_1B6BCB80C((unint64_t *)&unk_1EB97E320, (void (*)(uint64_t))type metadata accessor for TextureCache.TextureKey);
}

void sub_1B6BCAB5C(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TextureCache.TextureKey();
  MEMORY[0x1F4188790](v6 - 8, v7);
  long long v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 48));
  sub_1B63675F4(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  uint64_t v11 = sub_1B6366A74(v23, (uint64_t)v9);
  if (*(unsigned __int8 *)(v10 + 152) != 255)
  {
    uint64_t v12 = v10;
    sub_1B6380BC4((uint64_t *)v10, (uint64_t)&v20);
    if (v22)
    {
      sub_1B6367968((uint64_t)&v20);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      long long v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      uint64_t v18 = (uint64_t)v20;
      unint64_t v19 = v21;
      sub_1B6E31948();
      sub_1B63619BC(a1, (uint64_t)&v20);
      sub_1B6E32B18();
      sub_1B6E31948();
      sub_1B6E32B18();
      uint64_t v13 = v18;
      uint64_t v14 = v19;
      int v15 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      long long v20 = 0;
      swift_retain();
      sub_1B6B33E34(v15, (uint64_t *)&v20, v13, v14);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      long long v16 = v20;
      uint64_t v17 = v21;
      sub_1B6381B78(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6381BDC);
      sub_1B6381A18(a1, v17, (uint64_t)&v20);
      char v22 = 1;
      sub_1B63817FC((uint64_t)&v20, v12);
      dispatch_group_leave(v16);
    }
  }
  ((void (*)(void *, void))v11)(v23, 0);
  sub_1B63677B8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 48));
}

BOOL sub_1B6BCAEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[0] = a2;
  v22[1] = a3;
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62909A8(0, (unint64_t *)&unk_1E9DD6B98);
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)v22 - v16;
  uint64_t v18 = (uint64_t)v22 + *(int *)(v10 + 56) - v16;
  sub_1B63675F4(a1, (uint64_t)v22 - v16, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  sub_1B6367A74(v22[0], v18);
  uint64_t v19 = (uint64_t)&v13[*(int *)(v10 + 56)];
  sub_1B63675F4((uint64_t)v17, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  sub_1B6367A74(v18, v19);
  uint64_t v20 = type metadata accessor for TextureCache.TextureKey();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, &v13[*(int *)(v20 + 20)], v4);
  sub_1B63677B8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  sub_1B6BCB80C((unint64_t *)&qword_1E9DD2A10, MEMORY[0x1E4F276F0]);
  LOBYTE(v18) = sub_1B6E31708();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1B6BCB854((uint64_t)v17);
  sub_1B63800F4(v19);
  return (v18 & 1) == 0;
}

id sub_1B6BCB11C()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  qword_1EB9853E0 = (uint64_t)result;
  return result;
}

void *sub_1B6BCB150()
{
  id result = sub_1B67F57DC(MEMORY[0x1E4FBC860]);
  off_1EB9853C8 = result;
  return result;
}

void *sub_1B6BCB178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B67FFA8C);
}

void *sub_1B6BCB190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B67FFDF0);
}

void *sub_1B6BCB1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B67FF750);
}

void sub_1B6BCB1C0(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a3 + 48));
  uint64_t v14 = *(void *)(a3 + 136);
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1B69FB0D8(a1, a2), (v16 & 1) != 0))
  {
    uint64_t v17 = (long long *)(*(void *)(v14 + 56) + (v15 << 7));
    long long v19 = v17[2];
    long long v18 = v17[3];
    long long v20 = v17[1];
    long long v66 = *v17;
    long long v67 = v20;
    long long v68 = v19;
    long long v69 = v18;
    long long v22 = v17[6];
    long long v21 = v17[7];
    long long v23 = v17[5];
    long long v70 = v17[4];
    long long v71 = v23;
    long long v72 = v22;
    long long v73 = v21;
    uint64_t v25 = *((void *)&v66 + 1);
    uint64_t v24 = v66;
    uint64_t v26 = v67;
    char v27 = BYTE8(v67);
    __int16 v51 = WORD1(v68);
    __int16 v52 = v68;
    __int16 v49 = WORD3(v68);
    __int16 v50 = WORD2(v68);
    char v47 = BYTE9(v68);
    char v48 = BYTE8(v68);
    char v46 = BYTE10(v68);
    uint64_t v44 = *((void *)&v69 + 1);
    uint64_t v45 = v69;
    uint64_t v42 = *((void *)&v70 + 1);
    uint64_t v43 = v70;
    uint64_t v40 = *((void *)&v23 + 1);
    uint64_t v41 = v23;
    uint64_t v39 = v22;
    char v37 = BYTE9(v22);
    char v38 = BYTE8(v22);
    char v36 = BYTE10(v22);
    char v28 = BYTE11(v22);
    uint64_t v29 = *((void *)&v21 + 1);
    uint64_t v30 = v21;
    uint64_t v31 = *(os_unfair_lock_s **)(a3 + 48);
    sub_1B69168B8((uint64_t)&v66);
    unint64_t v32 = v31;
  }
  else
  {
    sub_1B69D26E8(a4, a5, a6, (uint64_t)&v66);
    uint64_t v35 = a2;
    char v34 = a1;
    uint64_t v25 = *((void *)&v66 + 1);
    uint64_t v24 = v66;
    uint64_t v26 = v67;
    char v27 = BYTE8(v67);
    char v28 = BYTE11(v72);
    uint64_t v29 = *((void *)&v73 + 1);
    uint64_t v30 = v73;
    __int16 v51 = WORD1(v68);
    __int16 v52 = v68;
    __int16 v49 = WORD3(v68);
    __int16 v50 = WORD2(v68);
    char v47 = BYTE9(v68);
    char v48 = BYTE8(v68);
    char v46 = BYTE10(v68);
    uint64_t v44 = *((void *)&v69 + 1);
    uint64_t v45 = v69;
    uint64_t v42 = *((void *)&v70 + 1);
    uint64_t v43 = v70;
    uint64_t v40 = *((void *)&v71 + 1);
    uint64_t v41 = v71;
    uint64_t v39 = v72;
    char v37 = BYTE9(v72);
    char v38 = BYTE8(v72);
    char v36 = BYTE10(v72);
    sub_1B69168B8((uint64_t)&v66);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = *(void *)(a3 + 136);
    *(void *)(a3 + 136) = 0x8000000000000000;
    long long v53 = v66;
    uint64_t v54 = v67;
    char v55 = BYTE8(v67);
    uint64_t v56 = v68;
    __int16 v57 = WORD4(v68);
    char v58 = BYTE10(v68);
    long long v59 = v69;
    long long v60 = v70;
    long long v61 = v71;
    uint64_t v62 = v72;
    int v63 = DWORD2(v72);
    long long v64 = v73;
    sub_1B67E6E50((uint64_t *)&v53, v34, v35, isUniquelyReferenced_nonNull_native);
    *(void *)(a3 + 136) = v65;
    swift_bridgeObjectRelease();
    unint64_t v32 = *(os_unfair_lock_s **)(a3 + 48);
  }
  os_unfair_lock_unlock(v32);
  *(void *)a7 = v24;
  *(void *)(a7 + 8) = v25;
  *(void *)(a7 + 16) = v26;
  *(unsigned char *)(a7 + 24) = v27;
  *(_WORD *)(a7 + 32) = v52;
  *(_WORD *)(a7 + 34) = v51;
  *(_WORD *)(a7 + 36) = v50;
  *(_WORD *)(a7 + 38) = v49;
  *(unsigned char *)(a7 + 40) = v48;
  *(unsigned char *)(a7 + 41) = v47;
  *(unsigned char *)(a7 + 42) = v46;
  *(void *)(a7 + 48) = v45;
  *(void *)(a7 + 56) = v44;
  *(void *)(a7 + 64) = v43;
  *(void *)(a7 + 72) = v42;
  *(void *)(a7 + 80) = v41;
  *(void *)(a7 + 88) = v40;
  *(void *)(a7 + 96) = v39;
  *(unsigned char *)(a7 + 104) = v38;
  *(unsigned char *)(a7 + 105) = v37;
  *(unsigned char *)(a7 + 106) = v36;
  *(unsigned char *)(a7 + 107) = v28;
  *(void *)(a7 + 112) = v30;
  *(void *)(a7 + 120) = v29;
}

void *sub_1B6BCB514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B6802FF0);
}

void *sub_1B6BCB52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B6802F14);
}

void *sub_1B6BCB544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B67FFAD4);
}

void *sub_1B6BCB55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B67FFE18);
}

void *sub_1B6BCB574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B6800138);
}

void *sub_1B6BCB58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B6800478);
}

void *sub_1B6BCB5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B67FF778);
}

uint64_t sub_1B6BCB5BC()
{
  uint64_t v1 = (int *)(type metadata accessor for TextureCache.TextureKey() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_unownedRelease();
  uint64_t v6 = v0 + v1[7] + v3;
  uint64_t v7 = sub_1B6E30F48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1B6BCB6B8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6BCB6F0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6BCB728(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6BCB760(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit();
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 72);
  long long v6 = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 88) = v6;
  *(_OWORD *)(a2 + 72) = v5;
  *(_OWORD *)(a2 + 56) = v4;
  *(void *)(a2 + 120) = *(void *)(a1 + 120);
  return a2;
}

uint64_t sub_1B6BCB7DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6BCB80C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6BCB854(uint64_t a1)
{
  sub_1B62909A8(0, (unint64_t *)&unk_1E9DD6B98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B6BCB8C0(void *a1)
{
  uint64_t v3 = (_DWORD *)swift_slowAlloc();
  *uint64_t v3 = 0;
  *(void *)(v1 + 24) = "lock TextureCache";
  *(void *)(v1 + 32) = 17;
  *(unsigned char *)(v1 + 40) = 2;
  *(void *)(v1 + 48) = v3;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  id v5 = objc_msgSend(self, sel_processInfo);
  id v6 = objc_msgSend(v5, sel_processorCount);

  objc_msgSend(v4, sel_setMaxConcurrentOperationCount_, v6);
  *(void *)(v1 + 56) = v4;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 64) = sub_1B67F5818(MEMORY[0x1E4FBC860]);
  *(void *)(v1 + 72) = sub_1B67DF384(v7);
  *(void *)(v1 + 128) = sub_1B639A184(v7);
  *(void *)(v1 + 136) = sub_1B67F58E4(v7);
  *(void *)(v1 + 144) = 0;
  *(void *)(v1 + 16) = a1;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F35300]);
  swift_unknownObjectRetain();
  id v9 = objc_msgSend(v8, sel_init);
  objc_msgSend(v9, sel_setSupportArgumentBuffers_, 1);
  objc_msgSend(v9, sel_setMipFilter_, 2);
  objc_msgSend(v9, sel_setMinFilter_, 1);
  objc_msgSend(v9, sel_setMagFilter_, 1);
  *(void *)(v1 + 80) = objc_msgSend(a1, sel_newSamplerStateWithDescriptor_, v9);
  objc_msgSend(v9, sel_setMipFilter_, 1);
  *(void *)(v1 + 96) = objc_msgSend(a1, sel_newSamplerStateWithDescriptor_, v9);
  objc_msgSend(v9, sel_setSAddressMode_, 2);
  *(void *)(v1 + 112) = objc_msgSend(a1, sel_newSamplerStateWithDescriptor_, v9);
  objc_msgSend(v9, sel_setRAddressMode_, 2);
  objc_msgSend(v9, sel_setTAddressMode_, 2);
  *(void *)(v1 + 104) = objc_msgSend(a1, sel_newSamplerStateWithDescriptor_, v9);
  objc_msgSend(v9, sel_setMipFilter_, 2);
  *(void *)(v1 + 88) = objc_msgSend(a1, sel_newSamplerStateWithDescriptor_, v9);
  objc_msgSend(v9, sel_setMipFilter_, 1);
  objc_msgSend(v9, sel_setRAddressMode_, 3);
  objc_msgSend(v9, sel_setSAddressMode_, 3);
  objc_msgSend(v9, sel_setTAddressMode_, 3);
  id v10 = objc_msgSend(a1, sel_newSamplerStateWithDescriptor_, v9);

  *(void *)(v1 + 120) = v10;
  return v1;
}

uint64_t destroy for TextureCache.WeakStorage.GPU()
{
  swift_unknownObjectWeakDestroy();

  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for TextureCache.WeakStorage.GPU(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TextureCache.WeakStorage.GPU(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for TextureCache.WeakStorage.GPU()
{
  return &type metadata for TextureCache.WeakStorage.GPU;
}

uint64_t destroy for TextureCache.WeakStorage.CPU()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextureCache.WeakStorage.CPU(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextureCache.WeakStorage.CPU(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_WORD *)(a1 + 46) = *(_WORD *)(a2 + 46);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TextureCache.WeakStorage.CPU(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextureCache.WeakStorage.CPU()
{
  return &type metadata for TextureCache.WeakStorage.CPU;
}

uint64_t destroy for TextureCache.Texture(uint64_t *a1)
{
  return sub_1B6381C38(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
}

uint64_t *initializeWithCopy for TextureCache.Texture(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  sub_1B6381BDC(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  return a1;
}

uint64_t assignWithCopy for TextureCache.Texture(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v25 = a2[10];
  uint64_t v26 = a2[11];
  uint64_t v27 = a2[12];
  uint64_t v28 = a2[13];
  uint64_t v29 = a2[14];
  sub_1B6381BDC(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v27;
  *(void *)(a1 + 104) = v28;
  *(void *)(a1 + 112) = v29;
  sub_1B6381C38(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1));
  return a1;
}

__n128 initializeWithTake for TextureCPURuntime(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for TextureCache.Texture(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 112);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  long long v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v3;
  sub_1B6381C38(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for TextureCache.Texture(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 24) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for TextureCache.Texture(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 2 * -a2;
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(void *)(a1 + 112) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1B6BCC290(uint64_t a1)
{
  return *(void *)(a1 + 104) >> 63;
}

uint64_t sub_1B6BCC29C(uint64_t result)
{
  *(void *)(result + 104) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1B6BCC2AC(uint64_t result, int a2)
{
  uint64_t v2 = *(void *)(result + 40) & 0x1FFFFLL;
  *(void *)(result + 24) &= 1uLL;
  *(void *)(result + 40) = v2;
  *(_DWORD *)(result + 108) = a2 << 31;
  return result;
}

ValueMetadata *type metadata accessor for TextureCache.Texture()
{
  return &type metadata for TextureCache.Texture;
}

uint64_t assignWithCopy for TextureCache.WeakStorage(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 15);
  if (*(void *)(a1 + 120))
  {
    if (v4)
    {
      swift_unknownObjectWeakCopyAssign();
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
      *(_WORD *)(a1 + 42) = *((_WORD *)a2 + 21);
      *(_WORD *)(a1 + 44) = *((_WORD *)a2 + 22);
      *(_WORD *)(a1 + 46) = *((_WORD *)a2 + 23);
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
      *(unsigned char *)(a1 + 50) = *((unsigned char *)a2 + 50);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      *(void *)(a1 + 64) = *((void *)a2 + 8);
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
      *(unsigned char *)(a1 + 114) = *((unsigned char *)a2 + 114);
      *(unsigned char *)(a1 + 115) = *((unsigned char *)a2 + 115);
      *(void *)(a1 + 120) = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B6BCB7DC(a1);
      long long v8 = a2[3];
      long long v10 = *a2;
      long long v9 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v8;
      *(_OWORD *)a1 = v10;
      *(_OWORD *)(a1 + 16) = v9;
      long long v11 = a2[7];
      long long v13 = a2[4];
      long long v12 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v11;
      *(_OWORD *)(a1 + 64) = v13;
      *(_OWORD *)(a1 + 80) = v12;
    }
  }
  else if (v4)
  {
    swift_unknownObjectWeakCopyInit();
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
    long long v5 = *(long long *)((char *)a2 + 56);
    long long v6 = *(long long *)((char *)a2 + 72);
    long long v7 = *(long long *)((char *)a2 + 88);
    *(_OWORD *)(a1 + 104) = *(long long *)((char *)a2 + 104);
    *(_OWORD *)(a1 + 88) = v7;
    *(_OWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 56) = v5;
    *(void *)(a1 + 120) = *((void *)a2 + 15);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *a2;
    long long v15 = a2[1];
    long long v16 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v16;
    *(_OWORD *)a1 = v14;
    *(_OWORD *)(a1 + 16) = v15;
    long long v17 = a2[4];
    long long v18 = a2[5];
    long long v19 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v19;
    *(_OWORD *)(a1 + 64) = v17;
    *(_OWORD *)(a1 + 80) = v18;
  }
  long long v20 = (long long *)(a1 + 128);
  long long v21 = a2 + 8;
  uint64_t v22 = *((void *)a2 + 17);
  if (*(void *)(a1 + 136) == 1)
  {
    if (v22 == 1)
    {
      long long v23 = *v21;
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      *long long v20 = v23;
    }
    else
    {
      swift_unknownObjectWeakCopyInit();
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      swift_unknownObjectRetain();
    }
  }
  else if (v22 == 1)
  {
    sub_1B6380F60(a1 + 128);
    uint64_t v24 = *((void *)a2 + 18);
    *long long v20 = *v21;
    *(void *)(a1 + 144) = v24;
  }
  else
  {
    swift_unknownObjectWeakCopyAssign();
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(void *)(a1 + 144) = *((void *)a2 + 18);
  }
  return a1;
}

uint64_t assignWithTake for TextureCache.WeakStorage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v4)
    {
      swift_unknownObjectWeakTakeAssign();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_unknownObjectRelease();
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1B6BCB7DC(a1);
  }
  else if (v4)
  {
    swift_unknownObjectWeakTakeInit();
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136) != 1)
  {
    if (v9 != 1)
    {
      swift_unknownObjectWeakTakeAssign();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_unknownObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      return a1;
    }
    sub_1B6380F60(a1 + 128);
    goto LABEL_13;
  }
  if (v9 == 1)
  {
LABEL_13:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    return a1;
  }
  swift_unknownObjectWeakTakeInit();
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for TextureCache.WeakStorage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 152)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 120);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureCache.WeakStorage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 0;
    }
    if (a2) {
      *(void *)(result + 120) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureCache.WeakStorage()
{
  return &type metadata for TextureCache.WeakStorage;
}

void *initializeBufferWithCopyOfBuffer for TextureCache.CacheEntry.Loading(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for TextureCache.CacheEntry.Loading(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TextureCache.CacheEntry.Loading(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for TextureCache.CacheEntry.Loading()
{
  return &type metadata for TextureCache.CacheEntry.Loading;
}

unsigned char *storeEnumTagSinglePayload for TextureCache.StorageKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BCC9A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureCache.StorageKind()
{
  return &type metadata for TextureCache.StorageKind;
}

unint64_t sub_1B6BCC9E0()
{
  unint64_t result = qword_1E9DD6BB8;
  if (!qword_1E9DD6BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6BB8);
  }
  return result;
}

uint64_t type metadata accessor for ParticleTargetFromPosition.System()
{
  return self;
}

const char *sub_1B6BCCA60()
{
  return "ParticleTargetFromPosition";
}

uint64_t sub_1B6BCCA74(uint64_t a1)
{
  unint64_t v2 = sub_1B6BCD020();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BCCAB0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BCD020();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BCCAEC(void *a1)
{
  sub_1B6BCCFC4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  long long v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BCD020();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6BCCBF8()
{
  return type metadata accessor for ParticleTargetFromPosition.System();
}

uint64_t *sub_1B6BCCC18(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  long long v2 = *(_OWORD *)(a1 + 104);
  long long v52 = *(_OWORD *)(a1 + 88);
  long long v53 = v2;
  uint64_t v54 = *(void *)(a1 + 120);
  swift_retain();
  sub_1B663F538((uint64_t)v38);
  v50[0] = v38[0];
  v50[1] = v38[1];
  uint64_t v51 = v39;
  sub_1B62C9DA8(v1, (uint64_t)v50, 0x200000000, v40);
  sub_1B62CA210((uint64_t)v40, (uint64_t)v41, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v41[0])
  {
    if (v47 > 0 && (uint64_t v34 = v44) != 0)
    {
      uint64_t v3 = v46;
      uint64_t v4 = v46[4];
      char v37 = *(unsigned char *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v48[0] = v41[0];
      v48[1] = v41[1];
      uint64_t v49 = v42;
      uint64_t v32 = (uint64_t)(v46 + 6);
      uint64_t v33 = v43;
      uint64_t v31 = v46 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v30 = v4;
      do
      {
        long long v7 = (unsigned int *)(v33 + 48 * v5);
        uint64_t v8 = *v7;
        uint64_t v35 = v7[1];
        uint64_t v36 = v6;
        uint64_t v10 = (uint64_t *)*((void *)v7 + 2);
        uint64_t v9 = *((void *)v7 + 3);
        uint64_t v12 = *((void *)v7 + 4);
        uint64_t v11 = *((void *)v7 + 5);
        if (v37)
        {
          long long v13 = *(os_unfair_lock_s **)(v11 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v13);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v4);
        sub_1B62CA210(v32, (uint64_t)v55, &qword_1EB97DE20);
        uint64_t v14 = v3[4];
        uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v3[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
        v3[7] = v15;
        v31[1] = 0;
        v31[2] = 0;
        *uint64_t v31 = 0;
        swift_release();
        long long v16 = (long long *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v10, v9, v12, (uint64_t)v3);
        long long v17 = (_OWORD *)sub_1B62C9024((uint64_t)&type metadata for ParticleTarget, (uint64_t)&off_1F0F64DE8, v10, v9, v12, (uint64_t)v3);
        if (v10)
        {
          if (v12)
          {
            HIDWORD(v18) = v29;
            do
            {
              int v19 = HIDWORD(v18);
              long long v20 = *v16++;
              long long v18 = v20;
              HIDWORD(v18) = v19;
              *v17++ = v18;
              --v12;
            }
            while (v12);
            int v29 = v19;
          }
        }
        else if (v8 != v35)
        {
          uint64_t v21 = v35 - v8;
          uint64_t v22 = &v17[v8];
          long long v23 = &v16[v8];
          HIDWORD(v24) = v28;
          do
          {
            int v25 = HIDWORD(v24);
            long long v26 = *v23++;
            long long v24 = v26;
            HIDWORD(v24) = v25;
            *v22++ = v24;
            --v21;
          }
          while (v21);
          int v28 = v25;
        }
        uint64_t v4 = v30;
        uint64_t v6 = v36;
        sub_1B6345178(v3, (unsigned __int16 **)v48, (uint64_t)v55);
        sub_1B634507C((char *)v11);
        ecs_stack_allocator_pop_snapshot(v30);
        if (v37)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
        }
        swift_release();
        ++v5;
      }
      while (v5 != v34);
      sub_1B62CA064((uint64_t)v38);
    }
    else
    {
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B62CA064((uint64_t)v38);
    }
    swift_release();
    sub_1B632F170(v40);
    return sub_1B632F170(v40);
  }
  else
  {
    sub_1B62CA064((uint64_t)v38);
    return (uint64_t *)swift_release();
  }
}

ValueMetadata *type metadata accessor for ParticleTargetFromPosition()
{
  return &type metadata for ParticleTargetFromPosition;
}

void sub_1B6BCCFC4()
{
  if (!qword_1E9DD6BC0)
  {
    sub_1B6BCD020();
    unint64_t v0 = sub_1B6E33038();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6BC0);
    }
  }
}

unint64_t sub_1B6BCD020()
{
  unint64_t result = qword_1E9DD6BC8;
  if (!qword_1E9DD6BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleTargetFromPosition.CodingKeys()
{
  return &type metadata for ParticleTargetFromPosition.CodingKeys;
}

unint64_t sub_1B6BCD088()
{
  unint64_t result = qword_1E9DD6BD0;
  if (!qword_1E9DD6BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6BD0);
  }
  return result;
}

unint64_t sub_1B6BCD0E0()
{
  unint64_t result = qword_1E9DD6BD8;
  if (!qword_1E9DD6BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6BD8);
  }
  return result;
}

uint64_t sub_1B6BCD134(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  if (!*(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer)) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = 0;
  int v4 = a1 ? a1 : -1;
  if ((v4 != -1 || HIDWORD(a1))
    && (v4 & 0x80000000) == 0
    && *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v4
    && ((uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * v4 + 8) == HIDWORD(a1)))
  {
    uint64_t v62 = (unsigned int *)(v5 + 12 * v4);
    sub_1B62EE900(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v62 + 32), *v62 | ((unint64_t)*((unsigned __int16 *)v62 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v62 + 2) << 32), 656, *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager), (uint64_t)v92);
  }
  else
  {
    sub_1B6965F70(v85);
    sub_1B6BCD964((uint64_t)v85, (uint64_t)v92, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
  }
  sub_1B6BCD964((uint64_t)v92, (uint64_t)v84, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
  sub_1B6BCD964((uint64_t)v84, (uint64_t)v85, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
  if (sub_1B6388C10(v85) == 1) {
    return MEMORY[0x1E4FBC860];
  }
  if (v91 == 1)
  {
LABEL_38:
    sub_1B62EDED8(v84);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v111 = v85[7];
  int v112 = v86;
  char v113 = v87;
  uint64_t v114 = v88;
  char v115 = v89;
  uint64_t v116 = v90;
  swift_retain();
  sub_1B663CAB8((uint64_t)v93);
  v108[0] = v93[0];
  v108[1] = v93[1];
  uint64_t v109 = v94;
  sub_1B62C9DA8(v2, (uint64_t)v108, 0x200000000, v95);
  sub_1B6BCD964((uint64_t)v95, (uint64_t)v96, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v96[0])
  {
    sub_1B62CA064((uint64_t)v93);
    swift_release();
    goto LABEL_38;
  }
  long long v103 = v96[0];
  long long v104 = v96[1];
  uint64_t v105 = v97;
  uint64_t v70 = v98;
  uint64_t v71 = v99;
  uint64_t v81 = v100;
  uint64_t v6 = v101;
  uint64_t v7 = v102;
  sub_1B62CA064((uint64_t)v93);
  uint64_t v8 = sub_1B68007AC(24 * v7, 0);
  if (!v8)
  {
    swift_release();
    sub_1B632F170(v95);
    goto LABEL_38;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F351A0]), sel_init);
  objc_msgSend(v12, sel_setIntersectionFunctionTableOffset_, 0);
  objc_msgSend(v12, sel_setBoundingBoxBuffer_, v10);
  objc_msgSend(v12, sel_setBoundingBoxBufferOffset_, v11);
  objc_msgSend(v12, sel_setBoundingBoxStride_, 24);
  id v66 = v12;
  objc_msgSend(v12, sel_setBoundingBoxCount_, v7);
  long long v67 = v10;
  id v13 = objc_msgSend(v10, sel_storageMode);
  uint64_t v14 = 0;
  if (v13 != (id)2)
  {
    uint64_t v15 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v16 = v67;
    uint64_t v14 = &v15[v11];
  }
  if (v7 > 0 && v71)
  {
    uint64_t v74 = v6[4];
    int v17 = *(unsigned __int8 *)(v81 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v106[0] = v103;
    v106[1] = v104;
    uint64_t v107 = v105;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v18 = 0;
    long long v68 = v14 + 12;
    int v69 = v17;
    do
    {
      int v19 = (unsigned int *)(v70 + 48 * v18);
      uint64_t v20 = *v19;
      uint64_t v22 = (uint64_t *)*((void *)v19 + 2);
      uint64_t v21 = *((void *)v19 + 3);
      uint64_t v23 = *((void *)v19 + 4);
      uint64_t v24 = *((void *)v19 + 5);
      unsigned int v78 = v19[2];
      uint64_t v72 = v19[1];
      uint64_t v73 = v3;
      if (v17)
      {
        int v25 = *(os_unfair_lock_s **)(v24 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v25);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v74);
      sub_1B6BCD964((uint64_t)(v6 + 6), (uint64_t)v110, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v26 = v6[4];
      uint64_t v27 = *(void *)(*(void *)(*(void *)(*(void *)(v24 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      _DWORD v6[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
      v6[7] = v27;
      v6[9] = 0;
      void v6[10] = 0;
      v6[8] = 0;
      swift_release();
      uint64_t v28 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v22, v21, v23, (uint64_t)v6);
      uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v22, v21, v23, (uint64_t)v6);
      uint64_t v30 = v29;
      if (v22)
      {
        if (v23)
        {
          uint64_t v31 = &v68[24 * v78];
          int v32 = v80;
          int v33 = v82;
          int v34 = v79;
          do
          {
            v30 += 16;
            v28 += 16;
            int v80 = v32;
            int v79 = v34;
            int v82 = v33;
            double v35 = nullsub_1(v29);
            int v36 = LODWORD(v35);
            int v38 = v37;
            int v40 = v39;
            double v42 = nullsub_1(v41);
            *((_DWORD *)v31 - 3) = v36;
            *((_DWORD *)v31 - 2) = v38;
            *((_DWORD *)v31 - 1) = v40;
            *(_DWORD *)uint64_t v31 = LODWORD(v42);
            int v32 = v80;
            int v33 = v82;
            *((_DWORD *)v31 + 1) = v43;
            *((_DWORD *)v31 + 2) = v44;
            int v34 = v79;
            v31 += 24;
            --v23;
          }
          while (v23);
        }
      }
      else if (v20 != v72)
      {
        uint64_t v45 = v28 + 16 * v20;
        uint64_t v46 = v29 + 16 * v20;
        uint64_t v47 = v72 - v20;
        char v48 = &v68[24 * v78];
        int v49 = v76;
        int v50 = v77;
        int v51 = v75;
        do
        {
          v46 += 16;
          v45 += 16;
          int v76 = v49;
          int v75 = v51;
          int v77 = v50;
          double v52 = nullsub_1(v29);
          int v53 = LODWORD(v52);
          int v55 = v54;
          int v57 = v56;
          double v59 = nullsub_1(v58);
          *((_DWORD *)v48 - 3) = v53;
          *((_DWORD *)v48 - 2) = v55;
          *((_DWORD *)v48 - 1) = v57;
          *(_DWORD *)char v48 = LODWORD(v59);
          int v49 = v76;
          int v50 = v77;
          *((_DWORD *)v48 + 1) = v60;
          *((_DWORD *)v48 + 2) = v61;
          int v51 = v75;
          v48 += 24;
          --v47;
        }
        while (v47);
      }
      uint64_t v3 = v73;
      sub_1B6345178(v6, (unsigned __int16 **)v106, (uint64_t)v110);
      sub_1B634507C((char *)v24);
      ecs_stack_allocator_pop_snapshot(v74);
      int v17 = v69;
      if (v69)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
      }
      swift_release();
      ++v18;
    }
    while (v18 != v71);
    sub_1B632F170(v95);
  }
  sub_1B6BCD9E4(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1B6E78130;
  *(void *)(v65 + 32) = v66;
  uint64_t v83 = v65;
  sub_1B6E31C48();
  uint64_t v63 = v83;
  swift_unknownObjectRelease();
  sub_1B632F170(v95);
  sub_1B62EDED8(v84);
  swift_release();
  return v63;
}

unint64_t sub_1B6BCD924()
{
  unint64_t result = qword_1E9DD6BE0;
  if (!qword_1E9DD6BE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD6BE0);
  }
  return result;
}

uint64_t sub_1B6BCD964(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6BCD9E4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6BCD9E4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6BCDA30(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6BCE9D4(0, &qword_1E9DD6BE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BCE980();
  sub_1B6E33A88();
  uint64_t v13 = *v3;
  HIBYTE(v12) = 0;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v13 = v3[1];
    HIBYTE(v12) = 1;
    sub_1B6E32FA8();
    uint64_t v13 = v3[2];
    HIBYTE(v12) = 2;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6BCDC34(uint64_t a1)
{
  unint64_t v2 = sub_1B6BCE980();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BCDC70(uint64_t a1)
{
  unint64_t v2 = sub_1B6BCE980();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6BCDCAC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6BCE720(a1, &v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B6BCDCF0(void *a1)
{
  return sub_1B6BCDA30(a1);
}

uint64_t sub_1B6BCDD08()
{
  return type metadata accessor for ParticlePivotInit.System();
}

double sub_1B6BCDD28()
{
  sub_1B62D2D24(0, (unint64_t *)&qword_1EB980BA0, (void (*)(uint64_t))sub_1B663C11C);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for ParticlePivot;
  *(void *)(v0 + 40) = &off_1F0F61200;
  return result;
}

__n128 sub_1B6BCDD8C@<Q0>(__n128 *a1@<X8>)
{
  result.n128_u64[0] = 0x3F0000003F000000;
  result.n128_u64[1] = 0x3F0000003F000000;
  *a1 = result;
  a1[1].n128_u64[0] = 0x3F0000003F000000;
  return result;
}

void sub_1B6BCDDA0(void *a1, uint64_t a2, uint64_t a3, float *a4, float *a5)
{
  uint64_t v6 = v5;
  long long v7 = *(_OWORD *)(a3 + 104);
  v57[0] = *(_OWORD *)(a3 + 88);
  v57[1] = v7;
  uint64_t v58 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v57, 0x200000000, v42);
  sub_1B62D7910((uint64_t)v42, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v43[0])
  {
    long long v50 = v43[0];
    long long v51 = v43[1];
    uint64_t v52 = v44;
    uint64_t v35 = v49;
    if (v49 >= 1 && (uint64_t v8 = v46) != 0)
    {
      uint64_t v9 = v48;
      uint64_t v10 = v48[4];
      uint64_t v33 = v47;
      uint64_t v34 = v10;
      int v11 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v29 = v48 + 13;
      uint64_t v30 = v48 + 8;
      uint64_t v31 = (uint64_t)(v48 + 6);
      uint64_t v12 = (uint64_t *)(v45 + 24);
      int v32 = v11;
      while (1)
      {
        uint64_t v13 = *((unsigned int *)v12 - 6);
        uint64_t v14 = *((unsigned int *)v12 - 5);
        uint64_t v15 = *((unsigned int *)v12 - 4);
        uint64_t v40 = *v12;
        uint64_t v41 = *(v12 - 1);
        uint64_t v16 = v12[2];
        uint64_t v39 = v12[1];
        uint64_t v65 = v8;
        if (v11)
        {
          int v17 = v6;
          uint64_t v18 = *(os_unfair_lock_s **)(v16 + 376);
          swift_retain();
          os_unfair_lock_lock(v18);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
        }
        else
        {
          int v17 = v6;
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v10);
        sub_1B62D7910(v31, (uint64_t)v59, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v19 = v9[4];
        uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        void v9[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
        v9[7] = v20;
        v30[1] = 0;
        _OWORD v30[2] = 0;
        void *v30 = 0;
        swift_release();
        v60[0] = v33;
        v60[1] = v16;
        v60[2] = v9;
        v60[3] = v15;
        v60[4] = (v14 - v13 + v15);
        v60[5] = v35;
        v60[6] = v13;
        v60[7] = v14;
        v60[8] = 0;
        v60[9] = 0;
        char v61 = 1;
        uint64_t v62 = v41;
        uint64_t v63 = v40;
        uint64_t v64 = v39;
        sub_1B6BCE1E8((uint64_t)v60, a4, a5, a1);
        if (v17) {
          break;
        }
        v55[0] = v50;
        v55[1] = v51;
        uint64_t v56 = v52;
        sub_1B6345178(v9, (unsigned __int16 **)v55, (uint64_t)v59);
        uint64_t v6 = 0;
        int v11 = v32;
        if (*(void *)(v9[13] + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1B639147C(v21, v16);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = v9[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v23 + 16));
          }
          else
          {
            uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v23 + 24) >= 2uLL)
            {
              sub_1B62D2D24(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v24 = (void *)swift_allocObject();
              size_t v25 = j__malloc_size(v24);
              uint64_t v24[2] = 0;
              v24[3] = 2 * ((uint64_t)(v25 - 32) / 72);
            }
            *uint64_t v29 = v24;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v9[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            uint64_t v26 = *(char **)(v16 + 232);
            uint64_t v27 = *(char **)(v16 + 256);
            if (v26 == v27)
            {
              uint64_t v28 = *(char **)(v16 + 240);
            }
            else
            {
              sub_1B666018C(v27, v26);
              uint64_t v27 = *(char **)(v16 + 232);
              uint64_t v28 = *(char **)(v16 + 240);
              if (v28 == v27)
              {
                uint64_t v28 = 0;
                uint64_t v27 = 0;
                *(void *)(v16 + 232) = 0;
                *(void *)(v16 + 240) = 0;
              }
            }
            *(void *)(v16 + 248) = v28;
            *(void *)(v16 + 256) = v27;
          }
        }
        uint64_t v10 = v34;
        ecs_stack_allocator_pop_snapshot(v34);
        if (v32)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
        }
        swift_release();
        v12 += 6;
        uint64_t v8 = v65 - 1;
        if (v65 == 1) {
          goto LABEL_24;
        }
      }

      v53[0] = v50;
      v53[1] = v51;
      uint64_t v54 = v52;
      sub_1B6345178(v9, (unsigned __int16 **)v53, (uint64_t)v59);
      sub_1B634507C((char *)v16);
      ecs_stack_allocator_pop_snapshot(v34);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
      __break(1u);
    }
    else
    {
LABEL_24:
      sub_1B632F170(v42);
    }
  }
}

uint64_t sub_1B6BCE1E8(uint64_t a1, float *a2, float *a3, void *a4)
{
  uint64_t result = sub_1B62C9024((uint64_t)&type metadata for ParticlePivot, (uint64_t)&off_1F0F61200, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 16));
  uint64_t v9 = result;
  float v11 = *a2;
  float v10 = a2[1];
  if (*a2 == v10 && a2[2] == a2[3] && a2[4] == a2[5])
  {
    __asm { FMOV            V0.4S, #1.0 }
    _Q0.f32[0] = *a2;
    _Q0.f32[1] = a2[2];
    _Q0.f32[2] = a2[4];
    uint64_t result = sub_1B67487EC(_Q0);
    *(_DWORD *)a3 = result;
    uint64_t v17 = *(void *)(a1 + 48);
    uint64_t v18 = *(void *)(a1 + 56);
    unint64_t v19 = v18 - v17;
    if (v18 != v17)
    {
      if (v19 < 0xC) {
        goto LABEL_11;
      }
      unint64_t v20 = v9 + 4 * v17;
      if (v20 < (unint64_t)(a3 + 1) && v9 + 4 * v18 > (unint64_t)a3) {
        goto LABEL_11;
      }
      v17 += v19 & 0xFFFFFFFFFFFFFFF8;
      float32x4_t v21 = vld1q_dup_f32(a3);
      uint64_t v22 = (float32x4_t *)(v20 + 16);
      unint64_t v23 = v19 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v22[-1] = v21;
        *uint64_t v22 = v21;
        v22 += 2;
        v23 -= 8;
      }
      while (v23);
      if (v19 != (v19 & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_11:
        uint64_t v24 = v18 - v17;
        size_t v25 = (_DWORD *)(v9 + 4 * v17);
        do
        {
          *v25++ = *(_DWORD *)a3;
          --v24;
        }
        while (v24);
      }
    }
  }
  else
  {
    uint64_t v26 = *(void *)(a1 + 48);
    uint64_t v27 = *(void *)(a1 + 56);
    uint64_t v28 = v27 - v26;
    if (v27 != v26)
    {
      float v29 = v10 - v11;
      float v30 = a2[2];
      float v31 = a2[3] - v30;
      float v32 = a2[4];
      float v33 = a2[5] - v32;
      uint64_t v34 = (_DWORD *)(result + 4 * v26);
      __asm { FMOV            V0.4S, #1.0 }
      __int32 v50 = HIDWORD(_Q0);
      float v51 = *a2;
      do
      {
        uint64_t v37 = a4[1];
        uint64_t v36 = a4[2];
        uint64_t v38 = a4[3] ^ v37;
        uint64_t v39 = a4[4] ^ v36;
        uint64_t v40 = v38 ^ v36;
        uint64_t v41 = v39 ^ v37;
        float32_t v42 = v11
            + (float)(v29
                    * (float)((float)((9 * ((((unint64_t)(5 * v36) >> 32) >> 25) | (640 * v36))) & 0xFFFFFF)
                            * 0.000000059605));
        uint64_t v43 = v38 ^ (v36 << 17) ^ v41;
        uint64_t v44 = __ROR8__(v39, 19);
        uint64_t v45 = v43 ^ v40;
        uint64_t v46 = v40 ^ v44 ^ v41;
        uint64_t v47 = v43 ^ (v40 << 17) ^ v46;
        uint64_t v48 = __ROR8__(v40 ^ v44, 19);
        a4[1] = v45 ^ v48 ^ v46;
        a4[2] = v47 ^ v45;
        a4[3] = v47 ^ (v45 << 17);
        a4[4] = __ROR8__(v45 ^ v48, 19);
        v49.i32[3] = v50;
        v49.f32[0] = v42;
        v49.f32[1] = v30
                   + (float)(v31
                           * (float)((float)((9
                                            * ((((unint64_t)(5 * v40) >> 32) >> 25) | (640 * v40))) & 0xFFFFFF)
                                   * 0.000000059605));
        v49.f32[2] = v32
                   + (float)(v33
                           * (float)((float)((9
                                            * ((((unint64_t)(5 * v45) >> 32) >> 25) | (640 * v45))) & 0xFFFFFF)
                                   * 0.000000059605));
        uint64_t result = sub_1B67487EC(v49);
        float v11 = v51;
        *(_DWORD *)a3 = result;
        *v34++ = result;
        --v28;
      }
      while (v28);
    }
  }
  return result;
}

uint64_t type metadata accessor for ParticlePivotInit.System()
{
  return self;
}

uint64_t sub_1B6BCE46C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  swift_retain_n();
  unint64_t v4 = sub_1B695EE30(v3);
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  unint64_t v11 = HIDWORD(v4);
  unint64_t v12 = HIDWORD(v6);
  if (v10) {
    float v13 = 0.5;
  }
  else {
    float v13 = *(float *)&v4;
  }
  if (v10)
  {
    LODWORD(v11) = 1056964608;
    float v14 = 0.5;
  }
  else
  {
    float v14 = *(float *)&v6;
  }
  if (v10)
  {
    LODWORD(v12) = 1056964608;
    float v15 = 0.5;
  }
  else
  {
    float v15 = *(float *)&v8;
  }
  if (v10) {
    float v16 = 0.5;
  }
  else {
    float v16 = *((float *)&v8 + 1);
  }
  v20[0] = v13;
  LODWORD(v20[1]) = v11;
  _OWORD v20[2] = v14;
  LODWORD(v20[3]) = v12;
  _OWORD v20[4] = v15;
  v20[5] = v16;
  int v19 = -2139062144;
  uint64_t v17 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B6C00A5C(v17, v2, v2, (uint64_t)a1, v20, (float *)&v19);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

const char *sub_1B6BCE560()
{
  return "SetPivot.CPU";
}

uint64_t type metadata accessor for ParticlePivotInit.GPUSystem()
{
  return self;
}

const char *sub_1B6BCE59C()
{
  return "SetPivot.GPU";
}

uint64_t sub_1B6BCE5B0()
{
  return type metadata accessor for ParticlePivotInit.GPUSystem();
}

uint64_t sub_1B6BCE5D0(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  swift_retain();
  unint64_t v5 = sub_1B695EE30(v3);
  unint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  unint64_t v12 = HIDWORD(v5);
  unint64_t v13 = HIDWORD(v7);
  if (v11) {
    int v14 = 1056964608;
  }
  else {
    int v14 = v5;
  }
  if (v11)
  {
    LODWORD(v12) = 1056964608;
    int v15 = 1056964608;
  }
  else
  {
    int v15 = v7;
  }
  if (v11)
  {
    LODWORD(v13) = 1056964608;
    int v16 = 1056964608;
  }
  else
  {
    int v16 = v9;
  }
  if (v11) {
    int v17 = 1056964608;
  }
  else {
    int v17 = HIDWORD(v9);
  }
  v26[0] = v14;
  v26[1] = v12;
  v26[2] = v15;
  v26[3] = v13;
  void v26[4] = v16;
  v26[5] = v17;
  uint64_t v18 = *a1;
  if (*a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_pivot_uniforms(0);
    sub_1B6B594A8((uint64_t)v26, 1, ObjectType, v20, v21, v22, v23, v24);
  }
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v2, v18 == 0, 0, (uint64_t)a1, 0xD000000000000012, 0x80000001B6F4C930, 0);
  sub_1B6786A7C((uint64_t)a1);
  return swift_release();
}

ValueMetadata *type metadata accessor for ParticlePivotInit()
{
  return &type metadata for ParticlePivotInit;
}

uint64_t sub_1B6BCE720@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B6BCE9D4(0, &qword_1EB9809A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)&v15 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BCE980();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62AA858();
  HIBYTE(v15) = 0;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v11 = v16;
  HIBYTE(v15) = 1;
  sub_1B6E32DF8();
  uint64_t v12 = v16;
  HIBYTE(v15) = 2;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v13 = v16;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  return result;
}

unint64_t sub_1B6BCE980()
{
  unint64_t result = qword_1EB97EF78;
  if (!qword_1EB97EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF78);
  }
  return result;
}

void sub_1B6BCE9D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6BCE980();
    unint64_t v7 = a3(a1, &type metadata for ParticlePivotInit.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticlePivotInit.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BCEB04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticlePivotInit.CodingKeys()
{
  return &type metadata for ParticlePivotInit.CodingKeys;
}

unint64_t sub_1B6BCEB40()
{
  unint64_t result = qword_1E9DD6BF0;
  if (!qword_1E9DD6BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6BF0);
  }
  return result;
}

unint64_t sub_1B6BCEB98()
{
  unint64_t result = qword_1EB97EF88;
  if (!qword_1EB97EF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF88);
  }
  return result;
}

unint64_t sub_1B6BCEBF0()
{
  unint64_t result = qword_1EB97EF80;
  if (!qword_1EB97EF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF80);
  }
  return result;
}

uint64_t sub_1B6BCEC44()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCED1C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCEE38()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCEEE4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCEF6C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF04C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF128()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF220()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF330()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF418()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF4FC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF5EC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF678()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF764()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF868()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCF980()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCFA70()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCFB0C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCFC3C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCFD64()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCFE90()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BCFF98()
{
  _s17TypedArraySnippetCMa();
  if (swift_dynamicCastClass()) {
    return 4;
  }
  _s19StaticSwitchSnippetCMa();
  if (swift_dynamicCastClass()) {
    return 5;
  }
  _s15VariableSnippetCMa();
  if (swift_dynamicCastClass()) {
    return 1;
  }
  _s24VariableReferenceSnippetCMa();
  if (swift_dynamicCastClass()) {
    return 2;
  }
  _s20ArraySequenceSnippetCMa();
  if (swift_dynamicCastClass()) {
    return 9;
  }
  if (*v0 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet) {
    return 0;
  }
  uint64_t v2 = *v0;
  _s17CustomCodeSnippetCMa();
  if (swift_dynamicCastClass()) {
    return 3;
  }
  if (v2 == _TtCO3VFX21GraphV1CodeGeneration11ContextExit) {
    return 6;
  }
  if (v2 == _TtCO3VFX21GraphV1CodeGeneration12ContextEntry) {
    return 7;
  }
  _s10SubContextCMa();
  if (swift_dynamicCastClass()) {
    return 8;
  }
  else {
    return 10;
  }
}

uint64_t sub_1B6BD00F8()
{
  if (!*(void *)(v0 + 16)) {
    goto LABEL_15;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B6BDB8B8(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1B6BDBA24);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1B684F958(v2);
  swift_release();
  if (*(void *)(v3 + 16))
  {
    sub_1B67F77C8();
    uint64_t v4 = sub_1B6E32C58();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  *(void *)&long long v12 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1B685FC84(v5, 1, &v12);
  swift_bridgeObjectRelease();
  uint64_t v6 = v12;
  if (!*(void *)(v12 + 16))
  {
    swift_release();
LABEL_15:
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_16;
  }
  uint64_t v7 = sub_1B62B2CE0(0x646465626D457369, 0xEF74657373416465);
  if (v8)
  {
    sub_1B66459A4(*(void *)(v6 + 56) + 88 * v7, (uint64_t)v10);
  }
  else
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
  }
  swift_release();
  if (!*((void *)&v10[0] + 1))
  {
    sub_1B6BDED84((uint64_t)v10, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
    goto LABEL_15;
  }
  sub_1B62B31E8((uint64_t)&v10[3] + 8, (uint64_t)&v12);
  sub_1B666BD18((uint64_t)v10);
  if (!*((void *)&v13 + 1))
  {
LABEL_16:
    sub_1B6BDED84((uint64_t)&v12, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    return 0;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return LOBYTE(v10[0]);
  }
  return result;
}

uint64_t sub_1B6BD02F0(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v4 = a1;
  *((void *)&v4 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  sub_1B6A3C4C4(v4, *((uint64_t *)&v4 + 1), &v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1B6BDED84((uint64_t)&v4, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    return 0;
  }
}

uint64_t sub_1B6BD03EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    uint64_t v4 = v7;
    sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t v9 = v5;
    uint64_t v7 = a3;
    sub_1B6A3C3B0(v4, v8, (uint64_t)&v7);
    swift_bridgeObjectRelease();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v7);
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6A3C29C(v7, v8);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6BD051C(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v4 = a1;
  *((void *)&v4 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  sub_1B6A3C4C4(v4, *((uint64_t *)&v4 + 1), &v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1B6BDED84((uint64_t)&v4, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    return 0;
  }
}

uint64_t sub_1B6BD05F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v9 = a1;
    uint64_t v10 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    uint64_t v6 = v9;
    uint64_t v7 = v10;
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    uint64_t v9 = a3;
    uint64_t v10 = a4;
    sub_1B6A3C3B0(v6, v7, (uint64_t)&v9);
    swift_bridgeObjectRelease();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v9);
  }
  else
  {
    uint64_t v9 = a1;
    uint64_t v10 = a2;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6A3C29C(v9, v10);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6BD0710()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (!v2 || !*(void *)(v2 + 16))
  {
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v17 = 0u;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1B62B2CE0(0xD000000000000012, 0x80000001B6F2F1A0);
  if ((v4 & 1) == 0)
  {
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v17 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1B66459A4(*(void *)(v2 + 56) + 88 * v3, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1))
  {
LABEL_10:
    sub_1B6BDED84((uint64_t)&v17, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_11;
  }
  sub_1B62B31E8((uint64_t)&v20 + 8, (uint64_t)&v23);
  sub_1B666BD18((uint64_t)&v17);
  if (!*((void *)&v24 + 1))
  {
LABEL_11:
    sub_1B6BDED84((uint64_t)&v23, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    uint64_t v5 = sub_1B69EFB10(v17, *((uint64_t *)&v17 + 1), *(void **)(v1 + 40));
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_12:
  uint64_t v6 = *(void *)(v1 + 48);
  if (!*(void *)(v6 + 16)) {
    return -1;
  }
  uint64_t v7 = *(void **)(v1 + 88);
  if (v7[2] != 1) {
    return -1;
  }
  uint64_t v8 = v7[4];
  unint64_t v9 = v7[5];
  uint64_t v10 = v7[6];
  uint64_t v11 = v7[7];
  uint64_t v12 = v7[8];
  sub_1B629C9E8(v8, v9);
  *(void *)&long long v17 = v8;
  *((void *)&v17 + 1) = v9;
  *(void *)&long long v18 = v10;
  *((void *)&v18 + 1) = v11;
  *(void *)&long long v19 = v12;
  swift_bridgeObjectRetain();
  sub_1B666BC3C(v8, v9);
  uint64_t v13 = sub_1B6BDC3E0(v6);
  char v15 = v14;
  sub_1B666BC88(v8, v9);
  swift_bridgeObjectRelease();
  sub_1B666BC88(v8, v9);
  if (v15) {
    return -1;
  }
  else {
    return v13;
  }
}

void *sub_1B6BD0954()
{
  unint64_t v1 = *(void *)(v0 + 56);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1B6E32C18();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      char v4 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = MEMORY[0x1BA9B4580](v3, v1);
        }
        else
        {
          uint64_t v5 = *(void *)(v1 + 8 * v3 + 32);
          swift_retain();
        }
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          uint64_t v7 = Strong;
          uint64_t v8 = *(void *)(v5 + 32);
          *(void *)&long long v19 = *(void *)(v5 + 24);
          *((void *)&v19 + 1) = v8;
          swift_bridgeObjectRetain_n();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v9 = *((void *)&v19 + 1);
          uint64_t v10 = *(void *)(v7 + 16);
          if (v10 && *(void *)(v10 + 16))
          {
            uint64_t v11 = v19;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v12 = sub_1B62B2CE0(v11, v9);
            if (v13)
            {
              sub_1B66459A4(*(void *)(v10 + 56) + 88 * v12, (uint64_t)&v19);
            }
            else
            {
              uint64_t v24 = 0;
              long long v22 = 0u;
              long long v23 = 0u;
              long long v20 = 0u;
              long long v21 = 0u;
              long long v19 = 0u;
            }
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v24 = 0;
            long long v22 = 0u;
            long long v23 = 0u;
            long long v20 = 0u;
            long long v21 = 0u;
            long long v19 = 0u;
            swift_release();
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v19 + 1))
          {
            long long v27 = v21;
            long long v28 = v22;
            long long v29 = v23;
            uint64_t v30 = v24;
            long long v25 = v19;
            long long v26 = v20;
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v24 = 0;
          long long v22 = 0u;
          long long v23 = 0u;
          long long v20 = 0u;
          long long v21 = 0u;
          long long v19 = 0u;
        }
        sub_1B629C37C(v5 + 56, (uint64_t)v37);
        sub_1B68168F0(v37, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        sub_1B6A3C6F4(v37, 1, (uint64_t)&v25);
        sub_1B68168F0(v37, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        sub_1B6BDED84((uint64_t)&v19, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
        if (!*((void *)&v25 + 1))
        {
          sub_1B6BDED84((uint64_t)&v25, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
          uint64_t v36 = 0;
          long long v34 = 0u;
          long long v35 = 0u;
          long long v32 = 0u;
          long long v33 = 0u;
          long long v31 = 0u;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v4 = sub_1B68C0D98(0, v4[2] + 1, 1, v4);
          }
          unint64_t v15 = v4[2];
          unint64_t v14 = v4[3];
          if (v15 >= v14 >> 1) {
            char v4 = sub_1B68C0D98(v14 > 1, v15 + 1, 1, v4);
          }
          v4[2] = v15 + 1;
          sub_1B6BDF0D0((uint64_t)&v31, (uint64_t)&v4[11 * v15 + 4]);
          goto LABEL_5;
        }
LABEL_26:
        long long v33 = v27;
        long long v34 = v28;
        long long v35 = v29;
        uint64_t v36 = v30;
        long long v31 = v25;
        long long v32 = v26;
        sub_1B66459A4((uint64_t)&v31, (uint64_t)&v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v4 = sub_1B68C0D98(0, v4[2] + 1, 1, v4);
        }
        unint64_t v17 = v4[2];
        unint64_t v16 = v4[3];
        if (v17 >= v16 >> 1) {
          char v4 = sub_1B68C0D98(v16 > 1, v17 + 1, 1, v4);
        }
        v4[2] = v17 + 1;
        sub_1B6BDF0D0((uint64_t)&v25, (uint64_t)&v4[11 * v17 + 4]);
        sub_1B666BD18((uint64_t)&v31);
LABEL_5:
        swift_release();
        if (v2 == ++v3) {
          goto LABEL_32;
        }
      }
    }
  }
  char v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_32:
  swift_bridgeObjectRelease_n();
  return v4;
}

uint64_t sub_1B6BD0D4C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1 || !*(void *)(v1 + 16))
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    long long v5 = 0u;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B62B2CE0(0xD00000000000001CLL, 0x80000001B6F2F200);
  if ((v3 & 1) == 0)
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    long long v5 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1B66459A4(*(void *)(v1 + 56) + 88 * v2, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  if (!*((void *)&v5 + 1))
  {
LABEL_10:
    sub_1B6BDED84((uint64_t)&v5, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_11;
  }
  sub_1B62B31E8((uint64_t)&v8 + 8, (uint64_t)&v11);
  sub_1B666BD18((uint64_t)&v5);
  if (!*((void *)&v12 + 1))
  {
LABEL_11:
    sub_1B6BDED84((uint64_t)&v11, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    return MEMORY[0x1E4FBC860];
  }
  sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  if (swift_dynamicCast()) {
    return v5;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B6BD0EBC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1 || !*(void *)(v1 + 16))
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    long long v5 = 0u;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B62B2CE0(0xD000000000000015, 0x80000001B6F2F220);
  if ((v3 & 1) == 0)
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    long long v5 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1B66459A4(*(void *)(v1 + 56) + 88 * v2, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  if (!*((void *)&v5 + 1))
  {
LABEL_10:
    sub_1B6BDED84((uint64_t)&v5, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_11;
  }
  sub_1B62B31E8((uint64_t)&v8 + 8, (uint64_t)&v11);
  sub_1B666BD18((uint64_t)&v5);
  if (!*((void *)&v12 + 1))
  {
LABEL_11:
    sub_1B6BDED84((uint64_t)&v11, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    return MEMORY[0x1E4FBC860];
  }
  sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  if (swift_dynamicCast()) {
    return v5;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B6BD102C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1B6BDC7CC(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B6BD1094()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return 0;
  }
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1B62B2CE0(0x64656C6261736964, 0xE800000000000000);
  char v3 = v2;
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1B6A3C4C4(0x64656C6261736964, 0xE800000000000000, v6);
  sub_1B62B57A8(v6, &v7);
  swift_dynamicCast();
  return v5;
}

uint64_t sub_1B6BD1160(void *a1)
{
  a1[5] = v1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = v1[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = v1[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = v1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v1[2])
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    char v4 = sub_1B6BDBEA8(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  a1[2] = v4;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD1234(uint64_t a1)
{
  if (!*(void *)(v1 + 16))
  {
    *(void *)(v1 + 16) = sub_1B67DD080(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = 0x8000000000000000;
  sub_1B6BDC120(a1, (uint64_t)sub_1B6BDC0CC, 0, isUniquelyReferenced_nonNull_native, &v5);
  *(void *)(v1 + 16) = v5;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD12F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2
    && *(void *)(v2 + 16)
    && (swift_bridgeObjectRetain(),
        sub_1B62B2CE0(0x6C6562616CLL, 0xE500000000000000),
        char v4 = v3,
        swift_bridgeObjectRelease(),
        (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B62B2CE0(0x6C6562616CLL, 0xE500000000000000);
    if (v7)
    {
      sub_1B66459A4(*(void *)(v5 + 56) + 88 * v6, (uint64_t)&v11);
    }
    else
    {
      uint64_t v15 = 0;
      memset(v14, 0, sizeof(v14));
      long long v12 = 0u;
      long long v13 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1B62B31E8((uint64_t)v14 + 8, (uint64_t)v10);
    sub_1B666BD18((uint64_t)&v11);
    sub_1B62B57A8(v10, v16);
    swift_dynamicCast();
    return v9;
  }
  else
  {
    *((void *)&v12 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v11 = 0;
    *((void *)&v11 + 1) = 0xE000000000000000;
    sub_1B6A3C61C(1701667182, 0xE400000000000000, (uint64_t)&v11, v16);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v11);
    sub_1B62B57A8(v16, &v11);
    swift_dynamicCast();
    return *(void *)&v10[0];
  }
}

uint64_t sub_1B6BD146C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1B6BDF078();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v44 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7, v8);
  int v55 = &v40[-v9];
  uint64_t v48 = sub_1B6E339E8();
  MEMORY[0x1F4188790](v48, v10);
  uint64_t v52 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = 0;
  uint64_t v54 = (_OWORD *)((char *)v61 + 8);
  int v13 = *MEMORY[0x1E4FBC410];
  int v42 = *MEMORY[0x1E4FBC408];
  int v43 = v13;
  uint64_t v47 = (void (**)(unsigned char *, uint64_t))(v14 + 8);
  uint64_t v45 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v46 = a1;
  int v41 = *MEMORY[0x1E4FBC400];
  __int32 v50 = "): unable to connect ";
  float v51 = "in bakedTemplates: ";
  float32x4_t v49 = "pport for type: ";
  do
  {
    int v16 = byte_1F0F85FA0[v12 + 32];
    long long v58 = xmmword_1E9DD3E90;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v17 = *((void *)&v58 + 1);
    uint64_t v18 = *(void *)(a1 + 16);
    if (v18 && *(void *)(v18 + 16))
    {
      uint64_t v19 = v58;
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(v19, v17);
      LOBYTE(v19) = v20;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v19)
      {
        long long v58 = xmmword_1E9DD3E90;
        switch(v16)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            long long v21 = v58;
            v65[3] = MEMORY[0x1E4FBB550];
            v65[0] = 1;
            if (!*(void *)(v2 + 16))
            {
              *(void *)(v2 + 16) = sub_1B67DD080(MEMORY[0x1E4FBC860]);
              swift_bridgeObjectRelease();
            }
            sub_1B62CAAD8((uint64_t)v65, (uint64_t)&v63);
            long long v22 = v54;
            _OWORD *v54 = 0u;
            v22[1] = 0u;
            uint64_t v53 = v21;
            long long v58 = v21;
            sub_1B62CAAD8((uint64_t)&v63, (uint64_t)v56);
            swift_bridgeObjectRetain_n();
            long long v23 = v52;
            sub_1B6E339A8();
            sub_1B62C14BC(&v63, v64);
            DynamicType = (ValueMetadata *)swift_getDynamicType();
            long long v25 = v55;
            sub_1B6E339C8();
            uint64_t v26 = sub_1B6E339B8();
            uint64_t v27 = *(void *)(v26 - 8);
            if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1) {
              goto LABEL_11;
            }
            uint64_t v33 = (uint64_t)v25;
            long long v34 = v44;
            sub_1B6BDEFB0(v33, (uint64_t)v44, (uint64_t (*)(void))sub_1B6BDF078);
            int v35 = (*(uint64_t (**)(unsigned char *, uint64_t))(v27 + 88))(v34, v26);
            if (v35 == v43)
            {
              if (DynamicType == &type metadata for Entity)
              {
                uint64_t v29 = 0;
                uint64_t v31 = 0;
                uint64_t v32 = 0;
                uint64_t v30 = 42;
              }
              else
              {
                sub_1B6A47F08((uint64_t)DynamicType, (uint64_t)v66);
                uint64_t v29 = v66[0];
                uint64_t v30 = v66[1];
                uint64_t v31 = v66[3];
                uint64_t v32 = v66[4];
              }
              (*v47)(v52, v48);
            }
            else if (v35 == v42)
            {
              (*v47)(v23, v48);
              uint64_t v29 = 0;
              uint64_t v31 = 0;
              uint64_t v32 = 0;
              uint64_t v30 = 42;
            }
            else if (v35 == v41)
            {
              (*v47)(v23, v48);
              sub_1B62C14BC(&v63, v64);
              uint64_t v36 = swift_getDynamicType();
              uint64_t v29 = 0;
              uint64_t v31 = 0;
              uint64_t v32 = 0;
              if (swift_conformsToProtocol2()) {
                uint64_t v37 = v36;
              }
              else {
                uint64_t v37 = 0;
              }
              if (v37) {
                uint64_t v30 = 41;
              }
              else {
                uint64_t v30 = 42;
              }
            }
            else
            {
              (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v44, v26);
LABEL_11:
              sub_1B6A47F08((uint64_t)DynamicType, (uint64_t)v67);
              long long v28 = v23;
              uint64_t v29 = v67[0];
              uint64_t v30 = v67[1];
              uint64_t v31 = v67[3];
              uint64_t v32 = v67[4];
              (*v47)(v28, v48);
            }
            sub_1B6BDF018((uint64_t)v55, (uint64_t (*)(void))sub_1B6BDF078);
            *(void *)&long long v59 = v29;
            *((void *)&v59 + 1) = v30;
            *(void *)&long long v60 = v21;
            *((void *)&v60 + 1) = v31;
            *(void *)&v61[0] = v32;
            uint64_t v38 = v54;
            sub_1B6BDED84((uint64_t)v54, (unint64_t *)&qword_1EB980F60, v45);
            sub_1B62B57A8(&v63, v38);
            v56[2] = v60;
            v56[3] = v61[0];
            v56[4] = v61[1];
            uint64_t v57 = v62;
            v56[0] = v58;
            v56[1] = v59;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v58 = *(void *)(v2 + 16);
            *(void *)(v2 + 16) = 0x8000000000000000;
            sub_1B67E3A2C((uint64_t)v56, v53, *((uint64_t *)&v21 + 1), isUniquelyReferenced_nonNull_native);
            *(void *)(v2 + 16) = v58;
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v65);
            a1 = v46;
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    ++v12;
  }
  while (v12 != 6);
  return result;
}

uint64_t sub_1B6BD1BEC()
{
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B6BD1C68()
{
  sub_1B633AF88();
  uint64_t v1 = sub_1B6E325F8();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 16 * v2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_1B6BD1D14()
{
  v0[7] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v0[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v1, v2, (void (*)(uint64_t, uint64_t, void *))sub_1B678C408);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD1DAC(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[11] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[12] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)v2[10];
  uint64_t v5 = v2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v4, v5, (void (*)(uint64_t, uint64_t, void *))sub_1B6815E7C);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD1E74()
{
  (*(void (**)(void))(*v0 + 1336))();
  v0[12] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v1, v2, (void (*)(uint64_t, uint64_t, void *))sub_1B6815E7C);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD1F38(uint64_t result)
{
  uint64_t v110 = result;
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    sub_1B6A2D820(v2);
    swift_bridgeObjectRelease();
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1B69FED58(v3);
    swift_release();
    v115[0] = v4;
    sub_1B6A0CEB4(v115);
    uint64_t v97 = 0;
    swift_release();
    uint64_t v107 = (uint64_t *)v115[0][2];
    if (v107)
    {
      uint64_t v106 = v115[0] + 4;
      uint64_t v5 = *v105;
      uint64_t v6 = *(uint64_t (**)(void, void))(*v105 + 1440);
      long long v103 = (uint64_t (*)(uint64_t, uint64_t))(*v105 + 1440);
      long long v104 = v6;
      uint64_t v7 = (void *)(v5 + 1336);
      uint64_t v8 = *(void (**)(void))(v5 + 1336);
      uint64_t v101 = v7;
      uint64_t v102 = v8;
      int v96 = (uint64_t (*)(uint64_t, uint64_t))v115[0];
      swift_retain();
      uint64_t v9 = 0;
      do
      {
        int v13 = &v106[13 * (void)v9];
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        char v16 = sub_1B6E31A08();
        swift_bridgeObjectRetain();
        if (v16)
        {
          sub_1B6E318C8();
          sub_1B6E318F8();
          uint64_t v17 = sub_1B6E31A78();
          uint64_t v19 = v18;
          uint64_t v21 = v20;
          uint64_t v23 = v22;
          swift_bridgeObjectRelease();
          uint64_t v14 = MEMORY[0x1BA9B34C0](v17, v19, v21, v23);
          uint64_t v15 = v24;
          swift_bridgeObjectRelease();
        }
        uint64_t v25 = v14;
        uint64_t v26 = v105;
        uint64_t v108 = (void *)v104(v25, v15);
        swift_bridgeObjectRelease();
        v114[0] = (void *)MEMORY[0x1E4FBC860];
        v113[0] = (void *)MEMORY[0x1E4FBC860];
        uint64_t v27 = (void *)v26[5];
        uint64_t v109 = v26[6];
        uint64_t v28 = v27[2];
        if (v28 && (uint64_t v29 = *(void *)(v109 + 16)) != 0)
        {
          uint64_t v99 = v95;
          uint64_t v100 = v9;
          uint64_t v30 = v27[5];
          uint64_t v111 = v27[4];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v31 = 0;
          uint64_t v32 = v28 - 1;
          uint64_t v33 = v29 - 1;
          uint64_t v98 = v27;
          for (uint64_t i = v27 + 7; ; i += 2)
          {
            swift_bridgeObjectRetain();
            uint64_t v35 = v109 + v31;
            sub_1B629C37C(v109 + v31 + 32, (uint64_t)v115);
            uint64_t v36 = *(void *)(v35 + 32);
            unint64_t v37 = *(void *)(v35 + 40);
            sub_1B68168F0(v115, (void (*)(void, void, void, void, void))sub_1B629C9E8);
            sub_1B6BD8CE4(v111, v30, v115, (uint64_t)v108, v110, v114, v113);
            swift_bridgeObjectRelease();
            sub_1B629DCAC(v36, v37);
            if (!v32 || !v33) {
              break;
            }
            uint64_t v30 = *i;
            uint64_t v111 = *(i - 1);
            --v32;
            --v33;
            v31 += 40;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v9 = v100;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        uint64_t v9 = (uint64_t *)((char *)v9 + 1);
        uint64_t v10 = v113[0];
        uint64_t v11 = v105;
        v105[5] = v114[0];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v11[6] = v10;
        swift_bridgeObjectRetain();
        uint64_t v12 = swift_bridgeObjectRelease();
        v102(v12);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v9 != v107);
      uint64_t result = swift_release_n();
    }
    else
    {
      uint64_t result = swift_release();
    }
    if (v105[2])
    {
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v39 = v97;
      sub_1B6A2D874(v38);
      swift_bridgeObjectRelease();
      uint64_t v40 = swift_bridgeObjectRetain();
      int v41 = sub_1B69FED58(v40);
      swift_release();
      v114[0] = v41;
      sub_1B6A0CEB4(v114);
      if (v39)
      {
        uint64_t result = swift_release();
        __break(1u);
      }
      else
      {
        swift_release();
        uint64_t v98 = (void *)v114[0][2];
        if (v98)
        {
          uint64_t v97 = v114[0] + 4;
          int v42 = v105 + 12;
          int v43 = *(void **)(*v105 + 1456);
          v95[5] = *v105 + 1456;
          int v96 = (uint64_t (*)(uint64_t, uint64_t))v43;
          v95[1] = v114[0];
          swift_retain();
          uint64_t v44 = 0;
          uint64_t v101 = v42;
          do
          {
            uint64_t v100 = v44;
            uint64_t v45 = &v97[13 * (void)v44];
            uint64_t v46 = *v45;
            uint64_t v47 = v45[1];
            char v48 = sub_1B6E31A08();
            swift_bridgeObjectRetain();
            if (v48)
            {
              sub_1B6E318C8();
              sub_1B6E318F8();
              uint64_t v49 = sub_1B6E31A78();
              uint64_t v51 = v50;
              uint64_t v53 = v52;
              uint64_t v55 = v54;
              swift_bridgeObjectRelease();
              uint64_t v46 = MEMORY[0x1BA9B34C0](v49, v51, v53, v55);
              uint64_t v47 = v56;
              swift_bridgeObjectRelease();
            }
            uint64_t v57 = v46;
            long long v58 = v105;
            long long v104 = (uint64_t (*)(uint64_t, uint64_t))v96(v57, v47);
            swift_bridgeObjectRelease();
            int v112 = (void *)MEMORY[0x1E4FBC860];
            v113[0] = (void *)MEMORY[0x1E4FBC860];
            long long v59 = (uint64_t *)v58[10];
            uint64_t v109 = v58[11];
            uint64_t v60 = v59[2];
            if (v60 && (uint64_t v61 = *(void *)(v109 + 16)) != 0)
            {
              uint64_t v108 = v95;
              uint64_t v62 = v59[5];
              uint64_t v111 = v59[4];
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              uint64_t v63 = 0;
              uint64_t v64 = v60 - 1;
              uint64_t v65 = v61 - 1;
              uint64_t v107 = v59;
              for (j = v59 + 7; ; j += 2)
              {
                swift_bridgeObjectRetain();
                uint64_t v67 = v109 + v63;
                sub_1B629C37C(v109 + v63 + 32, (uint64_t)v114);
                uint64_t v68 = *(void *)(v67 + 32);
                unint64_t v69 = *(void *)(v67 + 40);
                sub_1B68168F0(v114, (void (*)(void, void, void, void, void))sub_1B629C9E8);
                sub_1B6BD9838(v111, v62, v114, (uint64_t)v104, v110, v113, &v112);
                swift_bridgeObjectRelease();
                sub_1B629DCAC(v68, v69);
                if (!v64 || !v65) {
                  break;
                }
                uint64_t v62 = *j;
                uint64_t v111 = *(j - 1);
                --v64;
                --v65;
                v63 += 40;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRelease();
            uint64_t v71 = v112;
            uint64_t v70 = v113[0];
            uint64_t v72 = v105;
            v105[10] = v113[0];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v72[11] = v71;
            uint64_t v99 = v71;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v72[12] = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRelease();
            uint64_t v73 = (void *)v72[10];
            uint64_t v74 = v72[11];
            uint64_t v75 = v73[2];
            if (v75 && (uint64_t v76 = *(void *)(v74 + 16)) != 0)
            {
              v95[4] = v70;
              uint64_t v78 = v73[4];
              uint64_t v77 = v73[5];
              int v79 = v73;
              int v80 = *(uint64_t (**)(void, void))(*v105 + 1272);
              uint64_t v102 = (void (*)(uint64_t))(*v105 + 1272);
              long long v103 = v80;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              uint64_t v111 = v75 - 1;
              v95[2] = v79;
              v95[3] = v74;
              uint64_t v107 = v79 + 7;
              uint64_t v108 = (void *)(v76 - 1);
              uint64_t v81 = (void *)(v74 + 64);
              while (1)
              {
                uint64_t v109 = v78;
                swift_bridgeObjectRetain();
                uint64_t v83 = *(v81 - 4);
                unint64_t v82 = *(v81 - 3);
                uint64_t v84 = *(v81 - 2);
                uint64_t v85 = *(v81 - 1);
                uint64_t v106 = v81;
                uint64_t v86 = *v81;
                sub_1B629C9E8(v83, v82);
                swift_bridgeObjectRetain();
                uint64_t v87 = v78;
                uint64_t v88 = v105;
                uint64_t v89 = v103(v87, v77);
                uint64_t v91 = v90;
                _s12ParameterOutCMa();
                uint64_t v92 = v77;
                id v93 = (void *)swift_allocObject();
                swift_weakInit();
                swift_weakAssign();
                v93[3] = v109;
                v93[4] = v92;
                uint64_t v109 = v92;
                v93[5] = v89;
                v93[6] = v91;
                v93[7] = v83;
                v93[8] = v82;
                v93[9] = v84;
                v93[10] = v85;
                v93[11] = v86;
                uint64_t v94 = sub_1B629C9E8(v83, v82);
                MEMORY[0x1BA9B3870](v94);
                if (*(void *)((v88[12] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v88[12] & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                  sub_1B6E31C78();
                sub_1B6E31CC8();
                sub_1B6E31C48();
                swift_bridgeObjectRelease();
                sub_1B629DCAC(v83, v82);
                if (!v111 || !v108) {
                  break;
                }
                uint64_t v81 = v106 + 5;
                uint64_t v78 = *(v107 - 1);
                uint64_t v77 = *v107;
                --v111;
                v107 += 2;
                uint64_t v108 = (void *)((char *)v108 - 1);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v44 = (uint64_t *)((char *)v100 + 1);
          }
          while ((uint64_t *)((char *)v100 + 1) != v98);
          return swift_release_n();
        }
        else
        {
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B6BD28F8(uint64_t a1)
{
  uint64_t v3 = v1[9];
  uint64_t v5 = v1[13];
  uint64_t v4 = v1[14];
  v1[5] = v1[8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1[6] = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*v1 + 1336))(v6);
  sub_1B6BD1DAC(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_1B6BD1F38(a1);
}

uint64_t sub_1B6BD29FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B6BD43FC();
  if (v3)
  {
    uint64_t v125 = v3[2];
    if (v125)
    {
      uint64_t v4 = 0;
      unint64_t v123 = v3 + 4;
      uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        unint64_t v128 = v5;
        uint64_t v6 = &v123[13 * v4];
        uint64_t v8 = *v6;
        uint64_t v7 = v6[1];
        char v9 = sub_1B6E31A08();
        swift_bridgeObjectRetain();
        if (v9)
        {
          sub_1B6E318C8();
          sub_1B6E318F8();
          uint64_t v10 = sub_1B6E31A78();
          uint64_t v12 = v11;
          uint64_t v14 = v13;
          uint64_t v16 = v15;
          swift_bridgeObjectRelease();
          uint64_t v8 = MEMORY[0x1BA9B34C0](v10, v12, v14, v16);
          uint64_t v7 = v17;
          swift_bridgeObjectRelease();
        }
        uint64_t v18 = (void *)v2[8];
        uint64_t v19 = v18[2];
        if (v19)
        {
          BOOL v20 = v18[4] == v8 && v18[5] == v7;
          if (!v20 && (sub_1B6E334B8() & 1) == 0)
          {
            uint64_t v24 = 0;
            uint64_t v25 = v18 + 7;
            uint64_t v26 = 1;
            while (v19 != v26)
            {
              ++v24;
              if (*(v25 - 1) == v8 && *v25 == v7)
              {
                uint64_t v21 = v24;
                goto LABEL_13;
              }
              uint64_t v21 = v26++;
              v25 += 2;
              if (sub_1B6E334B8()) {
                goto LABEL_13;
              }
            }
          }
        }
        uint64_t v21 = 0;
LABEL_13:
        swift_bridgeObjectRelease();
        uint64_t v5 = v128;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1B68C09B4(0, *((void *)v128 + 2) + 1, 1, v128);
        }
        unint64_t v23 = *((void *)v5 + 2);
        unint64_t v22 = *((void *)v5 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v5 = sub_1B68C09B4(v22 > 1, v23 + 1, 1, v5);
        }
        ++v4;
        *((void *)v5 + 2) = v23 + 1;
        *(void *)&v5[8 * v23 + 32] = v21;
      }
      while (v4 != v125);
    }
    else
    {
      uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v28 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v129 = v5;
  if (*(void *)(a1 + 16))
  {
    uint64_t v29 = swift_bridgeObjectRetain();
    sub_1B6BDB8B8(v29, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1B6BDBC88);
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = sub_1B69FED58(v30);
    swift_release();
    *(void *)&long long v133 = v31;
    sub_1B6BD8550((void **)&v133);
    swift_release();
    uint64_t v126 = *(void *)(v133 + 16);
    if (v126)
    {
      uint64_t v121 = v133 + 32;
      swift_retain();
      for (uint64_t i = 0; i != v126; ++i)
      {
        uint64_t v33 = (uint64_t *)(v121 + 104 * i);
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        char v36 = sub_1B6E31A08();
        swift_bridgeObjectRetain();
        uint64_t v124 = v28;
        if (v36)
        {
          sub_1B6E318C8();
          sub_1B6E318F8();
          uint64_t v37 = sub_1B6E31A78();
          uint64_t v39 = v38;
          uint64_t v41 = v40;
          uint64_t v43 = v42;
          swift_bridgeObjectRelease();
          uint64_t v35 = MEMORY[0x1BA9B34C0](v37, v39, v41, v43);
          uint64_t v34 = v44;
          swift_bridgeObjectRelease();
        }
        uint64_t v45 = (void *)v2[13];
        uint64_t v46 = v45[2];
        if (v46)
        {
          BOOL v47 = v45[4] == v35 && v45[5] == v34;
          if (!v47 && (sub_1B6E334B8() & 1) == 0)
          {
            uint64_t v51 = 0;
            uint64_t v52 = v45 + 7;
            uint64_t v53 = 1;
            while (v46 != v53)
            {
              ++v51;
              if (*(v52 - 1) == v35 && *v52 == v34)
              {
                uint64_t v48 = v51;
                goto LABEL_43;
              }
              uint64_t v48 = v53++;
              v52 += 2;
              if (sub_1B6E334B8()) {
                goto LABEL_43;
              }
            }
          }
        }
        uint64_t v48 = 0;
LABEL_43:
        swift_bridgeObjectRelease();
        uint64_t v28 = v124;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v28 = sub_1B68C09B4(0, *((void *)v124 + 2) + 1, 1, v124);
        }
        uint64_t v5 = v129;
        unint64_t v50 = *((void *)v28 + 2);
        unint64_t v49 = *((void *)v28 + 3);
        if (v50 >= v49 >> 1) {
          uint64_t v28 = sub_1B68C09B4(v49 > 1, v50 + 1, 1, v28);
        }
        *((void *)v28 + 2) = v50 + 1;
        *(void *)&v28[8 * v50 + 32] = v48;
      }
      swift_release_n();
    }
    else
    {
      swift_release();
    }
  }
  *(void *)&long long v133 = v5;
  swift_bridgeObjectRetain_n();
  sub_1B6BD85BC((uint64_t *)&v133);
  swift_bridgeObjectRelease();
  uint64_t v55 = v133;
  uint64_t v56 = *(void *)(v133 + 16);
  if (v56)
  {
    uint64_t v57 = v28;
    swift_retain();
    uint64_t v58 = 0;
    do
    {
      uint64_t v59 = *(void *)(v55 + 8 * v58++ + 32);
      uint64_t v60 = v2[5] + 16 * v59;
      uint64_t v61 = *(void *)(v60 + 32);
      uint64_t v62 = *(void *)(v60 + 40);
      swift_bridgeObjectRetain();
      sub_1B6BD6978(v61, v62);
      swift_bridgeObjectRelease();
    }
    while (v56 != v58);
    swift_release();
    uint64_t v28 = v57;
  }
  swift_release();
  *(void *)&long long v133 = v28;
  swift_bridgeObjectRetain_n();
  sub_1B6BD85BC((uint64_t *)&v133);
  swift_bridgeObjectRelease();
  uint64_t v63 = v133;
  uint64_t v122 = *(void *)(v133 + 16);
  if (v122)
  {
    swift_retain();
    uint64_t v64 = 0;
    uint64_t v118 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v119 = v63;
    while (1)
    {
      uint64_t v78 = v2[10] + 16 * *(void *)(v63 + 8 * v64 + 32);
      uint64_t v80 = *(void *)(v78 + 32);
      uint64_t v79 = *(void *)(v78 + 40);
      *(void *)&long long v133 = v80;
      *((void *)&v133 + 1) = v79;
      uint64_t v81 = v79;
      swift_bridgeObjectRetain_n();
      sub_1B6E31948();
      uint64_t v83 = *((void *)&v133 + 1);
      uint64_t v82 = v133;
      uint64_t v84 = v2[2];
      if (!v84
        || !*(void *)(v84 + 16)
        || (swift_bridgeObjectRetain(), sub_1B62B2CE0(v82, v83), char v86 = v85, swift_bridgeObjectRelease(), (v86 & 1) == 0))
      {
        uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(*v2 + 1456))(v80, v81);
        sub_1B629C37C(v65 + 56, (uint64_t)v143);
        sub_1B68168F0(v143, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        uint64_t v66 = sub_1B6A3D8B8();
        uint64_t v68 = v67;
        sub_1B68168F0(v143, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        uint64_t v139 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v138 = v66;
        *((void *)&v138 + 1) = v68;
        if (!v2[2])
        {
          v2[2] = sub_1B67DD080(MEMORY[0x1E4FBC860]);
          swift_bridgeObjectRelease();
        }
        sub_1B62CAAD8((uint64_t)&v138, (uint64_t)v137);
        memset(&v136[8], 0, 32);
        *(void *)&long long v133 = v82;
        *((void *)&v133 + 1) = v83;
        swift_bridgeObjectRetain_n();
        sub_1B6A4943C(v137, v142);
        sub_1B629C37C((uint64_t)v142, (uint64_t)&v134);
        sub_1B6BDED84((uint64_t)&v136[8], (unint64_t *)&qword_1EB980F60, v118);
        sub_1B62B57A8(v137, &v136[8]);
        v130[2] = v135;
        v131[0] = *(_OWORD *)v136;
        v131[1] = *(_OWORD *)&v136[16];
        uint64_t v132 = *(void *)&v136[32];
        v130[0] = v133;
        v130[1] = v134;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v133 = v2[2];
        v2[2] = 0x8000000000000000;
        sub_1B67E3A2C((uint64_t)v130, v82, v83, isUniquelyReferenced_nonNull_native);
        v2[2] = v133;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v70 = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v138);
        uint64_t v71 = MEMORY[0x1E4FBC860];
        *(void *)&long long v133 = MEMORY[0x1E4FBC860];
        *(void *)&v130[0] = MEMORY[0x1E4FBC860];
        uint64_t v72 = (void *)v2[10];
        uint64_t v73 = v2[11];
        MEMORY[0x1F4188790](v70, v74);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6A2EE0C(v72, v73, (void (*)(uint64_t, uint64_t, void *))sub_1B6BDF560);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v75 = *(void *)&v130[0];
        v2[10] = v133;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v2[11] = v75;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v2[12] = v71;
        swift_bridgeObjectRelease();
        uint64_t v76 = (void *)v2[10];
        uint64_t v77 = v2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6A2EE0C(v76, v77, (void (*)(uint64_t, uint64_t, void *))sub_1B6815E7C);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_69;
      }
      uint64_t v87 = v2[2];
      if (*(void *)(v87 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v88 = sub_1B62B2CE0(v82, v83);
        if (v89)
        {
          sub_1B66459A4(*(void *)(v87 + 56) + 88 * v88, (uint64_t)&v133);
        }
        else
        {
          memset(v136, 0, sizeof(v136));
          long long v134 = 0u;
          long long v135 = 0u;
          long long v133 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v136, 0, sizeof(v136));
        long long v134 = 0u;
        long long v135 = 0u;
        long long v133 = 0u;
        swift_bridgeObjectRetain();
      }
      if (!*((void *)&v133 + 1))
      {
        sub_1B6BDED84((uint64_t)&v133, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
        swift_bridgeObjectRelease();
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      sub_1B66459A4((uint64_t)&v133, (uint64_t)v130);
      sub_1B6BDED84((uint64_t)&v133, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
      swift_bridgeObjectRelease();
      sub_1B62B31E8((uint64_t)v131 + 8, (uint64_t)&v138);
      sub_1B666BD18((uint64_t)v130);
      sub_1B62B57A8(&v138, &v133);
      swift_dynamicCast();
      uint64_t v127 = *((void *)&v130[0] + 1);
      uint64_t v90 = *(void *)&v130[0];
      uint64_t v91 = v2[2];
      if (v91 && *(void *)(v91 + 16))
      {
        uint64_t v117 = *(void *)&v130[0];
        swift_bridgeObjectRetain();
        sub_1B62B2CE0(v82, v83);
        char v93 = v92;
        swift_bridgeObjectRelease();
        if (v93)
        {
          uint64_t v94 = sub_1B6A3C27C();
          if (*v95)
          {
            int v96 = v95;
            uint64_t v116 = (void (*)(_OWORD *, void))v94;
            swift_bridgeObjectRetain();
            unint64_t v115 = sub_1B62B2CE0(v82, v83);
            char v98 = v97;
            swift_bridgeObjectRelease();
            if (v98)
            {
              char v99 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v138 = *v96;
              *int v96 = 0x8000000000000000;
              if ((v99 & 1) == 0) {
                sub_1B6ACB8DC();
              }
              uint64_t v100 = v138;
              swift_bridgeObjectRelease();
              uint64_t v101 = *(void *)(v100 + 56) + 88 * v115;
              long long v102 = *(_OWORD *)(v101 + 16);
              long long v133 = *(_OWORD *)v101;
              long long v134 = v102;
              long long v104 = *(_OWORD *)(v101 + 48);
              long long v103 = *(_OWORD *)(v101 + 64);
              long long v105 = *(_OWORD *)(v101 + 32);
              *(void *)&v136[32] = *(void *)(v101 + 80);
              *(_OWORD *)uint64_t v136 = v104;
              *(_OWORD *)&v136[16] = v103;
              long long v135 = v105;
              sub_1B6AC8328(v115, v100);
              *int v96 = v100;
              swift_bridgeObjectRelease();
            }
            else
            {
              memset(v136, 0, sizeof(v136));
              long long v134 = 0u;
              long long v135 = 0u;
              long long v133 = 0u;
            }
            sub_1B6BDED84((uint64_t)&v133, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
            v116(v130, 0);
          }
          else
          {
            ((void (*)(_OWORD *, void))v94)(v130, 0);
            long long v133 = 0u;
            long long v134 = 0u;
            long long v135 = 0u;
            memset(v136, 0, sizeof(v136));
            sub_1B6BDED84((uint64_t)&v133, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
          }
          uint64_t v90 = v117;
          uint64_t v106 = v127;
          swift_bridgeObjectRelease();
          goto LABEL_91;
        }
        swift_bridgeObjectRelease();
        uint64_t v90 = v117;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v106 = v127;
LABEL_91:
      uint64_t v107 = sub_1B629C678(v90, v106, (uint64_t *)v140);
      long long v144 = v140[0];
      long long v145 = v140[1];
      uint64_t v146 = v141;
      *(void *)&long long v133 = MEMORY[0x1E4FBC860];
      *(void *)&v130[0] = MEMORY[0x1E4FBC860];
      LOBYTE(v138) = 0;
      uint64_t v108 = (void *)v2[10];
      uint64_t v109 = v2[11];
      MEMORY[0x1F4188790](v107, v110);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6A2EE0C(v108, v109, (void (*)(uint64_t, uint64_t, void *))sub_1B6BDED80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B68168F0(v140, (void (*)(void, void, void, void, void))sub_1B666BC88);
      uint64_t v111 = *(void *)&v130[0];
      v2[10] = v133;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2[11] = v111;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2[12] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      int v112 = (void *)v2[10];
      uint64_t v113 = v2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6A2EE0C(v112, v113, (void (*)(uint64_t, uint64_t, void *))sub_1B6815E7C);
      swift_bridgeObjectRelease();
LABEL_69:
      uint64_t v63 = v119;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v122 == ++v64)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        return swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD38B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1B6BD0D4C();
  char v3 = sub_1B6919430(v2, qword_1F0F85DB0);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0 || (v4 = *(void *)(sub_1B6BD0D4C() + 16), uint64_t result = swift_bridgeObjectRelease(), v4))
  {
    unint64_t v6 = *(void *)(v1 + 56);
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v7 = sub_1B6E32C18();
      if (v7) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v7)
      {
LABEL_5:
        uint64_t v8 = 0;
        unint64_t v49 = v6 & 0xC000000000000001;
        unint64_t v46 = v6 + 32;
        uint64_t v47 = v7;
        uint64_t v48 = MEMORY[0x1E4FBC840] + 8;
        while (1)
        {
          if (v49)
          {
            uint64_t v9 = MEMORY[0x1BA9B4580](v8, v6);
          }
          else
          {
            uint64_t v9 = *(void *)(v46 + 8 * v8);
            swift_retain();
          }
          uint64_t v10 = *(void *)(v1 + 16);
          if (!v10 || !*(void *)(v10 + 16)) {
            break;
          }
          swift_bridgeObjectRetain();
          uint64_t v11 = sub_1B62B2CE0(0xD00000000000001CLL, 0x80000001B6F2F200);
          if (v12)
          {
            sub_1B66459A4(*(void *)(v10 + 56) + 88 * v11, (uint64_t)&v56);
          }
          else
          {
            uint64_t v61 = 0;
            long long v59 = 0u;
            long long v60 = 0u;
            long long v58 = 0u;
            long long v56 = 0u;
            long long v57 = 0u;
          }
          swift_bridgeObjectRelease();
          if (!*((void *)&v56 + 1)) {
            goto LABEL_16;
          }
          sub_1B62B31E8((uint64_t)&v59 + 8, (uint64_t)&v50);
          sub_1B666BD18((uint64_t)&v56);
          if (!*((void *)&v51 + 1)) {
            goto LABEL_17;
          }
          sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
          if (!swift_dynamicCast()) {
            goto LABEL_18;
          }
          uint64_t v13 = v56;
LABEL_19:
          if (*(void *)(v13 + 16) != 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v16 = *(void *)(v1 + 16);
            if (!v16) {
              goto LABEL_32;
            }
            goto LABEL_29;
          }
          if ((_UNKNOWN *)v13 == &unk_1F0F85D80) {
            goto LABEL_39;
          }
          if (*(void *)(v13 + 32) == qword_1F0F85DA0 && *(void *)(v13 + 40) == unk_1F0F85DA8) {
            goto LABEL_39;
          }
          char v15 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
          {
            uint64_t v16 = *(void *)(v1 + 16);
            if (!v16)
            {
LABEL_32:
              uint64_t v61 = 0;
              long long v59 = 0u;
              long long v60 = 0u;
              long long v58 = 0u;
              long long v56 = 0u;
              long long v57 = 0u;
              goto LABEL_33;
            }
LABEL_29:
            if (!*(void *)(v16 + 16)) {
              goto LABEL_32;
            }
            swift_bridgeObjectRetain();
            uint64_t v17 = sub_1B62B2CE0(0xD00000000000001CLL, 0x80000001B6F2F200);
            if (v18)
            {
              sub_1B66459A4(*(void *)(v16 + 56) + 88 * v17, (uint64_t)&v56);
            }
            else
            {
              uint64_t v61 = 0;
              long long v59 = 0u;
              long long v60 = 0u;
              long long v58 = 0u;
              long long v56 = 0u;
              long long v57 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v56 + 1))
            {
              sub_1B62B31E8((uint64_t)&v59 + 8, (uint64_t)&v50);
              sub_1B666BD18((uint64_t)&v56);
              if (*((void *)&v51 + 1))
              {
                sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
                if (swift_dynamicCast())
                {
                  uint64_t v19 = (void *)v56;
                  uint64_t v20 = *(void *)(v56 + 16);
                  if (!v20) {
                    goto LABEL_6;
                  }
LABEL_36:
                  uint64_t v21 = *(void *)(v9 + 24);
                  uint64_t v22 = *(void *)(v9 + 32);
                  if ((v19[4] != v21 || v19[5] != v22) && (sub_1B6E334B8() & 1) == 0)
                  {
                    if (v20 == 1) {
                      goto LABEL_6;
                    }
                    if ((v19[6] != v21 || v19[7] != v22) && (sub_1B6E334B8() & 1) == 0)
                    {
                      if (v20 == 2) {
                        goto LABEL_6;
                      }
                      if ((v19[8] != v21 || v19[9] != v22) && (sub_1B6E334B8() & 1) == 0)
                      {
                        uint64_t v43 = v20 - 3;
                        if (!v43) {
                          goto LABEL_6;
                        }
                        uint64_t v44 = v19 + 11;
                        while (1)
                        {
                          BOOL v45 = *(v44 - 1) == v21 && *v44 == v22;
                          if (v45 || (sub_1B6E334B8() & 1) != 0) {
                            break;
                          }
                          v44 += 2;
                          if (!--v43) {
                            goto LABEL_6;
                          }
                        }
                      }
                    }
                  }
LABEL_39:
                  swift_bridgeObjectRelease();
                  goto LABEL_40;
                }
LABEL_35:
                uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
                uint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
                if (!v20) {
                  goto LABEL_6;
                }
                goto LABEL_36;
              }
            }
            else
            {
LABEL_33:
              sub_1B6BDED84((uint64_t)&v56, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
              long long v50 = 0u;
              long long v51 = 0u;
            }
            sub_1B6BDED84((uint64_t)&v50, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
            goto LABEL_35;
          }
LABEL_40:
          uint64_t v23 = *(void *)(v9 + 32);
          *(void *)&long long v56 = *(void *)(v9 + 24);
          *((void *)&v56 + 1) = v23;
          swift_bridgeObjectRetain_n();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          long long v24 = v56;
          uint64_t v25 = *(void *)(v1 + 16);
          if (!v25
            || !*(void *)(v25 + 16)
            || (swift_bridgeObjectRetain(),
                sub_1B62B2CE0(v24, *((uint64_t *)&v24 + 1)),
                char v27 = v26,
                swift_bridgeObjectRelease(),
                (v27 & 1) == 0))
          {
            unint64_t v28 = v6;
            sub_1B629C37C(v9 + 56, (uint64_t)v62);
            sub_1B68168F0(v62, (void (*)(void, void, void, void, void))sub_1B629C9E8);
            sub_1B6A3C6F4(v62, 1, (uint64_t)&v56);
            sub_1B68168F0(v62, (void (*)(void, void, void, void, void))sub_1B629DCAC);
            if (!*(void *)(v1 + 16))
            {
              *(void *)(v1 + 16) = sub_1B67DD080(MEMORY[0x1E4FBC860]);
              swift_bridgeObjectRelease();
            }
            sub_1B66459A4((uint64_t)&v56, (uint64_t)&v50);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v30 = *(void **)(v1 + 16);
            *(void *)(v1 + 16) = 0x8000000000000000;
            unint64_t v32 = sub_1B62B2CE0(v24, *((uint64_t *)&v24 + 1));
            char v33 = v31;
            uint64_t v34 = v30[2] + ((v31 & 1) == 0);
            if (v30[3] >= v34)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v37 = v30;
                if ((v31 & 1) == 0) {
                  goto LABEL_48;
                }
              }
              else
              {
                sub_1B6ACB8DC();
                uint64_t v37 = v30;
                if ((v33 & 1) == 0) {
                  goto LABEL_48;
                }
              }
            }
            else
            {
              sub_1B6AB5694(v34, isUniquelyReferenced_nonNull_native);
              uint64_t v35 = sub_1B62B2CE0(v24, *((uint64_t *)&v24 + 1));
              if ((v33 & 1) != (v36 & 1))
              {
                uint64_t result = sub_1B6E33838();
                __break(1u);
                return result;
              }
              unint64_t v32 = v35;
              uint64_t v37 = v30;
              if ((v33 & 1) == 0)
              {
LABEL_48:
                v37[(v32 >> 6) + 8] |= 1 << v32;
                *(_OWORD *)(v37[6] + 16 * v32) = v24;
                uint64_t v38 = v37[7] + 88 * v32;
                long long v39 = v51;
                *(_OWORD *)uint64_t v38 = v50;
                *(_OWORD *)(v38 + 16) = v39;
                long long v40 = v52;
                long long v41 = v53;
                long long v42 = v54;
                *(void *)(v38 + 80) = v55;
                *(_OWORD *)(v38 + 48) = v41;
                *(_OWORD *)(v38 + 64) = v42;
                *(_OWORD *)(v38 + 32) = v40;
                ++v37[2];
                swift_bridgeObjectRetain();
LABEL_52:
                *(void *)(v1 + 16) = v37;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1B666BD18((uint64_t)&v56);
                swift_release();
                unint64_t v6 = v28;
                uint64_t v7 = v47;
                goto LABEL_7;
              }
            }
            sub_1B678C464((uint64_t)&v50, v37[7] + 88 * v32);
            goto LABEL_52;
          }
LABEL_6:
          swift_release();
          swift_bridgeObjectRelease();
LABEL_7:
          if (++v8 == v7) {
            return swift_bridgeObjectRelease_n();
          }
        }
        uint64_t v61 = 0;
        long long v59 = 0uLL;
        long long v60 = 0uLL;
        long long v58 = 0uLL;
        long long v56 = 0uLL;
        long long v57 = 0uLL;
LABEL_16:
        sub_1B6BDED84((uint64_t)&v56, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
        long long v50 = 0u;
        long long v51 = 0u;
LABEL_17:
        sub_1B6BDED84((uint64_t)&v50, (unint64_t *)&qword_1EB980F60, v48);
LABEL_18:
        uint64_t v13 = MEMORY[0x1E4FBC860];
        goto LABEL_19;
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1B6BD4074()
{
  swift_retain();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B6A2EAF4(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1B6BD40DC(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)(v2 + 40);
  uint64_t v4 = v3[2];
  if (v4)
  {
    BOOL v7 = v3[4] == a1 && v3[5] == a2;
    if (!v7 && (sub_1B6E334B8() & 1) == 0)
    {
      if (v4 == 1) {
        return 0;
      }
      BOOL v8 = v3[6] == a1 && v3[7] == a2;
      if (!v8 && (sub_1B6E334B8() & 1) == 0)
      {
        uint64_t v14 = v4 - 2;
        if (v4 == 2) {
          return 0;
        }
        for (uint64_t i = v3 + 9; ; i += 2)
        {
          BOOL v17 = *(i - 1) == a1 && *i == a2;
          if (v17 || (sub_1B6E334B8() & 1) != 0) {
            break;
          }
          uint64_t v4 = 0;
          if (!--v14) {
            return v4;
          }
        }
      }
    }
    uint64_t v9 = sub_1B69EFB10(a1, a2, v3);
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = v9;
      unint64_t v12 = *(void *)(v2 + 56);
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1B6E32C18();
        swift_bridgeObjectRelease();
        if (v11 < v18)
        {
LABEL_16:
          uint64_t v13 = *(void *)(v2 + 56);
          if ((v13 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v4 = MEMORY[0x1BA9B4580](v11, v13);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v4 = *(void *)(v13 + 8 * v11 + 32);
            swift_retain();
          }
          return v4;
        }
      }
      else if (v9 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_16;
      }
    }
    return 0;
  }
  return v4;
}

uint64_t sub_1B6BD426C(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)(v2 + 80);
  uint64_t v4 = v3[2];
  if (v4)
  {
    BOOL v7 = v3[4] == a1 && v3[5] == a2;
    if (!v7 && (sub_1B6E334B8() & 1) == 0)
    {
      if (v4 == 1) {
        return 0;
      }
      BOOL v8 = v3[6] == a1 && v3[7] == a2;
      if (!v8 && (sub_1B6E334B8() & 1) == 0)
      {
        uint64_t v14 = v4 - 2;
        if (v4 == 2) {
          return 0;
        }
        for (uint64_t i = v3 + 9; ; i += 2)
        {
          BOOL v17 = *(i - 1) == a1 && *i == a2;
          if (v17 || (sub_1B6E334B8() & 1) != 0) {
            break;
          }
          uint64_t v4 = 0;
          if (!--v14) {
            return v4;
          }
        }
      }
    }
    uint64_t v9 = sub_1B69EFB10(a1, a2, v3);
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = v9;
      unint64_t v12 = *(void *)(v2 + 96);
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1B6E32C18();
        swift_bridgeObjectRelease();
        if (v11 < v18)
        {
LABEL_16:
          uint64_t v13 = *(void *)(v2 + 96);
          if ((v13 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v4 = MEMORY[0x1BA9B4580](v11, v13);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v4 = *(void *)(v13 + 8 * v11 + 32);
            swift_retain();
          }
          return v4;
        }
      }
      else if (v9 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_16;
      }
    }
    return 0;
  }
  return v4;
}

void *sub_1B6BD43FC()
{
  return sub_1B6BD4454((void (*)(uint64_t))sub_1B6A2D820, (void (*)(void **))sub_1B6A0CEB4);
}

void *sub_1B6BD4428()
{
  return sub_1B6BD4454((void (*)(uint64_t))sub_1B6A2D874, (void (*)(void **))sub_1B6A0CEB4);
}

void *sub_1B6BD4454(void (*a1)(uint64_t), void (*a2)(void **))
{
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  a1(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_bridgeObjectRetain();
  BOOL v7 = sub_1B69FED58(v6);
  swift_release();
  uint64_t v9 = v7;
  a2(&v9);
  swift_release();
  return v9;
}

uint64_t sub_1B6BD4504()
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v1, v2, (void (*)(uint64_t, uint64_t, void *))sub_1B6BDED80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B6BD45A8()
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v1, v2, (void (*)(uint64_t, uint64_t, void *))sub_1B6BDEF68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B6BD4640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B6BDC9EC(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_23;
  }
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  swift_bridgeObjectRetain();
  unint64_t v12 = (uint64_t *)(v10 + 40);
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC840] + 8;
  do
  {
    uint64_t v15 = *v12;
    *(void *)&long long v37 = *(v12 - 1);
    *((void *)&v37 + 1) = v15;
    swift_bridgeObjectRetain_n();
    sub_1B6E31948();
    uint64_t v16 = *((void *)&v37 + 1);
    uint64_t v17 = v5[2];
    if (v17 && *(void *)(v17 + 16))
    {
      uint64_t v18 = v37;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B62B2CE0(v18, v16);
      if (v20)
      {
        sub_1B66459A4(*(void *)(v17 + 56) + 88 * v19, (uint64_t)&v38);
      }
      else
      {
        uint64_t v43 = 0;
        long long v41 = 0u;
        long long v42 = 0u;
        long long v39 = 0u;
        long long v40 = 0u;
        long long v38 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v43 = 0;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v39 = 0u;
      long long v40 = 0u;
      long long v38 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v38 + 1))
    {
      sub_1B6BDED84((uint64_t)&v38, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
      long long v35 = 0u;
      long long v36 = 0u;
LABEL_4:
      sub_1B6BDED84((uint64_t)&v35, (unint64_t *)&qword_1EB980F60, v14);
      goto LABEL_5;
    }
    sub_1B62B31E8((uint64_t)&v41 + 8, (uint64_t)&v35);
    sub_1B666BD18((uint64_t)&v38);
    if (!*((void *)&v36 + 1)) {
      goto LABEL_4;
    }
    sub_1B62B57A8(&v35, &v38);
    sub_1B62CAAD8((uint64_t)&v38, (uint64_t)&v35);
    swift_dynamicCast();
    uint64_t v21 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1B68C09B4(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v23 = *((void *)v13 + 2);
    unint64_t v22 = *((void *)v13 + 3);
    if (v23 >= v22 >> 1) {
      uint64_t v13 = sub_1B68C09B4(v22 > 1, v23 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v23 + 1;
    *(void *)&v13[8 * v23 + 32] = v21;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v38);
LABEL_5:
    swift_bridgeObjectRelease();
    v12 += 2;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease_n();
  a3 = v33;
  a4 = v34;
  a2 = v32;
  if (!*((void *)v13 + 2)) {
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  sub_1B629C37C(a4, (uint64_t)&v38);
  if (*((void *)&v38 + 1) == 39)
  {
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
    uint64_t v25 = *((void *)v13 + 4);
    uint64_t v26 = *((void *)v13 + 5);
    sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980420);
    *((void *)&v36 + 1) = v27;
    *(void *)&long long v35 = v25;
    *((void *)&v35 + 1) = v26;
    if (swift_weakLoadStrong())
    {
      uint64_t v28 = *(void *)(v24 + 32);
      *(void *)&long long v37 = *(void *)(v24 + 24);
      *((void *)&v37 + 1) = v28;
      swift_bridgeObjectRetain_n();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6A3C3B0(v37, *((uint64_t *)&v37 + 1), (uint64_t)&v35);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v35);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v35 = 0;
    *((void *)&v35 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    long long v37 = v35;
    sub_1B6E31948();
    sub_1B629C37C(a4, (uint64_t)&v35);
    sub_1B6E32B18();
    long long v29 = v37;
    int v30 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v35 = 0;
    swift_retain();
    sub_1B6B33E34(v30, (uint64_t *)&v35, v29, *((uint64_t *)&v29 + 1));
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_1B6BD4B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B6BDC9EC(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v36 = a2;
    uint64_t v37 = a3;
    uint64_t v38 = a4;
    swift_bridgeObjectRetain();
    unint64_t v12 = (uint64_t *)(v10 + 40);
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v14 = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      uint64_t v15 = *v12;
      *(void *)&long long v43 = *(v12 - 1);
      *((void *)&v43 + 1) = v15;
      swift_bridgeObjectRetain_n();
      sub_1B6E31948();
      uint64_t v16 = *((void *)&v43 + 1);
      uint64_t v17 = v5[2];
      if (v17 && *(void *)(v17 + 16))
      {
        uint64_t v18 = v43;
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1B62B2CE0(v18, v16);
        if (v20)
        {
          sub_1B66459A4(*(void *)(v17 + 56) + 88 * v19, (uint64_t)&v44);
        }
        else
        {
          uint64_t v49 = 0;
          long long v47 = 0u;
          long long v48 = 0u;
          long long v45 = 0u;
          long long v46 = 0u;
          long long v44 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v49 = 0;
        long long v47 = 0u;
        long long v48 = 0u;
        long long v45 = 0u;
        long long v46 = 0u;
        long long v44 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v44 + 1))
      {
        sub_1B62B31E8((uint64_t)&v47 + 8, (uint64_t)&v41);
        sub_1B666BD18((uint64_t)&v44);
        if (*((void *)&v42 + 1))
        {
          sub_1B62B57A8(&v41, &v44);
          sub_1B62CAAD8((uint64_t)&v44, (uint64_t)&v41);
          swift_dynamicCast();
          int v21 = v43;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v13 = sub_1B6397840(0, *((void *)v13 + 2) + 1, 1, v13);
          }
          unint64_t v23 = *((void *)v13 + 2);
          unint64_t v22 = *((void *)v13 + 3);
          if (v23 >= v22 >> 1) {
            uint64_t v13 = sub_1B6397840(v22 > 1, v23 + 1, 1, v13);
          }
          *((void *)v13 + 2) = v23 + 1;
          *(_DWORD *)&v13[4 * v23 + 32] = v21;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v44);
          goto LABEL_5;
        }
      }
      else
      {
        sub_1B6BDED84((uint64_t)&v44, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
        long long v41 = 0u;
        long long v42 = 0u;
      }
      sub_1B6BDED84((uint64_t)&v41, (unint64_t *)&qword_1EB980F60, v14);
LABEL_5:
      swift_bridgeObjectRelease();
      v12 += 2;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        a3 = v37;
        a4 = v38;
        a2 = v36;
        if (!*((void *)v13 + 2)) {
          return swift_bridgeObjectRelease();
        }
LABEL_23:
        sub_1B629C37C(a4, (uint64_t)&v44);
        switch(*((void *)&v44 + 1))
        {
          case 0xELL:
            uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
            uint64_t v25 = *((void *)v13 + 4);
            sub_1B6BDEEC0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
            *((void *)&v42 + 1) = v26;
            *(void *)&long long v41 = v25;
            goto LABEL_33;
          case 0xFLL:
            uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
            *(void *)&long long v27 = *((void *)v13 + 4);
            DWORD2(v27) = *((_DWORD *)v13 + 10);
            long long v39 = v27;
            sub_1B6BDEEC0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
            *((void *)&v42 + 1) = v28;
            *(void *)&long long v41 = swift_allocObject();
            long long v29 = v39;
            HIDWORD(v29) = 0;
            *(_OWORD *)(v41 + 16) = v29;
            goto LABEL_33;
          case 0x10:
            uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
            long long v40 = *((_OWORD *)v13 + 2);
            sub_1B6BDEEC0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
            *((void *)&v42 + 1) = v30;
            *(void *)&long long v41 = swift_allocObject();
            *(_OWORD *)(v41 + 16) = v40;
            goto LABEL_33;
          case 0x28:
            uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
            sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980410);
            *((void *)&v42 + 1) = v34;
            *(void *)&long long v41 = *((void *)v13 + 4);
LABEL_33:
            if (swift_weakLoadStrong())
            {
              uint64_t v35 = *(void *)(v24 + 32);
              *(void *)&long long v43 = *(void *)(v24 + 24);
              *((void *)&v43 + 1) = v35;
              swift_bridgeObjectRetain_n();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6A3C3B0(v43, *((uint64_t *)&v43 + 1), (uint64_t)&v41);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();
            }
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v41);
            return swift_bridgeObjectRelease();
          default:
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v41 = 0;
            *((void *)&v41 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            long long v43 = v41;
            sub_1B6E31948();
            sub_1B629C37C(a4, (uint64_t)&v41);
            sub_1B6E32B18();
            long long v31 = v43;
            int v32 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v41 = 0;
            swift_retain();
            sub_1B6B33E34(v32, (uint64_t *)&v41, v31, *((uint64_t *)&v31 + 1));
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            return swift_release();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_23;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD5340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B6BDC9EC(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_23;
  }
  uint64_t v34 = a2;
  uint64_t v36 = a3;
  uint64_t v39 = a4;
  swift_bridgeObjectRetain();
  unint64_t v12 = (uint64_t *)(v10 + 40);
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC840] + 8;
  do
  {
    uint64_t v15 = *v12;
    *(void *)&long long v49 = *(v12 - 1);
    *((void *)&v49 + 1) = v15;
    swift_bridgeObjectRetain_n();
    sub_1B6E31948();
    uint64_t v16 = *((void *)&v49 + 1);
    uint64_t v17 = v5[2];
    if (v17 && *(void *)(v17 + 16))
    {
      uint64_t v18 = v49;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B62B2CE0(v18, v16);
      if (v20)
      {
        sub_1B66459A4(*(void *)(v17 + 56) + 88 * v19, (uint64_t)&v50);
      }
      else
      {
        uint64_t v55 = 0;
        long long v53 = 0u;
        long long v54 = 0u;
        long long v51 = 0u;
        long long v52 = 0u;
        long long v50 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = 0;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      long long v50 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v50 + 1))
    {
      sub_1B6BDED84((uint64_t)&v50, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
      long long v47 = 0u;
      long long v48 = 0u;
LABEL_4:
      sub_1B6BDED84((uint64_t)&v47, (unint64_t *)&qword_1EB980F60, v14);
      goto LABEL_5;
    }
    sub_1B62B31E8((uint64_t)&v53 + 8, (uint64_t)&v47);
    sub_1B666BD18((uint64_t)&v50);
    if (!*((void *)&v48 + 1)) {
      goto LABEL_4;
    }
    sub_1B62B57A8(&v47, &v50);
    sub_1B62CAAD8((uint64_t)&v50, (uint64_t)&v47);
    sub_1B6BDEEC0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    swift_dynamicCast();
    long long v43 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1B68C0EA8(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v22 = *((void *)v13 + 2);
    unint64_t v21 = *((void *)v13 + 3);
    if (v22 >= v21 >> 1) {
      uint64_t v13 = sub_1B68C0EA8(v21 > 1, v22 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v22 + 1;
    *(_OWORD *)&v13[16 * v22 + 32] = v43;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v50);
LABEL_5:
    swift_bridgeObjectRelease();
    v12 += 2;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease_n();
  a4 = v39;
  a3 = v36;
  a2 = v34;
  if (!*((void *)v13 + 2)) {
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  sub_1B629C37C(a4, (uint64_t)&v50);
  switch(*((void *)&v50 + 1))
  {
    case 0x18:
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
      long long v35 = *((_OWORD *)v13 + 3);
      long long v37 = *((_OWORD *)v13 + 2);
      long long v41 = *((_OWORD *)v13 + 5);
      long long v45 = *((_OWORD *)v13 + 4);
      type metadata accessor for simd_float4x3(0);
      *((void *)&v48 + 1) = v26;
      long long v27 = (_OWORD *)swift_allocObject();
      *(void *)&long long v47 = v27;
      v27[1] = v37;
      v27[2] = v35;
      v27[3] = v45;
      v27[4] = v41;
      if (swift_weakLoadStrong())
      {
LABEL_31:
        uint64_t v30 = *(void *)(v23 + 32);
        *(void *)&long long v49 = *(void *)(v23 + 24);
        *((void *)&v49 + 1) = v30;
        swift_bridgeObjectRetain_n();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6A3C3B0(v49, *((uint64_t *)&v49 + 1), (uint64_t)&v47);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
LABEL_28:
      swift_release();
LABEL_32:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
      return swift_bridgeObjectRelease();
    case 0x15:
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
      long long v42 = *((_OWORD *)v13 + 3);
      long long v46 = *((_OWORD *)v13 + 2);
      long long v38 = *((_OWORD *)v13 + 4);
      type metadata accessor for simd_float3x3(0);
      *((void *)&v48 + 1) = v28;
      long long v29 = (_OWORD *)swift_allocObject();
      *(void *)&long long v47 = v29;
      v29[1] = v46;
      _OWORD v29[2] = v42;
      v29[3] = v38;
LABEL_30:
      if (swift_weakLoadStrong()) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 0x12:
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
      long long v40 = *((_OWORD *)v13 + 3);
      long long v44 = *((_OWORD *)v13 + 2);
      type metadata accessor for simd_float2x3(0);
      *((void *)&v48 + 1) = v24;
      uint64_t v25 = swift_allocObject();
      *(void *)&long long v47 = v25;
      *(_OWORD *)(v25 + 16) = v44;
      *(_OWORD *)(v25 + 32) = v40;
      goto LABEL_30;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  *(void *)&long long v47 = 0;
  *((void *)&v47 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  long long v49 = v47;
  sub_1B6E31948();
  sub_1B629C37C(a4, (uint64_t)&v47);
  sub_1B6E32B18();
  long long v32 = v49;
  int v33 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&long long v47 = 0;
  swift_retain();
  sub_1B6B33E34(v33, (uint64_t *)&v47, v32, *((uint64_t *)&v32 + 1));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6BD5A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B6BDC9EC(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_23;
  }
  uint64_t v34 = a2;
  uint64_t v36 = a3;
  uint64_t v39 = a4;
  swift_bridgeObjectRetain();
  unint64_t v12 = (uint64_t *)(v10 + 40);
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC840] + 8;
  do
  {
    uint64_t v15 = *v12;
    *(void *)&long long v49 = *(v12 - 1);
    *((void *)&v49 + 1) = v15;
    swift_bridgeObjectRetain_n();
    sub_1B6E31948();
    uint64_t v16 = *((void *)&v49 + 1);
    uint64_t v17 = v5[2];
    if (v17 && *(void *)(v17 + 16))
    {
      uint64_t v18 = v49;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B62B2CE0(v18, v16);
      if (v20)
      {
        sub_1B66459A4(*(void *)(v17 + 56) + 88 * v19, (uint64_t)&v50);
      }
      else
      {
        uint64_t v55 = 0;
        long long v53 = 0u;
        long long v54 = 0u;
        long long v51 = 0u;
        long long v52 = 0u;
        long long v50 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = 0;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      long long v50 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v50 + 1))
    {
      sub_1B6BDED84((uint64_t)&v50, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
      long long v47 = 0u;
      long long v48 = 0u;
LABEL_4:
      sub_1B6BDED84((uint64_t)&v47, (unint64_t *)&qword_1EB980F60, v14);
      goto LABEL_5;
    }
    sub_1B62B31E8((uint64_t)&v53 + 8, (uint64_t)&v47);
    sub_1B666BD18((uint64_t)&v50);
    if (!*((void *)&v48 + 1)) {
      goto LABEL_4;
    }
    sub_1B62B57A8(&v47, &v50);
    sub_1B62CAAD8((uint64_t)&v50, (uint64_t)&v47);
    sub_1B6BDEEC0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    swift_dynamicCast();
    long long v43 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1B629CE28(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v22 = *((void *)v13 + 2);
    unint64_t v21 = *((void *)v13 + 3);
    if (v22 >= v21 >> 1) {
      uint64_t v13 = sub_1B629CE28(v21 > 1, v22 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v22 + 1;
    *(_OWORD *)&v13[16 * v22 + 32] = v43;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v50);
LABEL_5:
    swift_bridgeObjectRelease();
    v12 += 2;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease_n();
  a4 = v39;
  a3 = v36;
  a2 = v34;
  if (!*((void *)v13 + 2)) {
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  sub_1B629C37C(a4, (uint64_t)&v50);
  switch(*((void *)&v50 + 1))
  {
    case 0x19:
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
      long long v35 = *((_OWORD *)v13 + 3);
      long long v37 = *((_OWORD *)v13 + 2);
      long long v41 = *((_OWORD *)v13 + 5);
      long long v45 = *((_OWORD *)v13 + 4);
      type metadata accessor for simd_float4x4(0);
      *((void *)&v48 + 1) = v26;
      long long v27 = (_OWORD *)swift_allocObject();
      *(void *)&long long v47 = v27;
      v27[1] = v37;
      v27[2] = v35;
      v27[3] = v45;
      v27[4] = v41;
      if (swift_weakLoadStrong())
      {
LABEL_31:
        uint64_t v30 = *(void *)(v23 + 32);
        *(void *)&long long v49 = *(void *)(v23 + 24);
        *((void *)&v49 + 1) = v30;
        swift_bridgeObjectRetain_n();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6A3C3B0(v49, *((uint64_t *)&v49 + 1), (uint64_t)&v47);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
LABEL_28:
      swift_release();
LABEL_32:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
      return swift_bridgeObjectRelease();
    case 0x16:
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
      long long v42 = *((_OWORD *)v13 + 3);
      long long v46 = *((_OWORD *)v13 + 2);
      long long v38 = *((_OWORD *)v13 + 4);
      type metadata accessor for simd_float3x4(0);
      *((void *)&v48 + 1) = v28;
      long long v29 = (_OWORD *)swift_allocObject();
      *(void *)&long long v47 = v29;
      v29[1] = v46;
      _OWORD v29[2] = v42;
      v29[3] = v38;
LABEL_30:
      if (swift_weakLoadStrong()) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 0x13:
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*v5 + 1440))(a2, a3);
      long long v40 = *((_OWORD *)v13 + 3);
      long long v44 = *((_OWORD *)v13 + 2);
      type metadata accessor for simd_float2x4(0);
      *((void *)&v48 + 1) = v24;
      uint64_t v25 = swift_allocObject();
      *(void *)&long long v47 = v25;
      *(_OWORD *)(v25 + 16) = v44;
      *(_OWORD *)(v25 + 32) = v40;
      goto LABEL_30;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  *(void *)&long long v47 = 0;
  *((void *)&v47 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  long long v49 = v47;
  sub_1B6E31948();
  sub_1B629C37C(a4, (uint64_t)&v47);
  sub_1B6E32B18();
  long long v32 = v49;
  int v33 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&long long v47 = 0;
  swift_retain();
  sub_1B6B33E34(v33, (uint64_t *)&v47, v32, *((uint64_t *)&v32 + 1));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6BD60E8(uint64_t a1)
{
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v38 = 0u;
    goto LABEL_13;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(a1 + 32);
  v44[0] = *(void *)(a1 + 24);
  v44[1] = v4;
  swift_bridgeObjectRetain_n();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5 || !*(void *)(v5 + 16))
  {
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v38 = 0u;
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B62B2CE0(v44[0], v4);
  if ((v7 & 1) == 0)
  {
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v38 = 0u;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  sub_1B66459A4(*(void *)(v5 + 56) + 88 * v6, (uint64_t)&v38);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (!*((void *)&v38 + 1))
  {
LABEL_13:
    sub_1B6BDED84((uint64_t)&v38, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
    long long v34 = 0u;
    long long v35 = 0u;
    goto LABEL_14;
  }
  sub_1B62B31E8((uint64_t)&v41 + 8, (uint64_t)&v34);
  sub_1B666BD18((uint64_t)&v38);
  if (*((void *)&v35 + 1))
  {
    uint64_t v8 = MEMORY[0x1E4FBC840];
    sub_1B6BDED84((uint64_t)&v34, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    sub_1B6C2DE14((uint64_t)&v38);
    long long v9 = v39;
    sub_1B629C9E8(v39, *((unint64_t *)&v39 + 1));
    sub_1B666BD18((uint64_t)&v38);
    switch(*((void *)&v9 + 1))
    {
      case 0xELL:
      case 0xFLL:
      case 0x10:
      case 0x28:
        sub_1B6C2DE14((uint64_t)&v34);
        sub_1B629C37C((uint64_t)&v35, (uint64_t)v44);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        sub_1B666BD18((uint64_t)&v34);
        sub_1B6C2DE14((uint64_t)&v34);
        if (*((void *)&v34 + 1))
        {
          sub_1B62B31E8((uint64_t)v37, (uint64_t)&v32);
          sub_1B666BD18((uint64_t)&v34);
        }
        else
        {
          sub_1B6BDED84((uint64_t)&v34, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
          long long v32 = 0u;
          long long v33 = 0u;
        }
        uint64_t v13 = sub_1B6BDDCE0((uint64_t)v44, (uint64_t)&v32);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        swift_retain();
        uint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = (void *)sub_1B6BDE61C(v14);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B6BDE7CC(v15, (uint64_t)v13, (void (*)(uint64_t, uint64_t, float))sub_1B6BDEEB8);
        goto LABEL_27;
      case 0x11:
      case 0x12:
      case 0x13:
        goto LABEL_29;
      case 0x14:
      case 0x15:
      case 0x16:
        sub_1B6C2DE14((uint64_t)&v34);
        sub_1B629C37C((uint64_t)&v35, (uint64_t)v44);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        sub_1B666BD18((uint64_t)&v34);
        sub_1B6C2DE14((uint64_t)&v34);
        if (*((void *)&v34 + 1))
        {
          sub_1B62B31E8((uint64_t)v37, (uint64_t)&v32);
          sub_1B666BD18((uint64_t)&v34);
        }
        else
        {
          sub_1B6BDED84((uint64_t)&v34, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
          long long v32 = 0u;
          long long v33 = 0u;
        }
        uint64_t v16 = sub_1B6BDCBA0((uint64_t)v44, (uint64_t)&v32);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        swift_retain();
        uint64_t v17 = swift_bridgeObjectRetain();
        uint64_t v18 = sub_1B6BDE61C(v17);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v19 = (void (*)(uint64_t, uint64_t, __n128))sub_1B6BDEE80;
        char v20 = (void *)v18;
        unint64_t v21 = (__n128 *)v16;
        goto LABEL_26;
      case 0x17:
      case 0x18:
      case 0x19:
        sub_1B6C2DE14((uint64_t)&v34);
        sub_1B629C37C((uint64_t)&v35, (uint64_t)v44);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        sub_1B666BD18((uint64_t)&v34);
        sub_1B6C2DE14((uint64_t)&v34);
        if (*((void *)&v34 + 1))
        {
          sub_1B62B31E8((uint64_t)v37, (uint64_t)&v32);
          sub_1B666BD18((uint64_t)&v34);
        }
        else
        {
          sub_1B6BDED84((uint64_t)&v34, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
          long long v32 = 0u;
          long long v33 = 0u;
        }
        unint64_t v22 = sub_1B6BDD1D4((uint64_t)v44, (uint64_t)&v32);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        swift_retain();
        uint64_t v23 = swift_bridgeObjectRetain();
        uint64_t v24 = sub_1B6BDE61C(v23);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v19 = (void (*)(uint64_t, uint64_t, __n128))sub_1B6BDEE48;
        char v20 = (void *)v24;
        unint64_t v21 = (__n128 *)v22;
LABEL_26:
        sub_1B6BDD808(v20, v21, v19);
        goto LABEL_27;
      case 0x27:
        sub_1B6C2DE14((uint64_t)&v34);
        sub_1B629C37C((uint64_t)&v35, (uint64_t)v44);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        sub_1B666BD18((uint64_t)&v34);
        sub_1B6C2DE14((uint64_t)&v34);
        if (*((void *)&v34 + 1))
        {
          sub_1B62B31E8((uint64_t)v37, (uint64_t)&v32);
          sub_1B666BD18((uint64_t)&v34);
        }
        else
        {
          sub_1B6BDED84((uint64_t)&v34, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
          long long v32 = 0u;
          long long v33 = 0u;
        }
        long long v29 = sub_1B6BDD914((uint64_t)v44, (uint64_t)&v32);
        sub_1B68168F0(v44, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        swift_retain();
        uint64_t v30 = swift_bridgeObjectRetain();
        long long v31 = (void *)sub_1B6BDE61C(v30);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B6BDDBD4(v31, v29, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6BDEE40);
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v8 + 8;
        uint64_t v11 = &v32;
        return sub_1B6BDED84((uint64_t)v11, (unint64_t *)&qword_1EB980F60, v10);
      default:
        sub_1B629DCAC(v9, *((unint64_t *)&v9 + 1));
LABEL_29:
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        *(void *)&long long v34 = 0;
        *((void *)&v34 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        *(_OWORD *)long long v44 = v34;
        sub_1B6E31948();
        uint64_t v25 = *(void *)(a1 + 88);
        long long v26 = *(_OWORD *)(a1 + 72);
        long long v34 = *(_OWORD *)(a1 + 56);
        long long v35 = v26;
        uint64_t v36 = v25;
        sub_1B6E32B18();
        long long v27 = *(_OWORD *)v44;
        int v28 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        *(void *)&long long v34 = 0;
        swift_retain();
        sub_1B6B33E34(v28, (uint64_t *)&v34, v27, *((uint64_t *)&v27 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
    }
  }
LABEL_14:
  uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = &v34;
  return sub_1B6BDED84((uint64_t)v11, (unint64_t *)&qword_1EB980F60, v10);
}

uint64_t sub_1B6BD696C(uint64_t a1, uint64_t a2)
{
  return sub_1B6BD7098(a1, a2);
}

void *sub_1B6BD6978(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v37 = a1;
  *(void *)&long long v38 = a2;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  uint64_t v7 = v37;
  uint64_t v6 = v38;
  uint64_t v8 = v2[2];
  if (v8
    && *(void *)(v8 + 16)
    && (swift_bridgeObjectRetain(), sub_1B62B2CE0(v37, v38), char v10 = v9, swift_bridgeObjectRelease(), (v10 & 1) != 0))
  {
    sub_1B6A3C4C4(v37, v38, &v29);
    sub_1B62B57A8(&v29, &v37);
    swift_dynamicCast();
    sub_1B629C678(v33, *((uint64_t *)&v33 + 1), &v34);
    uint64_t v37 = v34;
    uint64_t v28 = v35;
    long long v38 = v35;
    long long v39 = v36;
    sub_1B6A3C29C(v7, v6);
    swift_bridgeObjectRelease();
    uint64_t v11 = v3[5];
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1B6BD4504();
    uint64_t v14 = v13;
    v3[5] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v3[6] = v14;
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*v3 + 1336))(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    switch(v28)
    {
      case 14:
      case 15:
      case 16:
      case 40:
        sub_1B6BD4B7C(v11, a1, a2, (uint64_t)&v37);
        goto LABEL_19;
      case 17:
      case 18:
      case 19:
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        *(void *)&long long v29 = 0;
        *((void *)&v29 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        long long v33 = v29;
        sub_1B6E31948();
        long long v29 = xmmword_1B6E8EFB0;
        uint64_t v31 = 0;
        uint64_t v32 = 0;
        uint64_t v30 = 0;
        sub_1B6E32B18();
        long long v26 = v33;
        int v27 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        *(void *)&long long v29 = 0;
        swift_retain();
        sub_1B6B33E34(v27, (uint64_t *)&v29, v26, *((uint64_t *)&v26 + 1));
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_20;
      case 20:
      case 21:
      case 22:
        sub_1B6BD5340(v11, a1, a2, (uint64_t)&v37);
        goto LABEL_19;
      case 23:
      case 24:
      case 25:
        sub_1B6BD5A14(v11, a1, a2, (uint64_t)&v37);
        goto LABEL_19;
      case 39:
        sub_1B6BD4640(v11, a1, a2, (uint64_t)&v37);
        goto LABEL_19;
      default:
LABEL_19:
        swift_bridgeObjectRelease();
LABEL_20:
        uint64_t result = sub_1B68168F0(&v34, (void (*)(void, void, void, void, void))sub_1B666BC88);
        break;
    }
  }
  else
  {
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(*v3 + 1440))(a1, a2);
    if (v16)
    {
      uint64_t v17 = v16;
      sub_1B629C37C(v16 + 56, (uint64_t)&v37);
      sub_1B68168F0(&v37, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      uint64_t v18 = sub_1B6A3D8B8();
      uint64_t v20 = v19;
      sub_1B68168F0(&v37, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      *(void *)&long long v36 = MEMORY[0x1E4FBB1A0];
      uint64_t v34 = v18;
      *(void *)&long long v35 = v20;
      sub_1B6A3C3B0(v7, v6, (uint64_t)&v34);
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v34);
      uint64_t v21 = sub_1B6BD45A8();
      uint64_t v23 = v22;
      v3[5] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v3[6] = v23;
      swift_bridgeObjectRetain();
      uint64_t v24 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*v3 + 1336))(v24);
      sub_1B6BD60E8(v17);
      swift_release();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6BD6F4C()
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v1, v2, (void (*)(uint64_t, uint64_t, void *))sub_1B6BDED80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B6BD6FF0()
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v1, v2, (void (*)(uint64_t, uint64_t, void *))sub_1B6BDED68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B6BD7088(uint64_t a1, uint64_t a2)
{
  return sub_1B6BD7098(a1, a2);
}

uint64_t sub_1B6BD7098(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3 && *(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1B62B2CE0(a1, a2);
    char v5 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1B6BD7148(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)&v25[0] = a1;
  *((void *)&v25[0] + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  long long v6 = v25[0];
  uint64_t v7 = *(void *)(v2 + 16);
  if (v7
    && *(void *)(v7 + 16)
    && (swift_bridgeObjectRetain(),
        sub_1B62B2CE0(*(uint64_t *)&v25[0], *((uint64_t *)&v25[0] + 1)),
        char v9 = v8,
        swift_bridgeObjectRelease(),
        (v9 & 1) != 0))
  {
    sub_1B6A3C4C4(*(uint64_t *)&v25[0], *((uint64_t *)&v25[0] + 1), &v22);
    sub_1B62B57A8(&v22, v25);
    swift_dynamicCast();
    sub_1B6A3C29C(v6, *((uint64_t *)&v6 + 1));
    swift_bridgeObjectRelease();
    sub_1B629C678(v20, v21, (uint64_t *)&v22);
    v25[0] = v22;
    v25[1] = v23;
    uint64_t v26 = v24;
    uint64_t v10 = sub_1B6BD6F4C();
    uint64_t v12 = v11;
    sub_1B68168F0(&v22, (void (*)(void, void, void, void, void))sub_1B666BC88);
    sub_1B6BD1DAC(v10, v12);
  }
  else
  {
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 1456))(a1, a2);
    sub_1B629C37C(v13 + 56, (uint64_t)v25);
    sub_1B68168F0(v25, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    uint64_t v14 = sub_1B6A3D8B8();
    uint64_t v16 = v15;
    sub_1B68168F0(v25, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    *((void *)&v23 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v22 = v14;
    *((void *)&v22 + 1) = v16;
    sub_1B6A3C3B0(v6, *((uint64_t *)&v6 + 1), (uint64_t)&v22);
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
    uint64_t v17 = sub_1B6BD6FF0();
    sub_1B6BD1DAC(v17, v18);
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1B6BD73B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  v3[6] = MEMORY[0x1E4FBC860];
  v3[7] = v4;
  v3[8] = v4;
  v3[9] = v4;
  void v3[10] = v4;
  v3[11] = v4;
  v3[12] = v4;
  v3[13] = v4;
  v3[14] = v4;
  v3[15] = 0;
  v3[16] = v4;
  v3[2] = a3;
  v3[3] = a1;
  void v3[4] = a2;
  v3[5] = v4;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B6BD73F8(void *a1)
{
  sub_1B6BDEEC0(0, &qword_1E9DD6C18, (uint64_t (*)(void))sub_1B6BDEC00, (uint64_t)&type metadata for GraphV1CodeGeneration.BaseObject.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  char v9 = (char *)&v51 - v8;
  v1[3] = 0;
  v1[4] = 0xE000000000000000;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  v1[5] = MEMORY[0x1E4FBC860];
  v1[6] = v10;
  v1[7] = v10;
  v1[8] = v10;
  v1[9] = v10;
  v1[10] = v10;
  v1[11] = v10;
  v1[12] = v10;
  v1[13] = v10;
  v1[14] = v10;
  v1[15] = 0;
  v1[16] = v10;
  sub_1B62C1550((uint64_t)a1, (uint64_t)v58);
  uint64_t v11 = sub_1B6A44238(v58);
  uint64_t v12 = v2;
  if (v2)
  {
    uint64_t v13 = (uint64_t)a1;
LABEL_3:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v13);
    return v11;
  }
  uint64_t v14 = v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BDEC00();
  swift_retain();
  sub_1B6E33A48();
  uint64_t v54 = v6;
  uint64_t v55 = (void *)v11;
  uint64_t v57 = v5;
  uint64_t v15 = sub_1B6E32E88();
  uint64_t v16 = *(void *)(v15 + 16);
  long long v56 = v14;
  long long v53 = a1;
  if (v16)
  {
    long long v52 = 0;
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    while (2)
    {
      switch(*(unsigned char *)(v15 + v17 + 32))
      {
        case 1:
        case 2:
        case 3:
        case 4:
          char v18 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_13;
          }
          if (v16 != ++v17) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          uint64_t v12 = v52;
          uint64_t v14 = v56;
          goto LABEL_16;
        default:
          swift_bridgeObjectRelease();
LABEL_13:
          uint64_t v12 = v52;
          uint64_t v19 = (uint64_t)v53;
          uint64_t v20 = v54;
          uint64_t v21 = v57;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v58[0]) = 0;
          uint64_t v14 = v56;
          uint64_t v22 = sub_1B6E32D98();
          if (v12)
          {
            uint64_t v11 = (uint64_t)v55;
            swift_release();
            (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
            goto LABEL_69;
          }
          uint64_t v24 = v55;
          v55[3] = v22;
          _OWORD v24[4] = v23;
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v25 = sub_1B6E32E88();
  uint64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  long long v51 = "outParameterNames";
  long long v52 = "inParameterDefaultValues";
  while (2)
  {
    switch(*(unsigned char *)(v25 + v27 + 32))
    {
      case 1:
        goto LABEL_25;
      case 2:
        if (0x80000001B6F2F120 != 0x80000001B6F2F100) {
          goto LABEL_20;
        }
LABEL_25:
        swift_bridgeObjectRelease();
        goto LABEL_26;
      default:
LABEL_20:
        char v28 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
        {
          if (v26 == ++v27)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v14 = v56;
            goto LABEL_28;
          }
          continue;
        }
LABEL_26:
        uint64_t v29 = v54;
        uint64_t v14 = v56;
        uint64_t v30 = v57;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        char v59 = 1;
        sub_1B6BDECE4((unint64_t *)&qword_1EB980308);
        sub_1B6E32DF8();
        if (v12)
        {
LABEL_52:
          uint64_t v11 = (uint64_t)v55;
          swift_release();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
          goto LABEL_68;
        }
        v55[5] = v58[0];
        swift_bridgeObjectRelease();
LABEL_28:
        uint64_t v31 = sub_1B6E32E88();
        uint64_t v32 = *(void *)(v31 + 16);
        if (!v32)
        {
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
        swift_bridgeObjectRetain();
        uint64_t v33 = 0;
        long long v51 = "outParameterNames";
        long long v52 = "inParameterDefaultValues";
        while (2)
        {
          switch(*(unsigned char *)(v31 + v33 + 32))
          {
            case 1:
              if (0x80000001B6F2F100 != 0x80000001B6F2F120) {
                goto LABEL_32;
              }
              goto LABEL_37;
            case 2:
LABEL_37:
              swift_bridgeObjectRelease();
              goto LABEL_38;
            default:
LABEL_32:
              char v34 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v34 & 1) == 0)
              {
                if (v32 == ++v33)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v14 = v56;
                  goto LABEL_41;
                }
                continue;
              }
LABEL_38:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B6BDEDF4(0, &qword_1E9DD6C28, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB320]);
              char v59 = 2;
              sub_1B6BDEC54(&qword_1E9DD6C30, (void (*)(void))sub_1B629DD00);
              uint64_t v14 = v56;
              uint64_t v35 = v57;
              sub_1B6E32DF8();
              uint64_t v36 = v54;
              if (v12)
              {
                uint64_t v11 = (uint64_t)v55;
                swift_release();
                (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
                goto LABEL_68;
              }
              v55[6] = v58[0];
              swift_bridgeObjectRelease();
LABEL_41:
              uint64_t v37 = sub_1B6E32E88();
              uint64_t v38 = *(void *)(v37 + 16);
              if (!v38)
              {
                swift_bridgeObjectRelease();
                goto LABEL_54;
              }
              swift_bridgeObjectRetain();
              uint64_t v39 = 0;
              long long v51 = "outParameterNames";
              long long v52 = "inParameterNames";
              break;
          }
          break;
        }
        while (2)
        {
          switch(*(unsigned char *)(v37 + v39 + 32))
          {
            case 3:
              goto LABEL_50;
            case 4:
              if (((unint64_t)v51 | 0x8000000000000000) != 0x80000001B6F2F160) {
                goto LABEL_45;
              }
LABEL_50:
              swift_bridgeObjectRelease();
              goto LABEL_51;
            default:
LABEL_45:
              char v40 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v40 & 1) == 0)
              {
                if (v38 == ++v39)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v14 = v56;
                  goto LABEL_54;
                }
                continue;
              }
LABEL_51:
              uint64_t v29 = v54;
              uint64_t v14 = v56;
              uint64_t v30 = v57;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
              char v59 = 3;
              sub_1B6BDECE4((unint64_t *)&qword_1EB980308);
              sub_1B6E32DF8();
              if (v12) {
                goto LABEL_52;
              }
              v55[10] = v58[0];
              swift_bridgeObjectRelease();
LABEL_54:
              uint64_t v41 = sub_1B6E32E88();
              uint64_t v42 = *(void *)(v41 + 16);
              if (!v42)
              {
                uint64_t v45 = v54;
                uint64_t v46 = v57;
                goto LABEL_62;
              }
              swift_bridgeObjectRetain();
              uint64_t v43 = 0;
              long long v51 = "inParameterDefaultValues";
              long long v52 = "inParameterNames";
              break;
          }
          break;
        }
        while (2)
        {
          switch(*(unsigned char *)(v41 + v43 + 32))
          {
            case 3:
              if (((unint64_t)v51 | 0x8000000000000000) == 0x80000001B6F2F180) {
                goto LABEL_65;
              }
              goto LABEL_58;
            case 4:
LABEL_65:
              swift_bridgeObjectRelease();
              goto LABEL_66;
            default:
LABEL_58:
              char v44 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v44 & 1) == 0)
              {
                if (v42 == ++v43)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v45 = v54;
                  uint64_t v14 = v56;
                  uint64_t v46 = v57;
LABEL_62:
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v46);
                  uint64_t v11 = (uint64_t)v55;
                  swift_release();
LABEL_63:
                  uint64_t v13 = (uint64_t)v53;
                  goto LABEL_3;
                }
                continue;
              }
LABEL_66:
              uint64_t v47 = v54;
              long long v48 = v56;
              uint64_t v49 = v57;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B6BDEDF4(0, &qword_1E9DD6C28, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB320]);
              char v59 = 4;
              sub_1B6BDEC54(&qword_1E9DD6C30, (void (*)(void))sub_1B629DD00);
              sub_1B6E32DF8();
              if (!v12)
              {
                (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
                uint64_t v11 = (uint64_t)v55;
                swift_release();
                *(void *)(v11 + 88) = v58[0];
                swift_bridgeObjectRelease();
                goto LABEL_63;
              }
              uint64_t v11 = (uint64_t)v55;
              swift_release();
              (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
LABEL_68:
              uint64_t v19 = (uint64_t)v53;
LABEL_69:
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v19);
              swift_release();
              return v11;
          }
        }
    }
  }
}

uint64_t sub_1B6BD807C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B6BD8104(void *a1)
{
  sub_1B6BDEEC0(0, &qword_1E9DD6C38, (uint64_t (*)(void))sub_1B6BDEC00, (uint64_t)&type metadata for GraphV1CodeGeneration.BaseObject.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  char v9 = (char *)&v13 - v8;
  uint64_t result = sub_1B6A43FC0(a1);
  if (!v2)
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6BDEC00();
    sub_1B6E33A88();
    unint64_t v11 = v1[4];
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v1[3] & 0xFFFFFFFFFFFFLL;
    }
    if (v12)
    {
      LOBYTE(v15) = 0;
      swift_bridgeObjectRetain();
      sub_1B6E32F48();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v1[5] + 16))
    {
      uint64_t v15 = v1[5];
      char v14 = 1;
      sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1B6BDECE4((unint64_t *)&qword_1E9DCFE00);
      sub_1B6E32FA8();
    }
    if (*(void *)(v1[6] + 16))
    {
      uint64_t v15 = v1[6];
      char v14 = 2;
      sub_1B6BDEDF4(0, &qword_1E9DD6C28, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB320]);
      sub_1B6BDEC54(&qword_1E9DD6C40, (void (*)(void))sub_1B6646C2C);
      sub_1B6E32FA8();
    }
    if (*(void *)(v1[10] + 16))
    {
      uint64_t v15 = v1[10];
      char v14 = 3;
      sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1B6BDECE4((unint64_t *)&qword_1E9DCFE00);
      sub_1B6E32FA8();
    }
    if (*(void *)(v1[11] + 16))
    {
      uint64_t v15 = v1[11];
      char v14 = 4;
      sub_1B6BDEDF4(0, &qword_1E9DD6C28, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB320]);
      sub_1B6BDEC54(&qword_1E9DD6C40, (void (*)(void))sub_1B6646C2C);
      sub_1B6E32FA8();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_1B6BD8550(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1B6D67230(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  uint64_t result = sub_1B6BDA31C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B6BD85BC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B6D67244(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1B6BDAB2C(v5);
  *a1 = v2;
  return result;
}

void *sub_1B6BD8628(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  v1[4] = 0xE000000000000000;
  v1[5] = v2;
  v1[6] = v2;
  v1[7] = v2;
  v1[8] = v2;
  v1[9] = v2;
  v1[10] = v2;
  v1[11] = v2;
  v1[12] = v2;
  v1[13] = v2;
  v1[14] = v2;
  v1[15] = 0;
  v1[16] = v2;
  v1[2] = a1;
  v1[3] = 0;
  return v1;
}

unint64_t sub_1B6BD865C(char a1)
{
  unint64_t result = 0x70696E5365646F43;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C626169726156;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x45747865746E6F43;
      break;
    case 7:
      unint64_t result = 0x45747865746E6F43;
      break;
    case 8:
      unint64_t result = 0x65746E6F43627553;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x656A624F65736142;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6BD87DC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1B6BD865C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B6BD865C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6BD8868()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6BD865C(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6BD88CC()
{
  sub_1B6BD865C(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BD8920()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6BD865C(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6BD8980@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BDF4C0();
  *a1 = result;
  return result;
}

unint64_t sub_1B6BD89B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B6BD865C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B6BD89DC()
{
  return sub_1B6E31B98();
}

uint64_t sub_1B6BD8A3C()
{
  return sub_1B6E31AF8();
}

uint64_t sub_1B6BD8A8C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*a4 + 1272);
  swift_bridgeObjectRetain();
  uint64_t v9 = v8(a1, a2);
  uint64_t v11 = v10;
  _s11ParameterInCMa();
  uint64_t v12 = (void *)swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  void v12[3] = a1;
  v12[4] = a2;
  v12[5] = v9;
  v12[6] = v11;
  sub_1B629C37C((uint64_t)a3, (uint64_t)(v12 + 7));
  uint64_t v13 = sub_1B68168F0(a3, (void (*)(void, void, void, void, void))sub_1B629C9E8);
  MEMORY[0x1BA9B3870](v13);
  if (*(void *)((a4[7] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a4[7] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1B6E31C78();
  }
  sub_1B6E31CC8();
  return sub_1B6E31C48();
}

uint64_t sub_1B6BD8BB8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*a4 + 1272);
  swift_bridgeObjectRetain();
  uint64_t v9 = v8(a1, a2);
  uint64_t v11 = v10;
  _s12ParameterOutCMa();
  uint64_t v12 = (void *)swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  void v12[3] = a1;
  v12[4] = a2;
  v12[5] = v9;
  v12[6] = v11;
  sub_1B629C37C((uint64_t)a3, (uint64_t)(v12 + 7));
  uint64_t v13 = sub_1B68168F0(a3, (void (*)(void, void, void, void, void))sub_1B629C9E8);
  MEMORY[0x1BA9B3870](v13);
  if (*(void *)((a4[12] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a4[12] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1B6E31C78();
  }
  sub_1B6E31CC8();
  return sub_1B6E31C48();
}

void *sub_1B6BD8CE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void **a6, void **a7)
{
  uint64_t v14 = *(void *)(a4 + 24);
  uint64_t v15 = *(void *)(a4 + 32);
  BOOL v16 = v14 == a1 && v15 == a2;
  if (v16 || (sub_1B6E334B8() & 1) != 0)
  {
    uint64_t v17 = *(void *)(a5 + 56);
    sub_1B629C37C(a4 + 56, (uint64_t)v35);
    swift_bridgeObjectRetain();
    sub_1B68168F0(v35, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    unint64_t v18 = sub_1B69FACD8((uint64_t)v35);
    if (v19)
    {
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1B68168F0(v35, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      uint64_t v22 = *(void *)(v20 + 160);
      if (v22) {
        uint64_t v23 = *(void **)(v20 + 160);
      }
      else {
        uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
      }
      if (*(void *)(v20 + 168)) {
        uint64_t v24 = *(void *)(v20 + 168);
      }
      else {
        uint64_t v24 = MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v22, v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6A31968(v23, v24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6BDEF74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t result = sub_1B68168F0(v35, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      __break(1u);
    }
  }
  else
  {
    uint64_t v26 = *a6;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a6 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v26 = sub_1B6335858(0, v26[2] + 1, 1, v26);
      *a6 = v26;
    }
    unint64_t v29 = v26[2];
    unint64_t v28 = v26[3];
    if (v29 >= v28 >> 1)
    {
      uint64_t v26 = sub_1B6335858(v28 > 1, v29 + 1, 1, v26);
      *a6 = v26;
    }
    v26[2] = v29 + 1;
    uint64_t v30 = &v26[2 * v29];
    v30[4] = a1;
    v30[5] = a2;
    uint64_t v31 = *a7;
    sub_1B68168F0(a3, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    *a7 = v31;
    if ((v32 & 1) == 0)
    {
      uint64_t v31 = sub_1B68C27FC(0, v31[2] + 1, 1, v31);
      *a7 = v31;
    }
    unint64_t v34 = v31[2];
    unint64_t v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      uint64_t v31 = sub_1B68C27FC(v33 > 1, v34 + 1, 1, v31);
      *a7 = v31;
    }
    v31[2] = v34 + 1;
    return (void *)sub_1B629C37C((uint64_t)a3, (uint64_t)&v31[5 * v34 + 4]);
  }
  return result;
}

uint64_t sub_1B6BD8FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t v12 = v29;
  uint64_t v13 = v30;
  uint64_t v14 = *a5;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a5 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = sub_1B6335858(0, v14[2] + 1, 1, v14);
    *a5 = v14;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = sub_1B6335858(v16 > 1, v17 + 1, 1, v14);
    *a5 = v14;
  }
  _OWORD v14[2] = v17 + 1;
  unint64_t v18 = &v14[2 * v17];
  _OWORD v18[4] = v12;
  v18[5] = v13;
  swift_bridgeObjectRetain();
  sub_1B629C678(a3, a4, &v29);
  uint64_t v19 = v29;
  uint64_t v20 = v30;
  uint64_t v21 = v31;
  uint64_t v22 = v32;
  uint64_t v23 = v33;
  uint64_t v24 = (void *)*a8;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a8 = (uint64_t)v24;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B68C27FC(0, v24[2] + 1, 1, v24);
    uint64_t v24 = (void *)result;
    *a8 = result;
  }
  unint64_t v27 = v24[2];
  unint64_t v26 = v24[3];
  if (v27 >= v26 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B68C27FC(v26 > 1, v27 + 1, 1, v24);
    uint64_t v24 = (void *)result;
    *a8 = result;
  }
  uint64_t v24[2] = v27 + 1;
  unint64_t v28 = &v24[5 * v27];
  v28[4] = v19;
  v28[5] = v20;
  v28[6] = v21;
  v28[7] = v22;
  void v28[8] = v23;
  return result;
}

uint64_t sub_1B6BD9198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a4 + 1440))();
  if (result)
  {
    uint64_t v6 = result;
    v9[3] = MEMORY[0x1E4FBB550];
    v9[0] = a3;
    if (swift_weakLoadStrong())
    {
      uint64_t v7 = *(void *)(v6 + 24);
      uint64_t v8 = *(void *)(v6 + 32);
      swift_bridgeObjectRetain_n();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6A3C3B0(v7, v8, (uint64_t)v9);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  }
  return result;
}

uint64_t sub_1B6BD92A4(float a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a4 + 1440))();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v10 = MEMORY[0x1E4FBB470];
    *(float *)uint64_t v9 = a1;
    if (swift_weakLoadStrong())
    {
      uint64_t v7 = *(void *)(v6 + 24);
      uint64_t v8 = *(void *)(v6 + 32);
      swift_bridgeObjectRetain_n();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6A3C3B0(v7, v8, (uint64_t)v9);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  }
  return result;
}

uint64_t sub_1B6BD93B8(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = (*(uint64_t (**)(void))(*(void *)a4 + 1440))();
  sub_1B6BDEEC0(0, a5, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a6);
  void v14[3] = v9;
  v14[0] = swift_allocObject();
  *(__n128 *)(v14[0] + 16) = a1;
  if (swift_weakLoadStrong())
  {
    uint64_t v12 = *(void *)(v8 + 24);
    uint64_t v13 = *(void *)(v8 + 32);
    swift_bridgeObjectRetain_n();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6A3C3B0(v12, v13, (uint64_t)v14);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
}

uint64_t sub_1B6BD9508(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned char *a6, void **a7, void **a8, void *a9)
{
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  sub_1B666BDC4();
  sub_1B666BE18();
  char v16 = sub_1B6E31618();
  uint64_t result = swift_bridgeObjectRelease();
  if (v16)
  {
    if ((*a6 & 1) == 0)
    {
      unint64_t v18 = a6;
      uint64_t v19 = *a7;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a7 = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v19 = sub_1B6335858(0, v19[2] + 1, 1, v19);
        *a7 = v19;
      }
      unint64_t v22 = v19[2];
      unint64_t v21 = v19[3];
      if (v22 >= v21 >> 1)
      {
        uint64_t v19 = sub_1B6335858(v21 > 1, v22 + 1, 1, v19);
        *a7 = v19;
      }
      v19[2] = v22 + 1;
      uint64_t v23 = &v19[2 * v22];
      void v23[4] = a4;
      v23[5] = a5;
      uint64_t v24 = *a8;
      sub_1B68168F0(a9, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      *a8 = v24;
      if ((v25 & 1) == 0)
      {
        uint64_t v24 = sub_1B68C27FC(0, v24[2] + 1, 1, v24);
        *a8 = v24;
      }
      unint64_t v27 = v24[2];
      unint64_t v26 = v24[3];
      if (v27 >= v26 >> 1)
      {
        uint64_t v24 = sub_1B68C27FC(v26 > 1, v27 + 1, 1, v24);
        *a8 = v24;
      }
      uint64_t v24[2] = v27 + 1;
      uint64_t result = sub_1B629C37C((uint64_t)a9, (uint64_t)&v24[5 * v27 + 4]);
      *unint64_t v18 = 1;
    }
  }
  else
  {
    unint64_t v28 = *a7;
    swift_bridgeObjectRetain();
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    *a7 = v28;
    if ((v29 & 1) == 0)
    {
      unint64_t v28 = sub_1B6335858(0, v28[2] + 1, 1, v28);
      *a7 = v28;
    }
    unint64_t v31 = v28[2];
    unint64_t v30 = v28[3];
    if (v31 >= v30 >> 1)
    {
      unint64_t v28 = sub_1B6335858(v30 > 1, v31 + 1, 1, v28);
      *a7 = v28;
    }
    v28[2] = v31 + 1;
    uint64_t v32 = &v28[2 * v31];
    v32[4] = a1;
    v32[5] = a2;
    uint64_t v33 = *a8;
    sub_1B68168F0(a3, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    *a8 = v33;
    if ((v34 & 1) == 0)
    {
      uint64_t v33 = sub_1B68C27FC(0, v33[2] + 1, 1, v33);
      *a8 = v33;
    }
    unint64_t v36 = v33[2];
    unint64_t v35 = v33[3];
    if (v36 >= v35 >> 1)
    {
      uint64_t v33 = sub_1B68C27FC(v35 > 1, v36 + 1, 1, v33);
      *a8 = v33;
    }
    v33[2] = v36 + 1;
    return sub_1B629C37C((uint64_t)a3, (uint64_t)&v33[5 * v36 + 4]);
  }
  return result;
}

void *sub_1B6BD9838(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void **a6, void **a7)
{
  uint64_t v14 = *(void *)(a4 + 24);
  uint64_t v15 = *(void *)(a4 + 32);
  BOOL v16 = v14 == a1 && v15 == a2;
  if (v16 || (sub_1B6E334B8() & 1) != 0)
  {
    uint64_t v17 = *(void *)(a5 + 64);
    sub_1B629C37C(a4 + 56, (uint64_t)v35);
    swift_bridgeObjectRetain();
    sub_1B68168F0(v35, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    unint64_t v18 = sub_1B69FACD8((uint64_t)v35);
    if (v19)
    {
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1B68168F0(v35, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      uint64_t v22 = *(void *)(v20 + 200);
      if (v22) {
        uint64_t v23 = *(void **)(v20 + 200);
      }
      else {
        uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
      }
      if (*(void *)(v20 + 208)) {
        uint64_t v24 = *(void *)(v20 + 208);
      }
      else {
        uint64_t v24 = MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v22, v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6A31968(v23, v24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6BDED74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B68168F0(v35, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      __break(1u);
    }
  }
  else
  {
    unint64_t v26 = *a6;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a6 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v26 = sub_1B6335858(0, v26[2] + 1, 1, v26);
      *a6 = v26;
    }
    unint64_t v29 = v26[2];
    unint64_t v28 = v26[3];
    if (v29 >= v28 >> 1)
    {
      unint64_t v26 = sub_1B6335858(v28 > 1, v29 + 1, 1, v26);
      *a6 = v26;
    }
    v26[2] = v29 + 1;
    unint64_t v30 = &v26[2 * v29];
    v30[4] = a1;
    v30[5] = a2;
    unint64_t v31 = *a7;
    sub_1B68168F0(a3, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    *a7 = v31;
    if ((v32 & 1) == 0)
    {
      unint64_t v31 = sub_1B68C27FC(0, v31[2] + 1, 1, v31);
      *a7 = v31;
    }
    unint64_t v34 = v31[2];
    unint64_t v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      unint64_t v31 = sub_1B68C27FC(v33 > 1, v34 + 1, 1, v31);
      *a7 = v31;
    }
    v31[2] = v34 + 1;
    return (void *)sub_1B629C37C((uint64_t)a3, (uint64_t)&v31[5 * v34 + 4]);
  }
  return result;
}

uint64_t sub_1B6BD9B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void **a7, uint64_t *a8)
{
  char v14 = sub_1B6E319F8();
  swift_bridgeObjectRetain();
  if (v14)
  {
    uint64_t v15 = sub_1B6A04144();
    uint64_t v17 = v16;
    unint64_t v18 = a7;
    uint64_t v19 = a4;
    uint64_t v20 = a8;
    uint64_t v21 = a3;
    uint64_t v23 = v22;
    uint64_t v44 = a5;
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = v23;
    a3 = v21;
    a8 = v20;
    a4 = v19;
    a7 = v18;
    MEMORY[0x1BA9B34C0](v15, v17, v26, v25);
    a5 = v44;
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = a5;
  uint64_t v46 = a6;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  if (sub_1B6E318C8() == 1)
  {
    sub_1B6E31828();
    swift_bridgeObjectRelease();
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v27 = v45;
  uint64_t v28 = v46;
  unint64_t v29 = *a7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a7 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v29 = sub_1B6335858(0, v29[2] + 1, 1, v29);
    *a7 = v29;
  }
  unint64_t v32 = v29[2];
  unint64_t v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    unint64_t v29 = sub_1B6335858(v31 > 1, v32 + 1, 1, v29);
    *a7 = v29;
  }
  _OWORD v29[2] = v32 + 1;
  unint64_t v33 = &v29[2 * v32];
  v33[4] = v27;
  v33[5] = v28;
  swift_bridgeObjectRetain();
  sub_1B629C678(a3, a4, &v45);
  uint64_t v34 = v45;
  uint64_t v35 = v46;
  uint64_t v36 = v47;
  uint64_t v37 = v48;
  uint64_t v38 = v49;
  uint64_t v39 = (void *)*a8;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a8 = (uint64_t)v39;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B68C27FC(0, v39[2] + 1, 1, v39);
    uint64_t v39 = (void *)result;
    *a8 = result;
  }
  unint64_t v42 = v39[2];
  unint64_t v41 = v39[3];
  if (v42 >= v41 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B68C27FC(v41 > 1, v42 + 1, 1, v39);
    uint64_t v39 = (void *)result;
    *a8 = result;
  }
  v39[2] = v42 + 1;
  uint64_t v43 = &v39[5 * v42];
  v43[4] = v34;
  v43[5] = v35;
  v43[6] = v36;
  v43[7] = v37;
  v43[8] = v38;
  return result;
}

unint64_t sub_1B6BD9DCC(char a1)
{
  unint64_t result = 6580597;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B6BD9E74(char a1)
{
  unint64_t result = 6580597;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6BD9F1C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB5CA0(*a1, *a2);
}

uint64_t sub_1B6BD9F28()
{
  return sub_1B6BCF980();
}

uint64_t sub_1B6BD9F30()
{
  return sub_1B69E96C0();
}

uint64_t sub_1B6BD9F38()
{
  return sub_1B69EAD64();
}

uint64_t sub_1B6BD9F40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BDC394();
  *a1 = result;
  return result;
}

unint64_t sub_1B6BD9F70@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B6BD9DCC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B6BD9F9C()
{
  return sub_1B6BD9E74(*v0);
}

uint64_t sub_1B6BD9FA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BDC394();
  *a1 = result;
  return result;
}

uint64_t sub_1B6BD9FCC(uint64_t a1)
{
  unint64_t v2 = sub_1B6BDEC00();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BDA008(uint64_t a1)
{
  unint64_t v2 = sub_1B6BDEC00();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BDA044(void *a1)
{
  return sub_1B6BD73F8(a1);
}

uint64_t sub_1B6BDA090()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BDA118()
{
  sub_1B6BD807C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GraphV1CodeGeneration.BaseObject()
{
  return self;
}

ValueMetadata *type metadata accessor for GraphV1CodeGeneration()
{
  return &type metadata for GraphV1CodeGeneration;
}

uint64_t sub_1B6BDA180()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BDA1E0()
{
  swift_bridgeObjectRetain();
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BDA23C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BDA298(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24)
    && *(void *)(*(void *)a1 + 32) == *(void *)(*(void *)a2 + 32))
  {
    return 1;
  }
  else
  {
    return sub_1B6E334B8();
  }
}

unint64_t sub_1B6BDA2C8()
{
  unint64_t result = qword_1E9DD6C08;
  if (!qword_1E9DD6C08)
  {
    type metadata accessor for GraphV1CodeGeneration.BaseObject();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C08);
  }
  return result;
}

uint64_t sub_1B6BDA31C(void *a1)
{
  char v1 = a1;
  uint64_t v2 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v2)
  {
    if (v2) {
      return sub_1B6BDB050(0, v2, 1, v1);
    }
    return result;
  }
  uint64_t v72 = result;
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  if (v2 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  if (v2 < 2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v2 != 1)
    {
      unint64_t v10 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_81;
    }
    uint64_t v69 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v5 = v4 >> 1;
    sub_1B6873810();
    uint64_t v6 = sub_1B6E31C98();
    *(void *)(v6 + 16) = v5;
    uint64_t v69 = v6;
    __dst = (char *)(v6 + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v75 = v1;
  while (2)
  {
    uint64_t v11 = v8++;
    uint64_t v74 = v11;
    if (v8 < v2)
    {
      uint64_t v12 = *v1;
      sub_1B6BDEFB0(*v1 + 104 * v8, (uint64_t)&v78, (uint64_t (*)(void))sub_1B6873810);
      uint64_t v70 = v12;
      sub_1B6BDEFB0(v12 + 104 * v11, (uint64_t)&v76, (uint64_t (*)(void))sub_1B6873810);
      if ((void)v78 == v76 && *((void *)&v78 + 1) == v77) {
        int v14 = 0;
      }
      else {
        int v14 = sub_1B6E334B8();
      }
      sub_1B6BDF018((uint64_t)&v76, (uint64_t (*)(void))sub_1B6873810);
      sub_1B6BDF018((uint64_t)&v78, (uint64_t (*)(void))sub_1B6873810);
      uint64_t v8 = v11 + 2;
      if (v11 + 2 < v2)
      {
        uint64_t v15 = v9;
        uint64_t v16 = v12 + 104 * v11 + 104;
        while (1)
        {
          sub_1B6BDEFB0(v16 + 104, (uint64_t)&v78, (uint64_t (*)(void))sub_1B6873810);
          sub_1B6BDEFB0(v16, (uint64_t)&v76, (uint64_t (*)(void))sub_1B6873810);
          BOOL v17 = (void)v78 == v76 && *((void *)&v78 + 1) == v77;
          int v18 = v17 ? 0 : sub_1B6E334B8();
          sub_1B6BDF018((uint64_t)&v76, (uint64_t (*)(void))sub_1B6873810);
          sub_1B6BDF018((uint64_t)&v78, (uint64_t (*)(void))sub_1B6873810);
          if ((v14 ^ v18)) {
            break;
          }
          ++v8;
          v16 += 104;
          if (v2 == v8)
          {
            uint64_t v8 = v2;
            break;
          }
        }
        uint64_t v9 = v15;
        uint64_t v11 = v74;
      }
      if (v11 < v8 && (v14 & 1) != 0)
      {
        uint64_t v19 = v9;
        uint64_t v20 = (_OWORD *)(v70 + 104 * v8 - 104);
        uint64_t v21 = (_OWORD *)(v70 + 104 * v11);
        uint64_t v22 = v8;
        do
        {
          if (v11 != --v22)
          {
            long long v81 = v21[3];
            long long v82 = v21[4];
            long long v83 = v21[5];
            uint64_t v84 = *((void *)v21 + 12);
            long long v78 = *v21;
            long long v79 = v21[1];
            long long v80 = v21[2];
            memmove(v21, v20, 0x68uLL);
            v20[3] = v81;
            _OWORD v20[4] = v82;
            v20[5] = v83;
            *((void *)v20 + 12) = v84;
            *uint64_t v20 = v78;
            v20[1] = v79;
            _OWORD v20[2] = v80;
          }
          ++v11;
          uint64_t v20 = (_OWORD *)((char *)v20 - 104);
          uint64_t v21 = (_OWORD *)((char *)v21 + 104);
        }
        while (v11 < v22);
        uint64_t v9 = v19;
        uint64_t v11 = v74;
      }
    }
    if (v8 < v2 && v8 - v11 < v72)
    {
      if (v11 + v72 < v2) {
        uint64_t v2 = v11 + v72;
      }
      if (v8 != v2)
      {
        uint64_t v71 = v9;
        uint64_t v23 = 104 * v8;
        do
        {
          uint64_t v24 = v11;
          uint64_t v25 = v23;
          while (1)
          {
            uint64_t v26 = *v1 + v25;
            sub_1B6BDEFB0(v26, (uint64_t)&v78, (uint64_t (*)(void))sub_1B6873810);
            sub_1B6BDEFB0(v26 - 104, (uint64_t)&v76, (uint64_t (*)(void))sub_1B6873810);
            if ((void)v78 == v76 && *((void *)&v78 + 1) == v77) {
              break;
            }
            char v28 = sub_1B6E334B8();
            sub_1B6BDF018((uint64_t)&v76, (uint64_t (*)(void))sub_1B6873810);
            sub_1B6BDF018((uint64_t)&v78, (uint64_t (*)(void))sub_1B6873810);
            if (v28)
            {
              uint64_t v29 = *v1 + v25;
              long long v81 = *(_OWORD *)(v29 + 48);
              long long v82 = *(_OWORD *)(v29 + 64);
              long long v83 = *(_OWORD *)(v29 + 80);
              uint64_t v84 = *(void *)(v29 + 96);
              long long v78 = *(_OWORD *)v29;
              long long v79 = *(_OWORD *)(v29 + 16);
              long long v80 = *(_OWORD *)(v29 + 32);
              long long v30 = *(_OWORD *)(v29 - 88);
              *(_OWORD *)uint64_t v29 = *(_OWORD *)(v29 - 104);
              *(_OWORD *)(v29 + 16) = v30;
              long long v31 = *(_OWORD *)(v29 - 72);
              *(void *)(v29 + 96) = *(void *)(v29 - 8);
              long long v32 = *(_OWORD *)(v29 - 24);
              *(_OWORD *)(v29 + 64) = *(_OWORD *)(v29 - 40);
              *(_OWORD *)(v29 + 80) = v32;
              long long v33 = *(_OWORD *)(v29 - 56);
              *(_OWORD *)(v29 + 32) = v31;
              *(_OWORD *)(v29 + 48) = v33;
              long long v34 = v78;
              long long v35 = v79;
              *(_OWORD *)(v29 - 72) = v80;
              *(_OWORD *)(v29 - 88) = v35;
              *(_OWORD *)(v29 - 104) = v34;
              long long v36 = v81;
              long long v37 = v82;
              long long v38 = v83;
              *(void *)(v29 - 8) = v84;
              *(_OWORD *)(v29 - 24) = v38;
              *(_OWORD *)(v29 - 40) = v37;
              *(_OWORD *)(v29 - 56) = v36;
              v25 -= 104;
              if (v8 != ++v24) {
                continue;
              }
            }
            goto LABEL_47;
          }
          sub_1B6BDF018((uint64_t)&v76, (uint64_t (*)(void))sub_1B6873810);
          sub_1B6BDF018((uint64_t)&v78, (uint64_t (*)(void))sub_1B6873810);
LABEL_47:
          ++v8;
          v23 += 104;
          uint64_t v11 = v74;
        }
        while (v8 != v2);
        uint64_t v8 = v2;
        uint64_t v9 = v71;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1B62BD890(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v40 = *((void *)v9 + 2);
    unint64_t v39 = *((void *)v9 + 3);
    unint64_t v10 = v40 + 1;
    if (v40 >= v39 >> 1) {
      uint64_t v9 = sub_1B62BD890(v39 > 1, v40 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v10;
    unint64_t v41 = v9 + 32;
    unint64_t v42 = &v9[16 * v40 + 32];
    *(void *)unint64_t v42 = v11;
    *((void *)v42 + 1) = v8;
    if (!v40)
    {
      unint64_t v10 = 1;
      goto LABEL_14;
    }
    while (1)
    {
      uint64_t v43 = v10 - 1;
      if (v10 >= 4)
      {
        uint64_t v48 = &v41[16 * v10];
        uint64_t v49 = *((void *)v48 - 7) - *((void *)v48 - 8);
        uint64_t v46 = *((void *)v48 - 5) - *((void *)v48 - 6);
        uint64_t v47 = v10 - 2;
        long long v50 = &v41[16 * v10 - 32];
        uint64_t v44 = *(void *)v50;
        uint64_t v45 = *((void *)v50 + 1);
        if (v46 - v44 + v45 >= v49)
        {
          BOOL v53 = v46 < *(void *)&v41[16 * v43 + 8] - *(void *)&v41[16 * v43];
LABEL_72:
          if (v53) {
            uint64_t v43 = v47;
          }
          goto LABEL_74;
        }
      }
      else
      {
        if (v10 != 3)
        {
          uint64_t v51 = *(void *)&v41[16 * v10 - 24] - *(void *)&v41[16 * v10 - 32];
          uint64_t v52 = *(void *)&v41[16 * v43 + 8] - *(void *)&v41[16 * v43];
          goto LABEL_69;
        }
        uint64_t v44 = *((void *)v9 + 6);
        uint64_t v45 = *((void *)v9 + 7);
        uint64_t v46 = *((void *)v9 + 5) - *((void *)v9 + 4);
        uint64_t v47 = 1;
      }
      uint64_t v51 = v45 - v44;
      uint64_t v52 = *(void *)&v41[16 * v43 + 8] - *(void *)&v41[16 * v43];
      if (v51 + v52 >= v46)
      {
        BOOL v53 = v46 < v52;
        goto LABEL_72;
      }
LABEL_69:
      if (v52 < v51) {
        break;
      }
LABEL_74:
      uint64_t v54 = v9;
      uint64_t v55 = &v41[16 * v43 - 16];
      uint64_t v56 = *(void *)v55;
      uint64_t v57 = v41;
      long long v58 = &v41[16 * v43];
      uint64_t v59 = *((void *)v58 + 1);
      uint64_t v60 = v85;
      sub_1B6BDB244((char *)(*v75 + 104 * *(void *)v55), (char *)(*v75 + 104 * *(void *)v58), *v75 + 104 * v59, __dst);
      uint64_t v85 = v60;
      if (v60) {
        goto LABEL_77;
      }
      *(void *)uint64_t v55 = v56;
      *((void *)v55 + 1) = v59;
      uint64_t v9 = v54;
      unint64_t v61 = *((void *)v54 + 2);
      unint64_t v10 = v61 - 1;
      memmove(v58, v58 + 16, 16 * (v61 - 1 - v43));
      *((void *)v54 + 2) = v61 - 1;
      unint64_t v41 = v57;
      char v1 = v75;
      if (v61 <= 2) {
        goto LABEL_14;
      }
    }
    char v1 = v75;
LABEL_14:
    uint64_t v2 = v1[1];
    if (v8 < v2) {
      continue;
    }
    break;
  }
  uint64_t v7 = v69;
LABEL_81:
  uint64_t v69 = v7;
  uint64_t v62 = v85;
  if (v10 >= 2)
  {
    uint64_t v63 = *v1;
    do
    {
      uint64_t v64 = *(void *)&v9[16 * v10];
      uint64_t v65 = &v9[16 * v10 + 16];
      uint64_t v66 = *((void *)v65 + 1);
      sub_1B6BDB244((char *)(v63 + 104 * v64), (char *)(v63 + 104 * *(void *)v65), v63 + 104 * v66, __dst);
      if (v62) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1B6D671B8((uint64_t)v9);
      }
      uint64_t v67 = &v9[16 * v10];
      *(void *)uint64_t v67 = v64;
      *((void *)v67 + 1) = v66;
      unint64_t v68 = *((void *)v9 + 2);
      memmove(&v9[16 * v10 + 16], &v9[16 * v10 + 32], 16 * (v68 - v10));
      *((void *)v9 + 2) = v68 - 1;
      unint64_t v10 = v68 - 1;
    }
    while (v68 > 2);
  }
LABEL_77:
  swift_bridgeObjectRelease();
  *(void *)(v69 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BDAB2C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v3)
  {
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v12 = *(void *)(v10 + 8 * i);
        uint64_t v13 = v9;
        do
        {
          uint64_t v14 = *(void *)(v10 + 8 * v13);
          if (v14 >= v12) {
            break;
          }
          uint64_t v15 = (void *)(v10 + 8 * v13);
          void *v15 = v12;
          v15[1] = v14;
          --v13;
        }
        while (v13 != -1);
        ++v9;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 >= -1)
    {
      uint64_t v6 = result;
      if (v3 < 2)
      {
        uint64_t v16 = MEMORY[0x1E4FBC860];
        __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
        if (v3 != 1)
        {
          unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
          if (v20 < 2)
          {
LABEL_67:
            swift_bridgeObjectRelease();
            *(void *)(v16 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_71:
          uint64_t v55 = *v2;
          do
          {
            uint64_t v56 = *(void *)&v19[16 * v20];
            uint64_t v57 = &v19[16 * v20 + 16];
            uint64_t v58 = *((void *)v57 + 1);
            sub_1B6BDB648((char *)(v55 + 8 * v56), (char *)(v55 + 8 * *(void *)v57), v55 + 8 * v58, __dst);
            if (v1) {
              break;
            }
            uint64_t v59 = v19;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v59 = sub_1B6D671B8((uint64_t)v19);
            }
            uint64_t v60 = v59 + 32;
            unint64_t v61 = &v59[16 * v20];
            *(void *)unint64_t v61 = v56;
            *((void *)v61 + 1) = v58;
            uint64_t v19 = v59;
            unint64_t v62 = *((void *)v59 + 2);
            memmove(&v60[16 * v20 - 16], &v60[16 * v20], 16 * (v62 - v20));
            *((void *)v19 + 2) = v62 - 1;
            unint64_t v20 = v62 - 1;
          }
          while (v62 > 2);
          goto LABEL_67;
        }
        uint64_t v64 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v7 = v5 >> 1;
        uint64_t v8 = sub_1B6E31C98();
        *(void *)(v8 + 16) = v7;
        uint64_t v64 = v8;
        __dst = (char *)(v8 + 32);
      }
      uint64_t v17 = 0;
      uint64_t v63 = v2;
      uint64_t v18 = *v2;
      uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v65 = v6;
      uint64_t v66 = v3;
      do
      {
        uint64_t v21 = v17++;
        if (v17 < v3)
        {
          uint64_t v22 = *(void *)(v18 + 8 * v17);
          uint64_t v23 = *(void *)(v18 + 8 * v21);
          uint64_t v17 = v21 + 2;
          if (v21 + 2 < v3)
          {
            uint64_t v24 = v22;
            while (1)
            {
              uint64_t v25 = *(void *)(v18 + 8 * v17);
              if (v23 < v22 == v24 >= v25) {
                break;
              }
              ++v17;
              uint64_t v24 = v25;
              if (v3 == v17)
              {
                uint64_t v17 = v3;
                break;
              }
            }
          }
          if (v23 < v22 && v21 < v17)
          {
            uint64_t v26 = v17 - 1;
            uint64_t v27 = v21;
            do
            {
              if (v27 != v26)
              {
                uint64_t v28 = *(void *)(v18 + 8 * v27);
                *(void *)(v18 + 8 * v27) = *(void *)(v18 + 8 * v26);
                *(void *)(v18 + 8 * v26) = v28;
              }
              BOOL v49 = ++v27 < v26--;
            }
            while (v49);
          }
        }
        if (v17 < v3 && v17 - v21 < v6)
        {
          uint64_t v29 = v21 + v6;
          if (v21 + v6 >= v3) {
            uint64_t v29 = v3;
          }
          if (v17 != v29)
          {
            uint64_t v30 = v18 - 8 + 8 * v17;
            do
            {
              uint64_t v31 = *(void *)(v18 + 8 * v17);
              uint64_t v32 = v21;
              long long v33 = (uint64_t *)v30;
              do
              {
                uint64_t v34 = *v33;
                if (*v33 >= v31) {
                  break;
                }
                uint64_t *v33 = v31;
                v33[1] = v34;
                --v33;
                ++v32;
              }
              while (v17 != v32);
              ++v17;
              v30 += 8;
            }
            while (v17 != v29);
            uint64_t v17 = v29;
          }
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1B62BD890(0, *((void *)v19 + 2) + 1, 1, v19);
        }
        unint64_t v36 = *((void *)v19 + 2);
        unint64_t v35 = *((void *)v19 + 3);
        unint64_t v20 = v36 + 1;
        if (v36 >= v35 >> 1) {
          uint64_t v19 = sub_1B62BD890(v35 > 1, v36 + 1, 1, v19);
        }
        *((void *)v19 + 2) = v20;
        long long v37 = v19 + 32;
        long long v38 = &v19[16 * v36 + 32];
        *(void *)long long v38 = v21;
        *((void *)v38 + 1) = v17;
        if (v36)
        {
          while (1)
          {
            uint64_t v39 = v20 - 1;
            if (v20 >= 4)
            {
              uint64_t v44 = &v37[16 * v20];
              uint64_t v45 = *((void *)v44 - 7) - *((void *)v44 - 8);
              uint64_t v42 = *((void *)v44 - 5) - *((void *)v44 - 6);
              uint64_t v43 = v20 - 2;
              uint64_t v46 = &v37[16 * v20 - 32];
              uint64_t v40 = *(void *)v46;
              uint64_t v41 = *((void *)v46 + 1);
              if (v42 - v40 + v41 >= v45)
              {
                BOOL v49 = v42 < *(void *)&v37[16 * v39 + 8] - *(void *)&v37[16 * v39];
LABEL_61:
                if (v49) {
                  uint64_t v39 = v43;
                }
                goto LABEL_63;
              }
            }
            else
            {
              if (v20 != 3)
              {
                uint64_t v47 = *(void *)&v37[16 * v20 - 24] - *(void *)&v19[16 * v20];
                uint64_t v48 = *(void *)&v37[16 * v39 + 8] - *(void *)&v37[16 * v39];
                goto LABEL_58;
              }
              uint64_t v40 = *((void *)v19 + 6);
              uint64_t v41 = *((void *)v19 + 7);
              uint64_t v42 = *((void *)v19 + 5) - *((void *)v19 + 4);
              uint64_t v43 = 1;
            }
            uint64_t v47 = v41 - v40;
            uint64_t v48 = *(void *)&v37[16 * v39 + 8] - *(void *)&v37[16 * v39];
            if (v47 + v48 >= v42)
            {
              BOOL v49 = v42 < v48;
              goto LABEL_61;
            }
LABEL_58:
            if (v48 < v47) {
              goto LABEL_20;
            }
LABEL_63:
            long long v50 = &v37[16 * v39 - 16];
            uint64_t v51 = *(void *)v50;
            uint64_t v52 = &v37[16 * v39];
            uint64_t v53 = *((void *)v52 + 1);
            sub_1B6BDB648((char *)(v18 + 8 * *(void *)v50), (char *)(v18 + 8 * *(void *)v52), v18 + 8 * v53, __dst);
            if (v1)
            {
              uint64_t v16 = v64;
              goto LABEL_67;
            }
            *(void *)long long v50 = v51;
            *((void *)v50 + 1) = v53;
            unint64_t v54 = *((void *)v19 + 2);
            unint64_t v20 = v54 - 1;
            memmove(&v37[16 * v39], v52 + 16, 16 * (v54 - 1 - v39));
            *((void *)v19 + 2) = v54 - 1;
            if (v54 <= 2) {
              goto LABEL_20;
            }
          }
        }
        unint64_t v20 = 1;
LABEL_20:
        uint64_t v6 = v65;
        uint64_t v3 = v66;
      }
      while (v17 < v66);
      uint64_t v16 = v64;
      uint64_t v2 = v63;
      if (v20 < 2) {
        goto LABEL_67;
      }
      goto LABEL_71;
    }
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BDB050(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = 104 * a3;
    do
    {
      uint64_t v8 = v31;
      uint64_t v9 = v7;
      while (1)
      {
        uint64_t v10 = *a4 + v9;
        sub_1B6BDEFB0(v10, (uint64_t)&v24, (uint64_t (*)(void))sub_1B6873810);
        sub_1B6BDEFB0(v10 - 104, (uint64_t)v23, (uint64_t (*)(void))sub_1B6873810);
        if ((void)v24 == v23[0] && *((void *)&v24 + 1) == v23[1]) {
          break;
        }
        char v12 = sub_1B6E334B8();
        sub_1B6BDF018((uint64_t)v23, (uint64_t (*)(void))sub_1B6873810);
        uint64_t result = sub_1B6BDF018((uint64_t)&v24, (uint64_t (*)(void))sub_1B6873810);
        if (v12)
        {
          uint64_t v13 = *a4 + v9;
          long long v27 = *(_OWORD *)(v13 + 48);
          long long v28 = *(_OWORD *)(v13 + 64);
          long long v29 = *(_OWORD *)(v13 + 80);
          uint64_t v30 = *(void *)(v13 + 96);
          long long v24 = *(_OWORD *)v13;
          long long v25 = *(_OWORD *)(v13 + 16);
          long long v26 = *(_OWORD *)(v13 + 32);
          long long v14 = *(_OWORD *)(v13 - 88);
          *(_OWORD *)uint64_t v13 = *(_OWORD *)(v13 - 104);
          *(_OWORD *)(v13 + 16) = v14;
          long long v15 = *(_OWORD *)(v13 - 72);
          *(void *)(v13 + 96) = *(void *)(v13 - 8);
          long long v16 = *(_OWORD *)(v13 - 24);
          *(_OWORD *)(v13 + 64) = *(_OWORD *)(v13 - 40);
          *(_OWORD *)(v13 + 80) = v16;
          long long v17 = *(_OWORD *)(v13 - 56);
          *(_OWORD *)(v13 + 32) = v15;
          *(_OWORD *)(v13 + 48) = v17;
          long long v18 = v24;
          long long v19 = v25;
          *(_OWORD *)(v13 - 72) = v26;
          *(_OWORD *)(v13 - 88) = v19;
          *(_OWORD *)(v13 - 104) = v18;
          long long v20 = v27;
          long long v21 = v28;
          long long v22 = v29;
          *(void *)(v13 - 8) = v30;
          *(_OWORD *)(v13 - 24) = v22;
          *(_OWORD *)(v13 - 40) = v21;
          *(_OWORD *)(v13 - 56) = v20;
          v9 -= 104;
          if (v5 != ++v8) {
            continue;
          }
        }
        goto LABEL_5;
      }
      sub_1B6BDF018((uint64_t)v23, (uint64_t (*)(void))sub_1B6873810);
      uint64_t result = sub_1B6BDF018((uint64_t)&v24, (uint64_t (*)(void))sub_1B6873810);
LABEL_5:
      ++v5;
      v7 += 104;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_1B6BDB244(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 104;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 104;
  uint64_t v32 = __src;
  uint64_t v31 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -103)
    {
      if (__dst != a2 || &a2[104 * v11] <= __dst) {
        memmove(__dst, a2, 104 * v11);
      }
      long long v18 = &v4[104 * v11];
      unint64_t v30 = (unint64_t)v18;
      uint64_t v32 = v6;
      if (__src < v6 && v10 >= 104)
      {
        long long v19 = (char *)(a3 - 104);
        do
        {
          sub_1B6BDEFB0((uint64_t)(v18 - 104), (uint64_t)&v28, (uint64_t (*)(void))sub_1B6873810);
          unint64_t v20 = (unint64_t)(v6 - 104);
          sub_1B6BDEFB0((uint64_t)(v6 - 104), (uint64_t)&v26, (uint64_t (*)(void))sub_1B6873810);
          if (v28 == v26 && v29 == v27) {
            char v22 = 0;
          }
          else {
            char v22 = sub_1B6E334B8();
          }
          uint64_t v23 = v19 + 104;
          sub_1B6BDF018((uint64_t)&v26, (uint64_t (*)(void))sub_1B6873810);
          sub_1B6BDF018((uint64_t)&v28, (uint64_t (*)(void))sub_1B6873810);
          if (v22)
          {
            if (v23 != v6 || v19 >= v6) {
              memmove(v19, v6 - 104, 0x68uLL);
            }
            v32 -= 104;
            long long v18 = (char *)v30;
            if (v30 <= (unint64_t)v4) {
              break;
            }
          }
          else
          {
            unint64_t v24 = v30;
            long long v18 = (char *)(v30 - 104);
            v30 -= 104;
            if ((unint64_t)v23 < v24 || (unint64_t)v19 >= v24 || v23 != (char *)v24) {
              memmove(v19, (const void *)(v24 - 104), 0x68uLL);
            }
            unint64_t v20 = (unint64_t)v6;
            if (v18 <= v4) {
              break;
            }
          }
          v19 -= 104;
          uint64_t v6 = (char *)v20;
        }
        while (v20 > (unint64_t)__src);
      }
LABEL_51:
      sub_1B6D66AA8((void **)&v32, (const void **)&v31, &v30);
      return 1;
    }
  }
  else if (v8 >= -103)
  {
    if (__dst != __src || &__src[104 * v9] <= __dst) {
      memmove(__dst, __src, 104 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[104 * v9];
    unint64_t v30 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 104)
    {
      while (1)
      {
        sub_1B6BDEFB0((uint64_t)v6, (uint64_t)&v28, (uint64_t (*)(void))sub_1B6873810);
        sub_1B6BDEFB0((uint64_t)v4, (uint64_t)&v26, (uint64_t (*)(void))sub_1B6873810);
        if (v28 == v26 && v29 == v27) {
          break;
        }
        char v14 = sub_1B6E334B8();
        sub_1B6BDF018((uint64_t)&v26, (uint64_t (*)(void))sub_1B6873810);
        sub_1B6BDF018((uint64_t)&v28, (uint64_t (*)(void))sub_1B6873810);
        if ((v14 & 1) == 0) {
          goto LABEL_18;
        }
        long long v15 = v32;
        unint64_t v16 = (unint64_t)(v6 + 104);
        if (v32 >= v6 && (unint64_t)v32 < v16 && v32 == v6) {
          long long v15 = v6;
        }
        else {
          memmove(v32, v6, 0x68uLL);
        }
LABEL_22:
        uint64_t v32 = v15 + 104;
        uint64_t v4 = v31;
        if ((unint64_t)v31 < v12)
        {
          uint64_t v6 = (char *)v16;
          if (v16 < a3) {
            continue;
          }
        }
        goto LABEL_51;
      }
      sub_1B6BDF018((uint64_t)&v26, (uint64_t (*)(void))sub_1B6873810);
      sub_1B6BDF018((uint64_t)&v28, (uint64_t (*)(void))sub_1B6873810);
LABEL_18:
      long long v15 = v32;
      long long v17 = v31 + 104;
      if (v32 != v31 || v32 >= v17) {
        memmove(v32, v31, 0x68uLL);
      }
      uint64_t v31 = v17;
      unint64_t v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6BDB648(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  unint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      unint64_t v16 = &v4[8 * v13];
      char v22 = v16;
      unint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        long long v17 = (char *)(a3 - 8);
        while (1)
        {
          long long v18 = v17 + 8;
          long long v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (v20 >= *((void *)v16 - 1))
          {
            char v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)long long v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)long long v17 = v20;
            }
            unint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    char v14 = &v4[8 * v10];
    char v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v4 >= *(void *)v6)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          long long v15 = v6;
        }
        else
        {
          long long v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      unint64_t v24 = v7;
    }
LABEL_42:
    sub_1B6D66B7C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6BDB8B8(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    MEMORY[0x1BA9B84C0](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_1B6BDBA24(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 64);
  long long v25 = &v23;
  uint64_t v20 = a3 + 64;
  int64_t v21 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v19 = a3 + 104;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v9 = v8 | (v4 << 6);
  while (1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    sub_1B66459A4(*(void *)(a3 + 56) + 88 * v9, (uint64_t)v24);
    v22[0] = v11;
    v22[1] = v12;
    sub_1B66459A4((uint64_t)v24, (uint64_t)v25);
    sub_1B666BDC4();
    sub_1B666BE18();
    swift_bridgeObjectRetain_n();
    LOBYTE(v11) = sub_1B6E31618();
    sub_1B6BDF018((uint64_t)v22, (uint64_t (*)(void))sub_1B6873810);
    sub_1B666BD18((uint64_t)v24);
    swift_bridgeObjectRelease();
    if (v11)
    {
      *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      ++v18;
      if (v7) {
        goto LABEL_4;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v13 = v4 + 1;
    if (v4 + 1 >= v21) {
      return sub_1B685E1C0(a1, a2, v18, a3);
    }
    unint64_t v14 = *(void *)(v20 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v4 + 2;
      if (v4 + 2 >= v21) {
        return sub_1B685E1C0(a1, a2, v18, a3);
      }
      unint64_t v14 = *(void *)(v20 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v4 + 3;
        if (v4 + 3 >= v21) {
          return sub_1B685E1C0(a1, a2, v18, a3);
        }
        unint64_t v14 = *(void *)(v20 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v4 + 4;
          if (v4 + 4 >= v21) {
            return sub_1B685E1C0(a1, a2, v18, a3);
          }
          unint64_t v14 = *(void *)(v20 + 8 * v13);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v4 = v13;
  }
  while (v21 - 5 != v4)
  {
    unint64_t v14 = *(void *)(v19 + 8 * v4++);
    if (v14)
    {
      uint64_t v13 = v4 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B685E1C0(a1, a2, v18, a3);
}

uint64_t sub_1B6BDBC88(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  int64_t v25 = v9 - 5;
  uint64_t v21 = a3 + 104;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v11 = v10 | (v4 << 6);
  while (1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    sub_1B66459A4(*(void *)(a3 + 56) + 88 * v11, (uint64_t)v24);
    v22[0] = v13;
    v22[1] = v14;
    sub_1B66459A4((uint64_t)v24, (uint64_t)&v23);
    swift_bridgeObjectRetain_n();
    LOBYTE(v13) = sub_1B6E31A08();
    sub_1B6BDF018((uint64_t)v22, (uint64_t (*)(void))sub_1B6873810);
    sub_1B666BD18((uint64_t)v24);
    swift_bridgeObjectRelease();
    if (v13)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      ++v20;
      if (v8) {
        goto LABEL_4;
      }
    }
    else if (v8)
    {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v15 = v4 + 1;
    if (v4 + 1 >= v9) {
      return sub_1B685E1C0(a1, a2, v20, a3);
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_1B685E1C0(a1, a2, v20, a3);
      }
      unint64_t v16 = *(void *)(v5 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_1B685E1C0(a1, a2, v20, a3);
        }
        unint64_t v16 = *(void *)(v5 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_1B685E1C0(a1, a2, v20, a3);
          }
          unint64_t v16 = *(void *)(v5 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v4 = v15;
  }
  while (v25 != v4)
  {
    unint64_t v16 = *(void *)(v21 + 8 * v4++);
    if (v16)
    {
      uint64_t v15 = v4 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B685E1C0(a1, a2, v20, a3);
}

void *sub_1B6BDBEA8(uint64_t a1)
{
  sub_1B67F77C8();
  uint64_t v2 = sub_1B6E32C28();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = 0;
  uint64_t v32 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v11 = v2 + 64;
  uint64_t v27 = v6;
  int64_t v28 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v26 = v6 + 40;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v4 << 6);
      goto LABEL_5;
    }
    uint64_t v23 = v4 + 1;
    if (v4 + 1 >= v28) {
      return v3;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v4 + 2;
      if (v4 + 2 >= v28) {
        return v3;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v4 + 3;
        if (v4 + 3 >= v28) {
          return v3;
        }
        unint64_t v24 = *(void *)(v27 + 8 * v23);
        if (!v24)
        {
          uint64_t v23 = v4 + 4;
          if (v4 + 4 >= v28) {
            return v3;
          }
          unint64_t v24 = *(void *)(v27 + 8 * v23);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v13 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v4 = v23;
LABEL_5:
    uint64_t v14 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v13);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    sub_1B66459A4(*(void *)(v32 + 56) + 88 * v13, (uint64_t)v31);
    sub_1B66459A4((uint64_t)v31, (uint64_t)v29);
    swift_bridgeObjectRetain();
    sub_1B666BD18((uint64_t)v31);
    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    long long v17 = (void *)(v3[6] + 16 * v13);
    *long long v17 = v16;
    v17[1] = v15;
    uint64_t v18 = v3[7] + 88 * v13;
    long long v19 = v29[1];
    *(_OWORD *)uint64_t v18 = v29[0];
    long long v20 = v29[2];
    long long v21 = v29[3];
    long long v22 = v29[4];
    *(void *)(v18 + 80) = v30;
    *(_OWORD *)(v18 + 48) = v21;
    *(_OWORD *)(v18 + 64) = v22;
    *(_OWORD *)(v18 + 16) = v19;
    *(_OWORD *)(v18 + 32) = v20;
    ++v3[2];
  }
  while (v28 - 5 != v4)
  {
    unint64_t v24 = *(void *)(v26 + 8 * v4++);
    if (v24)
    {
      uint64_t v23 = v4 + 4;
      goto LABEL_18;
    }
  }
  return v3;
}

uint64_t sub_1B6BDC0CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_1B66459A4((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6BDC120(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v45 = a1;
  uint64_t v46 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v47 = v8;
  uint64_t v48 = 0;
  uint64_t v49 = v11 & v9;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6A2DF68((uint64_t)&v37);
  uint64_t v12 = v38;
  if (!v38)
  {
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B62BB588();
    return swift_release();
  }
  while (1)
  {
    uint64_t v20 = v37;
    long long v33 = v41;
    long long v34 = v42;
    long long v35 = v43;
    uint64_t v36 = v44;
    long long v31 = v39;
    long long v32 = v40;
    uint64_t v21 = *a5;
    unint64_t v23 = sub_1B62B2CE0(v37, v12);
    char v24 = v22;
    uint64_t v25 = *(void *)(v21 + 16) + ((v22 & 1) == 0);
    if (*(void *)(v21 + 24) < v25) {
      break;
    }
    if (a4)
    {
      if (v22) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B6ACB8DC();
      if (v24)
      {
LABEL_14:
        sub_1B66459A4(*(void *)(*a5 + 56) + 88 * v23, (uint64_t)v29);
        sub_1B66459A4((uint64_t)v29, (uint64_t)v30);
        sub_1B666BD18((uint64_t)v29);
        sub_1B666BD18((uint64_t)&v31);
        swift_bridgeObjectRelease();
        sub_1B678C464((uint64_t)v30, *(void *)(*a5 + 56) + 88 * v23);
        goto LABEL_7;
      }
    }
LABEL_6:
    unint64_t v13 = (void *)*a5;
    *(void *)(*a5 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v14 = (uint64_t *)(v13[6] + 16 * v23);
    uint64_t *v14 = v20;
    v14[1] = v12;
    uint64_t v15 = v13[7] + 88 * v23;
    long long v16 = v32;
    *(_OWORD *)uint64_t v15 = v31;
    *(_OWORD *)(v15 + 16) = v16;
    long long v17 = v33;
    long long v18 = v34;
    long long v19 = v35;
    *(void *)(v15 + 80) = v36;
    *(_OWORD *)(v15 + 48) = v18;
    *(_OWORD *)(v15 + 64) = v19;
    *(_OWORD *)(v15 + 32) = v17;
    ++v13[2];
LABEL_7:
    sub_1B6A2DF68((uint64_t)&v37);
    uint64_t v12 = v38;
    a4 = 1;
    if (!v38) {
      goto LABEL_17;
    }
  }
  sub_1B6AB5694(v25, a4 & 1);
  uint64_t v26 = sub_1B62B2CE0(v20, v12);
  if ((v24 & 1) == (v27 & 1))
  {
    unint64_t v23 = v26;
    if (v24) {
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BDC394()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6BDC3E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 0;
  for (uint64_t i = a1 + 32; ; i += 40)
  {
    sub_1B629C37C(i, (uint64_t)v10);
    sub_1B68168F0(v10, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    uint64_t v4 = sub_1B6A3D8B8();
    uint64_t v6 = v5;
    if (v4 == sub_1B6A3D8B8() && v6 == v7) {
      break;
    }
    char v8 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B68168F0(v10, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    if (v8) {
      return v2;
    }
    if (v1 == ++v2) {
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  sub_1B68168F0(v10, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  return v2;
}

uint64_t sub_1B6BDC53C(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v3, 0);
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      unint64_t v9 = *(void *)(v20 + 16);
      unint64_t v8 = *(void *)(v20 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1B6C3C3B8(v8 > 1, v9 + 1, 1);
      }
      v5 += 2;
      *(void *)(v20 + 16) = v9 + 1;
      uint64_t v10 = v20 + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v6;
      --v3;
    }
    while (v3);
  }
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  sub_1B6BDEDF4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6BDEBA8((unint64_t *)&qword_1EB980300, (unint64_t *)&qword_1EB9802F0, v11);
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  int64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v12, 0);
    unint64_t v13 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v15 = *(v13 - 1);
      uint64_t v14 = *v13;
      unint64_t v17 = *(void *)(v21 + 16);
      unint64_t v16 = *(void *)(v21 + 24);
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1) {
        sub_1B6C3C3B8(v16 > 1, v17 + 1, 1);
      }
      v13 += 2;
      *(void *)(v21 + 16) = v17 + 1;
      uint64_t v18 = v21 + 16 * v17;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v14;
      --v12;
    }
    while (v12);
  }
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 40;
}

uint64_t sub_1B6BDC7CC(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    v25[0] = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v3, 0);
    uint64_t v4 = v25[0];
    uint64_t v6 = a1 + 32;
    do
    {
      sub_1B629C37C(v6, (uint64_t)v26);
      sub_1B68168F0(v26, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      uint64_t v7 = sub_1B6A3D8B8();
      uint64_t v9 = v8;
      sub_1B68168F0(v26, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      v25[0] = v4;
      unint64_t v11 = *(void *)(v4 + 16);
      unint64_t v10 = *(void *)(v4 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1B6C3C3B8(v10 > 1, v11 + 1, 1);
        uint64_t v4 = v25[0];
      }
      *(void *)(v4 + 16) = v11 + 1;
      uint64_t v12 = v4 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v6 += 40;
      --v3;
    }
    while (v3);
  }
  int64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v13)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v13, 0);
    uint64_t v14 = v24;
    uint64_t v15 = a2 + 32;
    do
    {
      sub_1B629C37C(v15, (uint64_t)v25);
      sub_1B68168F0(v25, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      uint64_t v16 = sub_1B6A3D8B8();
      uint64_t v18 = v17;
      sub_1B68168F0(v25, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      unint64_t v20 = *(void *)(v24 + 16);
      unint64_t v19 = *(void *)(v24 + 24);
      if (v20 >= v19 >> 1) {
        sub_1B6C3C3B8(v19 > 1, v20 + 1, 1);
      }
      *(void *)(v24 + 16) = v20 + 1;
      unint64_t v21 = v24 + 16 * v20;
      *(void *)(v21 + 32) = v16;
      *(void *)(v21 + 40) = v18;
      v15 += 40;
      --v13;
    }
    while (v13);
  }
  uint64_t v22 = sub_1B6BDC53C(v4, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1B6BDC9EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = 0;
  uint64_t v3 = a1 + 40;
  uint64_t v15 = -v1;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v13 = a1 + 40;
  do
  {
    uint64_t v14 = v4;
    uint64_t v5 = (uint64_t *)(v3 + 16 * v2++);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B666BDC4();
      sub_1B666BE18();
      char v8 = sub_1B6E31618();
      swift_bridgeObjectRelease();
      if (v8) {
        break;
      }
      v5 += 2;
      swift_bridgeObjectRelease();
      ++v2;
      if (v15 + v2 == 1) {
        return v14;
      }
    }
    uint64_t v4 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B6C3C3B8(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v4 = v14;
    }
    unint64_t v10 = *(void *)(v4 + 16);
    unint64_t v9 = *(void *)(v4 + 24);
    if (v10 >= v9 >> 1)
    {
      sub_1B6C3C3B8(v9 > 1, v10 + 1, 1);
      uint64_t v4 = v14;
    }
    *(void *)(v4 + 16) = v10 + 1;
    uint64_t v11 = v4 + 16 * v10;
    *(void *)(v11 + 32) = v6;
    *(void *)(v11 + 40) = v7;
    uint64_t v3 = v13;
  }
  while (v15 + v2);
  return v4;
}

char *sub_1B6BDCBA0(uint64_t a1, uint64_t a2)
{
  sub_1B629C37C(a1, (uint64_t)v59);
  switch(v60)
  {
    case 24:
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      type metadata accessor for simd_float4x3(0);
      swift_dynamicCast();
      long long v50 = v53;
      uint64_t v4 = sub_1B68C0EA8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v9 = *((void *)v4 + 2);
      unint64_t v10 = *((void *)v4 + 3);
      unint64_t v11 = v9 + 1;
      if (v9 >= v10 >> 1)
      {
        unint64_t v47 = v9 + 1;
        long long v34 = v4;
        unint64_t v35 = *((void *)v4 + 2);
        uint64_t v36 = sub_1B68C0EA8(v10 > 1, v9 + 1, 1, v34);
        unint64_t v9 = v35;
        unint64_t v11 = v47;
        uint64_t v4 = v36;
      }
      *((void *)v4 + 2) = v11;
      *(_OWORD *)&v4[16 * v9 + 32] = v50;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v12 = v54;
      unint64_t v13 = *((void *)v4 + 2);
      unint64_t v14 = *((void *)v4 + 3);
      unint64_t v15 = v13 + 1;
      if (v13 >= v14 >> 1)
      {
        uint64_t v37 = v4;
        unint64_t v38 = *((void *)v4 + 2);
        long long v39 = sub_1B68C0EA8(v14 > 1, v13 + 1, 1, v37);
        long long v12 = v54;
        unint64_t v13 = v38;
        uint64_t v4 = v39;
      }
      *((void *)v4 + 2) = v15;
      *(_OWORD *)&v4[16 * v13 + 32] = v12;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v16 = v55;
      unint64_t v18 = *((void *)v4 + 2);
      unint64_t v17 = *((void *)v4 + 3);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        long long v40 = sub_1B68C0EA8(v17 > 1, v18 + 1, 1, v4);
        long long v16 = v55;
        unint64_t v19 = v18 + 1;
        uint64_t v4 = v40;
      }
      *((void *)v4 + 2) = v19;
      *(_OWORD *)&v4[16 * v18 + 32] = v16;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v8 = v56;
      goto LABEL_19;
    case 21:
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      type metadata accessor for simd_float3x3(0);
      swift_dynamicCast();
      long long v51 = v53;
      uint64_t v4 = sub_1B68C0EA8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v20 = *((void *)v4 + 2);
      unint64_t v21 = *((void *)v4 + 3);
      unint64_t v22 = v20 + 1;
      if (v20 >= v21 >> 1)
      {
        unint64_t v48 = v20 + 1;
        long long v41 = v4;
        unint64_t v42 = *((void *)v4 + 2);
        long long v43 = sub_1B68C0EA8(v21 > 1, v20 + 1, 1, v41);
        unint64_t v20 = v42;
        unint64_t v22 = v48;
        uint64_t v4 = v43;
      }
      *((void *)v4 + 2) = v22;
      *(_OWORD *)&v4[16 * v20 + 32] = v51;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v23 = v54;
      unint64_t v24 = *((void *)v4 + 2);
      unint64_t v25 = *((void *)v4 + 3);
      unint64_t v26 = v24 + 1;
      if (v24 >= v25 >> 1)
      {
        uint64_t v44 = v4;
        unint64_t v45 = *((void *)v4 + 2);
        uint64_t v46 = sub_1B68C0EA8(v25 > 1, v24 + 1, 1, v44);
        long long v23 = v54;
        unint64_t v24 = v45;
        uint64_t v4 = v46;
      }
      *((void *)v4 + 2) = v26;
      *(_OWORD *)&v4[16 * v24 + 32] = v23;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v8 = v55;
      goto LABEL_19;
    case 18:
      sub_1B62B31E8(a2, (uint64_t)v58);
      sub_1B62B57A8(v58, &v53);
      type metadata accessor for simd_float2x3(0);
      swift_dynamicCast();
      long long v49 = v57[0];
      uint64_t v4 = sub_1B68C0EA8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v6 = *((void *)v4 + 2);
      unint64_t v5 = *((void *)v4 + 3);
      unint64_t v7 = v6 + 1;
      if (v6 >= v5 >> 1)
      {
        long long v33 = sub_1B68C0EA8(v5 > 1, v6 + 1, 1, v4);
        unint64_t v7 = v6 + 1;
        uint64_t v4 = v33;
      }
      *((void *)v4 + 2) = v7;
      *(_OWORD *)&v4[16 * v6 + 32] = v49;
      sub_1B62B31E8(a2, (uint64_t)v58);
      sub_1B62B57A8(v58, &v53);
      swift_dynamicCast();
      long long v8 = v57[1];
LABEL_19:
      unint64_t v28 = *((void *)v4 + 2);
      unint64_t v27 = *((void *)v4 + 3);
      if (v28 >= v27 >> 1)
      {
        long long v52 = v8;
        long long v32 = sub_1B68C0EA8(v27 > 1, v28 + 1, 1, v4);
        long long v8 = v52;
        uint64_t v4 = v32;
      }
      *((void *)v4 + 2) = v28 + 1;
      *(_OWORD *)&v4[16 * v28 + 32] = v8;
      return v4;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  *(void *)&long long v53 = 0;
  *((void *)&v53 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  v58[0] = v53;
  sub_1B6E31948();
  sub_1B629C37C(a1, (uint64_t)&v53);
  sub_1B6E32B18();
  long long v29 = v58[0];
  int v30 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&long long v53 = 0;
  swift_retain();
  sub_1B6B33E34(v30, (uint64_t *)&v53, v29, *((uint64_t *)&v29 + 1));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (char *)MEMORY[0x1E4FBC860];
}

char *sub_1B6BDD1D4(uint64_t a1, uint64_t a2)
{
  sub_1B629C37C(a1, (uint64_t)v59);
  switch(v60)
  {
    case 25:
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      type metadata accessor for simd_float4x4(0);
      swift_dynamicCast();
      long long v50 = v53;
      uint64_t v4 = sub_1B629CE28(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v9 = *((void *)v4 + 2);
      unint64_t v10 = *((void *)v4 + 3);
      unint64_t v11 = v9 + 1;
      if (v9 >= v10 >> 1)
      {
        unint64_t v47 = v9 + 1;
        long long v34 = v4;
        unint64_t v35 = *((void *)v4 + 2);
        uint64_t v36 = sub_1B629CE28(v10 > 1, v9 + 1, 1, v34);
        unint64_t v9 = v35;
        unint64_t v11 = v47;
        uint64_t v4 = v36;
      }
      *((void *)v4 + 2) = v11;
      *(_OWORD *)&v4[16 * v9 + 32] = v50;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v12 = v54;
      unint64_t v13 = *((void *)v4 + 2);
      unint64_t v14 = *((void *)v4 + 3);
      unint64_t v15 = v13 + 1;
      if (v13 >= v14 >> 1)
      {
        uint64_t v37 = v4;
        unint64_t v38 = *((void *)v4 + 2);
        long long v39 = sub_1B629CE28(v14 > 1, v13 + 1, 1, v37);
        long long v12 = v54;
        unint64_t v13 = v38;
        uint64_t v4 = v39;
      }
      *((void *)v4 + 2) = v15;
      *(_OWORD *)&v4[16 * v13 + 32] = v12;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v16 = v55;
      unint64_t v18 = *((void *)v4 + 2);
      unint64_t v17 = *((void *)v4 + 3);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        long long v40 = sub_1B629CE28(v17 > 1, v18 + 1, 1, v4);
        long long v16 = v55;
        unint64_t v19 = v18 + 1;
        uint64_t v4 = v40;
      }
      *((void *)v4 + 2) = v19;
      *(_OWORD *)&v4[16 * v18 + 32] = v16;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v8 = v56;
      goto LABEL_19;
    case 22:
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      type metadata accessor for simd_float3x4(0);
      swift_dynamicCast();
      long long v51 = v53;
      uint64_t v4 = sub_1B629CE28(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v20 = *((void *)v4 + 2);
      unint64_t v21 = *((void *)v4 + 3);
      unint64_t v22 = v20 + 1;
      if (v20 >= v21 >> 1)
      {
        unint64_t v48 = v20 + 1;
        long long v41 = v4;
        unint64_t v42 = *((void *)v4 + 2);
        long long v43 = sub_1B629CE28(v21 > 1, v20 + 1, 1, v41);
        unint64_t v20 = v42;
        unint64_t v22 = v48;
        uint64_t v4 = v43;
      }
      *((void *)v4 + 2) = v22;
      *(_OWORD *)&v4[16 * v20 + 32] = v51;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v23 = v54;
      unint64_t v24 = *((void *)v4 + 2);
      unint64_t v25 = *((void *)v4 + 3);
      unint64_t v26 = v24 + 1;
      if (v24 >= v25 >> 1)
      {
        uint64_t v44 = v4;
        unint64_t v45 = *((void *)v4 + 2);
        uint64_t v46 = sub_1B629CE28(v25 > 1, v24 + 1, 1, v44);
        long long v23 = v54;
        unint64_t v24 = v45;
        uint64_t v4 = v46;
      }
      *((void *)v4 + 2) = v26;
      *(_OWORD *)&v4[16 * v24 + 32] = v23;
      sub_1B62B31E8(a2, (uint64_t)v57);
      sub_1B62B57A8(v57, v58);
      swift_dynamicCast();
      long long v8 = v55;
      goto LABEL_19;
    case 19:
      sub_1B62B31E8(a2, (uint64_t)v58);
      sub_1B62B57A8(v58, &v53);
      type metadata accessor for simd_float2x4(0);
      swift_dynamicCast();
      long long v49 = v57[0];
      uint64_t v4 = sub_1B629CE28(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v6 = *((void *)v4 + 2);
      unint64_t v5 = *((void *)v4 + 3);
      unint64_t v7 = v6 + 1;
      if (v6 >= v5 >> 1)
      {
        long long v33 = sub_1B629CE28(v5 > 1, v6 + 1, 1, v4);
        unint64_t v7 = v6 + 1;
        uint64_t v4 = v33;
      }
      *((void *)v4 + 2) = v7;
      *(_OWORD *)&v4[16 * v6 + 32] = v49;
      sub_1B62B31E8(a2, (uint64_t)v58);
      sub_1B62B57A8(v58, &v53);
      swift_dynamicCast();
      long long v8 = v57[1];
LABEL_19:
      unint64_t v28 = *((void *)v4 + 2);
      unint64_t v27 = *((void *)v4 + 3);
      if (v28 >= v27 >> 1)
      {
        long long v52 = v8;
        long long v32 = sub_1B629CE28(v27 > 1, v28 + 1, 1, v4);
        long long v8 = v52;
        uint64_t v4 = v32;
      }
      *((void *)v4 + 2) = v28 + 1;
      *(_OWORD *)&v4[16 * v28 + 32] = v8;
      return v4;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  *(void *)&long long v53 = 0;
  *((void *)&v53 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  v58[0] = v53;
  sub_1B6E31948();
  sub_1B629C37C(a1, (uint64_t)&v53);
  sub_1B6E32B18();
  long long v29 = v58[0];
  int v30 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&long long v53 = 0;
  swift_retain();
  sub_1B6B33E34(v30, (uint64_t *)&v53, v29, *((uint64_t *)&v29 + 1));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (char *)MEMORY[0x1E4FBC860];
}

void *sub_1B6BDD808(void *result, __n128 *a2, void (*a3)(uint64_t, uint64_t, __n128))
{
  uint64_t v3 = result[2];
  if (v3)
  {
    unint64_t v5 = a2[1].n128_u64[0];
    if (v5)
    {
      unint64_t v7 = result;
      uint64_t v8 = result[4];
      uint64_t v9 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v17 = a2;
      a3(v8, v9, a2[2]);
      swift_bridgeObjectRelease();
      uint64_t v10 = v3 - 1;
      if (v3 != 1)
      {
        unint64_t v11 = v17 + 3;
        long long v12 = v7 + 7;
        unint64_t v13 = v5 - 1;
        do
        {
          if (!v13) {
            break;
          }
          uint64_t v14 = *(v12 - 1);
          uint64_t v15 = *v12;
          __n128 v16 = *v11++;
          swift_bridgeObjectRetain();
          a3(v14, v15, v16);
          swift_bridgeObjectRelease();
          v12 += 2;
          --v13;
          --v10;
        }
        while (v10);
      }
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_1B6BDD914(uint64_t a1, uint64_t a2)
{
  sub_1B629C37C(a1, (uint64_t)v15);
  if (v16 == 39)
  {
    sub_1B62B31E8(a2, (uint64_t)v13);
    sub_1B62B57A8(v13, v14);
    sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980420);
    swift_dynamicCast();
    uint64_t v4 = sub_1B68C09B4(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v6 = *((void *)v4 + 2);
    unint64_t v5 = *((void *)v4 + 3);
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_1B68C09B4(v5 > 1, v6 + 1, 1, v4);
    }
    *((void *)v4 + 2) = v6 + 1;
    *(void *)&v4[8 * v6 + 32] = v11;
    sub_1B62B31E8(a2, (uint64_t)v13);
    sub_1B62B57A8(v13, v14);
    swift_dynamicCast();
    unint64_t v8 = *((void *)v4 + 2);
    unint64_t v7 = *((void *)v4 + 3);
    if (v8 >= v7 >> 1) {
      uint64_t v4 = sub_1B68C09B4(v7 > 1, v8 + 1, 1, v4);
    }
    *((void *)v4 + 2) = v8 + 1;
    *(void *)&v4[8 * v8 + 32] = v12;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&v14[0] = 0;
    *((void *)&v14[0] + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B629C37C(a1, (uint64_t)v14);
    sub_1B6E32B18();
    int v9 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&v14[0] = 0;
    swift_retain();
    sub_1B6B33E34(v9, (uint64_t *)v14, 0, 0xE000000000000000);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (char *)MEMORY[0x1E4FBC860];
  }
  return v4;
}

void *sub_1B6BDDBD4(void *result, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = result[2];
  if (v3)
  {
    uint64_t v5 = a2[2];
    if (v5)
    {
      unint64_t v7 = result;
      uint64_t v8 = result[4];
      uint64_t v9 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3(v8, v9, a2[4]);
      swift_bridgeObjectRelease();
      uint64_t v10 = v3 - 1;
      if (v3 != 1)
      {
        uint64_t v11 = a2 + 5;
        uint64_t v12 = v7 + 7;
        uint64_t v13 = v5 - 1;
        do
        {
          if (!v13) {
            break;
          }
          uint64_t v14 = *(v12 - 1);
          uint64_t v15 = *v12;
          uint64_t v16 = *v11++;
          swift_bridgeObjectRetain();
          a3(v14, v15, v16);
          swift_bridgeObjectRelease();
          v12 += 2;
          --v13;
          --v10;
        }
        while (v10);
      }
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_1B6BDDCE0(uint64_t a1, uint64_t a2)
{
  sub_1B629C37C(a1, (uint64_t)v68);
  switch(v69)
  {
    case 14:
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      sub_1B6BDEEC0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      swift_dynamicCast();
      uint64_t v4 = sub_1B6397840(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v6 = *((void *)v4 + 2);
      unint64_t v5 = *((void *)v4 + 3);
      unint64_t v7 = v6 + 1;
      if (v6 >= v5 >> 1)
      {
        unint64_t v42 = sub_1B6397840(v5 > 1, v6 + 1, 1, v4);
        unint64_t v7 = v6 + 1;
        uint64_t v4 = v42;
      }
      *((void *)v4 + 2) = v7;
      *(_DWORD *)&v4[4 * v6 + 32] = v62;
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      swift_dynamicCast();
      int v8 = v63;
      unint64_t v10 = *((void *)v4 + 2);
      unint64_t v9 = *((void *)v4 + 3);
      if (v10 >= v9 >> 1)
      {
        long long v43 = sub_1B6397840(v9 > 1, v10 + 1, 1, v4);
        int v8 = v63;
        uint64_t v4 = v43;
      }
      *((void *)v4 + 2) = v10 + 1;
      *(_DWORD *)&v4[4 * v10 + 32] = v8;
      break;
    case 15:
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      sub_1B6BDEEC0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      swift_dynamicCast();
      uint64_t v4 = sub_1B6397840(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v11 = *((void *)v4 + 2);
      unint64_t v12 = *((void *)v4 + 3);
      unint64_t v13 = v11 + 1;
      if (v11 >= v12 >> 1)
      {
        unint64_t v60 = v11 + 1;
        uint64_t v44 = v4;
        unint64_t v45 = *((void *)v4 + 2);
        uint64_t v46 = sub_1B6397840(v12 > 1, v11 + 1, 1, v44);
        unint64_t v11 = v45;
        unint64_t v13 = v60;
        uint64_t v4 = v46;
      }
      *((void *)v4 + 2) = v13;
      *(_DWORD *)&v4[4 * v11 + 32] = v62;
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      swift_dynamicCast();
      int v14 = v63;
      unint64_t v15 = *((void *)v4 + 2);
      unint64_t v16 = *((void *)v4 + 3);
      unint64_t v17 = v15 + 1;
      if (v15 >= v16 >> 1)
      {
        unint64_t v47 = v4;
        unint64_t v48 = *((void *)v4 + 2);
        long long v49 = sub_1B6397840(v16 > 1, v15 + 1, 1, v47);
        int v14 = v63;
        unint64_t v15 = v48;
        uint64_t v4 = v49;
      }
      *((void *)v4 + 2) = v17;
      *(_DWORD *)&v4[4 * v15 + 32] = v14;
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      swift_dynamicCast();
      int v18 = v64;
      unint64_t v20 = *((void *)v4 + 2);
      unint64_t v19 = *((void *)v4 + 3);
      if (v20 >= v19 >> 1)
      {
        long long v50 = sub_1B6397840(v19 > 1, v20 + 1, 1, v4);
        int v18 = v64;
        uint64_t v4 = v50;
      }
      *((void *)v4 + 2) = v20 + 1;
      *(_DWORD *)&v4[4 * v20 + 32] = v18;
      break;
    case 16:
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      sub_1B6BDEEC0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      swift_dynamicCast();
      uint64_t v4 = sub_1B6397840(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v21 = *((void *)v4 + 2);
      unint64_t v22 = *((void *)v4 + 3);
      unint64_t v23 = v21 + 1;
      if (v21 >= v22 >> 1)
      {
        unint64_t v61 = v21 + 1;
        long long v51 = v4;
        unint64_t v52 = *((void *)v4 + 2);
        long long v53 = sub_1B6397840(v22 > 1, v21 + 1, 1, v51);
        unint64_t v21 = v52;
        unint64_t v23 = v61;
        uint64_t v4 = v53;
      }
      *((void *)v4 + 2) = v23;
      *(_DWORD *)&v4[4 * v21 + 32] = v62;
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      swift_dynamicCast();
      int v24 = v63;
      unint64_t v25 = *((void *)v4 + 2);
      unint64_t v26 = *((void *)v4 + 3);
      unint64_t v27 = v25 + 1;
      if (v25 >= v26 >> 1)
      {
        long long v54 = v4;
        unint64_t v55 = *((void *)v4 + 2);
        long long v56 = sub_1B6397840(v26 > 1, v25 + 1, 1, v54);
        int v24 = v63;
        unint64_t v25 = v55;
        uint64_t v4 = v56;
      }
      *((void *)v4 + 2) = v27;
      *(_DWORD *)&v4[4 * v25 + 32] = v24;
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      swift_dynamicCast();
      int v28 = v64;
      unint64_t v30 = *((void *)v4 + 2);
      unint64_t v29 = *((void *)v4 + 3);
      unint64_t v31 = v30 + 1;
      if (v30 >= v29 >> 1)
      {
        uint64_t v57 = sub_1B6397840(v29 > 1, v30 + 1, 1, v4);
        int v28 = v64;
        unint64_t v31 = v30 + 1;
        uint64_t v4 = v57;
      }
      *((void *)v4 + 2) = v31;
      *(_DWORD *)&v4[4 * v30 + 32] = v28;
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      swift_dynamicCast();
      int v32 = v65;
      unint64_t v34 = *((void *)v4 + 2);
      unint64_t v33 = *((void *)v4 + 3);
      if (v34 >= v33 >> 1)
      {
        uint64_t v58 = sub_1B6397840(v33 > 1, v34 + 1, 1, v4);
        int v32 = v65;
        uint64_t v4 = v58;
      }
      *((void *)v4 + 2) = v34 + 1;
      *(_DWORD *)&v4[4 * v34 + 32] = v32;
      break;
    case 40:
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980410);
      swift_dynamicCast();
      uint64_t v4 = sub_1B6397840(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v37 = *((void *)v4 + 2);
      unint64_t v36 = *((void *)v4 + 3);
      unint64_t v38 = v37 + 1;
      if (v37 >= v36 >> 1)
      {
        uint64_t v59 = sub_1B6397840(v36 > 1, v37 + 1, 1, v4);
        unint64_t v38 = v37 + 1;
        uint64_t v4 = v59;
      }
      *((void *)v4 + 2) = v38;
      *(_DWORD *)&v4[4 * v37 + 32] = v62;
      sub_1B62B31E8(a2, (uint64_t)v66);
      sub_1B62B57A8(v66, v67);
      swift_dynamicCast();
      unint64_t v40 = *((void *)v4 + 2);
      unint64_t v39 = *((void *)v4 + 3);
      if (v40 >= v39 >> 1) {
        uint64_t v4 = sub_1B6397840(v39 > 1, v40 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v40 + 1;
      *(_DWORD *)&v4[4 * v40 + 32] = v63;
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      *(void *)&v67[0] = 0;
      *((void *)&v67[0] + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B629C37C(a1, (uint64_t)v67);
      sub_1B6E32B18();
      int v35 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&v67[0] = 0;
      swift_retain();
      sub_1B6B33E34(v35, (uint64_t *)v67, 0, 0xE000000000000000);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v4 = (char *)MEMORY[0x1E4FBC860];
      break;
  }
  return v4;
}

uint64_t sub_1B6BDE61C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = 0;
  uint64_t v3 = a1 + 40;
  uint64_t v15 = -v1;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v13 = a1 + 40;
  do
  {
    uint64_t v14 = v4;
    unint64_t v5 = (uint64_t *)(v3 + 16 * v2++);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B666BDC4();
      sub_1B666BE18();
      char v8 = sub_1B6E31618();
      swift_bridgeObjectRelease();
      if (v8) {
        break;
      }
      v5 += 2;
      swift_bridgeObjectRelease();
      ++v2;
      if (v15 + v2 == 1) {
        return v14;
      }
    }
    uint64_t v4 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B6C3C3B8(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v4 = v14;
    }
    unint64_t v10 = *(void *)(v4 + 16);
    unint64_t v9 = *(void *)(v4 + 24);
    if (v10 >= v9 >> 1)
    {
      sub_1B6C3C3B8(v9 > 1, v10 + 1, 1);
      uint64_t v4 = v14;
    }
    *(void *)(v4 + 16) = v10 + 1;
    uint64_t v11 = v4 + 16 * v10;
    *(void *)(v11 + 32) = v6;
    *(void *)(v11 + 40) = v7;
    uint64_t v3 = v13;
  }
  while (v15 + v2);
  return v4;
}

void *sub_1B6BDE7CC(void *result, uint64_t a2, void (*a3)(uint64_t, uint64_t, float))
{
  uint64_t v3 = result[2];
  if (v3)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5)
    {
      uint64_t v7 = result;
      uint64_t v8 = result[4];
      uint64_t v9 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3(v8, v9, *(float *)(a2 + 32));
      swift_bridgeObjectRelease();
      uint64_t v10 = v3 - 1;
      if (v10)
      {
        uint64_t v11 = (float *)(a2 + 36);
        unint64_t v12 = v7 + 7;
        uint64_t v13 = v5 - 1;
        do
        {
          if (!v13) {
            break;
          }
          uint64_t v14 = *(v12 - 1);
          uint64_t v15 = *v12;
          float v16 = *v11++;
          swift_bridgeObjectRetain();
          a3(v14, v15, v16);
          swift_bridgeObjectRelease();
          v12 += 2;
          --v13;
          --v10;
        }
        while (v10);
      }
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6BDE8D8()
{
  uint64_t v0 = sub_1B6E30AB8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)v22 - v7;
  sub_1B6E30A38();
  sub_1B6E30A28();
  char v9 = sub_1B6E30A18();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v8, v0);
  if (v9)
  {
    v22[0] = 95;
    v22[1] = 0xE100000000000000;
    sub_1B6E31948();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = sub_1B6E318C8();
  if (v11)
  {
    uint64_t v12 = v11;
    v22[0] = MEMORY[0x1E4FBC860];
    sub_1B6C3C4F0(0, v11 & ~(v11 >> 63), 0);
    uint64_t v13 = v22[0];
    do
    {
      uint64_t v14 = sub_1B6E31A48();
      unint64_t v16 = v15;
      if ((sub_1B6E315E8() & 1) == 0 && (sub_1B6E315F8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v16 = 0xE100000000000000;
        uint64_t v14 = 95;
      }
      v22[0] = v13;
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1B6C3C4F0(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v22[0];
      }
      *(void *)(v13 + 16) = v18 + 1;
      uint64_t v19 = v13 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      sub_1B6E318D8();
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  v22[0] = v13;
  uint64_t v20 = MEMORY[0x1E4FBAF58];
  sub_1B6BDEDF4(0, &qword_1E9DD6C10, MEMORY[0x1E4FBAF58], MEMORY[0x1E4FBB320]);
  sub_1B6BDEBA8(&qword_1E9DD7850, &qword_1E9DD6C10, v20);
  return sub_1B6E31A58();
}

uint64_t sub_1B6BDEBA8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6BDEDF4(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6BDEC00()
{
  unint64_t result = qword_1E9DD6C20;
  if (!qword_1E9DD6C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C20);
  }
  return result;
}

uint64_t sub_1B6BDEC54(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6BDEDF4(255, &qword_1E9DD6C28, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6BDECE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6BDEDF4(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B6BDED68(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BD9838(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void ***)(v3 + 32), *(void ***)(v3 + 40));
}

uint64_t sub_1B6BDED74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6BD9B40(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void ***)(v4 + 32), *(uint64_t **)(v4 + 40));
}

uint64_t sub_1B6BDED84(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1B6BDEDF4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1B6BDEDF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6BDEE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BD9198(a1, a2, a3, v3);
}

uint64_t sub_1B6BDEE48(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1B6BD93B8(a3, a1, a2, v3, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
}

uint64_t sub_1B6BDEE80(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1B6BD93B8(a3, a1, a2, v3, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
}

uint64_t sub_1B6BDEEB8(uint64_t a1, uint64_t a2, float a3)
{
  return sub_1B6BD92A4(a3, a1, a2, v3);
}

void sub_1B6BDEEC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B6BDEF28()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

uint64_t sub_1B6BDEF38()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6BDEF48()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

uint64_t sub_1B6BDEF58()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

void *sub_1B6BDEF68(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BD8CE4(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void ***)(v3 + 32), *(void ***)(v3 + 40));
}

uint64_t sub_1B6BDEF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6BD8FEC(a1, a2, a3, a4, *(void ***)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(uint64_t **)(v4 + 40));
}

uint64_t sub_1B6BDEF80(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BD9508(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char **)(v3 + 32), *(void ***)(v3 + 40), *(void ***)(v3 + 48), *(void **)(v3 + 56));
}

uint64_t sub_1B6BDEFB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6BDF018(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1B6BDF078()
{
  if (!qword_1E9DD2C20)
  {
    sub_1B6E339B8();
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2C20);
    }
  }
}

uint64_t sub_1B6BDF0D0(uint64_t a1, uint64_t a2)
{
  sub_1B6BDEDF4(0, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for GraphV1CodeGeneration.BaseObject.Type(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BDF224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphV1CodeGeneration.BaseObject.Type()
{
  return &type metadata for GraphV1CodeGeneration.BaseObject.Type;
}

unsigned char *storeEnumTagSinglePayload for GraphV1CodeGeneration.BaseObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BDF328);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphV1CodeGeneration.BaseObject.CodingKeys()
{
  return &type metadata for GraphV1CodeGeneration.BaseObject.CodingKeys;
}

unint64_t sub_1B6BDF364()
{
  unint64_t result = qword_1E9DD6C48;
  if (!qword_1E9DD6C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C48);
  }
  return result;
}

unint64_t sub_1B6BDF3BC()
{
  unint64_t result = qword_1E9DD6C50;
  if (!qword_1E9DD6C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C50);
  }
  return result;
}

unint64_t sub_1B6BDF414()
{
  unint64_t result = qword_1E9DD6C58;
  if (!qword_1E9DD6C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C58);
  }
  return result;
}

unint64_t sub_1B6BDF46C()
{
  unint64_t result = qword_1E9DD6C60;
  if (!qword_1E9DD6C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C60);
  }
  return result;
}

uint64_t sub_1B6BDF4C0()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B6BDF50C()
{
  unint64_t result = qword_1E9DD6C68;
  if (!qword_1E9DD6C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C68);
  }
  return result;
}

uint64_t sub_1B6BDF564(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B6E31808();
  MEMORY[0x1F4188790](v6 - 8, v7);
  long long v31 = xmmword_1B6E9E0F0;
  *(void *)&long long v32 = a1;
  *((void *)&v32 + 1) = a2;
  sub_1B6E317F8();
  sub_1B6BDF840();
  sub_1B6BDF8F0();
  uint64_t v8 = sub_1B6E317C8();
  if (!v9) {
    goto LABEL_17;
  }
  if (v8 == 1449084502 && v9 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_17;
    }
  }
  unsigned int v12 = a1[2];
  int v13 = a1[3];
  int v14 = a1[4];
  sub_1B6331A2C(7, 125, a1[2], a1[3], a1[4], 0, 1, 1, (uint64_t)&v31, 1, 0, 0);
  long long v15 = v34;
  *(_OWORD *)(a3 + 64) = v33;
  *(_OWORD *)(a3 + 80) = v15;
  *(_OWORD *)(a3 + 96) = v35;
  long long v16 = v32;
  *(_OWORD *)(a3 + 32) = v31;
  *(_OWORD *)(a3 + 48) = v16;
  unsigned int v17 = v14 * v13;
  swift_getObjectType();
  id v18 = sub_1B6397BCC(16 * (v14 * v13) * (unint64_t)v12, 0);
  if (v18)
  {
    unint64_t v21 = v18;
    uint64_t v22 = v19;
    uint64_t v23 = v20;
    if (objc_msgSend(v18, sel_storageMode) == (id)2)
    {
      int v24 = 0;
      unint64_t v25 = v17 * (unint64_t)v12;
      if (!v25) {
        goto LABEL_16;
      }
    }
    else
    {
      unint64_t v26 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v27 = v21;
      int v24 = &v26[v22];
      unint64_t v25 = v17 * (unint64_t)v12;
      if (!v25)
      {
LABEL_16:
        *(void *)a3 = v21;
        *(void *)(a3 + 8) = v22;
        *(void *)(a3 + 16) = v23;
        return swift_unknownObjectRelease();
      }
    }
    int v28 = (unsigned int *)(a1 + 9);
    do
    {
      *(void *)&long long v29 = *((void *)v28 - 1);
      *((void *)&v29 + 1) = *v28;
      *(_OWORD *)int v24 = v29;
      v24 += 16;
      v28 += 3;
      --v25;
    }
    while (v25);
    goto LABEL_16;
  }
LABEL_17:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B6BDF840()
{
  if (!qword_1E9DD95B0)
  {
    sub_1B6BDF89C();
    unint64_t v0 = sub_1B6E338D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD95B0);
    }
  }
}

unint64_t sub_1B6BDF89C()
{
  unint64_t result = qword_1E9DD6C70;
  if (!qword_1E9DD6C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C70);
  }
  return result;
}

unint64_t sub_1B6BDF8F0()
{
  unint64_t result = qword_1E9DD95C0;
  if (!qword_1E9DD95C0)
  {
    sub_1B6BDF840();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD95C0);
  }
  return result;
}

uint64_t sub_1B6BDF948(unint64_t a1)
{
  return (a1 >> 1) & 1;
}

unint64_t sub_1B6BDF950(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  while (1)
  {
    unint64_t v7 = sub_1B6E318E8();
    v12[0] = sub_1B6E31A48();
    v12[1] = v8;
    char v9 = a1(v12);
    if (v4) {
      break;
    }
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10) {
      return v7;
    }
    if (v7 < 0x4000) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B6BDFA5C()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B6BDFABC()
{
  return sub_1B6E31B08();
}

uint64_t sub_1B6BDFB0C()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B6BDFB6C()
{
  return sub_1B6E31B08();
}

void sub_1B6BDFBBC(void *a1@<X8>)
{
  *a1 = &unk_1F0F71CD8;
}

uint64_t sub_1B6BDFBCC(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB25F8(*a1, *a2);
}

uint64_t sub_1B6BDFBD8()
{
  return sub_1B6BCF4FC();
}

uint64_t sub_1B6BDFBE0()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BDFCB8()
{
  return sub_1B69EB6B0();
}

uint64_t sub_1B6BDFCC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BE2C88();
  *a1 = result;
  return result;
}

void sub_1B6BDFCF0(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  unint64_t v3 = 0x736E6F6974706FLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001B6F2E9B0;
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_3;
    case 2:
      *a1 = 0x7A696C616D726F6ELL;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 0x6572726566657270;
      a1[1] = 0xEF726564616F4C64;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1B6BDFDA0()
{
  unint64_t result = 0x736E6F6974706FLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x7A696C616D726F6ELL;
      break;
    case 3:
      unint64_t result = 0x6572726566657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6BDFE44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6BE2C88();
  *a1 = result;
  return result;
}

uint64_t sub_1B6BDFE6C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4F60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BDFEA8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4F60();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BDFEE4(void *a1, uint64_t a2, char a3)
{
  sub_1B6BE505C(0, &qword_1E9DD6D10, (uint64_t (*)(void))sub_1B6BE4F60, (uint64_t)&type metadata for MeshImportOptions.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4F60();
  sub_1B6E33A88();
  char v14 = a3 & 1;
  char v13 = 3;
  sub_1B6BE50C4();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void *sub_1B6BE006C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6BE47E0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(unsigned char *)(a2 + 9) = HIBYTE(v5) & 1;
  }
  return result;
}

uint64_t sub_1B6BE00A8(void *a1, uint64_t a2)
{
  return sub_1B6BDFEE4(a1, a2, *(unsigned char *)(v2 + 8));
}

void sub_1B6BE00D8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 0;
}

uint64_t sub_1B6BE00E4(char *a1, char *a2)
{
  return sub_1B6BB02F4(*a1, *a2);
}

uint64_t sub_1B6BE00F0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BE0174()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BE01E4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BE0264@<X0>(char *a1@<X8>)
{
  return sub_1B6BE07F0(a1);
}

void sub_1B6BE0270(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7465737361;
  if (*v1) {
    uint64_t v2 = 0x696669746E656469;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000007265;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6BE02B0()
{
  if (*v0) {
    return 0x696669746E656469;
  }
  else {
    return 0x7465737361;
  }
}

uint64_t sub_1B6BE02EC@<X0>(char *a1@<X8>)
{
  return sub_1B6BE08CC(a1);
}

uint64_t sub_1B6BE02F8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4F0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BE0334(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4F0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BE0370(void *a1)
{
  unint64_t v3 = v1;
  sub_1B6BE505C(0, &qword_1E9DD6CE8, (uint64_t (*)(void))sub_1B6BE4F0C, (uint64_t)&type metadata for SceneFileAsset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4F0C();
  sub_1B6E33A88();
  long long v11 = v3[1];
  v13[0] = *v3;
  v13[1] = v11;
  _OWORD v13[2] = v3[2];
  char v14 = 0;
  sub_1B6811134();
  sub_1B6E32FA8();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1B6E32F48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B6BE0528@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6BE4330(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1B6BE056C(void *a1)
{
  return sub_1B6BE0370(a1);
}

uint64_t sub_1B6BE0584@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  long long v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E31108();
  uint64_t v7 = sub_1B6E310B8();
  uint64_t v9 = v8;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0;
  a1[6] = v7;
  a1[7] = v9;
  return result;
}

uint64_t sub_1B6BE0670(char *a1, char *a2)
{
  return sub_1B6BAF328(*a1, *a2);
}

uint64_t sub_1B6BE067C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BE06FC()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BE0768()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BE07E4@<X0>(char *a1@<X8>)
{
  return sub_1B6BE07F0(a1);
}

uint64_t sub_1B6BE07F0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B6BE084C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7465737361;
  if (*v1) {
    uint64_t v2 = 0x6874615065646F6ELL;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6BE0888()
{
  if (*v0) {
    return 0x6874615065646F6ELL;
  }
  else {
    return 0x7465737361;
  }
}

uint64_t sub_1B6BE08C0@<X0>(char *a1@<X8>)
{
  return sub_1B6BE08CC(a1);
}

uint64_t sub_1B6BE08CC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B6BE092C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4D3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BE0968(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4D3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BE09A4(void *a1)
{
  unint64_t v3 = v1;
  sub_1B6BE505C(0, &qword_1E9DD6CD0, (uint64_t (*)(void))sub_1B6BE4D3C, (uint64_t)&type metadata for MeshFileAsset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)&v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4D3C();
  sub_1B6E33A88();
  long long v11 = v3[1];
  long long v15 = *v3;
  long long v16 = v11;
  long long v17 = v3[2];
  char v14 = 0;
  sub_1B6811134();
  sub_1B6E32FA8();
  if (!v2)
  {
    sub_1B6BE4E24((uint64_t)(v3 + 3), (uint64_t)v18);
    sub_1B6BE4E24((uint64_t)v18, (uint64_t)&v19);
    if (v19)
    {
      *(void *)&long long v15 = v19;
      char v14 = 1;
      sub_1B62D8880(0, &qword_1EB980330, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
      sub_1B6BE4E88((unint64_t *)&qword_1E9DD4098);
      sub_1B6E32FA8();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B6BE0BE0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6BE3F3C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1B6BE0C30(void *a1)
{
  return sub_1B6BE09A4(a1);
}

void sub_1B6BE0C74(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[5] = 0;
  a1[6] = 0;
  a1[4] = 0;
}

uint64_t sub_1B6BE0C8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v14[2] = a5;
  v14[1] = a4;
  sub_1B6BE505C(0, &qword_1E9DD6CB0, (uint64_t (*)(void))sub_1B6BE4CE8, (uint64_t)&type metadata for MeshReferenceAsset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  long long v11 = (char *)v14 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4CE8();
  sub_1B6E33A88();
  char v16 = 0;
  uint64_t v12 = v14[3];
  sub_1B6E32F48();
  if (!v12)
  {
    char v15 = 1;
    sub_1B6E32F48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6BE0E30(char *a1, char *a2)
{
  return sub_1B6BB386C(*a1, *a2);
}

uint64_t sub_1B6BE0E3C()
{
  if (*v0) {
    return 0x6E6564496873656DLL;
  }
  else {
    return 0x656449656E656373;
  }
}

uint64_t sub_1B6BE0E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6BE2CD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6BE0EB8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4CE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BE0EF4(uint64_t a1)
{
  unint64_t v2 = sub_1B6BE4CE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BE0F30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6BE4AD0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1B6BE0F60(void *a1)
{
  return sub_1B6BE0C8C(a1, *v1, v1[1], v1[2], v1[3]);
}

void sub_1B6BE0F80(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
}

void *sub_1B6BE0F90(uint64_t a1)
{
  sub_1B62E17B4();
  unint64_t v206 = v3;
  MEMORY[0x1F4188790](v3, v4);
  long long v205 = &v184[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v204 = sub_1B6E31098();
  uint64_t v6 = *(void *)(v204 - 8);
  MEMORY[0x1F4188790](v204, v7);
  float32x4_t v203 = &v184[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v200 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v197 = &v184[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12, v13);
  __int32 v219 = &v184[-v14];
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v215 = &v184[-v17];
  MEMORY[0x1F4188790](v18, v19);
  float32x4_t v212 = &v184[-v20];
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v226 = &v184[-v23];
  swift_getKeyPath();
  uint64_t v24 = *(void *)(a1 + 176);
  swift_retain();
  uint64_t v25 = sub_1B6B3A580((uint64_t)&type metadata for SceneAssetRegistryInstance, (uint64_t)&off_1F0F96FB0, v24, (void (*)(void *__return_ptr, uint64_t))sub_1B67F42A4);
  uint64_t v193 = 0;
  swift_release();
  uint64_t result = (void *)swift_release();
  uint64_t v227 = v25;
  if (!v25) {
    return result;
  }
  long long v27 = *(_OWORD *)(v1 + 32);
  v244[0] = *(_OWORD *)(v1 + 16);
  v244[1] = v27;
  uint64_t v245 = *(void *)(v1 + 48);
  uint64_t v196 = a1;
  sub_1B62C9DA8(a1, (uint64_t)v244, 0x200000000, v230);
  sub_1B62D7CF8((uint64_t)v230, (uint64_t)v231, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v231[0]) {
    return (void *)swift_release();
  }
  long long v238 = v231[0];
  long long v239 = v231[1];
  uint64_t v240 = v232;
  if (v237 <= 0 || (uint64_t v189 = v234) == 0)
  {
    swift_release();
    return sub_1B632F1C4(v230, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v188 = v233;
  int v28 = *(unsigned __int8 *)(v235 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v207 = (void *)(v196 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v191 = v236[4];
  float32x4_t v192 = v236;
  float32x4_t v186 = v236 + 8;
  float32x4_t v187 = v236 + 6;
  char v202 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32);
  uint64_t v224 = (char **)(v200 + 16);
  unint64_t v218 = v200 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v29 = 0;
  uint64_t v199 = "te texture cache.";
  uint64_t v198 = "rl of an asset (";
  unint64_t v194 = 0x80000001B6F384A0;
  unint64_t v195 = 0x80000001B6F38470;
  long long v201 = xmmword_1B6E77050;
  uint64_t v223 = v9;
  int v185 = v28;
  while (1)
  {
    uint64_t v190 = v29;
    unint64_t v30 = (unsigned int *)(v188 + 48 * v29);
    unint64_t v222 = (char *)*v30;
    uint64_t v213 = v30[1];
    uint64_t v31 = *((void *)v30 + 3);
    long long v214 = (uint64_t *)*((void *)v30 + 2);
    uint64_t v33 = *((void *)v30 + 4);
    uint64_t v32 = *((void *)v30 + 5);
    if (v28)
    {
      long long v34 = *(os_unfair_lock_s **)(v32 + 376);
      swift_retain();
      os_unfair_lock_lock(v34);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v32 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v191);
    sub_1B62D7CF8((uint64_t)v187, (uint64_t)v243, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    long long v35 = v192;
    uint64_t v36 = v192[4];
    uint64_t v37 = *(void *)(*(void *)(*(void *)(*(void *)(v32 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v35[6] = ecs_stack_allocator_allocate(v36, 48 * v37, 8);
    v35[7] = v37;
    unint64_t v38 = v186;
    v186[1] = 0;
    _OWORD v38[2] = 0;
    *unint64_t v38 = 0;
    swift_release();
    unint64_t v39 = v214;
    uint64_t v225 = sub_1B62C9024((uint64_t)&type metadata for SceneFileAsset, (uint64_t)&off_1F0F65928, v214, v31, v33, (uint64_t)v35);
    uint64_t v216 = v218 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v217 = v32;
    if (v39)
    {
      if (v33)
      {
        uint64_t v40 = 0;
        uint64_t v213 = v33;
        while (1)
        {
          uint64_t v44 = v214[v40];
          uint64_t v45 = swift_retain();
          if (*(unsigned char *)(v32 + 184)) {
            goto LABEL_126;
          }
          uint64_t v46 = *(int *)(*(void *)(v32 + 168) + 4 * v44);
          int v47 = *(_DWORD *)(*(void *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v46 + 8);
          swift_release();
          if (v46 == -1 && v47 == 0) {
            break;
          }
          if ((v46 & 0x80000000) != 0 || v207[1] <= v46)
          {
            uint64_t v221 = 0;
            uint64_t v220 = 0;
          }
          else
          {
            uint64_t v49 = *v207 + 12 * (int)v46;
            if (v47 != -1 && *(_DWORD *)(v49 + 8) != v47) {
              break;
            }
            uint64_t v51 = *(void *)(*(void *)(v196 + 136) + 8 * *(int *)(*v207 + 12 * (int)v46) + 32);
            uint64_t v52 = *(void *)(v51 + 48);
            uint64_t v53 = *(void *)(v52 + 16);
            if (!v53) {
              break;
            }
            uint64_t v54 = *(__int16 *)(v49 + 4);
            unint64_t v55 = (void *)(v52 + 56);
            while ((ValueMetadata *)*(v55 - 3) != &type metadata for MeshImportOptions)
            {
              v55 += 5;
              if (!--v53) {
                goto LABEL_32;
              }
            }
            uint64_t v114 = *(void *)(v51 + 128) + *v55 + 16 * v54;
            uint64_t v221 = *(void *)v114;
            HIDWORD(v220) = *(unsigned __int8 *)(v114 + 8);
            LODWORD(v220) = *(unsigned __int8 *)(v114 + 9);
          }
LABEL_34:
          long long v56 = (void *)(v225 + (v40 << 6));
          uint64_t v58 = (char *)v56[2];
          uint64_t v57 = (void *)v56[3];
          uint64_t v59 = (void *)v56[4];
          if (v59)
          {
            uint64_t v60 = v56[5];
            uint64_t ObjectType = swift_getObjectType();
            int v62 = *(void (**)(char *, void *, uint64_t, uint64_t))(v60 + 8);
            swift_bridgeObjectRetain();
            id v63 = v59;
            v62(v58, v57, ObjectType, v60);
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v228 = 0;
            unint64_t v229 = 0xE000000000000000;
            uint64_t v211 = qword_1EB997FD0;
            swift_retain();
            sub_1B6E328C8();
            sub_1B6E31948();
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            int v64 = v228;
            unint64_t v65 = v229;
            char v66 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            unint64_t v209 = v57;
            uint64_t v210 = v40;
            unint64_t v222 = v58;
            uint64_t v67 = qword_1EB997FF0;
            uint64_t v68 = qword_1EB985528;
            swift_retain();
            if (v68 != -1) {
              swift_once();
            }
            sub_1B6A4EEA4(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v69 = swift_allocObject();
            *(_OWORD *)(v69 + 16) = v201;
            *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v69 + 64) = sub_1B678615C();
            *(void *)(v69 + 32) = v64;
            *(void *)(v69 + 40) = v65;
            swift_bridgeObjectRetain();
            sub_1B6E31258();
            swift_bridgeObjectRelease();
            swift_retain();
            char v70 = v66;
            uint64_t v71 = v203;
            sub_1B6E31088();
            uint64_t v72 = (uint64_t)v205;
            uint64_t v73 = v206[12];
            uint64_t v74 = v64;
            uint64_t v75 = v206[16];
            uint64_t v76 = v206[20];
            uint64_t v208 = v67;
            uint64_t v77 = &v205[v76];
            (*v202)(v205, v71, v204);
            *(unsigned char *)(v72 + v73) = v70;
            *(void *)(v72 + v75) = 0;
            *uint64_t v77 = v74;
            v77[1] = v65;
            swift_bridgeObjectRetain();
            sub_1B6E31368();
            swift_release();
            sub_1B67A3738(v72);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRetain();
            sub_1B6E30E48();
            uint64_t v33 = v213;
            uint64_t v40 = v210;
          }
          swift_bridgeObjectRelease();
          uint64_t v78 = v225 + (v40 << 6);
          uint64_t v79 = *(void *)(v78 + 48);
          uint64_t v80 = *(void *)(v78 + 56);
          uint64_t v9 = v223;
          if (*(void *)(*(void *)(v227 + 16) + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B62B2CE0(v79, v80);
            char v82 = v81;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v82)
            {
              uint64_t v32 = v217;
              (*(void (**)(unsigned char *, uint64_t))v218)(v226, v9);
              goto LABEL_15;
            }
          }
          uint64_t v83 = (uint64_t)v212;
          unint64_t v222 = *v224;
          ((void (*)(unsigned char *, unsigned char *, uint64_t))v222)(v212, v226, v9);
          type metadata accessor for SceneAssetRegistryEntry();
          swift_allocObject();
          if (v220) {
            __int16 v84 = 256;
          }
          else {
            __int16 v84 = 0;
          }
          __int16 v85 = v84 | WORD2(v220);
          swift_bridgeObjectRetain();
          uint64_t v86 = v227;
          uint64_t v87 = swift_retain();
          uint64_t v88 = sub_1B697DE1C(v87, v83, v221, v85, v79, v80);
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v228 = *(void **)(v86 + 16);
          uint64_t v90 = v228;
          *(void *)(v86 + 16) = 0x8000000000000000;
          unint64_t v92 = sub_1B62B2CE0(v79, v80);
          char v93 = v91;
          uint64_t v94 = v90[2] + ((v91 & 1) == 0);
          if (v90[3] >= v94)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              char v97 = v228;
              if (v91) {
                goto LABEL_55;
              }
            }
            else
            {
              sub_1B6AD31C8();
              char v97 = v228;
              if (v93) {
                goto LABEL_55;
              }
            }
          }
          else
          {
            sub_1B6AC2258(v94, isUniquelyReferenced_nonNull_native);
            uint64_t v95 = sub_1B62B2CE0(v79, v80);
            if ((v93 & 1) != (v96 & 1)) {
              goto LABEL_127;
            }
            unint64_t v92 = v95;
            char v97 = v228;
            if (v93)
            {
LABEL_55:
              uint64_t v99 = v97[7];
              swift_release();
              *(void *)(v99 + 8 * v92) = v88;
              goto LABEL_56;
            }
          }
          v97[(v92 >> 6) + 8] |= 1 << v92;
          char v98 = (uint64_t *)(v97[6] + 16 * v92);
          *char v98 = v79;
          v98[1] = v80;
          *(void *)(v97[7] + 8 * v92) = v88;
          ++v97[2];
          swift_bridgeObjectRetain();
LABEL_56:
          uint64_t v100 = v227;
          *(void *)(v227 + 16) = v97;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v101 = (uint64_t)v215;
          uint64_t v102 = v223;
          ((void (*)(unsigned char *, unsigned char *))v222)(v215, v226);
          swift_bridgeObjectRetain();
          int v103 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v228 = *(void **)(v100 + 24);
          long long v104 = v228;
          *(void *)(v100 + 24) = 0x8000000000000000;
          unint64_t v105 = sub_1B69FB364(v101);
          char v107 = v106;
          uint64_t v108 = v104[2] + ((v106 & 1) == 0);
          if (v104[3] >= v108)
          {
            if ((v103 & 1) == 0) {
              sub_1B6AD2EF8();
            }
          }
          else
          {
            sub_1B6AC1E40(v108, v103);
            uint64_t v109 = sub_1B69FB364(v101);
            if ((v107 & 1) != (v110 & 1)) {
              goto LABEL_128;
            }
            unint64_t v105 = v109;
          }
          uint64_t v111 = v215;
          uint64_t v9 = v102;
          int v112 = v228;
          uint64_t v33 = v213;
          if (v107)
          {
            uint64_t v113 = (uint64_t *)(v228[7] + 16 * v105);
            long long v41 = v215;
            swift_bridgeObjectRelease();
            *uint64_t v113 = v79;
            v113[1] = v80;
          }
          else
          {
            v228[(v105 >> 6) + 8] |= 1 << v105;
            long long v41 = v111;
            ((void (*)(unint64_t, unsigned char *, uint64_t))v222)(v112[6] + *(void *)(v200 + 72) * v105, v111, v9);
            unint64_t v42 = (uint64_t *)(v112[7] + 16 * v105);
            *unint64_t v42 = v79;
            v42[1] = v80;
            ++v112[2];
          }
          uint64_t v32 = v217;
          *(void *)(v227 + 24) = v112;
          swift_bridgeObjectRelease();
          long long v43 = *(void (**)(unsigned char *, uint64_t))v218;
          (*(void (**)(unsigned char *, uint64_t))v218)(v41, v9);
          v43(v226, v9);
LABEL_15:
          if (++v40 == v33) {
            goto LABEL_67;
          }
        }
LABEL_32:
        uint64_t v220 = 0;
        uint64_t v221 = 0;
        goto LABEL_34;
      }
      goto LABEL_67;
    }
    unint64_t v115 = v222;
    if (v222 != v213) {
      break;
    }
LABEL_67:
    v241[0] = v238;
    v241[1] = v239;
    uint64_t v242 = v240;
    uint64_t v116 = v193;
    sub_1B6345178(v192, (unsigned __int16 **)v241, (uint64_t)v243);
    uint64_t v193 = v116;
    sub_1B634507C((char *)v32);
    ecs_stack_allocator_pop_snapshot(v191);
    int v28 = v185;
    if (v185)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 376));
    }
    swift_release();
    uint64_t v29 = v190 + 1;
    if (v190 + 1 == v189)
    {
      swift_release();
      sub_1B632F1C4(v230, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      return sub_1B632F1C4(v230, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  while (1)
  {
    uint64_t v119 = swift_retain();
    if (*(unsigned char *)(v32 + 184)) {
      break;
    }
    uint64_t v120 = *(int *)(*(void *)(v32 + 168) + 4 * (void)v115);
    int v121 = *(_DWORD *)(*(void *)(v119 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v120 + 8);
    swift_release();
    if (v120 == -1 && v121 == 0)
    {
LABEL_88:
      uint64_t v220 = 0;
      uint64_t v221 = 0;
      goto LABEL_90;
    }
    if ((v120 & 0x80000000) != 0 || v207[1] <= v120)
    {
      uint64_t v221 = 0;
      uint64_t v220 = 0;
    }
    else
    {
      uint64_t v123 = *v207 + 12 * (int)v120;
      if (v121 != -1 && *(_DWORD *)(v123 + 8) != v121) {
        goto LABEL_88;
      }
      uint64_t v125 = *(void *)(*(void *)(v196 + 136) + 8 * *(int *)(*v207 + 12 * (int)v120) + 32);
      uint64_t v126 = *(void *)(v125 + 48);
      uint64_t v127 = *(void *)(v126 + 16);
      if (!v127) {
        goto LABEL_88;
      }
      uint64_t v128 = *(__int16 *)(v123 + 4);
      uint64_t v129 = (void *)(v126 + 56);
      while ((ValueMetadata *)*(v129 - 3) != &type metadata for MeshImportOptions)
      {
        v129 += 5;
        if (!--v127) {
          goto LABEL_88;
        }
      }
      uint64_t v183 = *(void *)(v125 + 128) + *v129 + 16 * v128;
      uint64_t v221 = *(void *)v183;
      HIDWORD(v220) = *(unsigned __int8 *)(v183 + 8);
      LODWORD(v220) = *(unsigned __int8 *)(v183 + 9);
    }
LABEL_90:
    id v130 = (void *)(v225 + ((void)v115 << 6));
    uint64_t v132 = (uint64_t *)v130[2];
    uint64_t v131 = v130[3];
    long long v133 = (void *)v130[4];
    unint64_t v222 = v115;
    if (v133)
    {
      uint64_t v134 = v130[5];
      uint64_t v135 = swift_getObjectType();
      uint64_t v136 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v134 + 8);
      swift_bridgeObjectRetain();
      id v137 = v133;
      v136(v132, v131, v135, v134);
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v228 = 0;
      unint64_t v229 = 0xE000000000000000;
      uint64_t v211 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      long long v138 = v228;
      unint64_t v139 = v229;
      char v140 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      long long v214 = v132;
      uint64_t v141 = qword_1EB997FF0;
      uint64_t v142 = qword_1EB985528;
      swift_retain();
      if (v142 != -1) {
        swift_once();
      }
      sub_1B6A4EEA4(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v143 = swift_allocObject();
      *(_OWORD *)(v143 + 16) = v201;
      *(void *)(v143 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v143 + 64) = sub_1B678615C();
      *(void *)(v143 + 32) = v138;
      *(void *)(v143 + 40) = v139;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      unint64_t v209 = v138;
      long long v144 = v203;
      sub_1B6E31088();
      uint64_t v145 = (uint64_t)v205;
      uint64_t v146 = v206[12];
      uint64_t v210 = v141;
      uint64_t v147 = v206[16];
      uint64_t v148 = &v205[v206[20]];
      (*v202)(v205, v144, v204);
      *(unsigned char *)(v145 + v146) = v140;
      *(void *)(v145 + v147) = 0;
      void *v148 = v209;
      v148[1] = v139;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B67A3738(v145);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRetain();
      sub_1B6E30E48();
      unint64_t v115 = v222;
      uint64_t v9 = v223;
    }
    swift_bridgeObjectRelease();
    uint64_t v149 = v225 + ((void)v115 << 6);
    uint64_t v151 = *(void *)(v149 + 48);
    uint64_t v150 = *(void *)(v149 + 56);
    if (*(void *)(*(void *)(v227 + 16) + 16)
      && (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          sub_1B62B2CE0(v151, v150),
          char v153 = v152,
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v153 & 1) != 0))
    {
      uint64_t v32 = v217;
      uint64_t v118 = *(void (**)(unsigned char *, uint64_t))v218;
    }
    else
    {
      uint64_t v154 = *v224;
      uint64_t v155 = (uint64_t)v212;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))*v224)(v212, v219, v9);
      type metadata accessor for SceneAssetRegistryEntry();
      swift_allocObject();
      if (v220) {
        __int16 v156 = 256;
      }
      else {
        __int16 v156 = 0;
      }
      __int16 v157 = v156 | WORD2(v220);
      uint64_t v158 = v227;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v159 = sub_1B697DE1C(v158, v155, v221, v157, v151, v150);
      swift_bridgeObjectRetain();
      char v160 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v228 = *(void **)(v158 + 16);
      char v161 = v228;
      *(void *)(v158 + 16) = 0x8000000000000000;
      unint64_t v162 = sub_1B62B2CE0(v151, v150);
      char v164 = v163;
      uint64_t v165 = v161[2] + ((v163 & 1) == 0);
      if (v161[3] >= v165)
      {
        if ((v160 & 1) == 0) {
          sub_1B6AD31C8();
        }
      }
      else
      {
        sub_1B6AC2258(v165, v160);
        uint64_t v166 = sub_1B62B2CE0(v151, v150);
        if ((v164 & 1) != (v167 & 1)) {
          goto LABEL_127;
        }
        unint64_t v162 = v166;
      }
      uint64_t v9 = v223;
      char v168 = v228;
      if (v164)
      {
        uint64_t v169 = v228[7];
        swift_release();
        *(void *)(v169 + 8 * v162) = v159;
      }
      else
      {
        v228[(v162 >> 6) + 8] |= 1 << v162;
        id v170 = (uint64_t *)(v168[6] + 16 * v162);
        *id v170 = v151;
        v170[1] = v150;
        *(void *)(v168[7] + 8 * v162) = v159;
        ++v168[2];
        swift_bridgeObjectRetain();
      }
      uint64_t v171 = v227;
      *(void *)(v227 + 16) = v168;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v172 = (uint64_t)v197;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v154)(v197, v219, v9);
      swift_bridgeObjectRetain();
      int v173 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v228 = *(void **)(v171 + 24);
      uint64_t v174 = v228;
      *(void *)(v171 + 24) = 0x8000000000000000;
      unint64_t v175 = sub_1B69FB364(v172);
      char v177 = v176;
      uint64_t v178 = v174[2] + ((v176 & 1) == 0);
      if (v174[3] >= v178)
      {
        if ((v173 & 1) == 0) {
          sub_1B6AD2EF8();
        }
      }
      else
      {
        sub_1B6AC1E40(v178, v173);
        uint64_t v179 = sub_1B69FB364(v172);
        if ((v177 & 1) != (v180 & 1)) {
          goto LABEL_129;
        }
        unint64_t v175 = v179;
      }
      uint64_t v181 = v228;
      if (v177)
      {
        uint64_t v182 = (uint64_t *)(v228[7] + 16 * v175);
        swift_bridgeObjectRelease();
        uint64_t *v182 = v151;
        v182[1] = v150;
      }
      else
      {
        v228[(v175 >> 6) + 8] |= 1 << v175;
        ((void (*)(unint64_t, uint64_t, uint64_t))v154)(v181[6] + *(void *)(v200 + 72) * v175, v172, v9);
        uint64_t v117 = (uint64_t *)(v181[7] + 16 * v175);
        *uint64_t v117 = v151;
        v117[1] = v150;
        ++v181[2];
      }
      uint64_t v32 = v217;
      unint64_t v115 = v222;
      *(void *)(v227 + 24) = v181;
      swift_bridgeObjectRelease();
      uint64_t v118 = *(void (**)(unsigned char *, uint64_t))v218;
      (*(void (**)(uint64_t, uint64_t))v218)(v172, v9);
    }
    ++v115;
    v118(v219, v9);
    if (v115 == (char *)v213) {
      goto LABEL_67;
    }
  }
LABEL_126:
  sub_1B6E32BE8();
  __break(1u);
LABEL_127:
  sub_1B6E33838();
  __break(1u);
LABEL_128:
  sub_1B6E33838();
  __break(1u);
LABEL_129:
  uint64_t result = (void *)sub_1B6E33838();
  __break(1u);
  return result;
}

void *sub_1B6BE2520(uint64_t a1)
{
  swift_getKeyPath();
  uint64_t v3 = *(void *)(a1 + 176);
  swift_retain();
  uint64_t v4 = sub_1B6B3A580((uint64_t)&type metadata for SceneAssetRegistryInstance, (uint64_t)&off_1F0F96FB0, v3, (void (*)(void *__return_ptr, uint64_t))sub_1B6BE58A0);
  swift_release();
  uint64_t result = (void *)swift_release();
  if (v4)
  {
    long long v6 = *(_OWORD *)(v1 + 32);
    v30[0] = *(_OWORD *)(v1 + 16);
    v30[1] = v6;
    uint64_t v31 = *(void *)(v1 + 48);
    sub_1B62C9DA8(a1, (uint64_t)v30, 0x200000000, v7);
    sub_1B62D7CF8((uint64_t)v7, (uint64_t)&v8, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v8)
    {
      uint64_t v19 = v8;
      int v20 = v9;
      char v21 = v10;
      uint64_t v22 = v11;
      char v23 = v12;
      uint64_t v24 = v13;
      uint64_t v25 = v14;
      long long v26 = v15;
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v29 = v18;
      swift_retain();
      swift_retain();
      sub_1B6D9AB28((uint64_t)&v19, v4, a1);
      swift_release_n();
      swift_release();
      return sub_1B632F1C4(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      return (void *)swift_release();
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshReferenceAsset()
{
  return &type metadata for MeshReferenceAsset;
}

ValueMetadata *type metadata accessor for VertexLayoutCollection()
{
  return &type metadata for VertexLayoutCollection;
}

uint64_t destroy for MeshFileAsset(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MeshFileAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = (id)v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MeshFileAsset(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = a2[5];
  long long v6 = (void *)a1[4];
  a1[4] = v4;
  id v7 = v4;

  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MeshFileAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MeshFileAsset()
{
  return &type metadata for MeshFileAsset;
}

uint64_t destroy for SceneFileAsset(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SceneFileAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = (id)v8;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SceneFileAsset(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = a2[5];
  id v6 = (void *)a1[4];
  a1[4] = v4;
  id v7 = v4;

  a1[5] = v5;
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SceneFileAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SceneFileAsset()
{
  return &type metadata for SceneFileAsset;
}

ValueMetadata *type metadata accessor for ImportOptions()
{
  return &type metadata for ImportOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for MeshImportOptions(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MeshImportOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for MeshImportOptions()
{
  return &type metadata for MeshImportOptions;
}

unint64_t sub_1B6BE2B28()
{
  unint64_t result = qword_1E9DD6C78;
  if (!qword_1E9DD6C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C78);
  }
  return result;
}

unint64_t sub_1B6BE2B80()
{
  unint64_t result = qword_1E9DD6C80;
  if (!qword_1E9DD6C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C80);
  }
  return result;
}

unint64_t sub_1B6BE2BD8()
{
  unint64_t result = qword_1E9DD6C88;
  if (!qword_1E9DD6C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C88);
  }
  return result;
}

unint64_t sub_1B6BE2C30()
{
  unint64_t result = qword_1E9DD6C90;
  if (!qword_1E9DD6C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6C90);
  }
  return result;
}

uint64_t sub_1B6BE2C88()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6BE2CD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656449656E656373 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496873656DLL && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6BE2E10(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v81 = a1;
  uint64_t v78 = a4;
  uint64_t v75 = a2;
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v79 = v9;
  uint64_t v80 = v10;
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v14 = a3[2];
  uint64_t v13 = a3[3];
  long long v16 = (void *)a3[4];
  uint64_t v15 = a3[5];
  uint64_t v83 = (void *)v14;
  __int16 v84 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = v15;
  uint64_t v77 = a5;
  uint64_t v74 = a6;
  uint64_t v73 = a3;
  if (v16)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
    swift_bridgeObjectRetain();
    id v19 = v16;
    v18(v14, v13, ObjectType, v15);
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v86 = 0;
    unint64_t v87 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v20 = v86;
    uint64_t v21 = v87;
    int v22 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v86 = 0;
    swift_retain();
    sub_1B6B33E34(v22, &v86, v20, v21);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1B62C91B8((uint64_t)&type metadata for MeshImportOptions);
  if (v24) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = *(void *)(v23 + 16 * v75);
  }
  sub_1B6E30DF8();
  uint64_t v26 = sub_1B6E31828();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  BOOL v29 = v26 == 1752393069 && v28 == 0xE400000000000000;
  if (v29 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1B6A58ADC((uint64_t)v83, v13, v16, v76, v77);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v84, v79);
    uint64_t v31 = v78;
    uint64_t result = swift_release();
    *uint64_t v31 = v30;
    return result;
  }
  BOOL v33 = v26 == 1718905959 && v28 == 0xE400000000000000;
  if (v33 || (sub_1B6E334B8() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v84, v79);
    return swift_bridgeObjectRelease();
  }
  BOOL v34 = v26 == 2053403509 && v28 == 0xE400000000000000;
  if (v34
    || (sub_1B6E334B8() & 1) != 0
    || v26 == 6583157 && v28 == 0xE300000000000000
    || (sub_1B6E334B8() & 1) != 0
    || v26 == 6972015 && v28 == 0xE300000000000000
    || (sub_1B6E334B8() & 1) != 0
    || v26 == 7107699 && v28 == 0xE300000000000000
    || (sub_1B6E334B8() & 1) != 0
    || v26 == 6513249 && v28 == 0xE300000000000000
    || (sub_1B6E334B8() & 1) != 0
    || v26 == 7957616 && v28 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v66 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v66 & 1) == 0)
    {
      type metadata accessor for VFXCoreImporter();
      uint64_t v67 = v84;
      uint64_t v68 = sub_1B6B6D444(v84, (void *)v73[6], v77);
      uint64_t v70 = v69;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v67, v79);
      if (v70)
      {
        uint64_t v71 = v78;
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v71 = v68;
        v71[1] = v70;
      }
      return result;
    }
  }
  type metadata accessor for MDLImporter();
  swift_initStackObject();
  uint64_t v35 = v74;
  swift_retain();
  uint64_t v36 = sub_1B6B4CBE8(v25, v35);
  uint64_t v37 = v84;
  unint64_t v38 = v82;
  sub_1B6B51774((uint64_t)v84);
  unint64_t v39 = v38;
  if (v38)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v86 = 0;
    unint64_t v87 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    __int16 v85 = v38;
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v40 = v86;
    uint64_t v41 = v87;
    int v42 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v86 = 0;
    swift_retain();
    sub_1B6B33E34(v42, &v86, v40, v41);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    unint64_t v39 = 0;
  }
  uint64_t v43 = v36[6];
  uint64_t v44 = *(void *)(v43 + 16);
  if (v44 && (uint64_t v45 = sub_1B695E724(*(void *)(v43 + 8 * v44 + 24)), v46))
  {
    uint64_t v47 = v45;
    uint64_t v48 = v46;
    uint64_t v49 = v78;
    swift_retain();
    swift_release();
    *uint64_t v49 = v47;
    int64_t v50 = *(void *)(v48 + 16);
    if (v50)
    {
      uint64_t v76 = v47;
      char v82 = v39;
      uint64_t v81 = **(void **)(v77 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      uint64_t v86 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B62E1D20(0, v50, 0);
      uint64_t v51 = v86;
      uint64_t v77 = v48;
      uint64_t v52 = v48 + 36;
      uint64_t v83 = v36;
      do
      {
        uint64_t v53 = v36[3];
        unint64_t v54 = *(void *)(v52 - 4);
        uint64_t v55 = MEMORY[0x1E4FBC860];
        long long v56 = sub_1B62FF544(MEMORY[0x1E4FBC860]);
        type metadata accessor for RemapContext();
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 24) = sub_1B62FF544(v55);
        swift_retain();
        uint64_t v58 = sub_1B67DD1D8(v55);
        swift_bridgeObjectRelease();
        *(void *)(v57 + 24) = v56;
        *(void *)(v57 + 32) = v58;
        *(unsigned char *)(v57 + 16) = 0;
        sub_1B69DF07C(v54, v57);
        LOBYTE(v85) = 1;
        sub_1B6B1FB1C(v57, v53, 0x100000000uLL, 0, v81);
        uint64_t v59 = 0xFFFFFFFFLL;
        if (*(void *)(*(void *)(v57 + 24) + 16))
        {
          sub_1B62BE38C(v54);
          uint64_t v60 = *(void *)(v57 + 24);
          if (*(void *)(v60 + 16))
          {
            uint64_t v61 = sub_1B62BE38C(v54);
            if (v62) {
              uint64_t v59 = *(void *)(*(void *)(v60 + 56) + 8 * v61);
            }
          }
        }
        swift_release();
        swift_release();
        uint64_t v86 = v51;
        unint64_t v64 = *(void *)(v51 + 16);
        unint64_t v63 = *(void *)(v51 + 24);
        if (v64 >= v63 >> 1)
        {
          sub_1B62E1D20(v63 > 1, v64 + 1, 1);
          uint64_t v51 = v86;
        }
        v52 += 8;
        *(void *)(v51 + 16) = v64 + 1;
        *(void *)(v51 + 8 * v64 + 32) = v59;
        --v50;
        uint64_t v36 = v83;
      }
      while (v50);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      uint64_t v37 = v84;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v51 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v37, v79);
    unint64_t v65 = v78;
    uint64_t result = swift_bridgeObjectRelease();
    v65[1] = v51;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v37, v79);
    return swift_release();
  }
  return result;
}

uint64_t *sub_1B6BE37EC(uint64_t *result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (*a2) {
    return result;
  }
  BOOL v4 = result;
  uint64_t v5 = *result;
  uint64_t v6 = result[1];
  uint64_t v7 = *(void *)(a3 + 16);
  if (!*(void *)(v7 + 16)) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B62B2CE0(v5, v6);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v43 = 0x80000001B6F4CED0;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    int v27 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v42 = 0;
    swift_retain();
    sub_1B6B33E34(v27, &v42, 0xD000000000000027, 0x80000001B6F4CED0);
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t *)swift_release();
  }
  uint64_t v12 = *(void *)(*(void *)(v7 + 56) + 8 * v10);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v4[2];
  unint64_t v13 = v4[3];
  sub_1B697E8C8(v14, v13);
  uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtC3VFX23SceneAssetRegistryEntry_idToEntity);
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1B62B2CE0(v14, v13);
    if (v17)
    {
      unint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = **(void **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      sub_1B697E8C8(0, 0);
      uint64_t v44 = v12;
      uint64_t v20 = *(void *)(v12 + OBJC_IVAR____TtC3VFX23SceneAssetRegistryEntry__entityManager);
      swift_retain();
      unint64_t v21 = sub_1B6B1BFA4(v18, v20, 0, v19);
      swift_release();
      if (v21 == 0xFFFFFFFF || (swift_retain(), uint64_t v22 = sub_1B695E724(v21), v24 = v23, swift_release(), !v24))
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        swift_retain();
        int v29 = sub_1B6E32168();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        uint64_t v42 = 0;
        swift_retain();
        sub_1B6B33E34(v29, &v42, 0xD00000000000002ALL, 0x80000001B6F4CF30);
        swift_release();
        swift_release();
        return (uint64_t *)swift_release();
      }
      else
      {
        if (v22)
        {
          *a2 = v22;
          swift_retain_n();
          swift_bridgeObjectRetain();
          uint64_t v25 = swift_bridgeObjectRelease();
          a2[1] = v24;
          uint64_t v42 = 32;
          unint64_t v43 = 0xE100000000000000;
          MEMORY[0x1F4188790](v25, v26);
          _OWORD v41[2] = &v42;
          swift_bridgeObjectRetain();
          sub_1B6BDF950(sub_1B6BE3EE4, (uint64_t)v41, v14, v13);
          uint64_t v31 = sub_1B6E31A78();
          uint64_t v33 = v32;
          uint64_t v35 = v34;
          uint64_t v37 = v36;
          swift_bridgeObjectRelease();
          uint64_t v38 = MEMORY[0x1BA9B34C0](v31, v33, v35, v37);
          uint64_t v40 = v39;
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)(v22 + 56) = v38;
          *(void *)(v22 + 64) = v40;
          swift_release();
        }
        else
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          swift_retain();
          int v30 = sub_1B6E32168();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v42 = 0;
          swift_retain();
          sub_1B6B33E34(v30, &v42, 0xD000000000000026, 0x80000001B6F4CF60);
          swift_release();
          swift_release();
          swift_release();
        }
        return (uint64_t *)swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v43 = 0x80000001B6F4CF00;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  int v28 = sub_1B6E32168();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v42 = 0;
  swift_retain();
  sub_1B6B33E34(v28, &v42, 0xD000000000000026, 0x80000001B6F4CF00);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return (uint64_t *)swift_release();
}

uint64_t sub_1B6BE3EE4(void *a1)
{
  BOOL v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1B6E334B8() & 1;
  }
}

void sub_1B6BE3F3C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  int v29 = a2;
  uint64_t v3 = sub_1B6E30F48();
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6BE505C(0, &qword_1E9DD6CB8, (uint64_t (*)(void))sub_1B6BE4D3C, (uint64_t)&type metadata for MeshFileAsset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  char v11 = (char *)&v26 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4D3C();
  uint64_t v12 = (uint64_t)v31;
  sub_1B6E33A48();
  if (v12)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v13 = v11;
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62BF5E0(2031, v14, v15))
    {
      LOBYTE(v32) = 0;
      sub_1B63BE158();
      sub_1B6E32DF8();
      uint64_t v31 = a1;
      uint64_t v16 = sub_1B6E30E58();
      uint64_t v18 = v17;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
      swift_bridgeObjectRetain();
      uint64_t v19 = 0;
      uint64_t v26 = v16;
      uint64_t v27 = 0;
      uint64_t v20 = v18;
      uint64_t v28 = v16;
    }
    else
    {
      char v38 = 0;
      sub_1B68111DC();
      sub_1B6E32DF8();
      uint64_t v31 = a1;
      uint64_t v20 = v33;
      uint64_t v18 = v35;
      uint64_t v26 = v34;
      uint64_t v19 = v36;
      uint64_t v27 = v37;
      uint64_t v28 = v32;
    }
    LOBYTE(v32) = 1;
    if (sub_1B6E32E98())
    {
      sub_1B674C75C();
      char v38 = 1;
      sub_1B6BE4D90();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v8);
      uint64_t v21 = v32;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v8);
      uint64_t v21 = 0;
    }
    uint64_t v22 = v28;
    uint64_t v23 = v29;
    uint64_t v24 = v26;
    uint64_t v25 = v27;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
    *uint64_t v23 = v22;
    v23[1] = v20;
    v23[2] = v24;
    v23[3] = v18;
    void v23[4] = v19;
    v23[5] = v25;
    v23[6] = v21;
  }
}

void sub_1B6BE4330(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v38 = a2;
  uint64_t v3 = sub_1B6E30F48();
  uint64_t v39 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6BE505C(0, &qword_1E9DD6CD8, (uint64_t (*)(void))sub_1B6BE4F0C, (uint64_t)&type metadata for SceneFileAsset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  char v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_1B6E31118();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E31108();
  sub_1B6E310B8();
  uint64_t v41 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4F0C();
  uint64_t v18 = v42;
  sub_1B6E33A48();
  if (v18)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v11;
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    sub_1B62C14BC(a1, v20);
    if (sub_1B62BF5E0(2031, v20, v21))
    {
      LOBYTE(v43) = 0;
      sub_1B63BE158();
      uint64_t v22 = v6;
      uint64_t v23 = v8;
      uint64_t v24 = v19;
      sub_1B6E32DF8();
      uint64_t v25 = sub_1B6E30E58();
      uint64_t v26 = v22;
      uint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      uint64_t v39 = 0;
      int v29 = 0;
      uint64_t v30 = v28;
      uint64_t v42 = v25;
      uint64_t v37 = v25;
    }
    else
    {
      char v49 = 0;
      sub_1B68111DC();
      uint64_t v23 = v8;
      uint64_t v24 = v11;
      sub_1B6E32DF8();
      uint64_t v30 = v44;
      uint64_t v37 = v43;
      uint64_t v28 = v46;
      uint64_t v42 = v45;
      int v29 = v47;
      uint64_t v39 = v48;
      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v43) = 1;
    uint64_t v31 = sub_1B6E32D98();
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v23);
    swift_bridgeObjectRelease();
    id v34 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = v38;
    *char v38 = v37;
    v35[1] = v30;
    v35[2] = v42;
    v35[3] = v28;
    uint64_t v36 = v39;
    v35[4] = (uint64_t)v29;
    void v35[5] = v36;
    v35[6] = v31;
    v35[7] = v33;
  }
}

void *sub_1B6BE47E0(void *a1)
{
  sub_1B6BE505C(0, &qword_1E9DD6CF0, (uint64_t (*)(void))sub_1B6BE4F60, (uint64_t)&type metadata for MeshImportOptions.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4F60();
  uint64_t v10 = v9;
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    sub_1B62C14BC(a1, v11);
    if (sub_1B62BF5E0(1014, v11, v12))
    {
      char v21 = 1;
      char v13 = sub_1B6E32D38();
      char v20 = 2;
      char v14 = sub_1B6E32D38();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v10 = (void *)((v14 == 2) | v14 & 1 | (2 * (v13 & 1u)));
    }
    else
    {
      char v23 = 0;
      sub_1B6BE4FB4();
      sub_1B6E32D78();
      uint64_t v16 = v18;
      int v17 = v19;
      char v22 = 3;
      sub_1B6BE5008();
      sub_1B6E32D78();
      if (v17) {
        uint64_t v10 = 0;
      }
      else {
        uint64_t v10 = v16;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1B6BE4AD0(void *a1)
{
  sub_1B6BE505C(0, &qword_1E9DD6CA0, (uint64_t (*)(void))sub_1B6BE4CE8, (uint64_t)&type metadata for MeshReferenceAsset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BE4CE8();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = 0;
    uint64_t v9 = sub_1B6E32D98();
    char v12 = 1;
    sub_1B6E32D98();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v9;
}

unint64_t sub_1B6BE4CE8()
{
  unint64_t result = qword_1E9DD6CA8;
  if (!qword_1E9DD6CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6CA8);
  }
  return result;
}

unint64_t sub_1B6BE4D3C()
{
  unint64_t result = qword_1E9DD6CC0;
  if (!qword_1E9DD6CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6CC0);
  }
  return result;
}

unint64_t sub_1B6BE4D90()
{
  unint64_t result = qword_1E9DD6CC8;
  if (!qword_1E9DD6CC8)
  {
    sub_1B674C75C();
    sub_1B6BE4E88((unint64_t *)&qword_1EB980338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6CC8);
  }
  return result;
}

uint64_t sub_1B6BE4E24(uint64_t a1, uint64_t a2)
{
  sub_1B674C75C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6BE4E88(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D8880(255, &qword_1EB980330, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6BE4F0C()
{
  unint64_t result = qword_1E9DD6CE0;
  if (!qword_1E9DD6CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6CE0);
  }
  return result;
}

unint64_t sub_1B6BE4F60()
{
  unint64_t result = qword_1E9DD6CF8;
  if (!qword_1E9DD6CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6CF8);
  }
  return result;
}

unint64_t sub_1B6BE4FB4()
{
  unint64_t result = qword_1E9DD6D00;
  if (!qword_1E9DD6D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D00);
  }
  return result;
}

unint64_t sub_1B6BE5008()
{
  unint64_t result = qword_1E9DD6D08;
  if (!qword_1E9DD6D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D08);
  }
  return result;
}

void sub_1B6BE505C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B6BE50C4()
{
  unint64_t result = qword_1E9DD6D18;
  if (!qword_1E9DD6D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D18);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MeshImportOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BE51E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshImportOptions.CodingKeys()
{
  return &type metadata for MeshImportOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for SceneFileAsset.CodingKeys()
{
  return &type metadata for SceneFileAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for MeshFileAsset.CodingKeys()
{
  return &type metadata for MeshFileAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for MeshReferenceAsset.CodingKeys()
{
  return &type metadata for MeshReferenceAsset.CodingKeys;
}

unsigned char *_s3VFX17MeshImportOptionsV6LoaderOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BE531CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshImportOptions.Loader()
{
  return &type metadata for MeshImportOptions.Loader;
}

unint64_t sub_1B6BE5358()
{
  unint64_t result = qword_1E9DD6D20;
  if (!qword_1E9DD6D20)
  {
    sub_1B62D8880(255, &qword_1E9DD6D28, (uint64_t)&type metadata for MeshImportOptions.Loader, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D20);
  }
  return result;
}

unint64_t sub_1B6BE53D8()
{
  unint64_t result = qword_1E9DD6D30;
  if (!qword_1E9DD6D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D30);
  }
  return result;
}

unint64_t sub_1B6BE5430()
{
  unint64_t result = qword_1E9DD6D38;
  if (!qword_1E9DD6D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D38);
  }
  return result;
}

unint64_t sub_1B6BE5488()
{
  unint64_t result = qword_1E9DD6D40;
  if (!qword_1E9DD6D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D40);
  }
  return result;
}

unint64_t sub_1B6BE54E0()
{
  unint64_t result = qword_1E9DD6D48;
  if (!qword_1E9DD6D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D48);
  }
  return result;
}

unint64_t sub_1B6BE5538()
{
  unint64_t result = qword_1E9DD6D50;
  if (!qword_1E9DD6D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D50);
  }
  return result;
}

unint64_t sub_1B6BE5590()
{
  unint64_t result = qword_1E9DD6D58;
  if (!qword_1E9DD6D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D58);
  }
  return result;
}

unint64_t sub_1B6BE55E8()
{
  unint64_t result = qword_1E9DD6D60;
  if (!qword_1E9DD6D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D60);
  }
  return result;
}

unint64_t sub_1B6BE5640()
{
  unint64_t result = qword_1E9DD6D68;
  if (!qword_1E9DD6D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D68);
  }
  return result;
}

unint64_t sub_1B6BE5698()
{
  unint64_t result = qword_1E9DD6D70;
  if (!qword_1E9DD6D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D70);
  }
  return result;
}

unint64_t sub_1B6BE56F0()
{
  unint64_t result = qword_1E9DD6D78;
  if (!qword_1E9DD6D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D78);
  }
  return result;
}

unint64_t sub_1B6BE5748()
{
  unint64_t result = qword_1E9DD6D80;
  if (!qword_1E9DD6D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D80);
  }
  return result;
}

unint64_t sub_1B6BE57A0()
{
  unint64_t result = qword_1E9DD6D88;
  if (!qword_1E9DD6D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D88);
  }
  return result;
}

unint64_t sub_1B6BE57F8()
{
  unint64_t result = qword_1E9DD6D90;
  if (!qword_1E9DD6D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D90);
  }
  return result;
}

unint64_t sub_1B6BE584C()
{
  unint64_t result = qword_1E9DD6D98;
  if (!qword_1E9DD6D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6D98);
  }
  return result;
}

uint64_t sub_1B6BE58A0@<X0>(void *a1@<X8>)
{
  return sub_1B67F42A4(a1);
}

double sub_1B6BE58B8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6BE9BA0(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B6BE58F4(void *a1)
{
  sub_1B698B528(0, &qword_1E9DD1BC0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = &v12[-v8];
  long long v10 = v1[1];
  long long v14 = *v1;
  long long v15 = v10;
  uint64_t result = sub_1B6891ED0(a1, (uint64_t)&v12[-v8]);
  if (!v2)
  {
    uint64_t v13 = *((void *)&v15 + 1);
    v12[7] = 9;
    sub_1B6657A10();
    sub_1B6E32FA8();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

double sub_1B6BE5A3C()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B67A7550((uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1E9E49758 = v1[0];
  unk_1E9E49768 = v1[1];
  qword_1E9E49778 = v2;
  return result;
}

uint64_t *sub_1B6BE5AE8(uint64_t a1, uint64_t a2)
{
  float v5 = *(float *)(v2 + 160);
  if (qword_1E9DCC6C0 != -1) {
    swift_once();
  }
  v54[0] = xmmword_1E9E49758;
  v54[1] = unk_1E9E49768;
  uint64_t v55 = qword_1E9E49778;
  uint64_t v6 = a2 & 0xFFFFFFFFFFLL;
  sub_1B62C9DA8(a1, (uint64_t)v54, a2 & 0xFFFFFFFFFFLL, v40);
  double result = (uint64_t *)sub_1B62D7D78((uint64_t)v40, (uint64_t)v41, (uint64_t)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
  if (*(void *)&v41[0])
  {
    long long v48 = v41[0];
    long long v49 = v41[1];
    uint64_t v50 = v42;
    if (v47 >= 1)
    {
      uint64_t v33 = v44;
      if (v44)
      {
        uint64_t v31 = v43;
        uint64_t v8 = v46[4];
        int i = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v39 = v46;
        uint64_t v28 = v46 + 8;
        uint64_t v29 = (uint64_t)(v46 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v10 = 0;
        int v30 = i;
        uint64_t v32 = v8;
        uint64_t v27 = v2;
        do
        {
          uint64_t v11 = (unsigned int *)(v31 + 48 * v10);
          uint64_t v35 = *v11;
          uint64_t v12 = *((void *)v11 + 3);
          uint64_t v14 = *((void *)v11 + 4);
          uint64_t v13 = *((void *)v11 + 5);
          uint64_t v36 = (uint64_t *)*((void *)v11 + 2);
          uint64_t v37 = v10;
          uint64_t v34 = v11[1];
          if (i)
          {
            long long v15 = *(os_unfair_lock_s **)(v13 + 376);
            swift_retain();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v8);
          sub_1B62D7D78(v29, (uint64_t)v53, (uint64_t)&qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
          uint64_t v16 = v39[4];
          uint64_t v17 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
          uint64_t v18 = v13;
          swift_retain();
          v39[6] = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
          v39[7] = v17;
          v28[1] = 0;
          v28[2] = 0;
          void *v28 = 0;
          swift_release();
          unsigned __int8 v19 = (uint64_t *)sub_1B62C9024((uint64_t)&type metadata for ParticleSDFCollider, (uint64_t)&off_1F0F7DEA0, v36, v12, v14, (uint64_t)v39);
          char v20 = (float32x2_t *)sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v36, v12, v14, (uint64_t)v39);
          uint64_t v38 = v18;
          uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for LastFrameWorldTransform, (uint64_t)&off_1F0F8F498, v36, v12, v14, (uint64_t)v39);
          char v22 = (float32x2_t *)v21;
          if (v36)
          {
            for (int i = v30; v14; --v14)
            {
              sub_1B6BE8624(v19, v20, v22, v27, v6, a1, v5);
              v22 += 8;
              v20 += 8;
              v19 += 4;
            }
          }
          else
          {
            int i = v30;
            if (v35 != v34)
            {
              uint64_t v23 = v34 - v35;
              uint64_t v24 = (float32x2_t *)(v21 + (v35 << 6));
              uint64_t v25 = &v20[8 * v35];
              uint64_t v26 = &v19[4 * v35];
              do
              {
                sub_1B6BE8624(v26, v25, v24, v27, v6, a1, v5);
                v24 += 8;
                v25 += 8;
                v26 += 4;
                --v23;
              }
              while (v23);
            }
          }
          v51[0] = v48;
          v51[1] = v49;
          uint64_t v52 = v50;
          sub_1B6345178(v39, (unsigned __int16 **)v51, (uint64_t)v53);
          sub_1B634507C((char *)v38);
          uint64_t v8 = v32;
          ecs_stack_allocator_pop_snapshot(v32);
          if (i)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 376));
          }
          swift_release();
          uint64_t v10 = v37 + 1;
        }
        while (v37 + 1 != v33);
        sub_1B632F170(v40);
      }
    }
    return sub_1B632F170(v40);
  }
  return result;
}

uint64_t sub_1B6BE5F74(long long *a1, long long *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, float a7)
{
  uint64_t v123 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = (uint64_t *)*((void *)a1 + 11);
  uint64_t v11 = *((void *)a1 + 12);
  uint64_t v12 = *((void *)a1 + 13);
  uint64_t v13 = *((void *)a1 + 1);
  uint64_t v14 = *((void *)a1 + 2);
  uint64_t v93 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v10, v11, v12, v14);
  uint64_t v89 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v10, v11, v12, v14);
  uint64_t v81 = sub_1B67A819C();
  char v95 = v15;
  uint64_t v87 = sub_1B63459F8();
  char v17 = v16;
  long long v102 = *a2;
  long long v106 = *(_OWORD *)(a3 + 192);
  long long v18 = a1[3];
  long long v112 = a1[2];
  long long v19 = *a1;
  long long v111 = a1[1];
  long long v110 = v19;
  long long v116 = a1[6];
  long long v20 = a1[4];
  long long v115 = a1[5];
  long long v114 = v20;
  long long v104 = &type metadata for CollisionProperties;
  unint64_t v105 = &off_1F0F7C560;
  uint64_t v103 = *((void *)a2 + 2);
  uint64_t v21 = *(void *)(a4 + 16);
  long long v113 = v18;
  uint64_t v22 = *((void *)a1 + 6);
  uint64_t v23 = *((void *)a1 + 7);
  uint64_t v24 = *(void *)(v14 + 32);
  swift_retain();
  uint64_t v117 = ecs_stack_allocator_allocate(v24, 8 * (v23 - v22), 8);
  uint64_t v118 = v23 - v22;
  uint64_t v119 = 0;
  sub_1B62C1550((uint64_t)&v102, (uint64_t)v107);
  float v108 = a7;
  v107[5] = v21;
  sub_1B6345398(*(void *)(v13 + 40), (uint64_t)&type metadata for Anchored, &v101);
  char v109 = v101;
  swift_retain();
  uint64_t v25 = ecs_stack_allocator_allocate(v24, 80 * (v23 - v22), 16);
  uint64_t v26 = v93;
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v102);
  uint64_t v120 = v25;
  uint64_t v121 = v23 - v22;
  uint64_t v122 = 0;
  if (v23 != v22)
  {
    int v28 = v95 & 1;
    float v29 = *(float *)(a4 + 80) * 0.5;
    long long v30 = *(_OWORD *)(a3 + 208);
    LODWORD(v31) = HIDWORD(*(void *)(a3 + 208));
    float32x4_t v98 = *(float32x4_t *)(a3 + 16);
    float32x4_t v100 = *(float32x4_t *)a3;
    float32x4_t v96 = *(float32x4_t *)(a3 + 32);
    float32x4_t v92 = *(float32x4_t *)(a3 + 48);
    if ((LODWORD(v31) & 0x7FFFFF) != 0) {
      LODWORD(v32) = *(_OWORD *)(a3 + 208);
    }
    else {
      LODWORD(v32) = HIDWORD(*(void *)(a3 + 208));
    }
    if ((~LODWORD(v31) & 0x7F800000) != 0) {
      LODWORD(v32) = HIDWORD(*(void *)(a3 + 208));
    }
    if (v31 >= *(float *)&v30) {
      *(float *)&long long v30 = v32;
    }
    float v33 = *(float *)&v30 + *(float *)&v30;
    uint64_t v34 = 16 * v22;
    __asm { FMOV            V12.2S, #1.0 }
    float v85 = *(float *)&v30 + *(float *)&v30;
    do
    {
      if (v17) {
        __asm { FMOV            V0.4S, #1.0 }
      }
      else {
        _Q0 = *(_OWORD *)(v87 + 16 * v22);
      }
      float32x2_t v41 = (float32x2_t)vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v92, v96, *(float32x4_t *)(v26 + 16 * v22), 2), v98, *(float32x2_t *)(v26 + 16 * v22), 1), v100, COERCE_FLOAT(*(_OWORD *)(v26 + 16 * v22))).u64[0];
      uint32x2_t v42 = (uint32x2_t)vcgt_f32(vabs_f32(v41), _D12);
      if ((vpmax_u32(v42, v42).u32[0] & 0x80000000) != 0) {
        goto LABEL_13;
      }
      float32x4_t v88 = *(float32x4_t *)(v26 + 16 * v22);
      float v43 = (float)(v29 * fmaxf(fmaxf(*(float *)&_Q0, *((float *)&_Q0 + 2)), *((float *)&_Q0 + 1))) / v33;
      float32x4_t v90 = *(float32x4_t *)(v89 + 16 * v22);
      float32x2_t v94 = v41;
      if ((*(float (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vmla_f32((float32x2_t)0x3F0000003F000000, (float32x2_t)0x3F0000003F000000, v41))) > v43)goto LABEL_13; {
      uint64_t v44 = v26;
      }
      float32x4_t v91 = vmulq_n_f32(v90, a7);
      float32x2_t v45 = (float32x2_t)vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v96, v91, 2), v98, *(float32x2_t *)v91.f32, 1), v100, v91.f32[0]).u64[0];
      float32x2_t v46 = vsub_f32(v94, v45);
      uint32x2_t v47 = (uint32x2_t)vcgt_f32(vabs_f32(v46), _D12);
      int v48 = vpmax_u32(v47, v47).u32[0];
      float32x2_t v49 = v46;
      if (v48 < 0)
      {
        float32x2_t v50 = vdiv_f32(_D12, vmaxnm_f32(vabs_f32(v45), (float32x2_t)0x3400000034000000));
        float32x2_t v51 = vsub_f32(vmul_f32(v46, vmul_f32(v50, vneg_f32((float32x2_t)vand_s8(vorr_s8(vand_s8((int8x8_t)v45, (int8x8_t)0x8000000080000000), (int8x8_t)_D12), vorr_s8((int8x8_t)vcltz_f32(v45), (int8x8_t)vcgtz_f32(v45)))))), v50);
        float32x2_t v49 = vmla_n_f32(v46, v45, fmaxf(v51.f32[0], v51.f32[1]));
      }
      float32x2_t v52 = vmla_f32((float32x2_t)0x3F0000003F000000, (float32x2_t)0x3F0000003F000000, v49);
      int32x2_t v53 = (int32x2_t)vmul_f32(v45, v45);
      float32x2_t v54 = (float32x2_t)vdup_lane_s32((int32x2_t)vadd_f32((float32x2_t)v53, (float32x2_t)vdup_lane_s32(v53, 1)), 0);
      float32x2_t v55 = vrsqrte_f32(v54);
      float32x2_t v56 = vmul_f32(v55, vrsqrts_f32(v54, vmul_f32(v55, v55)));
      float32x2_t v57 = (float32x2_t)vbsl_s8((int8x8_t)*(_OWORD *)&vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16((int16x4_t)vmvn_s8((int8x8_t)vceqz_f32(v54)), (int16x4_t)v45)), 0x1FuLL)), (int8x8_t)vmul_f32(v45, vmul_f32(v56, vrsqrts_f32(v54, vmul_f32(v56, v56)))), (int8x8_t)v45);
      float v58 = (*(float (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vmla_f32(v52, 0, v57))) - v43;
      float v59 = 0.0;
      if (v58 > 0.01)
      {
        float v59 = v58 + 0.0;
        float v60 = (*(float (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vmla_n_f32(v52, v57, (float)(v58 + 0.0) * 0.5)))- v43;
        if (v60 > 0.01)
        {
          float v59 = v59 + v60;
          float v61 = (*(float (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vmla_n_f32(v52, v57, v59 * 0.5)))
              - v43;
          if (v61 > 0.01)
          {
            float v59 = v59 + v61;
            float v62 = (*(float (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vmla_n_f32(v52, v57, v59 * 0.5)))- v43;
            if (v62 > 0.01)
            {
              float v59 = v59 + v62;
              float v63 = (*(float (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vmla_n_f32(v52, v57, v59 * 0.5)))- v43;
              if (v63 > 0.01) {
                float v59 = v59 + v63;
              }
            }
          }
        }
      }
      float32x2_t v64 = vsub_f32(v49, v46);
      float v65 = sqrtf(vaddv_f32(vmul_f32(v64, v64))) + v59;
      if (v48 >= 0) {
        float v65 = v59;
      }
      float32x2_t v66 = vsub_f32(v94, v46);
      float v67 = v65 / sqrtf(vaddv_f32(vmul_f32(v66, v66)));
      if (v67 > 1.0)
      {
        uint64_t v26 = v44;
      }
      else
      {
        float32x2_t v68 = vmla_n_f32(v52, v57, v65 * 0.5);
        (*(void (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vadd_f32(v68, (float32x2_t)1008981770)));
        (*(void (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vadd_f32(v68, (float32x2_t)0x80000000BC23D70ALL)));
        (*(void (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vadd_f32(v68, (float32x2_t)0x3C23D70A00000000)));
        (*(void (**)(uint64_t, double))(a6 + 40))(a6, COERCE_DOUBLE(vadd_f32(v68, (float32x2_t)0xBC23D70A80000000)));
        uint64_t v26 = v44;
        if (v67 >= 0.0)
        {
          float32x4_t v69 = 0uLL;
          float32x4_t v70 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_f32(*(float32x4_t *)(a3 + 128), (float32x4_t)0), (float32x4_t)0, *(float32x4_t *)(a3 + 144)), (float32x4_t)0, *(float32x4_t *)(a3 + 160)), (float32x4_t)0, *(float32x4_t *)(a3 + 176));
          int8x16_t v71 = (int8x16_t)vabsq_f32(v70);
          if (*(float *)v71.i32 <= 0.00000011921
            && (v71.i32[0] = vextq_s8(v71, v71, 8uLL).u32[0],
                *(int32x2_t *)v71.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v71.i8),
                (v71.i8[4] & 1) != 0)
            && (v71.i8[0] & 1) != 0)
          {
            float32x4_t v72 = v88;
            if (!v28) {
              goto LABEL_35;
            }
LABEL_37:
            uint64_t v74 = 0;
            uint64_t v75 = 0;
          }
          else
          {
            int32x4_t v76 = (int32x4_t)vmulq_f32(v70, v70);
            v76.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v76, 2), vadd_f32(*(float32x2_t *)v76.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v76.i8, 1))).u32[0];
            float32x2_t v77 = vrsqrte_f32((float32x2_t)v76.u32[0]);
            float32x2_t v78 = vmul_f32(v77, vrsqrts_f32((float32x2_t)v76.u32[0], vmul_f32(v77, v77)));
            float32x4_t v69 = vmulq_n_f32(v70, vmul_f32(v78, vrsqrts_f32((float32x2_t)v76.u32[0], vmul_f32(v78, v78))).f32[0]);
            v69.i32[3] = v80;
            float32x4_t v72 = v88;
            if (v28) {
              goto LABEL_37;
            }
LABEL_35:
            uint64_t v73 = (uint64_t *)(v81 + 16 * v22);
            uint64_t v74 = *v73;
            uint64_t v75 = v73[1];
          }
          float32x4_t v79 = vsubq_f32(v72, vmulq_n_f32(v91, 1.0 - v67));
          v79.i32[3] = v84;
          sub_1B6C323C0(v22, (float32x4_t *)(v44 + v34), (float32x4_t *)(v89 + v34), v74, v75, v28, v79, v69, v67);
          uint64_t v26 = v44;
        }
      }
      float v33 = v85;
LABEL_13:
      ++v22;
      v34 += 16;
    }
    while (v23 != v22);
  }
  sub_1B6BE6FF4((uint64_t)&v106, a5 | ((HIDWORD(a5) & 1) << 32), (void (*)(void *))sub_1B68947C0);
  return sub_1B6894710((uint64_t)&v106);
}

uint64_t sub_1B6BE66C8(long long *a1, long long *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, float a7)
{
  uint64_t v12 = (uint64_t *)*((void *)a1 + 11);
  uint64_t v11 = *((void *)a1 + 12);
  uint64_t v13 = *((void *)a1 + 13);
  uint64_t v15 = *((void *)a1 + 1);
  uint64_t v14 = *((void *)a1 + 2);
  uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v12, v11, v13, v14);
  uint64_t v84 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v12, v11, v13, v14);
  uint64_t v67 = sub_1B67A819C();
  char v82 = v17;
  long long v91 = *a2;
  long long v95 = *(_OWORD *)(a3 + 192);
  long long v18 = a1[3];
  long long v101 = a1[2];
  long long v19 = *a1;
  long long v100 = a1[1];
  long long v99 = v19;
  long long v105 = a1[6];
  long long v20 = a1[4];
  long long v104 = a1[5];
  long long v103 = v20;
  uint64_t v93 = &type metadata for CollisionProperties;
  float32x2_t v94 = &off_1F0F7C560;
  uint64_t v92 = *((void *)a2 + 2);
  uint64_t v21 = *(void *)(a4 + 16);
  long long v102 = v18;
  uint64_t v22 = *((void *)a1 + 6);
  uint64_t v23 = *((void *)a1 + 7);
  uint64_t v24 = *(void *)(v14 + 32);
  swift_retain();
  long long v106 = ecs_stack_allocator_allocate(v24, 8 * (v23 - v22), 8);
  uint64_t v107 = v23 - v22;
  uint64_t v108 = 0;
  sub_1B62C1550((uint64_t)&v91, (uint64_t)v96);
  float v97 = a7;
  v96[5] = v21;
  sub_1B6345398(*(void *)(v15 + 40), (uint64_t)&type metadata for Anchored, &v90);
  char v98 = v90;
  swift_retain();
  uint64_t v25 = ecs_stack_allocator_allocate(v24, 80 * (v23 - v22), 16);
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v91);
  char v109 = v25;
  uint64_t v110 = v23 - v22;
  uint64_t v111 = 0;
  if (v23 != v22)
  {
    int v29 = v82 & 1;
    float32x4_t v30 = *(float32x4_t *)a3;
    float32x4_t v31 = *(float32x4_t *)(a3 + 16);
    float32x4_t v32 = *(float32x4_t *)(a3 + 32);
    float32x4_t v33 = *(float32x4_t *)(a3 + 48);
    uint64_t v34 = 16 * v22;
    uint64_t v35 = (float32x4_t *)(v84 + 16 * v22);
    __asm { FMOV            V16.4S, #1.0 }
    float32x4_t v81 = v31;
    float32x4_t v83 = *(float32x4_t *)a3;
    float32x4_t v79 = v33;
    float32x4_t v80 = v32;
    float32x4_t v78 = _Q16;
    do
    {
      __int32 v54 = v26.i32[3];
      float32x4_t v55 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v33, v32, *(float32x4_t *)(v16 + 16 * v22), 2), v31, *(float32x2_t *)(v16 + 16 * v22), 1), v30, COERCE_FLOAT(*(_OWORD *)(v16 + 16 * v22)));
      float32x4_t v26 = vabsq_f32(v55);
      v26.i32[3] = v54;
      int32x4_t v56 = vcgtq_f32(_Q16, v26);
      int v57 = v56.i32[1];
      if (v56.i32[1] <= v56.i32[0]) {
        int v57 = v56.i32[0];
      }
      if (v56.i32[2] > v57) {
        int v57 = v56.i32[2];
      }
      if (v57 < 0)
      {
        v58.i64[0] = 0x3F0000003F000000;
        v58.i64[1] = 0x3F0000003F000000;
        float32x4_t v59 = vaddq_f32(vmulq_f32(v55, v58), v58);
        __int32 v87 = v26.i32[3];
        float32x4_t v89 = v59;
        v59.i32[3] = v27.i32[3];
        float32x4_t v85 = v59;
        float v60 = (*(float (**)(uint64_t))(a6 + 72))(a6);
        if (v60 < 0.0)
        {
          float v75 = v60;
          *(double *)v61.i64 = (*(double (**)(uint64_t, float32x4_t))(a6 + 72))(a6, vaddq_f32(v89, (float32x4_t)xmmword_1B6EB24F0));
          float32x4_t v74 = v61;
          *(double *)v62.i64 = (*(double (**)(uint64_t, float32x4_t))(a6 + 72))(a6, vaddq_f32(v89, (float32x4_t)xmmword_1B6EB2500));
          float32x4_t v73 = v62;
          *(double *)v63.i64 = (*(double (**)(uint64_t, float32x4_t))(a6 + 72))(a6, vaddq_f32(v89, (float32x4_t)xmmword_1B6EB2510));
          float32x4_t v72 = v63;
          *(double *)v64.i64 = (*(double (**)(uint64_t, float32x4_t))(a6 + 72))(a6, vaddq_f32(v89, (float32x4_t)xmmword_1B6EB2520));
          float32x4_t v71 = v64;
          *(double *)v65.i64 = (*(double (**)(uint64_t, float32x4_t))(a6 + 72))(a6, vaddq_f32(v89, (float32x4_t)xmmword_1B6EB2530));
          float32x4_t v70 = v65;
          (*(void (**)(uint64_t, float32x4_t))(a6 + 72))(a6, vaddq_f32(v89, (float32x4_t)xmmword_1B6EB2540));
          if (v29)
          {
            uint64_t v42 = 0;
            uint64_t v43 = 0;
          }
          else
          {
            float32x2_t v41 = (uint64_t *)(v67 + 16 * v22);
            uint64_t v42 = *v41;
            uint64_t v43 = v41[1];
          }
          float32x4_t v44 = (float32x4_t)vzip1q_s32((int32x4_t)vsubq_f32(v74, v73), (int32x4_t)vsubq_f32(v72, v71));
          v44.i32[2] = vsubq_f32(v70, v66).u32[0];
          int32x4_t v45 = (int32x4_t)vmulq_f32(v44, v44);
          v45.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v45, 2), vadd_f32(*(float32x2_t *)v45.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v45.i8, 1))).u32[0];
          float32x2_t v46 = vrsqrte_f32((float32x2_t)v45.u32[0]);
          float32x2_t v47 = vmul_f32(v46, vrsqrts_f32((float32x2_t)v45.u32[0], vmul_f32(v46, v46)));
          float32x4_t v48 = vmulq_n_f32(vmulq_n_f32(v44, vmul_f32(v47, vrsqrts_f32((float32x2_t)v45.u32[0], vmul_f32(v47, v47))).f32[0]), fabsf(v75));
          float32x4_t v49 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(*(float32x4_t *)(a3 + 96), v48, 2), *(float32x4_t *)(a3 + 80), *(float32x2_t *)v48.f32, 1), *(float32x4_t *)(a3 + 64), v48.f32[0]);
          int32x4_t v50 = (int32x4_t)vmulq_f32(v49, v49);
          v50.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v50, 2), vadd_f32(*(float32x2_t *)v50.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v50.i8, 1))).u32[0];
          *(float32x2_t *)v48.f32 = vrsqrte_f32((float32x2_t)v50.u32[0]);
          *(float32x2_t *)v48.f32 = vmul_f32(*(float32x2_t *)v48.f32, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(*(float32x2_t *)v48.f32, *(float32x2_t *)v48.f32)));
          float32x4_t v51 = vmulq_n_f32(v49, vmul_f32(*(float32x2_t *)v48.f32, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(*(float32x2_t *)v48.f32, *(float32x2_t *)v48.f32))).f32[0]);
          v51.i32[3] = v76;
          float32x4_t v52 = vaddq_f32(*(float32x4_t *)(v16 + 16 * v22), v49);
          v52.i32[3] = v77;
          sub_1B6C323C0(v22, (float32x4_t *)(v16 + v34), v35, v42, v43, v29, v52, v51, 1.0);
        }
        float32x4_t v31 = v81;
        float32x4_t v30 = v83;
        float32x4_t v33 = v79;
        float32x4_t v32 = v80;
        _Q16 = v78;
        float32x4_t v53 = v85;
        v26.i32[3] = v87;
      }
      else
      {
        float32x4_t v53 = v27;
      }
      ++v22;
      ++v35;
      v34 += 16;
      float32x4_t v27 = v53;
    }
    while (v23 != v22);
  }
  sub_1B6BE6FF4((uint64_t)&v95, a5 | ((HIDWORD(a5) & 1) << 32), (void (*)(void *))sub_1B698C2C4);
  return sub_1B6894710((uint64_t)&v95);
}

uint64_t sub_1B6BE6BDC(long long *a1, long long *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, float a7, float32x4_t a8, int32x4_t a9, int32x4_t a10)
{
  uint64_t v14 = (uint64_t *)*((void *)a1 + 11);
  uint64_t v13 = *((void *)a1 + 12);
  uint64_t v15 = *((void *)a1 + 13);
  uint64_t v17 = *((void *)a1 + 1);
  uint64_t v16 = *((void *)a1 + 2);
  uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v14, v13, v15, v16);
  uint64_t v81 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v14, v13, v15, v16);
  uint64_t v67 = sub_1B67A819C();
  char v75 = v19;
  long long v86 = *a2;
  long long v90 = *(_OWORD *)(a3 + 192);
  long long v20 = a1[3];
  long long v96 = a1[2];
  long long v21 = *a1;
  long long v95 = a1[1];
  long long v94 = v21;
  long long v100 = a1[6];
  long long v22 = a1[4];
  long long v99 = a1[5];
  long long v98 = v22;
  float32x4_t v88 = &type metadata for CollisionProperties;
  float32x4_t v89 = &off_1F0F7C560;
  uint64_t v87 = *((void *)a2 + 2);
  uint64_t v23 = *(void *)(a4 + 16);
  long long v97 = v20;
  uint64_t v24 = *((void *)a1 + 6);
  uint64_t v25 = *((void *)a1 + 7);
  uint64_t v26 = *(void *)(v16 + 32);
  swift_retain();
  long long v101 = ecs_stack_allocator_allocate(v26, 8 * (v25 - v24), 8);
  uint64_t v102 = v25 - v24;
  uint64_t v103 = 0;
  sub_1B62C1550((uint64_t)&v86, (uint64_t)v91);
  float v92 = a7;
  v91[5] = v23;
  sub_1B6345398(*(void *)(v17 + 40), (uint64_t)&type metadata for Anchored, &v85);
  char v93 = v85;
  swift_retain();
  float32x4_t v27 = ecs_stack_allocator_allocate(v26, 80 * (v25 - v24), 16);
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v86);
  long long v104 = v27;
  uint64_t v105 = v25 - v24;
  uint64_t v106 = 0;
  if (v25 != v24)
  {
    int v31 = v75 & 1;
    float32x4_t v32 = *(float32x4_t *)a3;
    float32x4_t v33 = *(float32x4_t *)(a3 + 16);
    float32x4_t v34 = *(float32x4_t *)(a3 + 32);
    float32x4_t v35 = *(float32x4_t *)(a3 + 48);
    uint64_t v36 = 16 * v24;
    uint64_t v37 = (float32x4_t *)(v81 + 16 * v24);
    __asm { FMOV            V16.4S, #1.0 }
    float32x4_t v74 = v33;
    float32x4_t v76 = *(float32x4_t *)a3;
    float32x4_t v72 = v35;
    float32x4_t v73 = v34;
    float32x4_t v71 = _Q16;
    do
    {
      __int32 v57 = v28.i32[3];
      float32x4_t v58 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v35, v34, *(float32x4_t *)(v18 + 16 * v24), 2), v33, *(float32x2_t *)(v18 + 16 * v24), 1), v32, COERCE_FLOAT(*(_OWORD *)(v18 + 16 * v24)));
      float32x4_t v28 = vabsq_f32(v58);
      v28.i32[3] = v57;
      int32x4_t v59 = vcgtq_f32(_Q16, v28);
      int v60 = v59.i32[1];
      if (v59.i32[1] <= v59.i32[0]) {
        int v60 = v59.i32[0];
      }
      if (v59.i32[2] > v60) {
        int v60 = v59.i32[2];
      }
      if (v60 < 0)
      {
        v61.i64[0] = 0x3F0000003F000000;
        v61.i64[1] = 0x3F0000003F000000;
        __n128 v62 = (__n128)vaddq_f32(vmulq_f32(v58, v61), v61);
        v62.n128_u32[3] = v29.u32[3];
        __int32 v82 = v28.i32[3];
        float32x4_t v84 = (float32x4_t)v62;
        float v63 = sub_1B6D3A868(a6, v62, a8, a9, a10);
        if (v63 < 0.0)
        {
          float v64 = v63;
          *(double *)v65.i64 = sub_1B6D3AB08(a6, v84, a8, a9, a10);
          if (v31)
          {
            uint64_t v44 = 0;
            uint64_t v45 = 0;
          }
          else
          {
            uint64_t v43 = (uint64_t *)(v67 + 16 * v24);
            uint64_t v44 = *v43;
            uint64_t v45 = v43[1];
          }
          int32x4_t v46 = (int32x4_t)vmulq_f32(v65, v65);
          v46.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v46, 2), vadd_f32(*(float32x2_t *)v46.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v46.i8, 1))).u32[0];
          float32x2_t v47 = vrsqrte_f32((float32x2_t)v46.u32[0]);
          float32x2_t v48 = vmul_f32(v47, vrsqrts_f32((float32x2_t)v46.u32[0], vmul_f32(v47, v47)));
          float32x4_t v49 = vmulq_n_f32(vmulq_n_f32(v65, vmul_f32(v48, vrsqrts_f32((float32x2_t)v46.u32[0], vmul_f32(v48, v48))).f32[0]), fabsf(v64));
          float32x4_t v50 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(*(float32x4_t *)(a3 + 96), v49, 2), *(float32x4_t *)(a3 + 80), *(float32x2_t *)v49.f32, 1), *(float32x4_t *)(a3 + 64), v49.f32[0]);
          int32x4_t v51 = (int32x4_t)vmulq_f32(v50, v50);
          v51.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v51, 2), vadd_f32(*(float32x2_t *)v51.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v51.i8, 1))).u32[0];
          float32x2_t v52 = vrsqrte_f32((float32x2_t)v51.u32[0]);
          float32x2_t v53 = vmul_f32(v52, vrsqrts_f32((float32x2_t)v51.u32[0], vmul_f32(v52, v52)));
          float32x4_t v54 = vmulq_n_f32(v50, vmul_f32(v53, vrsqrts_f32((float32x2_t)v51.u32[0], vmul_f32(v53, v53))).f32[0]);
          v54.i32[3] = v69;
          float32x4_t v55 = vaddq_f32(*(float32x4_t *)(v18 + 16 * v24), v50);
          v55.i32[3] = v70;
          sub_1B6C323C0(v24, (float32x4_t *)(v18 + v36), v37, v44, v45, v31, v55, v54, 1.0);
        }
        float32x4_t v33 = v74;
        float32x4_t v32 = v76;
        float32x4_t v35 = v72;
        float32x4_t v34 = v73;
        _Q16 = v71;
        v28.i32[3] = v82;
        float32x4_t v56 = v84;
      }
      else
      {
        float32x4_t v56 = v29;
      }
      ++v24;
      ++v37;
      v36 += 16;
      float32x4_t v29 = v56;
    }
    while (v25 != v24);
  }
  sub_1B6BE6FF4((uint64_t)&v90, a5 | ((HIDWORD(a5) & 1) << 32), (void (*)(void *))sub_1B698C2C4);
  return sub_1B6894710((uint64_t)&v90);
}

uint64_t sub_1B6BE6FF4(uint64_t a1, unint64_t a2, void (*a3)(void *))
{
  uint64_t v5 = sub_1B6894764(a1, (uint64_t)v11);
  if (v11[28])
  {
    MEMORY[0x1F4188790](v5, v11[7]);
    _OWORD v10[2] = v11;
    sub_1B6B2150C(0, v6, 1, a2 | ((HIDWORD(a2) & 1) << 32), v7, a3, (uint64_t)v10, v8);
    ecs_stack_allocator_deallocate(*(void **)(v11[11] + 32), v11[26], 80 * v11[27]);
  }
  sub_1B6C33184(v11);
  return sub_1B6894710((uint64_t)v11);
}

uint64_t *sub_1B6BE70C4(int a1, uint64_t a2, void **a3, float a4, float a5, float a6, float a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11)
{
  if (qword_1E9DCC6C0 != -1) {
    swift_once();
  }
  v257[0] = xmmword_1E9E49758;
  v257[1] = unk_1E9E49768;
  uint64_t v258 = qword_1E9E49778;
  long long v17 = *((_OWORD *)a3 + 5);
  v254[3] = *((_OWORD *)a3 + 6);
  long long v18 = *((_OWORD *)a3 + 8);
  v254[4] = *((_OWORD *)a3 + 7);
  v254[5] = v18;
  long long v19 = *((_OWORD *)a3 + 2);
  long long v252 = *((_OWORD *)a3 + 1);
  long long v253 = v19;
  long long v20 = *((_OWORD *)a3 + 4);
  uint64_t v198 = a3;
  v254[0] = *((_OWORD *)a3 + 3);
  v254[1] = v20;
  v254[2] = v17;
  sub_1B62EA708((uint64_t)v254 + 8, (uint64_t)v255);
  sub_1B62EA708((uint64_t)v255, (uint64_t)&v259);
  if (v260) {
    uint64_t v21 = 0x200000000;
  }
  else {
    uint64_t v21 = v259;
  }
  sub_1B62C9DA8(a2, (uint64_t)v257, v21, v242);
  double result = (uint64_t *)sub_1B62D7D78((uint64_t)v242, (uint64_t)v243, (uint64_t)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
  if (*(void *)&v243[0])
  {
    if (v249 >= 1)
    {
      uint64_t v211 = v246;
      if (v246)
      {
        uint64_t v220 = v248[4];
        int v219 = *(unsigned __int8 *)(v247 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v250[0] = v243[0];
        v250[1] = v243[1];
        uint64_t v209 = v245;
        uint64_t v210 = (uint64_t)(v248 + 6);
        uint64_t v251 = v244;
        uint64_t v177 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
        uint64_t v23 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v200 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
        uint64_t v221 = v248;
        uint64_t v208 = v248 + 8;
        float v179 = a7 * 0.5;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v24 = 0;
        uint64_t v199 = a2;
        float32x4_t v212 = v23;
        while (1)
        {
          uint64_t v25 = (unsigned int *)(v209 + 48 * v24);
          uint64_t v26 = *v25;
          uint64_t v214 = v25[1];
          float32x4_t v28 = (uint64_t *)*((void *)v25 + 2);
          uint64_t v27 = *((void *)v25 + 3);
          uint64_t v29 = *((void *)v25 + 5);
          uint64_t v222 = *((void *)v25 + 4);
          uint64_t v218 = v24;
          if (v219)
          {
            float32x4_t v30 = *(os_unfair_lock_s **)(v29 + 376);
            swift_retain();
            os_unfair_lock_lock(v30);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v220);
          sub_1B62D7D78(v210, (uint64_t)v256, (uint64_t)&qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
          uint64_t v31 = v221[4];
          uint64_t v32 = *(void *)(*(void *)(*(void *)(*(void *)(v29 + 40) + 16) + 32) + 16) + 1;
          uint64_t v225 = v29;
          swift_retain();
          v221[6] = ecs_stack_allocator_allocate(v31, 48 * v32, 8);
          v221[7] = v32;
          v208[1] = 0;
          v208[2] = 0;
          void *v208 = 0;
          swift_release();
          uint64_t v226 = sub_1B62C9024((uint64_t)&type metadata for ParticleSDFCollider, (uint64_t)&off_1F0F7DEA0, v28, v27, v222, (uint64_t)v221);
          uint64_t v213 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v28, v27, v222, (uint64_t)v221);
          uint64_t v33 = sub_1B62C9024((uint64_t)&type metadata for LastFrameWorldTransform, (uint64_t)&off_1F0F8F498, v28, v27, v222, (uint64_t)v221);
          if (v28)
          {
            if (!v222) {
              goto LABEL_165;
            }
            uint64_t v34 = v222;
            uint64_t v203 = v33;
            uint64_t v35 = 0;
            uint64_t v36 = v226;
            while (2)
            {
              uint64_t v39 = v36 + 32 * v35;
              uint64_t v40 = *(unsigned int *)(v39 + 28);
              uint64_t v41 = *(int *)(v39 + 24);
              BOOL v42 = v41 == -1 && v40 == 0;
              if (v42
                || (v41 & 0x80000000) != 0
                || v23[1] <= v41
                || (v40 != -1 ? (BOOL v43 = *(_DWORD *)(*v23 + 12 * (int)v41 + 8) == v40) : (BOOL v43 = 1),
                    v43
                 && (uint64_t v44 = *(void *)(*(void *)(*(void *)(a2 + 80)
                                                 + 8 * *(__int16 *)(*v23 + 12 * (int)v41 + 6)
                                                 + 32)
                                     + 16),
                     uint64_t v45 = *(void *)(v44 + 128),
                     *(void *)(v45 + 16))
                 && (v46 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), uint64_t v36 = v226, (v47 & 1) != 0)
                 && *(ValueMetadata **)(*(void *)(v44 + 24) + 16 * *(void *)(*(void *)(v45 + 56) + 8 * v46) + 32) == &type metadata for Tombstone
                 || ((uint64_t v48 = *v23 + 12 * (int)v41, v40 != -1)
                   ? (BOOL v49 = *(_DWORD *)(v48 + 8) == v40)
                   : (BOOL v49 = 1),
                     !v49)))
              {
LABEL_20:
                if (++v35 == v34) {
                  goto LABEL_164;
                }
                continue;
              }
              break;
            }
            uint64_t v50 = *(__int16 *)(v48 + 4);
            uint64_t v51 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v23 + 12 * (int)v41) + 32);
            uint64_t v52 = *(void *)(v51 + 48);
            uint64_t v53 = *(void *)(v52 + 16);
            if (v53)
            {
              float32x4_t v54 = (void *)(v52 + 56);
              while ((ValueMetadata *)*(v54 - 3) != &type metadata for TextureGPURuntime)
              {
                v54 += 5;
                if (!--v53) {
                  goto LABEL_44;
                }
              }
              float32x4_t v71 = *(void **)(*(void *)(v51 + 128) + *v54 + 8 * v50);
              if (v71)
              {
                swift_unknownObjectRetain();
                goto LABEL_59;
              }
            }
            else
            {
LABEL_44:
              uint64_t v55 = v41;
              if (*(void *)(v51 + 232) <= v50 && *(void *)(v51 + 240) > v50)
              {
                uint64_t v57 = **(void **)(a2 + v200);
                float32x4_t v58 = *(os_unfair_lock_s **)(v51 + 344);
                swift_retain();
                os_unfair_lock_lock(v58);
                uint64_t v215 = v57;
                uint64_t v59 = *(void *)(v57 + 32);
                ecs_stack_allocator_push_snapshot(v59);
                uint64_t v60 = *(void *)(*(void *)(v51 + 40) + 16);
                uint64_t v61 = *(void *)(v60 + 128);
                if (*(void *)(v61 + 16)
                  && (unint64_t v62 = sub_1B62C1A30((uint64_t)&type metadata for TextureLoadingOptions), (v63 & 1) != 0)
                  && *(ValueMetadata **)(*(void *)(v60 + 24) + 16 * *(void *)(*(void *)(v61 + 56) + 8 * v62) + 32) == &type metadata for TextureLoadingOptions)
                {
                  swift_retain();
                  a2 = v199;
                  uint64_t v23 = v212;
                  uint64_t v55 = v41;
                }
                else
                {
                  swift_retain();
                  float v64 = ecs_stack_allocator_allocate(v59, 8, 8);
                  float32x4_t v65 = v64;
                  *float v64 = v50;
                  uint64_t v66 = *(void *)(v51 + 192);
                  if (v66) {
                    sub_1B6BFB238(v64, 1, 1, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 1, v66, *(void *)(v51 + 200), *(void *)(v51 + 208));
                  }
                  sub_1B6BFB510(*(void *)(v51 + 40), v51, v65, 1, 1);
                  int v67 = *(_DWORD *)(v51 + 24);
                  swift_retain();
                  v232.i64[0] = 0;
                  long long v230 = 0u;
                  simd_float4 v231 = 0u;
                  uint64_t v229 = 0;
                  long long v227 = 0u;
                  long long v228 = 0u;
                  int v68 = sub_1B637F628(v67, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 0, 0, (uint64_t)&v230, (uint64_t)&v227);
                  swift_release();
                  sub_1B6386458((uint64_t)&v227);
                  sub_1B6386458((uint64_t)&v230);
                  uint64_t v23 = v212;
                  if ((uint64_t)(*(void *)(v51 + 240) - *(void *)(v51 + 232)) < 2)
                  {
                    if (sub_1B63B4340(v68))
                    {
                      sub_1B66603E4(v68);
                    }
                    else
                    {
                      uint64_t v89 = *(void *)(v51 + 232);
                      uint64_t v90 = *(void *)(v51 + 240);
                      char v91 = *(unsigned char *)(v51 + 120);
                      uint64_t v92 = *(unsigned int *)(v51 + 28);
                      LOBYTE(v230) = *(unsigned char *)(v51 + 32);
                      sub_1B628EEF4(v89, v90, v68, v91, v92 | ((unint64_t)v230 << 32));
                    }
                  }
                  else
                  {
                    int v69 = *(unsigned __int8 *)(v51 + 120);
                    uint64_t v70 = *(unsigned int *)(v51 + 28);
                    LOBYTE(v230) = *(unsigned char *)(v51 + 32);
                    sub_1B6BF2AEC(v65, 1, 1, v68, v69, v70 | ((unint64_t)v230 << 32), 0, 0);
                  }
                  uint64_t v55 = v41;
                  a2 = v199;
                }
                sub_1B6BF06F4(v55 | (v40 << 32), a2);
                swift_release();
                ecs_stack_allocator_pop_snapshot(*(void *)(v215 + 32));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v51 + 344));
                swift_release();
                uint64_t v36 = v226;
              }
              uint64_t v93 = v23[1];
              uint64_t v34 = v222;
              if (v93 > v41)
              {
                uint64_t v94 = *v23 + 12 * (int)v41;
                uint64_t v95 = *(__int16 *)(v94 + 4);
                if (v40 == -1 || *(_DWORD *)(v94 + 8) == v40)
                {
                  uint64_t v96 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v23 + 12 * (int)v41) + 32);
                  uint64_t v97 = *(void *)(v96 + 48);
                  uint64_t v98 = *(void *)(v97 + 16);
                  if (v98)
                  {
                    long long v99 = (void *)(v97 + 56);
                    while ((ValueMetadata *)*(v99 - 3) != &type metadata for TextureLoadPolicy)
                    {
                      v99 += 5;
                      if (!--v98) {
                        goto LABEL_79;
                      }
                    }
                    if (*(unsigned char *)(*(void *)(v96 + 128) + *v99 + 4 * v95 + 1) == 1)
                    {
                      sub_1B62E364C((uint64_t)&type metadata for TextureLoadRequestGPU, (uint64_t)&off_1F0F8B818, v55 | (v40 << 32));
                      uint64_t v36 = v226;
                      uint64_t v93 = v23[1];
                    }
                  }
                }
              }
LABEL_79:
              if (v93 <= v41) {
                goto LABEL_20;
              }
              uint64_t v100 = *v23 + 12 * (int)v41;
              uint64_t v101 = *(__int16 *)(v100 + 4);
              if (v40 != -1 && *(_DWORD *)(v100 + 8) != v40) {
                goto LABEL_20;
              }
              uint64_t v102 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v23 + 12 * (int)v41) + 32);
              uint64_t v103 = *(void *)(v102 + 48);
              uint64_t v104 = *(void *)(v103 + 16);
              if (!v104) {
                goto LABEL_20;
              }
              uint64_t v105 = (void *)(v103 + 56);
              while ((ValueMetadata *)*(v105 - 3) != &type metadata for TextureLoadPolicy)
              {
                v105 += 5;
                if (!--v104) {
                  goto LABEL_20;
                }
              }
              uint64_t v106 = *(void *)(a2 + v177);
              if (!v106) {
                goto LABEL_20;
              }
              switch(*(unsigned char *)(*(void *)(v102 + 128) + *v105 + 4 * v101 + 2))
              {
                case 1:
                  uint64_t v109 = *(void *)(v106 + 240);
                  swift_retain();
                  uint64_t v108 = sub_1B6BCB190(0xD000000000000015, 0x80000001B6F45BA0, v109, v106);
                  break;
                case 3:
                  uint64_t v110 = *(void *)(v106 + 240);
                  swift_retain();
                  uint64_t v108 = sub_1B6BCB1A8(0x47746C7561666544, 0xEE00786554796572, v110, v106);
                  break;
                default:
                  uint64_t v107 = *(void *)(v106 + 240);
                  swift_retain();
                  uint64_t v108 = sub_1B6BCB178(0x42746C7561666544, 0xEF7865546B63616CLL, v107, v106);
                  break;
              }
              float32x4_t v71 = v108;
              swift_release();
LABEL_59:
              uint64_t v72 = v226 + 32 * v35;
              if ((*(_DWORD *)(v72 + 20) & a1) != 0)
              {
                float32x4_t v73 = (float32x2_t *)(v213 + (v35 << 6));
                float32x4_t v74 = (float32x2_t *)(v203 + (v35 << 6));
                *(float *)&unsigned int v75 = fminf(fmaxf(*(float *)(v72 + 8) + a5, 0.0), 1.0);
                float v76 = 1.0 - fminf(fmaxf(*(float *)(v72 + 12) + a6, 0.0), 1.0);
                float v77 = fminf(fmaxf(*(float *)(v72 + 4) + a4, 0.0), 1.0);
                v261.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v73->f32)), a9, *v73, 1), a10, *(float32x4_t *)v73->f32, 2), a11, *(float32x4_t *)v73->f32, 3);
                simd_float4 v205 = v261.columns[0];
                v261.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v73[2].f32)), a9, v73[2], 1), a10, *(float32x4_t *)v73[2].f32, 2), a11, *(float32x4_t *)v73[2].f32, 3);
                simd_float4 v201 = v261.columns[1];
                v261.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v73[4].f32)), a9, v73[4], 1), a10, *(float32x4_t *)v73[4].f32, 2), a11, *(float32x4_t *)v73[4].f32, 3);
                float32x4_t v188 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v73[6].f32)), a9, v73[6], 1), a10, *(float32x4_t *)v73[6].f32, 2), a11, *(float32x4_t *)v73[6].f32, 3);
                simd_float4 v190 = v261.columns[2];
                v261.columns[3] = (simd_float4)v188;
                float32x4_t v216 = vsubq_f32(vaddq_f32(v188, vmlaq_f32(vmlaq_f32(vmulq_f32((float32x4_t)v261.columns[0], (float32x4_t)0), (float32x4_t)0, (float32x4_t)v261.columns[1]), (float32x4_t)0, (float32x4_t)v261.columns[2])), vaddq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v74[6].f32)), a9, v74[6], 1), a10, *(float32x4_t *)v74[6].f32, 2), a11, *(float32x4_t *)v74[6].f32, 3),
                           vmlaq_f32(vmlaq_f32(vmulq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v74->f32)), a9, *v74, 1), a10, *(float32x4_t *)v74->f32, 2), a11, *(float32x4_t *)v74->f32, 3), (float32x4_t)0), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v74[2].f32)), a9, v74[2], 1), a10, *(float32x4_t *)v74[2].f32, 2),
                                 a11,
                                 *(float32x4_t *)v74[2].f32,
                                 3)),
                             (float32x4_t)0,
                             vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v74[4].f32)), a9, v74[4], 1), a10, *(float32x4_t *)v74[4].f32, 2), a11, *(float32x4_t *)v74[4].f32, 3))));
                simd_float4x4 v262 = __invert_f4(v261);
                simd_float4 v184 = v262.columns[1];
                simd_float4 v186 = v262.columns[0];
                simd_float4 v180 = v262.columns[3];
                simd_float4 v182 = v262.columns[2];
                v262.columns[1] = (simd_float4)v216;
                v262.columns[1].i32[3] = v192;
                simd_float4 v217 = v262.columns[1];
                sub_1B6A81254();
                *(void *)&long long v230 = __PAIR64__(v75, v78);
                *((float *)&v230 + 2) = v76;
                simd_float4 v231 = v186;
                simd_float4 v232 = v184;
                simd_float4 v233 = v182;
                simd_float4 v234 = v180;
                simd_float4 v235 = v205;
                simd_float4 v236 = v201;
                simd_float4 v237 = v190;
                float32x4_t v238 = v188;
                simd_float4 v239 = v217;
                float v240 = v77;
                float v241 = v179;
                float32x4_t v79 = *v198;
                if (*v198)
                {
                  uint64_t ObjectType = swift_getObjectType();
                  type metadata accessor for particle_sdf_collider_uniforms(0);
                  sub_1B6B594A8((uint64_t)&v230, 1, ObjectType, v81, v82, v83, v84, v85);
                  objc_msgSend(v79, sel_setTexture_atIndex_, v71, 0);
                }
                char v86 = v79 == 0;
                uint64_t v87 = v252;
                swift_retain();
                uint64_t v88 = *(void *)&v254[0];
                sub_1B6786A24((uint64_t)v198);
                sub_1B6BFF388(v88, v87, v86, 0, (uint64_t)v198, 0xD000000000000018, 0x80000001B6F4D040, 0);
                sub_1B6786A7C((uint64_t)v198);
                swift_release();
                __int32 v192 = v217.i32[3];
              }
              swift_unknownObjectRelease();
              uint64_t v36 = v226;
            }
            uint64_t v34 = v222;
            goto LABEL_20;
          }
          uint64_t v37 = v214;
          if (v26 == v214) {
            goto LABEL_165;
          }
          uint64_t v204 = v33;
          uint64_t v38 = v226;
          do
          {
            uint64_t v111 = v38 + 32 * v26;
            uint64_t v112 = *(unsigned int *)(v111 + 28);
            uint64_t v113 = *(int *)(v111 + 24);
            BOOL v114 = v113 == -1 && v112 == 0;
            if (v114 || (v113 & 0x80000000) != 0 || v23[1] <= v113) {
              goto LABEL_95;
            }
            if (v112 == -1 || *(_DWORD *)(*v23 + 12 * (int)v113 + 8) == v112)
            {
              uint64_t v116 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(*v23 + 12 * (int)v113 + 6) + 32)
                               + 16);
              uint64_t v117 = *(void *)(v116 + 128);
              if (*(void *)(v117 + 16))
              {
                unint64_t v118 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone);
                uint64_t v38 = v226;
                if ((v119 & 1) != 0
                  && *(ValueMetadata **)(*(void *)(v116 + 24)
                                       + 16 * *(void *)(*(void *)(v117 + 56) + 8 * v118)
                                       + 32) == &type metadata for Tombstone)
                {
                  goto LABEL_95;
                }
              }
            }
            uint64_t v120 = *v23 + 12 * (int)v113;
            if (v112 != -1 && *(_DWORD *)(v120 + 8) != v112) {
              goto LABEL_95;
            }
            uint64_t v122 = *(__int16 *)(v120 + 4);
            uint64_t v123 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v23 + 12 * (int)v113) + 32);
            uint64_t v124 = *(void *)(v123 + 48);
            uint64_t v125 = *(void *)(v124 + 16);
            if (v125)
            {
              uint64_t v126 = (void *)(v124 + 56);
              while ((ValueMetadata *)*(v126 - 3) != &type metadata for TextureGPURuntime)
              {
                v126 += 5;
                if (!--v125) {
                  goto LABEL_119;
                }
              }
              uint64_t v148 = *(void **)(*(void *)(v123 + 128) + *v126 + 8 * v122);
              if (!v148)
              {
                uint64_t v23 = v212;
                goto LABEL_95;
              }
              swift_unknownObjectRetain();
              goto LABEL_142;
            }
LABEL_119:
            uint64_t v127 = v113;
            if (*(void *)(v123 + 232) <= v122 && *(void *)(v123 + 240) > v122)
            {
              uint64_t v129 = **(void **)(a2 + v200);
              id v130 = *(os_unfair_lock_s **)(v123 + 344);
              swift_retain();
              os_unfair_lock_lock(v130);
              uint64_t v206 = v129;
              uint64_t v131 = *(void *)(v129 + 32);
              ecs_stack_allocator_push_snapshot(v131);
              uint64_t v132 = *(void *)(*(void *)(v123 + 40) + 16);
              uint64_t v133 = *(void *)(v132 + 128);
              if (*(void *)(v133 + 16)
                && (unint64_t v134 = sub_1B62C1A30((uint64_t)&type metadata for TextureLoadingOptions), (v135 & 1) != 0)
                && *(ValueMetadata **)(*(void *)(v132 + 24)
                                     + 16 * *(void *)(*(void *)(v133 + 56) + 8 * v134)
                                     + 32) == &type metadata for TextureLoadingOptions)
              {
                swift_retain();
              }
              else
              {
                swift_retain();
                uint64_t v136 = ecs_stack_allocator_allocate(v131, 8, 8);
                id v137 = v136;
                uint64_t *v136 = v122;
                uint64_t v138 = *(void *)(v123 + 192);
                if (v138) {
                  sub_1B6BFB238(v136, 1, 1, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 1, v138, *(void *)(v123 + 200), *(void *)(v123 + 208));
                }
                sub_1B6BFB510(*(void *)(v123 + 40), v123, v137, 1, 1);
                int v139 = *(_DWORD *)(v123 + 24);
                swift_retain();
                v232.i64[0] = 0;
                long long v230 = 0u;
                simd_float4 v231 = 0u;
                uint64_t v229 = 0;
                long long v227 = 0u;
                long long v228 = 0u;
                signed int v140 = sub_1B637F628(v139, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 0, 0, (uint64_t)&v230, (uint64_t)&v227);
                swift_release();
                sub_1B6386458((uint64_t)&v227);
                sub_1B6386458((uint64_t)&v230);
                sub_1B63B325C(v137, 1, 1, v140);
              }
              a2 = v199;
              uint64_t v127 = v113;
              sub_1B6BF06F4(v113 | (unint64_t)(v112 << 32), v199);
              swift_release();
              uint64_t v37 = v214;
              ecs_stack_allocator_pop_snapshot(*(void *)(v206 + 32));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v123 + 344));
              swift_release();
              uint64_t v38 = v226;
            }
            uint64_t v23 = v212;
            uint64_t v141 = v212[1];
            if (v141 > v113)
            {
              uint64_t v142 = *v212 + 12 * (int)v113;
              uint64_t v143 = *(__int16 *)(v142 + 4);
              if (v112 == -1 || *(_DWORD *)(v142 + 8) == v112)
              {
                uint64_t v144 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v212 + 12 * (int)v113) + 32);
                uint64_t v145 = *(void *)(v144 + 48);
                uint64_t v146 = *(void *)(v145 + 16);
                if (v146)
                {
                  uint64_t v147 = (void *)(v145 + 56);
                  while ((ValueMetadata *)*(v147 - 3) != &type metadata for TextureLoadPolicy)
                  {
                    v147 += 5;
                    if (!--v146) {
                      goto LABEL_149;
                    }
                  }
                  if (*(unsigned char *)(*(void *)(v144 + 128) + *v147 + 4 * v143 + 1) == 1)
                  {
                    sub_1B62E364C((uint64_t)&type metadata for TextureLoadRequestGPU, (uint64_t)&off_1F0F8B818, v127 | (v112 << 32));
                    uint64_t v38 = v226;
                    uint64_t v141 = v212[1];
                  }
                }
              }
            }
LABEL_149:
            if (v141 > v113)
            {
              uint64_t v166 = *v212 + 12 * (int)v113;
              uint64_t v167 = *(__int16 *)(v166 + 4);
              if (v112 == -1 || *(_DWORD *)(v166 + 8) == v112)
              {
                uint64_t v168 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v212 + 12 * (int)v113) + 32);
                uint64_t v169 = *(void *)(v168 + 48);
                uint64_t v170 = *(void *)(v169 + 16);
                if (v170)
                {
                  uint64_t v171 = (void *)(v169 + 56);
                  while ((ValueMetadata *)*(v171 - 3) != &type metadata for TextureLoadPolicy)
                  {
                    v171 += 5;
                    if (!--v170) {
                      goto LABEL_95;
                    }
                  }
                  uint64_t v172 = *(void *)(a2 + v177);
                  if (v172)
                  {
                    switch(*(unsigned char *)(*(void *)(v168 + 128) + *v171 + 4 * v167 + 2))
                    {
                      case 1:
                        uint64_t v175 = *(void *)(v172 + 240);
                        swift_retain();
                        uint64_t v174 = sub_1B6BCB190(0xD000000000000015, 0x80000001B6F45BA0, v175, v172);
                        break;
                      case 3:
                        uint64_t v176 = *(void *)(v172 + 240);
                        swift_retain();
                        uint64_t v174 = sub_1B6BCB1A8(0x47746C7561666544, 0xEE00786554796572, v176, v172);
                        break;
                      default:
                        uint64_t v173 = *(void *)(v172 + 240);
                        swift_retain();
                        uint64_t v174 = sub_1B6BCB178(0x42746C7561666544, 0xEF7865546B63616CLL, v173, v172);
                        break;
                    }
                    uint64_t v148 = v174;
                    swift_release();
LABEL_142:
                    uint64_t v149 = v226 + 32 * v26;
                    if ((*(_DWORD *)(v149 + 20) & a1) != 0)
                    {
                      uint64_t v150 = (float32x2_t *)(v213 + (v26 << 6));
                      uint64_t v151 = (float32x2_t *)(v204 + (v26 << 6));
                      *(float *)&unsigned int v152 = fminf(fmaxf(*(float *)(v149 + 8) + a5, 0.0), 1.0);
                      float v153 = 1.0 - fminf(fmaxf(*(float *)(v149 + 12) + a6, 0.0), 1.0);
                      float v154 = fminf(fmaxf(*(float *)(v149 + 4) + a4, 0.0), 1.0);
                      v263.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v150->f32)), a9, *v150, 1), a10, *(float32x4_t *)v150->f32, 2), a11, *(float32x4_t *)v150->f32, 3);
                      simd_float4 v207 = v263.columns[0];
                      v263.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v150[2].f32)), a9, v150[2], 1), a10, *(float32x4_t *)v150[2].f32, 2), a11, *(float32x4_t *)v150[2].f32, 3);
                      simd_float4 v202 = v263.columns[1];
                      v263.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v150[4].f32)), a9, v150[4], 1), a10, *(float32x4_t *)v150[4].f32, 2), a11, *(float32x4_t *)v150[4].f32, 3);
                      float32x4_t v189 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v150[6].f32)), a9, v150[6], 1), a10, *(float32x4_t *)v150[6].f32, 2), a11, *(float32x4_t *)v150[6].f32, 3);
                      simd_float4 v191 = v263.columns[2];
                      v263.columns[3] = (simd_float4)v189;
                      float32x4_t v223 = vsubq_f32(vaddq_f32(v189, vmlaq_f32(vmlaq_f32(vmulq_f32((float32x4_t)v263.columns[0], (float32x4_t)0), (float32x4_t)0, (float32x4_t)v263.columns[1]), (float32x4_t)0, (float32x4_t)v263.columns[2])), vaddq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v151[6].f32)), a9, v151[6], 1), a10, *(float32x4_t *)v151[6].f32,
                                     2),
                                   a11,
                                   *(float32x4_t *)v151[6].f32,
                                   3),
                                 vmlaq_f32(vmlaq_f32(vmulq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v151->f32)), a9, *v151, 1), a10, *(float32x4_t *)v151->f32, 2), a11, *(float32x4_t *)v151->f32, 3), (float32x4_t)0), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(
                                         vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v151[2].f32)), a9, v151[2], 1), a10, *(float32x4_t *)v151[2].f32, 2), a11, *(float32x4_t *)v151[2].f32, 3)), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a8, COERCE_FLOAT(*(_OWORD *)v151[4].f32)), a9, v151[4], 1), a10,
                                       *(float32x4_t *)v151[4].f32,
                                       2),
                                     a11,
                                     *(float32x4_t *)v151[4].f32,
                                     3))));
                      simd_float4x4 v264 = __invert_f4(v263);
                      simd_float4 v185 = v264.columns[1];
                      simd_float4 v187 = v264.columns[0];
                      simd_float4 v181 = v264.columns[3];
                      simd_float4 v183 = v264.columns[2];
                      v264.columns[1] = (simd_float4)v223;
                      v264.columns[1].i32[3] = v178;
                      simd_float4 v224 = v264.columns[1];
                      sub_1B6A81254();
                      *(void *)&long long v230 = __PAIR64__(v152, v155);
                      *((float *)&v230 + 2) = v153;
                      simd_float4 v231 = v187;
                      simd_float4 v232 = v185;
                      simd_float4 v233 = v183;
                      simd_float4 v234 = v181;
                      simd_float4 v235 = v207;
                      simd_float4 v236 = v202;
                      simd_float4 v237 = v191;
                      float32x4_t v238 = v189;
                      simd_float4 v239 = v224;
                      float v240 = v154;
                      float v241 = v179;
                      __int16 v156 = *v198;
                      if (*v198)
                      {
                        uint64_t v157 = swift_getObjectType();
                        type metadata accessor for particle_sdf_collider_uniforms(0);
                        sub_1B6B594A8((uint64_t)&v230, 1, v157, v158, v159, v160, v161, v162);
                        objc_msgSend(v156, sel_setTexture_atIndex_, v148, 0);
                      }
                      char v163 = v156 == 0;
                      uint64_t v164 = v252;
                      swift_retain();
                      uint64_t v165 = *(void *)&v254[0];
                      sub_1B6786A24((uint64_t)v198);
                      sub_1B6BFF388(v165, v164, v163, 0, (uint64_t)v198, 0xD000000000000018, 0x80000001B6F4D040, 0);
                      sub_1B6786A7C((uint64_t)v198);
                      swift_release();
                      __int32 v178 = v224.i32[3];
                    }
                    swift_unknownObjectRelease();
                    uint64_t v23 = v212;
                    uint64_t v38 = v226;
                  }
                }
              }
            }
LABEL_95:
            ++v26;
          }
          while (v26 != v37);
LABEL_164:
          uint64_t v29 = v225;
LABEL_165:
          sub_1B6345178(v221, (unsigned __int16 **)v250, (uint64_t)v256);
          sub_1B634507C((char *)v29);
          ecs_stack_allocator_pop_snapshot(v220);
          if (v219)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 376));
          }
          swift_release();
          uint64_t v24 = v218 + 1;
          if (v218 + 1 == v211)
          {
            sub_1B632F170(v242);
            return sub_1B632F170(v242);
          }
        }
      }
    }
    return sub_1B632F170(v242);
  }
  return result;
}

uint64_t *sub_1B6BE8624(uint64_t *result, float32x2_t *a2, float32x2_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, float a7)
{
  uint64_t v329 = *MEMORY[0x1E4F143B8];
  int v7 = *(_DWORD *)(a4 + 84) & *((_DWORD *)result + 5);
  if (v7)
  {
    uint64_t v12 = result;
    float v13 = *((float *)result + 4) + *(float *)(a4 + 80);
    float v14 = fminf(fmaxf(*((float *)result + 3) + *(float *)(a4 + 76), 0.0), 1.0);
    float v15 = fminf(fmaxf(*((float *)result + 2) + *(float *)(a4 + 72), 0.0), 1.0);
    __asm { FMOV            V4.2S, #1.0 }
    *(float32x2_t *)&long long v259 = vminnm_f32(vmaxnm_f32(vadd_f32(*(float32x2_t *)result, *(float32x2_t *)(a4 + 64)), 0), _D4);
    *((float *)&v259 + 2) = v15;
    *((float *)&v259 + 3) = 1.0 - v14;
    float v260 = v13;
    int v261 = v7;
    float32x4_t v20 = *(float32x4_t *)a3[4].f32;
    float32x4_t v21 = *(float32x4_t *)a3[6].f32;
    float32x4_t v22 = *(float32x4_t *)(a4 + 96);
    float32x4_t v23 = *(float32x4_t *)(a4 + 112);
    float32x4_t v24 = *(float32x4_t *)(a4 + 128);
    float32x4_t v25 = *(float32x4_t *)(a4 + 144);
    float32x4_t v26 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)a2->f32)), v23, *a2, 1), v24, *(float32x4_t *)a2->f32, 2), v25, *(float32x4_t *)a2->f32, 3);
    float32x4_t v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)a2[2].f32)), v23, a2[2], 1), v24, *(float32x4_t *)a2[2].f32, 2), v25, *(float32x4_t *)a2[2].f32, 3);
    float32x4_t v28 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)a2[4].f32)), v23, a2[4], 1), v24, *(float32x4_t *)a2[4].f32, 2), v25, *(float32x4_t *)a2[4].f32, 3);
    float32x4_t v224 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)a2[6].f32)), v23, a2[6], 1), v24, *(float32x4_t *)a2[6].f32, 2), v25, *(float32x4_t *)a2[6].f32, 3);
    float32x4_t v255 = vsubq_f32(vaddq_f32(v224, vmlaq_f32(vmlaq_f32(vmulq_f32(v26, (float32x4_t)0), (float32x4_t)0, v27), (float32x4_t)0, v28)), vaddq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v21.f32[0]), v23, *(float32x2_t *)v21.f32, 1), v24, v21, 2), v25, v21, 3), vmlaq_f32(vmlaq_f32(vmulq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)a3->f32)), v23, *a3, 1),
                         v24,
                         *(float32x4_t *)a3->f32,
                         2),
                       v25,
                       *(float32x4_t *)a3->f32,
                       3),
                     (float32x4_t)0),
                   (float32x4_t)0,
                   vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)a3[2].f32)), v23, a3[2], 1), v24, *(float32x4_t *)a3[2].f32, 2), v25, *(float32x4_t *)a3[2].f32, 3)), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v20.f32[0]), v23, *(float32x2_t *)v20.f32, 1), v24, v20, 2), v25, v20, 3))));
    float32x4_t v29 = vmulq_f32(v26, v26);
    float32x4_t v30 = vmulq_f32(v27, v27);
    float32x4_t v31 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2);
    float32x4_t v32 = vmulq_f32(v28, v28);
    float v216 = sqrtf(vaddq_f32(v31, vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0]);
    float v220 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v29, 2), vaddq_f32(v29, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.f32, 1))).f32[0]);
    *(void *)&long long v33 = __PAIR64__(LODWORD(v216), LODWORD(v220));
    *((void *)&v33 + 1) = COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).f32[0]));
    long long v248 = v33;
    int32x4_t v34 = vzip2q_s32((int32x4_t)v29, (int32x4_t)v32);
    float32x4_t v35 = (float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)v29, (int32x4_t)v32), (int32x4_t)v30);
    float32x4_t v36 = (float32x4_t)vtrn2q_s32((int32x4_t)v29, (int32x4_t)v30);
    v36.i32[2] = v32.i32[1];
    float32x4_t v37 = vaddq_f32((float32x4_t)vzip1q_s32(v34, (int32x4_t)v31), vaddq_f32(v35, v36));
    __asm { FMOV            V1.4S, #1.0 }
    int32x4_t v39 = vceqzq_f32(v37);
    v39.i32[3] = 0;
    float32x4_t v40 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v39), (int8x16_t)v37, (int8x16_t)vdivq_f32(_Q1, v37));
    float32x4_t v232 = v27;
    float32x4_t v236 = v26;
    v330.columns[1] = (simd_float4)v27;
    float32x4_t v240 = vmulq_lane_f32(v27, *(float32x2_t *)v40.f32, 1);
    float32x4_t v244 = vmulq_n_f32(v26, v40.f32[0]);
    v330.columns[2] = (simd_float4)v28;
    float32x4_t v228 = v28;
    float32x4_t v238 = vmulq_laneq_f32(v28, v40, 2);
    v330.columns[0] = (simd_float4)v26;
    v330.columns[3] = (simd_float4)v224;
    simd_float4x4 v262 = __invert_f4(v330);
    float32x4_t v263 = v236;
    float32x4_t v264 = v232;
    float32x4_t v265 = v228;
    float32x4_t v266 = v224;
    float32x4_t v267 = v244;
    float32x4_t v268 = v240;
    float32x4_t v269 = v238;
    float32x4_t v270 = v224;
    float32x4_t v271 = v255;
    BOOL v41 = (a5 & 0xFE00000000) != 0;
    long long v272 = v248;
    if ((a5 & 0xFE00000000) != 0) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = a5;
    }
    uint64_t v239 = v42;
    if (!a5) {
      BOOL v41 = 1;
    }
    BOOL v237 = v41;
    unint64_t v43 = v12[3];
    sub_1B6CEE8E8(v43, v279);
    sub_1B62D7D78((uint64_t)v279, (uint64_t)v299, (uint64_t)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
    if (v304)
    {
      long long v308 = v300;
      long long v309 = v301;
      long long v310 = v302;
      long long v311 = v303;
      long long v305 = v299[0];
      long long v306 = v299[1];
      uint64_t v312 = v304;
      long long v307 = v299[2];
      if (*((void *)&v300 + 1) != 7)
      {
        if (*((void *)&v300 + 1) != 2)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          swift_retain();
          int v177 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          *(void *)&long long v313 = 0;
          swift_retain();
          sub_1B6B33E34(v177, (uint64_t *)&v313, 0xD000000000000041, 0x80000001B6F4CFA0);
          swift_release();
          swift_release();
          return sub_1B66576EC(v279[0].i64);
        }
        sub_1B6AFEFC8((uint64_t)&v305, 1, 1, (uint64_t)&v280);
        sub_1B62D7D78((uint64_t)&v280, (uint64_t)&v283, (uint64_t)&qword_1E9DD6DC0, (uint64_t)type metadata accessor for __vfx_sampler2d, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B6BE9D60);
        if (*((void *)&v285 + 1) == 1) {
          return sub_1B66576EC(v279[0].i64);
        }
        long long v273 = v283;
        long long v274 = v284;
        long long v275 = v285;
        *(void *)&long long v276 = v286;
        if ((*(_DWORD *)(a4 + 80) & 0x7FFFFFFF) != 0 && vabds_f32(v220, v216) > 0.0001)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          swift_retain();
          int v44 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          *(void *)&long long v313 = 0;
          swift_retain();
          sub_1B6B33E34(v44, (uint64_t *)&v313, 0xD000000000000049, 0x80000001B6F4CFF0);
          swift_release();
          swift_release();
        }
        long long v45 = *(_OWORD *)(a4 + 40);
        long long v326 = *(_OWORD *)(a4 + 24);
        long long v327 = v45;
        uint64_t v328 = *(void *)(a4 + 56);
        sub_1B62C9DA8(a6, (uint64_t)&v326, 0x200000000, v287);
        sub_1B62D7D78((uint64_t)v287, (uint64_t)v294, (uint64_t)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
        uint64_t v245 = *(unsigned __int16 **)&v294[0];
        if (!*(void *)&v294[0]) {
          return sub_1B66576EC(v279[0].i64);
        }
        uint64_t v233 = a4;
        uint64_t v201 = v298;
        if ((uint64_t)v298 >= 1)
        {
          uint64_t v198 = *((void *)&v296 + 1);
          if (*((void *)&v296 + 1))
          {
            uint64_t v46 = 0;
            uint64_t v195 = *((void *)&v295 + 1);
            char v47 = (void *)*((void *)&v297 + 1);
            uint64_t v48 = *(void *)(*((void *)&v297 + 1) + 32);
            uint64_t v189 = v48;
            uint64_t v192 = v297;
            int v49 = *(unsigned __int8 *)(v297 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            simd_float4 v184 = (void *)(*((void *)&v297 + 1) + 64);
            uint64_t v241 = *(void *)&v294[0] + 41;
            int v186 = v49;
            uint64_t v256 = (void *)*((void *)&v297 + 1);
            do
            {
              uint64_t v229 = v46;
              uint64_t v50 = (unsigned int *)(v195 + 48 * v46);
              uint64_t v51 = *v50;
              uint64_t v52 = v50[1];
              uint64_t v53 = v50[2];
              uint64_t v54 = *((void *)v50 + 3);
              uint64_t v204 = *((void *)v50 + 2);
              uint64_t v55 = *((void *)v50 + 5);
              uint64_t v249 = *((void *)v50 + 4);
              if (v49)
              {
                float32x4_t v56 = *(os_unfair_lock_s **)(v55 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v56);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v55 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v48);
              uint64_t v221 = v47[6];
              uint64_t v213 = v47[8];
              uint64_t v217 = v47[7];
              uint64_t v207 = v47[10];
              uint64_t v210 = v47[9];
              uint64_t v57 = v47[4];
              uint64_t v58 = *(void *)(*(void *)(*(void *)(*(void *)(v55 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v256[6] = ecs_stack_allocator_allocate(v57, 48 * v58, 8);
              v256[7] = v58;
              char v47 = v256;
              v184[1] = 0;
              v184[2] = 0;
              *simd_float4 v184 = 0;
              swift_release();
              *(void *)&long long v313 = v192;
              *((void *)&v313 + 1) = v55;
              uint64_t v225 = v55;
              v314 = v256;
              uint64_t v315 = v53;
              uint64_t v316 = (v52 - v51 + v53);
              uint64_t v317 = v201;
              uint64_t v318 = v51;
              uint64_t v319 = v52;
              uint64_t v320 = 0;
              v321 = 0;
              LOBYTE(v322) = 1;
              uint64_t v323 = v204;
              uint64_t v324 = v54;
              uint64_t v325 = v249;
              sub_1B6BE5F74(&v313, &v259, (uint64_t)&v262, v233, v239 | ((unint64_t)v237 << 32), (uint64_t)&v273, a7);
              unint64_t v59 = v256[6];
              uint64_t v250 = v256[8];
              if (!v250)
              {
                uint64_t v85 = v256[7];
                char v86 = (void *)v256[4];
                goto LABEL_64;
              }
              for (uint64_t i = 0; i != v250; ++i)
              {
                unint64_t v62 = (uint64_t *)(v59 + 48 * i);
                uint64_t v63 = *v62;
                float v64 = (void (*)(uint64_t))v62[4];
                uint64_t v65 = v47[9];
                if (v65) {
                  _ZF = v63 == v65;
                }
                else {
                  _ZF = 0;
                }
                if (_ZF || !v245[11]) {
                  goto LABEL_28;
                }
                unint64_t v67 = v245[9];
                int v68 = (void *)(v241 + v245[8]);
                uint64_t v69 = v62[2];
                uint64_t v70 = v68;
                unint64_t v71 = v67 >> 4;
                uint64_t v72 = v241;
                if (v67 >= 0x10)
                {
                  while (*v70 != v63)
                  {
                    ++v72;
                    v70 += 2;
                    if (!--v71) {
                      goto LABEL_43;
                    }
                  }
                  unsigned int v73 = *(unsigned __int8 *)(v72 + v245[10]);
                  BOOL v74 = v73 > 5;
                  int v75 = (1 << v73) & 0x23;
                  if (v74 || v75 == 0)
                  {
LABEL_28:
                    uint64_t v61 = swift_retain();
                    v64(v61);
                    swift_release();
                    goto LABEL_29;
                  }
                }
LABEL_43:
                if (swift_conformsToProtocol2()) {
                  uint64_t v77 = v69;
                }
                else {
                  uint64_t v77 = 0;
                }
                if (v77)
                {
                  if (v67 < 0x10) {
                    goto LABEL_28;
                  }
                  unsigned int v78 = v68;
                  unint64_t v79 = v67 >> 4;
                  uint64_t v80 = v241;
                  while (*v78 != v77)
                  {
                    ++v80;
                    v78 += 2;
                    if (!--v79) {
                      goto LABEL_56;
                    }
                  }
                  unsigned int v81 = *(unsigned __int8 *)(v80 + v245[10]);
                  BOOL v74 = v81 > 5;
                  int v82 = (1 << v81) & 0x23;
                  if (v74 || v82 == 0) {
                    goto LABEL_28;
                  }
LABEL_56:
                  uint64_t v84 = 16 * (v67 >> 4);
                  while (*v68 != v77)
                  {
                    v68 += 2;
                    v84 -= 16;
                    if (!v84) {
                      goto LABEL_28;
                    }
                  }
                }
LABEL_29:
                char v47 = v256;
              }
              uint64_t v85 = v256[7];
              unint64_t v59 = v256[6];
              char v86 = (void *)v256[4];
              if ((uint64_t)v256[8] >= 1) {
                swift_arrayDestroy();
              }
LABEL_64:
              int v49 = v186;
              ecs_stack_allocator_deallocate(v86, v59, 48 * v85);
              v47[6] = v221;
              v47[7] = v217;
              v47[8] = v213;
              v47[9] = v210;
              v47[10] = v207;
              sub_1B634507C((char *)v225);
              uint64_t v48 = v189;
              ecs_stack_allocator_pop_snapshot(v189);
              if (v186)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v225 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v225 + 376));
              }
              swift_release();
              uint64_t v46 = v229 + 1;
            }
            while (v229 + 1 != v198);
          }
        }
        __int32 v178 = (uint64_t *)v287;
LABEL_173:
        sub_1B632F170(v178);
        return sub_1B66576EC(v279[0].i64);
      }
      sub_1B6AFF208((uint64_t)&v305, 1, 1, (uint64_t)&v280);
      sub_1B62D7D78((uint64_t)&v280, (uint64_t)v294, (uint64_t)&qword_1E9DD00B8, (uint64_t)type metadata accessor for __vfx_sampler3d, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B6BE9D60);
      if (*((void *)&v297 + 1) == 1) {
        return sub_1B66576EC(v279[0].i64);
      }
      long long v275 = v295;
      long long v276 = v296;
      long long v277 = v297;
      long long v278 = v298;
      long long v273 = v294[0];
      long long v274 = v294[1];
      long long v136 = *(_OWORD *)(a4 + 40);
      long long v326 = *(_OWORD *)(a4 + 24);
      long long v327 = v136;
      uint64_t v328 = *(void *)(a4 + 56);
      sub_1B62C9DA8(a6, (uint64_t)&v326, 0x200000000, &v283);
      sub_1B62D7D78((uint64_t)&v283, (uint64_t)v287, (uint64_t)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
      uint64_t v247 = *(unsigned __int16 **)&v287[0];
      if (!*(void *)&v287[0]) {
        return sub_1B66576EC(v279[0].i64);
      }
      uint64_t v235 = a4;
      uint64_t v203 = v293;
      if (v293 < 1 || (uint64_t v200 = v290) == 0)
      {
LABEL_172:
        __int32 v178 = (uint64_t *)&v283;
        goto LABEL_173;
      }
      uint64_t v137 = 0;
      uint64_t v197 = v289;
      uint64_t v138 = v292;
      uint64_t v139 = v292[4];
      uint64_t v191 = v139;
      uint64_t v194 = v291;
      int v140 = *(unsigned __int8 *)(v291 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      simd_float4 v185 = v292 + 8;
      uint64_t v243 = *(void *)&v287[0] + 41;
      int v188 = v140;
      uint64_t v258 = v292;
LABEL_121:
      uint64_t v231 = v137;
      uint64_t v141 = (unsigned int *)(v197 + 48 * v137);
      uint64_t v142 = *v141;
      uint64_t v143 = v141[1];
      uint64_t v144 = v141[2];
      uint64_t v145 = *((void *)v141 + 3);
      uint64_t v206 = *((void *)v141 + 2);
      uint64_t v146 = *((void *)v141 + 5);
      uint64_t v253 = *((void *)v141 + 4);
      if (v140)
      {
        uint64_t v147 = *(os_unfair_lock_s **)(v146 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v147);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v146 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v139);
      uint64_t v223 = v138[6];
      uint64_t v215 = v138[8];
      uint64_t v219 = v138[7];
      uint64_t v209 = v138[10];
      uint64_t v212 = v138[9];
      uint64_t v148 = v138[4];
      uint64_t v149 = *(void *)(*(void *)(*(void *)(*(void *)(v146 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v258[6] = ecs_stack_allocator_allocate(v148, 48 * v149, 8);
      v258[7] = v149;
      uint64_t v138 = v258;
      v185[1] = 0;
      v185[2] = 0;
      *simd_float4 v185 = 0;
      swift_release();
      *(void *)&long long v313 = v194;
      *((void *)&v313 + 1) = v146;
      uint64_t v227 = v146;
      v314 = v258;
      uint64_t v315 = v144;
      uint64_t v316 = (v143 - v142 + v144);
      uint64_t v317 = v203;
      uint64_t v318 = v142;
      uint64_t v319 = v143;
      uint64_t v320 = 0;
      v321 = 0;
      LOBYTE(v322) = 1;
      uint64_t v323 = v206;
      uint64_t v324 = v145;
      uint64_t v325 = v253;
      sub_1B6BE66C8(&v313, &v259, (uint64_t)&v262, v235, v239 | ((unint64_t)v237 << 32), (uint64_t)&v273, a7);
      unint64_t v150 = v258[6];
      uint64_t v254 = v258[8];
      if (!v254)
      {
        uint64_t v175 = v258[7];
        uint64_t v176 = (void *)v258[4];
        goto LABEL_162;
      }
      uint64_t v151 = 0;
      while (1)
      {
        float v153 = (uint64_t *)(v150 + 48 * v151);
        uint64_t v154 = *v153;
        unsigned int v155 = (void (*)(uint64_t))v153[4];
        uint64_t v156 = v138[9];
        if (v156) {
          BOOL v157 = v154 == v156;
        }
        else {
          BOOL v157 = 0;
        }
        if (!v157 && v247[11])
        {
          unint64_t v158 = v247[9];
          uint64_t v159 = (void *)(v243 + v247[8]);
          uint64_t v160 = v153[2];
          uint64_t v161 = v159;
          unint64_t v162 = v158 >> 4;
          uint64_t v163 = v243;
          if (v158 < 0x10) {
            goto LABEL_141;
          }
          while (*v161 != v154)
          {
            ++v163;
            v161 += 2;
            if (!--v162) {
              goto LABEL_141;
            }
          }
          unsigned int v164 = *(unsigned __int8 *)(v163 + v247[10]);
          BOOL v74 = v164 > 5;
          int v165 = (1 << v164) & 0x23;
          if (!v74 && v165 != 0)
          {
LABEL_141:
            if (swift_conformsToProtocol2()) {
              uint64_t v167 = v160;
            }
            else {
              uint64_t v167 = 0;
            }
            if (!v167) {
              goto LABEL_127;
            }
            if (v158 >= 0x10)
            {
              uint64_t v168 = v159;
              unint64_t v169 = v158 >> 4;
              uint64_t v170 = v243;
              while (*v168 != v167)
              {
                ++v170;
                v168 += 2;
                if (!--v169) {
                  goto LABEL_154;
                }
              }
              unsigned int v171 = *(unsigned __int8 *)(v170 + v247[10]);
              BOOL v74 = v171 > 5;
              int v172 = (1 << v171) & 0x23;
              if (v74 || v172 == 0) {
                goto LABEL_126;
              }
LABEL_154:
              uint64_t v174 = 16 * (v158 >> 4);
              while (*v159 != v167)
              {
                v159 += 2;
                v174 -= 16;
                if (!v174) {
                  goto LABEL_126;
                }
              }
              goto LABEL_127;
            }
          }
        }
LABEL_126:
        uint64_t v152 = swift_retain();
        v155(v152);
        swift_release();
LABEL_127:
        ++v151;
        uint64_t v138 = v258;
        if (v151 == v254)
        {
          uint64_t v175 = v258[7];
          unint64_t v150 = v258[6];
          uint64_t v176 = (void *)v258[4];
          if ((uint64_t)v258[8] >= 1) {
            swift_arrayDestroy();
          }
LABEL_162:
          int v140 = v188;
          ecs_stack_allocator_deallocate(v176, v150, 48 * v175);
          v138[6] = v223;
          v138[7] = v219;
          v138[8] = v215;
          v138[9] = v212;
          v138[10] = v209;
          sub_1B634507C((char *)v227);
          uint64_t v139 = v191;
          ecs_stack_allocator_pop_snapshot(v191);
          if (v188)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v227 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v227 + 376));
          }
          swift_release();
          uint64_t v137 = v231 + 1;
          if (v231 + 1 == v200) {
            goto LABEL_172;
          }
          goto LABEL_121;
        }
      }
    }
    sub_1B6960390(v43, (uint64_t)&v273);
    double result = (uint64_t *)sub_1B62D7D78((uint64_t)&v273, (uint64_t)&v280, (uint64_t)&unk_1E9DD6DB0, (uint64_t)&type metadata for SDFRuntimeData, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
    if (*((void *)&v281 + 1) == 1) {
      return result;
    }
    long long v283 = v280;
    long long v284 = v281;
    *(void *)&long long v285 = v282;
    uint64_t v87 = (void *)*((void *)&v281 + 1);
    sub_1B62D7D78((uint64_t)&v285, (uint64_t)&v326, (uint64_t)&unk_1EB980460, (uint64_t)sub_1B6AB24D4, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B6BE9D60);
    uint64_t v88 = v284;
    uint64_t v89 = *((void *)&v283 + 1);
    uint64_t v90 = v283;
    swift_unknownObjectRetain();
    sub_1B63846D0((uint64_t)&v326);
    id v91 = sub_1B6D3DF2C(v90, v89, v88, v87);
    int32x4_t v199 = v93;
    float32x4_t v202 = v92;
    int32x4_t v196 = v94;
    uint64_t v193 = (uint64_t)v91;
    swift_unknownObjectRelease();
    sub_1B62D8C10((uint64_t)&v326);
    long long v95 = *(_OWORD *)(a4 + 40);
    v287[0] = *(_OWORD *)(a4 + 24);
    v287[1] = v95;
    uint64_t v288 = *(void *)(a4 + 56);
    sub_1B62C9DA8(a6, (uint64_t)v287, 0x200000000, v294);
    sub_1B62D7D78((uint64_t)v294, (uint64_t)&v313, (uint64_t)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult, (uint64_t (*)(void, uint64_t, uint64_t))sub_1B62D82E0);
    uint64_t v246 = (unsigned __int16 *)v313;
    if (!(void)v313)
    {
      swift_unknownObjectRelease();
      return (uint64_t *)sub_1B62D8C10((uint64_t)&v326);
    }
    uint64_t v190 = v322;
    if (v322 <= 0)
    {
      swift_unknownObjectRelease();
      sub_1B62D8C10((uint64_t)&v326);
      return sub_1B632F170((uint64_t *)v294);
    }
    uint64_t v234 = a4;
    uint64_t v187 = v319;
    if (!v319)
    {
LABEL_169:
      swift_unknownObjectRelease();
      sub_1B62D8C10((uint64_t)&v326);
      return sub_1B632F170((uint64_t *)v294);
    }
    uint64_t v96 = 0;
    uint64_t v183 = v317;
    uint64_t v97 = v321;
    uint64_t v98 = v321[4];
    uint64_t v181 = v98;
    uint64_t v182 = v320;
    char v99 = *(unsigned char *)(v320 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    float v179 = v321 + 8;
    uint64_t v242 = v313 + 41;
    char v180 = v99;
    unint64_t v257 = v321;
LABEL_72:
    uint64_t v230 = v96;
    uint64_t v100 = (unsigned int *)(v183 + 48 * v96);
    uint64_t v101 = *v100;
    uint64_t v102 = v100[1];
    uint64_t v103 = v100[2];
    uint64_t v104 = *((void *)v100 + 3);
    uint64_t v205 = *((void *)v100 + 2);
    uint64_t v105 = *((void *)v100 + 5);
    uint64_t v251 = *((void *)v100 + 4);
    if (v99)
    {
      uint64_t v106 = *(os_unfair_lock_s **)(v105 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v106);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v105 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v98);
    uint64_t v222 = v97[6];
    uint64_t v214 = v97[8];
    uint64_t v218 = v97[7];
    uint64_t v208 = v97[10];
    uint64_t v211 = v97[9];
    uint64_t v107 = v97[4];
    uint64_t v108 = *(void *)(*(void *)(*(void *)(*(void *)(v105 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v257[6] = ecs_stack_allocator_allocate(v107, 48 * v108, 8);
    v257[7] = v108;
    uint64_t v97 = v257;
    v179[1] = 0;
    v179[2] = 0;
    *float v179 = 0;
    swift_release();
    *(void *)&long long v305 = v182;
    *((void *)&v305 + 1) = v105;
    uint64_t v226 = v105;
    *(void *)&long long v306 = v257;
    *((void *)&v306 + 1) = v103;
    *(void *)&long long v307 = (v102 - v101 + v103);
    *((void *)&v307 + 1) = v190;
    *(void *)&long long v308 = v101;
    *((void *)&v308 + 1) = v102;
    long long v309 = 0uLL;
    LOBYTE(v310) = 1;
    *((void *)&v310 + 1) = v205;
    *(void *)&long long v311 = v104;
    *((void *)&v311 + 1) = v251;
    sub_1B6BE6BDC(&v305, &v259, (uint64_t)&v262, v234, v239 | ((unint64_t)v237 << 32), v193, a7, v202, v199, v196);
    unint64_t v109 = v257[6];
    uint64_t v252 = v257[8];
    if (!v252)
    {
      uint64_t v134 = v257[7];
      char v135 = (void *)v257[4];
      goto LABEL_113;
    }
    uint64_t v110 = 0;
    while (1)
    {
      uint64_t v112 = (uint64_t *)(v109 + 48 * v110);
      uint64_t v113 = *v112;
      BOOL v114 = (void (*)(uint64_t))v112[4];
      uint64_t v115 = v97[9];
      if (v115) {
        BOOL v116 = v113 == v115;
      }
      else {
        BOOL v116 = 0;
      }
      if (!v116 && v246[11])
      {
        unint64_t v117 = v246[9];
        unint64_t v118 = (void *)(v242 + v246[8]);
        uint64_t v119 = v112[2];
        uint64_t v120 = v118;
        unint64_t v121 = v117 >> 4;
        uint64_t v122 = v242;
        if (v117 < 0x10) {
          goto LABEL_92;
        }
        while (*v120 != v113)
        {
          ++v122;
          v120 += 2;
          if (!--v121) {
            goto LABEL_92;
          }
        }
        unsigned int v123 = *(unsigned __int8 *)(v122 + v246[10]);
        BOOL v74 = v123 > 5;
        int v124 = (1 << v123) & 0x23;
        if (!v74 && v124 != 0)
        {
LABEL_92:
          if (swift_conformsToProtocol2()) {
            uint64_t v126 = v119;
          }
          else {
            uint64_t v126 = 0;
          }
          if (!v126) {
            goto LABEL_78;
          }
          if (v117 >= 0x10)
          {
            uint64_t v127 = v118;
            unint64_t v128 = v117 >> 4;
            uint64_t v129 = v242;
            while (*v127 != v126)
            {
              ++v129;
              v127 += 2;
              if (!--v128) {
                goto LABEL_105;
              }
            }
            unsigned int v130 = *(unsigned __int8 *)(v129 + v246[10]);
            BOOL v74 = v130 > 5;
            int v131 = (1 << v130) & 0x23;
            if (v74 || v131 == 0) {
              goto LABEL_77;
            }
LABEL_105:
            uint64_t v133 = 16 * (v117 >> 4);
            while (*v118 != v126)
            {
              v118 += 2;
              v133 -= 16;
              if (!v133) {
                goto LABEL_77;
              }
            }
            goto LABEL_78;
          }
        }
      }
LABEL_77:
      uint64_t v111 = swift_retain();
      v114(v111);
      swift_release();
LABEL_78:
      ++v110;
      uint64_t v97 = v257;
      if (v110 == v252)
      {
        uint64_t v134 = v257[7];
        unint64_t v109 = v257[6];
        char v135 = (void *)v257[4];
        if ((uint64_t)v257[8] >= 1) {
          swift_arrayDestroy();
        }
LABEL_113:
        ecs_stack_allocator_deallocate(v135, v109, 48 * v134);
        v97[6] = v222;
        v97[7] = v218;
        v97[8] = v214;
        v97[9] = v211;
        v97[10] = v208;
        sub_1B634507C((char *)v226);
        uint64_t v98 = v181;
        ecs_stack_allocator_pop_snapshot(v181);
        char v99 = v180;
        if (v180)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v226 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v226 + 376));
        }
        swift_release();
        uint64_t v96 = v230 + 1;
        if (v230 + 1 == v187) {
          goto LABEL_169;
        }
        goto LABEL_72;
      }
    }
  }
  return result;
}

uint64_t sub_1B6BE9BA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B698B528(0, (unint64_t *)&unk_1E9DD6DA0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v15[-v9];
  long long v16 = xmmword_1B6E98660;
  int v17 = 0;
  unint64_t v18 = 0xFFFFFFFF000000FFLL;
  int v19 = 0;
  sub_1B689291C(a1, 0);
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  v15[15] = 9;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v12 = v20;
  int v13 = v17;
  int v14 = v18;
  *(_OWORD *)a2 = v16;
  *(_DWORD *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 20) = v14;
  *(void *)(a2 + 24) = v12;
  return result;
}

void sub_1B6BE9D60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ParticleSDFCollider()
{
  return &type metadata for ParticleSDFCollider;
}

ValueMetadata *type metadata accessor for FairRecursiveLock()
{
  return &type metadata for FairRecursiveLock;
}

ValueMetadata *type metadata accessor for UnfairRecursiveLock()
{
  return &type metadata for UnfairRecursiveLock;
}

uint64_t _s3VFX10UnfairLockVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)(a1 + 24)) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t _s3VFX10UnfairLockVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnfairLock()
{
  return &type metadata for UnfairLock;
}

uint64_t sub_1B6BE9E80(void *a1)
{
  sub_1B6BEB074(0, &qword_1E9DD6DD8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BEB020();
  sub_1B6E33A88();
  char v12 = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    char v11 = 1;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B6BE9FFC(char *a1, char *a2)
{
  return sub_1B6BAE510(*a1, *a2);
}

uint64_t sub_1B6BEA008()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_1B6BEA044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6BEAB14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6BEA06C(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEB020();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BEA0A8(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEB020();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6BEA0E4(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v5 = sub_1B6BEAE68(a1);
  if (!v2)
  {
    *(float *)a2 = v5;
    *(unsigned char *)(a2 + 4) = v4 & 1;
  }
}

uint64_t sub_1B6BEA118(void *a1)
{
  return sub_1B6BE9E80(a1);
}

uint64_t sub_1B6BEA138()
{
  return type metadata accessor for ParticleDragSystem();
}

void sub_1B6BEA158(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1036831949;
  *(unsigned char *)(a1 + 4) = 0;
}

uint64_t type metadata accessor for ParticleDrag.GPUSystem()
{
  return self;
}

const char *sub_1B6BEA194()
{
  return "ParticleDrag.GPU";
}

uint64_t sub_1B6BEA1A8()
{
  return type metadata accessor for ParticleDrag.GPUSystem();
}

uint64_t *sub_1B6BEA1C8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  swift_retain_n();
  uint64_t v5 = sub_1B695E9EC(v4);
  swift_release();
  if ((v5 & 0xFF00000000) == 0x200000000) {
    float v6 = 0.1;
  }
  else {
    float v6 = *(float *)&v5;
  }
  sub_1B62F46E8();
  float v8 = v7;
  long long v9 = *(_OWORD *)(v2 + 32);
  v85[0] = *(_OWORD *)(v2 + 16);
  v85[1] = v9;
  uint64_t v86 = *(void *)(v2 + 48);
  sub_1B62C9DA8(v3, (uint64_t)v85, 0x200000000, v74);
  sub_1B6309B40((uint64_t)v74, (uint64_t)v75);
  unsigned int v73 = (unsigned __int16 *)v75[0];
  if (!v75[0]) {
    return (uint64_t *)swift_release();
  }
  uint64_t v63 = v79;
  if (v79 > 0)
  {
    uint64_t v62 = v76;
    if (v76)
    {
      uint64_t v10 = 0;
      unint64_t v11 = v5 & 0xFFFFFFFFFFLL;
      uint64_t v61 = v75[5];
      char v12 = v78;
      uint64_t v13 = v78[4];
      uint64_t v60 = v77;
      int v14 = *(unsigned __int8 *)(v77 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v58 = v78 + 8;
      uint64_t v72 = v75[0] + 41;
      uint64_t v56 = v13;
      uint64_t v57 = HIDWORD(v11) & 1;
      int v59 = v14;
      do
      {
        float v15 = (unsigned int *)(v61 + 48 * v10);
        uint64_t v16 = *v15;
        uint64_t v17 = v15[1];
        uint64_t v18 = v15[2];
        uint64_t v68 = v10;
        uint64_t v69 = *((void *)v15 + 2);
        uint64_t v19 = *((void *)v15 + 3);
        uint64_t v20 = *((void *)v15 + 4);
        uint64_t v21 = *((void *)v15 + 5);
        if (v14)
        {
          float32x4_t v22 = *(os_unfair_lock_s **)(v21 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v22);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v13);
        uint64_t v66 = v12[7];
        uint64_t v67 = v12[6];
        uint64_t v64 = v12[9];
        uint64_t v65 = v12[8];
        uint64_t v70 = v12[10];
        uint64_t v23 = v12[4];
        uint64_t v24 = *(void *)(*(void *)(*(void *)(*(void *)(v21 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v12[6] = ecs_stack_allocator_allocate(v23, 48 * v24, 8);
        v12[7] = v24;
        v58[1] = 0;
        _OWORD v58[2] = 0;
        void *v58 = 0;
        swift_release();
        v80[0] = v60;
        v80[1] = v21;
        uint64_t v71 = v21;
        v80[2] = v12;
        v80[3] = v18;
        v80[4] = (v17 - v16 + v18);
        v80[5] = v63;
        v80[6] = v16;
        v80[7] = v17;
        v80[8] = 0;
        v80[9] = 0;
        char v81 = 1;
        uint64_t v82 = v69;
        uint64_t v83 = v19;
        uint64_t v84 = v20;
        sub_1B6BEA6B0(v80, v57, v6, v8);
        unint64_t v25 = v12[6];
        uint64_t v26 = v12[8];
        if (!v26)
        {
          uint64_t v52 = v12[7];
          uint64_t v53 = (void *)v12[4];
          uint64_t v54 = v68;
          uint64_t v13 = v56;
          goto LABEL_49;
        }
        for (uint64_t i = 0; i != v26; ++i)
        {
          float32x4_t v29 = (uint64_t *)(v25 + 48 * i);
          uint64_t v30 = *v29;
          float32x4_t v31 = (void (*)(uint64_t))v29[4];
          uint64_t v32 = v12[9];
          if (v32) {
            BOOL v33 = v30 == v32;
          }
          else {
            BOOL v33 = 0;
          }
          if (v33 || !v73[11]) {
            goto LABEL_14;
          }
          unint64_t v34 = v73[9];
          float32x4_t v35 = (void *)(v72 + v73[8]);
          uint64_t v36 = v29[2];
          float32x4_t v37 = v35;
          unint64_t v38 = v34 >> 4;
          uint64_t v39 = v72;
          if (v34 >= 0x10)
          {
            while (*v37 != v30)
            {
              ++v39;
              v37 += 2;
              if (!--v38) {
                goto LABEL_29;
              }
            }
            unsigned int v40 = *(unsigned __int8 *)(v39 + v73[10]);
            BOOL v41 = v40 > 5;
            int v42 = (1 << v40) & 0x23;
            if (v41 || v42 == 0)
            {
LABEL_14:
              uint64_t v28 = swift_retain();
              v31(v28);
              swift_release();
              continue;
            }
          }
LABEL_29:
          if (swift_conformsToProtocol2()) {
            uint64_t v44 = v36;
          }
          else {
            uint64_t v44 = 0;
          }
          if (v44)
          {
            if (v34 < 0x10) {
              goto LABEL_14;
            }
            long long v45 = v35;
            unint64_t v46 = v34 >> 4;
            uint64_t v47 = v72;
            while (*v45 != v44)
            {
              ++v47;
              v45 += 2;
              if (!--v46) {
                goto LABEL_42;
              }
            }
            unsigned int v48 = *(unsigned __int8 *)(v47 + v73[10]);
            BOOL v41 = v48 > 5;
            int v49 = (1 << v48) & 0x23;
            if (v41 || v49 == 0) {
              goto LABEL_14;
            }
LABEL_42:
            uint64_t v51 = 16 * (v34 >> 4);
            while (*v35 != v44)
            {
              v35 += 2;
              v51 -= 16;
              if (!v51) {
                goto LABEL_14;
              }
            }
          }
        }
        uint64_t v52 = v12[7];
        unint64_t v25 = v12[6];
        uint64_t v53 = (void *)v12[4];
        uint64_t v54 = v68;
        uint64_t v13 = v56;
        if ((uint64_t)v12[8] >= 1) {
          swift_arrayDestroy();
        }
LABEL_49:
        ecs_stack_allocator_deallocate(v53, v25, 48 * v52);
        v12[6] = v67;
        v12[7] = v66;
        unsigned char v12[8] = v65;
        v12[9] = v64;
        v12[10] = v70;
        sub_1B634507C((char *)v71);
        ecs_stack_allocator_pop_snapshot(v13);
        int v14 = v59;
        if (v59)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 376));
        }
        swift_release();
        uint64_t v10 = v54 + 1;
      }
      while (v10 != v62);
    }
  }
  swift_release();
  return sub_1B632F170(v74);
}

unint64_t sub_1B6BEA6B0(void *a1, char a2, float a3, float a4)
{
  float v8 = (uint64_t *)a1[11];
  uint64_t v9 = a1[12];
  uint64_t v10 = a1[13];
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v8, v9, v10, v12);
  sub_1B6345398(*(void *)(v11 + 40), (uint64_t)&type metadata for Mass, &v65);
  float v14 = a3 * a4;
  if (v65 == 1)
  {
    uint64_t v15 = sub_1B62C9024((uint64_t)&type metadata for Mass, (uint64_t)&off_1F0F9E398, v8, v9, v10, v12);
    unint64_t result = sub_1B6345398(*(void *)(v11 + 40), (uint64_t)&type metadata for Scale, &v63);
    if (v63 == 1)
    {
      if (a2)
      {
        unint64_t result = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v8, v9, v10, v12);
        uint64_t v17 = a1[6];
        uint64_t v18 = a1[7] - v17;
        if (v18)
        {
          uint64_t v19 = 16 * v17;
          uint64_t v20 = (float32x4_t *)(v13 + 16 * v17);
          uint64_t v21 = (int *)(v15 + 4 * v17);
          float32x4_t v22 = (long long *)(result + v19);
          do
          {
            long long v23 = *v22++;
            long long v24 = v23;
            float v25 = *((float *)&v23 + 1);
            int v26 = DWORD1(v23);
            if ((DWORD1(v23) & 0x7FFFFF) != 0) {
              float v27 = *(float *)&v24;
            }
            else {
              float v27 = v25;
            }
            if ((~v26 & 0x7F800000) != 0) {
              float v27 = v25;
            }
            if (v25 >= *(float *)&v24) {
              float v28 = v27;
            }
            else {
              float v28 = *(float *)&v24;
            }
            if ((DWORD2(v24) & 0x7FFFFF) != 0) {
              float v29 = v28;
            }
            else {
              float v29 = *((float *)&v24 + 2);
            }
            if ((~DWORD2(v24) & 0x7F800000) != 0) {
              float v29 = *((float *)&v24 + 2);
            }
            int v30 = *v21++;
            LODWORD(v24) = v30;
            if (*((float *)&v24 + 2) >= v28) {
              float v28 = v29;
            }
            *uint64_t v20 = vsubq_f32(*v20, vmulq_n_f32(*v20, (float)(v28 * v28) * fminf(v14 * *(float *)&v24, 1.0)));
            ++v20;
            --v18;
          }
          while (v18);
        }
      }
      else
      {
        uint64_t v48 = a1[6];
        uint64_t v49 = a1[7] - v48;
        if (v49)
        {
          uint64_t v50 = (float32x4_t *)(v13 + 16 * v48);
          uint64_t v51 = (float *)(v15 + 4 * v48);
          do
          {
            float v52 = *v51++;
            *uint64_t v50 = vsubq_f32(*v50, vmulq_n_f32(*v50, fminf(v14 * v52, 1.0)));
            ++v50;
            --v49;
          }
          while (v49);
        }
      }
    }
    else
    {
      uint64_t v39 = a1[6];
      uint64_t v40 = a1[7] - v39;
      if (a2)
      {
        if (v40)
        {
          BOOL v41 = (float32x4_t *)(v13 + 16 * v39);
          int v42 = (float *)(v15 + 4 * v39);
          do
          {
            float v43 = *v42++;
            *BOOL v41 = vaddq_f32(*v41, vmulq_f32(*v41, vmulq_n_f32((float32x4_t)xmmword_1B6EB2660, fminf(v14 * v43, 1.0))));
            ++v41;
            --v40;
          }
          while (v40);
        }
      }
      else if (v40)
      {
        uint64_t v56 = (float32x4_t *)(v13 + 16 * v39);
        uint64_t v57 = (float *)(v15 + 4 * v39);
        do
        {
          float v58 = *v57++;
          float32x4_t *v56 = vsubq_f32(*v56, vmulq_n_f32(*v56, fminf(v14 * v58, 1.0)));
          ++v56;
          --v40;
        }
        while (v40);
      }
    }
  }
  else
  {
    float v62 = fminf(v14, 1.0);
    unint64_t result = sub_1B6345398(*(void *)(v11 + 40), (uint64_t)&type metadata for Scale, v64);
    if (v64[0] == 1)
    {
      if (a2)
      {
        unint64_t result = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v8, v9, v10, v12);
        uint64_t v31 = a1[6];
        uint64_t v32 = a1[7] - v31;
        if (v32)
        {
          uint64_t v33 = 16 * v31;
          unint64_t v34 = (float32x4_t *)(v13 + 16 * v31);
          unint64_t v35 = result + v33;
          do
          {
            long long v36 = *(_OWORD *)v35;
            LODWORD(v37) = HIDWORD(*(void *)v35);
            if (v37 >= COERCE_FLOAT(*(_OWORD *)v35))
            {
              if ((LODWORD(v37) & 0x7FFFFF) != 0) {
                LODWORD(v38) = *(_OWORD *)v35;
              }
              else {
                LODWORD(v38) = HIDWORD(*(void *)v35);
              }
              if ((~LODWORD(v37) & 0x7F800000) == 0) {
                float v37 = v38;
              }
            }
            else
            {
              LODWORD(v37) = *(_OWORD *)v35;
            }
            if (*((float *)&v36 + 2) >= v37)
            {
              if ((DWORD2(v36) & 0x7FFFFF) == 0) {
                LODWORD(v37) = *(void *)(v35 + 8);
              }
              if ((~DWORD2(v36) & 0x7F800000) != 0) {
                LODWORD(v37) = *(void *)(v35 + 8);
              }
            }
            float32x4_t *v34 = vsubq_f32(*v34, vmulq_n_f32(*v34, v62 * (float)(v37 * v37)));
            ++v34;
            v35 += 16;
            --v32;
          }
          while (v32);
        }
      }
      else
      {
        uint64_t v53 = a1[6];
        uint64_t v54 = a1[7] - v53;
        if (v54)
        {
          uint64_t v55 = (float32x4_t *)(v13 + 16 * v53);
          do
          {
            float32x4_t *v55 = vsubq_f32(*v55, vmulq_n_f32(*v55, v62));
            ++v55;
            --v54;
          }
          while (v54);
        }
      }
    }
    else if (a2)
    {
      uint64_t v44 = a1[6];
      uint64_t v45 = a1[7] - v44;
      if (v45)
      {
        float32x4_t v46 = vmulq_n_f32((float32x4_t)xmmword_1B6E4F540, v62);
        uint64_t v47 = (float32x4_t *)(v13 + 16 * v44);
        do
        {
          *uint64_t v47 = vsubq_f32(*v47, vmulq_f32(v46, *v47));
          ++v47;
          --v45;
        }
        while (v45);
      }
    }
    else
    {
      uint64_t v59 = a1[6];
      uint64_t v60 = a1[7] - v59;
      if (v60)
      {
        uint64_t v61 = (float32x4_t *)(v13 + 16 * v59);
        do
        {
          float32x4_t *v61 = vsubq_f32(*v61, vmulq_n_f32(*v61, v62));
          ++v61;
          --v60;
        }
        while (v60);
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ParticleDragSystem()
{
  return self;
}

const char *sub_1B6BEAB00()
{
  return "ParticleDrag";
}

uint64_t sub_1B6BEAB14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B6F339F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6BEABFC(uint64_t *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = a1[2];
  unint64_t v2 = a1[3];
  uint64_t v4 = a1[6];
  swift_retain();
  unint64_t v5 = sub_1B695E9EC(v2);
  swift_release();
  if ((v5 & 0xFF00000000) == 0x200000000) {
    float v6 = 0.1;
  }
  else {
    float v6 = *(float *)&v5;
  }
  sub_1B6A81254();
  float v17 = v7 * v6;
  uint64_t v8 = *a1;
  if (*a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_drag_uniforms(0);
    sub_1B6B594A8((uint64_t)&v17, 1, ObjectType, v10, v11, v12, v13, v14);
  }
  sub_1B6BEAE0C(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E77050;
  *(_OWORD *)(v15 + 32) = xmmword_1B6EB2670;
  *(unsigned char *)(v15 + 48) = 0;
  *(void *)(v15 + 64) = HIDWORD(v5) & 1;
  *(_OWORD *)(v15 + 72) = 0u;
  *(_OWORD *)(v15 + 88) = 0u;
  *(_OWORD *)(v15 + 104) = 0u;
  *(void *)(v15 + 120) = 0;
  *(unsigned char *)(v15 + 128) = 13;
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v3, v8 == 0, v15, (uint64_t)a1, 0x656C636974726170, 0xED0000676172645FLL, 0);
  sub_1B6786A7C((uint64_t)a1);
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

void sub_1B6BEAE0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ParticleDrag()
{
  return &type metadata for ParticleDrag;
}

float sub_1B6BEAE68(void *a1)
{
  sub_1B6BEB074(0, &qword_1E9DD6DC8, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BEB020();
  sub_1B6E33A48();
  if (!v1)
  {
    char v14 = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    char v13 = 1;
    sub_1B6E32DA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B6BEB020()
{
  unint64_t result = qword_1E9DD6DD0;
  if (!qword_1E9DD6DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6DD0);
  }
  return result;
}

void sub_1B6BEB074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6BEB020();
    unint64_t v7 = a3(a1, &type metadata for ParticleDrag.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleDrag.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BEB1A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleDrag.CodingKeys()
{
  return &type metadata for ParticleDrag.CodingKeys;
}

unint64_t sub_1B6BEB1E0()
{
  unint64_t result = qword_1E9DD6DE0;
  if (!qword_1E9DD6DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6DE0);
  }
  return result;
}

unint64_t sub_1B6BEB238()
{
  unint64_t result = qword_1E9DD6DE8;
  if (!qword_1E9DD6DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6DE8);
  }
  return result;
}

unint64_t sub_1B6BEB290()
{
  unint64_t result = qword_1E9DD6DF0;
  if (!qword_1E9DD6DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6DF0);
  }
  return result;
}

uint64_t sub_1B6BEB2E4()
{
  return 0x6874676E656CLL;
}

uint64_t sub_1B6BEB2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6BEB388(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEBC70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BEB3C4(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEBC70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6BEB400@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_1B6BEBCC4(0, &qword_1E9DD6DF8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  float v10 = (char *)&v14 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BEBC70();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B6E32DC8();
  int v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v12;
  return result;
}

uint64_t sub_1B6BEB590(void *a1)
{
  sub_1B6BEBCC4(0, &qword_1E9DD6E08, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BEBC70();
  sub_1B6E33A88();
  sub_1B6E32F78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6BEB6D8()
{
  return type metadata accessor for DistanceConstraintSystem();
}

uint64_t type metadata accessor for DistanceConstraintSystem()
{
  return self;
}

const char *sub_1B6BEB720()
{
  return "DistanceConstrainTargetFromPosition";
}

uint64_t *sub_1B6BEB734(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  swift_retain();
  sub_1B62F46E8();
  float v4 = v3;
  uint64_t v5 = *(void *)(a1 + 8);
  swift_retain();
  unint64_t v6 = sub_1B695FFAC(v5);
  swift_release();
  if ((v6 & 0x100000000) != 0) {
    float v7 = 1.0;
  }
  else {
    float v7 = *(float *)&v6;
  }
  long long v8 = *(_OWORD *)(a1 + 104);
  long long v83 = *(_OWORD *)(a1 + 88);
  long long v84 = v8;
  uint64_t v85 = *(void *)(a1 + 120);
  sub_1B6664340(2, 1, 1, (uint64_t)v69);
  v81[0] = v69[0];
  v81[1] = v69[1];
  uint64_t v82 = v70;
  sub_1B62C9DA8(v2, (uint64_t)v81, 0x200000000, v71);
  sub_1B62CA210((uint64_t)v71, (uint64_t)v72, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v72[0])
  {
    sub_1B62CA064((uint64_t)v69);
    return (uint64_t *)swift_release();
  }
  if (v78 <= 0 || (uint64_t v66 = v75) == 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B62CA064((uint64_t)v69);
    goto LABEL_31;
  }
  uint64_t v9 = v77;
  uint64_t v10 = v77[4];
  char v11 = *(unsigned char *)(v76 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v79[0] = v72[0];
  v79[1] = v72[1];
  uint64_t v80 = v73;
  uint64_t v64 = (uint64_t)(v77 + 6);
  uint64_t v65 = v74;
  char v63 = v77 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  char v61 = v11;
  uint64_t v62 = v10;
  do
  {
    uint64_t v68 = v13;
    uint64_t v14 = (unsigned int *)(v65 + 48 * v12);
    uint64_t v15 = *v14;
    uint64_t v67 = v14[1];
    uint64_t v16 = (uint64_t *)*((void *)v14 + 2);
    uint64_t v17 = *((void *)v14 + 3);
    uint64_t v19 = *((void *)v14 + 4);
    uint64_t v18 = *((void *)v14 + 5);
    if (v11)
    {
      uint64_t v20 = *(os_unfair_lock_s **)(v18 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v20);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    sub_1B62CA210(v64, (uint64_t)v86, &qword_1EB97DE20);
    uint64_t v21 = v9[4];
    uint64_t v22 = *(void *)(*(void *)(*(void *)(*(void *)(v18 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    _DWORD v9[6] = ecs_stack_allocator_allocate(v21, 48 * v22, 8);
    v9[7] = v22;
    v63[1] = 0;
    v63[2] = 0;
    *char v63 = 0;
    swift_release();
    long long v23 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v16, v17, v19, (uint64_t)v9);
    long long v24 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v16, v17, v19, (uint64_t)v9);
    float v25 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for ParticleTarget, (uint64_t)&off_1F0F64DE8, v16, v17, v19, (uint64_t)v9);
    if (v16)
    {
      if (!v19) {
        goto LABEL_20;
      }
      uint64_t v13 = v68;
      float32x4_t v27 = v59;
      v26.i32[3] = v60;
      float32x4_t v29 = v57;
      float32x4_t v28 = v58;
      do
      {
        __int32 v30 = v26.i32[3];
        float32x4_t v26 = *v24;
        v26.i32[3] = v30;
        float32x4_t v31 = vsubq_f32(v26, *v25);
        float32x4_t v32 = vmulq_f32(v31, v31);
        float v33 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).f32[0]);
        if (v33 > 0.0)
        {
          float32x4_t v34 = vmulq_n_f32(v31, v4 * (float)((float)(v7 - v33) / v33));
          float32x4_t v35 = *v23;
          float32x4_t v36 = vaddq_f32(v34, *v23);
          v35.i32[3] = v29.i32[3];
          v34.i32[3] = v28.i32[3];
          v36.i32[3] = v27.i32[3];
          float32x4_t v27 = v36;
          v36.i32[3] = 0;
          *long long v23 = v36;
          float32x4_t v28 = v34;
          float32x4_t v29 = v35;
        }
        ++v25;
        ++v24;
        ++v23;
        --v19;
      }
      while (v19);
      float32x4_t v57 = v29;
      float32x4_t v58 = v28;
      float32x4_t v59 = v27;
      __int32 v60 = v26.i32[3];
      uint64_t v10 = v62;
      char v11 = v61;
    }
    else
    {
      if (v15 == v67)
      {
LABEL_20:
        uint64_t v10 = v62;
        char v11 = v61;
        uint64_t v13 = v68;
        goto LABEL_26;
      }
      uint64_t v37 = v67 - v15;
      float v38 = &v25[v15];
      uint64_t v39 = &v24[v15];
      uint64_t v40 = &v23[v15];
      uint64_t v10 = v62;
      char v11 = v61;
      uint64_t v13 = v68;
      float32x4_t v42 = v55;
      v41.i32[3] = v56;
      float32x4_t v44 = v53;
      float32x4_t v43 = v54;
      do
      {
        __int32 v45 = v41.i32[3];
        float32x4_t v41 = *v39;
        v41.i32[3] = v45;
        float32x4_t v46 = vsubq_f32(v41, *v38);
        float32x4_t v47 = vmulq_f32(v46, v46);
        float v48 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v47, 2), vaddq_f32(v47, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v47.f32, 1))).f32[0]);
        if (v48 > 0.0)
        {
          float32x4_t v49 = vmulq_n_f32(v46, v4 * (float)((float)(v7 - v48) / v48));
          float32x4_t v50 = *v40;
          float32x4_t v51 = vaddq_f32(v49, *v40);
          v50.i32[3] = v44.i32[3];
          v49.i32[3] = v43.i32[3];
          v51.i32[3] = v42.i32[3];
          float32x4_t v42 = v51;
          v51.i32[3] = 0;
          *uint64_t v40 = v51;
          float32x4_t v43 = v49;
          float32x4_t v44 = v50;
        }
        ++v38;
        ++v39;
        ++v40;
        --v37;
      }
      while (v37);
      float32x4_t v53 = v44;
      float32x4_t v54 = v43;
      float32x4_t v55 = v42;
      __int32 v56 = v41.i32[3];
    }
LABEL_26:
    sub_1B6345178(v9, (unsigned __int16 **)v79, (uint64_t)v86);
    sub_1B634507C((char *)v18);
    ecs_stack_allocator_pop_snapshot(v10);
    if (v11)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
    }
    swift_release();
    ++v12;
  }
  while (v12 != v66);
  sub_1B62CA064((uint64_t)v69);
LABEL_31:
  swift_release();
  sub_1B632F170(v71);
  return sub_1B632F170(v71);
}

ValueMetadata *type metadata accessor for DistanceConstraint()
{
  return &type metadata for DistanceConstraint;
}

unint64_t sub_1B6BEBC70()
{
  unint64_t result = qword_1E9DD6E00;
  if (!qword_1E9DD6E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E00);
  }
  return result;
}

void sub_1B6BEBCC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6BEBC70();
    unint64_t v7 = a3(a1, &type metadata for DistanceConstraint.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DistanceConstraint.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6BEBDC4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DistanceConstraint.CodingKeys()
{
  return &type metadata for DistanceConstraint.CodingKeys;
}

unint64_t sub_1B6BEBE00()
{
  unint64_t result = qword_1E9DD6E10;
  if (!qword_1E9DD6E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E10);
  }
  return result;
}

unint64_t sub_1B6BEBE58()
{
  unint64_t result = qword_1E9DD6E18;
  if (!qword_1E9DD6E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E18);
  }
  return result;
}

unint64_t sub_1B6BEBEB0()
{
  unint64_t result = qword_1E9DD6E20;
  if (!qword_1E9DD6E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E20);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TesselationDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TesselationDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TesselationDescriptor()
{
  return &type metadata for TesselationDescriptor;
}

uint64_t destroy for RenderPipelineDescriptor(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[6])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[16])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for RenderPipelineDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = *(void *)(a2 + 48);
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v6 = *(void *)(a2 + 48);
    if (v6)
    {
LABEL_3:
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v8 = *(void *)(a2 + 88);
      if (v8) {
        goto LABEL_4;
      }
LABEL_8:
      long long v14 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v14;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      uint64_t v10 = *(void *)(a2 + 128);
      if (v10) {
        goto LABEL_5;
      }
LABEL_9:
      long long v15 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v15;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      goto LABEL_10;
    }
  }
  long long v13 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v13;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  if (!v8) {
    goto LABEL_8;
  }
LABEL_4:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = *(void *)(a2 + 128);
  if (!v10) {
    goto LABEL_9;
  }
LABEL_5:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
LABEL_10:
  uint64_t v16 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v16;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  memcpy((void *)(a1 + 272), (const void *)(a2 + 272), 0x1B9uLL);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  long long v17 = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 760) = v17;
  *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
  *(_WORD *)(a1 + 792) = *(_WORD *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RenderPipelineDescriptor(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1);
      uint64_t v5 = *((void *)a2 + 4);
      long long v6 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = v5;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *a2;
    long long v8 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
  }
  uint64_t v9 = (_OWORD *)(a1 + 40);
  uint64_t v10 = (long long *)((char *)a2 + 40);
  uint64_t v11 = *((void *)a2 + 6);
  if (*(void *)(a1 + 48))
  {
    if (v11)
    {
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 64) = *((void *)a2 + 8);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1 + 40);
      uint64_t v12 = *((void *)a2 + 9);
      long long v13 = *(long long *)((char *)a2 + 56);
      *uint64_t v9 = *v10;
      *(_OWORD *)(a1 + 56) = v13;
      *(void *)(a1 + 72) = v12;
    }
  }
  else if (v11)
  {
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *v10;
    long long v15 = *(long long *)((char *)a2 + 56);
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    *uint64_t v9 = v14;
    *(_OWORD *)(a1 + 56) = v15;
  }
  uint64_t v16 = (_OWORD *)(a1 + 80);
  long long v17 = a2 + 5;
  uint64_t v18 = *((void *)a2 + 11);
  if (*(void *)(a1 + 88))
  {
    if (v18)
    {
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1 + 80);
      uint64_t v19 = *((void *)a2 + 14);
      long long v20 = a2[6];
      *uint64_t v16 = *v17;
      *(_OWORD *)(a1 + 96) = v20;
      *(void *)(a1 + 112) = v19;
    }
  }
  else if (v18)
  {
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v17;
    long long v22 = a2[6];
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *uint64_t v16 = v21;
    *(_OWORD *)(a1 + 96) = v22;
  }
  long long v23 = (_OWORD *)(a1 + 120);
  long long v24 = (long long *)((char *)a2 + 120);
  uint64_t v25 = *((void *)a2 + 16);
  if (*(void *)(a1 + 128))
  {
    if (v25)
    {
      *(void *)(a1 + 120) = *((void *)a2 + 15);
      *(void *)(a1 + 128) = *((void *)a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1 + 120);
      uint64_t v26 = *((void *)a2 + 19);
      long long v27 = *(long long *)((char *)a2 + 136);
      *long long v23 = *v24;
      *(_OWORD *)(a1 + 136) = v27;
      *(void *)(a1 + 152) = v26;
    }
  }
  else if (v25)
  {
    *(void *)(a1 + 120) = *((void *)a2 + 15);
    *(void *)(a1 + 128) = *((void *)a2 + 16);
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    *(void *)(a1 + 144) = *((void *)a2 + 18);
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *v24;
    long long v29 = *(long long *)((char *)a2 + 136);
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    *long long v23 = v28;
    *(_OWORD *)(a1 + 136) = v29;
  }
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *((void *)a2 + 21);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *((void *)a2 + 23);
  *(void *)(a1 + 192) = *((void *)a2 + 24);
  *(void *)(a1 + 200) = *((void *)a2 + 25);
  *(void *)(a1 + 208) = *((void *)a2 + 26);
  *(void *)(a1 + 216) = *((void *)a2 + 27);
  *(void *)(a1 + 224) = *((void *)a2 + 28);
  *(void *)(a1 + 232) = *((void *)a2 + 29);
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  *(void *)(a1 + 248) = *((void *)a2 + 31);
  *(void *)(a1 + 256) = *((void *)a2 + 32);
  *(void *)(a1 + 264) = *((void *)a2 + 33);
  *(void *)(a1 + 272) = *((void *)a2 + 34);
  *(void *)(a1 + 280) = *((void *)a2 + 35);
  *(void *)(a1 + 288) = *((void *)a2 + 36);
  *(void *)(a1 + 296) = *((void *)a2 + 37);
  *(void *)(a1 + 304) = *((void *)a2 + 38);
  *(void *)(a1 + 312) = *((void *)a2 + 39);
  *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
  *(void *)(a1 + 328) = *((void *)a2 + 41);
  *(void *)(a1 + 336) = *((void *)a2 + 42);
  *(void *)(a1 + 344) = *((void *)a2 + 43);
  *(void *)(a1 + 352) = *((void *)a2 + 44);
  *(void *)(a1 + 360) = *((void *)a2 + 45);
  *(void *)(a1 + 368) = *((void *)a2 + 46);
  *(unsigned char *)(a1 + 376) = *((unsigned char *)a2 + 376);
  *(void *)(a1 + 384) = *((void *)a2 + 48);
  *(void *)(a1 + 392) = *((void *)a2 + 49);
  *(void *)(a1 + 400) = *((void *)a2 + 50);
  *(void *)(a1 + 408) = *((void *)a2 + 51);
  *(void *)(a1 + 416) = *((void *)a2 + 52);
  *(void *)(a1 + 424) = *((void *)a2 + 53);
  *(unsigned char *)(a1 + 432) = *((unsigned char *)a2 + 432);
  *(void *)(a1 + 440) = *((void *)a2 + 55);
  *(void *)(a1 + 448) = *((void *)a2 + 56);
  *(void *)(a1 + 456) = *((void *)a2 + 57);
  *(void *)(a1 + 464) = *((void *)a2 + 58);
  *(void *)(a1 + 472) = *((void *)a2 + 59);
  *(void *)(a1 + 480) = *((void *)a2 + 60);
  *(unsigned char *)(a1 + 488) = *((unsigned char *)a2 + 488);
  *(void *)(a1 + 496) = *((void *)a2 + 62);
  *(void *)(a1 + 504) = *((void *)a2 + 63);
  *(void *)(a1 + 512) = *((void *)a2 + 64);
  *(void *)(a1 + 520) = *((void *)a2 + 65);
  *(void *)(a1 + 528) = *((void *)a2 + 66);
  *(void *)(a1 + 536) = *((void *)a2 + 67);
  *(unsigned char *)(a1 + 544) = *((unsigned char *)a2 + 544);
  *(void *)(a1 + 552) = *((void *)a2 + 69);
  *(void *)(a1 + 560) = *((void *)a2 + 70);
  *(void *)(a1 + 568) = *((void *)a2 + 71);
  *(void *)(a1 + 576) = *((void *)a2 + 72);
  *(void *)(a1 + 584) = *((void *)a2 + 73);
  *(void *)(a1 + 592) = *((void *)a2 + 74);
  *(unsigned char *)(a1 + 600) = *((unsigned char *)a2 + 600);
  *(void *)(a1 + 608) = *((void *)a2 + 76);
  *(void *)(a1 + 616) = *((void *)a2 + 77);
  *(void *)(a1 + 624) = *((void *)a2 + 78);
  *(void *)(a1 + 632) = *((void *)a2 + 79);
  *(void *)(a1 + 640) = *((void *)a2 + 80);
  *(void *)(a1 + 648) = *((void *)a2 + 81);
  *(unsigned char *)(a1 + 656) = *((unsigned char *)a2 + 656);
  *(void *)(a1 + 664) = *((void *)a2 + 83);
  *(void *)(a1 + 672) = *((void *)a2 + 84);
  *(void *)(a1 + 680) = *((void *)a2 + 85);
  *(void *)(a1 + 688) = *((void *)a2 + 86);
  *(void *)(a1 + 696) = *((void *)a2 + 87);
  *(void *)(a1 + 704) = *((void *)a2 + 88);
  *(unsigned char *)(a1 + 712) = *((unsigned char *)a2 + 712);
  *(void *)(a1 + 720) = *((void *)a2 + 90);
  *(void *)(a1 + 728) = *((void *)a2 + 91);
  swift_retain();
  swift_release();
  *(void *)(a1 + 736) = *((void *)a2 + 92);
  long long v30 = *(long long *)((char *)a2 + 744);
  long long v31 = *(long long *)((char *)a2 + 776);
  *(_OWORD *)(a1 + 760) = *(long long *)((char *)a2 + 760);
  *(_OWORD *)(a1 + 776) = v31;
  *(_OWORD *)(a1 + 744) = v30;
  *(unsigned char *)(a1 + 792) = *((unsigned char *)a2 + 792);
  *(unsigned char *)(a1 + 793) = *((unsigned char *)a2 + 793);
  *(void *)(a1 + 800) = *((void *)a2 + 100);
  return a1;
}

void *initializeWithTake for RenderPipelineDescriptor(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x328uLL);
}

uint64_t assignWithTake for RenderPipelineDescriptor(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_unknownObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_unknownObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1B67A04EC(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
LABEL_6:
  if (*(void *)(a1 + 48))
  {
    uint64_t v6 = *(void *)(a2 + 48);
    if (v6)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_unknownObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_unknownObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1B67A04EC(a1 + 40);
  }
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
LABEL_11:
  if (*(void *)(a1 + 88))
  {
    uint64_t v8 = *(void *)(a2 + 88);
    if (v8)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v8;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_unknownObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_unknownObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1B67A04EC(a1 + 80);
  }
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
LABEL_16:
  if (!*(void *)(a1 + 128))
  {
LABEL_20:
    long long v11 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v11;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)(a2 + 128);
  if (!v10)
  {
    sub_1B67A04EC(a1 + 120);
    goto LABEL_20;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_unknownObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_unknownObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
LABEL_21:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_unknownObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v12 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v12;
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  long long v13 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v13;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  long long v14 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v14;
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  long long v15 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v15;
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  long long v16 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v16;
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  long long v17 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v17;
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
  long long v18 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v18;
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  long long v19 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v19;
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_release();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  long long v20 = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 760) = v20;
  *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(unsigned char *)(a1 + 793) = *(unsigned char *)(a2 + 793);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderPipelineDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 808)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderPipelineDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 808) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 808) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderPipelineDescriptor()
{
  return &type metadata for RenderPipelineDescriptor;
}

uint64_t sub_1B6BECEBC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BECF64()
{
  return sub_1B6E33928();
}

uint64_t sub_1B6BECFDC()
{
  return sub_1B6E33988();
}

BOOL sub_1B6BED080(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1B6BED5E8((uint64_t)v7, (uint64_t)v8);
}

uint64_t sub_1B6BED0C8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BED110()
{
  return sub_1B6E33928();
}

uint64_t sub_1B6BED13C()
{
  return sub_1B6E33988();
}

BOOL sub_1B6BED180(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 800) == *(void *)(a2 + 800);
}

unint64_t sub_1B6BED198()
{
  unint64_t result = qword_1E9DD6E30;
  if (!qword_1E9DD6E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E30);
  }
  return result;
}

unint64_t sub_1B6BED1F0()
{
  unint64_t result = qword_1E9DD6E38;
  if (!qword_1E9DD6E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E38);
  }
  return result;
}

uint64_t sub_1B6BED244(char *__dst, char *__src, unint64_t a3, char *a4)
{
  long long v4 = a4;
  uint64_t v6 = __src;
  long long v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 112;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 112;
  float32x4_t v34 = __dst;
  float v33 = a4;
  if (v9 >= v11)
  {
    if (v10 < -111) {
      goto LABEL_61;
    }
    uint64_t v19 = 112 * v11;
    if (a4 != __src || &__src[v19] <= a4) {
      memmove(a4, __src, 112 * v11);
    }
    long long v20 = &v4[v19];
    float32x4_t v32 = v20;
    float32x4_t v34 = v6;
    if (v7 >= v6 || v10 < 112)
    {
LABEL_60:
      sub_1B6D66D08((void **)&v34, &v33, &v32);
      return 1;
    }
    long long v21 = (char *)(a3 - 112);
    long long v22 = v6;
    long long v31 = v7;
    while (1)
    {
      long long v23 = v4;
      uint64_t v24 = *((void *)v20 - 14);
      uint64_t v25 = v21 + 112;
      uint64_t v27 = *((void *)v22 - 14);
      v22 -= 112;
      uint64_t v26 = v27;
      char v28 = v22[16];
      if (*(v20 - 96) == 1)
      {
        if (v22[16])
        {
          BOOL v29 = v24 == v26 && *((void *)v20 - 13) == *((void *)v22 + 1);
          if (!v29 && (sub_1B6E334B8() & 1) == 0 && (sub_1B6E334B8() & 1) != 0) {
            goto LABEL_52;
          }
        }
      }
      else
      {
        if (v24 < v26) {
          char v28 = 1;
        }
        if (v28)
        {
LABEL_52:
          if (v25 != v6 || v21 >= v6) {
            memmove(v21, v22, 0x70uLL);
          }
          float32x4_t v34 = v22;
          goto LABEL_57;
        }
      }
      float32x4_t v32 = v20 - 112;
      if (v25 >= v20 && v21 < v20)
      {
        long long v4 = v23;
        if (v25 != v20) {
          memmove(v21, v20 - 112, 0x70uLL);
        }
        long long v22 = v6;
        v20 -= 112;
        goto LABEL_58;
      }
      memmove(v21, v20 - 112, 0x70uLL);
      long long v22 = v6;
      v20 -= 112;
LABEL_57:
      long long v4 = v23;
LABEL_58:
      if (v22 > v31)
      {
        v21 -= 112;
        uint64_t v6 = v22;
        if (v20 > v4) {
          continue;
        }
      }
      goto LABEL_60;
    }
  }
  if (v8 >= -111)
  {
    size_t v12 = 112 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12);
    }
    long long v13 = &v4[v12];
    float32x4_t v32 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 112)
    {
      while (1)
      {
        uint64_t v14 = *(void *)v6;
        uint64_t v15 = *(void *)v4;
        char v16 = v4[16];
        if (v6[16] == 1)
        {
          if (v4[16])
          {
            BOOL v17 = v14 == v15 && *((void *)v6 + 1) == *((void *)v4 + 1);
            if (!v17 && (sub_1B6E334B8() & 1) == 0 && (sub_1B6E334B8() & 1) != 0) {
              goto LABEL_22;
            }
          }
        }
        else
        {
          if (v14 < v15) {
            char v16 = 1;
          }
          if (v16)
          {
LABEL_22:
            long long v18 = v6 + 112;
            if (v7 < v6 || v7 >= v18 || v7 != v6) {
              memmove(v7, v6, 0x70uLL);
            }
            goto LABEL_26;
          }
        }
        if (v7 != v4) {
          memmove(v7, v4, 0x70uLL);
        }
        v4 += 112;
        float v33 = v4;
        long long v18 = v6;
LABEL_26:
        v7 += 112;
        if (v4 < v13)
        {
          uint64_t v6 = v18;
          if ((unint64_t)v18 < a3) {
            continue;
          }
        }
        float32x4_t v34 = v7;
        goto LABEL_60;
      }
    }
    goto LABEL_60;
  }
LABEL_61:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

BOOL sub_1B6BED5E8(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
      && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      && *(void *)(a1 + 40) == *(void *)(a2 + 40);
}

uint64_t type metadata accessor for ParticleColorOverTexture.System()
{
  return self;
}

uint64_t sub_1B6BED678(void *a1)
{
  long long v3 = v1;
  sub_1B6BEEBA8(0, &qword_1E9DD6E50, (uint64_t (*)(void))sub_1B6BEEB54, (uint64_t)&type metadata for ParticleColorOverTexture.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6BEEB54();
  sub_1B6E33A88();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1B67FEC7C();
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v14 = v3[1];
    char v13 = 1;
    sub_1B6657A10();
    sub_1B6E32FA8();
    LOBYTE(v14) = *((unsigned char *)v3 + 16);
    char v13 = 2;
    sub_1B66C63C0();
    sub_1B6E32FA8();
    uint64_t v14 = v3[3];
    char v13 = 3;
    sub_1B6BEEBA8(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    sub_1B6BEEC10((unint64_t *)&qword_1EB97D1B8);
    sub_1B6E32FA8();
    uint64_t v14 = v3[4];
    char v13 = 4;
    sub_1B6E32FA8();
    LOBYTE(v14) = 5;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

const char *sub_1B6BED984()
{
  return "ParticleColorOverTexture";
}

uint64_t sub_1B6BED998(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB78B0(*a1, *a2);
}

uint64_t sub_1B6BED9A4()
{
  uint64_t result = 0x7469736F706D6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65727574786574;
      break;
    case 2:
      uint64_t result = 0x4D73736572646461;
      break;
    case 3:
      uint64_t result = 0x656C616373;
      break;
    case 4:
      uint64_t result = 1935763810;
      break;
    case 5:
      uint64_t result = 0x656C676E61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6BEDA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6BEDC4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6BEDA94(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEEB54();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BEDAD0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEEB54();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6BEDB0C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6BEE7A4(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 12);
    *(_OWORD *)((char *)a2 + 28) = *(_OWORD *)((char *)v7 + 12);
  }
  return result;
}

uint64_t sub_1B6BEDB50(void *a1)
{
  return sub_1B6BED678(a1);
}

uint64_t sub_1B6BEDB68()
{
  return sub_1B6BEDEE0();
}

uint64_t sub_1B6BEDBA4()
{
  return type metadata accessor for ParticleColorOverTexture.System();
}

uint64_t sub_1B6BEDBC4(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a2 + 8))(v2 + 8, 0, ObjectType, a2);
}

double sub_1B6BEDC1C@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 1065353216;
  *(void *)(a1 + 8) = 0xFFFFFFFFLL;
  *(unsigned char *)(a1 + 16) = 2;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(a1 + 24) = result;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1B6BEDC4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7469736F706D6F63 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65727574786574 && a2 == 0xE700000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D73736572646461 && a2 == 0xEB0000000065646FLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1935763810 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1B6BEDEE0()
{
  int v1 = *v0;
  sub_1B636D9FC(0, (unint64_t *)&qword_1EB980BA0, (uint64_t (*)(uint64_t))sub_1B663C11C, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  if (v1)
  {
    *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
    *(void *)(result + 32) = &type metadata for TransientOriginColor;
    *(void *)(result + 40) = &off_1F0F842D0;
    *(void *)(result + 48) = &type metadata for Color;
    long long v3 = (void *)(result + 56);
  }
  else
  {
    *(_OWORD *)(result + 16) = xmmword_1B6E77050;
    *(void *)(result + 32) = &type metadata for Color;
    long long v3 = (void *)(result + 40);
  }
  *long long v3 = &off_1F0F9ECD8;
  return result;
}

void *sub_1B6BEDFB0(uint64_t a1)
{
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a1;
  swift_retain();
  uint64_t v3 = *(void *)(a1 + 8);
  swift_retain();
  sub_1B695FFC4(v3, (uint64_t)&v83);
  swift_release();
  unsigned __int8 v4 = v83;
  if (v83 == 4)
  {
    unsigned __int8 v4 = 0;
    uint64_t v5 = 0;
    float v6 = 0.0;
    double v7 = 0.0;
    __asm { FMOV            V10.2S, #1.0 }
    char v13 = 2;
    unsigned int v14 = -1;
    float v52 = 1.0;
  }
  else
  {
    float v6 = *((float *)&v85 + 2);
    double v7 = *(double *)&v85;
    _D10 = *((double *)&v84 + 1);
    unsigned int v14 = DWORD2(v83);
    uint64_t v5 = HIDWORD(v83);
    float v52 = *((float *)&v83 + 1);
    char v13 = v84;
    if (DWORD2(v83) != -1) {
      goto LABEL_8;
    }
  }
  if (!v5)
  {
    return (void *)swift_release();
  }
LABEL_8:
  sub_1B6CEE8E8(v14 | (unint64_t)(v5 << 32), v68);
  sub_1B62CA210((uint64_t)v68, (uint64_t)v81, (unint64_t *)&unk_1EB97EFD0);
  if (!v82) {
    return (void *)swift_release();
  }
  long long v87 = v81[4];
  long long v88 = v81[5];
  long long v89 = v81[6];
  uint64_t v90 = v82;
  long long v83 = v81[0];
  long long v84 = v81[1];
  long long v85 = v81[2];
  long long v86 = v81[3];
  sub_1B6AFEFC8((uint64_t)&v83, v13, 1, (uint64_t)v69);
  sub_1B6657630((uint64_t)v69, (uint64_t)v78);
  if (*((void *)&v79 + 1) == 1)
  {
    sub_1B66576EC(v68[0].i64);
    return (void *)swift_release();
  }
  v65[0] = v78[0];
  v65[1] = v78[1];
  long long v66 = v79;
  uint64_t v67 = v80;
  long long v16 = *(_OWORD *)(a1 + 104);
  long long v62 = *(_OWORD *)(a1 + 88);
  long long v63 = v16;
  uint64_t v64 = *(void *)(a1 + 120);
  sub_1B663ECB8((uint64_t)v56);
  sub_1B688CF80(&v53, _D10, v6, v7);
  v60[0] = v56[0];
  v60[1] = v56[1];
  uint64_t v61 = v57;
  sub_1B62C9DA8(v2, (uint64_t)v60, 0x200000000, &v70);
  sub_1B62CA210((uint64_t)&v70, (uint64_t)v71, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v71[0])
  {
    sub_1B66576EC(v68[0].i64);
    sub_1B62CA064((uint64_t)v56);
    return (void *)swift_release();
  }
  if (v77 > 0 && (uint64_t v43 = v74) != 0)
  {
    BOOL v17 = v76;
    uint64_t v48 = v76[4];
    char v47 = *(unsigned char *)(v75 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v58[0] = v71[0];
    v58[1] = v71[1];
    uint64_t v59 = v72;
    uint64_t v41 = (uint64_t)(v76 + 6);
    uint64_t v42 = v73;
    uint64_t v40 = v76 + 8;
    float32x2_t v50 = (float32x2_t)v54;
    float32x2_t v51 = *(float32x2_t *)v53.f32;
    float32x2_t v49 = (float32x2_t)v55;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = v4;
    uint64_t v39 = v4;
    do
    {
      long long v21 = (unsigned int *)(v42 + 48 * v18);
      uint64_t v45 = *v21;
      uint64_t v46 = v19;
      uint64_t v44 = v21[1];
      long long v23 = (uint64_t *)*((void *)v21 + 2);
      uint64_t v22 = *((void *)v21 + 3);
      uint64_t v25 = *((void *)v21 + 4);
      uint64_t v24 = *((void *)v21 + 5);
      if (v47)
      {
        uint64_t v26 = *(os_unfair_lock_s **)(v24 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v26);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v48);
      sub_1B62CA210(v41, (uint64_t)v91, &qword_1EB97DE20);
      uint64_t v27 = v17[4];
      uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v24 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v17[6] = ecs_stack_allocator_allocate(v27, 48 * v28, 8);
      v17[7] = v28;
      v40[1] = 0;
      v40[2] = 0;
      *uint64_t v40 = 0;
      swift_release();
      BOOL v29 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v23, v22, v25, (uint64_t)v17);
      uint64_t v30 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v23, v22, v25, (uint64_t)v17);
      long long v31 = (float32x4_t *)v30;
      if (v23)
      {
        for (; v25; --v25)
        {
          (*((void (**)(_OWORD *, double))&v66 + 1))(v65, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v50, *v31, 2), vadd_f32(v49, vmul_n_f32(v51, COERCE_FLOAT(*v31))))));
          switch(v20)
          {
            case 1:
              float32x4_t v32 = vaddq_f32(vmulq_n_f32(v33, v52), *v29);
              break;
            case 2:
              float32x4_t v32 = vmulq_f32(vmulq_n_f32(v33, v52), *v29);
              break;
            case 3:
              float32x4_t v32 = vaddq_f32(*v29, vmulq_n_f32(vsubq_f32(v33, *v29), v52));
              break;
            default:
              float32x4_t v32 = vmulq_n_f32(v33, v52);
              break;
          }
          *v29++ = v32;
          ++v31;
        }
      }
      else if (v45 != v44)
      {
        uint64_t v34 = v44 - v45;
        float32x4_t v35 = (float32x4_t *)(v30 + 16 * v45);
        float32x4_t v36 = &v29[v45];
        do
        {
          (*((void (**)(_OWORD *, double))&v66 + 1))(v65, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v50, *v35, 2), vadd_f32(v49, vmul_n_f32(v51, COERCE_FLOAT(*v35))))));
          switch(v39)
          {
            case 1:
              float32x4_t v37 = vaddq_f32(vmulq_n_f32(v38, v52), *v36);
              break;
            case 2:
              float32x4_t v37 = vmulq_f32(vmulq_n_f32(v38, v52), *v36);
              break;
            case 3:
              float32x4_t v37 = vaddq_f32(*v36, vmulq_n_f32(vsubq_f32(v38, *v36), v52));
              break;
            default:
              float32x4_t v37 = vmulq_n_f32(v38, v52);
              break;
          }
          *v36++ = v37;
          ++v35;
          --v34;
        }
        while (v34);
      }
      uint64_t v19 = v46;
      sub_1B6345178(v17, (unsigned __int16 **)v58, (uint64_t)v91);
      sub_1B634507C((char *)v24);
      ecs_stack_allocator_pop_snapshot(v48);
      if (v47)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
      }
      swift_release();
      ++v18;
    }
    while (v18 != v43);
    sub_1B66576EC(v68[0].i64);
    sub_1B62CA064((uint64_t)v56);
  }
  else
  {
    sub_1B6657794(&v70, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
    sub_1B66576EC(v68[0].i64);
    sub_1B62CA064((uint64_t)v56);
  }
  swift_release();
  sub_1B6657794(&v70, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B6657794(&v70, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t getEnumTagSinglePayload for ParticleColorOverTexture(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[44]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleColorOverTexture(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 44) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleColorOverTexture()
{
  return &type metadata for ParticleColorOverTexture;
}

uint64_t sub_1B6BEE7A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6BEEBA8(0, &qword_1E9DD6E40, (uint64_t (*)(void))sub_1B6BEEB54, (uint64_t)&type metadata for ParticleColorOverTexture.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = a1[3];
  long long v23 = a1;
  sub_1B62C14BC(a1, v11);
  sub_1B6BEEB54();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v23);
  }
  uint64_t v12 = v7;
  char v24 = 0;
  sub_1B63BD348();
  uint64_t v13 = v6;
  sub_1B6E32DF8();
  char v14 = v25;
  int v15 = HIDWORD(v25);
  char v24 = 1;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  uint64_t v16 = v25;
  char v24 = 2;
  sub_1B62AAB40();
  sub_1B6E32DF8();
  HIDWORD(v22) = v25;
  sub_1B6BEEBA8(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  char v24 = 3;
  sub_1B6BEEC10((unint64_t *)&qword_1EB97D1D0);
  sub_1B6E32DF8();
  uint64_t v17 = v25;
  char v24 = 4;
  sub_1B6E32DF8();
  uint64_t v18 = v25;
  LOBYTE(v25) = 5;
  sub_1B6E32DC8();
  int v20 = v19;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v13);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v23);
  *(unsigned char *)a2 = v14;
  *(_DWORD *)(a2 + 4) = v15;
  *(void *)(a2 + 8) = v16;
  *(unsigned char *)(a2 + 16) = BYTE4(v22);
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v18;
  *(_DWORD *)(a2 + 40) = v20;
  return result;
}

unint64_t sub_1B6BEEB54()
{
  unint64_t result = qword_1E9DD6E48;
  if (!qword_1E9DD6E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E48);
  }
  return result;
}

void sub_1B6BEEBA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B6BEEC10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6BEEBA8(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticleColorOverTexture.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BEED58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleColorOverTexture.CodingKeys()
{
  return &type metadata for ParticleColorOverTexture.CodingKeys;
}

unint64_t sub_1B6BEED94()
{
  unint64_t result = qword_1E9DD6E58;
  if (!qword_1E9DD6E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E58);
  }
  return result;
}

unint64_t sub_1B6BEEDEC()
{
  unint64_t result = qword_1E9DD6E60;
  if (!qword_1E9DD6E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E60);
  }
  return result;
}

unint64_t sub_1B6BEEE44()
{
  unint64_t result = qword_1E9DD6E68;
  if (!qword_1E9DD6E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E68);
  }
  return result;
}

uint64_t initializeWithCopy for AnyCoder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyCoder(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

_OWORD *assignWithTake for AnyCoder(_OWORD *a1, _OWORD *a2)
{
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for AnyCoder()
{
  return &type metadata for AnyCoder;
}

uint64_t sub_1B6BEEF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  char v8 = a3 & 1;
  sub_1B62B3F7C();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  char v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67[1] = v8;
  type metadata accessor for TextureDescriptor(0);
  uint64_t v16 = v15;
  if (swift_dynamicCastMetatype())
  {
    sub_1B6BEFE5C();
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      __int16 v18 = WORD4(v61);
      char v19 = BYTE10(v61);
      long long v59 = v63;
      long long v60 = v62;
      long long v58 = v64;
      uint64_t v20 = v65;
      a4[3] = v16;
      uint64_t result = swift_allocObject();
      *a4 = result;
      *(void *)(result + 16) = v61;
      *(_WORD *)(result + 24) = v18;
      *(unsigned char *)(result + 26) = v19;
      long long v21 = v59;
      *(_OWORD *)(result + 32) = v60;
      *(_OWORD *)(result + 48) = v21;
      *(_OWORD *)(result + 64) = v58;
      *(void *)(result + 80) = v20;
      *(_DWORD *)(result + 88) = v66;
    }
    return result;
  }
  type metadata accessor for simd_quatf(0);
  uint64_t v23 = v22;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62ADC54();
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      long long v60 = v61;
      a4[3] = v23;
      uint64_t result = swift_allocObject();
      *a4 = result;
      *(_OWORD *)(result + 16) = v60;
    }
    return result;
  }
  type metadata accessor for simd_float2x2(0);
  uint64_t v25 = v24;
  if (swift_dynamicCastMetatype())
  {
    sub_1B6792244();
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      long long v26 = v61;
      a4[3] = v25;
      *(_OWORD *)a4 = v26;
    }
    return result;
  }
  type metadata accessor for simd_float2x3(0);
  uint64_t v28 = v27;
  if (swift_dynamicCastMetatype())
  {
    sub_1B67921F0();
    goto LABEL_14;
  }
  type metadata accessor for simd_float2x4(0);
  uint64_t v28 = v29;
  if (swift_dynamicCastMetatype())
  {
    sub_1B679219C();
LABEL_14:
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      long long v59 = v62;
      long long v60 = v61;
      a4[3] = v28;
      uint64_t result = swift_allocObject();
      *a4 = result;
      long long v30 = v59;
      *(_OWORD *)(result + 16) = v60;
      *(_OWORD *)(result + 32) = v30;
    }
    return result;
  }
  type metadata accessor for simd_float3x2(0);
  uint64_t v32 = v31;
  if (swift_dynamicCastMetatype())
  {
    sub_1B6792148();
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      long long v33 = v61;
      uint64_t v34 = v62;
      a4[3] = v32;
      *(_OWORD *)a4 = v33;
      a4[2] = v34;
    }
    return result;
  }
  type metadata accessor for simd_float3x3(0);
  uint64_t v36 = v35;
  if (swift_dynamicCastMetatype())
  {
    sub_1B67920F4();
    goto LABEL_24;
  }
  type metadata accessor for simd_float3x4(0);
  uint64_t v36 = v37;
  if (swift_dynamicCastMetatype())
  {
    sub_1B67920A0();
LABEL_24:
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      long long v59 = v62;
      long long v60 = v61;
      long long v58 = v63;
      a4[3] = v36;
      uint64_t result = swift_allocObject();
      *a4 = result;
      long long v38 = v59;
      *(_OWORD *)(result + 16) = v60;
      *(_OWORD *)(result + 32) = v38;
      *(_OWORD *)(result + 48) = v58;
    }
    return result;
  }
  type metadata accessor for simd_float4x2(0);
  uint64_t v40 = v39;
  if (swift_dynamicCastMetatype())
  {
    sub_1B679204C();
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      long long v60 = v61;
      long long v41 = v62;
      a4[3] = v40;
      uint64_t result = swift_allocObject();
      *a4 = result;
      *(_OWORD *)(result + 16) = v60;
      *(_OWORD *)(result + 32) = v41;
    }
  }
  else
  {
    type metadata accessor for simd_float4x3(0);
    uint64_t v43 = v42;
    if (swift_dynamicCastMetatype())
    {
      sub_1B6791FF8();
    }
    else
    {
      type metadata accessor for simd_float4x4(0);
      uint64_t v43 = v44;
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v47 = sub_1B62B4740(a1);
        *(void *)&long long v60 = v48;
        *(void *)&long long v59 = v49;
        if (v47)
        {
          uint64_t v50 = v47;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
          v67[0] = v8;
          *((void *)&v62 + 1) = v50;
          *(void *)&long long v63 = v60;
          *((void *)&v63 + 1) = v59;
          sub_1B62C12C4((uint64_t *)&v61);
          sub_1B6BEFDB8();
          sub_1B6AB3BF4((uint64_t)v14, (uint64_t)v67, v50, (uint64_t)&type metadata for AnyCoder.CodingKeys);
          if (v4)
          {
            return sub_1B6A4A85C((uint64_t)&v61);
          }
          else
          {
            uint64_t v51 = *((void *)&v62 + 1);
            float v52 = sub_1B62C14BC(&v61, *((uint64_t *)&v62 + 1));
            a4[3] = v51;
            float32x4_t v53 = sub_1B62C12C4(a4);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v53, v52, v51);
            return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v61);
          }
        }
        else
        {
          *(void *)&long long v61 = 0;
          *((void *)&v61 + 1) = 0xE000000000000000;
          sub_1B6E328C8();
          uint64_t v54 = sub_1B6E33B48();
          uint64_t v56 = v55;
          swift_bridgeObjectRelease();
          *(void *)&long long v61 = v54;
          *((void *)&v61 + 1) = v56;
          sub_1B6E31948();
          uint64_t result = sub_1B6E32BE8();
          __break(1u);
        }
        return result;
      }
      sub_1B62B18DC();
    }
    uint64_t result = sub_1B6E32DF8();
    if (!v4)
    {
      long long v59 = v62;
      long long v60 = v61;
      long long v57 = v64;
      long long v58 = v63;
      a4[3] = v43;
      uint64_t result = swift_allocObject();
      *a4 = result;
      long long v45 = v59;
      *(_OWORD *)(result + 16) = v60;
      *(_OWORD *)(result + 32) = v45;
      long long v46 = v57;
      *(_OWORD *)(result + 48) = v58;
      *(_OWORD *)(result + 64) = v46;
    }
  }
  return result;
}

uint64_t sub_1B6BEF67C(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62CAAD8(v1, (uint64_t)v6);
  sub_1B62C14BC(v6, v7);
  uint64_t DynamicType = swift_getDynamicType();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
  v6[0] = DynamicType;
  sub_1B62C550C((uint64_t)v8, v9);
  sub_1B6A5F440();
  sub_1B6E332B8();
  if (!v2)
  {
    sub_1B6BEF7A4(v3, (uint64_t)v6);
    sub_1B62C14BC(v6, v7);
    sub_1B6AB3B8C((uint64_t)v8);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
}

uint64_t sub_1B6BEF7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62CAAD8(a1, (uint64_t)v41);
  type metadata accessor for TextureDescriptor(0);
  if (swift_dynamicCast())
  {
    __int16 v4 = WORD4(v35);
    char v5 = BYTE10(v35);
    long long v24 = v37;
    long long v28 = v36;
    long long v21 = v38;
    uint64_t v6 = v39;
    *(void *)(a2 + 24) = &type metadata for TextureDescriptorCoder;
    *(void *)(a2 + 32) = sub_1B6BEFE5C();
    *(void *)(a2 + 40) = sub_1B6BEFED8();
    uint64_t v7 = swift_allocObject();
    *(void *)a2 = v7;
    *(void *)(v7 + 16) = v35;
    *(_WORD *)(v7 + 24) = v4;
    *(unsigned char *)(v7 + 26) = v5;
    *(_OWORD *)(v7 + 32) = v28;
    *(_OWORD *)(v7 + 48) = v24;
    *(_OWORD *)(v7 + 64) = v21;
    *(void *)(v7 + 80) = v6;
    *(_DWORD *)(v7 + 88) = v40;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_quatf(0);
  if (swift_dynamicCast())
  {
    long long v29 = v35;
    *(void *)(a2 + 24) = &type metadata for QuaternionFCoder;
    *(void *)(a2 + 32) = sub_1B62ADC54();
    *(void *)(a2 + 40) = sub_1B67AF070();
    uint64_t v8 = swift_allocObject();
    *(void *)a2 = v8;
    *(_OWORD *)(v8 + 16) = v29;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_float2x2(0);
  if (swift_dynamicCast())
  {
    long long v9 = v35;
    *(void *)(a2 + 24) = &type metadata for Float2x2Coder;
    *(void *)(a2 + 32) = sub_1B6792244();
    *(void *)(a2 + 40) = sub_1B6792538();
    *(_OWORD *)a2 = v9;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_float2x3(0);
  if (swift_dynamicCast())
  {
    long long v25 = v36;
    long long v30 = v35;
    *(void *)(a2 + 24) = &type metadata for Float2x3Coder;
    *(void *)(a2 + 32) = sub_1B67921F0();
    unint64_t v10 = sub_1B67924E4();
LABEL_11:
    *(void *)(a2 + 40) = v10;
    uint64_t v11 = swift_allocObject();
    *(void *)a2 = v11;
    *(_OWORD *)(v11 + 16) = v30;
    *(_OWORD *)(v11 + 32) = v25;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_float2x4(0);
  if (swift_dynamicCast())
  {
    long long v25 = v36;
    long long v30 = v35;
    *(void *)(a2 + 24) = &type metadata for Float2x4Coder;
    *(void *)(a2 + 32) = sub_1B679219C();
    unint64_t v10 = sub_1B6792490();
    goto LABEL_11;
  }
  type metadata accessor for simd_float3x2(0);
  if (swift_dynamicCast())
  {
    long long v31 = v35;
    uint64_t v13 = v36;
    *(void *)(a2 + 24) = &type metadata for Float3x2Coder;
    *(void *)(a2 + 32) = sub_1B6792148();
    *(void *)(a2 + 40) = sub_1B679243C();
    *(_OWORD *)a2 = v31;
    *(void *)(a2 + 16) = v13;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_float3x3(0);
  if (swift_dynamicCast())
  {
    long long v26 = v36;
    long long v32 = v35;
    long long v22 = v37;
    *(void *)(a2 + 24) = &type metadata for Float3x3Coder;
    *(void *)(a2 + 32) = sub_1B67920F4();
    unint64_t v14 = sub_1B67923E8();
LABEL_19:
    *(void *)(a2 + 40) = v14;
    uint64_t v15 = (_OWORD *)swift_allocObject();
    *(void *)a2 = v15;
    v15[1] = v32;
    _OWORD v15[2] = v26;
    v15[3] = v22;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_float3x4(0);
  if (swift_dynamicCast())
  {
    long long v26 = v36;
    long long v32 = v35;
    long long v22 = v37;
    *(void *)(a2 + 24) = &type metadata for Float3x4Coder;
    *(void *)(a2 + 32) = sub_1B67920A0();
    unint64_t v14 = sub_1B6792394();
    goto LABEL_19;
  }
  type metadata accessor for simd_float4x2(0);
  if (swift_dynamicCast())
  {
    long long v33 = v35;
    long long v16 = v36;
    *(void *)(a2 + 24) = &type metadata for Float4x2Coder;
    *(void *)(a2 + 32) = sub_1B679204C();
    *(void *)(a2 + 40) = sub_1B6792340();
    uint64_t v17 = swift_allocObject();
    *(void *)a2 = v17;
    *(_OWORD *)(v17 + 16) = v33;
    *(_OWORD *)(v17 + 32) = v16;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_float4x3(0);
  if (swift_dynamicCast())
  {
    long long v27 = v36;
    long long v34 = v35;
    long long v20 = v38;
    long long v23 = v37;
    *(void *)(a2 + 24) = &type metadata for Float4x3Coder;
    *(void *)(a2 + 32) = sub_1B6791FF8();
    unint64_t v18 = sub_1B67922EC();
LABEL_26:
    *(void *)(a2 + 40) = v18;
    char v19 = (_OWORD *)swift_allocObject();
    *(void *)a2 = v19;
    v19[1] = v34;
    v19[2] = v27;
    v19[3] = v23;
    v19[4] = v20;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  type metadata accessor for simd_float4x4(0);
  if (swift_dynamicCast())
  {
    long long v27 = v36;
    long long v34 = v35;
    long long v20 = v38;
    long long v23 = v37;
    *(void *)(a2 + 24) = &type metadata for Float4x4Coder;
    *(void *)(a2 + 32) = sub_1B62B18DC();
    unint64_t v18 = sub_1B6792298();
    goto LABEL_26;
  }
  sub_1B67F8764();
  if (swift_dynamicCast())
  {
    sub_1B6BEFEC0(&v35, (_OWORD *)a2);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  sub_1B62CAAD8(a1, (uint64_t)&v35);
  sub_1B6E328C8();
  sub_1B6E32B18();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6BEFDA0(void *a1)
{
  return sub_1B6BEF67C(a1);
}

unint64_t sub_1B6BEFDB8()
{
  unint64_t result = qword_1EB97FE90;
  if (!qword_1EB97FE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FE90);
  }
  return result;
}

uint64_t sub_1B6BEFE0C()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6BEFE1C()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B6BEFE2C()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

uint64_t sub_1B6BEFE3C()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B6BEFE4C()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

unint64_t sub_1B6BEFE5C()
{
  unint64_t result = qword_1E9DD8870;
  if (!qword_1E9DD8870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8870);
  }
  return result;
}

uint64_t sub_1B6BEFEB0()
{
  return MEMORY[0x1F4186498](v0, 96, 7);
}

_OWORD *sub_1B6BEFEC0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_1B6BEFED8()
{
  unint64_t result = qword_1E9DD88A0;
  if (!qword_1E9DD88A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD88A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnyCoder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6BEFFF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyCoder.CodingKeys()
{
  return &type metadata for AnyCoder.CodingKeys;
}

uint64_t sub_1B6BF0030(char *a1, char *a2)
{
  return sub_1B6BBA220(*a1, *a2);
}

uint64_t sub_1B6BF003C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BF00B4()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BF0118()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6BF018C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B6BF01EC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701869940;
  if (!*v1) {
    uint64_t v2 = 0x65756C6176;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6BF0220()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_1B6BF0250@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B6BF02B4(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEFDB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6BF02F0(uint64_t a1)
{
  unint64_t v2 = sub_1B6BEFDB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B6BF0330()
{
  unint64_t result = qword_1E9DD6E70;
  if (!qword_1E9DD6E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6E70);
  }
  return result;
}

unint64_t sub_1B6BF0388()
{
  unint64_t result = qword_1EB97FEA0;
  if (!qword_1EB97FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FEA0);
  }
  return result;
}

unint64_t sub_1B6BF03E0()
{
  unint64_t result = qword_1EB97FE98;
  if (!qword_1EB97FE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FE98);
  }
  return result;
}

uint64_t sub_1B6BF0434(unint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t result = sub_1B6BF9974(a1, a2, a3);
  if (!v3 && (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BF0554(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6BFE580(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 16, a3, a4), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BF06F4(uint64_t a1, uint64_t a2)
{
  return sub_1B6BF08BC(a1, a2, (uint64_t (*)(void, void, uint64_t))sub_1B6BFD874);
}

uint64_t sub_1B6BF0720(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6BFDAD8(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), a2, a1),
        !v2)
    && (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BF08BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, uint64_t))
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = a3(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v4 + 12 * (int)a1 + 4), 64), !v3)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BF0A6C(uint64_t result, uint64_t a2, void *__src)
{
  if (result == 0xFFFFFFFFLL) {
    goto LABEL_15;
  }
  if (result << 32 < (uint64_t)0xFFFFFFFF00000001) {
    goto LABEL_15;
  }
  if ((int)result >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (HIDWORD(result) != -1 && *(_DWORD *)(v4 + 12 * (int)result + 8) != HIDWORD(result)) {
    goto LABEL_15;
  }
  uint64_t v5 = (int *)(v4 + 12 * (int)result);
  uint64_t v6 = *(void *)(*(void *)(a2 + 136) + 8 * *v5 + 32);
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_10:
    if (v3) {
      return result;
    }
LABEL_15:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  int v9 = *((__int16 *)v5 + 2);
  unint64_t v10 = (void *)(v7 + 56);
  while ((ValueMetadata *)*(v10 - 3) != &type metadata for ForceField)
  {
    v10 += 5;
    if (!--v8) {
      goto LABEL_10;
    }
  }
  uint64_t v11 = (void *)(*(void *)(v6 + 128) + *v10 + 144 * v9);

  return (uint64_t)memmove(v11, __src, 0x80uLL);
}

uint64_t sub_1B6BF0C6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6BFE5F4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 128, a3, a4), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BF0E10(uint64_t result, uint64_t a2, unsigned char *a3)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v4 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v5 = (int *)(v4 + 12 * (int)result);
      uint64_t v6 = *(void *)(*(void *)(a2 + 136) + 8 * *v5 + 32);
      uint64_t v7 = *(void *)(v6 + 48);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v9 = *((__int16 *)v5 + 2);
        unint64_t v10 = (void *)(v7 + 56);
        while ((ValueMetadata *)*(v10 - 3) != &type metadata for ParticleSpawnState)
        {
          v10 += 5;
          if (!--v8) {
            goto LABEL_10;
          }
        }
        goto LABEL_12;
      }
LABEL_10:
      if (v3) {
        return result;
      }
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
LABEL_12:
  *(unsigned char *)(*(void *)(v6 + 128) + *v10 + (v9 << 7) + 112) = *a3;
  return result;
}

uint64_t sub_1B6BF0FE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C02DD0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32)), !v2)
    && (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BF118C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v4 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v5 = (int *)(v4 + 12 * (int)result);
      uint64_t v6 = *(void *)(*(void *)(a2 + 136) + 8 * *v5 + 32);
      uint64_t v7 = *(void *)(v6 + 48);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v9 = *((__int16 *)v5 + 2);
        unint64_t v10 = HIDWORD(a3);
        uint64_t v11 = (void *)(v7 + 56);
        while ((ValueMetadata *)*(v11 - 3) != &type metadata for PropagateDirtiness)
        {
          v11 += 5;
          if (!--v8) {
            goto LABEL_10;
          }
        }
        goto LABEL_12;
      }
LABEL_10:
      if (v3) {
        return result;
      }
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
LABEL_12:
  uint64_t v12 = (_DWORD *)(*(void *)(v6 + 128) + *v11 + 8 * v9);
  *uint64_t v12 = a3;
  v12[1] = v10;
  return result;
}

uint64_t sub_1B6BF1364(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C03508(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 112, a2, a1), !v2)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BF1508(uint64_t a1, unint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_1B636C73C(a1, a2, a3, a4, a5, a6);
  if (!v6 && (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void sub_1B6BF163C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != 0xFFFFFFFF
    && (uint64_t)(a2 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v7 = *(unsigned int *)(v6 + 12 * (int)a2 + 8);
    if (HIDWORD(a2) == -1 || v7 == HIDWORD(a2))
    {
      uint64_t v8 = (unsigned int *)(v6 + 12 * (int)a2);
      sub_1B6BFCB90(*(void *)(*(void *)(v4 + 136) + 8 * (int)*v8 + 32), *v8 | ((unint64_t)*((unsigned __int16 *)v8 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v8 + 2) << 32), v7, a1, v4, a2, a3, a4);
    }
  }
}

void sub_1B6BF16FC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v7 = a4;
  uint64_t v8 = a2;
  if (*(unsigned char *)(a1 + 210) != 1)
  {
    if (a4)
    {
      do
      {
        uint64_t v31 = *v8++;
        uint64_t v30 = v31;
        if (a5)
        {
          sub_1B63B3AAC(v30, *(void *)(a6 + 232));
        }
        else
        {
          sub_1B63B3AAC(v30, *(void *)(a6 + 256));
          ++*(void *)(a6 + 256);
        }
        uint64_t v27 = *(void *)(a6 + 232);
        if (*(void *)(a6 + 240) == v27) {
          uint64_t v28 = *(void *)(a6 + 240);
        }
        else {
          uint64_t v28 = v27 + 1;
        }
        *(void *)(a6 + 232) = v28;
        uint64_t v29 = *(void *)(a6 + 248);
        if (v28 <= v29) {
          uint64_t v28 = *(void *)(a6 + 248);
        }
        if (v30 >= v29) {
          uint64_t v28 = v29 + 1;
        }
        *(void *)(a6 + 248) = v28;
        --v7;
      }
      while (v7);
    }
    return;
  }
  uint64_t v9 = *(void *)(a6 + 56);
  uint64_t v71 = *(void *)(v9 + 16);
  if (v71)
  {
    uint64_t v10 = 256;
    if (a5) {
      uint64_t v10 = 232;
    }
    uint64_t v65 = v10;
    uint64_t v67 = *(void *)(a6 + 16);
    uint64_t v69 = v9 + 32;
    uint64_t v11 = 5;
    if (a4 > 5) {
      uint64_t v11 = a4;
    }
    uint64_t v59 = v11;
    uint64_t v61 = a4 + 1;
    uint64_t v63 = *(void *)(a6 + 16) + 80;
    swift_retain();
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = (uint64_t *)(v69 + 40 * v12);
      uint64_t v14 = *v13;
      uint64_t v15 = v13[3];
      uint64_t v74 = v12;
      uint64_t v76 = v13[2];
      uint64_t v16 = *(void *)(a6 + v65);
      if (v16 == *v8)
      {
        uint64_t v17 = v16 + 1;
        if (v7 > 1)
        {
          if (v17 == v8[1])
          {
            uint64_t v17 = v16 + 2;
            if ((unint64_t)v7 >= 3 && v17 == v8[2])
            {
              uint64_t v17 = v16 + 3;
              if ((unint64_t)v7 >= 4 && v17 == v8[3])
              {
                if ((unint64_t)v7 < 5)
                {
                  uint64_t v17 = v16 + 4;
                  uint64_t v18 = 4;
                }
                else
                {
                  uint64_t v17 = v59 + v16;
                  uint64_t v18 = 4;
                  while (v16 + v18 == v8[v18])
                  {
                    if (v59 == ++v18)
                    {
                      uint64_t v18 = v59;
                      goto LABEL_26;
                    }
                  }
                  uint64_t v17 = v16 + v18;
                }
              }
              else
              {
                uint64_t v18 = 3;
              }
            }
            else
            {
              uint64_t v18 = 2;
            }
          }
          else
          {
LABEL_24:
            uint64_t v18 = 1;
          }
LABEL_26:
          uint64_t v19 = 0;
          uint64_t v20 = *(void *)(a6 + 240);
          uint64_t v21 = v7;
          do
          {
            while (1)
            {
              while (1)
              {
                uint64_t v22 = v8[--v21];
                if (v22 < *(void *)(a6 + 248)) {
                  break;
                }
                if (v22 >= --v20)
                {
LABEL_27:
                  if (!v21) {
                    goto LABEL_48;
                  }
                }
                else
                {
                  sub_1B6B3BDDC(*(void *)(a6 + 128) + v15, *(void *)(a6 + 128) + v15 + *(void *)(a6 + 88) * v76, v22, v20, v14);
                  uint64_t v8 = a2;
                  ++v19;
                  if (!v21) {
                    goto LABEL_48;
                  }
                }
              }
              if (v17 >= v22) {
                goto LABEL_48;
              }
              sub_1B6B3BDDC(*(void *)(a6 + 128) + v15, *(void *)(a6 + 128) + v15 + *(void *)(a6 + 88) * v76, v22, v17, v14);
              uint64_t v8 = a2;
              ++v19;
              if (v17 + 1 == a2[v18]) {
                break;
              }
              ++v17;
              if (!v21) {
                goto LABEL_48;
              }
            }
            uint64_t v23 = v17 + 2;
            uint64_t v24 = v18 + 1;
            if (v18 + 1 < v7 && v23 == a2[v24])
            {
              uint64_t v23 = v17 + 3;
              uint64_t v24 = v18 + 2;
              if (v18 + 2 < v7 && v23 == a2[v24])
              {
                uint64_t v23 = v17 + 4;
                uint64_t v24 = v18 + 3;
                if (v18 + 3 < v7)
                {
                  uint64_t v17 = v61 + v17 - v18;
                  while (v23 == a2[v24])
                  {
                    ++v23;
                    if (v7 == ++v24)
                    {
                      uint64_t v18 = v7;
                      goto LABEL_27;
                    }
                  }
                }
              }
            }
            uint64_t v17 = v23;
            uint64_t v18 = v24;
          }
          while (v21);
          goto LABEL_48;
        }
        if (v7) {
          goto LABEL_24;
        }
        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        uint64_t v17 = *(void *)(a6 + v65);
        if (v7) {
          goto LABEL_26;
        }
      }
LABEL_48:
      Swift::UInt32 v25 = *(_DWORD *)(v63 + OBJC_IVAR____TtC3VFX13EntityManager_counters);
      uint64_t v26 = sub_1B62F238C(v14);
      if (*(void *)(v67 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
        vfx_counters.add(_:_:)(v25, v26 * v19);
      }
      uint64_t v12 = v74 + 1;
      uint64_t v8 = a2;
      if (v74 + 1 == v71)
      {
        swift_release();
        uint64_t v8 = a2;
        break;
      }
    }
  }
  uint64_t v32 = *(void *)(a6 + 64);
  uint64_t v72 = *(void *)(v32 + 16);
  if (!v72) {
    goto LABEL_119;
  }
  uint64_t v33 = 256;
  if (a5) {
    uint64_t v33 = 232;
  }
  uint64_t v66 = v33;
  uint64_t v68 = *(void *)(a6 + 16);
  uint64_t v70 = v32 + 32;
  uint64_t v34 = 5;
  if (v7 > 5) {
    uint64_t v34 = v7;
  }
  uint64_t v60 = v34;
  uint64_t v62 = v7 + 1;
  uint64_t v64 = *(void *)(a6 + 16) + 80;
  swift_retain();
  uint64_t v35 = 0;
  uint64_t v77 = v7;
  do
  {
    long long v36 = (uint64_t *)(v70 + 40 * v35);
    uint64_t v37 = *v36;
    uint64_t v39 = v36[2];
    uint64_t v38 = v36[3];
    uint64_t v40 = *(void *)(a6 + v66);
    uint64_t v75 = v35;
    if (v40 != *v8)
    {
      uint64_t v42 = 0;
      uint64_t v43 = 0;
      uint64_t v41 = *(void *)(a6 + v66);
      if (!v7) {
        goto LABEL_113;
      }
      goto LABEL_91;
    }
    uint64_t v41 = v40 + 1;
    if (v7 <= 1)
    {
      if (!v7)
      {
        uint64_t v43 = 0;
        goto LABEL_113;
      }
    }
    else if (v41 == v8[1])
    {
      uint64_t v41 = v40 + 2;
      if ((unint64_t)v7 >= 3 && v41 == v8[2])
      {
        uint64_t v41 = v40 + 3;
        if ((unint64_t)v7 >= 4 && v41 == v8[3])
        {
          if ((unint64_t)v7 < 5)
          {
            uint64_t v41 = v40 + 4;
            uint64_t v42 = 4;
          }
          else
          {
            uint64_t v41 = v60 + v40;
            uint64_t v42 = 4;
            while (v40 + v42 == v8[v42])
            {
              if (v60 == ++v42)
              {
                uint64_t v42 = v60;
                goto LABEL_91;
              }
            }
            uint64_t v41 = v40 + v42;
          }
        }
        else
        {
          uint64_t v42 = 3;
        }
      }
      else
      {
        uint64_t v42 = 2;
      }
      goto LABEL_91;
    }
    uint64_t v42 = 1;
LABEL_91:
    uint64_t v43 = 0;
    uint64_t v44 = *(void *)(a6 + 128) + v38;
    uint64_t v45 = *(void *)(a6 + 240);
    uint64_t v46 = v77;
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v47 = v8[--v46];
          if (v47 < *(void *)(a6 + 248)) {
            break;
          }
          if (v47 >= --v45)
          {
LABEL_92:
            if (!v46) {
              goto LABEL_113;
            }
          }
          else
          {
            sub_1B6B3BE20(v44 + v47 * v39, v44 + v45 * v39, v37);
            uint64_t v8 = a2;
            ++v43;
            if (!v46) {
              goto LABEL_113;
            }
          }
        }
        if (v41 >= v47) {
          goto LABEL_113;
        }
        sub_1B6B3BE20(v44 + v47 * v39, v44 + v41 * v39, v37);
        uint64_t v8 = a2;
        ++v43;
        if (v41 + 1 == a2[v42]) {
          break;
        }
        ++v41;
        if (!v46) {
          goto LABEL_113;
        }
      }
      uint64_t v48 = v41 + 2;
      uint64_t v49 = v42 + 1;
      if (v42 + 1 < v77 && v48 == a2[v49])
      {
        uint64_t v48 = v41 + 3;
        uint64_t v49 = v42 + 2;
        if (v42 + 2 < v77 && v48 == a2[v49])
        {
          uint64_t v48 = v41 + 4;
          uint64_t v49 = v42 + 3;
          if (v42 + 3 < v77)
          {
            uint64_t v41 = v62 + v41 - v42;
            while (v48 == a2[v49])
            {
              ++v48;
              if (v77 == ++v49)
              {
                uint64_t v42 = v77;
                goto LABEL_92;
              }
            }
          }
        }
      }
      uint64_t v41 = v48;
      uint64_t v42 = v49;
    }
    while (v46);
LABEL_113:
    if (*(void *)(v68 + OBJC_IVAR____TtC3VFX13EntityManager_counters))
    {
      vfx_counters.add(_:_:)(*(_DWORD *)(v64 + OBJC_IVAR____TtC3VFX13EntityManager_counters), v43 * v39);
      uint64_t v8 = a2;
    }
    uint64_t v7 = v77;
    uint64_t v35 = v75 + 1;
  }
  while (v75 + 1 != v72);
  swift_release();
  uint64_t v8 = a2;
LABEL_119:
  if ((*(unsigned char *)(a6 + 184) & 1) == 0)
  {
    uint64_t v50 = *(void *)(a6 + 168);
    uint64_t v51 = *(void *)(a6 + 16);
    float v52 = *(os_unfair_lock_s **)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_retain();
    os_unfair_lock_lock(v52);
    swift_release();
    swift_retain();
    sub_1B6661400(a2, v7, a5 & 1, a6, a6, v50);
    swift_release();
    float32x4_t v53 = *(os_unfair_lock_s **)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_retain();
    os_unfair_lock_unlock(v53);
    swift_release();
    uint64_t v8 = a2;
  }
  if (v7)
  {
    uint64_t v54 = *(char **)(a6 + 240);
    uint64_t v55 = *(void *)(a6 + 248);
    uint64_t v56 = *(char **)(a6 + 232);
    long long v57 = v54;
    do
    {
      uint64_t v58 = *v8++;
      if (v58 >= v55)
      {
        long long v57 = &v56[(unint64_t)&v57[~(unint64_t)v56] & ~((uint64_t)&v57[~(unint64_t)v56] >> 63)];
      }
      else
      {
        if ((a5 & 1) == 0) {
          ++*(void *)(a6 + 256);
        }
        if (v57 == v56) {
          uint64_t v56 = v57;
        }
        else {
          ++v56;
        }
      }
      *(void *)(a6 + 232) = v56;
      *(void *)(a6 + 240) = v57;
      --v7;
    }
    while (v7);
    if (v54 != v57) {
      sub_1B666018C(v57, v54);
    }
  }
}

void sub_1B6BF1EB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v5 = a3;
  if (*(unsigned char *)(a1 + 210) != 1)
  {
    if (a3)
    {
      sub_1B63B3AAC(a2, *(void *)(a4 + 232));
    }
    else
    {
      sub_1B63B3AAC(a2, *(void *)(a4 + 256));
      ++*(void *)(a4 + 256);
    }
    uint64_t v30 = *(void *)(a4 + 232);
    if (*(void *)(a4 + 240) == v30) {
      uint64_t v31 = *(void *)(a4 + 240);
    }
    else {
      uint64_t v31 = v30 + 1;
    }
    *(void *)(a4 + 232) = v31;
    uint64_t v32 = *(void *)(a4 + 248);
    if (v32 <= a2)
    {
      uint64_t v31 = v32 + 1;
    }
    else if (v31 <= v32)
    {
      uint64_t v31 = *(void *)(a4 + 248);
    }
    *(void *)(a4 + 248) = v31;
    return;
  }
  uint64_t v7 = *(void *)(*(void *)(a4 + 56) + 16);
  if (v7)
  {
    if (a3) {
      uint64_t v8 = 232;
    }
    else {
      uint64_t v8 = 256;
    }
    uint64_t v36 = *(void *)(a4 + 16);
    uint64_t v35 = v8;
    uint64_t v9 = (void *)(swift_retain() + 56);
    while (1)
    {
      uint64_t v10 = *(v9 - 3);
      if (*(void *)(a4 + 248) <= a2)
      {
        uint64_t v12 = *(void *)(a4 + 240) - 1;
        if (v12 > a2) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v11 = *(void *)(a4 + v35);
        if (v11 == a2) {
          uint64_t v12 = v11 + 1;
        }
        else {
          uint64_t v12 = *(void *)(a4 + v35);
        }
        if (v12 < a2)
        {
LABEL_15:
          sub_1B6B3BDDC(*(void *)(a4 + 128) + *v9, *(void *)(a4 + 128) + *v9 + *(void *)(a4 + 88) * *(v9 - 1), a2, v12, *(v9 - 3));
          uint64_t v13 = 1;
          goto LABEL_16;
        }
      }
      uint64_t v13 = 0;
LABEL_16:
      Swift::UInt32 v14 = *(_DWORD *)(v36 + 80 + OBJC_IVAR____TtC3VFX13EntityManager_counters);
      uint64_t v15 = sub_1B62F238C(v10);
      if (*(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
        vfx_counters.add(_:_:)(v14, v15 * v13);
      }
      v9 += 5;
      if (!--v7)
      {
        swift_release();
        char v5 = a3;
        break;
      }
    }
  }
  uint64_t v16 = *(void *)(*(void *)(a4 + 64) + 16);
  if (!v16) {
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(a4 + 16);
  if (v5) {
    uint64_t v18 = 232;
  }
  else {
    uint64_t v18 = 256;
  }
  uint64_t v19 = (void *)(swift_retain() + 56);
  do
  {
    uint64_t v20 = *(v19 - 1);
    if (*(void *)(a4 + 248) <= a2)
    {
      uint64_t v21 = *(void *)(a4 + 240) - 1;
      if (v21 <= a2) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v21 = *(void *)(a4 + v18);
      if (v21 == a2) {
        ++v21;
      }
      if (v21 >= a2)
      {
LABEL_31:
        uint64_t v22 = 0;
        goto LABEL_34;
      }
    }
    sub_1B6B3BE20(*(void *)(a4 + 128) + *v19 + v20 * a2, *(void *)(a4 + 128) + *v19 + v21 * v20, *(v19 - 3));
    uint64_t v22 = 1;
LABEL_34:
    if (*(void *)(v17 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
      vfx_counters.add(_:_:)(*(_DWORD *)(v17 + 80 + OBJC_IVAR____TtC3VFX13EntityManager_counters), v22 * v20);
    }
    v19 += 5;
    --v16;
  }
  while (v16);
  swift_release();
  char v5 = a3;
LABEL_37:
  if ((*(unsigned char *)(a4 + 184) & 1) == 0)
  {
    uint64_t v23 = *(void *)(a4 + 168);
    uint64_t v24 = *(void *)(a4 + 16);
    Swift::UInt32 v25 = *(os_unfair_lock_s **)(v24 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_retain();
    os_unfair_lock_lock(v25);
    swift_release();
    swift_retain();
    sub_1B6661D80(a2, v5 & 1, a4, a4, v23);
    swift_release();
    uint64_t v26 = *(os_unfair_lock_s **)(v24 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_retain();
    os_unfair_lock_unlock(v26);
    swift_release();
  }
  uint64_t v27 = *(char **)(a4 + 240);
  if (*(void *)(a4 + 248) <= a2)
  {
    uint64_t v33 = (char *)(((unint64_t)&v27[~*(void *)(a4 + 232)] & ~((uint64_t)&v27[~*(void *)(a4 + 232)] >> 63))
                 + *(void *)(a4 + 232));
    *(void *)(a4 + 240) = v33;
    if (v27 != v33) {
      sub_1B666018C(v33, v27);
    }
  }
  else
  {
    if ((v5 & 1) == 0) {
      ++*(void *)(a4 + 256);
    }
    uint64_t v28 = *(char **)(a4 + 232);
    if (v27 == v28) {
      uint64_t v29 = v27;
    }
    else {
      uint64_t v29 = v28 + 1;
    }
    *(void *)(a4 + 232) = v29;
    *(void *)(a4 + 240) = v27;
  }
}

void sub_1B6BF2234(uint64_t a1, void *a2, char a3, void *a4)
{
  char v4 = a3;
  if (*(unsigned char *)(a1 + 210) != 1)
  {
    uint64_t v30 = a2[2];
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = 0;
      do
      {
        uint64_t v35 = &a2[v31];
        uint64_t v36 = v35[4];
        if (v4) {
          sub_1B63B3AAC(v35[4], a4[29]);
        }
        else {
          sub_1B63B3AAC(v35[4], a4[32]++);
        }
        ++v31;
        uint64_t v32 = a4[29];
        if (a4[30] == v32) {
          uint64_t v33 = a4[30];
        }
        else {
          uint64_t v33 = v32 + 1;
        }
        a4[29] = v33;
        uint64_t v34 = a4[31];
        if (v33 <= v34) {
          uint64_t v33 = a4[31];
        }
        if (v36 >= v34) {
          uint64_t v33 = v34 + 1;
        }
        a4[31] = v33;
      }
      while (v30 != v31);
      swift_bridgeObjectRelease();
    }
    return;
  }
  uint64_t v5 = (uint64_t)a4;
  uint64_t v6 = a4[7];
  uint64_t v7 = a2;
  uint64_t v95 = *(void *)(v6 + 16);
  if (v95)
  {
    uint64_t v93 = v6 + 32;
    uint64_t v9 = a2 + 4;
    uint64_t v8 = a2[4];
    uint64_t v10 = 256;
    int64_t v11 = a2[2];
    if (a3) {
      uint64_t v10 = 232;
    }
    uint64_t v88 = v10;
    uint64_t v89 = a2[4];
    uint64_t v91 = a4[2];
    uint64_t v83 = v8 + 1;
    uint64_t v75 = v8 + 3;
    uint64_t v77 = v8 + 2;
    uint64_t v73 = v8 + 4;
    uint64_t v70 = v11 + v8;
    swift_retain();
    unint64_t v12 = v11;
    uint64_t v13 = 0;
    long long v85 = v7 + 8;
    long long v79 = v7 + 7;
    while (1)
    {
      Swift::UInt32 v14 = (uint64_t *)(v93 + 40 * v13);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[3];
      uint64_t v101 = v14[2];
      uint64_t v17 = *(void *)(v5 + v88);
      uint64_t v97 = v13;
      if (v17 == v89)
      {
        if (v12 > 1)
        {
          if (v83 == v7[5]) {
            uint64_t v18 = 2;
          }
          else {
            uint64_t v18 = 1;
          }
          if (v83 == v7[5]) {
            uint64_t v17 = v77;
          }
          else {
            uint64_t v17 = v83;
          }
          if (v83 != v7[5] || v12 < 3) {
            goto LABEL_44;
          }
          uint64_t v18 = v77 == v7[6] ? 3 : 2;
          uint64_t v17 = v77 == v7[6] ? v75 : v77;
          if (v77 != v7[6] || v12 < 4) {
            goto LABEL_44;
          }
          uint64_t v18 = v75 == v7[7] ? 4 : 3;
          uint64_t v17 = v75 == v7[7] ? v73 : v75;
          if (v75 != v7[7] || (unint64_t)v11 < 5) {
            goto LABEL_44;
          }
          uint64_t v20 = 0;
          uint64_t v18 = v11;
          do
          {
            uint64_t v17 = v73 + v20;
            if (v73 + v20 != v85[v20])
            {
              uint64_t v18 = v20 + 4;
              goto LABEL_44;
            }
            ++v20;
          }
          while (v11 - 4 != v20);
          uint64_t v17 = v70;
LABEL_44:
          uint64_t v22 = *(void *)(v5 + 240);
          swift_bridgeObjectRetain();
          uint64_t v21 = 0;
          int64_t v23 = v11;
          while (1)
          {
            uint64_t v25 = v9[--v23];
            if (v25 >= *(void *)(v5 + 248))
            {
              if (v25 < --v22)
              {
                sub_1B6B3BDDC(*(void *)(v5 + 128) + v16, *(void *)(v5 + 128) + v16 + *(void *)(v5 + 88) * v101, v25, v22, v15);
                ++v21;
              }
              uint64_t v24 = v17;
            }
            else
            {
              if (v17 >= v25)
              {
LABEL_63:
                uint64_t v7 = a2;
                swift_bridgeObjectRelease();
                goto LABEL_64;
              }
              sub_1B6B3BDDC(*(void *)(v5 + 128) + v16, *(void *)(v5 + 128) + v16 + *(void *)(v5 + 88) * v101, v25, v17, v15);
              ++v21;
              uint64_t v24 = v17 + 1;
              if (v17 + 1 == v9[v18])
              {
                uint64_t v24 = v17 + 2;
                uint64_t v26 = v18 + 1;
                if (v18 + 1 < v11
                  && v24 == v9[v26]
                  && (uint64_t v24 = v17 + 3, v26 = v18 + 2, v18 + 2 < v11)
                  && v24 == v9[v26]
                  && (uint64_t v24 = v17 + 4, v26 = v18 + 3, v18 + 3 < v11))
                {
                  int64_t v27 = v11 + 1 + v17 - v18;
                  while (v24 == v79[v18])
                  {
                    ++v24;
                    if (v11 - 3 == ++v18)
                    {
                      uint64_t v24 = v27;
                      uint64_t v18 = v11;
                      goto LABEL_46;
                    }
                  }
                  v18 += 3;
                }
                else
                {
                  uint64_t v18 = v26;
                }
              }
            }
LABEL_46:
            uint64_t v17 = v24;
            if (!v23) {
              goto LABEL_63;
            }
          }
        }
        if (v12)
        {
          uint64_t v18 = 1;
          uint64_t v17 = v83;
          goto LABEL_44;
        }
        uint64_t v21 = 0;
      }
      else
      {
        uint64_t v18 = 0;
        uint64_t v21 = 0;
        if (v12) {
          goto LABEL_44;
        }
      }
LABEL_64:
      Swift::UInt32 v28 = *(_DWORD *)(v91 + 80 + OBJC_IVAR____TtC3VFX13EntityManager_counters);
      uint64_t v29 = sub_1B62F238C(v15);
      if (*(void *)(v91 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
        vfx_counters.add(_:_:)(v28, v29 * v21);
      }
      uint64_t v13 = v97 + 1;
      unint64_t v12 = v11;
      if (v97 + 1 == v95)
      {
        swift_release();
        char v4 = a3;
        break;
      }
    }
  }
  uint64_t v37 = *(void *)(v5 + 64);
  uint64_t v98 = *(void *)(v37 + 16);
  if (!v98) {
    goto LABEL_147;
  }
  uint64_t v96 = v37 + 32;
  uint64_t v39 = v7 + 4;
  uint64_t v38 = v7[4];
  uint64_t v40 = 256;
  unint64_t v41 = v7[2];
  if (v4) {
    uint64_t v40 = 232;
  }
  uint64_t v90 = v40;
  uint64_t v92 = v7[4];
  uint64_t v94 = *(void *)(v5 + 16);
  uint64_t v84 = v38 + 1;
  unint64_t v81 = v41 + 1;
  uint64_t v82 = v38 + 2;
  uint64_t v74 = v38 + 4;
  uint64_t v76 = v38 + 3;
  uint64_t v71 = v41 + v38;
  swift_retain();
  uint64_t v42 = 0;
  unint64_t v86 = v41 - 4;
  long long v87 = v7 + 8;
  uint64_t v78 = v7 + 7;
  unint64_t v80 = v41 - 3;
  uint64_t v102 = v41;
  do
  {
    uint64_t v43 = (uint64_t *)(v96 + 40 * v42);
    uint64_t v44 = *v43;
    uint64_t v46 = v43[2];
    uint64_t v45 = v43[3];
    uint64_t v47 = *(void *)(v5 + v90);
    uint64_t v100 = v42;
    if (v47 == v92)
    {
      if (v41 > 1)
      {
        if (v84 == v7[5]) {
          uint64_t v47 = v82;
        }
        else {
          uint64_t v47 = v84;
        }
        if (v84 == v7[5]) {
          uint64_t v48 = 2;
        }
        else {
          uint64_t v48 = 1;
        }
        if (v84 != v7[5] || v41 < 3) {
          goto LABEL_121;
        }
        uint64_t v47 = v82 == v7[6] ? v76 : v82;
        uint64_t v48 = v82 == v7[6] ? 3 : 2;
        if (v82 != v7[6] || v41 < 4) {
          goto LABEL_121;
        }
        uint64_t v47 = v76 == v7[7] ? v74 : v76;
        uint64_t v48 = v76 == v7[7] ? 4 : 3;
        if (v76 != v7[7] || v41 < 5) {
          goto LABEL_121;
        }
        uint64_t v49 = 0;
        do
        {
          uint64_t v47 = v74 + v49;
          if (v74 + v49 != v87[v49])
          {
            uint64_t v48 = v49 + 4;
            goto LABEL_121;
          }
          ++v49;
        }
        while (v86 != v49);
        uint64_t v47 = v71;
        uint64_t v48 = v41;
LABEL_121:
        uint64_t v51 = *(void *)(v5 + 128) + v45;
        unint64_t v52 = v41;
        uint64_t v53 = *(void *)(v5 + 240);
        swift_bridgeObjectRetain();
        uint64_t v50 = 0;
        unint64_t v54 = v52;
        while (1)
        {
          uint64_t v56 = v39[--v54];
          if (v56 >= a4[31])
          {
            if (v56 < --v53)
            {
              sub_1B6B3BE20(v51 + v56 * v46, v51 + v53 * v46, v44);
              ++v50;
            }
            uint64_t v55 = v47;
          }
          else
          {
            if (v47 >= v56)
            {
LABEL_140:
              uint64_t v7 = a2;
              swift_bridgeObjectRelease();
              uint64_t v5 = (uint64_t)a4;
              unint64_t v41 = v102;
              goto LABEL_141;
            }
            sub_1B6B3BE20(v51 + v56 * v46, v51 + v47 * v46, v44);
            ++v50;
            uint64_t v55 = v47 + 1;
            if (v47 + 1 == v39[v48])
            {
              uint64_t v55 = v47 + 2;
              uint64_t v57 = v48 + 1;
              if (v48 + 1 < v102
                && v55 == v39[v57]
                && (v55 = v47 + 3, uint64_t v57 = v48 + 2, v48 + 2 < v102)
                && v55 == v39[v57]
                && (v55 = v47 + 4, uint64_t v57 = v48 + 3, v48 + 3 < v102))
              {
                uint64_t v58 = v81 + v47 - v48;
                while (v55 == v78[v48])
                {
                  ++v55;
                  if (v80 == ++v48)
                  {
                    uint64_t v55 = v58;
                    uint64_t v48 = v102;
                    goto LABEL_123;
                  }
                }
                v48 += 3;
              }
              else
              {
                uint64_t v48 = v57;
              }
            }
          }
LABEL_123:
          uint64_t v47 = v55;
          if (!v54) {
            goto LABEL_140;
          }
        }
      }
      if (v41)
      {
        uint64_t v47 = v84;
        uint64_t v48 = 1;
        goto LABEL_121;
      }
      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v50 = 0;
      if (v41) {
        goto LABEL_121;
      }
    }
LABEL_141:
    if (*(void *)(v94 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
      vfx_counters.add(_:_:)(*(_DWORD *)(v94 + 80 + OBJC_IVAR____TtC3VFX13EntityManager_counters), v50 * v46);
    }
    uint64_t v42 = v100 + 1;
  }
  while (v100 + 1 != v98);
  swift_release();
  char v4 = a3;
LABEL_147:
  if ((*(unsigned char *)(v5 + 184) & 1) == 0)
  {
    uint64_t v59 = *(void *)(v5 + 168);
    uint64_t v60 = *(void *)(v5 + 16);
    uint64_t v61 = *(os_unfair_lock_s **)(v60 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_retain();
    os_unfair_lock_lock(v61);
    swift_release();
    swift_retain();
    sub_1B6661E04(a2, v4 & 1, v5, v5, v59);
    swift_release();
    uint64_t v62 = *(os_unfair_lock_s **)(v60 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_retain();
    os_unfair_lock_unlock(v62);
    swift_release();
  }
  uint64_t v63 = a2[2];
  if (v63)
  {
    uint64_t v64 = a2 + 4;
    uint64_t v65 = *(char **)(v5 + 240);
    uint64_t v66 = *(void *)(v5 + 248);
    uint64_t v67 = *(char **)(v5 + 232);
    uint64_t v68 = v65;
    do
    {
      uint64_t v69 = *v64++;
      if (v69 >= v66)
      {
        uint64_t v68 = &v67[(unint64_t)&v68[~(unint64_t)v67] & ~((uint64_t)&v68[~(unint64_t)v67] >> 63)];
      }
      else
      {
        if ((v4 & 1) == 0) {
          ++*(void *)(v5 + 256);
        }
        if (v68 == v67) {
          uint64_t v67 = v68;
        }
        else {
          ++v67;
        }
      }
      *(void *)(v5 + 232) = v67;
      *(void *)(v5 + 240) = v68;
      --v63;
    }
    while (v63);
    if (v65 != v68) {
      sub_1B666018C(v68, v65);
    }
  }
}

uint64_t sub_1B6BF2AEC(uint64_t *a1, uint64_t a2, uint64_t a3, signed int a4, int a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v46 = a7;
  int v42 = a5;
  uint64_t v16 = *(void *)(v9 + 16);
  uint64_t v17 = *(unsigned char **)(v9 + 40);
  char v18 = v17[200];
  uint64_t v52 = *(void *)(*(void *)(v16 + 80) + 8 * a4 + 32);
  swift_retain();
  if ((v18 & 1) != 0 || *(unsigned char *)(v52 + 200) == 1)
  {
    *(unsigned char *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
    uint64_t v17 = *(unsigned char **)(v9 + 40);
  }
  char v19 = v17[212];
  unint64_t v50 = a6;
  uint64_t v47 = a8;
  if (v19) {
    int v43 = 0;
  }
  else {
    int v43 = *(unsigned __int8 *)(v52 + 212);
  }
  int v45 = v17[208];
  uint64_t v51 = *(void *)(v9 + 128);
  uint64_t v20 = *(void *)(v9 + 256);
  sub_1B6BF16FC((uint64_t)v17, a1, a2, a3, 0, v9);
  uint64_t v48 = *(void *)(v9 + 256);
  uint64_t v49 = v20;
  uint64_t v21 = v48 - v20;
  if (v48 == v20) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v20;
  }
  uint64_t v62 = v22;
  uint64_t v23 = *(void *)(*(void *)(v9 + 40) + 24);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = v23 + 32;
    uint64_t v44 = *(uint64_t **)(*(void *)(v9 + 40) + 24);
    swift_retain();
    for (uint64_t i = 0; i != v24; ++i)
    {
      uint64_t v27 = v25 + 40 * i;
      if ((*(unsigned char *)(v27 + 32) & 1) == 0)
      {
        uint64_t v28 = *(void *)(v52 + 24);
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          uint64_t v30 = (void *)(v28 + 32);
          while (*v30 != *(void *)v27)
          {
            v30 += 5;
            if (!--v29) {
              goto LABEL_12;
            }
          }
        }
        else
        {
LABEL_12:
          sub_1B633B0E8();
        }
      }
    }
    swift_release();
  }
  unint64_t v31 = v50;
  if (*(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 68), *(void *)(v9 + 72) * v21);
  }
  if (*(unsigned char *)(v9 + 184) & 1 | (*(void *)(v9 + 168) == 0)) {
    uint64_t v32 = 0;
  }
  else {
    uint64_t v32 = *(void *)(v9 + 168);
  }
  uint64_t v61 = 0;
  uint64_t v33 = swift_retain();
  uint64_t v44 = &v41;
  MEMORY[0x1F4188790](v33, v34);
  int v56 = -1;
  uint64_t v36 = v48;
  uint64_t v35 = v49;
  uint64_t v57 = v49;
  uint64_t v58 = v48;
  uint64_t v59 = v49;
  uint64_t v60 = v48;
  uint64_t v53 = v49;
  uint64_t v54 = v48;
  uint64_t v55 = v32;
  if (v21 >= 1)
  {
    char v37 = v42 & 1;
    do
      sub_1B63BA64C(a4, v31 | ((HIDWORD(v31) & 1) << 32), v37, v16, (uint64_t)&v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B63B3AA8);
    while (v54 - v53 > 0);
  }
  swift_release();
  uint64_t v38 = *(void *)(v9 + 192);
  if (v38)
  {
    uint64_t v39 = *(void *)(v9 + 208);
    sub_1B62C9D00(v35, v36, v38);
    sub_1B62C9D00(v35, v36, v39);
  }
  return swift_release();
}

uint64_t sub_1B6BF2E48(uint64_t a1, signed int a2, int a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v16 = *(void *)(v9 + 16);
  uint64_t v17 = *(unsigned char **)(v9 + 40);
  char v18 = v17[200];
  uint64_t v53 = *(void *)(*(void *)(v16 + 80) + 8 * a2 + 32);
  swift_retain();
  if ((v18 & 1) != 0 || *(unsigned char *)(v53 + 200) == 1)
  {
    *(unsigned char *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
    uint64_t v17 = *(unsigned char **)(v9 + 40);
  }
  char v19 = v17[212];
  uint64_t v48 = a7;
  uint64_t v49 = a8;
  if (v19) {
    int v43 = 0;
  }
  else {
    int v43 = *(unsigned __int8 *)(v53 + 212);
  }
  int v45 = v17[208];
  uint64_t v52 = *(void *)(v9 + 128);
  uint64_t v20 = *(void *)(v9 + 256);
  sub_1B6BF1EB0((uint64_t)v17, a1, 0, v9);
  uint64_t v50 = *(void *)(v9 + 256);
  uint64_t v51 = v20;
  uint64_t v21 = v50 - v20;
  if (v50 == v20) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v20;
  }
  uint64_t v63 = v22;
  uint64_t v23 = *(void *)(*(void *)(v9 + 40) + 24);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    unint64_t v42 = a4;
    LODWORD(v44) = a3;
    uint64_t v25 = v23 + 32;
    uint64_t v41 = v23;
    swift_retain();
    for (uint64_t i = 0; i != v24; ++i)
    {
      uint64_t v27 = v25 + 40 * i;
      if ((*(unsigned char *)(v27 + 32) & 1) == 0)
      {
        uint64_t v28 = *(void *)(v53 + 24);
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          uint64_t v30 = (void *)(v28 + 32);
          while (*v30 != *(void *)v27)
          {
            v30 += 5;
            if (!--v29) {
              goto LABEL_12;
            }
          }
        }
        else
        {
LABEL_12:
          sub_1B633B0E8();
        }
      }
    }
    swift_release();
    LOBYTE(a3) = (_BYTE)v44;
    a4 = v42;
  }
  if (*(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 68), *(void *)(v9 + 72) * v21);
  }
  if (*(unsigned char *)(v9 + 184) & 1 | (*(void *)(v9 + 168) == 0)) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = *(void *)(v9 + 168);
  }
  uint64_t v62 = 0;
  uint64_t v32 = swift_retain();
  uint64_t v44 = &v41;
  MEMORY[0x1F4188790](v32, v33);
  uint64_t v56 = v31;
  int v57 = -1;
  uint64_t v35 = v50;
  uint64_t v34 = v51;
  uint64_t v58 = v51;
  uint64_t v59 = v50;
  uint64_t v60 = v51;
  uint64_t v61 = v50;
  uint64_t v54 = v51;
  uint64_t v55 = v50;
  if (v21 >= 1)
  {
    unint64_t v36 = a4 | ((HIDWORD(a4) & 1) << 32);
    char v37 = a3 & 1;
    do
      sub_1B63BA64C(a2, v36, v37, v16, (uint64_t)&v54, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B63B3AA8);
    while (v55 - v54 > 0);
  }
  swift_release();
  uint64_t v38 = *(void *)(v9 + 192);
  if (v38)
  {
    uint64_t v39 = *(void *)(v9 + 208);
    sub_1B62C9D00(v34, v35, v38);
    sub_1B62C9D00(v34, v35, v39);
  }
  return swift_release();
}

uint64_t sub_1B6BF31B8(void *a1, signed int a2, int a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v16 = *(void *)(v9 + 16);
  uint64_t v17 = *(unsigned char **)(v9 + 40);
  char v18 = v17[200];
  uint64_t v53 = *(void *)(*(void *)(v16 + 80) + 8 * a2 + 32);
  swift_retain();
  if ((v18 & 1) != 0 || *(unsigned char *)(v53 + 200) == 1)
  {
    *(unsigned char *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
    uint64_t v17 = *(unsigned char **)(v9 + 40);
  }
  char v19 = v17[212];
  uint64_t v48 = a7;
  uint64_t v49 = a8;
  if (v19) {
    int v43 = 0;
  }
  else {
    int v43 = *(unsigned __int8 *)(v53 + 212);
  }
  int v45 = v17[208];
  uint64_t v52 = *(void *)(v9 + 128);
  uint64_t v20 = *(void *)(v9 + 256);
  sub_1B6BF2234((uint64_t)v17, a1, 0, (void *)v9);
  uint64_t v50 = *(void *)(v9 + 256);
  uint64_t v51 = v20;
  uint64_t v21 = v50 - v20;
  if (v50 == v20) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v20;
  }
  uint64_t v63 = v22;
  uint64_t v23 = *(void *)(*(void *)(v9 + 40) + 24);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    unint64_t v42 = a4;
    LODWORD(v44) = a3;
    uint64_t v25 = v23 + 32;
    uint64_t v41 = v23;
    swift_retain();
    for (uint64_t i = 0; i != v24; ++i)
    {
      uint64_t v27 = v25 + 40 * i;
      if ((*(unsigned char *)(v27 + 32) & 1) == 0)
      {
        uint64_t v28 = *(void *)(v53 + 24);
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          uint64_t v30 = (void *)(v28 + 32);
          while (*v30 != *(void *)v27)
          {
            v30 += 5;
            if (!--v29) {
              goto LABEL_12;
            }
          }
        }
        else
        {
LABEL_12:
          sub_1B633B0E8();
        }
      }
    }
    swift_release();
    LOBYTE(a3) = (_BYTE)v44;
    a4 = v42;
  }
  if (*(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 68), *(void *)(v9 + 72) * v21);
  }
  if (*(unsigned char *)(v9 + 184) & 1 | (*(void *)(v9 + 168) == 0)) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = *(void *)(v9 + 168);
  }
  uint64_t v62 = 0;
  uint64_t v32 = swift_retain();
  uint64_t v44 = &v41;
  MEMORY[0x1F4188790](v32, v33);
  uint64_t v56 = v31;
  int v57 = -1;
  uint64_t v35 = v50;
  uint64_t v34 = v51;
  uint64_t v58 = v51;
  uint64_t v59 = v50;
  uint64_t v60 = v51;
  uint64_t v61 = v50;
  uint64_t v54 = v51;
  uint64_t v55 = v50;
  if (v21 >= 1)
  {
    unint64_t v36 = a4 | ((HIDWORD(a4) & 1) << 32);
    char v37 = a3 & 1;
    do
      sub_1B63BA64C(a2, v36, v37, v16, (uint64_t)&v54, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B63B3AA8);
    while (v55 - v54 > 0);
  }
  swift_release();
  uint64_t v38 = *(void *)(v9 + 192);
  if (v38)
  {
    uint64_t v39 = *(void *)(v9 + 208);
    sub_1B62C9D00(v34, v35, v38);
    sub_1B62C9D00(v34, v35, v39);
  }
  return swift_release();
}

uint64_t *sub_1B6BF3528(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result)
  {
    unint64_t v12 = result;
    uint64_t v13 = v6[24];
    if (v13) {
      sub_1B6BFB238(result, a2, a3, a4, a5, a6, v13, v6[25], v6[26]);
    }
    return (uint64_t *)sub_1B6BFB510(v6[5], (uint64_t)v6, v12, a2, a3);
  }
  else
  {
    uint64_t v14 = v6[29];
    uint64_t v15 = v6[30];
    if (v15 != v14)
    {
      uint64_t v16 = v6[24];
      if (v16)
      {
        uint64_t v17 = v6[26];
        sub_1B63B52E8(v6[29], v6[30], v16);
        if (a6 == 3 && a4 == 2 && !a5) {
          sub_1B63B52E8(v14, v15, v17);
        }
        else {
          sub_1B62C9D00(v14, v15, v17);
        }
      }
      return (uint64_t *)sub_1B63658B4(v6[5], (uint64_t)v6, v14, v15);
    }
  }
  return result;
}

uint64_t sub_1B6BF3668(uint64_t result, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for Scheduling)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 8 * result;
  uint64_t v8 = v2[16];
  if (*(void *)(v8 + v7) != a2)
  {
    uint64_t v9 = v2[24];
    if (v9)
    {
      uint64_t v10 = v2[26];
      uint64_t v11 = 8 * (result >> 6);
      *(void *)(v9 + v11) |= 1 << result;
      *(void *)(v10 + v11) &= ~(1 << result);
    }
    uint64_t result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(void *)(v8 + v7) = a2;
  return result;
}

uint64_t sub_1B6BF376C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = *(void *)(v4 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for VideoCapture)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_7;
      }
    }
    uint64_t v8 = *v9;
  }
LABEL_7:
  unsigned int v10 = a2 >> 8;
  uint64_t v11 = *(void *)(v4 + 128);
  char v12 = a2 & 1;
  __int16 v16 = a2 & 0xFF01;
  uint64_t v13 = v11 + v8 + 24 * a1;
  int v14 = HIWORD(a2) & 1;
  char v17 = BYTE2(a2) & 1;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  sub_1B6BF815C(a1, (unsigned __int8 *)v13, (unsigned __int8 *)&v16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v13 = v12;
  *(unsigned char *)(v13 + 1) = v10;
  *(unsigned char *)(v13 + 2) = v14;
  *(void *)(v13 + 8) = a3;
  *(void *)(v13 + 16) = a4;
  return result;
}

uint64_t sub_1B6BF3874(uint64_t a1, const void *a2, uint64_t a3)
{
  return sub_1B6BF60A4(a1, a2, a3, type metadata accessor for EmitterScript, (uint64_t (*)(const void *, const void *))sub_1B6C05DD0);
}

__n128 sub_1B6BF38A0(uint64_t a1, uint64_t a2)
{
  v23[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for MeshFileAsset)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + 56 * a1;
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  long long v12 = *(_OWORD *)(a2 + 16);
  __n128 v20 = *(__n128 *)a2;
  long long v21 = v12;
  long long v22 = *(_OWORD *)(a2 + 32);
  long long v17 = v12;
  __n128 v18 = v20;
  sub_1B674C934((uint64_t)&v22, (uint64_t)v23);
  sub_1B6C05B2C(a2 + 48, (uint64_t)v19, (unint64_t *)&qword_1E9DCE558, &qword_1EB980330, MEMORY[0x1E4FBB550]);
  uint64_t v13 = *(void **)(v11 + 32);
  sub_1B62C7C20((uint64_t)&v18);
  sub_1B62C7C20((uint64_t)&v17);
  sub_1B674CA70(v23);
  sub_1B6399A44((uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  __n128 result = *(__n128 *)a2;
  long long v15 = *(_OWORD *)(a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 32);
  *(void *)(v11 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(v11 + 16) = v15;
  *(_OWORD *)(v11 + 32) = v16;
  *(__n128 *)uint64_t v11 = result;
  return result;
}

uint64_t sub_1B6BF3A40(uint64_t result, unint64_t a2, unint64_t a3)
{
  int v4 = a3;
  int v5 = a2;
  unint64_t v6 = HIDWORD(a2);
  unint64_t v7 = HIDWORD(a3);
  uint64_t v8 = v3[6];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(v8 + 56);
    while ((ValueMetadata *)*(v10 - 3) != &type metadata for ModelRenderer)
    {
      v10 += 5;
      if (!--v9) {
        goto LABEL_7;
      }
    }
    uint64_t v9 = *v10;
  }
LABEL_7:
  uint64_t v11 = v3[16] + v9 + 16 * result;
  if (*(void *)v11 != a2 || *(void *)(v11 + 8) != a3)
  {
    uint64_t v13 = v3[24];
    if (v13)
    {
      uint64_t v14 = v3[26];
      uint64_t v15 = 8 * (result >> 6);
      *(void *)(v13 + v15) |= 1 << result;
      *(void *)(v14 + v15) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v3[5], (uint64_t)v3, result);
  }
  *(_DWORD *)uint64_t v11 = v5;
  *(_DWORD *)(v11 + 4) = v6;
  *(_DWORD *)(v11 + 8) = v4;
  *(_DWORD *)(v11 + 12) = v7;
  return result;
}

uint64_t sub_1B6BF3B68(uint64_t result, unsigned __int8 a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for SpaceOverride)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + result;
  uint64_t v8 = v2[16];
  if (*(unsigned __int8 *)(v8 + v5 + result) != a2)
  {
    uint64_t v9 = v2[24];
    if (v9)
    {
      uint64_t v10 = v2[26];
      uint64_t v11 = 8 * (result >> 6);
      *(void *)(v9 + v11) |= 1 << result;
      *(void *)(v10 + v11) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(unsigned char *)(v8 + v7) = a2;
  return result;
}

__n128 sub_1B6BF3C68(uint64_t a1, __n128 *a2)
{
  v21[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for AudioFileAsset)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + 48 * a1;
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  __n128 v12 = a2[1];
  __n128 v18 = *a2;
  __n128 v19 = v12;
  __n128 v20 = a2[2];
  __n128 v16 = v12;
  __n128 v17 = v18;
  sub_1B674C934((uint64_t)&v20, (uint64_t)v21);
  uint64_t v13 = *(void **)(v11 + 32);
  sub_1B62C7C20((uint64_t)&v17);
  sub_1B62C7C20((uint64_t)&v16);
  sub_1B674CA70(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __n128 v14 = a2[1];
  *(__n128 *)uint64_t v11 = *a2;
  *(__n128 *)(v11 + 16) = v14;
  __n128 result = a2[2];
  *(__n128 *)(v11 + 32) = result;
  return result;
}

uint64_t sub_1B6BF3DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v11 = v6[6];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(v11 + 56);
    while ((ValueMetadata *)*(v13 - 3) != &type metadata for CurveComponent)
    {
      v13 += 5;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    uint64_t v12 = *v13;
  }
LABEL_7:
  uint64_t v14 = v6[16];
  uint64_t v15 = v6[24];
  if (v15)
  {
    uint64_t v16 = v6[26];
    uint64_t v17 = 8 * (a1 >> 6);
    *(void *)(v15 + v17) |= 1 << a1;
    *(void *)(v16 + v17) &= ~(1 << a1);
  }
  uint64_t v18 = v14 + v12 + 32 * a1;
  sub_1B635AD78(v6[5], (uint64_t)v6, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v18 = a2;
  *(void *)(v18 + 8) = a3;
  *(void *)(v18 + 16) = a4;
  *(unsigned char *)(v18 + 24) = a5;
  return result;
}

__n128 sub_1B6BF3F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for MovieFileAsset)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + 56 * a1;
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  uint64_t v12 = *(void **)(v11 + 32);
  sub_1B6811230(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __n128 result = *(__n128 *)a2;
  long long v14 = *(_OWORD *)(a2 + 16);
  long long v15 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(v11 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(v11 + 16) = v14;
  *(_OWORD *)(v11 + 32) = v15;
  *(__n128 *)uint64_t v11 = result;
  return result;
}

__n128 sub_1B6BF404C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for SceneFileAsset)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + (a1 << 6);
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  uint64_t v12 = *(void **)(v11 + 32);
  sub_1B6C05E80(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __n128 result = *(__n128 *)a2;
  long long v14 = *(_OWORD *)(a2 + 16);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v11 + 48) = v15;
  *(__n128 *)uint64_t v11 = result;
  *(_OWORD *)(v11 + 16) = v14;
  return result;
}

uint64_t sub_1B6BF4180(uint64_t result, unsigned int a2)
{
  uint64_t v3 = v2[6];
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for AudioController)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = v2[16] + v4 + 3 * result;
  char v7 = a2 & 1;
  int v8 = (a2 >> 8) & 1;
  int v9 = HIWORD(a2) & 1;
  if (*(_WORD *)v6 != (a2 & 0x101) || *(unsigned __int8 *)(v6 + 2) != v9)
  {
    uint64_t v11 = v2[24];
    if (v11)
    {
      uint64_t v12 = v2[26];
      uint64_t v13 = 8 * (result >> 6);
      *(void *)(v11 + v13) |= 1 << result;
      *(void *)(v12 + v13) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(unsigned char *)uint64_t v6 = v7;
  *(unsigned char *)(v6 + 1) = v8;
  *(unsigned char *)(v6 + 2) = v9;
  return result;
}

uint64_t sub_1B6BF42B0(uint64_t result, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSpawnID)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 8 * result;
  uint64_t v8 = v2[16];
  if (*(void *)(v8 + v7) != a2)
  {
    uint64_t v9 = v2[24];
    if (v9)
    {
      uint64_t v10 = v2[26];
      uint64_t v11 = 8 * (result >> 6);
      *(void *)(v9 + v11) |= 1 << result;
      *(void *)(v10 + v11) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(void *)(v8 + v7) = a2;
  return result;
}

__n128 sub_1B6BF43B4(uint64_t a1, __n128 *a2)
{
  v21[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ShaderFileAsset)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + 48 * a1;
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  __n128 v12 = a2[1];
  __n128 v18 = *a2;
  __n128 v19 = v12;
  __n128 v20 = a2[2];
  __n128 v16 = v12;
  __n128 v17 = v18;
  sub_1B674C934((uint64_t)&v20, (uint64_t)v21);
  uint64_t v13 = *(void **)(v11 + 32);
  sub_1B62C7C20((uint64_t)&v17);
  sub_1B62C7C20((uint64_t)&v16);
  sub_1B674CA70(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __n128 v14 = a2[1];
  *(__n128 *)uint64_t v11 = *a2;
  *(__n128 *)(v11 + 16) = v14;
  __n128 result = a2[2];
  *(__n128 *)(v11 + 32) = result;
  return result;
}

uint64_t sub_1B6BF4514(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = v4[6];
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for TextureFileData)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_7;
      }
    }
    uint64_t v8 = *v9;
  }
LABEL_7:
  uint64_t v10 = v4[16];
  uint64_t v11 = v4[24];
  if (v11)
  {
    uint64_t v12 = v4[26];
    uint64_t v13 = 8 * (a1 >> 6);
    *(void *)(v11 + v13) |= 1 << a1;
    *(void *)(v12 + v13) &= ~(1 << a1);
  }
  __n128 v14 = (uint64_t *)(v10 + v8 + 16 * a1);
  sub_1B635AD78(v4[5], (uint64_t)v4, a1);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  sub_1B6751DC0(a2, a3);
  uint64_t result = sub_1B665D488(v15, v16);
  uint64_t *v14 = a2;
  v14[1] = a3;
  return result;
}

__n128 sub_1B6BF462C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSizeInit)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (_OWORD *)(v2[16] + v5 + 32 * a1);
  if (*(unsigned __int8 *)v7 != *a2)
  {
    uint64_t v8 = v2[24];
    if (v8)
    {
      uint64_t v9 = v2[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 result = *(__n128 *)a2;
  long long v12 = *((_OWORD *)a2 + 1);
  _OWORD *v7 = *(_OWORD *)a2;
  v7[1] = v12;
  return result;
}

__n128 sub_1B6BF4704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSubSpawn)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (void *)(v2[16] + v5 + 24 * a1);
  *(_OWORD *)__n128 v14 = *(_OWORD *)a2;
  *(void *)&v14[13] = *(void *)(a2 + 13);
  if (*v7 != *(void *)a2 || v7[1] != *(void *)&v14[8] || *(void *)((char *)v7 + 13) != *(void *)&v14[13])
  {
    uint64_t v10 = v2[24];
    if (v10)
    {
      uint64_t v11 = v2[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(void *)((char *)v7 + 13) = *(void *)(a2 + 13);
  return result;
}

__n128 sub_1B6BF4834(uint64_t a1, __n128 *a2)
{
  v21[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for TextureFileAsset)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + 48 * a1;
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  __n128 v12 = a2[1];
  __n128 v18 = *a2;
  __n128 v19 = v12;
  __n128 v20 = a2[2];
  __n128 v16 = v12;
  __n128 v17 = v18;
  sub_1B674C934((uint64_t)&v20, (uint64_t)v21);
  uint64_t v13 = *(void **)(v11 + 32);
  sub_1B62C7C20((uint64_t)&v17);
  sub_1B62C7C20((uint64_t)&v16);
  sub_1B674CA70(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __n128 v14 = a2[1];
  *(__n128 *)uint64_t v11 = *a2;
  *(__n128 *)(v11 + 16) = v14;
  __n128 result = a2[2];
  *(__n128 *)(v11 + 32) = result;
  return result;
}

__n128 sub_1B6BF4994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for PointCacheEmitter)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 36 * a1;
  long long v8 = *(_OWORD *)(a2 + 16);
  if (*(void *)v7 != *(void *)a2
    || *(void *)(v7 + 8) != *(void *)(a2 + 8)
    || *(void *)(v7 + 16) != (void)v8
    || *(void *)(v7 + 24) != *((void *)&v8 + 1)
    || *(_DWORD *)(v7 + 32) != (unint64_t)*(unsigned int *)(a2 + 32))
  {
    uint64_t v13 = v2[24];
    if (v13)
    {
      uint64_t v14 = v2[26];
      uint64_t v15 = 8 * (a1 >> 6);
      *(void *)(v13 + v15) |= 1 << a1;
      *(void *)(v14 + v15) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 result = *(__n128 *)a2;
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v17;
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(a2 + 32);
  return result;
}

uint64_t sub_1B6BF4AD0(uint64_t result, unsigned int a2)
{
  char v3 = a2;
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for TextureLoadPolicy)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  unsigned int v7 = HIWORD(a2);
  unsigned int v8 = a2 >> 8;
  uint64_t v9 = v2[16] + v5 + 4 * result;
  LOWORD(v14) = a2;
  BYTE2(v14) = BYTE2(a2);
  int v10 = HIBYTE(a2) & 1;
  HIBYTE(v14) = HIBYTE(a2) & 1;
  if (*(_DWORD *)v9 != v14)
  {
    uint64_t v11 = v2[24];
    if (v11)
    {
      uint64_t v12 = v2[26];
      uint64_t v13 = 8 * (result >> 6);
      *(void *)(v11 + v13) |= 1 << result;
      *(void *)(v12 + v13) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(unsigned char *)uint64_t v9 = v3;
  *(unsigned char *)(v9 + 1) = v8;
  *(unsigned char *)(v9 + 2) = v7;
  *(unsigned char *)(v9 + 3) = v10;
  return result;
}

uint64_t sub_1B6BF4C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = v4[6];
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for TextureNamedAsset)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_7;
      }
    }
    uint64_t v8 = *v9;
  }
LABEL_7:
  uint64_t v10 = v4[16];
  uint64_t v11 = v4[24];
  if (v11)
  {
    uint64_t v12 = v4[26];
    uint64_t v13 = 8 * (a1 >> 6);
    *(void *)(v11 + v13) |= 1 << a1;
    *(void *)(v12 + v13) &= ~(1 << a1);
  }
  int v14 = (void *)(v10 + v8 + 16 * a1);
  sub_1B635AD78(v4[5], (uint64_t)v4, a1);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  void *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t sub_1B6BF4D10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *(void *)(v4 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(v8 + 56);
    while ((ValueMetadata *)*(v10 - 3) != &type metadata for ColorRampComponent)
    {
      v10 += 5;
      if (!--v9) {
        goto LABEL_7;
      }
    }
    uint64_t v9 = *v10;
  }
LABEL_7:
  uint64_t v11 = *(void *)(v4 + 128) + v9 + 24 * a1;
  v13[0] = a2;
  v13[1] = a3;
  char v14 = a4;
  sub_1B6BF822C(a1, v11, (uint64_t)v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v11 = a2;
  *(void *)(v11 + 8) = a3;
  *(unsigned char *)(v11 + 16) = a4;
  return result;
}

__n128 sub_1B6BF4E08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for EmitterDescription)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 88 * a1;
  long long v9 = *(_OWORD *)(v8 + 48);
  v18[2] = *(_OWORD *)(v8 + 32);
  v18[3] = v9;
  _OWORD v18[4] = *(_OWORD *)(v8 + 64);
  int v19 = *(_DWORD *)(v8 + 80);
  long long v10 = *(_OWORD *)(v8 + 16);
  v18[0] = *(_OWORD *)v8;
  v18[1] = v10;
  if (!sub_1B691DB10((uint64_t)v18, a2))
  {
    uint64_t v11 = v2[24];
    if (v11)
    {
      uint64_t v12 = v2[26];
      uint64_t v13 = 8 * (a1 >> 6);
      *(void *)(v11 + v13) |= 1 << a1;
      *(void *)(v12 + v13) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  sub_1B6BFEF20(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v14;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v16 = *(_OWORD *)(a2 + 48);
  long long v17 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(v8 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(v8 + 48) = v16;
  *(_OWORD *)(v8 + 64) = v17;
  *(__n128 *)(v8 + 32) = result;
  return result;
}

uint64_t sub_1B6BF4F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = v6[6];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(v11 + 56);
    while ((ValueMetadata *)*(v13 - 3) != &type metadata for MeshReferenceAsset)
    {
      v13 += 5;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    uint64_t v12 = *v13;
  }
LABEL_7:
  uint64_t v14 = v6[16];
  uint64_t v15 = v6[24];
  if (v15)
  {
    uint64_t v16 = v6[26];
    uint64_t v17 = 8 * (a1 >> 6);
    *(void *)(v15 + v17) |= 1 << a1;
    *(void *)(v16 + v17) &= ~(1 << a1);
  }
  __n128 v18 = (void *)(v14 + v12 + 32 * a1);
  sub_1B635AD78(v6[5], (uint64_t)v6, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v18 = a2;
  v18[1] = a3;
  v18[2] = a4;
  v18[3] = a5;
  return result;
}

uint64_t sub_1B6BF5098(uint64_t a1, const void *a2, uint64_t a3)
{
  return sub_1B6BF60A4(a1, a2, a3, type metadata accessor for ParticleInitScript, (uint64_t (*)(const void *, const void *))sub_1B6C05DE8);
}

uint64_t sub_1B6BF50C4(uint64_t result, float a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSpawnDelay)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 4 * result;
  uint64_t v8 = v2[16];
  if (*(_DWORD *)(v8 + v7) != LODWORD(a2))
  {
    uint64_t v9 = v2[24];
    if (v9)
    {
      uint64_t v10 = v2[26];
      uint64_t v11 = 8 * (result >> 6);
      *(void *)(v9 + v11) |= 1 << result;
      *(void *)(v10 + v11) &= ~(1 << result);
    }
    uint64_t result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(float *)(v8 + v7) = a2;
  return result;
}

__n128 sub_1B6BF51CC(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for PrimitiveGenerator)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = (long long *)(v7 + v5 + 176 * a1);
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  long long v12 = *v11;
  long long v13 = v11[2];
  v28[1] = v11[1];
  v28[2] = v13;
  v28[0] = v12;
  long long v14 = v11[3];
  long long v15 = v11[4];
  long long v16 = v11[6];
  v28[5] = v11[5];
  v28[6] = v16;
  v28[3] = v14;
  v28[4] = v15;
  long long v17 = v11[7];
  long long v18 = v11[8];
  long long v19 = v11[9];
  *(_OWORD *)((char *)v29 + 9) = *(long long *)((char *)v11 + 153);
  void v28[8] = v18;
  v29[0] = v19;
  v28[7] = v17;
  sub_1B6AAC6B4(a2);
  sub_1B6AAC67C((uint64_t)v28);
  long long v21 = *(_OWORD *)(a2 + 16);
  long long v20 = *(_OWORD *)(a2 + 32);
  *uint64_t v11 = *(_OWORD *)a2;
  v11[1] = v21;
  _OWORD v11[2] = v20;
  long long v22 = *(_OWORD *)(a2 + 96);
  long long v24 = *(_OWORD *)(a2 + 48);
  long long v23 = *(_OWORD *)(a2 + 64);
  v11[5] = *(_OWORD *)(a2 + 80);
  v11[6] = v22;
  void v11[3] = v24;
  v11[4] = v23;
  long long v26 = *(_OWORD *)(a2 + 128);
  __n128 result = *(__n128 *)(a2 + 144);
  long long v27 = *(_OWORD *)(a2 + 112);
  *(long long *)((char *)v11 + 153) = *(_OWORD *)(a2 + 153);
  v11[8] = v26;
  v11[9] = (__int128)result;
  v11[7] = v27;
  return result;
}

uint64_t sub_1B6BF5348(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int v6 = a2;
  uint64_t v7 = v4[6];
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for TexturePlaceholder)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_7;
      }
    }
    uint64_t v8 = *v9;
  }
LABEL_7:
  uint64_t v10 = v4[16];
  uint64_t v11 = v4[24];
  if (v11)
  {
    uint64_t v12 = v4[26];
    uint64_t v13 = 8 * (a1 >> 6);
    *(void *)(v11 + v13) |= 1 << a1;
    *(void *)(v12 + v13) &= ~(1 << a1);
  }
  uint64_t v14 = v10 + v8 + 16 * a1;
  unint64_t v15 = HIDWORD(a2);
  sub_1B635AD78(v4[5], (uint64_t)v4, a1);
  swift_unknownObjectRetain();
  uint64_t result = swift_unknownObjectRelease();
  *(_DWORD *)uint64_t v14 = v6;
  *(_DWORD *)(v14 + 4) = v15;
  *(void *)(v14 + 8) = a3;
  return result;
}

__n128 sub_1B6BF5460(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for TextureShaderAsset)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 168 * a1;
  long long v9 = *(_OWORD *)(a2 + 144);
  v35[8] = *(_OWORD *)(a2 + 128);
  v35[9] = v9;
  uint64_t v36 = *(void *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 80);
  v35[4] = *(_OWORD *)(a2 + 64);
  void v35[5] = v10;
  long long v11 = *(_OWORD *)(a2 + 112);
  v35[6] = *(_OWORD *)(a2 + 96);
  v35[7] = v11;
  long long v12 = *(_OWORD *)(a2 + 16);
  v35[0] = *(_OWORD *)a2;
  v35[1] = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  v35[2] = *(_OWORD *)(a2 + 32);
  v35[3] = v13;
  if (sub_1B6D0193C(v8, (uint64_t)v35))
  {
    uint64_t v14 = v2[24];
    if (v14)
    {
      uint64_t v15 = v2[26];
      uint64_t v16 = 8 * (a1 >> 6);
      *(void *)(v14 + v16) |= 1 << a1;
      *(void *)(v15 + v16) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  long long v17 = *(_OWORD *)v8;
  long long v18 = *(_OWORD *)(v8 + 32);
  v33[1] = *(_OWORD *)(v8 + 16);
  v33[2] = v18;
  v33[0] = v17;
  long long v19 = *(_OWORD *)(v8 + 48);
  long long v20 = *(_OWORD *)(v8 + 64);
  long long v21 = *(_OWORD *)(v8 + 96);
  v33[5] = *(_OWORD *)(v8 + 80);
  v33[6] = v21;
  v33[3] = v19;
  v33[4] = v20;
  long long v22 = *(_OWORD *)(v8 + 112);
  long long v23 = *(_OWORD *)(v8 + 128);
  long long v24 = *(_OWORD *)(v8 + 144);
  uint64_t v34 = *(void *)(v8 + 160);
  v33[8] = v23;
  v33[9] = v24;
  v33[7] = v22;
  sub_1B6AE9CC8(a2);
  sub_1B6AE9D64((uint64_t)v33);
  long long v26 = *(_OWORD *)(a2 + 16);
  long long v25 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v26;
  *(_OWORD *)(v8 + 32) = v25;
  long long v27 = *(_OWORD *)(a2 + 96);
  long long v29 = *(_OWORD *)(a2 + 48);
  long long v28 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v8 + 96) = v27;
  *(_OWORD *)(v8 + 48) = v29;
  *(_OWORD *)(v8 + 64) = v28;
  long long v31 = *(_OWORD *)(a2 + 128);
  __n128 result = *(__n128 *)(a2 + 144);
  long long v32 = *(_OWORD *)(a2 + 112);
  *(void *)(v8 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(v8 + 128) = v31;
  *(__n128 *)(v8 + 144) = result;
  *(_OWORD *)(v8 + 112) = v32;
  return result;
}

uint64_t sub_1B6BF5624(uint64_t a1, const void *a2, uint64_t a3)
{
  return sub_1B6BF60A4(a1, a2, a3, type metadata accessor for MetalFunctionScript, (uint64_t (*)(const void *, const void *))sub_1B6C05ED4);
}

__n128 sub_1B6BF5650(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleBoxRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 36 * a1;
  long long v9 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v9;
  int v16 = *(_DWORD *)(a2 + 32);
  if (sub_1B6969E80((float *)v8, (uint64_t)v15))
  {
    uint64_t v10 = v2[24];
    if (v10)
    {
      uint64_t v11 = v2[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 result = *(__n128 *)a2;
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v14;
  *(_DWORD *)(v8 + 32) = *(_DWORD *)(a2 + 32);
  return result;
}

__n128 sub_1B6BF5780(uint64_t a1, __n128 *a2)
{
  v21[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for PointCacheFileAsset)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + 48 * a1;
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  __n128 v12 = a2[1];
  __n128 v18 = *a2;
  __n128 v19 = v12;
  __n128 v20 = a2[2];
  __n128 v16 = v12;
  __n128 v17 = v18;
  sub_1B674C934((uint64_t)&v20, (uint64_t)v21);
  long long v13 = *(void **)(v11 + 32);
  sub_1B62C7C20((uint64_t)&v17);
  sub_1B62C7C20((uint64_t)&v16);
  sub_1B674CA70(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __n128 v14 = a2[1];
  *(__n128 *)uint64_t v11 = *a2;
  *(__n128 *)(v11 + 16) = v14;
  __n128 result = a2[2];
  *(__n128 *)(v11 + 32) = result;
  return result;
}

uint64_t sub_1B6BF58E0(uint64_t result, unint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  char v7 = a4;
  int v9 = a2;
  unint64_t v10 = HIDWORD(a2);
  uint64_t v11 = v5[6];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    long long v13 = (uint64_t *)(v11 + 56);
    while ((ValueMetadata *)*(v13 - 3) != &type metadata for PointCacheGenerator)
    {
      v13 += 5;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    uint64_t v12 = *v13;
  }
LABEL_7:
  unsigned int v14 = HIWORD(a4);
  uint64_t v15 = v5[16] + v12 + 32 * result;
  LOBYTE(v22) = a4;
  WORD1(v22) = HIWORD(a4);
  if (*(void *)v15 != a2 || *(void *)(v15 + 8) != a3 || *(void *)(v15 + 16) != v22 || *(void *)(v15 + 24) != a5)
  {
    uint64_t v19 = v5[24];
    if (v19)
    {
      uint64_t v20 = v5[26];
      uint64_t v21 = 8 * (result >> 6);
      *(void *)(v19 + v21) |= 1 << result;
      *(void *)(v20 + v21) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v5[5], (uint64_t)v5, result);
  }
  *(_DWORD *)uint64_t v15 = v9;
  *(_DWORD *)(v15 + 4) = v10;
  *(void *)(v15 + 8) = a3;
  *(unsigned char *)(v15 + 16) = v7;
  *(_WORD *)(v15 + 18) = v14;
  *(void *)(v15 + 24) = a5;
  return result;
}

uint64_t sub_1B6BF5A44(uint64_t result, unint64_t a2, uint64_t a3, float a4)
{
  int v7 = a2;
  unint64_t v8 = HIDWORD(a2);
  uint64_t v9 = v4[6];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = (uint64_t *)(v9 + 56);
    while ((ValueMetadata *)*(v11 - 3) != &type metadata for SDFTextureGenerator)
    {
      v11 += 5;
      if (!--v10) {
        goto LABEL_7;
      }
    }
    uint64_t v10 = *v11;
  }
LABEL_7:
  uint64_t v12 = v4[16] + v10 + 24 * result;
  *(float *)&uint64_t v18 = a4;
  if (*(void *)v12 != a2 || *(void *)(v12 + 8) != v18 || *(void *)(v12 + 16) != a3)
  {
    uint64_t v15 = v4[24];
    if (v15)
    {
      uint64_t v16 = v4[26];
      uint64_t v17 = 8 * (result >> 6);
      *(void *)(v15 + v17) |= 1 << result;
      *(void *)(v16 + v17) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v4[5], (uint64_t)v4, result);
  }
  *(_DWORD *)uint64_t v12 = v7;
  *(_DWORD *)(v12 + 4) = v8;
  *(float *)(v12 + 8) = a4;
  *(void *)(v12 + 16) = a3;
  return result;
}

__n128 sub_1B6BF5B80(uint64_t a1, long long *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleLineRenderer)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 44 * a1;
  long long v8 = a2[1];
  long long v11 = *a2;
  v12[0] = v8;
  *(_OWORD *)((char *)v12 + 12) = *(long long *)((char *)a2 + 28);
  sub_1B6BF82EC(a1, (unsigned int *)v7, (uint64_t)&v11);
  long long v9 = a2[1];
  *(_OWORD *)uint64_t v7 = *a2;
  *(_OWORD *)(v7 + 16) = v9;
  __n128 result = *(__n128 *)((char *)a2 + 28);
  *(__n128 *)(v7 + 28) = result;
  return result;
}

__n128 sub_1B6BF5C54(uint64_t a1, int32x4_t *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleMeshRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 40 * a1;
  int32x4_t v9 = a2[1];
  v15[0] = *a2;
  v15[1] = v9;
  uint64_t v16 = a2[2].i64[0];
  if (sub_1B6D42200((int32x4_t *)v8, v15))
  {
    uint64_t v10 = v2[24];
    if (v10)
    {
      uint64_t v11 = v2[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 result = *(__n128 *)a2;
  int32x4_t v14 = a2[1];
  *(int32x4_t *)uint64_t v8 = *a2;
  *(int32x4_t *)(v8 + 16) = v14;
  *(void *)(v8 + 32) = a2[2].i64[0];
  return result;
}

__n128 sub_1B6BF5D84(uint64_t a1, _OWORD *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleQuadRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 144 * a1;
  long long v9 = a2[7];
  float v20[6] = a2[6];
  v21[0] = v9;
  *(_OWORD *)((char *)v21 + 11) = *(_OWORD *)((char *)a2 + 123);
  long long v10 = a2[3];
  _OWORD v20[2] = a2[2];
  v20[3] = v10;
  long long v11 = a2[5];
  _OWORD v20[4] = a2[4];
  v20[5] = v11;
  long long v12 = a2[1];
  v20[0] = *a2;
  v20[1] = v12;
  if (sub_1B633FF5C(v8, (uint64_t)v20))
  {
    uint64_t v13 = v2[24];
    if (v13)
    {
      uint64_t v14 = v2[26];
      uint64_t v15 = 8 * (a1 >> 6);
      *(void *)(v13 + v15) |= 1 << a1;
      *(void *)(v14 + v15) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  long long v16 = a2[7];
  *(_OWORD *)(v8 + 96) = a2[6];
  *(_OWORD *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 123) = *(_OWORD *)((char *)a2 + 123);
  long long v17 = a2[3];
  *(_OWORD *)(v8 + 32) = a2[2];
  *(_OWORD *)(v8 + 48) = v17;
  long long v18 = a2[5];
  *(_OWORD *)(v8 + 64) = a2[4];
  *(_OWORD *)(v8 + 80) = v18;
  __n128 result = *((__n128 *)a2 + 1);
  *(_OWORD *)uint64_t v8 = *a2;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

__n128 sub_1B6BF5EE4(uint64_t a1, _OWORD *a2)
{
  char v3 = v2;
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSizeOverLife)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 112 * a1;
  long long v9 = a2[5];
  v17[4] = a2[4];
  v18[0] = v9;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)a2 + 89);
  long long v10 = a2[1];
  v17[0] = *a2;
  v17[1] = v10;
  long long v11 = a2[3];
  _OWORD v17[2] = a2[2];
  v17[3] = v11;
  sub_1B6BF7FB4(v17, v3, a1, (unsigned char *)v8);
  sub_1B6C05A8C((uint64_t)a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v12 = *a2;
  long long v13 = a2[2];
  *(_OWORD *)(v8 + 16) = a2[1];
  *(_OWORD *)(v8 + 32) = v13;
  *(_OWORD *)uint64_t v8 = v12;
  __n128 result = *((__n128 *)a2 + 3);
  long long v15 = a2[4];
  long long v16 = a2[5];
  *(_OWORD *)(v8 + 89) = *(_OWORD *)((char *)a2 + 89);
  *(_OWORD *)(v8 + 64) = v15;
  *(_OWORD *)(v8 + 80) = v16;
  *(__n128 *)(v8 + 48) = result;
  return result;
}

uint64_t sub_1B6BF6078(uint64_t a1, const void *a2, uint64_t a3)
{
  return sub_1B6BF60A4(a1, a2, a3, type metadata accessor for ParticleUpdateScript, (uint64_t (*)(const void *, const void *))sub_1B6C05E68);
}

uint64_t sub_1B6BF60A4(uint64_t a1, const void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(const void *, const void *))
{
  uint64_t v8 = v5[6];
  uint64_t v9 = a4(0);
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    long long v11 = (uint64_t *)(v8 + 56);
    while (*(v11 - 3) != v9)
    {
      v11 += 5;
      if (!--v10) {
        goto LABEL_5;
      }
    }
    uint64_t v12 = *v11;
  }
  else
  {
LABEL_5:
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t v14 = (const void *)(v5[16] + v12 + *(void *)(v13 + 72) * a1);
  if ((*(unsigned char *)(v13 + 82) & 1) != 0 || memcmp(v14, a2, *(void *)(v13 + 64)))
  {
    uint64_t v15 = v5[24];
    if (v15)
    {
      uint64_t v16 = v5[26];
      uint64_t v17 = 8 * (a1 >> 6);
      *(void *)(v15 + v17) |= 1 << a1;
      *(void *)(v16 + v17) &= ~(1 << a1);
    }
    sub_1B635AD78(v5[5], (uint64_t)v5, a1);
  }

  return a5(a2, v14);
}

uint64_t sub_1B6BF61FC(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v5 = v3[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for TextureRequireMipmap)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v3[16] + v6 + 16 * result;
  char v9 = a3 & 1;
  if (*(void *)v8 != a2 || *(unsigned char *)(v8 + 8) != (unint64_t)(a3 & 1))
  {
    uint64_t v11 = v3[24];
    if (v11)
    {
      uint64_t v12 = v3[26];
      uint64_t v13 = 8 * (result >> 6);
      *(void *)(v11 + v13) |= 1 << result;
      *(void *)(v12 + v13) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v3[5], (uint64_t)v3, result);
  }
  *(void *)uint64_t v8 = a2;
  *(unsigned char *)(v8 + 8) = v9;
  return result;
}

__n128 sub_1B6BF631C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleColorOverLife)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 40 * a1;
  if ((*(unsigned char *)v7 == 0) == (*(unsigned char *)a2 != 0))
  {
    uint64_t v8 = v2[24];
    if (v8)
    {
      uint64_t v9 = v2[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  sub_1B697B9BC(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *(__n128 *)a2;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)uint64_t v7 = result;
  *(_OWORD *)(v7 + 16) = v12;
  return result;
}

__n128 sub_1B6BF642C(uint64_t a1, __n128 *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticlePointRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 48 * a1;
  __n128 v9 = a2[1];
  v15[0] = *a2;
  v15[1] = v9;
  int32x4_t v15[2] = a2[2];
  if (sub_1B6969E84((float *)v8, (uint64_t)v15))
  {
    uint64_t v10 = v2[24];
    if (v10)
    {
      uint64_t v11 = v2[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 v13 = a2[1];
  *(__n128 *)uint64_t v8 = *a2;
  *(__n128 *)(v8 + 16) = v13;
  __n128 result = a2[2];
  *(__n128 *)(v8 + 32) = result;
  return result;
}

uint64_t sub_1B6BF655C(uint64_t result, float a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSpawnDuration)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 4 * result;
  uint64_t v8 = v2[16];
  if (*(_DWORD *)(v8 + v7) != LODWORD(a2))
  {
    uint64_t v9 = v2[24];
    if (v9)
    {
      uint64_t v10 = v2[26];
      uint64_t v11 = 8 * (result >> 6);
      *(void *)(v9 + v11) |= 1 << result;
      *(void *)(v10 + v11) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(float *)(v8 + v7) = a2;
  return result;
}

uint64_t sub_1B6BF6664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = v5[6];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = (uint64_t *)(v9 + 56);
    while ((ValueMetadata *)*(v11 - 3) != &type metadata for REMeshAssetPointCache)
    {
      v11 += 5;
      if (!--v10) {
        goto LABEL_7;
      }
    }
    uint64_t v10 = *v11;
  }
LABEL_7:
  uint64_t v12 = v5[16];
  uint64_t v13 = v5[24];
  if (v13)
  {
    uint64_t v14 = v5[26];
    uint64_t v15 = 8 * (a1 >> 6);
    *(void *)(v13 + v15) |= 1 << a1;
    *(void *)(v14 + v15) &= ~(1 << a1);
  }
  uint64_t v16 = (void *)(v12 + v10 + 24 * a1);
  sub_1B635AD78(v5[5], (uint64_t)v5, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v16 = a2;
  v16[1] = a3;
  _OWORD v16[2] = a4;
  return result;
}

uint64_t sub_1B6BF6794(uint64_t result, unint64_t a2, char a3)
{
  int v4 = a2;
  unint64_t v5 = HIDWORD(a2);
  uint64_t v6 = v3[6];
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for SceneKitAssetInstance)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  uint64_t v9 = v3[16] + v7 + 12 * result;
  char v10 = a3 & 1;
  if (*(void *)v9 != a2 || *(unsigned char *)(v9 + 8) != (unint64_t)(a3 & 1))
  {
    uint64_t v12 = v3[24];
    if (v12)
    {
      uint64_t v13 = v3[26];
      uint64_t v14 = 8 * (result >> 6);
      *(void *)(v12 + v14) |= 1 << result;
      *(void *)(v13 + v14) &= ~(1 << result);
    }
    uint64_t result = sub_1B635AD78(v3[5], (uint64_t)v3, result);
  }
  *(_DWORD *)uint64_t v9 = v4;
  *(_DWORD *)(v9 + 4) = v5;
  *(unsigned char *)(v9 + 8) = v10;
  return result;
}

uint64_t sub_1B6BF68C0(uint64_t a1, void *a2)
{
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for TextureArrayFileAsset)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v6 + 8 * a1;
  uint64_t v9 = v2[16];
  if ((sub_1B6919430(*(void **)(v9 + v8), a2) & 1) == 0)
  {
    uint64_t v10 = v2[24];
    if (v10)
    {
      uint64_t v11 = v2[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v9 + v8) = a2;
  return result;
}

__n128 sub_1B6BF69B4(uint64_t a1, _OWORD *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleRibbonRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 112 * a1;
  long long v9 = a2[5];
  _OWORD v18[4] = a2[4];
  v19[0] = v9;
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)a2 + 89);
  long long v10 = a2[1];
  v18[0] = *a2;
  v18[1] = v10;
  long long v11 = a2[3];
  _OWORD v18[2] = a2[2];
  v18[3] = v11;
  if (sub_1B6CD1848((long long *)v8, v18))
  {
    uint64_t v12 = v2[24];
    if (v12)
    {
      uint64_t v13 = v2[26];
      uint64_t v14 = 8 * (a1 >> 6);
      *(void *)(v12 + v14) |= 1 << a1;
      *(void *)(v13 + v14) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  long long v15 = a2[5];
  *(_OWORD *)(v8 + 64) = a2[4];
  *(_OWORD *)(v8 + 80) = v15;
  *(_OWORD *)(v8 + 89) = *(_OWORD *)((char *)a2 + 89);
  long long v16 = a2[1];
  *(_OWORD *)uint64_t v8 = *a2;
  *(_OWORD *)(v8 + 16) = v16;
  __n128 result = *((__n128 *)a2 + 3);
  *(_OWORD *)(v8 + 32) = a2[2];
  *(__n128 *)(v8 + 48) = result;
  return result;
}

__n128 sub_1B6BF6B04(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSphereRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 36 * a1;
  long long v9 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v9;
  int v16 = *(_DWORD *)(a2 + 32);
  if (sub_1B6969E80((float *)v8, (uint64_t)v15))
  {
    uint64_t v10 = v2[24];
    if (v10)
    {
      uint64_t v11 = v2[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 result = *(__n128 *)a2;
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v14;
  *(_DWORD *)(v8 + 32) = *(_DWORD *)(a2 + 32);
  return result;
}

__n128 sub_1B6BF6C34(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSizeOverTexture)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 72 * a1;
  long long v8 = *(_OWORD *)(a2 + 48);
  _OWORD v12[2] = *(_OWORD *)(a2 + 32);
  void v12[3] = v8;
  int v13 = *(_DWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v9;
  sub_1B6BF8034((uint64_t)v12, v2, a1, v7);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v7 + 48) = v10;
  *(_DWORD *)(v7 + 64) = *(_DWORD *)(a2 + 64);
  __n128 result = *(__n128 *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(__n128 *)(v7 + 16) = result;
  return result;
}

uint64_t sub_1B6BF6D28(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = v4[6];
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    long long v9 = (uint64_t *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for TextureRequireSizeLimit)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_7;
      }
    }
    uint64_t v8 = *v9;
  }
LABEL_7:
  uint64_t v10 = v4[16] + v8 + 24 * result;
  char v11 = a4 & 1;
  if (*(void *)v10 != a2 || *(void *)(v10 + 8) != a3 || *(unsigned char *)(v10 + 16) != (unint64_t)(a4 & 1))
  {
    uint64_t v14 = v4[24];
    if (v14)
    {
      uint64_t v15 = v4[26];
      uint64_t v16 = 8 * (result >> 6);
      *(void *)(v14 + v16) |= 1 << result;
      *(void *)(v15 + v16) &= ~(1 << result);
    }
    __n128 result = sub_1B635AD78(v4[5], (uint64_t)v4, result);
  }
  *(void *)uint64_t v10 = a2;
  *(void *)(v10 + 8) = a3;
  *(unsigned char *)(v10 + 16) = v11;
  return result;
}

__n128 sub_1B6BF6E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleColorOverTexture)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 48 * a1;
  if ((*(unsigned char *)v7 == 0) == (*(unsigned char *)a2 != 0))
  {
    uint64_t v8 = v2[24];
    if (v8)
    {
      uint64_t v9 = v2[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v11;
  __n128 result = *(__n128 *)(a2 + 28);
  *(__n128 *)(v7 + 28) = result;
  return result;
}

__n128 sub_1B6BF6F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleGaussianRenderer)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 32 * a1;
  if (*(unsigned __int8 *)(v7 + 8) != *(unsigned __int8 *)(a2 + 8)
    || *(void *)v7 != *(void *)a2
    || *(unsigned char *)(v7 + 24) != (*(unsigned char *)(a2 + 24) & 1))
  {
    uint64_t v8 = v2[24];
    if (v8)
    {
      uint64_t v9 = v2[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 9);
  *(__n128 *)(v7 + 9) = result;
  return result;
}

__n128 sub_1B6BF704C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleLocalBoxCollider)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 48 * a1;
  *(_OWORD *)long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)&v18[9] = *(_OWORD *)(a2 + 25);
  if (*(void *)v7 != *(void *)a2
    || *(void *)(v7 + 8) != *(void *)(a2 + 8)
    || *(void *)(v7 + 16) != *(void *)v18
    || *(void *)(v7 + 24) != *(void *)&v18[8]
    || *(void *)(v7 + 32) != *(void *)&v18[16]
    || *(unsigned __int8 *)(v7 + 40) != (unint64_t)v18[24])
  {
    uint64_t v13 = v2[24];
    if (v13)
    {
      uint64_t v14 = v2[26];
      uint64_t v15 = 8 * (a1 >> 6);
      *(void *)(v13 + v15) |= 1 << a1;
      *(void *)(v14 + v15) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v16;
  __n128 result = *(__n128 *)(a2 + 25);
  *(__n128 *)(v7 + 25) = result;
  return result;
}

__n128 sub_1B6BF7198(uint64_t a1, long long *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSizeOverVelocity)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 44 * a1;
  long long v8 = a2[1];
  long long v11 = *a2;
  v12[0] = v8;
  *(_OWORD *)((char *)v12 + 12) = *(long long *)((char *)a2 + 28);
  sub_1B6BF7FB4(&v11, v2, a1, (unsigned char *)v7);
  long long v9 = a2[1];
  *(_OWORD *)uint64_t v7 = *a2;
  *(_OWORD *)(v7 + 16) = v9;
  __n128 result = *(__n128 *)((char *)a2 + 28);
  *(__n128 *)(v7 + 28) = result;
  return result;
}

__n128 sub_1B6BF727C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleColorOverPosition)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 40 * a1;
  if ((*(unsigned char *)(v7 + 4) == 0) == (*(unsigned char *)(a2 + 4) != 0))
  {
    uint64_t v8 = v2[24];
    if (v8)
    {
      uint64_t v9 = v2[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  sub_1B68709B0(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *(__n128 *)a2;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(v7 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)uint64_t v7 = result;
  *(_OWORD *)(v7 + 16) = v12;
  return result;
}

__n128 sub_1B6BF738C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleColorOverVelocity)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 40 * a1;
  if ((*(unsigned char *)v7 == 0) == (*(unsigned char *)a2 != 0))
  {
    uint64_t v8 = v2[24];
    if (v8)
    {
      uint64_t v9 = v2[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  sub_1B68709B0(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *(__n128 *)a2;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(v7 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)uint64_t v7 = result;
  *(_OWORD *)(v7 + 16) = v12;
  return result;
}

__n128 sub_1B6BF749C(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticlePrimitiveRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 40 * a1;
  long long v9 = *(_OWORD *)(a2 + 16);
  __n128 v15 = *(__n128 *)a2;
  *(_OWORD *)long long v16 = v9;
  *(void *)&v16[13] = *(void *)(a2 + 29);
  if (sub_1B6BA50B4((float *)v8, (uint64_t)&v15))
  {
    uint64_t v10 = v2[24];
    if (v10)
    {
      uint64_t v11 = v2[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  __n128 result = *(__n128 *)a2;
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v14;
  *(void *)(v8 + 29) = *(void *)(a2 + 29);
  return result;
}

uint64_t sub_1B6BF75CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v6 = v5;
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = v6[6];
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(v10 + 56);
    while ((ValueMetadata *)*(v12 - 3) != &type metadata for TextureRequireAnimationRepresentation)
    {
      v12 += 5;
      if (!--v11) {
        goto LABEL_7;
      }
    }
    uint64_t v11 = *v12;
  }
LABEL_7:
  unsigned int v13 = a5 >> 8;
  uint64_t v14 = v6[16] + v11 + 32 * a1;
  v17[0] = a2;
  v17[1] = a3;
  _OWORD v17[2] = a4;
  char v15 = a5 & 1;
  __int16 v18 = a5 & 0xFF01;
  uint64_t result = sub_1B6BF80B4((uint64_t)v17, v6, a1, v14);
  *(void *)uint64_t v14 = a2;
  *(void *)(v14 + 8) = a3;
  *(void *)(v14 + 16) = a4;
  *(unsigned char *)(v14 + 24) = v15;
  *(unsigned char *)(v14 + 25) = v13;
  return result;
}

uint64_t sub_1B6BF76D4(uint64_t result, uint64_t a2)
{
  int v3 = a2;
  uint64_t v4 = a2 & 0x100000000;
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for Seed)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 8 * result;
  if (*(_DWORD *)v8 != a2 || (((v4 != 0) ^ *(unsigned __int8 *)(v8 + 4)) & 1) != 0)
  {
    uint64_t v9 = v2[24];
    if (v9)
    {
      uint64_t v10 = v2[26];
      uint64_t v11 = 8 * (result >> 6);
      *(void *)(v9 + v11) |= 1 << result;
      *(void *)(v10 + v11) &= ~(1 << result);
    }
    uint64_t result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(_DWORD *)uint64_t v8 = v3;
  *(unsigned char *)(v8 + 4) = BYTE4(v4);
  return result;
}

uint64_t sub_1B6BF77CC(uint64_t result, unint64_t a2)
{
  int v3 = a2;
  unint64_t v4 = HIDWORD(a2);
  uint64_t v5 = v2[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for Parent)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v2[16] + v6 + 8 * result;
  if (*(void *)v8 != a2)
  {
    uint64_t v9 = v2[24];
    if (v9)
    {
      uint64_t v10 = v2[26];
      uint64_t v11 = 8 * (result >> 6);
      *(void *)(v9 + v11) |= 1 << result;
      *(void *)(v10 + v11) &= ~(1 << result);
    }
    uint64_t result = sub_1B635AD78(v2[5], (uint64_t)v2, result);
  }
  *(_DWORD *)uint64_t v8 = v3;
  *(_DWORD *)(v8 + 4) = v4;
  return result;
}

__n128 sub_1B6BF78DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for Skybox)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + 32 * a1;
  if (*(_DWORD *)v7 != *(_DWORD *)a2 || *(_DWORD *)(v7 + 4) != *(_DWORD *)(a2 + 4))
  {
    uint64_t v8 = v2[24];
    if (v8)
    {
      uint64_t v9 = v2[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 13);
  *(__n128 *)(v7 + 13) = result;
  return result;
}

__n128 sub_1B6BF79CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for Material)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[24];
  if (v8)
  {
    uint64_t v9 = v2[26];
    uint64_t v10 = 8 * (a1 >> 6);
    *(void *)(v8 + v10) |= 1 << a1;
    *(void *)(v9 + v10) &= ~(1 << a1);
  }
  uint64_t v11 = v7 + v5 + 104 * a1;
  sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  sub_1B634EC48(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  long long v12 = *(_OWORD *)a2;
  long long v13 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v11 + 32) = v13;
  *(_OWORD *)uint64_t v11 = v12;
  __n128 result = *(__n128 *)(a2 + 48);
  long long v15 = *(_OWORD *)(a2 + 64);
  long long v16 = *(_OWORD *)(a2 + 80);
  *(void *)(v11 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(v11 + 64) = v15;
  *(_OWORD *)(v11 + 80) = v16;
  *(__n128 *)(v11 + 48) = result;
  return result;
}

uint64_t sub_1B6BF7B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = v4[6];
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 56);
    while ((ValueMetadata *)*(v9 - 3) != &type metadata for MeshModel)
    {
      v9 += 5;
      if (!--v8) {
        goto LABEL_7;
      }
    }
    uint64_t v8 = *v9;
  }
LABEL_7:
  uint64_t v10 = v4[16];
  uint64_t v11 = v4[24];
  if (v11)
  {
    uint64_t v12 = v4[26];
    uint64_t v13 = 8 * (a1 >> 6);
    *(void *)(v11 + v13) |= 1 << a1;
    *(void *)(v12 + v13) &= ~(1 << a1);
  }
  uint64_t v14 = (void *)(v10 + v8 + 16 * a1);
  sub_1B635AD78(v4[5], (uint64_t)v4, a1);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  void *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t sub_1B6BF7C40(uint64_t result, uint64_t a2, unsigned int a3)
{
  uint64_t v5 = v3[6];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for MeshImportOptions)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = v3[16] + v6 + 16 * result;
  char v9 = a3 & 1;
  int v10 = (a3 >> 8) & 1;
  if (*(void *)v8 != a2 || *(_WORD *)(v8 + 8) != (unint64_t)(a3 & 0x101))
  {
    uint64_t v12 = v3[24];
    if (v12)
    {
      uint64_t v13 = v3[26];
      uint64_t v14 = 8 * (result >> 6);
      *(void *)(v12 + v14) |= 1 << result;
      *(void *)(v13 + v14) &= ~(1 << result);
    }
    uint64_t result = sub_1B635AD78(v3[5], (uint64_t)v3, result);
  }
  *(void *)uint64_t v8 = a2;
  *(unsigned char *)(v8 + 8) = v9;
  *(unsigned char *)(v8 + 9) = v10;
  return result;
}

uint64_t sub_1B6BF7D6C(uint64_t a1, const void *a2, uint64_t a3)
{
  return sub_1B6BF7DCC(a1, a2, a3, type metadata accessor for TriggerScript, type metadata accessor for TriggerScript, (uint64_t (*)(const void *, const void *))sub_1B6C0A0B4);
}

uint64_t sub_1B6BF7D9C(uint64_t a1, const void *a2, uint64_t a3)
{
  return sub_1B6BF7DCC(a1, a2, a3, type metadata accessor for GraphScript, type metadata accessor for GraphScript, (uint64_t (*)(const void *, const void *))sub_1B6C09EC8);
}

uint64_t sub_1B6BF7DCC(uint64_t a1, const void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(const void *, const void *))
{
  uint64_t v11 = *(void *)(v6 + 48);
  uint64_t v12 = a4(0);
  uint64_t v13 = *(void *)(v11 + 16);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(v11 + 56);
    while (*(v14 - 3) != v12)
    {
      v14 += 5;
      if (!--v13) {
        goto LABEL_7;
      }
    }
    uint64_t v13 = *v14;
  }
LABEL_7:
  long long v15 = (const void *)(*(void *)(v6 + 128) + v13 + *(void *)(*(void *)(v12 - 8) + 72) * a1);
  sub_1B6BF8488(a1, v15, a2, a3, a5);

  return a6(a2, v15);
}

void sub_1B6BF7EF0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for TextureCGImage)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (void **)(*(void *)(v2 + 128) + v5 + 8 * a1);
  sub_1B6BF8564(a1);
  uint64_t v8 = *v7;
  id v9 = a2;

  uint64_t *v7 = a2;
}

unsigned char *sub_1B6BF7FB4(unsigned char *result, uint64_t *a2, uint64_t a3, unsigned char *a4)
{
  if ((*a4 == 0) == (*result != 0) || a4[8] != result[8])
  {
    uint64_t v5 = a2[24];
    if (v5)
    {
      uint64_t v6 = a2[26];
      uint64_t v7 = 8 * (a3 >> 6);
      *(void *)(v5 + v7) |= 1 << a3;
      *(void *)(v6 + v7) &= ~(1 << a3);
    }
    return (unsigned char *)sub_1B635AD78(a2[5], (uint64_t)a2, a3);
  }
  return result;
}

uint64_t sub_1B6BF8034(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  if ((*(unsigned char *)(a4 + 12) == 0) == (*(unsigned char *)(result + 12) != 0)
    || *(unsigned __int8 *)(a4 + 20) != *(unsigned __int8 *)(result + 20))
  {
    uint64_t v5 = a2[24];
    if (v5)
    {
      uint64_t v6 = a2[26];
      uint64_t v7 = 8 * (a3 >> 6);
      *(void *)(v5 + v7) |= 1 << a3;
      *(void *)(v6 + v7) &= ~(1 << a3);
    }
    return sub_1B635AD78(a2[5], (uint64_t)a2, a3);
  }
  return result;
}

uint64_t sub_1B6BF80B4(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)a4 != *(void *)result || *(void *)(a4 + 8) != *(void *)(result + 8))
  {
LABEL_17:
    uint64_t v9 = a2[24];
    if (v9)
    {
      uint64_t v10 = a2[26];
      uint64_t v11 = 8 * (a3 >> 6);
      *(void *)(v9 + v11) |= 1 << a3;
      *(void *)(v10 + v11) &= ~(1 << a3);
    }
    return sub_1B635AD78(a2[5], (uint64_t)a2, a3);
  }
  int v5 = *(unsigned __int8 *)(a4 + 25);
  int v6 = *(unsigned __int8 *)(result + 25);
  if (*(unsigned char *)(a4 + 24))
  {
    if (v5 == v6) {
      char v7 = *(unsigned char *)(result + 24);
    }
    else {
      char v7 = 0;
    }
    if ((v7 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    if (*(unsigned char *)(result + 24)) {
      goto LABEL_17;
    }
    if (*(void *)(a4 + 16) != *(void *)(result + 16) || v5 != v6) {
      goto LABEL_17;
    }
  }
  return result;
}

uint64_t sub_1B6BF815C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  BOOL v5 = *a2 == *a3 && a2[1] == a3[1];
  if (!v5
    || ((a2[2] ^ a3[2]) & 1) != 0
    || ((uint64_t result = *((void *)a2 + 1), v7 = *((void *)a2 + 2), result == *((void *)a3 + 1))
      ? (BOOL v8 = v7 == *((void *)a3 + 2))
      : (BOOL v8 = 0),
        !v8 && (uint64_t result = sub_1B6E334B8(), (result & 1) == 0)))
  {
    uint64_t v9 = v3[24];
    if (v9)
    {
      uint64_t v10 = v3[26];
      uint64_t v11 = 8 * (a1 >> 6);
      *(void *)(v9 + v11) |= 1 << a1;
      *(void *)(v10 + v11) &= ~(1 << a1);
    }
    return sub_1B635AD78(v3[5], (uint64_t)v3, a1);
  }
  return result;
}

uint64_t sub_1B6BF822C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v7 = *(void *)(a3 + 8);
  int v8 = *(unsigned __int8 *)(a3 + 16);
  if (!sub_1B6918BC4(*(void *)a2, *(void *)a3) || (uint64_t result = sub_1B634027C(v5, v7), (result & 1) == 0) || v6 != v8)
  {
    uint64_t v10 = v3[24];
    if (v10)
    {
      uint64_t v11 = v3[26];
      uint64_t v12 = 8 * (a1 >> 6);
      *(void *)(v10 + v12) |= 1 << a1;
      *(void *)(v11 + v12) &= ~(1 << a1);
    }
    return sub_1B635AD78(v3[5], (uint64_t)v3, a1);
  }
  return result;
}

uint64_t sub_1B6BF82EC(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  if (a2[9] == *(_DWORD *)(a3 + 36)
    && a2[10] == *(_DWORD *)(a3 + 40)
    && ((*((unsigned __int8 *)a2 + 32) ^ *(unsigned __int8 *)(a3 + 32)) & 1) == 0
    && ((*((unsigned __int8 *)a2 + 33) ^ *(unsigned __int8 *)(a3 + 33)) & 1) == 0)
  {
    uint64_t result = *a2;
    float v6 = *(float *)a3;
    int v7 = *(unsigned __int8 *)(a3 + 4);
    if (*((unsigned char *)a2 + 4) != 1)
    {
      if (*(float *)&result != v6) {
        LOBYTE(v7) = 1;
      }
      if (v7) {
        goto LABEL_28;
      }
      goto LABEL_21;
    }
    if (result)
    {
      if (result != 1)
      {
        if (LODWORD(v6) <= 1) {
          int v7 = 0;
        }
        if (v7 != 1) {
          goto LABEL_28;
        }
        goto LABEL_21;
      }
      BOOL v8 = LODWORD(v6) == 1;
    }
    else
    {
      BOOL v8 = LODWORD(v6) == 0;
    }
    if (!v8) {
      LOBYTE(v7) = 0;
    }
    if ((v7 & 1) == 0) {
      goto LABEL_28;
    }
LABEL_21:
    if (*((float *)a2 + 2) == *(float *)(a3 + 8)
      && *((unsigned __int8 *)a2 + 12) == *(unsigned __int8 *)(a3 + 12)
      && a2[4] == *(_DWORD *)(a3 + 16)
      && *((unsigned __int8 *)a2 + 20) == *(unsigned __int8 *)(a3 + 20)
      && ((*((unsigned __int8 *)a2 + 21) ^ *(unsigned __int8 *)(a3 + 21)) & 1) == 0
      && *((float *)a2 + 6) <= 0.0 != *(float *)(a3 + 24) > 0.0
      && *((float *)a2 + 7) <= 0.0 != *(float *)(a3 + 28) > 0.0)
    {
      return result;
    }
  }
LABEL_28:
  uint64_t v9 = v3[24];
  if (v9)
  {
    uint64_t v10 = v3[26];
    uint64_t v11 = 8 * (a1 >> 6);
    *(void *)(v9 + v11) |= 1 << a1;
    *(void *)(v10 + v11) &= ~(1 << a1);
  }
  return sub_1B635AD78(v3[5], (uint64_t)v3, a1);
}

uint64_t sub_1B6BF8488(uint64_t a1, const void *a2, const void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = *(void *)(a5(0) - 8);
  if ((*(unsigned char *)(v9 + 82) & 1) != 0 || (uint64_t result = memcmp(a2, a3, *(void *)(v9 + 64)), result))
  {
    uint64_t v11 = v5[24];
    if (v11)
    {
      uint64_t v12 = v5[26];
      uint64_t v13 = 8 * (a1 >> 6);
      *(void *)(v11 + v13) |= 1 << a1;
      *(void *)(v12 + v13) &= ~(1 << a1);
    }
    return sub_1B635AD78(v5[5], (uint64_t)v5, a1);
  }
  return result;
}

uint64_t sub_1B6BF8564(uint64_t a1)
{
  uint64_t v2 = v1[24];
  if (v2)
  {
    uint64_t v3 = v1[26];
    uint64_t v4 = 8 * (a1 >> 6);
    *(void *)(v2 + v4) |= 1 << a1;
    *(void *)(v3 + v4) &= ~(1 << a1);
  }
  return sub_1B635AD78(v1[5], (uint64_t)v1, a1);
}

uint64_t sub_1B6BF85D0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a3) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a3 + 8) == HIDWORD(a3)))
  {
    float v6 = (unsigned int *)(v5 + 12 * (int)a3);
    return sub_1B6BFCAD8(*(void *)(*(void *)(v4 + 136) + 8 * (int)*v6 + 32), result, a2, *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v6+ 2) << 32), v4, a4);
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B6BF869C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v48 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v50 = v8;
  uint64_t v47 = v8 + 112;
  while (1)
  {
    if (v6)
    {
      uint64_t v51 = (v6 - 1) & v6;
      uint64_t v52 = v9;
      unint64_t v12 = __clz(__rbit64(v6)) | (v9 << 6);
    }
    else
    {
      uint64_t v13 = v9 + 1;
      if (v9 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v48 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v9 + 2;
        if (v9 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v48 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v9 + 3;
          if (v9 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v48 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v9 + 4;
            if (v9 + 4 >= v7) {
              return swift_release();
            }
            unint64_t v14 = *(void *)(v48 + 8 * v13);
            if (!v14)
            {
              uint64_t v13 = v9 + 5;
              if (v9 + 5 >= v7) {
                return swift_release();
              }
              unint64_t v14 = *(void *)(v48 + 8 * v13);
              if (!v14)
              {
                while (v7 - 6 != v9)
                {
                  unint64_t v14 = *(void *)(v47 + 8 * v9++);
                  if (v14)
                  {
                    uint64_t v13 = v9 + 5;
                    goto LABEL_21;
                  }
                }
                return swift_release();
              }
            }
          }
        }
      }
LABEL_21:
      uint64_t v51 = (v14 - 1) & v14;
      uint64_t v52 = v13;
      unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    }
    uint64_t v15 = 16 * v12;
    long long v16 = (uint64_t *)(*(void *)(v50 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = *(void *)(v50 + 56) + v15;
    int v54 = *(_DWORD *)v19;
    int v55 = *(_DWORD *)(v19 + 4);
    uint64_t v20 = *(void *)(v19 + 8);
    sub_1B6918938();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v21 = sub_1B6E326F8();
    uint64_t v53 = v22;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = (void *)*a3;
    *a3 = 0x8000000000000000;
    unint64_t v25 = sub_1B62B2CE0(v17, v18);
    char v26 = v24;
    uint64_t v27 = v58[2] + ((v24 & 1) == 0);
    if (v58[3] >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v30 = v58;
        if (v24) {
          goto LABEL_28;
        }
      }
      else
      {
        sub_1B6ACBEF0();
        uint64_t v30 = v58;
        if (v26) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      sub_1B6AB6018(v27, isUniquelyReferenced_nonNull_native);
      uint64_t v28 = sub_1B62B2CE0(v17, v18);
      if ((v26 & 1) != (v29 & 1)) {
        goto LABEL_41;
      }
      unint64_t v25 = v28;
      uint64_t v30 = v58;
      if (v26)
      {
LABEL_28:
        long long v31 = (uint64_t *)(v30[7] + 16 * v25);
        swift_bridgeObjectRelease();
        *long long v31 = v21;
        v31[1] = v53;
        goto LABEL_31;
      }
    }
    v30[(v25 >> 6) + 8] |= 1 << v25;
    long long v32 = (uint64_t *)(v30[6] + 16 * v25);
    uint64_t *v32 = v17;
    v32[1] = v18;
    uint64_t v33 = (uint64_t *)(v30[7] + 16 * v25);
    uint64_t *v33 = v21;
    v33[1] = v53;
    ++v30[2];
    swift_bridgeObjectRetain();
LABEL_31:
    *a3 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1B6E326F8();
    uint64_t v36 = v35;
    swift_retain();
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = (void *)*a4;
    *a4 = 0x8000000000000000;
    unint64_t v39 = sub_1B62B2CE0(v34, v36);
    char v40 = v38;
    uint64_t v41 = v59[2] + ((v38 & 1) == 0);
    if (v59[3] < v41) {
      break;
    }
    if (v37)
    {
      uint64_t v44 = v59;
      if ((v38 & 1) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B6AD6C90();
      uint64_t v44 = v59;
      if ((v40 & 1) == 0)
      {
LABEL_4:
        v44[(v39 >> 6) + 8] |= 1 << v39;
        uint64_t v10 = (uint64_t *)(v44[6] + 16 * v39);
        *uint64_t v10 = v34;
        v10[1] = v36;
        uint64_t v11 = v44[7] + 16 * v39;
        *(_DWORD *)uint64_t v11 = v54;
        *(_DWORD *)(v11 + 4) = v55;
        *(void *)(v11 + 8) = v20;
        ++v44[2];
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
LABEL_37:
    uint64_t v45 = v44[7] + 16 * v39;
    swift_release();
    *(_DWORD *)uint64_t v45 = v54;
    *(_DWORD *)(v45 + 4) = v55;
    *(void *)(v45 + 8) = v20;
LABEL_5:
    *a4 = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++*a2;
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v6 = v51;
    uint64_t v9 = v52;
  }
  sub_1B62BB26C(v41, v37);
  uint64_t v42 = sub_1B62B2CE0(v34, v36);
  if ((v40 & 1) == (v43 & 1))
  {
    unint64_t v39 = v42;
    uint64_t v44 = v59;
    if ((v40 & 1) == 0) {
      goto LABEL_4;
    }
    goto LABEL_37;
  }
LABEL_41:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6BF8B70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  sub_1B6873628(0);
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  unint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v31 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  unint64_t v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v32 = v17;
  uint64_t v35 = a1;
  uint64_t v29 = a1 + 112;
  unint64_t v30 = v17 - 6;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_5:
    uint64_t v21 = *(void *)(v35 + 56);
    uint64_t v22 = *(void *)(v35 + 48) + 8 * v20;
    int v23 = *(_DWORD *)v22;
    char v24 = *(unsigned char *)(v22 + 4);
    uint64_t v25 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
    sub_1B6C09E60(v21 + *(void *)(*(void *)(v25 - 8) + 72) * v20, (uint64_t)&v12[*(int *)(v33 + 48)], (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(_DWORD *)unint64_t v12 = v23;
    _OWORD v12[4] = v24;
    sub_1B6C0A1B8((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(void))sub_1B6873628);
    sub_1B6CA0284((uint64_t)v8, v34);
    sub_1B6C0A220((uint64_t)v8, (uint64_t (*)(void))sub_1B6873628);
    if (v3) {
      return swift_release();
    }
  }
  uint64_t v26 = v18 + 1;
  if (v18 + 1 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 2;
  if (v18 + 2 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 3;
  if (v18 + 3 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 4;
  if (v18 + 4 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 5;
  if (v18 + 5 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27)
  {
LABEL_20:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v18 = v26;
    goto LABEL_5;
  }
  while (v30 != v18)
  {
    unint64_t v27 = *(void *)(v29 + 8 * v18++);
    if (v27)
    {
      uint64_t v26 = v18 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B6BF8E20(uint64_t result, uint64_t a2, unsigned char *a3, unsigned char *a4)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v6 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v7 = *(void *)(*(void *)(*(void *)(*(void *)(a2 + 80)
                                             + 8 * *(__int16 *)(v6 + 12 * (int)result + 6)
                                             + 32)
                                 + 16)
                     + 32);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        swift_retain();
        swift_retain();
        uint64_t v9 = v7 + 40;
        do
        {
          uint64_t v10 = *(ValueMetadata **)(v9 - 8);
          if (v10 != &type metadata for Parent)
          {
            *a3 = (*a3 | (*(uint64_t (**)(void))(*(void *)(*(void *)v9 + 8) + 48))(*(void *)(v9 - 8))) & 1;
            uint64_t v11 = swift_conformsToProtocol2();
            uint64_t v12 = v11 ? v11 : 0;
            uint64_t v13 = v11 ? v10 : 0;
            if (v13 && (~(*(unsigned int (**)(void))(v12 + 64))() & 0x2F00000) == 0) {
              *a4 = 1;
            }
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        swift_release();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B6BF8FE4(uint64_t a1, uint64_t a2)
{
  return sub_1B6BF9178(a1, a2, (uint64_t (*)(void, void, uint64_t))sub_1B6BFD874);
}

uint64_t sub_1B6BF9010(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v6 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v7 = (int *)(v6 + 12 * (int)result);
      uint64_t v8 = *((__int16 *)v7 + 2);
      uint64_t v9 = *(void *)(*(void *)(a2 + 136) + 8 * *v7 + 32);
      if (*(void *)(v9 + 232) <= v8 && *(void *)(v9 + 240) > v8)
      {
        uint64_t v11 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v12 = *(os_unfair_lock_s **)(v9 + 344);
        swift_retain();
        os_unfair_lock_lock(v12);
        ecs_stack_allocator_push_snapshot(*(void *)(v11 + 32));
        swift_retain();
        sub_1B6BFC638(v11, v9, v8, a2, v5);
        swift_release();
        if (!v3) {
          ecs_stack_allocator_pop_snapshot(*(void *)(v11 + 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B6BF914C(uint64_t a1, uint64_t a2)
{
  return sub_1B6BF9178(a1, a2, (uint64_t (*)(void, void, uint64_t))sub_1B6BFEDF0);
}

uint64_t sub_1B6BF9178(uint64_t result, uint64_t a2, uint64_t (*a3)(void, void, uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v7 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v8 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v9 = (int *)(v8 + 12 * (int)result);
      uint64_t v10 = *((__int16 *)v9 + 2);
      uint64_t v11 = *(void *)(*(void *)(a2 + 136) + 8 * *v9 + 32);
      if (*(void *)(v11 + 232) <= v10 && *(void *)(v11 + 240) > v10)
      {
        uint64_t v13 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v14 = *(os_unfair_lock_s **)(v11 + 344);
        swift_retain();
        os_unfair_lock_lock(v14);
        ecs_stack_allocator_push_snapshot(*(void *)(v13 + 32));
        swift_retain();
        sub_1B6BFC6FC(v13, v11, v10, a2, v7, a3);
        swift_release();
        if (!v5) {
          ecs_stack_allocator_pop_snapshot(*(void *)(v13 + 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B6BF92C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6C061CC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6BFC7C8);
}

uint64_t sub_1B6BF92F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BF9348(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6BFC8A4);
}

uint64_t sub_1B6BF931C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BF9348(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6BFC970);
}

uint64_t sub_1B6BF9348(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v10 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v11 = (int *)(v10 + 12 * (int)result);
      uint64_t v12 = *((__int16 *)v11 + 2);
      uint64_t v13 = *(void *)(*(void *)(a2 + 136) + 8 * *v11 + 32);
      if (*(void *)(v13 + 232) <= v12 && *(void *)(v13 + 240) > v12)
      {
        uint64_t v15 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        unint64_t v16 = *(os_unfair_lock_s **)(v13 + 344);
        swift_retain();
        os_unfair_lock_lock(v16);
        ecs_stack_allocator_push_snapshot(*(void *)(v15 + 32));
        swift_retain();
        a4(v15, v13, v12, a2, v9, a3);
        swift_release();
        if (!v6) {
          ecs_stack_allocator_pop_snapshot(*(void *)(v15 + 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B6BF949C(uint64_t a1, uint64_t a2)
{
  return sub_1B635875C(a1, a2, (uint64_t (*)(void, void, uint64_t))sub_1B6C081A0);
}

unint64_t sub_1B6BF94C8(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    goto LABEL_2;
  }
  LODWORD(result) = 0;
  LOBYTE(v6) = 1;
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    return result | ((unint64_t)v6 << 32);
  }
  uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v4 != -1 && *(_DWORD *)(v7 + 12 * (int)a1 + 8) != v4)
  {
LABEL_2:
    LODWORD(result) = 0;
    LOBYTE(v6) = 1;
    return result | ((unint64_t)v6 << 32);
  }
  unint64_t result = sub_1B62F48C4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 88);
  if (!v2)
  {
    uint64_t v6 = HIDWORD(result) & 1;
    return result | ((unint64_t)v6 << 32);
  }
  return result;
}

uint64_t sub_1B6BF9594(uint64_t a1, uint64_t a2)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v2 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v2 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6C0847C(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v2 + 12 * (int)a1) + 32));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BF9630(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 1;
  }
  uint64_t result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 != -1 && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != v3) {
      return 1;
    }
    return sub_1B6C088B4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32));
  }
  return result;
}

uint64_t sub_1B6BF96F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v8 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v10 = (unsigned int *)(v8 + 12 * (int)a1);
    uint64_t v11 = *v10;
    uint64_t v12 = *(void *)(*(void *)(a2 + 136) + 8 * (int)v11 + 32);
    unint64_t v13 = v11 | ((unint64_t)*((unsigned __int16 *)v10 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v10
                                                                                              + 2) << 32);
    swift_bridgeObjectRetain();
    sub_1B6BFCA3C(v12, v13, 24, a3, a4, (uint64_t)a5);
  }
  else
  {
    *a5 = 0u;
    a5[1] = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BF97F8(unint64_t a1, uint64_t a2, uint64_t *a3, unsigned int a4)
{
  unint64_t v6 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 1;
  }
  uint64_t result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v6 == -1 || *(_DWORD *)(v8 + 12 * (int)a1 + 8) == v6)
    {
      uint64_t result = sub_1B6C08A48(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3, a4);
      if (!v4) {
        return result & 1;
      }
    }
  }
  return result;
}

uint64_t sub_1B6BF98B4(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  unint64_t v7 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 1;
  }
  uint64_t result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v7 == -1 || *(_DWORD *)(v9 + 12 * (int)a1 + 8) == v7)
    {
      uint64_t result = sub_1B6C08AD0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), *(_WORD *)(v9 + 12 * (int)a1 + 4), 656, a3, a4, a5);
      if (!v5) {
        return result & 1;
      }
    }
  }
  return result;
}

uint64_t sub_1B6BF9974(unint64_t a1, uint64_t a2, __n128 a3)
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v7 = v6 + 12 * (int)a1;
    if (v4 != -1 && *(_DWORD *)(v7 + 8) != v4) {
      return 0;
    }
    uint64_t v8 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32);
    uint64_t v9 = *(void *)(v8 + 48);
    uint64_t v10 = *(void *)(v9 + 16);
    if (!v10) {
      return 0;
    }
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Color; i += 5)
    {
      if (!--v10) {
        return 0;
      }
    }
    *(__n128 *)(*(void *)(v8 + 128) + *i + 16 * *(__int16 *)(v7 + 4)) = a3;
    return 1;
  }
  return result;
}

uint64_t sub_1B6BF9A44(unint64_t a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  unint64_t v7 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v7 != -1 && *(_DWORD *)(v9 + 12 * (int)a1 + 8) != v7) {
      return 0;
    }
    uint64_t v10 = (int *)(v9 + 12 * (int)a1);
    uint64_t v11 = *(void *)(*(void *)(a2 + 136) + 8 * *v10 + 32);
    uint64_t v12 = *(void *)(v11 + 48);
    uint64_t v13 = *(void *)(v12 + 16);
    if (!v13) {
      return 0;
    }
    uint64_t v14 = *((__int16 *)v10 + 2);
    for (uint64_t i = (void *)(v12 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldTransform; i += 5)
    {
      if (!--v13) {
        return 0;
      }
    }
    unint64_t v16 = (__n128 *)(*(void *)(v11 + 128) + *i + (v14 << 6));
    *unint64_t v16 = a3;
    v16[1] = a4;
    _OWORD v16[2] = a5;
    v16[3] = a6;
    return 1;
  }
  return result;
}

uint64_t sub_1B6BF9B1C(uint64_t a1, uint64_t a2, simd_float4x4 a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6C08CD0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 64, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BF9BBC(uint64_t a1, uint64_t a2, simd_float4x4 *a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6C08D50(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 64, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BF9C60(uint64_t a1, uint64_t a2)
{
  return sub_1B6BF9CC0(a1, a2, (uint64_t (*)(void, void, uint64_t))sub_1B6BFD874) & 1;
}

uint64_t sub_1B6BF9C90(uint64_t a1, uint64_t a2)
{
  return sub_1B6BF9CC0(a1, a2, (uint64_t (*)(void, void, uint64_t))sub_1B6BFD9A4) & 1;
}

uint64_t sub_1B6BF9CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, uint64_t))
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a3(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v3 + 12 * (int)a1 + 4), 64) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BF9D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6358360(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 64, a2, a1, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BF9E1C(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 != -1 && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != v3) {
      return 0;
    }
    uint64_t v6 = (int *)(v5 + 12 * (int)a1);
    uint64_t v7 = *(void *)(*(void *)(a2 + 136) + 8 * *v6 + 32);
    uint64_t v8 = *(void *)(v7 + 48);
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9) {
      return 0;
    }
    int v10 = *((__int16 *)v6 + 2);
    for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePlaneCollider; i += 5)
    {
      if (!--v9) {
        return 0;
      }
    }
    *(unsigned char *)(*(void *)(v7 + 128) + *i + 28 * v10 + 2) = 0;
    return 1;
  }
  return result;
}

uint64_t sub_1B6BF9EF4(unint64_t a1, uint64_t a2, __n128 a3)
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v4 != -1 && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != v4) {
      return 0;
    }
    uint64_t v7 = (int *)(v6 + 12 * (int)a1);
    uint64_t v8 = *(void *)(*(void *)(a2 + 136) + 8 * *v7 + 32);
    uint64_t v9 = *(void *)(v8 + 48);
    uint64_t v10 = *(void *)(v9 + 16);
    if (!v10) {
      return 0;
    }
    uint64_t v11 = *((__int16 *)v7 + 2);
    for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale3; i += 5)
    {
      if (!--v10) {
        return 0;
      }
    }
    *(__n128 *)(*(void *)(v8 + 128) + *i + 16 * v11) = a3;
    return 1;
  }
  return result;
}

uint64_t sub_1B6BF9FC4(unint64_t a1, uint64_t a2)
{
  return sub_1B6BF9FE0(a1, a2) & 1;
}

uint64_t sub_1B6BF9FE0(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  char v4 = 0;
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001) {
    return 0;
  }
  if ((int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      char v4 = sub_1B6C09754(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 16);
    }
    else {
      char v4 = 0;
    }
  }
  return v4 & 1;
}

uint64_t sub_1B6BFA098(uint64_t a1, uint64_t a2, char a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      char v5 = sub_1B6C08288(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 656, a3);
      if (v3) {
        return v6 & 1;
      }
      if (v5 != 2)
      {
        char v6 = v5 & 1;
        return v6 & 1;
      }
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

unint64_t sub_1B6BFA254(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (unint64_t result = sub_1B6C08310(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 88), !v2)&& (result & 0x100000000) != 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    unint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFA3F4(uint64_t a1, uint64_t a2)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v4 = v3 + 12 * (int)a1;
      uint64_t v5 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)v4 + 32);
      uint64_t v6 = *(void *)(v5 + 48);
      uint64_t v7 = *(void *)(v6 + 16);
      if (v7)
      {
        LODWORD(v4) = *(__int16 *)(v4 + 4);
        uint64_t v8 = (void *)(v6 + 56);
        while ((ValueMetadata *)*(v8 - 3) != &type metadata for EmitterDescription)
        {
          v8 += 5;
          if (!--v7) {
            goto LABEL_10;
          }
        }
        uint64_t v4 = *v8 + 88 * (int)v4;
        int v9 = *(unsigned __int8 *)(*(void *)(v5 + 128) + v4 + 45);
        if (v2) {
          return v4 & 1;
        }
      }
      else
      {
LABEL_10:
        int v9 = 2;
        if (v2) {
          return v4 & 1;
        }
      }
      if (v9 != 2)
      {
        LOBYTE(v4) = v9 != 0;
        return v4 & 1;
      }
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6BFA5EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C08398(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32)), !v2)
    && !result)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFA794(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C084E8(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32)), !v2)
    && !result)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFA930(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C08690(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 656), !v2)&& (v5 & 0xFF00000000) == 0x200000000)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFAAF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1))
  {
LABEL_13:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  uint64_t v4 = (int *)(v3 + 12 * (int)a1);
  uint64_t v5 = *(void *)(*(void *)(a2 + 136) + 8 * *v4 + 32);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
LABEL_10:
    if (v2) {
      return 0;
    }
    goto LABEL_13;
  }
  int v8 = *((__int16 *)v4 + 2);
  int v9 = (void *)(v6 + 56);
  while ((ValueMetadata *)*(v9 - 3) != &type metadata for EmitterRuntime)
  {
    v9 += 5;
    if (!--v7) {
      goto LABEL_10;
    }
  }
  return *(void *)(*(void *)(v5 + 128) + *v9 + 656 * v8 + 220);
}

uint64_t sub_1B6BFACE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2 = 1;
  BOOL v3 = *a1 == *a2 && a1[1] == a2[1];
  if (v3 && ((a1[2] ^ a2[2]) & 1) == 0)
  {
    if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2)) {
      char v2 = 0;
    }
    else {
      char v2 = sub_1B6E334B8() ^ 1;
    }
  }
  return v2 & 1;
}

BOOL sub_1B6BFAD5C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 1;
  }
  char v4 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 1;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      char v4 = 1;
    }
    if (v4) {
      return 1;
    }
  }
  return *(unsigned __int8 *)(a1 + 25) != *(unsigned __int8 *)(a2 + 25);
}

uint64_t sub_1B6BFADC0(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && (v3 == -1
     || *(_DWORD *)(*(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)a1 + 8) == v3))
  {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B6BFAE74(uint64_t a1)
{
  if (*(_DWORD *)(v1 + 36) != *(_DWORD *)(a1 + 36)
    || *(_DWORD *)(v1 + 40) != *(_DWORD *)(a1 + 40)
    || ((*(unsigned __int8 *)(v1 + 32) ^ *(unsigned __int8 *)(a1 + 32)) & 1) != 0
    || ((*(unsigned __int8 *)(v1 + 33) ^ *(unsigned __int8 *)(a1 + 33)) & 1) != 0)
  {
    return 1;
  }
  sub_1B630C4C0(v1, (uint64_t)v6);
  sub_1B630C4C0(a1, (uint64_t)&v5);
  sub_1B630C4C0((uint64_t)v6, (uint64_t)&v7);
  if (v8 == 1)
  {
    if (v7 == 0.0)
    {
      sub_1B630C4C0((uint64_t)&v5, (uint64_t)&v9);
      uint64_t result = 1;
      if (v10 != 1 || v9 != 0.0) {
        return result;
      }
    }
    else if (LODWORD(v7) == 1)
    {
      sub_1B630C4C0((uint64_t)&v5, (uint64_t)&v9);
      uint64_t result = 1;
      if (v10 != 1 || LODWORD(v9) != 1) {
        return result;
      }
    }
    else
    {
      sub_1B630C4C0((uint64_t)&v5, (uint64_t)&v9);
      uint64_t result = 1;
      if (v10 != 1 || LODWORD(v9) <= 1) {
        return result;
      }
    }
  }
  else
  {
    float v4 = v7;
    sub_1B630C4C0((uint64_t)&v5, (uint64_t)&v9);
    uint64_t result = 1;
    if ((v10 & 1) != 0 || v4 != v9) {
      return result;
    }
  }
  if (*(float *)(v1 + 8) == *(float *)(a1 + 8)
    && *(unsigned __int8 *)(v1 + 12) == *(unsigned __int8 *)(a1 + 12)
    && *(_DWORD *)(v1 + 16) == *(_DWORD *)(a1 + 16)
    && *(unsigned __int8 *)(v1 + 20) == *(unsigned __int8 *)(a1 + 20)
    && ((*(unsigned __int8 *)(v1 + 21) ^ *(unsigned __int8 *)(a1 + 21)) & 1) == 0)
  {
    return (*(float *)(v1 + 24) > 0.0) ^ (*(float *)(a1 + 24) > 0.0);
  }
  return result;
}

uint64_t sub_1B6BFB038(uint64_t a1)
{
  if (*(_DWORD *)v1 != *(_DWORD *)a1
    || *(_DWORD *)(v1 + 4) != *(_DWORD *)(a1 + 4)
    || ((*(unsigned __int8 *)(v1 + 37) ^ *(unsigned __int8 *)(a1 + 37)) & 1) != 0
    || ((*(unsigned __int8 *)(v1 + 38) ^ *(unsigned __int8 *)(a1 + 38)) & 1) != 0)
  {
    return 1;
  }
  sub_1B630C4C0(v1 + 8, (uint64_t)v7);
  sub_1B630C4C0(a1 + 8, (uint64_t)&v6);
  sub_1B630C4C0((uint64_t)v7, (uint64_t)&v8);
  if (v9 == 1)
  {
    if (v8 == 0.0)
    {
      sub_1B630C4C0((uint64_t)&v6, (uint64_t)&v10);
      uint64_t result = 1;
      if (v11 != 1 || v10 != 0.0) {
        return result;
      }
    }
    else if (LODWORD(v8) == 1)
    {
      sub_1B630C4C0((uint64_t)&v6, (uint64_t)&v10);
      uint64_t result = 1;
      if (v11 != 1 || LODWORD(v10) != 1) {
        return result;
      }
    }
    else
    {
      sub_1B630C4C0((uint64_t)&v6, (uint64_t)&v10);
      uint64_t result = 1;
      if (v11 != 1 || LODWORD(v10) <= 1) {
        return result;
      }
    }
  }
  else
  {
    float v4 = v8;
    sub_1B630C4C0((uint64_t)&v6, (uint64_t)&v10);
    uint64_t result = 1;
    if ((v11 & 1) != 0 || v4 != v10) {
      return result;
    }
  }
  if (*(float *)(v1 + 16) != *(float *)(a1 + 16)) {
    return result;
  }
  if (*(uint64_t *)(v1 + 96) > 1 || *(void *)(v1 + 88)) {
    int v5 = 5;
  }
  else {
    int v5 = *(unsigned __int8 *)(v1 + 20);
  }
  if (*(uint64_t *)(a1 + 96) > 1 || *(void *)(a1 + 88))
  {
    if (v5 != 5) {
      return result;
    }
  }
  else if (v5 != *(unsigned __int8 *)(a1 + 20))
  {
    return result;
  }
  if (*(_DWORD *)(v1 + 24) == *(_DWORD *)(a1 + 24)
    && *(unsigned __int8 *)(v1 + 28) == *(unsigned __int8 *)(a1 + 28)
    && ((*(unsigned __int8 *)(v1 + 29) ^ *(unsigned __int8 *)(a1 + 29)) & 1) == 0)
  {
    return (*(float *)(v1 + 32) > 0.0) ^ (*(float *)(a1 + 32) > 0.0);
  }
  return result;
}

uint64_t *sub_1B6BFB238(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a3)
  {
    *(void *)(a7 + 8 * (*result >> 6)) |= 1 << *result;
    if (a3 != 1)
    {
      *(void *)(a7 + 8 * (result[1] >> 6)) |= 1 << result[1];
      uint64_t v9 = a3 - 2;
      if (a3 != 2)
      {
        float v10 = result + 2;
        do
        {
          uint64_t v11 = *v10++;
          *(void *)(a7 + 8 * (v11 >> 6)) |= 1 << v11;
          --v9;
        }
        while (v9);
      }
    }
  }
  if (a6 == 3 && a4 == 2 && !a5)
  {
    if (a3)
    {
      *(void *)(a9 + 8 * (*result >> 6)) |= 1 << *result;
      if (a3 != 1)
      {
        *(void *)(a9 + 8 * (result[1] >> 6)) |= 1 << result[1];
        uint64_t v12 = a3 - 2;
        if (a3 != 2)
        {
          uint64_t v13 = result + 2;
          do
          {
            uint64_t v14 = *v13++;
            *(void *)(a9 + 8 * (v14 >> 6)) |= 1 << v14;
            --v12;
          }
          while (v12);
        }
      }
    }
  }
  else if (a3)
  {
    *(void *)(a9 + 8 * (*result >> 6)) &= (-1 << *result) - 1;
    if (a3 != 1)
    {
      *(void *)(a9 + 8 * (result[1] >> 6)) &= (-1 << result[1]) - 1;
      uint64_t v15 = a3 - 2;
      if (a3 != 2)
      {
        unint64_t v16 = result + 2;
        do
        {
          uint64_t v17 = *v16++;
          *(void *)(a9 + 8 * (v17 >> 6)) &= (-1 << v17) - 1;
          --v15;
        }
        while (v15);
      }
    }
  }
  return result;
}

uint64_t sub_1B6BFB3E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result != a2)
  {
    uint64_t v8 = result + 1;
    *(void *)(a6 + 8 * (result >> 6)) |= 1 << result;
    if (result + 1 != a2)
    {
      do
      {
        *(void *)(a6 + 8 * (v8 >> 6)) |= 1 << v8;
        ++v8;
      }
      while (a2 != v8);
    }
  }
  if (a5 == 3 && a3 == 2 && !a4)
  {
    if (result != a2)
    {
      uint64_t v9 = result + 1;
      *(void *)(a8 + 8 * (result >> 6)) |= 1 << result;
      if (result + 1 != a2)
      {
        do
        {
          *(void *)(a8 + 8 * (v9 >> 6)) |= 1 << v9;
          ++v9;
        }
        while (a2 != v9);
      }
    }
  }
  else if (result != a2)
  {
    uint64_t v10 = result + 1;
    *(void *)(a8 + 8 * (result >> 6)) &= (-1 << result) - 1;
    if (result + 1 != a2)
    {
      do
      {
        *(void *)(a8 + 8 * (v10 >> 6)) &= (-1 << v10) - 1;
        ++v10;
      }
      while (a2 != v10);
    }
  }
  return result;
}

uint64_t sub_1B6BFB510(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (*(unsigned char *)(result + 213) != 1) {
    return result;
  }
  uint64_t v5 = a5;
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
LABEL_6:
    if (!a5) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v10 = (uint64_t *)(v8 + 56);
  while ((ValueMetadata *)*(v10 - 3) != &type metadata for PropagateDirtiness)
  {
    v10 += 5;
    if (!--v9) {
      goto LABEL_6;
    }
  }
  uint64_t v9 = *v10;
  if (a5)
  {
LABEL_9:
    uint64_t v11 = *(void *)(a2 + 128) + v9;
    uint64_t v12 = *(void *)(a2 + 16);
    while (1)
    {
      uint64_t v14 = *a3++;
      uint64_t v13 = v14;
      swift_retain();
      if (*(unsigned char *)(a2 + 184) == 1) {
        break;
      }
      unsigned int v15 = *(_DWORD *)(*(void *)(a2 + 168) + 4 * v13);
      unint64_t v16 = (unsigned int *)(v11 + 8 * v13);
      uint64_t v17 = *(unsigned int *)(*(void *)(v12 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v15 + 8);
      uint64_t result = swift_release();
      uint64_t v18 = *v16;
      uint64_t v19 = v16[1];
      if (v18 != -1 || v19 != 0) {
        uint64_t result = sub_1B6398CA0(v21, v15 | (unint64_t)(v17 << 32), v18 | (v19 << 32));
      }
      if (!--v5) {
        return result;
      }
    }
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFB680(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = result;
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v8 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      uint64_t v9 = *(__int16 *)(v8 + 12 * (int)a3 + 4);
      uint64_t v10 = *(void *)(a2 + 8);
      uint64_t v11 = sub_1B62C91B8(result);
      uint64_t v19 = v9;
      if (v12) {
        uint64_t v20 = 0;
      }
      else {
        uint64_t v20 = v11 + sub_1B62CD84C(v7) * v9;
      }
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 48);
      swift_retain();
      if (v13(v7, v10))
      {
        uint64_t v14 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        ecs_stack_allocator_push_snapshot(*(void *)(*(void *)v14 + 32));
        uint64_t v15 = *(void *)(*(void *)v14 + 32);
        uint64_t v16 = sub_1B62CD034(v7);
        uint64_t v17 = sub_1B62CD004(v7);
        uint64_t v18 = ecs_stack_allocator_allocate(v15, v16, v17);
        sub_1B62CD04C();
        a4(v20);
        sub_1B633B0F8(v19, (uint64_t)v18, v20, v7, a2);
        sub_1B633B0E8();
        ecs_stack_allocator_pop_snapshot(*(void *)(*(void *)v14 + 32));
      }
      else
      {
        a4(v20);
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B6BFB8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a3 == 0xFFFFFFFFLL) {
    goto LABEL_15;
  }
  if (a3 << 32 < (uint64_t)0xFFFFFFFF00000001) {
    goto LABEL_15;
  }
  if ((int)a3 >= *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (HIDWORD(a3) != -1 && *(_DWORD *)(v5 + 12 * (int)a3 + 8) != HIDWORD(a3)) {
    goto LABEL_15;
  }
  uint64_t v6 = (int *)(v5 + 12 * (int)a3);
  uint64_t v7 = *(void *)(*(void *)(a4 + 136) + 8 * *v6 + 32);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    goto LABEL_15;
  }
  uint64_t v10 = *((__int16 *)v6 + 2);
  uint64_t v11 = (uint64_t *)(v8 + 56);
  while (*(v11 - 3) != a1)
  {
    v11 += 5;
    if (!--v9) {
      goto LABEL_15;
    }
  }
  uint64_t v12 = *(void *)(v7 + 128);
  if (v12)
  {
    uint64_t v14 = *(v11 - 1);
    uint64_t v13 = *v11;
    if (v14 <= 1) {
      uint64_t v14 = 1;
    }
    return sub_1B6BFCC30(a1, a2, a3, v12 + v13 + v14 * v10, a4, a5);
  }
  else
  {
LABEL_15:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFBA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 == 0xFFFFFFFFLL) {
    goto LABEL_15;
  }
  if (a3 << 32 < (uint64_t)0xFFFFFFFF00000001) {
    goto LABEL_15;
  }
  if ((int)a3 >= *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (HIDWORD(a3) != -1 && *(_DWORD *)(v4 + 12 * (int)a3 + 8) != HIDWORD(a3)) {
    goto LABEL_15;
  }
  uint64_t v5 = (int *)(v4 + 12 * (int)a3);
  uint64_t v6 = *(void *)(*(void *)(a4 + 136) + 8 * *v5 + 32);
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    goto LABEL_15;
  }
  uint64_t v9 = *((__int16 *)v5 + 2);
  uint64_t v10 = (uint64_t *)(v7 + 56);
  while (*(v10 - 3) != a1)
  {
    v10 += 5;
    if (!--v8) {
      goto LABEL_15;
    }
  }
  uint64_t v11 = *(void *)(v6 + 128);
  if (v11)
  {
    uint64_t v13 = *(v10 - 1);
    uint64_t v12 = *v10;
    if (v13 <= 1) {
      uint64_t v13 = 1;
    }
    return sub_1B6BFD028(a1, a2, a3, v11 + v12 + v13 * v9, a4);
  }
  else
  {
LABEL_15:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFBC4C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  if (a3 == 0xFFFFFFFFLL) {
    goto LABEL_15;
  }
  if (a3 << 32 < (uint64_t)0xFFFFFFFF00000001) {
    goto LABEL_15;
  }
  if ((int)a3 >= *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (HIDWORD(a3) != -1 && *(_DWORD *)(v5 + 12 * (int)a3 + 8) != HIDWORD(a3)) {
    goto LABEL_15;
  }
  uint64_t v6 = (int *)(v5 + 12 * (int)a3);
  uint64_t v7 = *(void *)(*(void *)(v4 + 136) + 8 * *v6 + 32);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    goto LABEL_15;
  }
  uint64_t v10 = *((__int16 *)v6 + 2);
  uint64_t v11 = (uint64_t *)(v8 + 56);
  while (*(v11 - 3) != a1)
  {
    v11 += 5;
    if (!--v9) {
      goto LABEL_15;
    }
  }
  uint64_t v12 = *(void *)(v7 + 128);
  if (v12)
  {
    uint64_t v14 = *(v11 - 1);
    uint64_t v13 = *v11;
    if (v14 <= 1) {
      uint64_t v14 = 1;
    }
    return sub_1B6BFD360(a1, a2, a3, v12 + v13 + v14 * v10, a4);
  }
  else
  {
LABEL_15:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t *sub_1B6BFBE10(void *a1, uint64_t a2, double a3, float a4)
{
  uint64_t v5 = v4;
  long long v7 = *(_OWORD *)(a2 + 104);
  v63[0] = *(_OWORD *)(a2 + 88);
  v63[1] = v7;
  uint64_t v64 = *(void *)(a2 + 120);
  uint64_t v8 = swift_retain();
  sub_1B62C9DA8(v8, (uint64_t)v63, 0x200000000, v50);
  swift_release();
  uint64_t result = (uint64_t *)sub_1B62CA5FC((uint64_t)v50, (uint64_t)v51, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v51[0])
  {
    long long v58 = v51[0];
    long long v59 = v51[1];
    uint64_t v60 = v52;
    if (v57 >= 1)
    {
      uint64_t v45 = v54;
      if (v54)
      {
        uint64_t v10 = 0;
        uint64_t v44 = v53;
        uint64_t v11 = v56[4];
        int v12 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v42 = (uint64_t)(v56 + 6);
        uint64_t v66 = v56;
        uint64_t v41 = v56 + 8;
        int32x4_t v39 = vdupq_lane_s32(*(int32x2_t *)&a3, 0);
        int v43 = v12;
        do
        {
          uint64_t v13 = (unsigned int *)(v44 + 48 * v10);
          uint64_t v47 = *v13;
          uint64_t v48 = v13[1];
          uint64_t v49 = v5;
          uint64_t v14 = (uint64_t *)*((void *)v13 + 2);
          uint64_t v15 = *((void *)v13 + 3);
          uint64_t v16 = *((void *)v13 + 4);
          uint64_t v17 = *((void *)v13 + 5);
          if (v12)
          {
            uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
            swift_retain();
            os_unfair_lock_lock(v18);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v11);
          sub_1B62CA5FC(v42, (uint64_t)v65, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v19 = v66;
          uint64_t v20 = v66[4];
          uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          _DWORD v19[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
          v19[7] = v21;
          v41[1] = 0;
          _OWORD v41[2] = 0;
          *uint64_t v41 = 0;
          swift_release();
          uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for ParticleTextureFrame, (uint64_t)&off_1F0F82BB8, v14, v15, v16, (uint64_t)v19);
          if (v22)
          {
            if (*(float *)&a3 == a4)
            {
              if (v47 == v48) {
                goto LABEL_17;
              }
              uint64_t v23 = v48 - v47;
              int v12 = v43;
              if ((unint64_t)(v48 - v47) < 8)
              {
                uint64_t v24 = v47;
                uint64_t v25 = v49;
LABEL_26:
                uint64_t v37 = v48 - v24;
                char v38 = (_DWORD *)(v22 + 4 * v24);
                do
                {
                  *v38++ = LODWORD(a3);
                  --v37;
                }
                while (v37);
                goto LABEL_28;
              }
              uint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + v47;
              uint64_t v35 = (int32x4_t *)(v22 + 4 * v47 + 16);
              unint64_t v36 = v23 & 0xFFFFFFFFFFFFFFF8;
              do
              {
                v35[-1] = v39;
                int32x4_t *v35 = v39;
                v35 += 2;
                v36 -= 8;
              }
              while (v36);
              uint64_t v25 = v49;
              if (v23 != (v23 & 0xFFFFFFFFFFFFFFF8)) {
                goto LABEL_26;
              }
            }
            else
            {
              if (v47 == v48)
              {
LABEL_17:
                uint64_t v25 = v49;
                int v12 = v43;
                goto LABEL_28;
              }
              uint64_t v26 = a1[3];
              uint64_t v27 = a1[4];
              uint64_t v28 = v48 - v47;
              uint64_t v29 = (float *)(v22 + 4 * v47);
              uint64_t v30 = a1[1];
              uint64_t v31 = a1[2];
              int v12 = v43;
              do
              {
                int v32 = 9 * ((((unint64_t)(5 * v31) >> 32) >> 25) | (640 * v31));
                uint64_t v33 = v30 ^ v26;
                uint64_t v34 = v31 ^ v27;
                v26 ^= v30 ^ (v31 << 17);
                v31 ^= v33;
                v30 ^= v34;
                uint64_t v27 = __ROR8__(v34, 19);
                *v29++ = (float)((float)(a4 - *(float *)&a3)
                               * (float)((float)(*(void *)&v32 & 0xFFFFFFLL) * 0.000000059605))
                       + *(float *)&a3;
                --v28;
              }
              while (v28);
              a1[1] = v30;
              a1[2] = v31;
              a1[3] = v26;
              a1[4] = v27;
              uint64_t v25 = v49;
            }
          }
          else if (*(float *)&a3 == a4)
          {
            uint64_t v25 = v49;
            int v12 = v43;
          }
          else
          {
            uint64_t v25 = v49;
            int v12 = v43;
            if (v47 != v48)
            {
              uint64_t result = (uint64_t *)sub_1B6D27950();
              __break(1u);
              return result;
            }
          }
LABEL_28:
          v61[0] = v58;
          v61[1] = v59;
          uint64_t v62 = v60;
          sub_1B6345178(v66, (unsigned __int16 **)v61, (uint64_t)v65);
          uint64_t v5 = v25;
          sub_1B634507C((char *)v17);
          ecs_stack_allocator_pop_snapshot(v11);
          if (v12)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
          }
          swift_release();
          ++v10;
        }
        while (v10 != v45);
      }
    }
    return sub_1B632F170(v50);
  }
  return result;
}

uint64_t *sub_1B6BFC224(void *a1, uint64_t a2, double a3, float a4)
{
  uint64_t v5 = v4;
  long long v7 = *(_OWORD *)(a2 + 104);
  v63[0] = *(_OWORD *)(a2 + 88);
  v63[1] = v7;
  uint64_t v64 = *(void *)(a2 + 120);
  uint64_t v8 = swift_retain();
  sub_1B62C9DA8(v8, (uint64_t)v63, 0x200000000, v50);
  swift_release();
  uint64_t result = (uint64_t *)sub_1B62CA5FC((uint64_t)v50, (uint64_t)v51, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v51[0])
  {
    long long v58 = v51[0];
    long long v59 = v51[1];
    uint64_t v60 = v52;
    if (v57 >= 1)
    {
      uint64_t v45 = v54;
      if (v54)
      {
        uint64_t v10 = 0;
        uint64_t v44 = v53;
        uint64_t v11 = v56[4];
        int v12 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v42 = (uint64_t)(v56 + 6);
        uint64_t v66 = v56;
        uint64_t v41 = v56 + 8;
        int32x4_t v39 = vdupq_lane_s32(*(int32x2_t *)&a3, 0);
        int v43 = v12;
        do
        {
          uint64_t v13 = (unsigned int *)(v44 + 48 * v10);
          uint64_t v47 = *v13;
          uint64_t v48 = v13[1];
          uint64_t v49 = v5;
          uint64_t v14 = (uint64_t *)*((void *)v13 + 2);
          uint64_t v15 = *((void *)v13 + 3);
          uint64_t v16 = *((void *)v13 + 4);
          uint64_t v17 = *((void *)v13 + 5);
          if (v12)
          {
            uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
            swift_retain();
            os_unfair_lock_lock(v18);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v11);
          sub_1B62CA5FC(v42, (uint64_t)v65, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v19 = v66;
          uint64_t v20 = v66[4];
          uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          _DWORD v19[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
          v19[7] = v21;
          v41[1] = 0;
          _OWORD v41[2] = 0;
          *uint64_t v41 = 0;
          swift_release();
          uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for ParticleAngleVelocity, (uint64_t)&off_1F0F88960, v14, v15, v16, (uint64_t)v19);
          if (v22)
          {
            if (*(float *)&a3 == a4)
            {
              if (v47 == v48) {
                goto LABEL_17;
              }
              uint64_t v23 = v48 - v47;
              int v12 = v43;
              if ((unint64_t)(v48 - v47) < 8)
              {
                uint64_t v24 = v47;
                uint64_t v25 = v49;
LABEL_26:
                uint64_t v37 = v48 - v24;
                char v38 = (_DWORD *)(v22 + 4 * v24);
                do
                {
                  *v38++ = LODWORD(a3);
                  --v37;
                }
                while (v37);
                goto LABEL_28;
              }
              uint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + v47;
              uint64_t v35 = (int32x4_t *)(v22 + 4 * v47 + 16);
              unint64_t v36 = v23 & 0xFFFFFFFFFFFFFFF8;
              do
              {
                v35[-1] = v39;
                int32x4_t *v35 = v39;
                v35 += 2;
                v36 -= 8;
              }
              while (v36);
              uint64_t v25 = v49;
              if (v23 != (v23 & 0xFFFFFFFFFFFFFFF8)) {
                goto LABEL_26;
              }
            }
            else
            {
              if (v47 == v48)
              {
LABEL_17:
                uint64_t v25 = v49;
                int v12 = v43;
                goto LABEL_28;
              }
              uint64_t v26 = a1[3];
              uint64_t v27 = a1[4];
              uint64_t v28 = v48 - v47;
              uint64_t v29 = (float *)(v22 + 4 * v47);
              uint64_t v30 = a1[1];
              uint64_t v31 = a1[2];
              int v12 = v43;
              do
              {
                int v32 = 9 * ((((unint64_t)(5 * v31) >> 32) >> 25) | (640 * v31));
                uint64_t v33 = v30 ^ v26;
                uint64_t v34 = v31 ^ v27;
                v26 ^= v30 ^ (v31 << 17);
                v31 ^= v33;
                v30 ^= v34;
                uint64_t v27 = __ROR8__(v34, 19);
                *v29++ = (float)((float)(a4 - *(float *)&a3)
                               * (float)((float)(*(void *)&v32 & 0xFFFFFFLL) * 0.000000059605))
                       + *(float *)&a3;
                --v28;
              }
              while (v28);
              a1[1] = v30;
              a1[2] = v31;
              a1[3] = v26;
              a1[4] = v27;
              uint64_t v25 = v49;
            }
          }
          else if (*(float *)&a3 == a4)
          {
            uint64_t v25 = v49;
            int v12 = v43;
          }
          else
          {
            uint64_t v25 = v49;
            int v12 = v43;
            if (v47 != v48)
            {
              uint64_t result = (uint64_t *)sub_1B6D27950();
              __break(1u);
              return result;
            }
          }
LABEL_28:
          v61[0] = v58;
          v61[1] = v59;
          uint64_t v62 = v60;
          sub_1B6345178(v66, (unsigned __int16 **)v61, (uint64_t)v65);
          uint64_t v5 = v25;
          sub_1B634507C((char *)v17);
          ecs_stack_allocator_pop_snapshot(v11);
          if (v12)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
          }
          swift_release();
          ++v10;
        }
        while (v10 != v45);
      }
    }
    return sub_1B632F170(v50);
  }
  return result;
}

uint64_t sub_1B6BFC638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for TextureLoadingOptions))
  {
    uint64_t v9 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    *uint64_t v9 = a3;
    sub_1B63861B4((uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, v9, 1, 1);
  }
  return sub_1B6BF0720(a5, a4);
}

uint64_t sub_1B6BFC6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, void, uint64_t))
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for TextureLoadingOptions))
  {
    uint64_t v11 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    *uint64_t v11 = a3;
    sub_1B63861B4((uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, v11, 1, 1);
  }
  return sub_1B6BF08BC(a5, a4, a6);
}

uint64_t sub_1B6BFC7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for ParticleSpawnState))
  {
    uint64_t v13 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    *uint64_t v13 = a3;
    sub_1B63861B4((uint64_t)&type metadata for ParticleSpawnState, (uint64_t)&off_1F0F79A48, v13, 1, 1);
  }
  return sub_1B6BF0C6C(a5, a4, a6, a7);
}

uint64_t sub_1B6BFC8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for ForceField))
  {
    uint64_t v11 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    *uint64_t v11 = a3;
    sub_1B63861B4((uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, v11, 1, 1);
  }
  return sub_1B6BF0A6C(a5, a4, a6);
}

uint64_t sub_1B6BFC970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for PropagateDirtiness))
  {
    uint64_t v11 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    *uint64_t v11 = a3;
    sub_1B63861B4((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v11, 1, 1);
  }
  return sub_1B6BF118C(a5, a4, a6);
}

uint64_t sub_1B6BFCA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for Bindings)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    sub_1B638D7DC(a4, a5, *(void *)(*(void *)(a1 + 128) + *v8 + (a2 << 16 >> 48) * a3), (uint64_t *)a6);
  }
  else
  {
LABEL_5:
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6BFCAD8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v9 = v6 + 56;
    while (*(void *)(v9 - 24) != a2)
    {
      v9 += 40;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    uint64_t v12 = v9 - 8;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v10 = *(void *)(v12 + 8);
    if (v11 <= 1) {
      uint64_t v11 = 1;
    }
    uint64_t v13 = *(void *)(*(void *)(*(void *)(a5 + 136) + 8 * (int)a4 + 32) + 128) + v10 + v11 * (a4 << 16 >> 48);
    *(void *)(a6 + 24) = a2;
    *(void *)(a6 + 32) = a3;
    uint64_t v14 = sub_1B62C12C4((uint64_t *)a6);
    return sub_1B62C5E18(v13, a2, (uint64_t)v14);
  }
  else
  {
LABEL_5:
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  return result;
}

void sub_1B6BFCB90(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v15 = HIDWORD(a2);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  sub_1B6BFD6AC(a1, v15, a4, a5, a6, a7, a8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  if (v8) {
    __break(1u);
  }
}

uint64_t sub_1B6BFCC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t result = sub_1B62CD034(a1);
  if (result)
  {
    uint64_t v51 = a3;
    uint64_t v49 = a1;
    uint64_t v50 = a2;
    uint64_t v14 = sub_1B62C12C4(v48);
    sub_1B62C5E18(a4, a1, (uint64_t)v14);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(a1, v12))
    {
      uint64_t v44 = *(void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      ecs_stack_allocator_push_snapshot(*(void *)(*(void *)v44 + 32));
      uint64_t v15 = *(void *)(*(void *)v44 + 32);
      uint64_t v16 = sub_1B62CD034(a1);
      uint64_t v17 = sub_1B62CD004(a1);
      int v43 = ecs_stack_allocator_allocate(v15, v16, v17);
      sub_1B62CD04C();
      uint64_t v18 = a6[3];
      uint64_t v19 = sub_1B62C14BC(a6, v18);
      uint64_t v46 = v18;
      uint64_t v20 = sub_1B62C12C4(v45);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v20, v19, v18);
      uint64_t v21 = v49;
      uint64_t v22 = v50;
      sub_1B62C550C((uint64_t)v48, v49);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v22 + 8) + 104))(v45, v21);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v45);
      uint64_t v42 = a4;
      uint64_t v23 = v51;
      uint64_t v25 = sub_1B62CB3E0(a1, v24, v51);
      uint64_t v26 = v49;
      uint64_t v27 = v50;
      uint64_t v28 = sub_1B62C14BC(v48, v49);
      uint64_t v46 = v26;
      uint64_t v47 = *(void *)(v27 + 8);
      uint64_t v29 = sub_1B62C12C4(v45);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v29, v28, v26);
      sub_1B6B3F674((uint64_t)v45, v25, a1);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v45);
      uint64_t v30 = sub_1B635AB28(v23) << 16 >> 48;
      swift_retain();
      sub_1B633B0F8(v30, (uint64_t)v43, v42, a1, a2);
      swift_release();
      sub_1B633B0E8();
      ecs_stack_allocator_pop_snapshot(*(void *)(*(void *)v44 + 32));
    }
    else
    {
      uint64_t v31 = a6[3];
      int v32 = sub_1B62C14BC(a6, v31);
      uint64_t v46 = v31;
      uint64_t v33 = sub_1B62C12C4(v45);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v33, v32, v31);
      uint64_t v34 = v49;
      uint64_t v35 = v50;
      sub_1B62C550C((uint64_t)v48, v49);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v35 + 8) + 104))(v45, v34);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v45);
      uint64_t v37 = sub_1B62CB3E0(a1, v36, v51);
      uint64_t v38 = v49;
      uint64_t v39 = v50;
      char v40 = sub_1B62C14BC(v48, v49);
      uint64_t v46 = v38;
      uint64_t v47 = *(void *)(v39 + 8);
      uint64_t v41 = sub_1B62C12C4(v45);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v41, v40, v38);
      sub_1B6B3F674((uint64_t)v45, v37, a1);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v45);
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v48);
  }
  return result;
}

uint64_t sub_1B6BFD028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t result = sub_1B62CD034(a1);
  if (result)
  {
    uint64_t v42 = a1;
    uint64_t v43 = a2;
    uint64_t v13 = sub_1B62C12C4(v41);
    sub_1B62C5E18(a4, a1, (uint64_t)v13);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(a1, v11))
    {
      uint64_t v37 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      ecs_stack_allocator_push_snapshot(*(void *)(*v37 + 32));
      uint64_t v14 = *v37;
      uint64_t v44 = v5;
      uint64_t v15 = *(void *)(v14 + 32);
      uint64_t v16 = sub_1B62CD034(a1);
      uint64_t v17 = sub_1B62CD004(a1);
      uint64_t v36 = ecs_stack_allocator_allocate(v15, v16, v17);
      sub_1B62CD04C();
      uint64_t v18 = v42;
      uint64_t v19 = v43;
      sub_1B62C550C((uint64_t)v41, v42);
      (*(void (**)(uint64_t))(*(void *)(v19 + 8) + 120))(v18);
      uint64_t v21 = sub_1B62CB3E0(a1, v20, a3);
      uint64_t v35 = a3;
      uint64_t v22 = v42;
      uint64_t v23 = v43;
      uint64_t v24 = sub_1B62C14BC(v41, v42);
      uint64_t v39 = v22;
      uint64_t v40 = *(void *)(v23 + 8);
      uint64_t v25 = sub_1B62C12C4(v38);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v25, v24, v22);
      sub_1B6B3F674((uint64_t)v38, v21, a1);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
      uint64_t v26 = sub_1B635AB28(v35) << 16 >> 48;
      swift_retain();
      sub_1B633B0F8(v26, (uint64_t)v36, a4, a1, a2);
      swift_release();
      sub_1B633B0E8();
      ecs_stack_allocator_pop_snapshot(*(void *)(*v37 + 32));
    }
    else
    {
      uint64_t v27 = v42;
      uint64_t v28 = v43;
      sub_1B62C550C((uint64_t)v41, v42);
      (*(void (**)(uint64_t))(*(void *)(v28 + 8) + 120))(v27);
      uint64_t v30 = sub_1B62CB3E0(a1, v29, a3);
      uint64_t v31 = v42;
      uint64_t v32 = v43;
      uint64_t v33 = sub_1B62C14BC(v41, v42);
      uint64_t v39 = v31;
      uint64_t v40 = *(void *)(v32 + 8);
      uint64_t v34 = sub_1B62C12C4(v38);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v34, v33, v31);
      sub_1B6B3F674((uint64_t)v38, v30, a1);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
  }
  return result;
}

uint64_t sub_1B6BFD360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *))
{
  uint64_t v41 = a3;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t result = sub_1B62CD034(a1);
  if (result)
  {
    uint64_t v39 = a1;
    uint64_t v40 = a2;
    uint64_t v13 = sub_1B62C12C4(v38);
    sub_1B62C5E18(a4, a1, (uint64_t)v13);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(a1, v11))
    {
      uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      ecs_stack_allocator_push_snapshot(*(void *)(*(void *)v14 + 32));
      uint64_t v34 = v14;
      uint64_t v15 = *(void *)(*(void *)v14 + 32);
      uint64_t v16 = a4;
      uint64_t v17 = sub_1B62CD034(a1);
      uint64_t v18 = sub_1B62CD004(a1);
      uint64_t v19 = ecs_stack_allocator_allocate(v15, v17, v18);
      sub_1B62CD04C();
      a5(v38);
      if (v6)
      {
        sub_1B633B0E8();
      }
      else
      {
        uint64_t v27 = sub_1B62CB3E0(a1, v20, v41);
        uint64_t v33 = (uint64_t)v19;
        uint64_t v28 = v39;
        uint64_t v29 = v40;
        uint64_t v30 = sub_1B62C14BC(v38, v39);
        uint64_t v36 = v28;
        uint64_t v37 = *(void *)(v29 + 8);
        uint64_t v31 = sub_1B62C12C4(v35);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v31, v30, v28);
        sub_1B6B3F674((uint64_t)v35, v27, a1);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v35);
        uint64_t v32 = sub_1B635AB28(v41) << 16 >> 48;
        swift_retain();
        sub_1B633B0F8(v32, v33, v16, a1, a2);
        swift_release();
        sub_1B633B0E8();
      }
      ecs_stack_allocator_pop_snapshot(*(void *)(*(void *)v34 + 32));
    }
    else
    {
      a5(v38);
      if (!v6)
      {
        uint64_t v22 = sub_1B62CB3E0(a1, v21, v41);
        uint64_t v23 = v39;
        uint64_t v24 = v40;
        uint64_t v25 = sub_1B62C14BC(v38, v39);
        uint64_t v36 = v23;
        uint64_t v37 = *(void *)(v24 + 8);
        uint64_t v26 = sub_1B62C12C4(v35);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v26, v25, v23);
        sub_1B6B3F674((uint64_t)v35, v22, a1);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v35);
      }
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
  }
  return result;
}

uint64_t sub_1B6BFD6AC(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1B6345398(*(void *)(a1 + 40), a6, v21);
  if (LOBYTE(v21[0]) == 1) {
    return sub_1B6660EAC(a2, a3, **(void **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues), a6, a7);
  }
  unint64_t v20 = a5;
  uint64_t v23 = a3;
  uint64_t v15 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), a6, v21);
  if ((v21[0] & 1) == 0)
  {
    v21[0] = a6;
    v21[1] = a7;
    char v22 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v21, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v21);
  }
  sub_1B634507C((char *)a1);
  uint64_t v17 = sub_1B62CD84C(a6);
  if (v17 >= 1)
  {
    MEMORY[0x1F4188790](v17, v18);
    _OWORD v19[2] = a6;
    v19[3] = a7;
    v19[4] = v23;
    sub_1B6BF1508(a6, v20, (void (*)(char *))sub_1B6C09D9C, (uint64_t)v19, a6, a7);
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B6BFD874(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadingOptions; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(a1 + 128) + *i + a2 * a3;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(void *)(v9 + 16);
  char v12 = *(unsigned char *)(v9 + 24);
  long long v17 = *(_OWORD *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 48);
  __int16 v14 = *(_WORD *)(v9 + 56);
  uint64_t v15 = *(void *)v9 | 2;
  uint64_t v16 = sub_1B635AB28(a5) << 16 >> 48;
  v18[0] = v15;
  v18[1] = v10;
  _OWORD v18[2] = v11;
  char v19 = v12;
  long long v20 = v17;
  uint64_t v21 = v13;
  __int16 v22 = v14;
  swift_retain();
  sub_1B6358498(v16, (uint64_t)v18);
  swift_release();
  return 1;
}

uint64_t sub_1B6BFD9A4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadingOptions; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(a1 + 128) + *i + a2 * a3;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(void *)(v9 + 16);
  char v12 = *(unsigned char *)(v9 + 24);
  long long v17 = *(_OWORD *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 48);
  __int16 v14 = *(_WORD *)(v9 + 56);
  uint64_t v15 = *(void *)v9 | 0x52;
  uint64_t v16 = sub_1B635AB28(a5) << 16 >> 48;
  v18[0] = v15;
  v18[1] = v10;
  _OWORD v18[2] = v11;
  char v19 = v12;
  long long v20 = v17;
  uint64_t v21 = v13;
  __int16 v22 = v14;
  swift_retain();
  sub_1B6358498(v16, (uint64_t)v18);
  swift_release();
  return 1;
}

uint64_t sub_1B6BFDAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (ValueMetadata **)(v3 + 32); *i != &type metadata for TextureLoadingOptions; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  v8[1] = 0;
  v8[2] = 0;
  v8[0] = 82;
  char v9 = -2;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v10 = 0;
  __int16 v13 = 768;
  uint64_t v7 = sub_1B635AB28(a3) << 16 >> 48;
  swift_retain();
  sub_1B6358498(v7, (uint64_t)v8);
  swift_release();
  return 1;
}

uint64_t sub_1B6BFDBC4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for DirectionalLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  uint64_t v8 = (_DWORD *)(*(void *)(a1 + 128) + *i + a2 * a3);
  *uint64_t v8 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_intensity);
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_orthoScale + 4)) {
    return 1;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zNear + 4)) {
    return 1;
  }
  if ((*(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zFar + 4) & 1) == 0)
  {
    int v9 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zFar);
    int v10 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zNear);
    v8[1] = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_orthoScale);
    v8[2] = v10;
    void v8[3] = v9;
  }
  return 1;
}

uint64_t sub_1B6BFDCA0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BFE1D0(a1, a2, a3, 16, (uint64_t (*)(void, void, uint64_t, void *))sub_1B6BFDBC4);
}

uint64_t sub_1B6BFDCE8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PointLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_attenuationRadius + 4)) {
    return 1;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zNear + 4)) {
    return 1;
  }
  if ((*(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zFar + 4) & 1) == 0)
  {
    uint64_t v8 = (_DWORD *)(*(void *)(a1 + 128) + *i + a2 * a3);
    int v9 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_attenuationRadius);
    int v10 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zFar);
    int v11 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_zNear);
    *uint64_t v8 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_intensity);
    v8[1] = v9;
    v8[2] = v11;
    void v8[3] = v10;
  }
  return 1;
}

uint64_t sub_1B6BFDDC0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BFE1D0(a1, a2, a3, 16, (uint64_t (*)(void, void, uint64_t, void *))sub_1B6BFDCE8);
}

float sub_1B6BFDE08(uint64_t a1, uint64_t a2, char *a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v5 = (int *)(v4 + 12 * (int)a1);
      uint64_t v6 = *(void *)(*(void *)(a2 + 136) + 8 * *v5 + 32);
      uint64_t v7 = *(void *)(v6 + 48);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v9 = *((__int16 *)v5 + 2);
        int v10 = (void *)(v7 + 56);
        while ((ValueMetadata *)*(v10 - 3) != &type metadata for AmbientLight)
        {
          v10 += 5;
          if (!--v8) {
            goto LABEL_10;
          }
        }
        goto LABEL_12;
      }
LABEL_10:
      if (v3) {
        return result;
      }
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();

  sub_1B6E32BE8();
  __break(1u);
LABEL_12:
  float result = *(float *)&a3[OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_intensity] * 0.0014641;
  *(float *)(*(void *)(v6 + 128) + *v10 + 4 * v9) = result;
  return result;
}

uint64_t sub_1B6BFE010(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for SpotLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  sub_1B6638318(*(void *)(a1 + 128) + *i + a2 * a3, a4);
  return 1;
}

uint64_t sub_1B6BFE080(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BFE1D0(a1, a2, a3, 24, (uint64_t (*)(void, void, uint64_t, void *))sub_1B6BFE010);
}

uint64_t sub_1B6BFE0C8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for RectAreaLight; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_extents + 8)) {
    return 1;
  }
  int v8 = *(unsigned __int8 *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_doubleSided);
  if (v8 != 2)
  {
    uint64_t v9 = *(void *)(a1 + 128) + *i + a2 * a3;
    uint64_t v10 = *(void *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_extents);
    *(_DWORD *)uint64_t v9 = *(_DWORD *)(a4 + OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_intensity);
    *(void *)(v9 + 8) = v10;
    *(unsigned char *)(v9 + 16) = v8 & 1;
  }
  return 1;
}

uint64_t sub_1B6BFE180(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BFE1D0(a1, a2, a3, 24, (uint64_t (*)(void, void, uint64_t, void *))sub_1B6BFE0C8);
}

uint64_t sub_1B6BFE1D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void, void, uint64_t, void *))
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v7 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = a5(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v7 + 12 * (int)a1 + 4), a4, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();

    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

float sub_1B6BFE388(uint64_t a1, uint64_t a2, char *a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v5 = (int *)(v4 + 12 * (int)a1);
      uint64_t v6 = *(void *)(*(void *)(a2 + 136) + 8 * *v5 + 32);
      uint64_t v7 = *(void *)(v6 + 48);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v9 = *((__int16 *)v5 + 2);
        uint64_t v10 = (void *)(v7 + 56);
        while ((ValueMetadata *)*(v10 - 3) != &type metadata for IBLGenerator)
        {
          v10 += 5;
          if (!--v8) {
            goto LABEL_10;
          }
        }
        goto LABEL_12;
      }
LABEL_10:
      if (v3) {
        return result;
      }
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();

  sub_1B6E32BE8();
  __break(1u);
LABEL_12:
  float result = *(float *)&a3[OBJC_IVAR____TtC3VFX23VFXSceneLightParameters_intensity];
  *(float *)(*(void *)(v6 + 128) + *v10 + 4 * v9) = result;
  return result;
}

uint64_t sub_1B6BFE580(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, float a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Shadow; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  sub_1B6638590(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5);
  return 1;
}

uint64_t sub_1B6BFE5F4(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  sub_1B68DAB3C(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5);
  return 1;
}

uint64_t sub_1B6BFE668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for Children)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 8 * a1;
  uint64_t v8 = *(void *)(v2 + 128);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v8 + v7) = a2;
  return result;
}

uint64_t sub_1B6BFE6E8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  uint64_t v13 = *(void *)(a1 + 128) + *i + a2 * a3;
  unint64_t v14 = sub_1B69DE4C4(a4);
  uint64_t v12 = 1;
  sub_1B6919AD4(a4, v14 | ((HIDWORD(v14) & 1) << 32), a6, v13, a5, 1);
  return v12;
}

uint64_t sub_1B6BFE7B0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterDescription; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  uint64_t v16 = *(void *)(a1 + 128) + *i + a2 * a3;
  long long v17 = *(_OWORD *)(v16 + 16);
  v32[0] = *(_OWORD *)v16;
  v32[1] = v17;
  long long v19 = *(_OWORD *)(v16 + 48);
  long long v18 = *(_OWORD *)(v16 + 64);
  long long v20 = *(_OWORD *)(v16 + 32);
  int v33 = *(_DWORD *)(v16 + 80);
  v32[3] = v19;
  v32[4] = v18;
  v32[2] = v20;
  long long v21 = *(_OWORD *)(v16 + 16);
  v30[0] = *(_OWORD *)v16;
  v30[1] = v21;
  long long v22 = *(_OWORD *)(v16 + 32);
  long long v23 = *(_OWORD *)(v16 + 48);
  long long v24 = *(_OWORD *)(v16 + 64);
  int v31 = *(_DWORD *)(v16 + 80);
  v30[3] = v23;
  v30[4] = v24;
  _OWORD v30[2] = v22;
  if ((a7 != -1 || a8)
    && (a7 & 0x80000000) == 0
    && *(void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)a7
    && ((uint64_t v25 = *(void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager__entries), a8 == -1)
     || *(_DWORD *)(v25 + 12 * (int)a7 + 8) == a8))
  {
    uint64_t v27 = (int *)(v25 + 12 * (int)a7);
    uint64_t v28 = *(void *)(*(void *)(a6 + 136) + 8 * *v27 + 32);
    __int16 v29 = *((_WORD *)v27 + 2);
    sub_1B6BFEF20((uint64_t)v32);
    sub_1B6BFE6E8(v28, v29, 656, a7 | (unint64_t)(a8 << 32), a6, v30);
  }
  else
  {
    sub_1B6BFEF20((uint64_t)v32);
  }
  uint64_t v26 = sub_1B635AB28(a5) << 16 >> 48;
  swift_retain();
  sub_1B6BF4E08(v26, (uint64_t)v32);
  swift_release();
  sub_1B6AE9994((uint64_t)v32);
  return 1;
}

uint64_t sub_1B6BFE9A0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6BFE7B0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 88, a2, a1, a3, a4, a5) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BFEA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for VFXTag)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  uint64_t v9 = (void *)(*(void *)(v3 + 128) + v7 + 16 * a1);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t sub_1B6BFEADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for TextureGPURuntime)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 8 * a1;
  uint64_t v8 = *(void *)(v2 + 128);
  swift_unknownObjectRetain();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(v8 + v7) = a2;
  return result;
}

uint64_t sub_1B6BFEB5C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 1;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Bindings; i += 5)
  {
    if (!--v6) {
      return 1;
    }
  }
  uint64_t v11 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = MEMORY[0x1BA9B41E0](a4, a5);
  uint64_t v16 = sub_1B6913DA0(v12, v13, v14, v15, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1B6BFEC3C(uint64_t a1, __int16 a2, uint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ProjectionMatrix; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  uint64_t v11 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
  *uint64_t v11 = a4;
  v11[1] = a5;
  _OWORD v11[2] = a6;
  void v11[3] = a7;
  return 1;
}

uint64_t sub_1B6BFEC98(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t), uint64_t a10)
{
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12) {
    return 1;
  }
  for (uint64_t i = (void *)(v11 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Bindings; i += 5)
  {
    if (!--v12) {
      return 1;
    }
  }
  uint64_t result = sub_1B6B63294(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7, a8, a9, a10);
  if (!v10) {
    return 0;
  }
  return result;
}

uint64_t sub_1B6BFED34(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, void (*a8)(uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    return 0;
  }
  for (uint64_t i = (void *)(v13 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Bindings; i += 5)
  {
    if (!--v14) {
      return 0;
    }
  }
  sub_1B6B636B0((unsigned char *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5 & 1, a6, a7 & 1, a8, a9, a10, a11, a12, a13);
  return 1;
}

uint64_t sub_1B6BFEDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C07FB8(a1, a2, a3);
}

uint64_t sub_1B6BFEDF0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadingOptions; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(a1 + 128) + *i + a2 * a3;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(void *)(v9 + 16);
  char v12 = *(unsigned char *)(v9 + 24);
  long long v17 = *(_OWORD *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 48);
  __int16 v14 = *(_WORD *)(v9 + 56);
  uint64_t v15 = *(void *)v9 | 1;
  uint64_t v16 = sub_1B635AB28(a5) << 16 >> 48;
  v18[0] = v15;
  v18[1] = v10;
  _OWORD v18[2] = v11;
  char v19 = v12;
  long long v20 = v17;
  uint64_t v21 = v13;
  __int16 v22 = v14;
  swift_retain();
  sub_1B6358498(v16, (uint64_t)v18);
  swift_release();
  return 1;
}

uint64_t sub_1B6BFEF20(uint64_t a1)
{
  return a1;
}

void sub_1B6BFEF74(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1B62CF1CC(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v5 = sub_1B6E324B8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6BFEFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6BFF194(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 8, a3), !v3)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_unknownObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFF194(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureGPURuntime; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  uint64_t v9 = *i + a2 * a3;
  uint64_t v10 = *(void *)(a1 + 128);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v10 + v9) = a4;
  return 1;
}

uint64_t sub_1B6BFF228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6BFEFE0(a1, a2, a3);
}

uint64_t sub_1B6BFF240(uint64_t a1, __int16 a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    return 0;
  }
  for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v10) {
      return 0;
    }
  }
  sub_1B6A81660(*(void *)(a1 + 128) + *i + a2 * a3, a4 & 1, a5, a6, a7, a8, a9);
  return 1;
}

uint64_t sub_1B6BFF2C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v8 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6BFF240(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3 & 1, a4, a5, a6, a7, a8) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BFF388(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v10 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6BFF240(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v10 + 12 * (int)a1) + 32), *(_WORD *)(v10 + 12 * (int)a1 + 4), 656, a3 & 1, a4, a5, a6, a7, a8), !v8)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6786A7C(a5);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6BFF588(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6, float a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B68A9CC0(a6, a7, *(void *)(a1 + 128) + *i + a2 * a3, a4, a5);
  return 1;
}

uint64_t sub_1B6BFF5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5, float a6)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6BFF588(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3, a4, a5, a6), !v6)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void *sub_1B6BFF7CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B6BFF9AC(a1, a2, a3, a4, (void *(*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))sub_1B68DE8BC, a5);
}

uint64_t sub_1B6BFF7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B6BFFAD4(a1, a2, a3, a4, (void *(*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))sub_1B68DE8BC, a5);
}

uint64_t sub_1B6BFF824@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(result + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for WorldTransform)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_5;
      }
    }
    char v15 = 0;
    uint64_t v16 = (uint64_t *)(*(void *)(result + 128) + *v6 + a2 * a3);
    uint64_t v7 = *v16;
    uint64_t v8 = v16[1];
    uint64_t v9 = v16[2];
    uint64_t v10 = v16[3];
    uint64_t v11 = v16[4];
    uint64_t v12 = v16[5];
    uint64_t v13 = v16[6];
    uint64_t v14 = v16[7];
  }
  else
  {
LABEL_5:
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    char v15 = 1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v8;
  *(void *)(a4 + 16) = v9;
  *(void *)(a4 + 24) = v10;
  *(void *)(a4 + 32) = v11;
  *(void *)(a4 + 40) = v12;
  *(void *)(a4 + 48) = v13;
  *(void *)(a4 + 56) = v14;
  *(unsigned char *)(a4 + 64) = v15;
  return result;
}

void *sub_1B6BFF8BC@<X0>(void *result@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *(*a6)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9 = result[6];
  uint64_t v10 = *(void *)(v9 + 16);
  long long v11 = 0uLL;
  if (!v10)
  {
LABEL_5:
    char v13 = 0;
    char v14 = 1;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
    long long v17 = 0uLL;
LABEL_6:
    *(_OWORD *)a7 = v11;
    *(_OWORD *)(a7 + 16) = v15;
    *(_OWORD *)(a7 + 32) = v16;
    *(_OWORD *)(a7 + 48) = v17;
    *(unsigned char *)(a7 + 64) = v13;
    *(unsigned char *)(a7 + 65) = v14;
    return result;
  }
  uint64_t v12 = (void *)(v9 + 56);
  while ((ValueMetadata *)*(v12 - 3) != &type metadata for EmitterDescription)
  {
    v12 += 5;
    if (!--v10) {
      goto LABEL_5;
    }
  }
  uint64_t result = a6(v18, result[16] + *v12 + a2 * a3, a4, a5, (__n128)0);
  if (!v7)
  {
    char v14 = 0;
    long long v11 = v18[0];
    long long v15 = v18[1];
    long long v16 = v18[2];
    long long v17 = v18[3];
    char v13 = v19;
    goto LABEL_6;
  }
  return result;
}

void *sub_1B6BFF980@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B6BFF9AC(a1, a2, a3, a4, (void *(*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))sub_1B68DE8FC, a5);
}

void *sub_1B6BFF9AC@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *(*a5)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128)@<X4>, uint64_t a6@<X8>)
{
  long long v8 = 0uLL;
  if (result == (void *)0xFFFFFFFFLL) {
    goto LABEL_2;
  }
  char v9 = 0;
  char v10 = 1;
  if ((void)result << 32 < (int64_t)0xFFFFFFFF00000001
    || (int)result >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    goto LABEL_3;
  }
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (HIDWORD(result) != -1 && *(_DWORD *)(v14 + 12 * (int)result + 8) != HIDWORD(result))
  {
LABEL_2:
    char v9 = 0;
    char v10 = 1;
LABEL_3:
    long long v11 = 0uLL;
    long long v12 = 0uLL;
    long long v13 = 0uLL;
LABEL_4:
    *(_OWORD *)a6 = v8;
    *(_OWORD *)(a6 + 16) = v11;
    *(_OWORD *)(a6 + 32) = v12;
    *(_OWORD *)(a6 + 48) = v13;
    *(unsigned char *)(a6 + 64) = v9;
    *(unsigned char *)(a6 + 65) = v10;
    return result;
  }
  uint64_t result = sub_1B6BFF8BC(*(void **)(*(void *)(a2 + 136) + 8 * *(int *)(v14 + 12 * (int)result) + 32), *(_WORD *)(v14 + 12 * (int)result + 4), 88, a3, a4, a5, (uint64_t)v15);
  if (!v6)
  {
    long long v8 = v15[0];
    long long v11 = v15[1];
    long long v12 = v15[2];
    long long v13 = v15[3];
    char v9 = v16;
    char v10 = v17;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1B6BFFAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B6BFFAD4(a1, a2, a3, a4, (void *(*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))sub_1B68DE8FC, a5);
}

uint64_t sub_1B6BFFAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *(*a5)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128)@<X4>, uint64_t a6@<X8>)
{
  if (a1 == 0xFFFFFFFFLL) {
    goto LABEL_10;
  }
  if (a1 << 32 < (uint64_t)0xFFFFFFFF00000001) {
    goto LABEL_10;
  }
  if ((int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (HIDWORD(a1) != -1 && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)) {
    goto LABEL_10;
  }
  uint64_t result = (uint64_t)sub_1B6BFF8BC(*(void **)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 88, a3, a4, a5, (uint64_t)v19);
  if (v6) {
    return result;
  }
  uint64_t v10 = v19[0];
  uint64_t v11 = v19[1];
  uint64_t v12 = v19[2];
  uint64_t v13 = v19[3];
  uint64_t v14 = v19[4];
  uint64_t v22 = v19[5];
  uint64_t v17 = v19[7];
  uint64_t v18 = v19[6];
  char v16 = v20;
  uint64_t result = sub_1B6C0A1B8((uint64_t)v19, (uint64_t)v21, (uint64_t (*)(void))sub_1B6C09EE0);
  if (v21[65])
  {
LABEL_10:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  *(void *)a6 = v10;
  *(void *)(a6 + 8) = v11;
  *(void *)(a6 + 16) = v12;
  *(void *)(a6 + 24) = v13;
  uint64_t v15 = v22;
  *(void *)(a6 + 32) = v14;
  *(void *)(a6 + 40) = v15;
  *(void *)(a6 + 48) = v18;
  *(void *)(a6 + 56) = v17;
  *(unsigned char *)(a6 + 64) = v16 & 1;
  return result;
}

uint64_t sub_1B6BFFD2C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int *a6, void *a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  sub_1B68DF0D0(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7, a8);
  return 1;
}

uint64_t sub_1B6BFFDAC(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSubSpawn.State; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  uint64_t v15 = (void *)(*(void *)(a1 + 128) + *i + a2 * a3);
  sub_1B68DEC1C(a4, a5);
  if ((*(unsigned char *)(a6 + 272) & 1) == 0) {
    sub_1B68DEEA4(a5, v15, a8);
  }
  return 1;
}

uint64_t sub_1B6BFFE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6BFFDAC(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 64, a3, a4, a5, a6, a7) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6BFFF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = v5 + 56; *(ValueMetadata **)(i - 24) != &type metadata for EmitterRuntime; i += 40)
  {
    if (!--v6) {
      return 0;
    }
  }
  sub_1B6919F58((uint64_t)*(float *)(a4 + 64), (void *)a4, a5);
  return 1;
}

uint64_t sub_1B6BFFFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6BFFF1C(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 656, a3, a4), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C00168(uint64_t a1, uint64_t a2, Swift::Int a3, void *a4, uint64_t a5)
{
  return sub_1B6C00204(a1, a2, a3, a4, a5);
}

uint64_t sub_1B6C00180(uint64_t a1, uint64_t a2, uint64_t a3, Swift::Int a4, void *a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = v6 + 56; *(ValueMetadata **)(i - 24) != &type metadata for EmitterRuntime; i += 40)
  {
    if (!--v7) {
      return 0;
    }
  }
  sub_1B6919F58(a4, a5, a6);
  return 1;
}

uint64_t sub_1B6C00204(uint64_t a1, uint64_t a2, Swift::Int a3, void *a4, uint64_t a5)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v7 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C00180(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v7 + 12 * (int)a1 + 4), 656, a3, a4, a5), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C(a5);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C003CC(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, float a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B68DDD70(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7);
  return 1;
}

uint64_t sub_1B6C00444(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, float a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B68DDB78(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7);
  return 1;
}

uint64_t sub_1B6C004BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C00444(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3, a4, a5, a6), !v6)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C00690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6C015E0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6910D1C);
}

uint64_t sub_1B6C006BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = v6 + 56; *(ValueMetadata **)(i - 24) != &type metadata for EmitterRuntime; i += 40)
  {
    if (!--v7) {
      return 0;
    }
  }
  sub_1B675821C(a4 + 8, (uint64_t)v14);
  sub_1B675821C((uint64_t)v14, (uint64_t)&v15);
  if (v16 != 1)
  {
    float v13 = *(double *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 48) / v15;
    float v12 = fmodf(v13, 1.0);
    goto LABEL_10;
  }
  if (LODWORD(v15) >= 2)
  {
    float v12 = (float)(sub_1B6D27950() & 0xFFFFFF) * 0.000000059605;
LABEL_10:
    *(float *)(a5 + 28) = v12;
  }
  return 1;
}

uint64_t sub_1B6C007E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v7 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C006BC(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v7 + 12 * (int)a1 + 4), 656, a3, a4, a5), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6AE9A98(a3);
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C009B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6359008(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6B1A9C8);
}

uint64_t sub_1B6C009E0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, float *a6, float *a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B6BCDDA0((void *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7);
  return 1;
}

uint64_t sub_1B6C00A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float *a5, float *a6)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C009E0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3, a4, a5, a6), !v6)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C00C34(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  sub_1B6C90A80(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5);
  return 1;
}

uint64_t sub_1B6C00CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C00C34(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(_WORD *)(v6 + 12 * (int)a1 + 4), 656, a3, a4), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C00E80(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, unsigned __int8 *a5, void *a6, uint64_t a7, uint64_t a8, float32x4_t a9, uint64_t a10, unint64_t a11)
{
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12) {
    return 0;
  }
  for (uint64_t i = (void *)(v11 + 56); (ValueMetadata *)*(i - 3) != &type metadata for GrowEmitterRuntime; i += 5)
  {
    if (!--v12) {
      return 0;
    }
  }
  sub_1B6C647A4((float32x4_t *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7, a8, a10, a11, a9);
  return 1;
}

uint64_t sub_1B6C00F0C(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned __int8 *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, float32x4_t a9, unint64_t a10)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C00E80(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v11 + 12 * (int)a1) + 32), *(_WORD *)(v11 + 12 * (int)a1 + 4), 48, a3, a4, a5, a6, a7, a9, a8, a10), !v10)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C010C8(uint64_t a1, float32x4_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, unsigned __int8 *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for GrowEmitterRuntime))
  {
    char v16 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    *char v16 = a4;
    sub_1B63861B4((uint64_t)&type metadata for GrowEmitterRuntime, (uint64_t)&off_1F0F76B00, v16, 1, 1);
  }
  return sub_1B6C00F0C(a6, a5, a7, a8, a9, a10, a11, a12, a2, a13);
}

uint64_t sub_1B6C011C0(uint64_t result, uint64_t a2, uint64_t *a3, unsigned __int8 *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, float32x4_t a9, unint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v19 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v20 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v21 = (int *)(v20 + 12 * (int)result);
      uint64_t v22 = *((__int16 *)v21 + 2);
      long long v23 = *(void **)(*(void *)(a2 + 136) + 8 * *v21 + 32);
      if (v23[29] <= v22 && v23[30] > v22)
      {
        uint64_t v29 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v25 = (os_unfair_lock_s *)v23[43];
        uint64_t v28 = *(void *)(*(void *)(a2 + 136) + 8 * *v21 + 32);
        uint64_t v26 = *((__int16 *)v21 + 2);
        swift_retain();
        os_unfair_lock_lock(v25);
        ecs_stack_allocator_push_snapshot(*(void *)(v29 + 32));
        swift_retain();
        sub_1B6C010C8(v29, a9, v28, v26, a2, v19, a3, a4, a5, a6, a7, a8, a10);
        swift_release();
        if (!v11) {
          ecs_stack_allocator_pop_snapshot(*(void *)(v29 + 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B6C01368(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, float *a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  sub_1B6C63730((void *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6);
  return 1;
}

uint64_t sub_1B6C013E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float *a5)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v7 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C01368(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 656, a3, a4, a5), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C015B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6C015E0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6C5B870);
}

uint64_t sub_1B6C015E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C01C80(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3, a4, a5, a6), !v6)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C017B8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, float a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B6C58468(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7);
  return 1;
}

uint64_t sub_1B6C01830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C017B8(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3, a4, a5, a6), !v6)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    swift_release();
    sub_1B62F648C(a5);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C01A18(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  sub_1B6C5879C(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B6C01A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C01A18(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(_WORD *)(v6 + 12 * (int)a1 + 4), 656), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C01C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6C015E0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6C5EC50);
}

uint64_t sub_1B6C01C80(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  a7(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6);
  return 1;
}

uint64_t sub_1B6C01CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6C015E0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6BC0F00);
}

uint64_t sub_1B6C01D28(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B6919F58(a5 - a6, (void *)(*(void *)(a1 + 128) + *i + a2 * a3), a7);
  return 1;
}

uint64_t sub_1B6C01DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C01D28(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 128, a3, a4, a5, a6), !v6)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C(a6);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C01F6C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B6C95700((uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7);
  return 1;
}

uint64_t sub_1B6C01FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    char v12 = 0;
    return v12 & 1;
  }
  char v12 = 0;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v14 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      float v15 = (int *)(v14 + 12 * (int)a1);
      uint64_t v16 = *(void *)(*(void *)(a2 + 136) + 8 * *v15 + 32);
      __int16 v17 = *((_WORD *)v15 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = sub_1B6C01F6C(v16, v17, 656, a3, a6, a7, a8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
    }
    goto LABEL_2;
  }
  return v12 & 1;
}

uint64_t sub_1B6C02108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v17 = sub_1B6C01FE8(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8 && (v17 & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62F648C(a8);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C022D8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, uint64_t a5, float a6, float a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  sub_1B68DBDD4(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7);
  return 1;
}

uint64_t sub_1B6C0234C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, float a5, float a6)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C022D8(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 128, a3, a4, a5, a6), !v6)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C((uint64_t)a3);
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C02510(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, float a5, float a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSubSpawn.State; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  sub_1B68E0E64(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6);
  return 1;
}

uint64_t sub_1B6C02580(uint64_t a1, uint64_t a2, uint64_t a3, float a4, float a5)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C02510(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(_WORD *)(v6 + 12 * (int)a1 + 4), 64, a3, a4, a5), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C0271C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6, float a7, float a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  sub_1B68DC83C(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5 & 0x101, a6, a7, a8);
  return 1;
}

uint64_t sub_1B6C02798(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, float a6, float a7)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v9 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C0271C(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), *(_WORD *)(v9 + 12 * (int)a1 + 4), 128, a3, a4 & 0x101, a5, a6, a7), !v7)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C(a3);
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C02964(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, uint64_t a10)
{
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = (void *)(v10 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v11) {
      return 0;
    }
  }
  uint64_t v20 = *(void *)(a1 + 128) + *i + a2 * a3;
  if (!sub_1B62F4D64(v20, a4, a9) || *(void *)(v20 + 72) || *(float *)v20 > (float)(*(float *)(v20 + 4) + a9)) {
    return 1;
  }
  uint64_t v21 = a4[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B62F6B80((uint64_t)a4);
  sub_1B6C02108(v21, a5, a6, a7, a8, a10, a5, (uint64_t)a4);
  sub_1B62F648C((uint64_t)a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return 1;
}

uint64_t sub_1B6C02AB8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9)
{
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    char v16 = 0;
    return v16 & 1;
  }
  char v16 = 0;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v18 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v19 = (int *)(v18 + 12 * (int)a1);
      uint64_t v20 = *(void *)(*(void *)(a2 + 136) + 8 * *v19 + 32);
      __int16 v21 = *((_WORD *)v19 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v16 = sub_1B6C02964(v20, v21, 128, a3, a4, a5, a6, a7, a9, a8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16 & 1;
    }
    goto LABEL_2;
  }
  return v16 & 1;
}

uint64_t sub_1B6C02BFC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v19 = sub_1B6C02AB8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v9 && (v19 & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C((uint64_t)a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C02DD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 56;
    do
    {
      if (*(ValueMetadata **)(v3 - 24) == &type metadata for ParticleFluidSolver2DSolver) {
        sub_1B67D8C98();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
  }
  return 0;
}

uint64_t sub_1B6C02E40(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for PropagateDirtiness; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v10 = *i + a2 * a3;
  uint64_t v11 = *(void *)(a1 + 128);
  swift_retain();
  uint64_t v12 = sub_1B62DE2C8(a5);
  swift_release();
  *(void *)(v11 + v10) = v12;
  return 1;
}

uint64_t sub_1B6C02EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C02E40(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 8, a3, a4), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C0308C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Material; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  uint64_t v12 = (char *)(*(void *)(a1 + 128) + *i + a2 * a3);
  char v21 = *v12;
  uint64_t v13 = *((void *)v12 + 1);
  int v14 = *((_DWORD *)v12 + 10);
  int v44 = v12[44];
  int v45 = v14;
  int v15 = *((_DWORD *)v12 + 12);
  char v26 = v12[53];
  char v27 = v12[52];
  uint64_t v25 = *((void *)v12 + 7);
  char v24 = v12[64];
  uint64_t v16 = *((void *)v12 + 11);
  uint64_t v22 = *((void *)v12 + 10);
  uint64_t v23 = *((void *)v12 + 9);
  uint64_t v17 = *((void *)v12 + 12);
  unint64_t v18 = sub_1B6C09F00();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v19 = *((void *)v12 + 2);
  uint64_t v20 = sub_1B635AB28(a5) << 16 >> 48;
  v28[0] = v21;
  uint64_t v29 = v13;
  uint64_t v30 = v19;
  uint64_t v31 = a6;
  unint64_t v32 = v18;
  int v33 = v45;
  char v34 = v44;
  int v35 = v15;
  char v36 = v27;
  char v37 = v26;
  uint64_t v38 = v25;
  char v39 = v24;
  uint64_t v40 = v23;
  uint64_t v41 = v22;
  uint64_t v42 = v16;
  uint64_t v43 = v17;
  swift_retain();
  sub_1B6BF79CC(v20, (uint64_t)v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_1B6C0327C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C0308C(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 104, a2, a1, a3), !v3)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

__n128 sub_1B6C03438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleFlockingSolver)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 112 * a1;
  long long v9 = *(_OWORD *)(v7 + 16);
  long long v8 = *(_OWORD *)(v7 + 32);
  v18[0] = *(_OWORD *)v7;
  v18[1] = v9;
  _OWORD v18[2] = v8;
  long long v11 = *(_OWORD *)(v7 + 64);
  long long v10 = *(_OWORD *)(v7 + 80);
  long long v12 = *(_OWORD *)(v7 + 48);
  *(_DWORD *)&v19[15] = *(_DWORD *)(v7 + 95);
  _OWORD v18[4] = v11;
  *(_OWORD *)uint64_t v19 = v10;
  void v18[3] = v12;
  sub_1B62CA090(a2);
  sub_1B62CA064((uint64_t)v18);
  long long v14 = *(_OWORD *)(a2 + 16);
  long long v13 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v14;
  *(_OWORD *)(v7 + 32) = v13;
  long long v16 = *(_OWORD *)(a2 + 64);
  __n128 result = *(__n128 *)(a2 + 80);
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(v7 + 95) = *(_DWORD *)(a2 + 95);
  *(_OWORD *)(v7 + 64) = v16;
  *(__n128 *)(v7 + 80) = result;
  *(_OWORD *)(v7 + 48) = v17;
  return result;
}

uint64_t sub_1B6C03508(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleFlockingSolver; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  long long v10 = (long long *)(*(void *)(a1 + 128) + *i + a2 * a3);
  long long v12 = v10[3];
  long long v11 = v10[4];
  long long v13 = v10[5];
  *(_DWORD *)&v36[31] = *(_DWORD *)((char *)v10 + 95);
  *(_OWORD *)char v36 = v11;
  *(_OWORD *)&v36[16] = v13;
  long long v35 = v12;
  long long v14 = *v10;
  long long v15 = v10[2];
  long long v33 = v10[1];
  long long v34 = v15;
  long long v32 = v14;
  int v49 = v36[33];
  int v50 = v36[34];
  char v31 = v36[32];
  int v16 = *(_DWORD *)&v36[28];
  uint64_t v29 = *((void *)&v12 + 1);
  uint64_t v30 = v12;
  char v17 = v36[0];
  char v18 = v15;
  uint64_t v19 = *((void *)&v33 + 1);
  type metadata accessor for ParticleFlockingSolverData();
  uint64_t v20 = swift_allocObject();
  char v21 = (char *)MEMORY[0x1E4FBC860];
  *(void *)(v20 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v22 = *((void *)&v32 + 1);
  uint64_t v23 = v33;
  long long v28 = *(_OWORD *)&v36[4];
  uint64_t v24 = *(void *)&v36[20];
  sub_1B62CA090((uint64_t)&v32);
  uint64_t v25 = sub_1B68C59A4(0, 0x1000000, 0, v21);
  *(unsigned char *)(v20 + 32) = 0;
  *(void *)(v20 + 40) = v25;
  *(void *)(v20 + 48) = 0x1000000;
  *(_OWORD *)(v20 + 56) = 0u;
  *(_OWORD *)(v20 + 72) = 0u;
  *(_OWORD *)(v20 + 88) = 0u;
  *(_DWORD *)(v20 + 104) = 0;
  *(_OWORD *)(v20 + 112) = 0u;
  *(_OWORD *)(v20 + 128) = 0u;
  sub_1B62CA064((uint64_t)&v32);
  uint64_t v26 = sub_1B635AB28(a5);
  char v37 = v17;
  v38[0] = v20;
  uint64_t v27 = v26 << 16 >> 48;
  v38[1] = v22;
  _OWORD v38[2] = v23;
  uint64_t v38[3] = v19;
  char v39 = v18;
  uint64_t v40 = v30;
  uint64_t v41 = v29;
  char v42 = v17;
  long long v43 = v28;
  uint64_t v44 = v24;
  int v45 = v16;
  char v46 = v31;
  char v47 = v49;
  char v48 = v50;
  swift_retain();
  sub_1B6C03438(v27, (uint64_t)v38);
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_1B6C03720(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    for (uint64_t i = (void *)(v10 + 56); (ValueMetadata *)*(i - 3) != &type metadata for REMeshAssetPointCache; i += 5)
    {
      if (!--v11) {
        return v11 & 1;
      }
    }
    char v17 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v25 = *v17;
    uint64_t v26 = v18;
    uint64_t v27 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6A79948((uint64_t)&v25, a6, a7, a8);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = sub_1B635AB28(a5) << 16 >> 48;
      uint64_t v21 = v25;
      uint64_t v22 = v26;
      uint64_t v23 = v27;
      swift_retain();
      sub_1B6BF6664(v20, v21, v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v11) = 1;
    }
  }
  return v11 & 1;
}

uint64_t sub_1B6C03884(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v9 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6C03720(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), *(_WORD *)(v9 + 12 * (int)a1 + 4), 24, a2, a1, a3, a4, a5), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();

    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6C03A60(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1B6C3D64C(0, v2, 0);
    uint64_t v3 = v26;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    uint64_t v21 = a2;
    while (1)
    {
      uint64_t v23 = v3;
      int64_t v24 = v2;
      uint64_t v7 = *v6;
      uint64_t v25 = *(v6 - 1);
      uint64_t v8 = v6[1];
      unint64_t v9 = v6[2];
      uint64_t v10 = v6[3];
      uint64_t v11 = v6[4];
      uint64_t v12 = v6[5];
      uint64_t v13 = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      sub_1B629C9E8(v8, v9);
      if (!v13) {
        goto LABEL_7;
      }
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1B62B2CE0(v25, v7);
      if ((v15 & 1) == 0) {
        break;
      }
      int v16 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v14);
      uint64_t v25 = *v16;
      uint64_t v22 = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_8:
      uint64_t v3 = v23;
      sub_1B629C9E8(v8, v9);
      swift_bridgeObjectRelease();
      sub_1B629DCAC(v8, v9);
      unint64_t v18 = *(void *)(v23 + 16);
      unint64_t v17 = *(void *)(v23 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1B6C3D64C(v17 > 1, v18 + 1, 1);
        uint64_t v3 = v23;
      }
      *(void *)(v3 + 16) = v18 + 1;
      uint64_t v19 = (void *)(v3 + 56 * v18);
      a2 = v21;
      v19[4] = v25;
      v19[5] = v22;
      _DWORD v19[6] = v8;
      void v19[7] = v9;
      void v19[8] = v10;
      v19[9] = v11;
      v19[10] = v12;
      v6 += 7;
      int64_t v2 = v24 - 1;
      if (v24 == 1) {
        return v3;
      }
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    uint64_t v22 = v7;
    goto LABEL_8;
  }
  return v3;
}

uint64_t sub_1B6C03C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for Name)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (void *)(*(void *)(v3 + 128) + v5 + 16 * a1);
  void *v7 = a2;
  v7[1] = a3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6C03CA8(uint64_t result, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for WorldTransform)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  unint64_t v9 = (__n128 *)(*(void *)(v5 + 128) + v7 + (result << 6));
  *unint64_t v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  return result;
}

uint64_t sub_1B6C03CF8(uint64_t result, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for InverseWorldTransform)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  unint64_t v9 = (__n128 *)(*(void *)(v5 + 128) + v7 + (result << 6));
  *unint64_t v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  return result;
}

uint64_t sub_1B6C03D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ScriptsHolder)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 8 * a1;
  uint64_t v8 = *(void *)(v2 + 128);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v8 + v7) = a2;
  return result;
}

__n128 sub_1B6C03DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ForceField)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 144 * a1;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v6 + 112) = v7;
  *(_OWORD *)(v6 + 124) = *(_OWORD *)(a2 + 124);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v6 + 80) = v9;
  __n128 result = *(__n128 *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(__n128 *)(v6 + 16) = result;
  return result;
}

uint64_t sub_1B6C03E3C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5)
{
  char v9 = a2;
  uint64_t v10 = *(void *)(v5 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(v10 + 56);
    while ((ValueMetadata *)*(v12 - 3) != &type metadata for GraphScriptingConfig)
    {
      v12 += 5;
      if (!--v11) {
        goto LABEL_7;
      }
    }
    uint64_t v11 = *v12;
  }
LABEL_7:
  unsigned int v13 = a2 >> 8;
  uint64_t v14 = *(void *)(v5 + 128) + v11 + 32 * a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v14 = v9;
  *(unsigned char *)(v14 + 1) = v13;
  *(void *)(v14 + 8) = a3;
  *(void *)(v14 + 16) = a4;
  *(unsigned char *)(v14 + 24) = a5 & 1;
  *(unsigned char *)(v14 + 25) = BYTE1(a5) & 1;
  *(unsigned char *)(v14 + 26) = BYTE2(a5) & 1;
  return result;
}

uint64_t sub_1B6C03F10(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
}

uint64_t sub_1B6C03F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, (unint64_t *)&unk_1EB9811A0, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
}

uint64_t sub_1B6C03F60(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
}

uint64_t sub_1B6C03F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, (unint64_t *)&unk_1EB97F780, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
}

uint64_t sub_1B6C03FB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v10 = *(void *)(v6 + 48);
  sub_1B62D2230(0, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    unsigned int v13 = (uint64_t *)(v10 + 56);
    while (*(v13 - 3) != v11)
    {
      v13 += 5;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    uint64_t v12 = *v13;
  }
LABEL_7:
  uint64_t v14 = (void *)(*(void *)(v6 + 128) + v12 + 16 * a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  void *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t sub_1B6C04074(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
}

uint64_t sub_1B6C0409C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, (unint64_t *)&unk_1EB97F770, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
}

uint64_t sub_1B6C040C4(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10);
}

uint64_t sub_1B6C040EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, (unint64_t *)&unk_1EB97F7A0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10);
}

uint64_t sub_1B6C04114(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8);
}

uint64_t sub_1B6C0413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, (unint64_t *)&unk_1EB981190, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8);
}

uint64_t sub_1B6C04164(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
}

uint64_t sub_1B6C0418C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, (unint64_t *)&unk_1EB97F7B0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
}

uint64_t sub_1B6C041B4(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
}

uint64_t sub_1B6C041DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, (unint64_t *)&unk_1EB97F790, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
}

uint64_t sub_1B6C04204(uint64_t a1, uint64_t a2)
{
  return sub_1B6C0422C(a1, a2, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
}

uint64_t sub_1B6C0422C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v11 = *(void *)(v5 + 48);
  sub_1B62D2230(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v13 = *(void *)(v11 + 16);
  if (v13)
  {
    for (uint64_t i = (uint64_t *)(v11 + 56); *(i - 3) != v12; i += 5)
    {
      if (!--v13) {
        return sub_1B6C09F58(a2, *(void *)(v5 + 128) + v13 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a3, a4, a5);
      }
    }
    uint64_t v13 = *i;
  }
  return sub_1B6C09F58(a2, *(void *)(v5 + 128) + v13 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a3, a4, a5);
}

uint64_t sub_1B6C04300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C03FB0(a1, a2, a3, &qword_1EB97F7C0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
}

__n128 sub_1B6C04328(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for SkinnedMeshBinding)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 80 * a1;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a2 + 64);
  __n128 result = *(__n128 *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(__n128 *)(v6 + 16) = result;
  return result;
}

__n128 sub_1B6C0438C(uint64_t a1, __n128 *a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for Skeleton)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 40 * a1;
  sub_1B6C0A1B8((uint64_t)a2, (uint64_t)v16, (uint64_t (*)(void))sub_1B6C09FDC);
  unint64_t v8 = a2->n128_u64[1];
  unint64_t v14 = a2[1].n128_u64[0];
  unint64_t v15 = v8;
  unint64_t v9 = a2[1].n128_u64[1];
  unint64_t v12 = a2[2].n128_u64[0];
  unint64_t v13 = v9;
  sub_1B62CA090((uint64_t)v16);
  sub_1B6399A44((uint64_t)&v15);
  sub_1B6399A44((uint64_t)&v14);
  sub_1B6399A44((uint64_t)&v13);
  sub_1B6399A44((uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __n128 result = *a2;
  __n128 v11 = a2[1];
  *(void *)(v7 + 32) = a2[2].n128_u64[0];
  *(__n128 *)uint64_t v7 = result;
  *(__n128 *)(v7 + 16) = v11;
  return result;
}

uint64_t sub_1B6C044B0(uint64_t result, __n128 a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for Scale3)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  *(__n128 *)(*(void *)(v2 + 128) + v4 + 16 * result) = a2;
  return result;
}

uint64_t sub_1B6C044F8(uint64_t result, float a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for AmbientLight)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  *(float *)(*(void *)(v2 + 128) + v4 + 4 * result) = a2;
  return result;
}

uint64_t sub_1B6C04540(uint64_t result, float a2, float a3, float a4, float a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for DirectionalLight)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  unint64_t v9 = (float *)(*(void *)(v5 + 128) + v7 + 16 * result);
  *unint64_t v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  return result;
}

__n128 sub_1B6C04590(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for SpotLight)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1B6C045EC(uint64_t result, float a2, float a3, float a4, float a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for PointLight)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  unint64_t v9 = (float *)(*(void *)(v5 + 128) + v7 + 16 * result);
  *unint64_t v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  return result;
}

__n128 sub_1B6C0463C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for PerspectiveCamera)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 48 * a1;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v7;
  __n128 result = *(__n128 *)(a2 + 32);
  *(__n128 *)(v6 + 32) = result;
  return result;
}

__n128 sub_1B6C04698(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for OrthographicCamera)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 20 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(unsigned char *)(v6 + 16) = a2[1].n128_u8[0];
  return result;
}

uint64_t sub_1B6C046F4(uint64_t result, float a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for Opacity)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  *(float *)(*(void *)(v2 + 128) + v4 + 4 * result) = a2;
  return result;
}

uint64_t sub_1B6C0473C(uint64_t result, __n128 a2, __n128 a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for LocalAABB)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  long long v7 = (__n128 *)(*(void *)(v3 + 128) + v5 + 32 * result);
  __n128 *v7 = a2;
  v7[1] = a3;
  return result;
}

uint64_t sub_1B6C04788(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    for (uint64_t i = (uint64_t *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for NodeVisibilityController; i += 5)
    {
      if (!--v4) {
        return sub_1B6C09FFC(a2, *(void *)(v2 + 128) + v4 + 40 * a1);
      }
    }
    uint64_t v4 = *i;
  }
  return sub_1B6C09FFC(a2, *(void *)(v2 + 128) + v4 + 40 * a1);
}

uint64_t sub_1B6C047DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    for (uint64_t i = (uint64_t *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for NodeTransformController; i += 5)
    {
      if (!--v4) {
        return sub_1B6C0A058(a2, *(void *)(v2 + 128) + v4 + 40 * a1);
      }
    }
    uint64_t v4 = *i;
  }
  return sub_1B6C0A058(a2, *(void *)(v2 + 128) + v4 + 40 * a1);
}

uint64_t sub_1B6C04830(uint64_t result, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ProjectionMatrix)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  unint64_t v9 = (__n128 *)(*(void *)(v5 + 128) + v7 + (result << 6));
  *unint64_t v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  return result;
}

uint64_t sub_1B6C04880(uint64_t result, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for LastFrameWorldTransform)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  unint64_t v9 = (__n128 *)(*(void *)(v5 + 128) + v7 + (result << 6));
  *unint64_t v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  return result;
}

uint64_t sub_1B6C048D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for MetalScriptReflection)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v5 + 8 * a1;
  uint64_t v8 = *(void *)(v2 + 128);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v8 + v7) = a2;
  return result;
}

uint64_t sub_1B6C04950(uint64_t result, char a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleDrag)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v3 + 128) + v5 + 8 * result;
  *(float *)uint64_t v7 = a3;
  *(unsigned char *)(v7 + 4) = a2 & 1;
  return result;
}

uint64_t sub_1B6C049A4(uint64_t result, unsigned __int8 a2, __n128 a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleForce)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (__n128 *)(*(void *)(v3 + 128) + v5 + 32 * result);
  __n128 *v7 = a3;
  v7[1].n128_u8[0] = a2;
  return result;
}

__n128 sub_1B6C049F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleNoise)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + (a1 << 6);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v7;
  __n128 result = *(__n128 *)(a2 + 32);
  *(__n128 *)(v6 + 32) = result;
  *(unsigned char *)(v6 + 48) = *(unsigned char *)(a2 + 48);
  return result;
}

__n128 sub_1B6C04A54(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleCollide)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1B6C04AB0(uint64_t result, char a2, float a3, float a4)
{
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    long long v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleLifeInit)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  uint64_t v8 = *(void *)(v4 + 128) + v6 + 12 * result;
  *(float *)uint64_t v8 = a3;
  *(float *)(v8 + 4) = a4;
  *(unsigned char *)(v8 + 8) = a2 & 1;
  return result;
}

uint64_t sub_1B6C04B08(uint64_t result, float a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleMassInit)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  long long v7 = (float *)(*(void *)(v3 + 128) + v5 + 8 * result);
  float *v7 = a2;
  v7[1] = a3;
  return result;
}

__n128 sub_1B6C04B54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for WrapAroundCamera)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 40 * a1;
  __n128 result = *(__n128 *)a2;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v8;
  *(void *)(v6 + 29) = *(void *)(a2 + 29);
  return result;
}

uint64_t sub_1B6C04BB0(uint64_t result, float a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleAngleInit)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  long long v7 = (float *)(*(void *)(v3 + 128) + v5 + 8 * result);
  float *v7 = a2;
  v7[1] = a3;
  return result;
}

__n128 sub_1B6C04BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleColorInit)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 80 * a1;
  sub_1B6C05708(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v9 = *(_OWORD *)(a2 + 32);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(v7 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(v7 + 32) = v9;
  *(_OWORD *)(v7 + 48) = v10;
  *(__n128 *)(v7 + 16) = result;
  return result;
}

__n128 sub_1B6C04CA8(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticlePivotInit)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1B6C04D04(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for PointCacheSpawner)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v3 + 128) + v5 + 12 * result;
  *(void *)uint64_t v7 = a2;
  *(unsigned char *)(v7 + 8) = a3 & 1;
  *(unsigned char *)(v7 + 9) = BYTE1(a3) & 1;
  *(unsigned char *)(v7 + 10) = BYTE2(a3) & 1;
  *(unsigned char *)(v7 + 11) = HIBYTE(a3) & 1;
  return result;
}

uint64_t sub_1B6C04D78(uint64_t result, float a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for DistanceConstraint)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  *(float *)(*(void *)(v2 + 128) + v4 + 4 * result) = a2;
  return result;
}

uint64_t sub_1B6C04DC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleBurstSpawn)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (void *)(*(void *)(v3 + 128) + v5 + 16 * result);
  void *v7 = a2;
  v7[1] = a3;
  return result;
}

__n128 sub_1B6C04E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleForceField)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 44 * a1;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v7;
  __n128 result = *(__n128 *)(a2 + 28);
  *(__n128 *)(v6 + 28) = result;
  return result;
}

__n128 sub_1B6C04E68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleGrowEmitter)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + (a1 << 6);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v7;
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a2 + 32);
  __n128 result = *(__n128 *)(a2 + 44);
  *(__n128 *)(v6 + 44) = result;
  return result;
}

__n128 sub_1B6C04EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ProjectorParameters)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 36 * a1;
  __n128 result = *(__n128 *)a2;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v8;
  *(_DWORD *)(v6 + 32) = *(_DWORD *)(a2 + 32);
  return result;
}

__n128 sub_1B6C04F24(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleVelocityInit)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1B6C04F80(uint64_t result, char a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for OrientationConstraint)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v3 + 128) + v5 + 8 * result;
  *(unsigned char *)uint64_t v7 = a2 & 1;
  *(float *)(v7 + 4) = a3;
  return result;
}

uint64_t sub_1B6C04FD4(uint64_t result, float a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleAOBoxRenderer)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (float *)(*(void *)(v3 + 128) + v5 + 8 * result);
  float *v7 = a2;
  v7[1] = a3;
  return result;
}

uint64_t sub_1B6C05020(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleDecalRenderer)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  *(void *)(*(void *)(v2 + 128) + v4 + 8 * result) = a2;
  return result;
}

__n128 sub_1B6C05068(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleVariableSpawn)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

__n128 sub_1B6C050C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleAngleEvolution)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 40 * a1;
  uint64_t v8 = *(void *)(v7 + 8);
  sub_1B6C0A1B8(a2 + 8, (uint64_t)v11, (uint64_t (*)(void))sub_1B6761AD8);
  sub_1B6C05B9C(v11);
  sub_1B6761C48(v8);
  __n128 result = *(__n128 *)a2;
  long long v10 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(v7 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)uint64_t v7 = result;
  *(_OWORD *)(v7 + 16) = v10;
  return result;
}

uint64_t sub_1B6C0519C(uint64_t result, char a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for OrientationOverVelocity)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v3 + 128) + v5 + 8 * result;
  *(float *)uint64_t v7 = a3;
  *(unsigned char *)(v7 + 4) = a2 & 1;
  return result;
}

uint64_t sub_1B6C051F0(uint64_t result, float a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleContinuousSpawn)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  *(float *)(*(void *)(v2 + 128) + v4 + 4 * result) = a2;
  return result;
}

uint64_t sub_1B6C05238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = *(void *)(v5 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    unint64_t v12 = (uint64_t *)(v10 + 56);
    while ((ValueMetadata *)*(v12 - 3) != &type metadata for ParticleOpacityOverLife)
    {
      v12 += 5;
      if (!--v11) {
        goto LABEL_7;
      }
    }
    uint64_t v11 = *v12;
  }
LABEL_7:
  uint64_t v13 = *(void *)(v5 + 128) + v11 + 32 * a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v13 = a2;
  *(void *)(v13 + 8) = a3;
  *(void *)(v13 + 16) = a4;
  *(unsigned char *)(v13 + 24) = a5;
  return result;
}

__n128 sub_1B6C05304(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleOrientationInit)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

__n128 sub_1B6C05360(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleSurfaceRenderer)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1B6C053BC(uint64_t result, float a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleAOSphereRenderer)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (float *)(*(void *)(v3 + 128) + v5 + 8 * result);
  float *v7 = a2;
  v7[1] = a3;
  return result;
}

__n128 sub_1B6C05408(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleOpacityEvolution)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 48 * a1;
  v10[0] = a2[1];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 25);
  uint64_t v12 = *((void *)&v10[0] + 1);
  uint64_t v13 = *(void *)&v10[0];
  sub_1B6C05B2C((uint64_t)&v10[1], (uint64_t)v11, (unint64_t *)&qword_1EB9801F0, &qword_1EB9801E0, (uint64_t)&type metadata for CurveTangents);
  sub_1B6399A44((uint64_t)&v13);
  sub_1B6399A44((uint64_t)&v12);
  sub_1B6399A44((uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v8 = a2[1];
  *(_OWORD *)uint64_t v7 = *a2;
  *(_OWORD *)(v7 + 16) = v8;
  __n128 result = *(__n128 *)((char *)a2 + 25);
  *(__n128 *)(v7 + 25) = result;
  return result;
}

uint64_t sub_1B6C05510(uint64_t result, float a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleTextureFrameInit)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (float *)(*(void *)(v3 + 128) + v5 + 8 * result);
  float *v7 = a2;
  v7[1] = a3;
  return result;
}

uint64_t sub_1B6C0555C(uint64_t result, float a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleAngleVelocityInit)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (float *)(*(void *)(v3 + 128) + v5 + 8 * result);
  float *v7 = a2;
  v7[1] = a3;
  return result;
}

uint64_t sub_1B6C055A8(uint64_t result, __int16 a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleSpawnOverDistance)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v3 + 128) + v5 + 8 * result;
  *(float *)uint64_t v7 = a3;
  *(unsigned char *)(v7 + 4) = a2 & 1;
  *(unsigned char *)(v7 + 5) = HIBYTE(a2) & 1;
  return result;
}

uint64_t sub_1B6C05604(uint64_t result, uint64_t a2, uint64_t a3, float a4, float a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    long long v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticlePeriodicBurstSpawn)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  uint64_t v9 = *(void *)(v5 + 128) + v7 + 24 * result;
  *(void *)uint64_t v9 = a2;
  *(void *)(v9 + 8) = a3;
  *(float *)(v9 + 16) = a4;
  *(float *)(v9 + 20) = a5;
  return result;
}

uint64_t sub_1B6C05658(uint64_t result, float a2, float a3, float a4)
{
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleVolumetricRenderer)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    uint64_t v6 = *v7;
  }
LABEL_7:
  long long v8 = (float *)(*(void *)(v4 + 128) + v6 + 12 * result);
  *long long v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  return result;
}

__n128 sub_1B6C056AC(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleAngularVelocityInit)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1B6C05708(uint64_t a1)
{
  return a1;
}

__n128 sub_1B6C05740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleOpacityOverVelocity)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 40 * a1;
  v10[0] = *(_OWORD *)a2;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)(a2 + 9);
  uint64_t v12 = *((void *)&v10[0] + 1);
  uint64_t v13 = *(void *)&v10[0];
  sub_1B6C05B2C((uint64_t)&v10[1], (uint64_t)v11, (unint64_t *)&qword_1EB9801F0, &qword_1EB9801E0, (uint64_t)&type metadata for CurveTangents);
  sub_1B6399A44((uint64_t)&v13);
  sub_1B6399A44((uint64_t)&v12);
  sub_1B6399A44((uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *(__n128 *)a2;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v9;
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(a2 + 32);
  return result;
}

__n128 sub_1B6C05848(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticlePositionOverTexture)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 48 * a1;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v7;
  __n128 result = *(__n128 *)(a2 + 28);
  *(__n128 *)(v6 + 28) = result;
  return result;
}

__n128 sub_1B6C058A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleFlockingSpeedControl)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 32 * a1;
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 9);
  *(__n128 *)(v6 + 9) = result;
  return result;
}

__n128 sub_1B6C058FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleTextureFrameEvolution)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 40 * a1;
  uint64_t v8 = *(void *)(v7 + 8);
  sub_1B6C0A1B8(a2 + 8, (uint64_t)v11, (uint64_t (*)(void))sub_1B6761AD8);
  sub_1B6C05B9C(v11);
  sub_1B6761C48(v8);
  __n128 result = *(__n128 *)a2;
  long long v10 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(v7 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)uint64_t v7 = result;
  *(_OWORD *)(v7 + 16) = v10;
  return result;
}

__n128 sub_1B6C059D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleFlockingFlyTowardsArea)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 28 * a1;
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 9);
  *(__n128 *)(v6 + 9) = result;
  return result;
}

__n128 sub_1B6C05A30(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleTargetFromPositionInit)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 24 * a1;
  __n128 result = *a2;
  *(__n128 *)uint64_t v6 = *a2;
  *(void *)(v6 + 16) = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1B6C05A8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6C05B2C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1B6BFEF74(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t *sub_1B6C05B9C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B6C05BD0(uint64_t result, char a2, float a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleFlockingConstrainToArea)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  long long v9 = (__n128 *)(*(void *)(v5 + 128) + v7 + (result << 6));
  v9->n128_f32[0] = a3;
  v9[1] = a4;
  v9[2] = a5;
  v9[3].n128_u8[0] = a2 & 1;
  return result;
}

__n128 sub_1B6C05C28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for ParticleFlockingAlignOrientation)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  uint64_t v6 = *(void *)(v2 + 128) + v4 + 48 * a1;
  __n128 result = *(__n128 *)a2;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v8;
  *(void *)(v6 + 32) = *(void *)(a2 + 32);
  return result;
}

uint64_t sub_1B6C05C84(uint64_t result, char a2, float a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    long long v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ParticleFlockingConstrainToPlane)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  long long v9 = (__n128 *)(*(void *)(v5 + 128) + v7 + (result << 6));
  v9->n128_f32[0] = a3;
  v9[1] = a4;
  v9[2] = a5;
  v9[3].n128_u8[0] = a2 & 1;
  return result;
}

uint64_t sub_1B6C05CDC(uint64_t result, float a2, __n128 a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for ParticleFlockingAlignVelocityOnPlane)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = (__n128 *)(*(void *)(v3 + 128) + v5 + 32 * result);
  v7->n128_f32[0] = a2;
  v7[1] = a3;
  return result;
}

uint64_t sub_1B6C05D2C(uint64_t result, char a2, float a3)
{
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for Attach)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v3 + 128) + v5 + 8 * result;
  *(float *)uint64_t v7 = a3;
  *(unsigned char *)(v7 + 4) = a2 & 1;
  return result;
}

uint64_t sub_1B6C05D80(uint64_t result, float a2, float a3, float a4, float a5)
{
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    long long v8 = (uint64_t *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for Vortex)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = *v8;
  }
LABEL_7:
  long long v9 = (float *)(*(void *)(v5 + 128) + v7 + 16 * result);
  *long long v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  return result;
}

uint64_t sub_1B6C05DD0(uint64_t a1, uint64_t a2)
{
  return sub_1B6C05E00(a1, a2, type metadata accessor for EmitterScript);
}

uint64_t sub_1B6C05DE8(uint64_t a1, uint64_t a2)
{
  return sub_1B6C05E00(a1, a2, type metadata accessor for ParticleInitScript);
}

uint64_t sub_1B6C05E00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6C05E68(uint64_t a1, uint64_t a2)
{
  return sub_1B6C05E00(a1, a2, type metadata accessor for ParticleUpdateScript);
}

uint64_t sub_1B6C05E80(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B6C05ED4(uint64_t a1, uint64_t a2)
{
  return sub_1B6C05E00(a1, a2, type metadata accessor for MetalFunctionScript);
}

uint64_t sub_1B6C05EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (ValueMetadata **)(v6 + 32); *i != &type metadata for TextureRequireSizeLimit; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  uint64_t v13 = sub_1B635AB28(a3) << 16 >> 48;
  swift_retain();
  sub_1B6BF6D28(v13, a4, a5, a6 & 1);
  swift_release();
  return 1;
}

uint64_t sub_1B6C05FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  char v9 = a7;
  unsigned int v13 = a7 & 0xFFFFFF00;
  for (uint64_t i = (ValueMetadata **)(v7 + 32); *i != &type metadata for TextureRequireAnimationRepresentation; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  uint64_t v16 = sub_1B635AB28(a3) << 16 >> 48;
  swift_retain();
  sub_1B6BF75CC(v16, a4, a5, a6, v13 | v9 & 1);
  swift_release();
  return 1;
}

uint64_t sub_1B6C060C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for PropagateDirtiness))
  {
    unsigned int v13 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    *unsigned int v13 = a3;
    sub_1B63861B4((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v13, 1, 1);
  }
  return sub_1B6C02EE8(a5, a4, a6, a7);
}

uint64_t sub_1B6C061A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6C061CC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6C060C4);
}

uint64_t sub_1B6C061CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v5;
  uint64_t v11 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v12 + 12 * (int)result + 8) == HIDWORD(result))
    {
      unsigned int v13 = (int *)(v12 + 12 * (int)result);
      uint64_t v14 = *((__int16 *)v13 + 2);
      uint64_t v15 = *(void *)(*(void *)(a2 + 136) + 8 * *v13 + 32);
      if (*(void *)(v15 + 232) <= v14 && *(void *)(v15 + 240) > v14)
      {
        uint64_t v17 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        unint64_t v18 = *(os_unfair_lock_s **)(v15 + 344);
        swift_retain();
        os_unfair_lock_lock(v18);
        ecs_stack_allocator_push_snapshot(*(void *)(v17 + 32));
        swift_retain();
        a5(v17, v15, v14, a2, v11, a3, a4);
        swift_release();
        if (!v7) {
          ecs_stack_allocator_pop_snapshot(*(void *)(v17 + 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B6C06330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v80 = a7;
  uint64_t v86 = a3;
  uint64_t v74 = a2;
  uint64_t v85 = a1;
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1F4188790](inited, v13);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BDEFC(0, qword_1EB97DC70, (void (*)(uint64_t))type metadata accessor for ScriptIndex);
  MEMORY[0x1F4188790](v16 - 8, v17);
  long long v79 = (uint64_t *)((char *)&v72 - v18);
  uint64_t v19 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19 - 8, v21);
  uint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (uint64_t *)((char *)&v72 - v26);
  sub_1B62CF1CC(0, &qword_1EB980BA8, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBBE00]);
  uint64_t v28 = swift_allocObject();
  long long v78 = xmmword_1B6E77050;
  *(_OWORD *)(v28 + 16) = xmmword_1B6E77050;
  *(void *)(v28 + 32) = 0xF000000000000000;
  *(unsigned char *)(v28 + 40) = 1;
  *(void *)(v28 + 48) = 0;
  *(unsigned char *)(v28 + 56) = 1;
  v94[0] = (void *)v28;
  int v77 = a6;
  if (a6)
  {
    uint64_t v29 = (void *)v28;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v85;
    unint64_t v31 = v30 | 0xB000000000000000;
    long long v32 = sub_1B68C0FD8(1, 2, 1, v29);
    v32[2] = 2;
    v32[8] = v31;
    *((unsigned char *)v32 + 72) = 1;
    v32[10] = 0;
    *((unsigned char *)v32 + 88) = 1;
    v94[0] = v32;
  }
  unint64_t v33 = sub_1B69FAA7C(a8 | ((HIDWORD(a8) & 1) << 32));
  sub_1B6C09E60(*(void *)(a5 + 56) + *(void *)(v20 + 72) * v33, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  sub_1B6C0A1B8((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  uint64_t v34 = v27[3];
  if (v34 && (uint64_t v35 = *(void *)(v34 + 16)) != 0)
  {
    uint64_t v75 = v27;
    uint64_t v76 = v15;
    LODWORD(v83) = v77 & 0x10101;
    uint64_t v73 = swift_bridgeObjectRetain();
    char v36 = (uint64_t *)(v73 + 80);
    unint64_t v82 = a8 | ((HIDWORD(a8) & 1) << 32);
    uint64_t v84 = a5;
    uint64_t v85 = a4;
    uint64_t v37 = v74;
    do
    {
      uint64_t v38 = *(v36 - 6);
      uint64_t v39 = *(v36 - 5);
      uint64_t v41 = *(v36 - 4);
      unint64_t v40 = *(v36 - 3);
      uint64_t v43 = *(v36 - 2);
      uint64_t v42 = *(v36 - 1);
      uint64_t v44 = *v36;
      v36 += 7;
      uint64_t v87 = v38;
      uint64_t v88 = v39;
      uint64_t v89 = v41;
      unint64_t v90 = v40;
      uint64_t v91 = v43;
      uint64_t v92 = v42;
      uint64_t v93 = v44;
      swift_bridgeObjectRetain();
      sub_1B629C9E8(v41, v40);
      sub_1B686B0C8((uint64_t)&v87, v37, v86, v85, v84, v83, v82, v94);
      swift_bridgeObjectRelease();
      sub_1B629DCAC(v41, v40);
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    uint64_t v15 = v76;
    uint64_t v45 = v80;
    uint64_t v46 = inited;
    uint64_t v27 = v75;
    a5 = v84;
    a4 = v85;
  }
  else
  {
    uint64_t v45 = v80;
    uint64_t v46 = inited;
  }
  uint64_t v83 = a9;
  uint64_t v47 = v27[4];
  if (v47)
  {
    uint64_t v48 = *(void *)(v47 + 16);
    if (v48)
    {
      uint64_t v75 = v27;
      uint64_t v76 = v15;
      LODWORD(v84) = v77 & 0x10101;
      uint64_t v49 = swift_bridgeObjectRetain();
      uint64_t v85 = a4;
      unint64_t v82 = v49;
      int v50 = (uint64_t *)(v49 + 80);
      uint64_t v51 = a5;
      do
      {
        uint64_t v52 = *(v50 - 6);
        uint64_t v53 = *(v50 - 5);
        uint64_t v54 = *(v50 - 4);
        unint64_t v55 = *(v50 - 3);
        uint64_t v56 = *(v50 - 2);
        uint64_t v57 = *(v50 - 1);
        uint64_t v58 = *v50;
        v50 += 7;
        uint64_t v87 = v52;
        uint64_t v88 = v53;
        uint64_t v89 = v54;
        unint64_t v90 = v55;
        uint64_t v91 = v56;
        uint64_t v92 = v57;
        uint64_t v93 = v58;
        swift_bridgeObjectRetain();
        sub_1B629C9E8(v54, v55);
        sub_1B68584F4(&v87, v86, v85, v51, v84, v94);
        swift_bridgeObjectRelease();
        sub_1B629DCAC(v54, v55);
        --v48;
      }
      while (v48);
      swift_bridgeObjectRelease();
      uint64_t v15 = v76;
      uint64_t v45 = v80;
      uint64_t v46 = inited;
      uint64_t v27 = v75;
    }
  }
  sub_1B62CF1CC(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v78;
  unint64_t v60 = 0xE400000000000000;
  uint64_t v61 = 1852399949;
  char v62 = BYTE1(v86);
  uint64_t v63 = v59;
  uint64_t v64 = v83;
  switch((char)v86)
  {
    case 1:
      unint64_t v60 = 0xE500000000000000;
      uint64_t v61 = 0x6E77617053;
      break;
    case 2:
      uint64_t v61 = 1953066569;
      break;
    case 3:
      unint64_t v60 = 0xEC00000074696E49;
      goto LABEL_20;
    case 4:
      unint64_t v60 = 0xE600000000000000;
      uint64_t v61 = 0x657461647055;
      break;
    case 5:
      unint64_t v60 = 0xEE00657461647055;
LABEL_20:
      uint64_t v61 = 0x656C636974726150;
      break;
    case 6:
      unint64_t v60 = 0xE600000000000000;
      uint64_t v61 = 0x7265646E6552;
      break;
    default:
      break;
  }
  *(void *)(v59 + 32) = v61;
  *(void *)(v59 + 40) = v60;
  swift_bridgeObjectRelease();
  *(void *)(v64 + 24) = v63;
  uint64_t v65 = *(void *)(v64 + 16);
  if (v27[1])
  {
    uint64_t v66 = *v27;
    uint64_t v67 = v27[1];
  }
  else
  {
    uint64_t v66 = *(void *)(v64 + 8);
    swift_bridgeObjectRetain();
    uint64_t v67 = v65;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v64 + 8) = v66;
  *(void *)(v64 + 16) = v67;
  uint64_t v68 = (uint64_t)v79;
  *long long v79 = v45;
  uint64_t v69 = type metadata accessor for ScriptIndex();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
  sub_1B69072C4(v68, v64 + *(int *)(v46 + 36));
  sub_1B6C0A1B8(v64, (uint64_t)v15, type metadata accessor for ParticleInitScript);
  sub_1B6C0A220((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  sub_1B6C0A1B8((uint64_t)v15, v64, type metadata accessor for ParticleInitScript);
  *(unsigned char *)uint64_t v64 = v62;
  uint64_t v70 = v94[0];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v64 + 32) = v70;
  return result;
}

uint64_t sub_1B6C06A3C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int16 *a8, uint64_t a9, unint64_t a10)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1F4188790](inited, v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23) {
    return 0;
  }
  uint64_t v43 = a7;
  for (uint64_t i = (void *)(v22 + 56); *(i - 3) != v19; i += 5)
  {
    if (!--v23) {
      return 0;
    }
  }
  sub_1B6C09E60(*(void *)(a1 + 128) + *i + a2 * a3, (uint64_t)v21, type metadata accessor for ParticleInitScript);
  uint64_t v26 = *((void *)a8 + 1);
  uint64_t v27 = *((void *)a8 + 2);
  int v28 = *((unsigned __int8 *)a8 + 24);
  uint64_t v41 = a4;
  uint64_t v42 = v10;
  int v29 = *((unsigned __int8 *)a8 + 25);
  int v30 = *((unsigned __int8 *)a8 + 26);
  uint64_t v31 = *a8;
  uint64_t v32 = *(void *)(*(void *)(a9 + *(int *)(type metadata accessor for GraphScriptingConfig.ScriptInfo() + 44)) + 24);
  if (v29) {
    int v33 = 256;
  }
  else {
    int v33 = 0;
  }
  int v34 = v33 | v28;
  if (v30) {
    int v35 = 0x10000;
  }
  else {
    int v35 = 0;
  }
  int v36 = v34 | v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6C06330(v45, v43, v31, v26, v27, v36, v32, a10 | ((HIDWORD(a10) & 1) << 32), (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v41;
  uint64_t v38 = sub_1B635AB28(v44) << 16 >> 48;
  uint64_t v39 = **(void **)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  swift_retain();
  sub_1B6BF60A4(v38, v21, v39, type metadata accessor for ParticleInitScript, (uint64_t (*)(const void *, const void *))sub_1B6C05DE8);
  swift_release();
  sub_1B6C0A220((uint64_t)v21, type metadata accessor for ParticleInitScript);
  return 1;
}

uint64_t sub_1B6C06CC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  return sub_1B6C07714(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for ParticleInitScript, (uint64_t (*)(void, void, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6C06A3C) & 1;
}

uint64_t sub_1B6C06D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unint64_t a8, unint64_t a9)
{
  uint64_t v78 = a7;
  uint64_t v81 = a4;
  uint64_t v83 = a3;
  uint64_t v71 = a2;
  uint64_t v82 = a1;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  MEMORY[0x1F4188790](updated, v13);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BDEFC(0, qword_1EB97DC70, (void (*)(uint64_t))type metadata accessor for ScriptIndex);
  MEMORY[0x1F4188790](v16 - 8, v17);
  int v77 = (uint64_t *)((char *)&v70 - v18);
  uint64_t v19 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19 - 8, v21);
  uint64_t v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (uint64_t *)((char *)&v70 - v26);
  sub_1B62CF1CC(0, &qword_1EB980BA8, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBBE00]);
  uint64_t v28 = swift_allocObject();
  long long v76 = xmmword_1B6E77050;
  *(_OWORD *)(v28 + 16) = xmmword_1B6E77050;
  *(void *)(v28 + 32) = 0xF000000000000000;
  *(unsigned char *)(v28 + 40) = 1;
  *(void *)(v28 + 48) = 0;
  *(unsigned char *)(v28 + 56) = 1;
  v91[0] = (void *)v28;
  LODWORD(v75) = a6;
  if (a6)
  {
    int v29 = (void *)v28;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v82;
    unint64_t v31 = v30 | 0xB000000000000000;
    uint64_t v32 = sub_1B68C0FD8(1, 2, 1, v29);
    v32[2] = 2;
    v32[8] = v31;
    *((unsigned char *)v32 + 72) = 1;
    v32[10] = 0;
    *((unsigned char *)v32 + 88) = 1;
    v91[0] = v32;
  }
  unint64_t v33 = sub_1B69FAA7C(a8 | ((HIDWORD(a8) & 1) << 32));
  sub_1B6C09E60(*(void *)(a5 + 56) + *(void *)(v20 + 72) * v33, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  sub_1B6C0A1B8((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  uint64_t v34 = v27[3];
  if (v34 && (uint64_t v35 = *(void *)(v34 + 16)) != 0)
  {
    uint64_t v72 = v27;
    uint64_t v73 = updated;
    uint64_t v74 = v15;
    unsigned int v80 = v75 & 0x10101;
    uint64_t v70 = swift_bridgeObjectRetain();
    int v36 = (uint64_t *)(v70 + 80);
    unint64_t v79 = a8 | ((HIDWORD(a8) & 1) << 32);
    uint64_t v82 = a5;
    uint64_t v37 = v71;
    do
    {
      uint64_t v38 = *(v36 - 6);
      uint64_t v39 = *(v36 - 5);
      uint64_t v41 = *(v36 - 4);
      unint64_t v40 = *(v36 - 3);
      uint64_t v43 = *(v36 - 2);
      uint64_t v42 = *(v36 - 1);
      uint64_t v44 = *v36;
      v36 += 7;
      uint64_t v84 = v38;
      uint64_t v85 = v39;
      uint64_t v86 = v41;
      unint64_t v87 = v40;
      uint64_t v88 = v43;
      uint64_t v89 = v42;
      uint64_t v90 = v44;
      swift_bridgeObjectRetain();
      sub_1B629C9E8(v41, v40);
      sub_1B686B0C8((uint64_t)&v84, v37, v83, v81, v82, v80, v79, v91);
      swift_bridgeObjectRelease();
      sub_1B629DCAC(v41, v40);
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    uint64_t v15 = v74;
    uint64_t updated = v73;
    uint64_t v45 = v78;
    uint64_t v27 = v72;
    a5 = v82;
  }
  else
  {
    uint64_t v45 = v78;
  }
  unint64_t v79 = a9;
  uint64_t v46 = v27[4];
  if (v46)
  {
    uint64_t v47 = *(void *)(v46 + 16);
    if (v47)
    {
      uint64_t v72 = v27;
      uint64_t v73 = updated;
      uint64_t v74 = v15;
      unsigned int v80 = v75 & 0x10101;
      uint64_t v75 = swift_bridgeObjectRetain();
      uint64_t v48 = (uint64_t *)(v75 + 80);
      uint64_t v82 = a5;
      uint64_t v49 = v81;
      do
      {
        uint64_t v50 = *(v48 - 6);
        uint64_t v51 = *(v48 - 5);
        uint64_t v52 = *(v48 - 4);
        unint64_t v53 = *(v48 - 3);
        uint64_t v54 = *(v48 - 2);
        uint64_t v55 = *(v48 - 1);
        uint64_t v56 = *v48;
        v48 += 7;
        uint64_t v84 = v50;
        uint64_t v85 = v51;
        uint64_t v86 = v52;
        unint64_t v87 = v53;
        uint64_t v88 = v54;
        uint64_t v89 = v55;
        uint64_t v90 = v56;
        swift_bridgeObjectRetain();
        sub_1B629C9E8(v52, v53);
        sub_1B68584F4(&v84, v83, v49, v82, v80, v91);
        swift_bridgeObjectRelease();
        sub_1B629DCAC(v52, v53);
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease();
      uint64_t v15 = v74;
      uint64_t updated = v73;
      uint64_t v45 = v78;
      uint64_t v27 = v72;
    }
  }
  sub_1B62CF1CC(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = v76;
  unint64_t v58 = 0xE400000000000000;
  uint64_t v59 = 1852399949;
  char v60 = BYTE1(v83);
  uint64_t v61 = v57;
  uint64_t v62 = v79;
  switch((char)v83)
  {
    case 1:
      unint64_t v58 = 0xE500000000000000;
      uint64_t v59 = 0x6E77617053;
      break;
    case 2:
      uint64_t v59 = 1953066569;
      break;
    case 3:
      unint64_t v58 = 0xEC00000074696E49;
      goto LABEL_20;
    case 4:
      unint64_t v58 = 0xE600000000000000;
      uint64_t v59 = 0x657461647055;
      break;
    case 5:
      unint64_t v58 = 0xEE00657461647055;
LABEL_20:
      uint64_t v59 = 0x656C636974726150;
      break;
    case 6:
      unint64_t v58 = 0xE600000000000000;
      uint64_t v59 = 0x7265646E6552;
      break;
    default:
      break;
  }
  *(void *)(v57 + 32) = v59;
  *(void *)(v57 + 40) = v58;
  swift_bridgeObjectRelease();
  *(void *)(v62 + 16) = v61;
  if (v27[1])
  {
    uint64_t v63 = *v27;
    uint64_t v64 = v27[1];
  }
  else
  {
    uint64_t v63 = *(void *)v62;
    uint64_t v65 = *(void *)(v62 + 8);
    swift_bridgeObjectRetain();
    uint64_t v64 = v65;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v62 = v63;
  *(void *)(v62 + 8) = v64;
  uint64_t v66 = (uint64_t)v77;
  *int v77 = v45;
  uint64_t v67 = type metadata accessor for ScriptIndex();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 0, 1, v67);
  sub_1B69072C4(v66, v62 + *(int *)(updated + 36));
  sub_1B6C0A1B8(v62, (uint64_t)v15, type metadata accessor for ParticleUpdateScript);
  sub_1B6C0A220((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  sub_1B6C0A1B8((uint64_t)v15, v62, type metadata accessor for ParticleUpdateScript);
  *(unsigned char *)(v62 + 24) = v60;
  uint64_t v68 = v91[0];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v62 + 32) = v68;
  return result;
}

uint64_t sub_1B6C07440(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int16 *a8, uint64_t a9, unint64_t a10)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  MEMORY[0x1F4188790](updated, v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23) {
    return 0;
  }
  uint64_t v43 = a7;
  for (uint64_t i = (void *)(v22 + 56); *(i - 3) != v19; i += 5)
  {
    if (!--v23) {
      return 0;
    }
  }
  sub_1B6C09E60(*(void *)(a1 + 128) + *i + a2 * a3, (uint64_t)v21, type metadata accessor for ParticleUpdateScript);
  uint64_t v26 = *((void *)a8 + 1);
  uint64_t v27 = *((void *)a8 + 2);
  int v28 = *((unsigned __int8 *)a8 + 24);
  uint64_t v41 = a4;
  uint64_t v42 = v10;
  int v29 = *((unsigned __int8 *)a8 + 25);
  int v30 = *((unsigned __int8 *)a8 + 26);
  uint64_t v31 = *a8;
  uint64_t v32 = *(void *)(*(void *)(a9 + *(int *)(type metadata accessor for GraphScriptingConfig.ScriptInfo() + 44)) + 24);
  if (v29) {
    int v33 = 256;
  }
  else {
    int v33 = 0;
  }
  int v34 = v33 | v28;
  if (v30) {
    int v35 = 0x10000;
  }
  else {
    int v35 = 0;
  }
  int v36 = v34 | v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6C06D10(v45, v43, v31, v26, v27, v36, v32, a10 | ((HIDWORD(a10) & 1) << 32), (unint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v41;
  uint64_t v38 = sub_1B635AB28(v44) << 16 >> 48;
  uint64_t v39 = **(void **)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  swift_retain();
  sub_1B6BF60A4(v38, v21, v39, type metadata accessor for ParticleUpdateScript, (uint64_t (*)(const void *, const void *))sub_1B6C05E68);
  swift_release();
  sub_1B6C0A220((uint64_t)v21, type metadata accessor for ParticleUpdateScript);
  return 1;
}

uint64_t sub_1B6C076C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  return sub_1B6C07714(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for ParticleUpdateScript, (uint64_t (*)(void, void, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6C07440) & 1;
}

uint64_t sub_1B6C07714(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t (*a8)(void), uint64_t (*a9)(void, void, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v16 = HIDWORD(a1);
  uint64_t v17 = *(void *)(a8(0) - 8);
  if (*(void *)(v17 + 64))
  {
    uint64_t v18 = *(void *)(v17 + 72);
    if (a1 != -1) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v18 = 0;
    if (a1 != -1) {
      goto LABEL_6;
    }
  }
  if (!v16) {
    return 0;
  }
LABEL_6:
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001) {
    return 0;
  }
  if ((int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    return 0;
  }
  uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v16 != -1 && *(_DWORD *)(v19 + 12 * (int)a1 + 8) != v16) {
    return 0;
  }
  return a9(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v19 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v19 + 12 * (int)a1 + 4), v18, a2, a1, a3, a4, a5, a6, a7 | ((HIDWORD(a7) & 1) << 32)) & 1;
}

uint64_t sub_1B6C07894(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int16 *a6, void *a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11)
{
  int v34 = a7;
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v19 = type metadata accessor for GraphScript(0);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a1 + 48);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v32 = a4;
    uint64_t v33 = a8;
    uint64_t v31 = a5;
    for (uint64_t i = (void *)(v24 + 56); *(i - 3) != v21; i += 5)
    {
      if (!--v25) {
        return v25 & 1;
      }
    }
    sub_1B6C09E60(*(void *)(a1 + 128) + *i + a2 * a3, (uint64_t)v23, type metadata accessor for GraphScript);
    sub_1B686DAE4((uint64_t)v23, a6, v34, v33, a9, a10, a11 | ((HIDWORD(a11) & 1) << 32));
    if (v11)
    {
      sub_1B6C0A220((uint64_t)v23, type metadata accessor for GraphScript);
    }
    else
    {
      uint64_t v27 = v32;
      uint64_t v28 = sub_1B635AB28(v31) << 16 >> 48;
      uint64_t v29 = **(void **)(v27 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      swift_retain();
      sub_1B6BF7DCC(v28, v23, v29, type metadata accessor for GraphScript, type metadata accessor for GraphScript, (uint64_t (*)(const void *, const void *))sub_1B6C09EC8);
      swift_release();
      sub_1B6C0A220((uint64_t)v23, type metadata accessor for GraphScript);
      LOBYTE(v25) = 1;
    }
  }
  return v25 & 1;
}

uint64_t sub_1B6C07AD4(unint64_t a1, uint64_t a2, unsigned __int16 *a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  unint64_t v15 = HIDWORD(a1);
  uint64_t v16 = *(void *)(type metadata accessor for GraphScript(0) - 8);
  if (*(void *)(v16 + 64))
  {
    uint64_t v17 = *(void *)(v16 + 72);
    if (a1 != -1) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v17 = 0;
    if (a1 != -1) {
      goto LABEL_6;
    }
  }
  if (!v15) {
    return 0;
  }
LABEL_6:
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001) {
    return 0;
  }
  if ((int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    return 0;
  }
  uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v15 != -1 && *(_DWORD *)(v18 + 12 * (int)a1 + 8) != v15) {
    return 0;
  }
  return sub_1B6C07894(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v18 + 12 * (int)a1) + 32), *(_WORD *)(v18 + 12 * (int)a1 + 4), v17, a2, a1, a3, a4, a5, a6, a7, a8 | ((HIDWORD(a8) & 1) << 32)) & 1;
}

uint64_t sub_1B6C07C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v35 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  uint64_t v8 = 0;
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v38 = swift_bridgeObjectRetain();
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      uint64_t v11 = (v7 - 1) & v7;
      unint64_t v12 = v10 | (v8 << 6);
    }
    else
    {
      uint64_t v13 = v8 + 1;
      if (v8 + 1 >= v36) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v35 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v8 + 2;
        if (v8 + 2 >= v36) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v35 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v8 + 3;
          if (v8 + 3 >= v36) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v35 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v8 + 4;
            if (v8 + 4 >= v36) {
              return swift_release();
            }
            unint64_t v14 = *(void *)(v35 + 8 * v13);
            if (!v14)
            {
              uint64_t v13 = v8 + 5;
              if (v8 + 5 >= v36) {
                return swift_release();
              }
              unint64_t v14 = *(void *)(v35 + 8 * v13);
              if (!v14)
              {
                while (v36 - 6 != v8)
                {
                  unint64_t v14 = *(void *)(v38 + 112 + 8 * v8++);
                  if (v14)
                  {
                    uint64_t v13 = v8 + 5;
                    goto LABEL_21;
                  }
                }
                return swift_release();
              }
            }
          }
        }
      }
LABEL_21:
      uint64_t v11 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
      uint64_t v8 = v13;
    }
    unint64_t v15 = (uint64_t *)(*(void *)(v38 + 48) + 16 * v12);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v38 + 56) + 8 * v12);
    uint64_t v19 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    unint64_t v39 = v11;
    uint64_t v40 = v8;
    if (v19)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v20 = sub_1B62B2CE0(v17, v16);
      if (v21)
      {
        uint64_t v22 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v20);
        uint64_t v17 = *v22;
        uint64_t v23 = v22[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = v16;
LABEL_28:
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *(void **)(a2 + 16);
    uint64_t v26 = a2;
    *(void *)(a2 + 16) = 0x8000000000000000;
    unint64_t v28 = sub_1B62B2CE0(v17, v23);
    char v29 = v27;
    uint64_t v30 = v25[2] + ((v27 & 1) == 0);
    if (v25[3] < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v27 & 1) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B6AD1628();
      if ((v29 & 1) == 0)
      {
LABEL_4:
        v25[(v28 >> 6) + 8] |= 1 << v28;
        char v9 = (uint64_t *)(v25[6] + 16 * v28);
        *char v9 = v17;
        v9[1] = v23;
        *(void *)(v25[7] + 8 * v28) = v18;
        ++v25[2];
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
LABEL_34:
    uint64_t v33 = v25[7];
    swift_release();
    *(void *)(v33 + 8 * v28) = v18;
LABEL_5:
    unint64_t v7 = v39;
    a2 = v26;
    *(void *)(v26 + 16) = v25;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = a3;
    uint64_t v8 = v40;
  }
  sub_1B6ABF960(v30, isUniquelyReferenced_nonNull_native);
  uint64_t v31 = sub_1B62B2CE0(v17, v23);
  if ((v29 & 1) == (v32 & 1))
  {
    unint64_t v28 = v31;
    if ((v29 & 1) == 0) {
      goto LABEL_4;
    }
    goto LABEL_34;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6C07FB8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v8 + 12 * (int)result + 8) == HIDWORD(result))
    {
      char v9 = (int *)(v8 + 12 * (int)result);
      uint64_t v10 = *((__int16 *)v9 + 2);
      uint64_t v11 = *(void *)(*(void *)(a2 + 136) + 8 * *v9 + 32);
      if (*(void *)(v11 + 232) <= v10 && *(void *)(v11 + 240) > v10)
      {
        uint64_t v13 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        unint64_t v14 = *(os_unfair_lock_s **)(v11 + 344);
        swift_unknownObjectRetain();
        swift_retain();
        os_unfair_lock_lock(v14);
        uint64_t v15 = *(void *)(v13 + 32);
        ecs_stack_allocator_push_snapshot(v15);
        BOOL v16 = sub_1B62FACF8((uint64_t)&type metadata for TextureGPURuntime);
        swift_unknownObjectRetain_n();
        swift_retain();
        if (!v16)
        {
          uint64_t v17 = ecs_stack_allocator_allocate(v15, 8, 8);
          *uint64_t v17 = v10;
          sub_1B63861B4((uint64_t)&type metadata for TextureGPURuntime, (uint64_t)&off_1F0F74BA8, v17, 1, 1);
        }
        swift_unknownObjectRetain();
        sub_1B6BFEFE0(v7, a2, a3);
        swift_release();
        swift_unknownObjectRelease_n();
        if (!v4) {
          ecs_stack_allocator_pop_snapshot(*(void *)(v13 + 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
        swift_unknownObjectRelease();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B6C081A0(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  uint64_t result = sub_1B677F3DC(*(void *)(a1 + 128) + *i + a2 * a3, &v8);
  if (!v3) {
    return v8;
  }
  return result;
}

uint64_t sub_1B6C0821C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for EmitterRuntime; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6C08288(uint64_t a1, __int16 a2, uint64_t a3, char a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 2;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v5) {
      return 2;
    }
  }
  uint64_t v8 = *(void *)(a1 + 128) + *i + a2 * a3;
  if (a4 == 3)
  {
    if (*(uint64_t *)(v8 + 464) < 1) {
      return 0;
    }
  }
  else if (a4 == 2 && *(uint64_t *)(v8 + 112) <= 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1B6C08310(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for EmitterDescription)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v7 = 0;
    uint64_t v6 = *(unsigned int *)(*(void *)(a1 + 128) + *v5 + a2 * a3 + 80);
  }
  else
  {
LABEL_5:
    uint64_t v6 = 0;
    unsigned __int8 v7 = 1;
  }
  return v6 | ((unint64_t)v7 << 32);
}

uint64_t sub_1B6C08380(uint64_t a1)
{
  return sub_1B6C08398(a1);
}

uint64_t sub_1B6C08398(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for EmitterRuntime; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_retain();
}

uint64_t sub_1B6C08404(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = v1 + 56;
  uint64_t result = 1;
  while (*(ValueMetadata **)(v3 - 24) != &type metadata for CodeGenerationComponent)
  {
    v3 += 40;
    if (!--v2) {
      return result;
    }
  }
  return swift_retain();
}

uint64_t sub_1B6C0847C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for GraphEntityComponentPropertyReferences; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6C084E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for TextureGPURuntime; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_unknownObjectRetain();
}

unint64_t sub_1B6C08550(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 1;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterDescription; i += 5)
  {
    if (!--v7) {
      return 1;
    }
  }
  unint64_t result = sub_1B68DC6FC(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5);
  if (!v5) {
    return 0;
  }
  return result;
}

unint64_t sub_1B6C085D4(unint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  unint64_t v6 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 1;
  }
  unint64_t result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v6 == -1 || *(_DWORD *)(v8 + 12 * (int)a1 + 8) == v6)
    {
      unint64_t result = sub_1B6C08550(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 88, a3, a4);
      if (!v4) {
        return result & 1;
      }
    }
  }
  return result;
}

uint64_t sub_1B6C08690(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  return *(void *)(*(void *)(a1 + 128) + *i + a2 * a3 + 104);
}

uint64_t sub_1B6C08704(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  uint64_t v7 = *(void *)(a1 + 128) + *i + a2 * a3;
  int v8 = *(unsigned __int8 *)(v7 + 272);
  uint64_t v9 = *(void *)(v7 + 288);
  uint64_t v10 = *(void *)(v7 + 304);
  uint64_t v11 = *(void *)(v7 + 448);
  if (!v8) {
    uint64_t v11 = 0;
  }
  return v9 + v11 * v10;
}

uint64_t sub_1B6C0877C(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  uint64_t v7 = *(void *)(a1 + 128) + *i + a2 * a3;
  if (*(void *)(v7 + 360)) {
    return *(void *)(v7 + 368);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B6C087EC(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 1;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MaterialRuntime; i += 5)
  {
    if (!--v5) {
      return 1;
    }
  }
  uint64_t v8 = *(void *)(a1 + 128) + *i + a2 * a3;
  *(void *)(a4 + 152) = *(void *)(v8 + 216);
  *(void *)(a4 + 144) = *(void *)(v8 + 208);
  *(unsigned char *)(a4 + 256) = *(unsigned char *)(v8 + 224);
  *(unsigned char *)(a4 + 257) = *(unsigned char *)(v8 + 226);
  long long v9 = *(_OWORD *)(v8 + 112);
  _OWORD v12[4] = *(_OWORD *)(v8 + 96);
  v12[5] = v9;
  v12[6] = *(_OWORD *)(v8 + 128);
  long long v10 = *(_OWORD *)(v8 + 48);
  v12[0] = *(_OWORD *)(v8 + 32);
  v12[1] = v10;
  long long v11 = *(_OWORD *)(v8 + 80);
  _OWORD v12[2] = *(_OWORD *)(v8 + 64);
  void v12[3] = v11;
  sub_1B62ED358((uint64_t)v12);
  return 0;
}

uint64_t sub_1B6C088B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = v1 + 56;
  uint64_t result = 1;
  while (*(ValueMetadata **)(v3 - 24) != &type metadata for EmitterRuntime)
  {
    v3 += 40;
    if (!--v2) {
      return result;
    }
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1B6C0894C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = v1 + 56;
  uint64_t result = 1;
  while (*(ValueMetadata **)(v3 - 24) != &type metadata for EmitterRuntime)
  {
    v3 += 40;
    if (!--v2) {
      return result;
    }
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1B6C089C8(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 1;
  }
  unint64_t v6 = (void *)(v3 + 56);
  uint64_t result = 1;
  while ((ValueMetadata *)*(v6 - 3) != &type metadata for EmitterRuntime)
  {
    v6 += 5;
    if (!--v4) {
      return result;
    }
  }
  uint64_t result = *(void *)(*(void *)(a1 + 128) + *v6 + a2 * a3 + 360);
  if (result) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1B6C08A48(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, unsigned int a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 1;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v6) {
      return 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 128) + *i + a2 * a3;
  if ((*(unsigned char *)(v9 + 160) & 1) != 0
    || (unsigned int v10 = *(_DWORD *)(v9 + 136), v11 = a5 >= v10, v12 = a5 - v10, !v11)
    || *(void *)(v9 + 152) <= v12)
  {
    uint64_t v13 = -1;
  }
  else
  {
    uint64_t v13 = *(void *)(*(void *)(v9 + 144) + 8 * v12);
  }
  uint64_t result = 0;
  *a4 = v13;
  return result;
}

uint64_t sub_1B6C08AD0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t *a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 1;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v7) {
      return 1;
    }
  }
  if (HIDWORD(a5))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    LODWORD(v12) = vfx_uniform_grid_find_nearest_neighbors(*(void *)(*(void *)(*(void *)(a1 + 128) + *i + a2 * a3 + 504) + 16), a4, a5, 1);
    uint64_t result = 0;
    unint64_t v12 = v12;
    if (v12 >= a5) {
      unint64_t v12 = a5;
    }
    *a6 = v12;
  }
  return result;
}

uint64_t sub_1B6C08BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 1;
  }
  for (uint64_t i = v4 + 56; *(ValueMetadata **)(i - 24) != &type metadata for GraphScriptingConfig; i += 40)
  {
    if (!--v5) {
      return 1;
    }
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1B6BF8B70(v9, a4);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B6C08C74(uint64_t a1, __int16 a2, uint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldTransform; i += 5)
  {
    if (!--v8) {
      return 0;
    }
  }
  BOOL v11 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
  *BOOL v11 = a4;
  v11[1] = a5;
  _OWORD v11[2] = a6;
  void v11[3] = a7;
  return 1;
}

uint64_t sub_1B6C08CD0(uint64_t a1, __int16 a2, uint64_t a3, simd_float4x4 a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for InverseWorldTransform; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  uint64_t v8 = (simd_float4x4 *)(*(void *)(a1 + 128) + *i + a2 * a3);
  *uint64_t v8 = __invert_f4(a4);
  return 1;
}

uint64_t sub_1B6C08D50(uint64_t a1, __int16 a2, uint64_t a3, simd_float4x4 *a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for InverseWorldTransform; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  uint64_t v8 = (simd_float4x4 *)(*(void *)(a1 + 128) + *i + a2 * a3);
  *uint64_t v8 = __invert_f4(*a4);
  return 1;
}

uint64_t sub_1B6C08DD8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  return sub_1B62FDE6C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1B6BFBE10) & 1;
}

uint64_t sub_1B6C08E08(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  return sub_1B62FDE6C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1B6BFC224) & 1;
}

uint64_t sub_1B6C08E38(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  if (*(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8) >= a5)
  {
    uint64_t v10 = *(void *)(a1 + 128) + *i + a2 * a3;
    *(void *)(v10 + 464) -= a6;
  }
  return 1;
}

uint64_t sub_1B6C08EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v57 = *(void *)(v6 - 8);
  unint64_t v58 = (int *)v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v51 - v12;
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v65 = (uint64_t)&v51 - v16;
  sub_1B6C0A0CC();
  uint64_t v17 = sub_1B6E32C28();
  uint64_t v18 = 0;
  uint64_t v59 = a1;
  uint64_t v60 = v17;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v20 = a1 + 64;
  uint64_t v19 = v21;
  uint64_t v22 = 1 << *(unsigned char *)(v20 - 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v19;
  uint64_t v55 = v17 + 64;
  uint64_t v56 = v13 + 24;
  uint64_t v53 = v20;
  int64_t v54 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v51 = v20 + 40;
  int64_t v52 = v54 - 5;
  while (1)
  {
    uint64_t v66 = v3;
    if (v24)
    {
      unint64_t v29 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      uint64_t v61 = v18;
      unint64_t v30 = v29 | (v18 << 6);
      goto LABEL_20;
    }
    uint64_t v31 = v18 + 1;
    if (v18 + 1 >= v54) {
      return v60;
    }
    unint64_t v32 = *(void *)(v53 + 8 * v31);
    if (!v32)
    {
      uint64_t v31 = v18 + 2;
      if (v18 + 2 >= v54) {
        return v60;
      }
      unint64_t v32 = *(void *)(v53 + 8 * v31);
      if (!v32)
      {
        uint64_t v31 = v18 + 3;
        if (v18 + 3 >= v54) {
          return v60;
        }
        unint64_t v32 = *(void *)(v53 + 8 * v31);
        if (!v32)
        {
          uint64_t v31 = v18 + 4;
          if (v18 + 4 >= v54) {
            return v60;
          }
          unint64_t v32 = *(void *)(v53 + 8 * v31);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_19:
    unint64_t v24 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v31 << 6);
    uint64_t v61 = v31;
LABEL_20:
    uint64_t v33 = *(void *)(v59 + 48);
    uint64_t v34 = *(void *)(v59 + 56);
    uint64_t v64 = 8 * v30;
    uint64_t v35 = (int *)(v33 + 8 * v30);
    int v36 = *v35;
    LODWORD(v35) = *((unsigned __int8 *)v35 + 4);
    int v62 = v36;
    int v63 = (int)v35;
    unint64_t v37 = *(void *)(v57 + 72) * v30;
    uint64_t v38 = v65;
    sub_1B6C09E60(v34 + v37, v65, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B6C09E60(v38, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    swift_bridgeObjectRetain();
    *((void *)v13 + 2) = sub_1B639A2D4(MEMORY[0x1E4FBC860]);
    unint64_t v39 = v56;
    void *v56 = 0;
    v39[1] = 0;
    *((_WORD *)v13 + 20) = 1;
    uint64_t v40 = v58;
    uint64_t v41 = (uint64_t)&v13[v58[10]];
    uint64_t v42 = sub_1B6E31118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
    *(void *)&v13[v40[11]] = 0;
    uint64_t v43 = &v13[v40[12]];
    *(void *)uint64_t v43 = 0;
    v43[8] = 1;
    uint64_t v44 = v9[1];
    *(void *)uint64_t v13 = *v9;
    *((void *)v13 + 1) = v44;
    uint64_t v45 = (uint64_t)v9 + v40[10];
    swift_bridgeObjectRetain();
    sub_1B6C0A138(v45, v41);
    swift_bridgeObjectRelease();
    *((void *)v13 + 3) = 0;
    swift_bridgeObjectRelease();
    *((void *)v13 + 4) = 0;
    if (v9[3])
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = swift_bridgeObjectRetain();
      uint64_t v47 = v66;
      uint64_t v48 = sub_1B6C03A60(v46, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *((void *)v13 + 3) = v48;
      swift_bridgeObjectRetain();
      uint64_t v49 = swift_bridgeObjectRetain();
      sub_1B6C07C4C(v49, (uint64_t)v13, a2);
      uint64_t v3 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v9[4]) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v3 = v66;
      if (v9[4])
      {
LABEL_4:
        swift_bridgeObjectRetain();
        uint64_t v25 = swift_bridgeObjectRetain();
        uint64_t v26 = sub_1B6C03A60(v25, a2);
        swift_bridgeObjectRelease_n();
        sub_1B6C0A220((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *((void *)v13 + 4) = v26;
        goto LABEL_5;
      }
    }
    sub_1B6C0A220((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v18 = v61;
    sub_1B6C0A220(v65, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(void *)(v55 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v27 = v60;
    uint64_t v28 = *(void *)(v60 + 48) + v64;
    *(_DWORD *)uint64_t v28 = v62;
    *(unsigned char *)(v28 + 4) = v63;
    sub_1B6C0A1B8((uint64_t)v13, *(void *)(v27 + 56) + v37, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    ++*(void *)(v27 + 16);
  }
  while (v52 != v18)
  {
    unint64_t v32 = *(void *)(v51 + 8 * v18++);
    if (v32)
    {
      uint64_t v66 = v3;
      uint64_t v31 = v18 + 4;
      goto LABEL_19;
    }
  }
  return v60;
}

uint64_t sub_1B6C093D8(uint64_t a1, __int16 a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for GraphScriptingConfig; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v11 = *(void *)(a1 + 128) + *i + a2 * a3;
  uint64_t v17 = sub_1B62BAA04(MEMORY[0x1E4FBC860]);
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_1B6BF869C(v12, a4, a5, &v17);
  swift_bridgeObjectRelease();
  uint64_t v13 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 8) = v13;
  uint64_t v14 = *a5;
  uint64_t v15 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B6C08EBC(v15, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = v16;
  return 1;
}

uint64_t sub_1B6C09504(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, float32x4_t *a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Children; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  sub_1B633F89C((uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5);
  return 1;
}

uint64_t sub_1B6C09578(uint64_t a1, uint64_t a2, uint64_t a3, float32x4_t *a4)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6C09504(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 8, a3, a4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6C09620(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureGPURuntime; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  sub_1B6D03294((void *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7, a8);
  return 1;
}

uint64_t sub_1B6C096A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6C09620(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 8, a3, a4, a5, a6, a7) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6C09754(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for GraphDebuggingComponent; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  uint64_t v7 = (void *)(*(void *)(a1 + 128) + *i + a2 * a3);
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1E4FBC868];
  void *v7 = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  v7[1] = v8;
  return 1;
}

uint64_t sub_1B6C097F0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unsigned int a9, uint64_t a10)
{
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = (void *)(v10 + 56); (ValueMetadata *)*(i - 3) != &type metadata for GraphDebuggingComponent; i += 5)
  {
    if (!--v11) {
      return 0;
    }
  }
  sub_1B6ADB57C((void *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7, a8, a9, a10);
  return 1;
}

uint64_t sub_1B6C09880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8, uint64_t a9)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v9 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6C097F0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), *(_WORD *)(v9 + 12 * (int)a1 + 4), 16, a3, a4, a5, a6, a7, a8, a9) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6C09948(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unsigned int a9, uint64_t a10)
{
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = (void *)(v10 + 56); (ValueMetadata *)*(i - 3) != &type metadata for GraphDebuggingComponent; i += 5)
  {
    if (!--v11) {
      return 0;
    }
  }
  sub_1B6ADBD8C(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7, a8, a9, a10);
  return 1;
}

uint64_t sub_1B6C099E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8, uint64_t a9)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v9 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6C09948(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), *(_WORD *)(v9 + 12 * (int)a1 + 4), 16, a3, a4, a5, a6, a7, a8, a9) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6C09AB4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6C09AE4(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6ADC780) & 1;
}

uint64_t sub_1B6C09AE4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  char v10 = 0;
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001) {
    return 0;
  }
  if ((int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == v9) {
      char v10 = sub_1B6C09BC0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v11 + 12 * (int)a1) + 32), *(_WORD *)(v11 + 12 * (int)a1 + 4), 16, a3, a4, a5, a6, a7, a8);
    }
    else {
      char v10 = 0;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B6C09BC0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    return 0;
  }
  for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for GraphDebuggingComponent; i += 5)
  {
    if (!--v10) {
      return 0;
    }
  }
  a9(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7, a8);
  return 1;
}

uint64_t sub_1B6C09C48(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureCPURuntime; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  uint64_t v7 = *(void *)(a1 + 128) + *i + a2 * a3;
  uint64_t result = 1;
  *(unsigned char *)(v7 + 24) = 1;
  return result;
}

void sub_1B6C09CA0(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  long long v7 = 0uLL;
  if (v6)
  {
    uint64_t v8 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for NodeTransformController)
    {
      v8 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v13 = (void *)MEMORY[0x1BA9B8670](*(void *)(a1 + 128) + *v8 + a2 * a3 + 32, (__n128)0);
    if (v13)
    {
      uint64_t v14 = v13;
      objc_msgSend(v13, sel_worldTransform);
      long long v21 = v16;
      long long v22 = v15;
      long long v19 = v18;
      long long v20 = v17;

      long long v12 = v19;
      long long v11 = v20;
      long long v10 = v21;
      long long v7 = v22;
      char v9 = 0;
    }
    else
    {
      char v9 = 0;
      long long v12 = xmmword_1B6E4F370;
      long long v11 = xmmword_1B6E4F2E0;
      long long v10 = xmmword_1B6E4F320;
      long long v7 = xmmword_1B6E4F300;
    }
  }
  else
  {
LABEL_5:
    char v9 = 1;
    long long v10 = 0uLL;
    long long v11 = 0uLL;
    long long v12 = 0uLL;
  }
  *(_OWORD *)a4 = v7;
  *(_OWORD *)(a4 + 16) = v10;
  *(_OWORD *)(a4 + 32) = v11;
  *(_OWORD *)(a4 + 48) = v12;
  *(unsigned char *)(a4 + 64) = v9;
}

uint64_t sub_1B6C09D9C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v4, v3);
}

uint64_t sub_1B6C09E50()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6C09E60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6C09EC8(uint64_t a1, uint64_t a2)
{
  return sub_1B6C05E00(a1, a2, type metadata accessor for GraphScript);
}

void sub_1B6C09EE0(uint64_t a1)
{
}

unint64_t sub_1B6C09F00()
{
  unint64_t result = qword_1E9DD2DC0;
  if (!qword_1E9DD2DC0)
  {
    type metadata accessor for PBRParameters();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2DC0);
  }
  return result;
}

uint64_t sub_1B6C09F58(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  sub_1B62D2230(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(a2, a1, v7);
  return a2;
}

void sub_1B6C09FDC(uint64_t a1)
{
}

uint64_t sub_1B6C09FFC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6C0A058(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6C0A0B4(uint64_t a1, uint64_t a2)
{
  return sub_1B6C05E00(a1, a2, type metadata accessor for TriggerScript);
}

void sub_1B6C0A0CC()
{
  if (!qword_1EB980700)
  {
    type metadata accessor for GraphScriptingConfig.ScriptInfo();
    sub_1B67FC164();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980700);
    }
  }
}

uint64_t sub_1B6C0A138(uint64_t a1, uint64_t a2)
{
  sub_1B63BDEFC(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6C0A1B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6C0A220(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B6C0A280(uint64_t a1)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v2 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B636A914(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v2 + 12 * (int)a1) + 32), *(_DWORD *)(v2 + 12 * (int)a1), *(_WORD *)(v2 + 12 * (int)a1 + 4), 16, v1), !v4))
  {
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    return 0x5B64656D616E6E55;
  }
  return result;
}

uint64_t sub_1B6C0A394(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2)
  {
    v12[0] = result;
    v12[1] = a2;
    if (a3 == 0xFFFFFFFF)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = swift_retain();
      MEMORY[0x1F4188790](v8, v9);
      sub_1B636C318(0, (void (*)(unsigned char *))sub_1B663C1B0);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else if (a3 != 0xFFFFFFFF)
  {
    uint64_t v6 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
    swift_retain();
    if (v6)
    {
      int v7 = *(unsigned __int8 *)(v6 + 80);
      MEMORY[0x1BA9B8670](v6 + 48);
      uint64_t v6 = *(void *)(v6 + 56);
    }
    else
    {
      int v7 = 0;
    }
    swift_unknownObjectUnownedInit();
    v10[0] = a4;
    _OWORD v10[2] = v6;
    swift_unknownObjectUnownedAssign();
    swift_unownedRetain();
    swift_unknownObjectRelease();
    char v11 = v7;
    sub_1B636C4E0((uint64_t)v10, (uint64_t)v12);
    sub_1B6A61F04((uint64_t)&type metadata for Name, (uint64_t)&off_1F0F9E630, a3);
    sub_1B636C450((uint64_t)v12);
    if (v7) {
      sub_1B6A667F0(1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6C0A538(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (qword_1EB97E4B8 != -1) {
    swift_once();
  }
  uint64_t v62 = xmmword_1EB97E488;
  int v63 = DWORD2(xmmword_1EB97E488);
  char v64 = BYTE12(xmmword_1EB97E488);
  unint64_t v65 = qword_1EB97E498 & 0xFFFFFFFFFFFFFFFELL | a4 & 1;
  char v66 = byte_1EB97E4A0;
  uint64_t v67 = qword_1EB97E4A8;
  swift_retain();
  sub_1B62C9DA8(v4, (uint64_t)&v62, a3 & 0xFFFFFFFFFFLL, v48);
  sub_1B62CA210((uint64_t)v48, (uint64_t)v49, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v49[0])
  {
    swift_release();
    return 0;
  }
  long long v56 = v49[0];
  long long v57 = v49[1];
  uint64_t v58 = v50;
  if (v55 <= 0)
  {
    swift_release();
    sub_1B632F170(v48);
    return 0;
  }
  uint64_t v41 = v52;
  if (!v52)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = 0;
LABEL_38:
    swift_release();
    sub_1B632F170(v48);
    sub_1B632F170(v48);
    return v11;
  }
  uint64_t v40 = v51;
  uint64_t v46 = v54[4];
  uint64_t v47 = v54;
  char v9 = *(unsigned char *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v38 = v54 + 8;
  uint64_t v39 = (uint64_t)(v54 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  char v37 = v9;
  while (1)
  {
    uint64_t v45 = v10;
    uint64_t v13 = (unsigned int *)(v40 + 48 * v10);
    uint64_t v14 = *v13;
    long long v15 = (uint64_t *)*((void *)v13 + 2);
    uint64_t v42 = v13[1];
    uint64_t v43 = *((void *)v13 + 3);
    uint64_t v16 = *((void *)v13 + 4);
    uint64_t v17 = *((void *)v13 + 5);
    uint64_t v44 = v12;
    if (v9)
    {
      long long v18 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v46);
    sub_1B62CA210(v39, (uint64_t)v61, &qword_1EB97DE20);
    uint64_t v19 = v47[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v47[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v47[7] = v20;
    v38[1] = 0;
    _OWORD v38[2] = 0;
    *uint64_t v38 = 0;
    swift_release();
    uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for Name, (uint64_t)&off_1F0F9E630, v15, v43, v16, (uint64_t)v47);
    if (v15)
    {
      char v9 = v37;
      if (v16)
      {
        long long v22 = (void *)(v21 + 8);
        while (1)
        {
          uint64_t v24 = *v15++;
          uint64_t v23 = v24;
          BOOL v25 = *(v22 - 1) == a1 && *v22 == a2;
          if (v25 || (sub_1B6E334B8() & 1) != 0)
          {
            char v26 = *(unsigned char *)(v17 + 184);
            uint64_t v27 = swift_retain();
            if (v26) {
              goto LABEL_40;
            }
            uint64_t v28 = *(unsigned int *)(*(void *)(v17 + 168) + 4 * v23);
            uint64_t v29 = *(unsigned int *)(*(void *)(v27 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v28 + 8);
            swift_release();
            uint64_t v11 = v28 | (v29 << 32);
          }
          v22 += 2;
          if (!--v16) {
            goto LABEL_23;
          }
        }
      }
      goto LABEL_23;
    }
    char v9 = v37;
    if (v14 != v42) {
      break;
    }
LABEL_23:
    v59[0] = v56;
    v59[1] = v57;
    uint64_t v60 = v58;
    uint64_t v12 = v44;
    sub_1B6345178(v47, (unsigned __int16 **)v59, (uint64_t)v61);
    sub_1B634507C((char *)v17);
    ecs_stack_allocator_pop_snapshot(v46);
    if (v9)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    uint64_t v10 = v45 + 1;
    if (v45 + 1 == v41) {
      goto LABEL_38;
    }
  }
  unint64_t v30 = (void *)(v21 + 16 * v14 + 8);
  while (1)
  {
    BOOL v31 = *(v30 - 1) == a1 && *v30 == a2;
    if (!v31 && (sub_1B6E334B8() & 1) == 0) {
      goto LABEL_26;
    }
    char v32 = *(unsigned char *)(v17 + 184);
    uint64_t v33 = swift_retain();
    if (v32) {
      break;
    }
    uint64_t v34 = *(unsigned int *)(*(void *)(v17 + 168) + 4 * v14);
    uint64_t v35 = *(unsigned int *)(*(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v34 + 8);
    swift_release();
    uint64_t v11 = v34 | (v35 << 32);
LABEL_26:
    ++v14;
    v30 += 2;
    if (v42 == v14) {
      goto LABEL_23;
    }
  }
LABEL_40:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6C0AA2C(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6E33578();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

double sub_1B6C0AAC4()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B6A6DAE8(1, (uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1EB97E488 = v1[0];
  *(_OWORD *)&qword_1EB97E498 = v1[1];
  qword_1EB97E4A8 = v2;
  return result;
}

ValueMetadata *type metadata accessor for Name()
{
  return &type metadata for Name;
}

uint64_t sub_1B6C0AB84(unint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  unint64_t v9 = a1 & 0xF000000000000000;
  if ((a1 & 0xF000000000000000) != 0x8000000000000000) {
    goto LABEL_7;
  }
  if (a1 == 0x8000000000000050)
  {
    *(void *)&long long v109 = 0;
    *((void *)&v109 + 1) = 0xE000000000000000;
    sub_1B6E32B18();
    v113[0] = v109;
    sub_1B633AF88();
    swift_bridgeObjectRetain();
    if (sub_1B6E32678())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = sub_1B6E31828();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)&v113[0] = v32;
      *((void *)&v113[0] + 1) = v34;
      char v35 = sub_1B6E32678();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        sub_1B6E31948();
      }
    }
    goto LABEL_21;
  }
  if (a1 != 0x8000000000000010)
  {
LABEL_7:
    uint64_t v11 = a3 & 1;
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1B6E8F480;
    char v13 = sub_1B69B18E4(v12 | 0x1000000000000000, a1);
    swift_release();
    if (v13)
    {
      sub_1B62CAAD8(a2, (uint64_t)&v109);
      uint64_t v14 = MEMORY[0x1E4FBB470];
      sub_1B62AA4B8(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      swift_dynamicCast();
      int v108 = DWORD1(v113[0]);
      *((void *)&v110 + 1) = v14;
      LODWORD(v109) = v113[0];
      uint64_t v15 = sub_1B6C0AB84(0x8000000000000050, &v109, v11, a4, a5);
      uint64_t v17 = v16;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
      swift_bridgeObjectRelease();
      *(void *)&v113[0] = v15;
      *((void *)&v113[0] + 1) = v17;
      sub_1B6E31948();
      *((void *)&v110 + 1) = v14;
      LODWORD(v109) = v108;
      goto LABEL_15;
    }
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1B6E8DAE0;
    char v19 = sub_1B69B18E4(v18 | 0x1000000000000000, a1);
    swift_release();
    if (v19)
    {
      sub_1B62CAAD8(a2, (uint64_t)&v109);
      uint64_t v20 = MEMORY[0x1E4FBB470];
      sub_1B62AA4B8(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      swift_dynamicCast();
      long long v103 = v113[0];
      *((void *)&v110 + 1) = v20;
      LODWORD(v109) = v113[0];
      uint64_t v21 = sub_1B6C0AB84(0x8000000000000050, &v109, v11, a4, a5);
      uint64_t v23 = v22;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
      swift_bridgeObjectRelease();
      *(void *)&v113[0] = v21;
      *((void *)&v113[0] + 1) = v23;
      sub_1B6E31948();
      *((void *)&v110 + 1) = v20;
      LODWORD(v109) = DWORD1(v103);
      sub_1B6C0AB84(0x8000000000000050, &v109, v11, a4, a5);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      *((void *)&v110 + 1) = v20;
      LODWORD(v109) = DWORD2(v103);
      goto LABEL_15;
    }
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1B6E8DAD0;
    char v25 = sub_1B69B18E4(v24 | 0x1000000000000000, a1);
    swift_release();
    if (v25)
    {
      sub_1B62CAAD8(a2, (uint64_t)&v109);
      uint64_t v26 = MEMORY[0x1E4FBB470];
      sub_1B62AA4B8(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      swift_dynamicCast();
      long long v104 = v113[0];
      *((void *)&v110 + 1) = v26;
      LODWORD(v109) = v113[0];
      uint64_t v27 = sub_1B6C0AB84(0x8000000000000050, &v109, v11, a4, a5);
      uint64_t v29 = v28;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
      swift_bridgeObjectRelease();
      *(void *)&v113[0] = v27;
      *((void *)&v113[0] + 1) = v29;
      sub_1B6E31948();
      *((void *)&v110 + 1) = v26;
      LODWORD(v109) = DWORD1(v104);
      sub_1B6C0AB84(0x8000000000000050, &v109, v11, a4, a5);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      *((void *)&v110 + 1) = v26;
      LODWORD(v109) = DWORD2(v104);
      sub_1B6C0AB84(0x8000000000000050, &v109, v11, a4, a5);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      *((void *)&v110 + 1) = v26;
      LODWORD(v109) = HIDWORD(v104);
      goto LABEL_15;
    }
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = 2;
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1B6E8F480;
    *(void *)(v37 + 24) = v38 | 0x1000000000000000;
    char v39 = sub_1B69B18E4(v37 | 0x1000000000000000, a1);
    swift_release();
    if (v39)
    {
      sub_1B62CAAD8(a2, (uint64_t)&v109);
      type metadata accessor for simd_float2x2(0);
      swift_dynamicCast();
      long long v40 = v113[0];
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1B6E8F480;
      uint64_t v42 = v41 | 0x1000000000000000;
      sub_1B62AA4B8(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      uint64_t v44 = v43;
      *((void *)&v110 + 1) = v43;
      *(void *)&long long v109 = v40;
      uint64_t v45 = sub_1B6C0AB84(v42, &v109, v11, a4, a5);
      uint64_t v47 = v46;
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
      swift_bridgeObjectRelease();
      *(void *)&v113[0] = v45;
      *((void *)&v113[0] + 1) = v47;
      sub_1B6E31948();
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1B6E8F480;
      uint64_t v49 = v48 | 0x1000000000000000;
      *((void *)&v110 + 1) = v44;
      *(void *)&long long v109 = *((void *)&v40 + 1);
    }
    else
    {
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = 3;
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_1B6E8DAE0;
      *(void *)(v50 + 24) = v51 | 0x1000000000000000;
      char v52 = sub_1B69B18E4(v50 | 0x1000000000000000, a1);
      swift_release();
      if (v52)
      {
        sub_1B62CAAD8(a2, (uint64_t)v113);
        type metadata accessor for simd_float3x3(0);
        swift_dynamicCast();
        long long v99 = v109;
        long long v101 = v110;
        long long v105 = v111;
        uint64_t v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = xmmword_1B6E8DAE0;
        uint64_t v54 = v53 | 0x1000000000000000;
        sub_1B62AA4B8(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        uint64_t v56 = v55;
        *((void *)&v110 + 1) = v55;
        *(void *)&long long v109 = swift_allocObject();
        *(_OWORD *)(v109 + 16) = v99;
        uint64_t v57 = sub_1B6C0AB84(v54, &v109, v11, a4, a5);
        uint64_t v59 = v58;
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        swift_bridgeObjectRelease();
        *(void *)&v113[0] = v57;
        *((void *)&v113[0] + 1) = v59;
        sub_1B6E31948();
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_1B6E8DAE0;
        uint64_t v61 = v60 | 0x1000000000000000;
        *((void *)&v110 + 1) = v56;
        *(void *)&long long v109 = swift_allocObject();
        *(_OWORD *)(v109 + 16) = v101;
        sub_1B6C0AB84(v61, &v109, v11, a4, a5);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v62 = swift_allocObject();
        long long v63 = xmmword_1B6E8DAE0;
      }
      else
      {
        uint64_t v64 = swift_allocObject();
        *(void *)(v64 + 16) = 4;
        uint64_t v65 = swift_allocObject();
        *(_OWORD *)(v65 + 16) = xmmword_1B6E8DAD0;
        *(void *)(v64 + 24) = v65 | 0x1000000000000000;
        char v66 = sub_1B69B18E4(v64 | 0x1000000000000000, a1);
        swift_release();
        if ((v66 & 1) == 0)
        {
          if (a1 == 0x8000000000000028)
          {
            sub_1B62CAAD8(a2, (uint64_t)&v109);
            type metadata accessor for simd_quatf(0);
            swift_dynamicCast();
            long long v106 = v113[0];
            uint64_t v78 = swift_allocObject();
            *(_OWORD *)(v78 + 16) = xmmword_1B6E8DAD0;
            uint64_t v79 = v78 | 0x1000000000000000;
            sub_1B62AA4B8(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
            *((void *)&v110 + 1) = v80;
            *(void *)&long long v109 = swift_allocObject();
            *(_OWORD *)(v109 + 16) = v106;
            uint64_t v10 = sub_1B6C0AB84(v79, &v109, v11, a4, a5);
            swift_release();
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
            return v10;
          }
          uint64_t v81 = swift_allocObject();
          *(_OWORD *)(v81 + 16) = xmmword_1B6E9A690;
          char v82 = sub_1B69B18E4(v81 | 0x1000000000000000, a1);
          swift_release();
          if (v82)
          {
            sub_1B62CAAD8(a2, (uint64_t)&v109);
            sub_1B62AA4B8(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
            swift_dynamicCast();
            long long v107 = v113[0];
            *(void *)&long long v109 = sub_1B6E33098();
            *((void *)&v109 + 1) = v83;
            sub_1B6E31948();
            LODWORD(v113[0]) = DWORD1(v107);
            sub_1B6E33098();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            LODWORD(v113[0]) = DWORD2(v107);
            sub_1B6E33098();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          uint64_t v84 = swift_allocObject();
          *(void *)(v84 + 16) = 0x8000000000000050;
          char v85 = sub_1B69B18E4(v84 | 0x2000000000000000, a1);
          swift_release();
          if ((v85 & 1) == 0)
          {
            uint64_t v91 = swift_allocObject();
            *(void *)(v91 + 16) = 0x8000000000000040;
            char v92 = sub_1B69B18E4(v91 | 0x2000000000000000, a1);
            swift_release();
            if ((v92 & 1) == 0)
            {
              if (v9 == 0x8000000000000000 && (a1 == 0x8000000000000080 || a1 == 0x8000000000000070))
              {
                *(void *)&long long v109 = 0;
                *((void *)&v109 + 1) = 0xE000000000000000;
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                sub_1B6E31948();
                goto LABEL_21;
              }
              *(void *)&long long v109 = 0;
              *((void *)&v109 + 1) = 0xE000000000000000;
              sub_1B6E32B18();
LABEL_18:
              *(void *)&long long v109 = sub_1B69B25B0(v11, a1);
              *((void *)&v109 + 1) = v31;
              sub_1B6E31948();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
LABEL_21:
              sub_1B6E31948();
              return v109;
            }
            sub_1B62CAAD8(a2, (uint64_t)&v109);
            uint64_t v93 = MEMORY[0x1E4FBC1C8];
            sub_1B68E2CC0(0, (unint64_t *)&unk_1EB980430);
            swift_dynamicCast();
            uint64_t v94 = *((void *)&v113[0] + 1);
            *((void *)&v110 + 1) = v93;
            *(void *)&long long v109 = *(void *)&v113[0];
            uint64_t v95 = sub_1B6C0AB84(0x8000000000000040, &v109, v11, a4, a5);
            uint64_t v97 = v96;
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
            swift_bridgeObjectRelease();
            *(void *)&v113[0] = v95;
            *((void *)&v113[0] + 1) = v97;
            sub_1B6E31948();
            *((void *)&v110 + 1) = v93;
            *(void *)&long long v109 = v94;
            unint64_t v30 = 0x8000000000000040;
            goto LABEL_16;
          }
          sub_1B62CAAD8(a2, (uint64_t)&v109);
          uint64_t v86 = MEMORY[0x1E4FBB470];
          sub_1B68E2CC0(0, (unint64_t *)&qword_1EB980410);
          swift_dynamicCast();
          int v87 = DWORD1(v113[0]);
          *((void *)&v110 + 1) = v86;
          LODWORD(v109) = v113[0];
          uint64_t v88 = sub_1B6C0AB84(0x8000000000000050, &v109, v11, a4, a5);
          uint64_t v90 = v89;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
          swift_bridgeObjectRelease();
          *(void *)&v113[0] = v88;
          *((void *)&v113[0] + 1) = v90;
          sub_1B6E31948();
          *((void *)&v110 + 1) = v86;
          LODWORD(v109) = v87;
LABEL_15:
          unint64_t v30 = 0x8000000000000050;
LABEL_16:
          sub_1B6C0AB84(v30, &v109, v11, a4, a5);
LABEL_17:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
        sub_1B62CAAD8(a2, (uint64_t)v113);
        type metadata accessor for simd_float4x4(0);
        swift_dynamicCast();
        long long v98 = v109;
        long long v100 = v110;
        long long v102 = v111;
        long long v105 = v112;
        uint64_t v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = xmmword_1B6E8DAD0;
        uint64_t v68 = v67 | 0x1000000000000000;
        sub_1B62AA4B8(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        uint64_t v56 = v69;
        *((void *)&v110 + 1) = v69;
        *(void *)&long long v109 = swift_allocObject();
        *(_OWORD *)(v109 + 16) = v98;
        uint64_t v70 = sub_1B6C0AB84(v68, &v109, v11, a4, a5);
        uint64_t v72 = v71;
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        swift_bridgeObjectRelease();
        *(void *)&v113[0] = v70;
        *((void *)&v113[0] + 1) = v72;
        sub_1B6E31948();
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1B6E8DAD0;
        uint64_t v74 = v73 | 0x1000000000000000;
        *((void *)&v110 + 1) = v56;
        *(void *)&long long v109 = swift_allocObject();
        *(_OWORD *)(v109 + 16) = v100;
        sub_1B6C0AB84(v74, &v109, v11, a4, a5);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v75 = swift_allocObject();
        *(_OWORD *)(v75 + 16) = xmmword_1B6E8DAD0;
        uint64_t v76 = v75 | 0x1000000000000000;
        *((void *)&v110 + 1) = v56;
        *(void *)&long long v109 = swift_allocObject();
        *(_OWORD *)(v109 + 16) = v102;
        sub_1B6C0AB84(v76, &v109, v11, a4, a5);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v62 = swift_allocObject();
        long long v63 = xmmword_1B6E8DAD0;
      }
      *(_OWORD *)(v62 + 16) = v63;
      uint64_t v77 = v62 | 0x1000000000000000;
      *((void *)&v110 + 1) = v56;
      *(void *)&long long v109 = swift_allocObject();
      *(_OWORD *)(v109 + 16) = v105;
      uint64_t v49 = v77;
    }
    sub_1B6C0AB84(v49, &v109, v11, a4, a5);
    swift_release();
    goto LABEL_17;
  }
  sub_1B62CAAD8(a2, (uint64_t)&v109);
  swift_dynamicCast();
  if (LOBYTE(v113[0])) {
    return 1702195828;
  }
  else {
    return 0x65736C6166;
  }
}

uint64_t sub_1B6C0BFD0()
{
  void (*v1)(uint64_t *__return_ptr, unint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  void v14[6];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, unint64_t))(*(void *)v0 + 152);
  ((void (*)(void *__return_ptr))v1)(v14);
  uint64_t v2 = v14[0];
  uint64_t v31 = v14[1];
  uint64_t v32 = v14[0];
  sub_1B62D8C3C((uint64_t)&v31);
  unint64_t v30 = v14[2];
  sub_1B62D8C3C((uint64_t)&v30);
  uint64_t v29 = v14[3];
  sub_1B62D8C3C((uint64_t)&v29);
  uint64_t v28 = v14[4];
  sub_1B62D8C3C((uint64_t)&v28);
  uint64_t v27 = v14[5];
  sub_1B62D8C3C((uint64_t)&v27);
  if (!*(void *)(v2 + 16))
  {
    uint64_t v12 = &v32;
LABEL_7:
    sub_1B62D8C3C((uint64_t)v12);
    goto LABEL_8;
  }
  uint64_t v3 = *(void *)(v2 + 32);
  sub_1B66456F8(v3);
  sub_1B62D8C3C((uint64_t)&v32);
  int v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0x8000000000000008;
  char v5 = v4 | 0x6000000000000000;
  sub_1B66456F8(v3);
  LOBYTE(v5) = sub_1B697351C(v3, v5);
  swift_release();
  sub_1B6645740(v3);
  uint64_t v6 = sub_1B6645740(v3);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    uint64_t v11 = 0;
    return v11 & 1;
  }
  v1(&v15, v6);
  char v7 = v16;
  uint64_t v26 = v16;
  char v25 = v15;
  sub_1B62D8C3C((uint64_t)&v25);
  uint64_t v24 = v17;
  sub_1B62D8C3C((uint64_t)&v24);
  uint64_t v23 = v18;
  sub_1B62D8C3C((uint64_t)&v23);
  uint64_t v22 = v19;
  sub_1B62D8C3C((uint64_t)&v22);
  uint64_t v21 = v20;
  sub_1B62D8C3C((uint64_t)&v21);
  if (!*(void *)(v7 + 16))
  {
    uint64_t v12 = &v26;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v7 + 32);
  sub_1B66456F8(v8);
  sub_1B62D8C3C((uint64_t)&v26);
  unint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x8000000000000008;
  uint64_t v10 = v9 | 0x6000000000000000;
  sub_1B66456F8(v8);
  uint64_t v11 = sub_1B697351C(v8, v10);
  swift_release();
  sub_1B6645740(v8);
  sub_1B6645740(v8);
  return v11 & 1;
}

uint64_t sub_1B6C0C1E8()
{
  void (*v1)(uint64_t *__return_ptr, unint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void v13[6];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, unint64_t))(*(void *)v0 + 152);
  ((void (*)(void *__return_ptr))v1)(v13);
  uint64_t v2 = v13[0];
  unint64_t v30 = v13[1];
  uint64_t v31 = v13[0];
  sub_1B62D8C3C((uint64_t)&v30);
  uint64_t v29 = v13[2];
  sub_1B62D8C3C((uint64_t)&v29);
  uint64_t v28 = v13[3];
  sub_1B62D8C3C((uint64_t)&v28);
  uint64_t v27 = v13[4];
  sub_1B62D8C3C((uint64_t)&v27);
  uint64_t v26 = v13[5];
  sub_1B62D8C3C((uint64_t)&v26);
  if (!*(void *)(v2 + 16))
  {
    sub_1B62D8C3C((uint64_t)&v31);
    goto LABEL_6;
  }
  uint64_t v3 = *(void *)(v2 + 32);
  sub_1B66456F8(v3);
  sub_1B62D8C3C((uint64_t)&v31);
  int v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0x8000000000000008;
  char v5 = v4 | 0x6000000000000000;
  sub_1B66456F8(v3);
  LOBYTE(v5) = sub_1B697351C(v3, v5);
  swift_release();
  sub_1B6645740(v3);
  uint64_t v6 = sub_1B6645740(v3);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    uint64_t v11 = 0;
    return v11 & 1;
  }
  v1(&v14, v6);
  char v7 = v15;
  char v25 = v15;
  uint64_t v24 = v14;
  sub_1B62D8C3C((uint64_t)&v24);
  uint64_t v23 = v16;
  sub_1B62D8C3C((uint64_t)&v23);
  uint64_t v22 = v17;
  sub_1B62D8C3C((uint64_t)&v22);
  uint64_t v21 = v18;
  sub_1B62D8C3C((uint64_t)&v21);
  uint64_t v20 = v19;
  sub_1B62D8C3C((uint64_t)&v20);
  if (*(void *)(v7 + 16))
  {
    uint64_t v8 = *(void *)(v7 + 32);
    sub_1B66456F8(v8);
    sub_1B62D8C3C((uint64_t)&v25);
    unint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0x8000000000000008;
    uint64_t v10 = v9 | 0x6000000000000000;
    sub_1B66456F8(v8);
    LOBYTE(v10) = sub_1B697351C(v8, v10);
    swift_release();
    sub_1B6645740(v8);
    sub_1B6645740(v8);
    uint64_t v11 = v10 ^ 1;
  }
  else
  {
    sub_1B62D8C3C((uint64_t)&v25);
    uint64_t v11 = 1;
  }
  return v11 & 1;
}

uint64_t sub_1B6C0C40C()
{
  void (*v1)(uint64_t *__return_ptr, unint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void v13[6];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, unint64_t))(*(void *)v0 + 152);
  ((void (*)(void *__return_ptr))v1)(v13);
  uint64_t v2 = v13[0];
  unint64_t v30 = v13[1];
  uint64_t v31 = v13[0];
  sub_1B62D8C3C((uint64_t)&v30);
  uint64_t v29 = v13[2];
  sub_1B62D8C3C((uint64_t)&v29);
  uint64_t v28 = v13[3];
  sub_1B62D8C3C((uint64_t)&v28);
  uint64_t v27 = v13[4];
  sub_1B62D8C3C((uint64_t)&v27);
  uint64_t v26 = v13[5];
  sub_1B62D8C3C((uint64_t)&v26);
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = *(void *)(v2 + 32);
    sub_1B66456F8(v3);
    sub_1B62D8C3C((uint64_t)&v31);
    int v4 = swift_allocObject();
    *(void *)(v4 + 16) = 0x8000000000000008;
    char v5 = v4 | 0x6000000000000000;
    sub_1B66456F8(v3);
    LOBYTE(v5) = sub_1B697351C(v3, v5);
    swift_release();
    sub_1B6645740(v3);
    uint64_t v6 = sub_1B6645740(v3);
    if (v5) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v6 = sub_1B62D8C3C((uint64_t)&v31);
  }
  v1(&v14, v6);
  char v7 = v15;
  char v25 = v15;
  uint64_t v24 = v14;
  sub_1B62D8C3C((uint64_t)&v24);
  uint64_t v23 = v16;
  sub_1B62D8C3C((uint64_t)&v23);
  uint64_t v22 = v17;
  sub_1B62D8C3C((uint64_t)&v22);
  uint64_t v21 = v18;
  sub_1B62D8C3C((uint64_t)&v21);
  uint64_t v20 = v19;
  sub_1B62D8C3C((uint64_t)&v20);
  if (!*(void *)(v7 + 16))
  {
    sub_1B62D8C3C((uint64_t)&v25);
LABEL_8:
    uint64_t v11 = 0;
    return v11 & 1;
  }
  uint64_t v8 = *(void *)(v7 + 32);
  sub_1B66456F8(v8);
  sub_1B62D8C3C((uint64_t)&v25);
  unint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x8000000000000008;
  uint64_t v10 = v9 | 0x6000000000000000;
  sub_1B66456F8(v8);
  uint64_t v11 = sub_1B697351C(v8, v10);
  swift_release();
  sub_1B6645740(v8);
  sub_1B6645740(v8);
  return v11 & 1;
}

void *sub_1B6C0C628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  sub_1B66506CC(a1, (uint64_t)v9);
  char v7 = (void *)((char *)v6 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
  sub_1B66506CC((uint64_t)v9, (uint64_t)v6 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  void *v7 = a2;
  v7[1] = a3;
  _OWORD v6[2] = MEMORY[0x1E4FBC860];
  void v6[3] = 0;
  void v6[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)v9);
  sub_1B6650728(a1);
  return v6;
}

uint64_t sub_1B6C0C6E4()
{
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v1, v2);
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v1);
}

uint64_t sub_1B6C0C780()
{
  uint64_t result = sub_1B6E33A28();
  if (!v0)
  {
    sub_1B62C14BC(v2, v2[3]);
    sub_1B6E33518();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
  }
  return result;
}

void sub_1B6C0C824()
{
}

uint64_t sub_1B6C0C854()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
  sub_1B6E33918();
  sub_1B684E1C8(v3);
  sub_1B6E33928();
  uint64_t v4 = sub_1B6E33988();
  sub_1B6E33918();
  sub_1B6E33928();
  if (v4 == sub_1B6E33988())
  {
    unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
    sub_1B67C52A4(v5);
    sub_1B69B0F8C(v5);
    sub_1B678FC34(v5);
    swift_bridgeObjectRetain();
    sub_1B67BB63C();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1B6E32518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6A04144();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6;
  }
  else
  {
    sub_1B684E1EC(*v2);
    swift_bridgeObjectRetain();
    sub_1B67BB63C();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1B6E32518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6A04144();
    swift_bridgeObjectRelease();
    uint64_t v9 = v7;
  }
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B6C0CA9C()
{
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  sub_1B67C52A4(v2);
  sub_1B69B0F8C(v2);
  sub_1B678FC34(v2);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B62CAAD8(v1, (uint64_t)v4);
  sub_1B6E32B18();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
  return v5;
}

double sub_1B6C0CB68@<D0>(_OWORD *a1@<X8>)
{
  sub_1B638611C(0, &qword_1E9DD1FD0, (uint64_t)&type metadata for AnyType, MEMORY[0x1E4FBBE00]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(void *)(inited + 32) = v4;
  sub_1B67C52A4(v4);
  sub_1B682AF48(inited, v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  long long v5 = v7[1];
  *a1 = v7[0];
  a1[1] = v5;
  double result = *(double *)&v8;
  a1[2] = v8;
  return result;
}

uint64_t sub_1B6C0CC2C()
{
  return type metadata accessor for BuiltinNode(0);
}

uint64_t type metadata accessor for BuiltinNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6E80);
}

uint64_t sub_1B6C0CC54()
{
  return 7104846;
}

double sub_1B6C0CC64@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B69CACD8((unint64_t)&unk_1F0FA2AB8, a1);
}

void *sub_1B6C0CC74()
{
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  swift_release();
  return v0;
}

uint64_t sub_1B6C0CCD8()
{
  return type metadata accessor for NilNode(0);
}

uint64_t type metadata accessor for NilNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6E90);
}

uint64_t sub_1B6C0CD00()
{
  return 0x746963696C706D49;
}

uint64_t sub_1B6C0CD20()
{
  return type metadata accessor for ImplicitNilNode(0);
}

uint64_t type metadata accessor for ImplicitNilNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6EA0);
}

uint64_t sub_1B6C0CD48()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX14NoopReturnNode_type);
  sub_1B67C52A4(v1);
  sub_1B69B0F8C(v1);
  sub_1B678FC34(v1);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return 0x75746552706F6F4ELL;
}

unint64_t sub_1B6C0CDDC@<X0>(uint64_t *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  uint64_t v4 = swift_allocObject();
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX14NoopReturnNode_type);
  *(void *)(v4 + 16) = v5;
  *(void *)(v3 + 32) = v4 | 0x6000000000000000;
  unint64_t result = sub_1B67C52A4(v5);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *a1 = v3;
  a1[1] = v7;
  a1[2] = (uint64_t)&unk_1F0F64A70;
  a1[3] = v7;
  a1[4] = v7;
  a1[5] = v7;
  return result;
}

void *sub_1B6C0CE9C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  unint64_t v3 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX14NoopReturnNode_type);
  *(void *)(v2 + OBJC_IVAR____TtC3VFX14NoopReturnNode_type) = v3;
  sub_1B67C52A4(v3);
  return sub_1B682A2AC(a1);
}

void sub_1B6C0CEEC()
{
}

unint64_t sub_1B6C0CF1C()
{
  return sub_1B678FC34(*(void *)(v0 + OBJC_IVAR____TtC3VFX14NoopReturnNode_type));
}

uint64_t sub_1B6C0CF2C()
{
  return sub_1B6C0E9C0(&OBJC_IVAR____TtC3VFX14NoopReturnNode_type);
}

uint64_t sub_1B6C0CF38()
{
  return type metadata accessor for NoopReturnNode(0);
}

uint64_t type metadata accessor for NoopReturnNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6EB0);
}

uint64_t sub_1B6C0CF60()
{
  return sub_1B6C10504();
}

uint64_t sub_1B6C0CF6C(void *a1)
{
  return sub_1B6C0EAD4(a1);
}

unint64_t sub_1B6C0CF8C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C0EB74(a1, a2, a3, &OBJC_IVAR____TtC3VFX14NoopReturnNode_type);
}

uint64_t sub_1B6C0CFAC()
{
  return 0x75746552706F6F4ELL;
}

uint64_t sub_1B6C0CFC8@<X0>(uint64_t *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v2 + 32) = result | 0x4000000000000000;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *a1 = v2;
  a1[1] = v4;
  a1[2] = (uint64_t)&unk_1F0F720D8;
  a1[3] = v4;
  a1[4] = v4;
  a1[5] = v4;
  return result;
}

uint64_t sub_1B6C0D06C()
{
  return type metadata accessor for NoopReturnAnyNode(0);
}

uint64_t type metadata accessor for NoopReturnAnyNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6EC0);
}

uint64_t sub_1B6C0D094()
{
  return 0x30252964696F7628;
}

uint64_t sub_1B6C0D0AC()
{
  return 0x69746341706F6F4ELL;
}

uint64_t sub_1B6C0D0C8@<X0>(uint64_t *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76B30;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000008;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0x8000000000000050;
  *(void *)(v2 + 40) = v4 | 0x6000000000000000;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000008;
  *(void *)(v5 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v5;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F64A10;
  a1[3] = v7;
  a1[4] = v7;
  a1[5] = v7;
  return result;
}

uint64_t sub_1B6C0D1E8()
{
  return type metadata accessor for NoopActionNode(0);
}

uint64_t type metadata accessor for NoopActionNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6ED0);
}

uint64_t sub_1B6C0D210()
{
  return 0x31252964696F7628;
}

void *sub_1B6C0D228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = (void *)((char *)v6 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
  sub_1B66506CC(a1, (uint64_t)v6 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  void *v7 = a2;
  v7[1] = a3;
  _OWORD v6[2] = MEMORY[0x1E4FBC860];
  void v6[3] = 0;
  void v6[4] = 0;
  sub_1B6E31108();
  sub_1B6650728(a1);
  return v6;
}

void *sub_1B6C0D2C8(void *a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)a1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder, v2 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)(v2 + v3) = *(_OWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
  return sub_1B682A2AC(a1);
}

uint64_t sub_1B6C0D334()
{
  return sub_1B6650728(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
}

uint64_t sub_1B6C0D344()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B6650728(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);

  return swift_deallocClassInstance();
}

uint64_t sub_1B6C0D408()
{
  return type metadata accessor for ConstantNode(0);
}

uint64_t type metadata accessor for ConstantNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6EE0);
}

uint64_t sub_1B6C0D430()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6C0D47C(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B66506CC(v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder, (uint64_t)v7);
  sub_1B62C550C((uint64_t)v8, v9);
  sub_1B6C10904();
  sub_1B6E332B8();
  sub_1B6650728((uint64_t)v7);
  if (!v2)
  {
    uint64_t v3 = (_OWORD *)(v1 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
    sub_1B6E33918();
    sub_1B684E1C8(v4);
    sub_1B6E33928();
    uint64_t v5 = sub_1B6E33988();
    sub_1B6E33918();
    sub_1B6E33928();
    if (v5 != sub_1B6E33988())
    {
      v7[0] = *v3;
      sub_1B62C550C((uint64_t)v8, v9);
      sub_1B69137B4();
      sub_1B6E332B8();
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
}

uint64_t sub_1B6C0D5E8(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  uint64_t result = sub_1B6E33A18();
  if (!v2)
  {
    sub_1B62C550C((uint64_t)v7, v8);
    sub_1B6C10860();
    sub_1B6E33168();
    sub_1B6C108B4(v6[0].i64, v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
    sub_1B62C550C((uint64_t)v7, v8);
    sub_1B6913610();
    sub_1B6E330E8();
    int32x2_t v4 = vdup_n_s32(v6[0].i64[0] == 25);
    v5.i64[0] = v4.u32[0];
    v5.i64[1] = v4.u32[1];
    *(int8x16_t *)(v1 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic) = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v5, 0x3FuLL)), (int8x16_t)xmmword_1B6E50D30, v6[0]);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1B6C0D730(void *a1)
{
  return sub_1B6C0D47C(a1);
}

uint64_t sub_1B6C0D748(void *a1)
{
  return sub_1B6C0D5E8(a1);
}

unint64_t sub_1B6C0D760@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  a4[4] = a3;
  uint64_t v8 = sub_1B62C12C4((uint64_t *)a4 + 1);
  (*(void (**)(uint64_t *, uint64_t, unint64_t))(*(void *)(a3 - 8) + 16))(v8, a2, a3);
  *a4 = a1;

  return sub_1B67C52A4(a1);
}

unint64_t sub_1B6C0D7E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C550C((uint64_t)v51, v52);
  sub_1B698F4B8();
  sub_1B6E33168();
  unint64_t v6 = v45;
  unint64_t v53 = v45;
  sub_1B67C52A4(v45);
  sub_1B69B27D0(v45);
  if (!v7)
  {
    *(void *)&long long v45 = 0;
    *((void *)&v45 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E31948();
    *(void *)&long long v49 = v6;
    sub_1B6E32B18();
    sub_1B678FC34(v6);
    sub_1B67CD358();
    swift_allocError();
    *(_OWORD *)uint64_t v10 = v45;
    *(unsigned char *)(v10 + 16) = 0;
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v51);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return sub_1B678FC34(v53);
  }
  type metadata accessor for simd_quatf(0);
  uint64_t v9 = v8;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B62ADC54();
    sub_1B6E33168();
    *((void *)&v46 + 1) = v9;
    *(void *)&long long v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v49;
LABEL_15:
    uint64_t v17 = &v45;
LABEL_16:
    sub_1B62B57A8(v17, &v54);
LABEL_17:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v51);
    sub_1B66506CC((uint64_t)&v53, a2);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return sub_1B6650728((uint64_t)&v53);
  }
  type metadata accessor for simd_float2x2(0);
  uint64_t v12 = v11;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B6792244();
    sub_1B6E33168();
    *((void *)&v46 + 1) = v12;
    long long v45 = v49;
    goto LABEL_15;
  }
  type metadata accessor for simd_float2x3(0);
  uint64_t v14 = v13;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B67921F0();
LABEL_14:
    sub_1B6E33168();
    long long v41 = v50;
    *((void *)&v46 + 1) = v14;
    uint64_t v16 = swift_allocObject();
    *(void *)&long long v45 = v16;
    *(_OWORD *)(v16 + 16) = v49;
    *(_OWORD *)(v16 + 32) = v41;
    goto LABEL_15;
  }
  type metadata accessor for simd_float2x4(0);
  uint64_t v14 = v15;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B679219C();
    goto LABEL_14;
  }
  type metadata accessor for simd_float3x2(0);
  uint64_t v19 = v18;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B6792148();
    sub_1B6E33168();
    *((void *)&v46 + 1) = v19;
    long long v45 = v49;
    *(void *)&long long v46 = v50;
    goto LABEL_15;
  }
  type metadata accessor for simd_float3x3(0);
  uint64_t v21 = v20;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B67920F4();
LABEL_24:
    sub_1B6E33168();
    long long v42 = v46;
    long long v40 = v47;
    *((void *)&v50 + 1) = v21;
    uint64_t v23 = (_OWORD *)swift_allocObject();
    *(void *)&long long v49 = v23;
    v23[1] = v45;
    v23[2] = v42;
    id v23[3] = v40;
LABEL_25:
    uint64_t v17 = &v49;
    goto LABEL_16;
  }
  type metadata accessor for simd_float3x4(0);
  uint64_t v21 = v22;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B67920A0();
    goto LABEL_24;
  }
  type metadata accessor for simd_float4x2(0);
  uint64_t v25 = v24;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B679204C();
    sub_1B6E33168();
    long long v26 = v50;
    *((void *)&v46 + 1) = v25;
    uint64_t v27 = swift_allocObject();
    *(void *)&long long v45 = v27;
    *(_OWORD *)(v27 + 16) = v49;
    *(_OWORD *)(v27 + 32) = v26;
    goto LABEL_15;
  }
  type metadata accessor for simd_float4x3(0);
  uint64_t v29 = v28;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B6791FF8();
LABEL_32:
    sub_1B6E33168();
    long long v39 = v46;
    long long v43 = v48;
    long long v44 = v47;
    *((void *)&v50 + 1) = v29;
    uint64_t v31 = (_OWORD *)swift_allocObject();
    *(void *)&long long v49 = v31;
    v31[1] = v45;
    v31[2] = v39;
    v31[3] = v44;
    v31[4] = v43;
    goto LABEL_25;
  }
  type metadata accessor for simd_float4x4(0);
  uint64_t v29 = v30;
  if (swift_dynamicCastMetatype())
  {
    sub_1B678FC34(v45);
    sub_1B62C550C((uint64_t)v51, v52);
    sub_1B62B18DC();
    goto LABEL_32;
  }
  sub_1B69B27D0(v45);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = swift_conformsToProtocol2();
    if (v34) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 0;
    }
    if (!v34) {
      uint64_t v33 = 0;
    }
    if (v33)
    {
      sub_1B678FC34(v45);
      *((void *)&v46 + 1) = v33;
      *(void *)&long long v47 = v35;
      sub_1B62C12C4((uint64_t *)&v45);
      sub_1B62BFEA4((uint64_t)v51);
      uint64_t v36 = *((void *)&v46 + 1);
      uint64_t v37 = sub_1B62C14BC(&v45, *((uint64_t *)&v46 + 1));
      uint64_t v55 = v36;
      uint64_t v38 = sub_1B62C12C4((uint64_t *)&v54);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v38, v37, v36);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v45);
      goto LABEL_17;
    }
    *(void *)&long long v45 = 0;
    *((void *)&v45 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    *(void *)&long long v49 = v6;
    sub_1B6E32B18();
    sub_1B678FC34(v6);
    sub_1B6E31948();
  }
  else
  {
    *(void *)&long long v45 = 0;
    *((void *)&v45 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E31948();
    *(void *)&long long v49 = v6;
    sub_1B6E32B18();
  }
  unint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6C0E0F8(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  *(void *)&long long v24 = *v1;
  sub_1B62C550C((uint64_t)v33, v34);
  sub_1B698F244();
  sub_1B6E332B8();
  if (!v2)
  {
    uint64_t v4 = (uint64_t)(v1 + 1);
    sub_1B62CAAD8((uint64_t)(v3 + 1), (uint64_t)v28);
    type metadata accessor for simd_quatf(0);
    if (swift_dynamicCast())
    {
      uint64_t v31 = &type metadata for QuaternionFCoder;
      unint64_t v32 = sub_1B67AF070();
      *(void *)&long long v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v24;
      goto LABEL_11;
    }
    type metadata accessor for simd_float2x2(0);
    if (swift_dynamicCast())
    {
      uint64_t v31 = &type metadata for Float2x2Coder;
      unint64_t v32 = sub_1B6792538();
      long long v29 = v24;
      goto LABEL_11;
    }
    type metadata accessor for simd_float2x3(0);
    if (swift_dynamicCast())
    {
      long long v17 = v25;
      long long v20 = v24;
      uint64_t v31 = &type metadata for Float2x3Coder;
      unint64_t v5 = sub_1B67924E4();
    }
    else
    {
      type metadata accessor for simd_float2x4(0);
      if (!swift_dynamicCast())
      {
        type metadata accessor for simd_float3x2(0);
        if (swift_dynamicCast())
        {
          uint64_t v31 = &type metadata for Float3x2Coder;
          unint64_t v32 = sub_1B679243C();
          long long v29 = v24;
          uint64_t v30 = v25;
          goto LABEL_11;
        }
        type metadata accessor for simd_float3x3(0);
        if (swift_dynamicCast())
        {
          long long v18 = v25;
          long long v21 = v24;
          long long v15 = v26;
          uint64_t v31 = &type metadata for Float3x3Coder;
          unint64_t v8 = sub_1B67923E8();
        }
        else
        {
          type metadata accessor for simd_float3x4(0);
          if (!swift_dynamicCast())
          {
            type metadata accessor for simd_float4x2(0);
            if (swift_dynamicCast())
            {
              long long v10 = v25;
              uint64_t v31 = &type metadata for Float4x2Coder;
              unint64_t v32 = sub_1B6792340();
              uint64_t v11 = swift_allocObject();
              *(void *)&long long v29 = v11;
              *(_OWORD *)(v11 + 16) = v24;
              *(_OWORD *)(v11 + 32) = v10;
            }
            else
            {
              type metadata accessor for simd_float4x3(0);
              if (swift_dynamicCast())
              {
                long long v19 = v25;
                long long v22 = v24;
                long long v14 = v27;
                long long v16 = v26;
                uint64_t v31 = &type metadata for Float4x3Coder;
                unint64_t v12 = sub_1B67922EC();
              }
              else
              {
                type metadata accessor for simd_float4x4(0);
                if (!swift_dynamicCast())
                {
                  sub_1B62CAAD8(v4, (uint64_t)v23);
                  sub_1B62C5560(0, &qword_1E9DD7010);
                  swift_dynamicCast();
                  sub_1B62C15C4(&v24, (uint64_t)&v29);
                  goto LABEL_11;
                }
                long long v19 = v25;
                long long v22 = v24;
                long long v14 = v27;
                long long v16 = v26;
                uint64_t v31 = &type metadata for Float4x4Coder;
                unint64_t v12 = sub_1B6792298();
              }
              unint64_t v32 = v12;
              uint64_t v13 = (_OWORD *)swift_allocObject();
              *(void *)&long long v29 = v13;
              v13[1] = v22;
              void v13[2] = v19;
              _OWORD v13[3] = v16;
              v13[4] = v14;
            }
LABEL_11:
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
            sub_1B62C14BC(&v29, (uint64_t)v31);
            sub_1B6AB3B8C((uint64_t)v33);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v29);
            return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
          }
          long long v18 = v25;
          long long v21 = v24;
          long long v15 = v26;
          uint64_t v31 = &type metadata for Float3x4Coder;
          unint64_t v8 = sub_1B6792394();
        }
        unint64_t v32 = v8;
        uint64_t v9 = (_OWORD *)swift_allocObject();
        *(void *)&long long v29 = v9;
        v9[1] = v21;
        v9[2] = v18;
        v9[3] = v15;
        goto LABEL_11;
      }
      long long v17 = v25;
      long long v20 = v24;
      uint64_t v31 = &type metadata for Float2x4Coder;
      unint64_t v5 = sub_1B6792490();
    }
    unint64_t v32 = v5;
    uint64_t v6 = swift_allocObject();
    *(void *)&long long v29 = v6;
    *(_OWORD *)(v6 + 16) = v20;
    *(_OWORD *)(v6 + 32) = v17;
    goto LABEL_11;
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
}

unint64_t sub_1B6C0E618@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6C0D7E8(a1, a2);
}

uint64_t sub_1B6C0E630(void *a1)
{
  return sub_1B6C0E0F8(a1);
}

uint64_t sub_1B6C0E648()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  if (v1 >> 60 == 4)
  {
    if (*(unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) - 1 < 3) {
      return 0;
    }
    return 3;
  }
  if (v1 >> 60 != 8) {
    return 3;
  }
  *((void *)&v2 + 1) = *(void *)(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(void *)&long long v2 = v1 + 0x7FFFFFFFFFFFFF98;
  uint64_t v3 = 3;
  uint64_t result = 0;
  switch((unint64_t)(v2 >> 3))
  {
    case 0uLL:
      return result;
    case 1uLL:
    case 3uLL:
    case 5uLL:
      return 1;
    default:
      return v3;
  }
  return result;
}

uint64_t sub_1B6C0E6F4(char a1)
{
  uint64_t v2 = *v1;
  char v3 = a1 & 1;
  unint64_t v4 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  sub_1B62CAAD8((uint64_t)v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)v7);
  sub_1B67C52A4(v4);
  uint64_t v5 = sub_1B6C0AB84(v4, (uint64_t)v7, v3, v2, (uint64_t)&off_1F0F59668);
  sub_1B678FC34(v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  return v5;
}

unint64_t sub_1B6C0E7AC()
{
  return 0xD000000000000010;
}

uint64_t sub_1B6C0E7C8()
{
  return type metadata accessor for ImplicitConstantNode(0);
}

uint64_t type metadata accessor for ImplicitConstantNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6EF0);
}

uint64_t sub_1B6C0E7F4()
{
  return 7630660;
}

uint64_t sub_1B6C0E804@<X0>(uint64_t *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v2 + 32) = v3 | 0x4000000000000000;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v4 + 32) = result | 0x4000000000000000;
  *a1 = v2;
  a1[1] = v4;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0FA28E8;
  a1[3] = v6;
  a1[4] = v6;
  a1[5] = v6;
  return result;
}

uint64_t sub_1B6C0E8FC()
{
  return type metadata accessor for DotNode(0);
}

uint64_t type metadata accessor for DotNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F00);
}

void *sub_1B6C0E924(void *a1)
{
  uint64_t v2 = swift_allocObject();
  unint64_t v3 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  *(void *)(v2 + OBJC_IVAR____TtC3VFX12_ComposeNode_type) = v3;
  sub_1B67C52A4(v3);
  return sub_1B682A2AC(a1);
}

void sub_1B6C0E974()
{
}

unint64_t sub_1B6C0E9A4()
{
  return sub_1B678FC34(*(void *)(v0 + OBJC_IVAR____TtC3VFX12_ComposeNode_type));
}

uint64_t sub_1B6C0E9B4()
{
  return sub_1B6C0E9C0(&OBJC_IVAR____TtC3VFX12_ComposeNode_type);
}

uint64_t sub_1B6C0E9C0(void *a1)
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v1 + 24));
  uint64_t v3 = v1 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v4 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1B678FC34(*(void *)(v1 + *a1));

  return swift_deallocClassInstance();
}

uint64_t sub_1B6C0EA8C()
{
  return type metadata accessor for _ComposeNode(0);
}

uint64_t type metadata accessor for _ComposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F10);
}

uint64_t sub_1B6C0EAB4(void *a1)
{
  return sub_1B6C0EAD4(a1);
}

uint64_t sub_1B6C0EAD4(void *a1)
{
  return sub_1B6C0C6E4();
}

unint64_t sub_1B6C0EB54(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C0EB74(a1, a2, a3, &OBJC_IVAR____TtC3VFX12_ComposeNode_type);
}

unint64_t sub_1B6C0EB74(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B698F4B8();
  unint64_t result = sub_1B6C0C780();
  if (!v5)
  {
    unint64_t v8 = *(void *)(v4 + *a4);
    *(void *)(v4 + *a4) = v9;
    return sub_1B678FC34(v8);
  }
  return result;
}

uint64_t sub_1B6C0EC0C()
{
  uint64_t result = 0x65736F706D6F43;
  sub_1B6C0F208();
  return result;
}

uint64_t sub_1B6C0EC24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR____TtC3VFX12_ComposeNode_type;
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  if (v4 >> 60 == 1)
  {
    unint64_t v5 = (2 * *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10)) | 1;
  }
  else if (v4 >> 60 == 2)
  {
    unint64_t v5 = 5;
  }
  else
  {
    unint64_t v5 = 1;
  }
  sub_1B6E33638();
  swift_unknownObjectRetain_n();
  uint64_t v6 = swift_dynamicCastClass();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(v6 + 16);
  swift_release();
  if (v8 == v5 >> 1)
  {
    uint64_t v9 = swift_dynamicCastClass();
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = v7;
    }
  }
  else
  {
    uint64_t v10 = sub_1B69FEE3C((uint64_t)&unk_1F0F54880, (uint64_t)&unk_1F0F548A0, 0, v5);
  }
  unint64_t v11 = *(void *)(v1 + v3);
  if (v11 >> 60 == 1)
  {
    uint64_t v15 = v11 & 0xFFFFFFFFFFFFFFFLL;
    unint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    sub_1B67C52A4(v16);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v16;
    uint64_t v14 = *(void *)(v15 + 16);
  }
  else if (v11 >> 60 == 2)
  {
    unint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    sub_1B67C52A4(v12);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    uint64_t v14 = 2;
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = 0;
    *(void *)(v13 + 16) = 0xF000000000000007;
  }
  uint64_t v17 = sub_1B6640874(v13 | 0x6000000000000000, v14);
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B6E77050;
  uint64_t v19 = swift_allocObject();
  unint64_t v20 = *(void *)(v1 + v3);
  *(void *)(v19 + 16) = v20;
  *(void *)(v18 + 32) = v19 | 0x6000000000000000;
  sub_1B67C52A4(v20);
  uint64_t v21 = sub_1B68ACC94(v10);
  sub_1B68CE434();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1B6E77050;
  sub_1B638611C(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  uint64_t v23 = sub_1B6E31638();
  uint64_t v25 = v24;
  uint64_t result = swift_release();
  *(void *)(v22 + 32) = v23;
  *(void *)(v22 + 40) = v25;
  *a1 = v17;
  a1[1] = v18;
  a1[2] = (uint64_t)&unk_1F0F54850;
  a1[3] = v21;
  a1[4] = v22;
  a1[5] = v7;
  return result;
}

uint64_t sub_1B6C0EEEC()
{
  return type metadata accessor for ComposeNode(0);
}

uint64_t type metadata accessor for ComposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F20);
}

uint64_t sub_1B6C0EF14(char a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  uint64_t v4 = v3 >> 60;
  if (v3 >> 60 == 2 || v4 == 1 && (uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10)) != 0)
  {
    char v12 = a1;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v4 & ~(v4 >> 63), 0);
    uint64_t v5 = 0;
    do
    {
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v13 + 16);
      unint64_t v6 = *(void *)(v13 + 24);
      if (v7 >= v6 >> 1) {
        sub_1B6C3C3B8(v6 > 1, v7 + 1, 1);
      }
      ++v5;
      *(void *)(v13 + 16) = v7 + 1;
      uint64_t v8 = v13 + 16 * v7;
      *(void *)(v8 + 32) = 37;
      *(void *)(v8 + 40) = 0xE100000000000000;
    }
    while (v4 != v5);
    uint64_t v2 = v1;
    a1 = v12;
  }
  char v9 = a1 & 1;
  sub_1B638611C(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(*(void *)(v2 + 32) + 32);
  sub_1B68289A0(*(void *)(v2 + 24));
  sub_1B67C52A4(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B69B25B0(v9, v10);
  sub_1B678FC34(v10);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 0x307225206F747561;
}

uint64_t sub_1B6C0F194(char a1)
{
  return sub_1B6C0EF14(a1 & 1);
}

uint64_t sub_1B6C0F19C()
{
  return sub_1B6C0F568(17, 0x746963696C706D49);
}

uint64_t sub_1B6C0F1C4()
{
  return type metadata accessor for ImplicitComposeNode(0);
}

uint64_t type metadata accessor for ImplicitComposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F30);
}

uint64_t sub_1B6C0F1EC()
{
  uint64_t result = 0x736F706D6F636544;
  sub_1B6C0F208();
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1B6C0F208()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  sub_1B67C52A4(v1);
  sub_1B69B0F8C(v1);
  sub_1B678FC34(v1);
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
}

uint64_t sub_1B6C0F360@<X0>(uint64_t *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  uint64_t v4 = swift_allocObject();
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  *(void *)(v4 + 16) = v5;
  *(void *)(v3 + 32) = v4 | 0x6000000000000000;
  if (v5 >> 60 == 1)
  {
    unint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    sub_1B67C52A4(v9);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v9;
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  }
  else if (v5 >> 60 == 2)
  {
    unint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    sub_1B67C52A4(v6);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = 0;
    *(void *)(v7 + 16) = 0xF000000000000007;
  }
  unint64_t v10 = v7 | 0x6000000000000000;
  sub_1B67C52A4(v5);
  uint64_t result = sub_1B6640874(v10, v8);
  *a1 = v3;
  a1[1] = result;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F5E6D0;
  a1[3] = v12;
  a1[4] = v12;
  a1[5] = v12;
  return result;
}

uint64_t sub_1B6C0F4CC()
{
  return type metadata accessor for DecomposeNode(0);
}

uint64_t type metadata accessor for DecomposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F40);
}

uint64_t sub_1B6C0F4F8()
{
  return sub_1B6C0F568(19, 0xD000000000000011);
}

uint64_t sub_1B6C0F518()
{
  return type metadata accessor for ImplicitDecomposeNode(0);
}

uint64_t type metadata accessor for ImplicitDecomposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F50);
}

uint64_t sub_1B6C0F540()
{
  return sub_1B6C0F568(16, 0x436C616974726150);
}

uint64_t sub_1B6C0F568(uint64_t a1, uint64_t a2)
{
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  sub_1B67C52A4(v4);
  sub_1B69B0F8C(v4);
  sub_1B678FC34(v4);
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return a2;
}

unint64_t sub_1B6C0F6E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR____TtC3VFX12_ComposeNode_type;
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  if (v4 >> 60 == 1)
  {
    uint64_t v9 = v4 & 0xFFFFFFFFFFFFFFFLL;
    unint64_t v10 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    sub_1B67C52A4(v10);
    uint64_t v6 = swift_allocObject();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v6 + 16) = v11;
    uint64_t v8 = *(void *)(v9 + 16);
  }
  else if (v4 >> 60 == 2)
  {
    unint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    sub_1B67C52A4(v5);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v6 + 16) = v7;
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v6 = swift_allocObject();
    uint64_t v12 = swift_allocObject();
    uint64_t v8 = 0;
    *(void *)(v12 + 16) = 0xF000000000000007;
    *(void *)(v6 + 16) = v12;
  }
  uint64_t v13 = sub_1B6640874(v6 | 0x6000000000000000, v8);
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
  uint64_t v15 = swift_allocObject();
  unint64_t v16 = *(void *)(v1 + v3);
  *(void *)(v15 + 16) = v16;
  *(void *)(v14 + 32) = v15 | 0x6000000000000000;
  unint64_t result = sub_1B67C52A4(v16);
  *a1 = v13;
  a1[1] = v14;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F788A8;
  a1[3] = v18;
  a1[4] = v18;
  a1[5] = v18;
  return result;
}

uint64_t sub_1B6C0F8AC()
{
  return type metadata accessor for PartialComposeNode(0);
}

uint64_t type metadata accessor for PartialComposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F60);
}

unint64_t sub_1B6C0F8D4()
{
  return 0xD000000000000016;
}

uint64_t sub_1B6C0F998()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B678FC34(*(void *)(v0 + OBJC_IVAR____TtC3VFX12_ComposeNode_type));

  return swift_deallocClassInstance();
}

uint64_t sub_1B6C0FA5C()
{
  return type metadata accessor for ImplicitPartialComposeNode(0);
}

uint64_t type metadata accessor for ImplicitPartialComposeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F70);
}

uint64_t sub_1B6C0FA84()
{
  return type metadata accessor for FlowControlNode(0);
}

uint64_t type metadata accessor for FlowControlNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F80);
}

uint64_t sub_1B6C0FAAC(char a1)
{
  return (*(uint64_t (**)(void))(*(void *)v1 + 248))(a1 & 1);
}

uint64_t sub_1B6C0FAD4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t sub_1B6C0FB00()
{
  (*(void (**)(void *__return_ptr))(*(void *)v0 + 152))(v7);
  uint64_t v1 = v7[0];
  uint64_t v12 = v7[1];
  uint64_t v13 = v7[0];
  sub_1B62D8C3C((uint64_t)&v12);
  uint64_t v11 = v7[2];
  sub_1B62D8C3C((uint64_t)&v11);
  uint64_t v10 = v7[3];
  sub_1B62D8C3C((uint64_t)&v10);
  uint64_t v9 = v7[4];
  sub_1B62D8C3C((uint64_t)&v9);
  uint64_t v8 = v7[5];
  sub_1B62D8C3C((uint64_t)&v8);
  if (*(void *)(v1 + 16))
  {
    unint64_t v2 = *(void *)(v1 + 32);
    sub_1B66456F8(v2);
    sub_1B62D8C3C((uint64_t)&v13);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0x8000000000000008;
    unint64_t v4 = v3 | 0x6000000000000000;
    sub_1B66456F8(v2);
    char v5 = sub_1B697351C(v2, v4);
    swift_release();
    sub_1B6645740(v2);
    sub_1B6645740(v2);
  }
  else
  {
    sub_1B62D8C3C((uint64_t)&v13);
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1B6C0FC2C()
{
  return 28484;
}

uint64_t sub_1B6C0FC38@<X0>(uint64_t *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000008;
  *(void *)(v2 + 32) = result | 0x6000000000000000;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *a1 = v2;
  a1[1] = v4;
  a1[2] = (uint64_t)&unk_1F0F9FC28;
  a1[3] = v4;
  a1[4] = v4;
  a1[5] = v4;
  return result;
}

uint64_t sub_1B6C0FCE4()
{
  return type metadata accessor for DoNode(0);
}

uint64_t type metadata accessor for DoNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6F90);
}

uint64_t sub_1B6C0FD0C()
{
  return 0x746963696C706D49;
}

uint64_t sub_1B6C0FD28()
{
  return type metadata accessor for ImplicitDoNode(0);
}

uint64_t type metadata accessor for ImplicitDoNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6FA0);
}

uint64_t sub_1B6C0FD50()
{
  return 26185;
}

uint64_t sub_1B6C0FD5C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000008;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0x8000000000000008;
  *(void *)(v2 + 40) = v4 | 0x6000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000010;
  *(void *)(v2 + 48) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000008;
  *(void *)(v6 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  a1[2] = (uint64_t)&unk_1F0F9FED8;
  a1[3] = (uint64_t)&unk_1F0F9FE88;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v8;
  return result;
}

uint64_t sub_1B6C0FEA0()
{
  return 12837;
}

uint64_t sub_1B6C0FEAC()
{
  return type metadata accessor for IfNode(0);
}

uint64_t type metadata accessor for IfNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6FB0);
}

uint64_t sub_1B6C0FED4()
{
  return 1886351182;
}

uint64_t sub_1B6C0FEE4@<X0>(void *a1@<X8>)
{
  sub_1B638611C(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000008;
  *(void *)(v2 + 32) = result | 0x6000000000000000;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v2;
  a1[2] = &unk_1F0FA6B80;
  a1[3] = v4;
  a1[4] = v4;
  a1[5] = v4;
  return result;
}

uint64_t sub_1B6C0FF90()
{
  return type metadata accessor for NoopNode(0);
}

uint64_t type metadata accessor for NoopNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6FC0);
}

uint64_t sub_1B6C0FFB8()
{
  return 0x746963696C706D49;
}

uint64_t sub_1B6C0FFD8()
{
  return type metadata accessor for ImplicitNoopNode(0);
}

uint64_t type metadata accessor for ImplicitNoopNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6FD0);
}

uint64_t sub_1B6C10000()
{
  sub_1B62C1550(v0 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value, (uint64_t)v4);
  sub_1B62C14BC(v4, v4[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v2 = v4[4];
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(DynamicType, v2);
}

double sub_1B6C10080@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B69CACD8((unint64_t)&unk_1F0F6BE78, a1);
}

void *sub_1B6C10090(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B62C1550((uint64_t)a1 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value, v2 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);
  return sub_1B682A2AC(a1);
}

uint64_t sub_1B6C100E0()
{
  sub_1B62C1550(v0 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value, (uint64_t)v2);
  sub_1B62C5560(0, (unint64_t *)&qword_1E9DD1888);
  return sub_1B6E31818();
}

uint64_t sub_1B6C10134(void *a1)
{
  uint64_t v2 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value + 24);
  uint64_t v4 = sub_1B62C14BC((void *)(v2 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value), *(void *)(v2 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value + 24));
  _OWORD v7[3] = v3;
  uint64_t v5 = sub_1B62C12C4(v7);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(v5, v4, v3);
  sub_1B62C550C((uint64_t)v8, v9);
  sub_1B691370C();
  sub_1B6E335C8();
  sub_1B6913760((uint64_t)v7);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
}

uint64_t sub_1B6C10238(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  uint64_t result = sub_1B6E33A28();
  if (!v2)
  {
    sub_1B62C14BC(v12, v12[3]);
    sub_1B62B58FC();
    sub_1B6E33518();
    sub_1B62B57A8(&v10, &v9);
    sub_1B62C5560(0, (unint64_t *)&qword_1E9DD1888);
    if (swift_dynamicCast())
    {
      sub_1B62C15C4(v7, (uint64_t)v11);
      uint64_t v5 = v1 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v3 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);
      sub_1B62C15C4(v11, v5);
    }
    else
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_1B687EA2C((uint64_t)v7);
      sub_1B67CD358();
      swift_allocError();
      *(_OWORD *)uint64_t v6 = xmmword_1B6EB3040;
      *(unsigned char *)(v6 + 16) = 32;
      swift_willThrow();
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
  }
  return result;
}

void sub_1B6C103B8()
{
}

uint64_t sub_1B6C103E8()
{
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);
}

uint64_t sub_1B6C1040C()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);

  return swift_deallocClassInstance();
}

uint64_t sub_1B6C104D0()
{
  return type metadata accessor for EnumConstantNode(0);
}

uint64_t type metadata accessor for EnumConstantNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6FE0);
}

uint64_t sub_1B6C104F8()
{
  return sub_1B6C10504();
}

uint64_t sub_1B6C10504()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6C10540(void *a1)
{
  return sub_1B6C10134(a1);
}

uint64_t sub_1B6C10558(void *a1)
{
  return sub_1B6C10238(a1);
}

uint64_t sub_1B6C10570()
{
  sub_1B62C1550(v0 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value, (uint64_t)v4);
  sub_1B62C14BC(v4, v4[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v2 = v4[4];
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 40))(DynamicType, v2);
  v4[0] = 0x746963696C706D49;
  v4[1] = 0xE800000000000000;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t sub_1B6C10620()
{
  return type metadata accessor for ImplicitEnumConstantNode(0);
}

uint64_t type metadata accessor for ImplicitEnumConstantNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6FF0);
}

uint64_t sub_1B6C10648()
{
  return swift_updateClassMetadata2();
}

uint64_t destroy for AnyValue(unint64_t *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);
  sub_1B678FC34(*a1);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v1);
}

unint64_t *initializeWithCopy for AnyValue(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1B67C52A4(*a2);
  *a1 = v4;
  unint64_t v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

uint64_t assignWithCopy for AnyValue(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = (uint64_t *)(a2 + 1);
  unint64_t v4 = *a2;
  sub_1B67C52A4(*a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_1B678FC34(v5);
  sub_1B67DCBF4((uint64_t *)(a1 + 8), v3);
  return a1;
}

uint64_t assignWithTake for AnyValue(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_1B678FC34(v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for AnyValue()
{
  return &type metadata for AnyValue;
}

uint64_t sub_1B6C107E0()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6C10818()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6C10850()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

unint64_t sub_1B6C10860()
{
  unint64_t result = qword_1E9DD7000;
  if (!qword_1E9DD7000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7000);
  }
  return result;
}

uint64_t sub_1B6C108B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *(void *)a2;
  *(void *)a2 = v4;
  sub_1B678FC34(v5);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a2 + 8);
  long long v6 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(a2 + 8) = v6;
  return a2;
}

unint64_t sub_1B6C10904()
{
  unint64_t result = qword_1E9DD7008;
  if (!qword_1E9DD7008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7008);
  }
  return result;
}

void *sub_1B6C10958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v10[3] = a3;
  v10[4] = a4;
  long long v6 = sub_1B62C12C4(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v6, a1, a3);
  type metadata accessor for EnumConstantNode(0);
  uint64_t v7 = (void *)swift_allocObject();
  sub_1B62C1550((uint64_t)v10, (uint64_t)v7 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  _OWORD v7[3] = 0;
  uint64_t v7[4] = 0;
  long long v7[2] = v8;
  sub_1B6E31108();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v10);
  return v7;
}

uint64_t sub_1B6C10A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (a2 != a1)
  {
    uint64_t v6 = a1;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, (a2 - a1) & ~((a2 - a1) >> 63), 0);
    uint64_t v3 = v12;
    uint64_t v7 = a3 + 16 * v6 + 40;
    do
    {
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1B6C3C3B8(v8 > 1, v9 + 1, 1);
      }
      v7 += 16;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = 0x7225206F747561;
      *(void *)(v10 + 40) = 0xE700000000000000;
      ++v6;
    }
    while (a2 != v6);
  }
  return v3;
}

uint64_t sub_1B6C10BB4()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 24) + 32);
  if (v1 >> 60 == 1)
  {
    uint64_t v2 = &unk_1F0F5E668;
  }
  else
  {
    if (v1 >> 60 != 2)
    {
      sub_1B67C52A4(v1);
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B682A98C();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    uint64_t v2 = &unk_1F0F5E628;
  }
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC3VFX12_ComposeNode_type);
  if (v3 >> 60 == 1)
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  }
  else if (v3 >> 60 == 2)
  {
    uint64_t v4 = 2;
  }
  else
  {
    uint64_t v4 = 0;
  }
  sub_1B6C10A1C(0, v4, (uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_1B638611C(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  uint64_t v5 = sub_1B6E31638();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B6C10D6C()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6C10D7C()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B6C10D8C()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

uint64_t sub_1B6C10D9C()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B6C10DAC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6C10DBC(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v8 = 0;
    int v10 = -1;
    return v10 | (unint64_t)(v8 << 32);
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v70 = qword_1EB997A18;
  int v71 = 0;
  char v72 = 2;
  uint64_t v73 = 0;
  char v74 = 2;
  uint64_t v75 = 0;
  swift_retain();
  sub_1B6A6F318(1, (uint64_t)&v44);
  swift_release();
  uint64_t v64 = v44;
  int v65 = v45;
  char v66 = v46;
  uint64_t v67 = v47 | 1;
  char v68 = v48;
  uint64_t v69 = v49;
  sub_1B62C9DA8(v2, (uint64_t)&v64, 0x200000000, v50);
  sub_1B62CA3FC((uint64_t)v50, (uint64_t)v51, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v51[0])
  {
    uint64_t v8 = 0;
    int v10 = -1;
    goto LABEL_40;
  }
  long long v58 = v51[0];
  long long v59 = v51[1];
  uint64_t v60 = v52;
  if (v57 < 1 || (uint64_t v36 = v54) == 0)
  {
    uint64_t v8 = 0;
    int v10 = -1;
    goto LABEL_39;
  }
  uint64_t v34 = v53;
  uint64_t v5 = v56;
  uint64_t v6 = v56[4];
  int v42 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v32 = (uint64_t)(v56 + 6);
  sub_1B632F1C4(v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  long long v43 = v5;
  uint64_t v31 = v5 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  int v10 = -1;
  uint64_t v35 = a1;
  uint64_t v33 = v6;
  while (1)
  {
    uint64_t v40 = v7;
    uint64_t v41 = v8;
    uint64_t v11 = (unsigned int *)(v34 + 48 * v7);
    uint64_t v12 = *v11;
    uint64_t v13 = (uint64_t *)*((void *)v11 + 2);
    uint64_t v37 = v11[1];
    uint64_t v38 = *((void *)v11 + 3);
    uint64_t v14 = *((void *)v11 + 4);
    uint64_t v15 = *((void *)v11 + 5);
    uint64_t v39 = v9;
    if (v42)
    {
      unint64_t v16 = *(os_unfair_lock_s **)(v15 + 376);
      swift_retain();
      os_unfair_lock_lock(v16);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v6);
    sub_1B62CA3FC(v32, (uint64_t)v63, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v17 = v43[4];
    uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v43[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
    v43[7] = v18;
    v31[1] = 0;
    v31[2] = 0;
    *uint64_t v31 = 0;
    swift_release();
    uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for VFXTag, (uint64_t)&off_1F0FA2150, v13, v38, v14, (uint64_t)v43);
    if (v13)
    {
      uint64_t v8 = v41;
      if (v14)
      {
        unint64_t v20 = (void *)(v19 + 8);
        while (1)
        {
          uint64_t v22 = *v13++;
          uint64_t v21 = v22;
          BOOL v23 = *(v20 - 1) == v35 && *v20 == a2;
          if (v23 || (sub_1B6E334B8() & 1) != 0)
          {
            char v24 = *(unsigned char *)(v15 + 184);
            uint64_t v25 = swift_retain();
            if (v24) {
              goto LABEL_42;
            }
            int v10 = *(_DWORD *)(*(void *)(v15 + 168) + 4 * v21);
            uint64_t v8 = *(unsigned int *)(*(void *)(v25 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v10 + 8);
            swift_release();
          }
          v20 += 2;
          if (!--v14) {
            goto LABEL_24;
          }
        }
      }
      goto LABEL_24;
    }
    uint64_t v8 = v41;
    if (v12 != v37) {
      break;
    }
LABEL_24:
    v61[0] = v58;
    v61[1] = v59;
    uint64_t v62 = v60;
    uint64_t v9 = v39;
    sub_1B6345178(v43, (unsigned __int16 **)v61, (uint64_t)v63);
    sub_1B634507C((char *)v15);
    uint64_t v6 = v33;
    ecs_stack_allocator_pop_snapshot(v33);
    if (v42)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
    }
    swift_release();
    uint64_t v7 = v40 + 1;
    if (v40 + 1 == v36)
    {
      sub_1B632F1C4(v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F1C4(v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_39:
      sub_1B632F1C4(v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_40:
      sub_1B62CA064((uint64_t)&v44);
      return v10 | (unint64_t)(v8 << 32);
    }
  }
  long long v26 = (void *)(v19 + 16 * v12 + 8);
  while (1)
  {
    BOOL v27 = *(v26 - 1) == v35 && *v26 == a2;
    if (!v27 && (sub_1B6E334B8() & 1) == 0) {
      goto LABEL_27;
    }
    char v28 = *(unsigned char *)(v15 + 184);
    uint64_t v29 = swift_retain();
    if (v28) {
      break;
    }
    int v10 = *(_DWORD *)(*(void *)(v15 + 168) + 4 * v12);
    uint64_t v8 = *(unsigned int *)(*(void *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v10 + 8);
    swift_release();
LABEL_27:
    ++v12;
    v26 += 2;
    if (v37 == v12) {
      goto LABEL_24;
    }
  }
LABEL_42:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void *sub_1B6C112FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  if (!off_1EB97E350)
  {
    uint64_t result = (void *)sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  swift_retain();
  uint64_t v12 = MEMORY[0x1BA9B34C0](a1, a2, a3, a4);
  uint64_t v14 = sub_1B62B2184(v12, v13, 0, 1);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v14
    || ((v15 = swift_conformsToProtocol2()) != 0 ? (uint64_t v16 = v15) : (uint64_t v16 = 0), v15 ? (v17 = v14) : (v17 = 0), !v17))
  {
    unint64_t v19 = sub_1B6C12D9C(a5, a6);
    unint64_t v20 = v19;
    if (v19 >> 62)
    {
      uint64_t v21 = sub_1B6E32C18();
      if (v21)
      {
LABEL_15:
        uint64_t v22 = 0;
        while (1)
        {
          if ((v20 & 0xC000000000000001) != 0)
          {
            uint64_t v23 = MEMORY[0x1BA9B4580](v22, v20);
          }
          else
          {
            uint64_t v23 = *(void *)(v20 + 8 * v22 + 32);
            swift_retain();
          }
          uint64_t v24 = *(void *)(v23 + 32);
          uint64_t v25 = swift_conformsToProtocol2();
          uint64_t v26 = v25 ? v25 : 0;
          if (v25 ? v24 : 0)
          {
            (*(void (**)(void))(v26 + 16))();
            sub_1B6655408();
            sub_1B633AF88();
            uint64_t v28 = sub_1B6E32628();
            swift_bridgeObjectRelease();
            if (!v28) {
              break;
            }
          }
          ++v22;
          swift_release();
          if (v21 == v22) {
            goto LABEL_30;
          }
        }
        swift_bridgeObjectRelease();
        return (void *)v23;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21) {
        goto LABEL_15;
      }
    }
LABEL_30:
    swift_bridgeObjectRelease();
    return 0;
  }

  return sub_1B6C12F0C(v17, v16, a5, a6);
}

uint64_t sub_1B6C115B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6C13E24(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1B6C115E0(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);
  id v3 = objc_msgSend(v2, sel_UUIDString);

  uint64_t v4 = sub_1B6E31798();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

void *sub_1B6C11658(void *result, uint64_t *a2, unint64_t a3)
{
  uint64_t v4 = result;
  unint64_t v5 = HIDWORD(a3);
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v8 = *result;
    swift_unownedRetainStrong();
    BOOL v9 = sub_1B62EC0CC((uint64_t)&type metadata for VFXTag, (uint64_t)&off_1F0FA2180, a3);
    swift_bridgeObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    sub_1B68505EC(v7, v6, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong()) {
      swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v11[0] = a3;
      v11[1] = v5;
      uint64_t v12 = v8;
      sub_1B6C12FB4();
      uint64_t v16 = v10;
      uint64_t v17 = &off_1F0F68360;
      uint64_t v13 = v7;
      uint64_t v14 = v6;
      BOOL v15 = !v9;
      char v18 = 12;
      swift_bridgeObjectRetain();
      sub_1B6A62610((uint64_t)v11);
      swift_release();
      sub_1B67421B0((uint64_t)v11);
    }
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6C117AC(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6E31118();
  sub_1B62A6EB0(&qword_1E9DD17C8);
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B6C11874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t (*)(), void, uint64_t, uint64_t))(a2 + 24))(v2, 0x63656A624F584656, 0xEC00000067615474, sub_1B6C117A8, 0, ObjectType, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v2, v8, v4);
  }
  return result;
}

uint64_t sub_1B6C119CC(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13F24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C11A08(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13F24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6C11A44(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C11B5C(a1, a2, a3, &qword_1E9DD7068, (uint64_t (*)(void))sub_1B6C13F24, (uint64_t)&type metadata for VFXAssetTag.CodingKeys, (void (*)(void))sub_1B6C13F24);
}

uint64_t sub_1B6C11A94(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13B24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C11AD0(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13B24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6C11B0C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C11B5C(a1, a2, a3, &qword_1E9DD7058, (uint64_t (*)(void))sub_1B6C13B24, (uint64_t)&type metadata for VFXBridgeTag.CodingKeys, (void (*)(void))sub_1B6C13B24);
}

uint64_t sub_1B6C11B5C(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B62A65E0(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6C11C98(void *a1, uint64_t a2)
{
  sub_1B62A65E0(0, &qword_1E9DD7050, (uint64_t (*)(void))sub_1B6C13AD0, (uint64_t)&type metadata for VFXParentAsset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C13AD0();
  sub_1B6E33A88();
  v11[1] = a2;
  sub_1B6657A10();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6C11E10()
{
  return 0x797469746E65;
}

uint64_t sub_1B6C11E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x797469746E65 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6C11EB4(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13AD0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C11EF0(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13AD0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6C11F2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B6C13914(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6C11F58(void *a1)
{
  return sub_1B6C11C98(a1, *v1);
}

uint64_t sub_1B6C11F74(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8);
  v5(v2, 0, ObjectType, a2);
  uint64_t result = v5(v2 + 8, 1, ObjectType, a2);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (char *)v7;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1B6C16770(v7);
    }
    uint64_t v10 = -v8;
    uint64_t v11 = 4;
    do
    {
      int32x2_t v14 = *(int32x2_t *)(v7 + 8 * v11);
      int32x2_t v12 = v14;
      v5((uint64_t)&v14, 1, ObjectType, a2);
      int32x2_t v13 = vceq_s32(v14, v12);
      if ((v13.i32[0] & v13.i32[1] & 1) == 0) {
        *(int32x2_t *)&v9[8 * v11] = v14;
      }
      ++v11;
    }
    while (v10 + v11 != 4);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v2 + 16) = v9;
  }
  return result;
}

uint64_t sub_1B6C120B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = a4;
  uint64_t v17 = a3;
  sub_1B62A65E0(0, &qword_1E9DD70B0, (uint64_t (*)(void))sub_1B6C14020, (uint64_t)&type metadata for Prefab.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  int32x2_t v12 = (char *)&v15 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C14020();
  sub_1B6E33A88();
  uint64_t v19 = a2;
  char v18 = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v4)
  {
    uint64_t v13 = v16;
    uint64_t v19 = v17;
    char v18 = 1;
    sub_1B6E32FA8();
    uint64_t v19 = v13;
    char v18 = 2;
    sub_1B62D83C0(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    sub_1B62E1FC8((unint64_t *)&unk_1E9DD8570, (void (*)(void))sub_1B6657A10);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B6C12310(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB9D28(*a1, *a2);
}

uint64_t sub_1B6C1231C()
{
  uint64_t v1 = 1953460082;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C6576654C706F74;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_1B6C12378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6C13544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6C123A0(uint64_t a1)
{
  unint64_t v2 = sub_1B6C14020();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C123DC(uint64_t a1)
{
  unint64_t v2 = sub_1B6C14020();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6C12418@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6C13B78(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B6C12454(void *a1)
{
  return sub_1B6C120B0(a1, *v1, v1[1], v1[2]);
}

__n128 sub_1B6C12478@<Q0>(__n128 *a1@<X8>)
{
  result.n128_u64[0] = 0xFFFFFFFFLL;
  result.n128_u64[1] = 0xFFFFFFFFLL;
  *a1 = result;
  a1[1].n128_u64[0] = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1B6C12490(void *a1, uint64_t a2)
{
  sub_1B62A65E0(0, &qword_1E9DD7038, (uint64_t (*)(void))sub_1B6C138C0, (uint64_t)&type metadata for EmbeddedAssets.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C138C0();
  sub_1B6E33A88();
  v11[1] = a2;
  sub_1B62D83C0(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
  sub_1B62E1FC8((unint64_t *)&unk_1E9DD8570, (void (*)(void))sub_1B6657A10);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6C12664()
{
  return 0x7365697469746E65;
}

uint64_t sub_1B6C1267C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6C12714(uint64_t a1)
{
  unint64_t v2 = sub_1B6C138C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C12750(uint64_t a1)
{
  unint64_t v2 = sub_1B6C138C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6C1278C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B6C136A8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6C127B8(void *a1)
{
  return sub_1B6C12490(a1, *v1);
}

uint64_t sub_1B6C127D4(uint64_t a1)
{
  unint64_t v2 = sub_1B6C134F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C12810(uint64_t a1)
{
  unint64_t v2 = sub_1B6C134F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6C1284C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C11B5C(a1, a2, a3, &qword_1E9DD7018, (uint64_t (*)(void))sub_1B6C134F0, (uint64_t)&type metadata for DoNotSave.CodingKeys, (void (*)(void))sub_1B6C134F0);
}

uint64_t sub_1B6C1289C(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13F78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C128D8(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13F78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6C12914(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6C11B5C(a1, a2, a3, &qword_1E9DD7078, (uint64_t (*)(void))sub_1B6C13F78, (uint64_t)&type metadata for DoNotExport.CodingKeys, (void (*)(void))sub_1B6C13F78);
}

uint64_t sub_1B6C12964()
{
  return 0x726564726FLL;
}

uint64_t sub_1B6C12978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726564726FLL && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6C12A08(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13FCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6C12A44(uint64_t a1)
{
  unint64_t v2 = sub_1B6C13FCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6C12A80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  int32x2_t v14 = a2;
  sub_1B62A65E0(0, &qword_1E9DD7088, (uint64_t (*)(void))sub_1B6C13FCC, (uint64_t)&type metadata for Scheduling.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C13FCC();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v14;
  uint64_t v11 = sub_1B6E32DD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *uint64_t v10 = v11;
  return result;
}

uint64_t sub_1B6C12C2C(void *a1)
{
  sub_1B62A65E0(0, &qword_1E9DD7098, (uint64_t (*)(void))sub_1B6C13FCC, (uint64_t)&type metadata for Scheduling.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C13FCC();
  sub_1B6E33A88();
  sub_1B6E32F88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_1B6C12D90(void *a1@<X8>)
{
  *a1 = 1000;
}

uint64_t sub_1B6C12D9C(unint64_t a1, uint64_t a2)
{
  swift_retain();
  uint64_t v4 = sub_1B6BFADC0(a1);
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B6E32A48();
    type metadata accessor for VFXAttribute();
    uint64_t v6 = v4 + 40;
    do
    {
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(void *)(*(void *)v6 + 8);
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = a2;
      swift_retain();
      swift_unownedRetain();
      swift_release();
      v9[3] = a1;
      void v9[4] = v7;
      v9[5] = v8;
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
      v6 += 16;
      --v5;
    }
    while (v5);
    uint64_t v10 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v10;
}

void *sub_1B6C12ED8(uint64_t a1, void *a2, unint64_t a3)
{
  return sub_1B6A687E0(a2, a3);
}

void *sub_1B6C12F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a2 + 8);
  swift_retain();
  BOOL v8 = sub_1B62EC0CC(a1, v7, a3);
  swift_release();
  if (!v8) {
    return 0;
  }
  type metadata accessor for VFXAttribute();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a4;
  swift_retain();
  swift_unownedRetain();
  swift_release();
  v9[3] = a3;
  void v9[4] = a1;
  v9[5] = v7;
  return v9;
}

void sub_1B6C12FB4()
{
  if (!qword_1E9DD6698)
  {
    unint64_t v0 = type metadata accessor for ComponentWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6698);
    }
  }
}

ValueMetadata *type metadata accessor for DoNotSave()
{
  return &type metadata for DoNotSave;
}

ValueMetadata *type metadata accessor for EmbeddedAssets()
{
  return &type metadata for EmbeddedAssets;
}

ValueMetadata *type metadata accessor for VFXParentAsset()
{
  return &type metadata for VFXParentAsset;
}

ValueMetadata *type metadata accessor for VFXBridgeTag()
{
  return &type metadata for VFXBridgeTag;
}

ValueMetadata *type metadata accessor for VFXTag()
{
  return &type metadata for VFXTag;
}

uint64_t sub_1B6C13064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1B6C130D0(uint64_t a1)
{
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1B6C13134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B6C13198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B6C131FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B6C13260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B6C132C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B6C132D8);
}

uint64_t sub_1B6C132D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1B6C13344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B6C13358);
}

uint64_t sub_1B6C13358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1B6C133C8()
{
  uint64_t result = sub_1B6E31118();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for VFXAssetTag()
{
  return &type metadata for VFXAssetTag;
}

ValueMetadata *type metadata accessor for DoNotExport()
{
  return &type metadata for DoNotExport;
}

ValueMetadata *type metadata accessor for Scheduling()
{
  return &type metadata for Scheduling;
}

uint64_t assignWithCopy for Prefab(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Prefab()
{
  return &type metadata for Prefab;
}

unint64_t sub_1B6C134F0()
{
  unint64_t result = qword_1E9DD7020;
  if (!qword_1E9DD7020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7020);
  }
  return result;
}

uint64_t sub_1B6C13544(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953460082 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6576654C706F74 && a2 == 0xEF737463656A624FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1B6C136A8(void *a1)
{
  sub_1B62A65E0(0, &qword_1E9DD7028, (uint64_t (*)(void))sub_1B6C138C0, (uint64_t)&type metadata for EmbeddedAssets.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  BOOL v8 = (char *)v12 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6C138C0();
  uint64_t v10 = v9;
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62D83C0(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    sub_1B62E1FC8((unint64_t *)&unk_1EB9802D0, (void (*)(void))sub_1B62B1EA8);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v10 = (void *)v12[1];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

unint64_t sub_1B6C138C0()
{
  unint64_t result = qword_1E9DD7030;
  if (!qword_1E9DD7030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7030);
  }
  return result;
}

void *sub_1B6C13914(void *a1)
{
  sub_1B62A65E0(0, &qword_1E9DD7040, (uint64_t (*)(void))sub_1B6C13AD0, (uint64_t)&type metadata for VFXParentAsset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  BOOL v8 = (char *)v12 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6C13AD0();
  uint64_t v10 = v9;
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v10 = (void *)v12[1];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

unint64_t sub_1B6C13AD0()
{
  unint64_t result = qword_1E9DD7048;
  if (!qword_1E9DD7048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7048);
  }
  return result;
}

unint64_t sub_1B6C13B24()
{
  unint64_t result = qword_1E9DD7060;
  if (!qword_1E9DD7060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7060);
  }
  return result;
}

uint64_t sub_1B6C13B78(void *a1)
{
  sub_1B62A65E0(0, &qword_1E9DD70A0, (uint64_t (*)(void))sub_1B6C14020, (uint64_t)&type metadata for Prefab.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  BOOL v8 = (char *)&v11 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6C14020();
  sub_1B6E33A48();
  if (!v1)
  {
    char v12 = 0;
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    uint64_t v9 = v13;
    char v12 = 1;
    sub_1B6E32DF8();
    sub_1B62D83C0(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    char v12 = 2;
    sub_1B62E1FC8((unint64_t *)&unk_1EB9802D0, (void (*)(void))sub_1B62B1EA8);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1B6C13E24(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);

  uint64_t v4 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C14BC(v6, v6[3]);
    uint64_t v4 = sub_1B6E334C8();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v4;
}

unint64_t sub_1B6C13F24()
{
  unint64_t result = qword_1E9DD7070;
  if (!qword_1E9DD7070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7070);
  }
  return result;
}

unint64_t sub_1B6C13F78()
{
  unint64_t result = qword_1E9DD7080;
  if (!qword_1E9DD7080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7080);
  }
  return result;
}

unint64_t sub_1B6C13FCC()
{
  unint64_t result = qword_1E9DD7090;
  if (!qword_1E9DD7090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7090);
  }
  return result;
}

unint64_t sub_1B6C14020()
{
  unint64_t result = qword_1E9DD70A8;
  if (!qword_1E9DD70A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Prefab.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6C14140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Prefab.CodingKeys()
{
  return &type metadata for Prefab.CodingKeys;
}

ValueMetadata *type metadata accessor for Scheduling.CodingKeys()
{
  return &type metadata for Scheduling.CodingKeys;
}

ValueMetadata *type metadata accessor for DoNotExport.CodingKeys()
{
  return &type metadata for DoNotExport.CodingKeys;
}

ValueMetadata *type metadata accessor for VFXAssetTag.CodingKeys()
{
  return &type metadata for VFXAssetTag.CodingKeys;
}

ValueMetadata *type metadata accessor for VFXBridgeTag.CodingKeys()
{
  return &type metadata for VFXBridgeTag.CodingKeys;
}

ValueMetadata *type metadata accessor for VFXParentAsset.CodingKeys()
{
  return &type metadata for VFXParentAsset.CodingKeys;
}

unsigned char *_s3VFX10SchedulingV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6C14268);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbeddedAssets.CodingKeys()
{
  return &type metadata for EmbeddedAssets.CodingKeys;
}

ValueMetadata *type metadata accessor for DoNotSave.CodingKeys()
{
  return &type metadata for DoNotSave.CodingKeys;
}

unint64_t sub_1B6C142B4()
{
  unint64_t result = qword_1E9DD70B8;
  if (!qword_1E9DD70B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70B8);
  }
  return result;
}

unint64_t sub_1B6C1430C()
{
  unint64_t result = qword_1E9DD70C0;
  if (!qword_1E9DD70C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70C0);
  }
  return result;
}

unint64_t sub_1B6C14364()
{
  unint64_t result = qword_1E9DD70C8;
  if (!qword_1E9DD70C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70C8);
  }
  return result;
}

unint64_t sub_1B6C143BC()
{
  unint64_t result = qword_1E9DD70D0;
  if (!qword_1E9DD70D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70D0);
  }
  return result;
}

unint64_t sub_1B6C14414()
{
  unint64_t result = qword_1E9DD70D8;
  if (!qword_1E9DD70D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70D8);
  }
  return result;
}

unint64_t sub_1B6C1446C()
{
  unint64_t result = qword_1E9DD70E0;
  if (!qword_1E9DD70E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70E0);
  }
  return result;
}

unint64_t sub_1B6C144C4()
{
  unint64_t result = qword_1E9DD70E8;
  if (!qword_1E9DD70E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70E8);
  }
  return result;
}

unint64_t sub_1B6C1451C()
{
  unint64_t result = qword_1E9DD70F0;
  if (!qword_1E9DD70F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70F0);
  }
  return result;
}

unint64_t sub_1B6C14574()
{
  unint64_t result = qword_1E9DD70F8;
  if (!qword_1E9DD70F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD70F8);
  }
  return result;
}

unint64_t sub_1B6C145CC()
{
  unint64_t result = qword_1E9DD7100;
  if (!qword_1E9DD7100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7100);
  }
  return result;
}

unint64_t sub_1B6C14624()
{
  unint64_t result = qword_1E9DD7108;
  if (!qword_1E9DD7108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7108);
  }
  return result;
}

unint64_t sub_1B6C1467C()
{
  unint64_t result = qword_1E9DD7110;
  if (!qword_1E9DD7110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7110);
  }
  return result;
}

unint64_t sub_1B6C146D4()
{
  unint64_t result = qword_1E9DD7118;
  if (!qword_1E9DD7118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7118);
  }
  return result;
}

unint64_t sub_1B6C1472C()
{
  unint64_t result = qword_1E9DD7120;
  if (!qword_1E9DD7120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7120);
  }
  return result;
}

unint64_t sub_1B6C14784()
{
  unint64_t result = qword_1E9DD7128;
  if (!qword_1E9DD7128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7128);
  }
  return result;
}

unint64_t sub_1B6C147DC()
{
  unint64_t result = qword_1E9DD7130;
  if (!qword_1E9DD7130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7130);
  }
  return result;
}

unint64_t sub_1B6C14834()
{
  unint64_t result = qword_1E9DD7138;
  if (!qword_1E9DD7138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7138);
  }
  return result;
}

unint64_t sub_1B6C1488C()
{
  unint64_t result = qword_1E9DD7140;
  if (!qword_1E9DD7140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7140);
  }
  return result;
}