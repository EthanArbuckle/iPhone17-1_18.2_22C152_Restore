uint64_t sub_1B6C970CC()
{
  unint64_t v0;

  v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6C97118(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636143746E696F70 && a2 == 0xEA00000000006568;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001B6F33090 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4374697265686E69 && a2 == 0xEC000000726F6C6FLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001B6F2E7F0 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5374697265686E69 && a2 == 0xEB00000000657A69)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1B6C97364()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B6C973B0(unint64_t result, uint64_t *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (*(void *)(v2 + 16))
  {
    unint64_t v4 = result;
    result = sub_1B69FAB00(0);
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 8 * result);
      uint64_t v7 = *(void *)(v6 + OBJC_IVAR___VFXREBindingMeshData_buffer);
      uint64_t v8 = *(unsigned __int16 *)(v6 + OBJC_IVAR___VFXREBindingMeshData_offset);
      uint64_t v9 = *(unsigned int *)(v6 + OBJC_IVAR___VFXREBindingMeshData_length);
      uint64_t v10 = *(void *)(v6 + OBJC_IVAR___VFXREBindingMeshData_format);
      a2[3] = v9 / sub_1B6BBC7DC(v10);
      swift_unknownObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = *a2;
      *a2 = 0x8000000000000000;
      sub_1B67E9180(v7, v8, v9, v10, 0x6E6F697469736F70, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
      *a2 = v27;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(v4 + 16);
      if (*(void *)(v12 + 16) && (unint64_t v13 = sub_1B69FAB00(2u), (v14 & 1) != 0))
      {
        uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
        uint64_t v16 = *(unsigned __int16 *)(v15 + OBJC_IVAR___VFXREBindingMeshData_offset);
        uint64_t v17 = *(unsigned int *)(v15 + OBJC_IVAR___VFXREBindingMeshData_length);
        uint64_t v18 = *(void *)(v15 + OBJC_IVAR___VFXREBindingMeshData_format);
        uint64_t v19 = swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v18 = 0;
      }
      sub_1B6C8AF98(v19, v16, v17, v18, 0x6C616D726F6ELL, 0xE600000000000000);
      if (*(void *)(v12 + 16) && (unint64_t v20 = sub_1B69FAB00(4u), (v21 & 1) != 0))
      {
        uint64_t v22 = *(void *)(*(void *)(v12 + 56) + 8 * v20);
        uint64_t v23 = *(unsigned __int16 *)(v22 + OBJC_IVAR___VFXREBindingMeshData_offset);
        uint64_t v24 = *(unsigned int *)(v22 + OBJC_IVAR___VFXREBindingMeshData_length);
        uint64_t v25 = *(void *)(v22 + OBJC_IVAR___VFXREBindingMeshData_format);
        uint64_t v26 = swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v26 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      sub_1B6C8AF98(v26, v23, v24, v25, 0x726F6C6F63, 0xE500000000000000);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6C97610(void *a1, uint64_t *a2, uint64_t a3)
{
  v51[1] = a3;
  v52 = a2;
  uint64_t v5 = sub_1B6E30F48();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[2];
  uint64_t v9 = a1[3];
  v11 = (void *)a1[4];
  v55 = v3;
  if (v11)
  {
    uint64_t v12 = a1[5];
    uint64_t ObjectType = swift_getObjectType();
    char v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
    swift_bridgeObjectRetain();
    id v15 = v11;
    v14(v10, v9, ObjectType, v12);
    uint64_t v16 = v8;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v56 = 0;
    unint64_t v57 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v17 = v56;
    uint64_t v18 = v57;
    int v19 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v56 = 0;
    swift_retain();
    sub_1B6B33E34(v19, &v56, v17, v18);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v16 = v8;
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  sub_1B6E30DF8();
  uint64_t v20 = sub_1B6E31828();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 == 0x656863616370 && v22 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = v55;
  }
  else
  {
    char v24 = sub_1B6E334B8();
    uint64_t v25 = v55;
    if ((v24 & 1) == 0)
    {
      BOOL v37 = v20 == 6513249 && v22 == 0xE300000000000000;
      if (v37 || (sub_1B6E334B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1B6B52A70();
        if (!v25) {
          goto LABEL_22;
        }
        v28 = v25;
      }
      else
      {
        BOOL v38 = v20 == 7957616 && v22 == 0xE300000000000000;
        if (v38
          || (sub_1B6E334B8() & 1) != 0
          || (v20 == 1887005808 ? (BOOL v39 = v22 == 0xE400000000000000) : (BOOL v39 = 0), v39))
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v40 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if ((v40 & 1) == 0)
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v56 = 0;
            unint64_t v57 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v56 = 0xD000000000000013;
            unint64_t v57 = 0x80000001B6F503E0;
            sub_1B6E30DF8();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            uint64_t v41 = v56;
            uint64_t v42 = v57;
            int v43 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v56 = 0;
            swift_retain();
            sub_1B6B33E34(v43, &v56, v41, v42);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_22;
          }
        }
        uint64_t v44 = sub_1B6E30F68();
        v46 = v16;
        v28 = v25;
        if (!v25)
        {
          uint64_t v47 = v44;
          unint64_t v48 = v45;
          unint64_t v49 = sub_1B6E30E58();
          sub_1B6BC5278(v47, v48, v49, v50, v52);
          swift_bridgeObjectRelease();
          sub_1B62C2360(v47, v48);
          uint64_t v35 = v53;
          uint64_t v34 = v54;
          uint64_t v16 = v46;
          return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v34);
        }
      }
LABEL_17:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      v58 = v28;
      sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
      sub_1B6E32B18();
      sub_1B6E31948();
      uint64_t v31 = v56;
      uint64_t v32 = v57;
      int v33 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v56 = 0;
      swift_retain();
      sub_1B6B33E34(v33, &v56, v31, v32);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = sub_1B6E30F68();
  v28 = v25;
  if (v25) {
    goto LABEL_17;
  }
  uint64_t v29 = v26;
  unint64_t v30 = v27;
  sub_1B6C91150(v26, v27, v52);
  sub_1B62C2360(v29, v30);
LABEL_22:
  uint64_t v35 = v53;
  uint64_t v34 = v54;
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v34);
}

uint64_t sub_1B6C97D9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1B695E73C(v1, (uint64_t)&v14);
  uint64_t v2 = v15;
  if (!v15) {
    return 0;
  }
  uint64_t v3 = v14;
  unint64_t v4 = v16;
  if (!v16)
  {
LABEL_6:
    sub_1B695DEC8(v1, (uint64_t)v12);
    sub_1B62D7FE8((uint64_t)v12, (uint64_t)v13, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
    sub_1B62D7FE8((uint64_t)v13, (uint64_t)&v14, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
    if (sub_1B6388C10(&v14) == 1)
    {
      sub_1B696C938(v3, v2);
    }
    else if (*(void *)(v17 + 16))
    {
      uint64_t v11 = v3;
      uint64_t v6 = *(void *)(v17 + 32);
      uint64_t v7 = *(void *)(v17 + 40);
      uint64_t v10 = *(void *)(v17 + 48);
      int v8 = *(unsigned __int8 *)(v17 + 56);
      swift_bridgeObjectRetain();
      sub_1B6916440(v6, v7, v10, v8);
      sub_1B6916460((uint64_t)v13);
      sub_1B696C938(v11, v2);
      swift_bridgeObjectRelease();
      if (v8 == 2) {
        return v6;
      }
      sub_1B6916620(v6, v7, v10, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B6916460((uint64_t)v13);
      sub_1B696C938(v3, v2);
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  Class = (__objc2_class *)object_getClass(v16);
  if (Class == _TtC3VFX13PBRParameters)
  {
    swift_unknownObjectRetain();
    sub_1B696C938(v3, v2);
    uint64_t v6 = v4[4];
  }
  else
  {
    if (Class != _TtC3VFX16PrelitParameters) {
      goto LABEL_6;
    }
    swift_unknownObjectRetain();
    sub_1B696C938(v3, v2);
    uint64_t v6 = v4[2];
  }
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1B6C98054@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B62E17B4();
  v132 = v4;
  MEMORY[0x1F4188790](v4, v5);
  v131 = (char *)v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_1B6E31098();
  MEMORY[0x1F4188790](v130, v7);
  v129 = (char *)v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[3])
  {
    v125 = a2;
    uint64_t v10 = a1[5];
    uint64_t v11 = a1[6];
    id v137 = *(id *)(v10 + 16);
    if (v137)
    {
      v123[2] = a1;
      uint64_t v124 = v11;
      uint64_t v136 = v10 + 32;
      v128 = (void (**)(char *, char *, uint64_t))(v8 + 32);
      v123[1] = v10;
      swift_bridgeObjectRetain();
      id v12 = 0;
      unint64_t v13 = (char *)MEMORY[0x1E4FBC860];
      long long v127 = xmmword_1B6E77050;
      unint64_t v126 = 0x80000001B6F505E0;
      do
      {
        uint64_t v14 = (void *)(v136 + ((void)v12 << 7));
        uint64_t v15 = (void *)v14[4];
        uint64_t v16 = v14[11];
        if (*v14 == 3)
        {
          if (v15)
          {
            uint64_t v17 = v14[5];
            uint64_t v19 = v14[9];
            uint64_t v18 = v14[10];
            if (v18 == 2)
            {
              swift_unknownObjectRetain_n();
              swift_bridgeObjectRetain();
              if (objc_msgSend(v15, sel_storageMode) == (id)2) {
                goto LABEL_88;
              }
              uint64_t v20 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
              id v21 = v15;
              if (v19 > 0)
              {
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v138 = v16;
                id v135 = v21;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  unint64_t v13 = sub_1B68C69F8(0, *((void *)v13 + 2) + 1, 1, v13);
                }
                uint64_t v23 = 0;
                char v24 = &v20[v17];
                unint64_t v25 = *((void *)v13 + 2);
                uint64_t v26 = 24 * v25;
                do
                {
                  if (__OFADD__(v23, 3)) {
                    uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    uint64_t v27 = v23 + 3;
                  }
                  v28 = &v24[2 * v23];
                  uint64_t v29 = *(unsigned __int16 *)v28;
                  uint64_t v30 = *((unsigned __int16 *)v28 + 1);
                  uint64_t v31 = *((unsigned __int16 *)v28 + 2);
                  unint64_t v32 = *((void *)v13 + 3);
                  unint64_t v33 = v25 + 1;
                  if (v25 >= v32 >> 1) {
                    unint64_t v13 = sub_1B68C69F8(v32 > 1, v25 + 1, 1, v13);
                  }
                  *((void *)v13 + 2) = v33;
                  uint64_t v34 = &v13[v26];
                  *((void *)v34 + 4) = v29;
                  *((void *)v34 + 5) = v30;
                  *((void *)v34 + 6) = v31;
                  v26 += 24;
                  unint64_t v25 = v33;
                  uint64_t v23 = v27;
                }
                while (v27 < v19);
              }
            }
            else
            {
              if (v18 != 4) {
                goto LABEL_88;
              }
              swift_unknownObjectRetain_n();
              swift_bridgeObjectRetain();
              if (objc_msgSend(v15, sel_storageMode) == (id)2) {
                goto LABEL_88;
              }
              v46 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
              v15;
              if (v19 > 0)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v13 = sub_1B68C69F8(0, *((void *)v13 + 2) + 1, 1, v13);
                }
                uint64_t v47 = 0;
                unint64_t v48 = &v46[v17];
                unint64_t v49 = *((void *)v13 + 2);
                uint64_t v50 = 24 * v49;
                do
                {
                  if (__OFADD__(v47, 3)) {
                    uint64_t v51 = 0x7FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    uint64_t v51 = v47 + 3;
                  }
                  v52 = &v48[4 * v47];
                  uint64_t v53 = *(void *)v52;
                  uint64_t v54 = *((unsigned int *)v52 + 2);
                  unint64_t v55 = *((void *)v13 + 3);
                  unint64_t v56 = v49 + 1;
                  if (v49 >= v55 >> 1) {
                    unint64_t v13 = sub_1B68C69F8(v55 > 1, v49 + 1, 1, v13);
                  }
                  *(void *)&long long v57 = v53;
                  *((void *)&v57 + 1) = HIDWORD(v53);
                  *((void *)v13 + 2) = v56;
                  v58 = &v13[v50];
                  *((_OWORD *)v58 + 2) = v57;
                  *((void *)v58 + 6) = v54;
                  v50 += 24;
                  unint64_t v49 = v56;
                  uint64_t v47 = v51;
                }
                while (v51 < v19);
              }
            }
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease_n();
          }
        }
        else
        {
          uint64_t v35 = qword_1EB9852D0;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          if (v35 != -1) {
            swift_once();
          }
          uint64_t v134 = qword_1EB997FD0;
          swift_retain();
          char v36 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v138 = v16;
          id v135 = v12;
          uint64_t v37 = qword_1EB997FF0;
          uint64_t v38 = qword_1EB985528;
          swift_retain();
          if (v38 != -1) {
            swift_once();
          }
          sub_1B6C9B0B4(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0);
          uint64_t v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = v127;
          *(void *)(v39 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v39 + 64) = sub_1B678615C();
          unint64_t v40 = v126;
          *(void *)(v39 + 32) = 0xD00000000000001CLL;
          *(void *)(v39 + 40) = v40;
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v133 = v37;
          uint64_t v41 = v129;
          sub_1B6E31088();
          uint64_t v42 = (uint64_t)v131;
          uint64_t v43 = v132[12];
          uint64_t v44 = v132[16];
          unint64_t v45 = &v131[v132[20]];
          (*v128)(v131, v41, v130);
          *(unsigned char *)(v42 + v43) = v36;
          *(void *)(v42 + v44) = 0;
          *(void *)unint64_t v45 = 0xD00000000000001CLL;
          *((void *)v45 + 1) = v40;
          sub_1B6E31368();
          swift_release();
          sub_1B62C0034(v42, (uint64_t (*)(void))sub_1B62E17B4);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          id v12 = v135;
        }
        id v12 = (char *)v12 + 1;
      }
      while (v12 != v137);
      swift_bridgeObjectRelease();
      uint64_t v11 = v124;
    }
    else
    {
      unint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v59 = sub_1B6640FB8(v11, (__n128)0);
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_1B6A565A8(0);
    if (v60 && v11)
    {
      uint64_t v62 = v60;
      uint64_t v63 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v59 = (uint64_t)sub_1B6C1688C(v59);
      }
      uint64_t v64 = 0;
      v65 = (_DWORD *)(v62 + 8);
      do
      {
        *(void *)&long long v66 = *((void *)v65 - 1);
        DWORD2(v66) = *v65;
        v65 = (_DWORD *)((char *)v65 + v63);
        *((void *)&v66 + 1) = DWORD2(v66);
        *(_OWORD *)(v59 + 16 * v64++ + 32) = v66;
      }
      while (v11 != v64);
    }
    uint64_t v67 = sub_1B6640FB8(v11, (__n128)0);
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_1B6A565A8(1);
    if (v68 && v11)
    {
      uint64_t v70 = v68;
      uint64_t v71 = v69;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v67 = (uint64_t)sub_1B6C1688C(v67);
      }
      uint64_t v72 = 0;
      v73 = (_DWORD *)(v70 + 8);
      do
      {
        *(void *)&long long v74 = *((void *)v73 - 1);
        DWORD2(v74) = *v73;
        v73 = (_DWORD *)((char *)v73 + v71);
        *((void *)&v74 + 1) = DWORD2(v74);
        *(_OWORD *)(v67 + 16 * v72++ + 32) = v74;
      }
      while (v11 != v72);
    }
    uint64_t v75 = sub_1B66410A0(v11, 0.0);
    swift_bridgeObjectRelease();
    uint64_t v76 = sub_1B6A565A8(2);
    if (v76 && v11)
    {
      v78 = (void *)v76;
      uint64_t v79 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v75 = (uint64_t)sub_1B6C16918(v75);
      }
      for (uint64_t i = 0; i != v11; ++i)
      {
        *(void *)(v75 + 8 * i + 32) = *v78;
        v78 = (void *)((char *)v78 + v79);
      }
    }
    __asm { FMOV            V0.4S, #1.0 }
    uint64_t v86 = sub_1B6641274(v11, _Q0);
    swift_bridgeObjectRelease();
    uint64_t v87 = sub_1B6A565A8(4);
    if (v87 && v11)
    {
      v89 = (_OWORD *)v87;
      uint64_t v90 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v86 = (uint64_t)sub_1B629CC8C(v86);
      }
      for (uint64_t j = 0; j != v11; ++j)
      {
        *(_OWORD *)(v86 + 16 * j + 32) = *v89;
        v89 = (_OWORD *)((char *)v89 + v90);
      }
    }
    uint64_t v92 = sub_1B6641370(v11, 0.0);
    swift_bridgeObjectRelease();
    uint64_t v93 = sub_1B6A565A8(9);
    if (v93 && v11)
    {
      v95 = (void *)v93;
      uint64_t v96 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v92 = (uint64_t)sub_1B6C16A5C(v92);
      }
      for (uint64_t k = 0; k != v11; ++k)
      {
        *(void *)(v92 + 8 * k + 32) = *v95;
        v95 = (void *)((char *)v95 + v96);
      }
    }
    uint64_t v98 = sub_1B6641274(v11, (__n128)0);
    swift_bridgeObjectRelease();
    uint64_t v99 = sub_1B6A565A8(8);
    if (v99 && v11)
    {
      v101 = (_OWORD *)v99;
      uint64_t v102 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v98 = (uint64_t)sub_1B629CC8C(v98);
      }
      for (uint64_t m = 0; m != v11; ++m)
      {
        *(_OWORD *)(v98 + 16 * m + 32) = *v101;
        v101 = (_OWORD *)((char *)v101 + v102);
      }
    }
    uint64_t result = sub_1B6640A4C(*((void *)v13 + 2) + 1, 0);
    v105 = (char *)result;
    uint64_t v106 = *((void *)v13 + 2);
    if (v106)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v105 = sub_1B6C1683C((uint64_t)v105);
      }
      uint64_t v107 = 0;
      uint64_t v108 = v59 + 32;
      v109 = (uint64_t *)(v13 + 48);
      do
      {
        uint64_t v110 = *(v109 - 2);
        uint64_t v111 = *(v109 - 1);
        uint64_t v112 = *v109;
        v109 += 3;
        float32x4_t v113 = *(float32x4_t *)(v108 + 16 * v110);
        float32x4_t v114 = vsubq_f32(*(float32x4_t *)(v108 + 16 * v112), v113);
        float32x4_t v115 = vsubq_f32(*(float32x4_t *)(v108 + 16 * v111), v113);
        float32x4_t v116 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v115, (int32x4_t)v115), (int8x16_t)v115, 0xCuLL), vnegq_f32(v114)), v115, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v114, (int32x4_t)v114), (int8x16_t)v114, 0xCuLL));
        float32x4_t v117 = vmulq_f32(v116, v116);
        *(float *)&v105[4 * v107++ + 36] = sqrtf(v117.f32[1] + (float)(v117.f32[2] + v117.f32[0])) * 0.5;
      }
      while (v106 != v107);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v118 = *((void *)v13 + 2);
      if (v118)
      {
        uint64_t v119 = 0;
        float v120 = *((float *)v105 + 8);
        do
        {
          v121 = &v105[4 * v119];
          float v120 = v120 + *((float *)v121 + 9);
          *((float *)v121 + 9) = v120;
          ++v119;
        }
        while (v118 != v119);
      }
    }
    v122 = v125;
    uint64_t *v125 = v59;
    v122[1] = v67;
    v122[2] = v86;
    v122[3] = v75;
    v122[4] = v92;
    v122[5] = v98;
    v122[6] = (uint64_t)v13;
    v122[7] = (uint64_t)v105;
  }
  else
  {
LABEL_88:
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void sub_1B6C98B40(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1B67DDA3C(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  *a2 = v8;
  a2[3] = 0;
  sub_1B664D9F0(a1, (uint64_t)v60);
  uint64_t v9 = MEMORY[0x1BA9B8670](v60);
  sub_1B66490B8((uint64_t)v60);
  if (v9)
  {
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    uint64_t v11 = v10;
    if (v10)
    {
      id v12 = objc_msgSend(v10, sel_nodeRef);
      if (v12)
      {
        uint64_t v20 = v12;
        id v21 = (void *)sub_1B649F5A8((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19);
        if (v21)
        {
          id v22 = v21;
          id v23 = objc_msgSend(a3, sel_renderResourceForDeformerStack_node_dataKind_, v22, v20, 1);
          char v24 = (VFXMTLMesh *)(id)sub_1B64A6B40((uint64_t)v23);

          uint64_t v4 = v3;
          if (v24) {
            goto LABEL_15;
          }
        }
        else
        {
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_1B664D9F0(a1, (uint64_t)v60);
  uint64_t v25 = MEMORY[0x1BA9B8670](v60);
  sub_1B66490B8((uint64_t)v60);
  if (v25)
  {
    self;
    uint64_t v26 = (void *)swift_dynamicCastObjCClass();
    if (v26)
    {
      id v27 = objc_msgSend(v26, sel_model);
      swift_unknownObjectRelease();
      if (v27)
      {
        id v28 = objc_msgSend(v27, sel_mesh);

        if (v28)
        {
          id v29 = objc_msgSend(v28, sel_meshRef);
          id v30 = v28;
          id v31 = v29;
          char v24 = sub_1B653C844((uint64_t)a3, (uint64_t)v31, 1);

          if (v24)
          {
LABEL_15:
            unint64_t v32 = v24;
            uint64_t v33 = sub_1B64A6B40((uint64_t)v32);
            a2[3] = v33;
            id v36 = (id)sub_1B659C670((uint64_t)v32, 0, v34, v35);
            if (v36)
            {
              uint64_t v39 = (uint64_t)v36;
              id v40 = (id)sub_1B653EFC4((uint64_t)v32);
              id v41 = objc_msgSend(v40, sel_attributes);

              id v42 = objc_msgSend(v41, sel_objectAtIndexedSubscript_, 0);
              if (v42)
              {
                swift_unknownObjectRetain();
                id v58 = objc_msgSend(v42, sel_offset);
                uint64_t v43 = sub_1B6BBC7DC((uint64_t)objc_msgSend(v42, sel_format));
                uint64_t v61 = v4;
                uint64_t v44 = v43 * v33;
                id v45 = objc_msgSend(v42, sel_format);
                swift_unknownObjectRetain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v60[0] = *a2;
                *a2 = 0x8000000000000000;
                uint64_t v47 = v44;
                uint64_t v4 = v61;
                sub_1B67E9180(v39, (uint64_t)v58, v47, (uint64_t)v45, 0x6E6F697469736F70, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
                *a2 = v60[0];

                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_unknownObjectRelease();
              }
            }
            id v48 = (id)sub_1B659C670((uint64_t)v32, (const char *)1, v37, v38);
            if (v48)
            {
              uint64_t v49 = (uint64_t)v48;
              id v50 = (id)sub_1B653EFC4((uint64_t)v32);
              id v51 = objc_msgSend(v50, sel_attributes);

              id v52 = objc_msgSend(v51, sel_objectAtIndexedSubscript_, 1);
              if (v52)
              {
                swift_unknownObjectRetain();
                id v59 = objc_msgSend(v52, sel_offset);
                uint64_t v53 = sub_1B6BBC7DC((uint64_t)objc_msgSend(v52, sel_format));
                uint64_t v54 = a2[3];
                uint64_t v61 = v4;
                uint64_t v55 = v54 * v53;
                id v56 = objc_msgSend(v52, sel_format);
                swift_unknownObjectRetain();
                char v57 = swift_isUniquelyReferenced_nonNull_native();
                v60[0] = *a2;
                *a2 = 0x8000000000000000;
                sub_1B67E9180(v49, (uint64_t)v59, v55, (uint64_t)v56, 0x6C616D726F6ELL, 0xE600000000000000, v57);
                *a2 = v60[0];

                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                goto LABEL_25;
              }
              swift_unknownObjectRelease();
            }
          }
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
LABEL_25:
}

unint64_t sub_1B6C99034()
{
  unint64_t result = qword_1E9DD8070;
  if (!qword_1E9DD8070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8070);
  }
  return result;
}

uint64_t sub_1B6C99088()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B6C99098(uint64_t a1)
{
  return a1;
}

void sub_1B6C99120()
{
  if (!qword_1E9DD1EC0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1EC0);
    }
  }
}

uint64_t sub_1B6C9918C(uint64_t a1)
{
  uint64_t v186 = *MEMORY[0x1E4F143B8];
  long long v169 = *(_OWORD *)(a1 + 48);
  long long v2 = *(_OWORD *)(a1 + 16);
  swift_retain();
  sub_1B695EE48(*((uint64_t *)&v2 + 1), &v170);
  swift_release();
  v166 = (uint64_t *)a1;
  if (v171.u8[8] == 2)
  {
    unint64_t v167 = 0;
    LODWORD(v161) = 0;
    LODWORD(v162) = 0;
    __int32 v3 = 0;
    unsigned int v160 = 1;
    uint64_t v157 = 0x400000003F800000;
    unsigned __int32 v4 = -1;
    LODWORD(v158) = 1;
    LODWORD(v159) = 1;
  }
  else
  {
    __int32 v3 = v172.i32[0];
    uint64_t v157 = v171.i64[0];
    uint64_t v158 = ((unint64_t)v171.i64[1] >> 8) & 1;
    uint64_t v159 = ((unint64_t)v171.i64[1] >> 16) & 1;
    unsigned __int32 v4 = v170.n128_u32[0];
    unint64_t v167 = v170.n128_u64[0] & 0xFFFFFFFF00000000;
    unsigned int v160 = v171.i8[8] & 1;
    uint64_t v161 = ((unint64_t)v171.i64[1] >> 24) & 1;
    uint64_t v162 = HIDWORD(v171.i64[1]) & 1;
  }
  swift_retain();
  sub_1B62E9D50(*((void **)&v2 + 1), (uint64_t)v184);
  uint64_t v5 = v184[0];
  uint64_t v6 = v184[1];
  uint64_t v7 = v184[2];
  uint64_t v8 = v184[3];
  uint64_t v9 = v184[4];
  uint64_t v10 = v184[5];
  uint64_t v11 = v184[6];
  uint64_t v12 = v184[7];
  swift_release();
  sub_1B62D7FE8((uint64_t)v184, (uint64_t)v185, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
  if (v185[64])
  {
    long long v155 = xmmword_1B6E4F370;
    float32x4_t v153 = (float32x4_t)xmmword_1B6E4F2E0;
    float32x4_t v151 = (float32x4_t)xmmword_1B6E4F320;
    float32x4_t v149 = (float32x4_t)xmmword_1B6E4F300;
  }
  else
  {
    *(void *)&long long v13 = v5;
    *((void *)&v13 + 1) = v6;
    float32x4_t v149 = (float32x4_t)v13;
    *(void *)&long long v13 = v7;
    *((void *)&v13 + 1) = v8;
    float32x4_t v151 = (float32x4_t)v13;
    *(void *)&long long v13 = v9;
    *((void *)&v13 + 1) = v10;
    float32x4_t v153 = (float32x4_t)v13;
    *(void *)&long long v13 = v11;
    *((void *)&v13 + 1) = v12;
    long long v155 = v13;
  }
  swift_retain();
  uint64_t v14 = sub_1B695E820(v167 | v4);
  unint64_t v16 = v15;
  swift_release();
  if (v14)
  {
    if (!*(void *)(v14 + 16))
    {
      unint64_t v20 = 0;
      uint64_t v146 = 0;
      uint64_t v147 = 0;
      uint64_t v21 = 0;
      goto LABEL_22;
    }
    uint64_t v17 = sub_1B62B2CE0(0x6E6F697469736F70, 0xE800000000000000);
    if (v18)
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v14 + 56) + 32 * v17);
      unint64_t v20 = v19[3];
      uint64_t v146 = v19[2];
      uint64_t v147 = v19[1];
      uint64_t v21 = *v19;
      swift_unknownObjectRetain();
      if (!*(void *)(v14 + 16)) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v146 = 0;
      uint64_t v147 = 0;
      unint64_t v20 = 0;
      if (!*(void *)(v14 + 16)) {
        goto LABEL_22;
      }
    }
    uint64_t v25 = sub_1B62B2CE0(0x726F6C6F63, 0xE500000000000000);
    if (v26)
    {
      id v27 = (uint64_t *)(*(void *)(v14 + 56) + 32 * v25);
      uint64_t v144 = v27[2];
      uint64_t v145 = v27[1];
      unint64_t v148 = v27[3];
      uint64_t v168 = *v27;
      swift_unknownObjectRetain();
      if (*(void *)(v14 + 16))
      {
LABEL_23:
        uint64_t v30 = sub_1B62B2CE0(0x6C616D726F6ELL, 0xE600000000000000);
        if (v31)
        {
          unint64_t v32 = (uint64_t *)(*(void *)(v14 + 56) + 32 * v30);
          uint64_t v29 = *v32;
          unint64_t v28 = v32[3];
          uint64_t v142 = v32[2];
          uint64_t v143 = v32[1];
          swift_unknownObjectRetain();
          if (!*(void *)(v14 + 16)) {
            goto LABEL_29;
          }
        }
        else
        {
          uint64_t v29 = 0;
          uint64_t v142 = 0;
          uint64_t v143 = 0;
          unint64_t v28 = 0;
          if (!*(void *)(v14 + 16)) {
            goto LABEL_29;
          }
        }
        uint64_t v33 = sub_1B62B2CE0(0x797469636F6C6576, 0xE800000000000000);
        if (v34)
        {
          uint64_t v35 = (uint64_t *)(*(void *)(v14 + 56) + 32 * v33);
          unint64_t v36 = v35[3];
          uint64_t v140 = v35[2];
          uint64_t v141 = v35[1];
          uint64_t v165 = *v35;
          swift_unknownObjectRetain();
          goto LABEL_30;
        }
LABEL_29:
        uint64_t v165 = 0;
        uint64_t v140 = 0;
        uint64_t v141 = 0;
        unint64_t v36 = 0;
LABEL_30:
        if (*(void *)(v14 + 16))
        {
          uint64_t v37 = sub_1B62B2CE0(1702521203, 0xE400000000000000);
          if (v38)
          {
            uint64_t v39 = (uint64_t *)(*(void *)(v14 + 56) + 32 * v37);
            unint64_t v40 = v39[3];
            uint64_t v138 = v39[2];
            uint64_t v139 = v39[1];
            uint64_t v164 = *v39;
            swift_unknownObjectRetain();
            if (!*(void *)(v14 + 16)) {
              goto LABEL_38;
            }
          }
          else
          {
            uint64_t v164 = 0;
            uint64_t v138 = 0;
            uint64_t v139 = 0;
            unint64_t v40 = 0;
            if (!*(void *)(v14 + 16)) {
              goto LABEL_38;
            }
          }
          uint64_t v41 = sub_1B62B2CE0(0x7461746E6569726FLL, 0xEB000000006E6F69);
          if (v42)
          {
            uint64_t v43 = (uint64_t *)(*(void *)(v14 + 56) + 32 * v41);
            unint64_t v44 = v43[3];
            uint64_t v136 = v43[2];
            uint64_t v137 = v43[1];
            uint64_t v163 = *v43;
            swift_unknownObjectRetain();
LABEL_39:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(double *)v45.i64 = sub_1B6A81A4C();
            if ((v16 & 0x8000000000000000) != 0) {
              goto LABEL_53;
            }
            unint64_t v49 = v148;
            float32x4_t v50 = (float32x4_t)v155;
            if (HIDWORD(v16)) {
              goto LABEL_53;
            }
            if (!v21) {
              goto LABEL_54;
            }
            if (v20 >= 0x100) {
              goto LABEL_53;
            }
            if (!v168) {
              goto LABEL_55;
            }
            while (v49 >= 0x100)
            {
LABEL_53:
              while (1)
              {
                sub_1B6E32BD8();
                __break(1u);
LABEL_54:
                LOBYTE(v20) = 0;
                if (v168) {
                  break;
                }
LABEL_55:
                LOBYTE(v49) = 0;
                if (v29) {
                  goto LABEL_46;
                }
LABEL_56:
                unint64_t v28 = 0;
                if (v163) {
                  goto LABEL_48;
                }
LABEL_57:
                unint64_t v44 = 0;
                if (v165) {
                  goto LABEL_50;
                }
LABEL_58:
                unint64_t v36 = 0;
                if (!v164) {
                  goto LABEL_59;
                }
LABEL_52:
                if (v40 < 0x100) {
                  goto LABEL_60;
                }
              }
            }
            if (!v29) {
              goto LABEL_56;
            }
LABEL_46:
            if (v28 >= 0x100) {
              goto LABEL_53;
            }
            if (!v163) {
              goto LABEL_57;
            }
LABEL_48:
            if (v44 >= 0x100) {
              goto LABEL_53;
            }
            if (!v165) {
              goto LABEL_58;
            }
LABEL_50:
            if (v36 >= 0x100) {
              goto LABEL_53;
            }
            if (v164) {
              goto LABEL_52;
            }
LABEL_59:
            LOBYTE(v40) = 0;
LABEL_60:
            float32x4_t v51 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v45, v149.f32[0]), v46, *(float32x2_t *)v149.f32, 1), v47, v149, 2), v48, v149, 3);
            float32x4_t v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v45, v151.f32[0]), v46, *(float32x2_t *)v151.f32, 1), v47, v151, 2), v48, v151, 3);
            float32x4_t v53 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v45, v153.f32[0]), v46, *(float32x2_t *)v153.f32, 1), v47, v153, 2), v48, v153, 3);
            float32x4_t v54 = vmulq_n_f32(v45, v50.f32[0]);
            int32x4_t v55 = (int32x4_t)vmulq_f32(v51, v51);
            float32x4_t v56 = vmulq_f32(v52, v52);
            int32x4_t v57 = (int32x4_t)vmulq_f32(v53, v53);
            int32x4_t v58 = vzip2q_s32(v55, v57);
            float32x4_t v59 = (float32x4_t)vzip1q_s32(vzip1q_s32(v55, v57), (int32x4_t)v56);
            float32x4_t v60 = (float32x4_t)vtrn2q_s32(v55, (int32x4_t)v56);
            v60.i32[2] = v57.i32[1];
            float32x4_t v61 = vaddq_f32((float32x4_t)vzip1q_s32(v58, vdupq_laneq_s32((int32x4_t)v56, 2)), vaddq_f32(v59, v60));
            v56.i64[0] = 0x80000000800000;
            v56.i64[1] = 0x80000000800000;
            int32x4_t v62 = vcgeq_f32(v56, v61);
            v61.i32[3] = 0;
            float32x4_t v63 = vrsqrteq_f32(v61);
            float32x4_t v64 = vmulq_f32(v63, vrsqrtsq_f32(v61, vmulq_f32(v63, v63)));
            int32x4_t v65 = v62;
            v65.i32[3] = 0;
            float32x4_t v66 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v65), (int8x16_t)v61, (int8x16_t)vmulq_f32(v64, vrsqrtsq_f32(v61, vmulq_f32(v64, v64))));
            float32x4_t v67 = vmulq_n_f32(v51, v66.f32[0]);
            float32x4_t v68 = vmulq_lane_f32(v52, *(float32x2_t *)v66.f32, 1);
            float32x4_t v69 = vmulq_laneq_f32(v53, v66, 2);
            int8x16_t v70 = (int8x16_t)vuzp1q_s32((int32x4_t)v69, (int32x4_t)v69);
            int8x16_t v71 = (int8x16_t)vuzp1q_s32((int32x4_t)v68, (int32x4_t)v68);
            int32x4_t v72 = (int32x4_t)v67;
            if (v62.i32[0])
            {
              int8x16_t v73 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v70, (int8x16_t)v69, 0xCuLL), vnegq_f32(v68)), v69, (float32x4_t)vextq_s8(v71, (int8x16_t)v68, 0xCuLL));
              int32x4_t v72 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v73, (int32x4_t)v73), v73, 0xCuLL);
            }
            float32x4_t v74 = vmlaq_lane_f32(v54, v46, *(float32x2_t *)v50.f32, 1);
            int8x16_t v75 = (int8x16_t)vuzp1q_s32((int32x4_t)v67, (int32x4_t)v67);
            float32x4_t v76 = v68;
            if (v62.i32[1])
            {
              int8x16_t v77 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v75, (int8x16_t)v67, 0xCuLL), vnegq_f32(v69)), v67, (float32x4_t)vextq_s8(v70, (int8x16_t)v69, 0xCuLL));
              float32x4_t v76 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v77, (int32x4_t)v77), v77, 0xCuLL);
            }
            float32x4_t v78 = vmlaq_laneq_f32(v74, v47, v50, 2);
            if (v62.i32[2])
            {
              int8x16_t v79 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v71, (int8x16_t)v68, 0xCuLL), vnegq_f32(v67)), v68, (float32x4_t)vextq_s8(v75, (int8x16_t)v67, 0xCuLL));
              float32x4_t v69 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v79, (int32x4_t)v79), v79, 0xCuLL);
            }
            float32x4_t v80 = vmlaq_laneq_f32(v78, v48, v50, 3);
            float v81 = (float)(*(float *)v72.i32 + v76.f32[1]) + v69.f32[2];
            if (v81 > 0.0)
            {
              float32x4_t v82 = (float32x4_t)vzip2q_s32((int32x4_t)v76, vuzp1q_s32((int32x4_t)v76, (int32x4_t)v69));
              v82.i32[2] = v72.i32[1];
              float32x4_t v83 = (float32x4_t)vtrn2q_s32((int32x4_t)v69, vzip2q_s32((int32x4_t)v69, v72));
              v83.i32[2] = v76.i32[0];
              float32x4_t v84 = vsubq_f32(v82, v83);
              v82.i32[3] = sqrtf(v81 + 1.0);
              v83.i32[3] = v82.i32[3];
              int32x4_t v72 = (int32x4_t)vmulq_f32(v82, v83);
              v84.i32[3] = v72.i32[3];
              *(float *)v72.i32 = 0.5 / v82.f32[3];
LABEL_68:
              float32x4_t v85 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v72.i8, 0);
LABEL_77:
              float32x4_t v154 = v52;
              float32x4_t v156 = v51;
              __n128 v170 = (__n128)v51;
              float32x4_t v171 = v52;
              float32x4_t v150 = v80;
              float32x4_t v152 = v53;
              float32x4_t v172 = v53;
              float32x4_t v173 = v80;
              float32x4_t v174 = vmulq_f32(v84, v85);
              uint64_t v175 = v157;
              int v176 = v16;
              __int32 v177 = v3;
              char v178 = v20;
              char v179 = v49;
              char v180 = v28;
              char v181 = v44;
              char v182 = v36;
              char v183 = v40;
              uint64_t v95 = *v166;
              if (*v166)
              {
                uint64_t ObjectType = swift_getObjectType();
                type metadata accessor for emitter_pointcache_uniforms(0);
                sub_1B6B594A8((uint64_t)&v170, 1, ObjectType, v97, v98, v99, v100, v101);
                if (v21) {
                  uint64_t v102 = v146;
                }
                else {
                  uint64_t v102 = 0;
                }
                if (v21) {
                  uint64_t v103 = v147;
                }
                else {
                  uint64_t v103 = 0;
                }
                swift_getObjectType();
                uint64_t v104 = swift_unknownObjectRetain();
                sub_1B6B59478(v104, v103, v102, 0);
                swift_unknownObjectRelease();
                uint64_t v105 = v168;
                if (v168) {
                  uint64_t v106 = v144;
                }
                else {
                  uint64_t v106 = 0;
                }
                if (v168) {
                  uint64_t v107 = v145;
                }
                else {
                  uint64_t v107 = 0;
                }
                swift_getObjectType();
                uint64_t v108 = swift_unknownObjectRetain();
                sub_1B6B59478(v108, v107, v106, 0);
                swift_unknownObjectRelease();
                if (v29) {
                  uint64_t v109 = v142;
                }
                else {
                  uint64_t v109 = 0;
                }
                if (v29) {
                  uint64_t v110 = v143;
                }
                else {
                  uint64_t v110 = 0;
                }
                swift_getObjectType();
                uint64_t v111 = swift_unknownObjectRetain();
                sub_1B6B59478(v111, v110, v109, 0);
                swift_unknownObjectRelease();
                uint64_t v112 = v165;
                if (v165) {
                  uint64_t v113 = v140;
                }
                else {
                  uint64_t v113 = 0;
                }
                if (v165) {
                  uint64_t v114 = v141;
                }
                else {
                  uint64_t v114 = 0;
                }
                swift_getObjectType();
                uint64_t v115 = swift_unknownObjectRetain();
                sub_1B6B59478(v115, v114, v113, 0);
                swift_unknownObjectRelease();
                uint64_t v116 = v164;
                if (v164) {
                  uint64_t v117 = v138;
                }
                else {
                  uint64_t v117 = 0;
                }
                if (v164) {
                  uint64_t v118 = v139;
                }
                else {
                  uint64_t v118 = 0;
                }
                swift_getObjectType();
                uint64_t v119 = swift_unknownObjectRetain();
                sub_1B6B59478(v119, v118, v117, 0);
                swift_unknownObjectRelease();
                uint64_t v120 = v163;
                if (v163) {
                  uint64_t v121 = v136;
                }
                else {
                  uint64_t v121 = 0;
                }
                if (v163) {
                  uint64_t v122 = v137;
                }
                else {
                  uint64_t v122 = 0;
                }
                swift_getObjectType();
                uint64_t v123 = swift_unknownObjectRetain();
                sub_1B6B59478(v123, v122, v121, 0);
                swift_unknownObjectRelease();
              }
              else
              {
                uint64_t v105 = v168;
                uint64_t v116 = v164;
                uint64_t v112 = v165;
                uint64_t v120 = v163;
              }
              sub_1B62D89B0(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
              uint64_t v124 = swift_allocObject();
              uint64_t v125 = v124;
              *(_OWORD *)(v124 + 16) = xmmword_1B6E89D00;
              if (v21) {
                uint64_t v126 = v160;
              }
              else {
                uint64_t v126 = 0;
              }
              *(_OWORD *)(v124 + 32) = xmmword_1B6EBDD00;
              if (v105) {
                uint64_t v127 = v158;
              }
              else {
                uint64_t v127 = 0;
              }
              *(unsigned char *)(v124 + 48) = 0;
              *(void *)(v124 + 64) = v126;
              if (v112 | v29) {
                uint64_t v128 = v159;
              }
              else {
                uint64_t v128 = 0;
              }
              *(_OWORD *)(v124 + 72) = 0u;
              *(_OWORD *)(v124 + 88) = 0u;
              if (v120 | v29) {
                uint64_t v129 = v161;
              }
              else {
                uint64_t v129 = 0;
              }
              *(_OWORD *)(v124 + 104) = 0uLL;
              *(void *)(v124 + 120) = 0;
              *(unsigned char *)(v124 + 128) = 13;
              *(_OWORD *)(v124 + 144) = xmmword_1B6EBDD10;
              *(unsigned char *)(v124 + 160) = 0;
              *(void *)(v124 + 176) = v127;
              *(_OWORD *)(v124 + 184) = 0uLL;
              *(_OWORD *)(v124 + 200) = 0uLL;
              *(_OWORD *)(v124 + 216) = 0uLL;
              *(void *)(v124 + 232) = 0;
              *(unsigned char *)(v124 + 240) = 13;
              *(_OWORD *)(v124 + 256) = xmmword_1B6EBDD20;
              *(unsigned char *)(v124 + 272) = 0;
              *(void *)(v124 + 288) = v128;
              *(void *)(v124 + 344) = 0;
              *(_OWORD *)(v124 + 312) = 0uLL;
              *(_OWORD *)(v124 + 328) = 0uLL;
              *(_OWORD *)(v124 + 296) = 0uLL;
              *(unsigned char *)(v124 + 352) = 13;
              *(_OWORD *)(v124 + 368) = xmmword_1B6EBDD30;
              *(unsigned char *)(v124 + 384) = 0;
              *(void *)(v124 + 400) = v129;
              *(_OWORD *)(v124 + 408) = 0uLL;
              *(_OWORD *)(v124 + 424) = 0uLL;
              *(_OWORD *)(v124 + 440) = 0uLL;
              *(void *)(v124 + 456) = 0;
              *(unsigned char *)(v124 + 464) = 13;
              if (v116) {
                uint64_t v130 = v162;
              }
              else {
                uint64_t v130 = 0;
              }
              *(_OWORD *)(v124 + 480) = xmmword_1B6EBDD40;
              *(unsigned char *)(v124 + 496) = 0;
              *(void *)(v124 + 512) = v130;
              *(void *)(v124 + 568) = 0;
              *(_OWORD *)(v124 + 536) = 0uLL;
              *(_OWORD *)(v124 + 552) = 0uLL;
              *(_OWORD *)(v124 + 520) = 0uLL;
              float32x4_t v131 = (float32x4_t)vdupq_n_s32(0x358637BDu);
              *(unsigned char *)(v124 + 576) = 13;
              BOOL v133 = (vminvq_u32((uint32x4_t)vcgtq_f32(v131, vabsq_f32(vaddq_f32(v156, (float32x4_t)xmmword_1B6E72490)))) & 0x80000000) == 0
                  || (vminvq_u32((uint32x4_t)vcgtq_f32(v131, vabsq_f32(vaddq_f32(v154, (float32x4_t)xmmword_1B6E724B0)))) & 0x80000000) == 0
                  || (float32x4_t v132 = (float32x4_t)vdupq_n_s32(0x358637BDu),
                      (vminvq_u32((uint32x4_t)vcgtq_f32(v132, vabsq_f32(vaddq_f32(v152, (float32x4_t)xmmword_1B6E724A0)))) & 0x80000000) == 0)|| (vminvq_u32((uint32x4_t)vcgtq_f32(v132, vabsq_f32(vaddq_f32(v150, (float32x4_t)xmmword_1B6E500A0)))) & 0x80000000) == 0;
              *(_OWORD *)(v124 + 592) = xmmword_1B6EBDD50;
              *(unsigned char *)(v124 + 608) = 0;
              *(void *)(v124 + 624) = v133;
              *(void *)(v124 + 680) = 0;
              *(_OWORD *)(v124 + 632) = 0uLL;
              *(_OWORD *)(v124 + 648) = 0uLL;
              *(_OWORD *)(v124 + 664) = 0uLL;
              *(unsigned char *)(v124 + 688) = 13;
              swift_retain();
              sub_1B6786A24((uint64_t)v166);
              sub_1B6BFF388(v169, v2, v95 == 0, v125, (uint64_t)v166, 0xD000000000000012, 0x80000001B6F50640, 0);
              sub_1B6786A7C((uint64_t)v166);
              swift_release();
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_deallocClassInstance();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              return swift_unknownObjectRelease();
            }
            if (*(float *)v72.i32 < v76.f32[1] || *(float *)v72.i32 < v69.f32[2])
            {
              if (v76.f32[1] <= v69.f32[2])
              {
                *(float32x2_t *)v84.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v72, (int32x4_t)v76), *(float32x2_t *)v69.f32);
                float32x2_t v134 = (float32x2_t)__PAIR64__(v72.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v69.f32[2] + 1.0) - *(float *)v72.i32) - v76.f32[1])));
                float32x2_t v135 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v76.f32, 0);
                *(float32x2_t *)v72.i8 = vsub_f32(*(float32x2_t *)v72.i8, v135);
                v135.i32[0] = v134.i32[0];
                v135.i32[0] = vmul_f32(v134, v135).u32[0];
                v135.i32[1] = v72.i32[1];
                *(float32x2_t *)&v84.u32[2] = v135;
                *(float *)v72.i32 = 0.5 / v134.f32[0];
                goto LABEL_68;
              }
              float v89 = sqrtf((float)((float)(v76.f32[1] + 1.0) - *(float *)v72.i32) - v69.f32[2]);
              *(int32x2_t *)v48.f32 = vdup_laneq_s32((int32x4_t)v76, 2);
              int8x16_t v87 = (int8x16_t)v48;
              *(float *)v87.i32 = v89;
              v87.i32[0] = vmul_f32(*(float32x2_t *)v87.i8, (float32x2_t)__PAIR64__(v69.u32[1], LODWORD(v89))).u32[0];
              v87.i32[1] = vadd_f32(*(float32x2_t *)&v48, *(float32x2_t *)&v69).i32[1];
              int8x16_t v88 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v72.i8, 1), v76);
              int32x2_t v94 = (int32x2_t)vsubq_f32(v69, (float32x4_t)vdupq_laneq_s32(v72, 2)).u64[0];
              float32x4_t v85 = (float32x4_t)vextq_s8(vextq_s8(v88, v88, 4uLL), v87, 0xCuLL);
              v85.i32[3] = v94.i32[0];
            }
            else
            {
              float v89 = sqrtf((float)((float)(*(float *)v72.i32 + 1.0) - v76.f32[1]) - v69.f32[2]);
              float32x2_t v90 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v76.f32, 0);
              float32x2_t v91 = vadd_f32(*(float32x2_t *)v72.i8, v90);
              v90.f32[0] = v89;
              v85.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v72.u32[1], LODWORD(v89)), v90).u32[0];
              v85.i32[1] = v91.i32[1];
              float32x2_t v92 = (float32x2_t)vzip2q_s32(v72, (int32x4_t)v76).u64[0];
              LODWORD(v93) = vadd_f32(v92, *(float32x2_t *)v69.f32).u32[0];
              int32x2_t v94 = (int32x2_t)vsub_f32(v92, *(float32x2_t *)v69.f32);
              HIDWORD(v93) = v94.i32[1];
              v85.i64[1] = v93;
            }
            *(float *)v94.i32 = 0.5 / v89;
            float32x4_t v84 = (float32x4_t)vdupq_lane_s32(v94, 0);
            goto LABEL_77;
          }
        }
        else
        {
          unint64_t v40 = 0;
          uint64_t v138 = 0;
          uint64_t v139 = 0;
          uint64_t v164 = 0;
        }
LABEL_38:
        uint64_t v163 = 0;
        uint64_t v136 = 0;
        uint64_t v137 = 0;
        unint64_t v44 = 0;
        goto LABEL_39;
      }
LABEL_21:
      unint64_t v28 = 0;
      uint64_t v142 = 0;
      uint64_t v143 = 0;
      uint64_t v29 = 0;
      goto LABEL_29;
    }
LABEL_22:
    uint64_t v168 = 0;
    uint64_t v144 = 0;
    uint64_t v145 = 0;
    unint64_t v148 = 0;
    if (*(void *)(v14 + 16)) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v170.n128_u64[0] = 0;
  v170.n128_u64[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  v170.n128_u64[0] = 0xD000000000000014;
  v170.n128_u64[1] = 0x80000001B6F50620;
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  __n128 v22 = v170;
  int v23 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v170.n128_u64[0] = 0;
  swift_retain();
  sub_1B6B33E34(v23, (uint64_t *)&v170, v22.n128_i64[0], v22.n128_i64[1]);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6C9A068(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 96);
  long long v144 = *(_OWORD *)(a1 + 80);
  long long v145 = v2;
  long long v3 = *(_OWORD *)(a1 + 128);
  long long v146 = *(_OWORD *)(a1 + 112);
  long long v147 = v3;
  long long v4 = *(_OWORD *)(a1 + 32);
  long long v140 = *(_OWORD *)(a1 + 16);
  long long v141 = v4;
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v142 = *(_OWORD *)(a1 + 48);
  long long v143 = v5;
  uint64_t v6 = v140;
  swift_retain_n();
  if (*((void *)&v140 + 1) == 0xFFFFFFFFLL
    || (DWORD2(v140) & 0x80000000) != 0
    || *(void *)(v140 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= SDWORD2(v140)
    || (uint64_t v7 = *(void *)(v140 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(v140) != -1)
    && *(_DWORD *)(v7 + 12 * SDWORD2(v140) + 8) != HIDWORD(v140))
  {
    swift_release();
LABEL_7:
    LODWORD(v8) = 0;
    LODWORD(v9) = -1;
    goto LABEL_8;
  }
  unint64_t v9 = sub_1B6965954(*(void *)(*(void *)(v140 + 136) + 8 * *(int *)(v7 + 12 * SDWORD2(v140)) + 32), *(_DWORD *)(v7 + 12 * SDWORD2(v140)), *(_WORD *)(v7 + 12 * SDWORD2(v140) + 4), 12, v140);
  char v23 = v22;
  swift_release();
  if (v23 == 2) {
    goto LABEL_7;
  }
  unint64_t v8 = HIDWORD(v9);
  if (v9 == -1)
  {
LABEL_8:
    if (!v8) {
      goto LABEL_16;
    }
  }
  if ((v9 & 0x80000000) == 0 && *(void *)(v140 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v9)
  {
    uint64_t v10 = *(void *)(v140 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v8 == -1 || *(_DWORD *)(v10 + 12 * (int)v9 + 8) == v8)
    {
      uint64_t v11 = sub_1B69651E8(*(void *)(*(void *)(v140 + 136) + 8 * *(int *)(v10 + 12 * (int)v9) + 32), *(_DWORD *)(v10 + 12 * (int)v9), *(_WORD *)(v10 + 12 * (int)v9 + 4), 32, v140);
      if (v11)
      {
        uint64_t v131 = v11;
        unint64_t v130 = v12;
        swift_retain();
        sub_1B62E9D50((void *)(DWORD2(v140) | ((unint64_t)HIDWORD(v140) << 32)), (uint64_t)v138);
        uint64_t v13 = v138[0];
        uint64_t v14 = v138[1];
        uint64_t v15 = v138[2];
        uint64_t v16 = v138[3];
        uint64_t v18 = v138[4];
        uint64_t v17 = v138[5];
        uint64_t v20 = v138[6];
        uint64_t v19 = v138[7];
        swift_release();
        sub_1B62D7FE8((uint64_t)v138, (uint64_t)v139, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
        if (v139[64])
        {
          float32x4_t v129 = (float32x4_t)xmmword_1B6E4F370;
          float32x4_t v125 = (float32x4_t)xmmword_1B6E4F2E0;
          float32x4_t v124 = (float32x4_t)xmmword_1B6E4F320;
          float32x4_t v123 = (float32x4_t)xmmword_1B6E4F300;
        }
        else
        {
          v24.i64[0] = v13;
          v24.i64[1] = v14;
          float32x4_t v123 = v24;
          v24.i64[0] = v15;
          v24.i64[1] = v16;
          float32x4_t v124 = v24;
          v24.i64[0] = v18;
          v24.i64[1] = v17;
          float32x4_t v125 = v24;
          v24.i64[0] = v20;
          v24.i64[1] = v19;
          float32x4_t v129 = v24;
        }
        *(double *)v25.i64 = sub_1B6335378();
        float32x4_t v122 = v25;
        float32x4_t v126 = v26;
        float32x4_t v127 = v27;
        float32x4_t v128 = v28;
        if (!*(void *)(v131 + 16)
          || (uint64_t v29 = sub_1B62B2CE0(0x6E6F697469736F70, 0xE800000000000000), (v30 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        char v31 = (void *)(*(void *)(v131 + 56) + 32 * v29);
        uint64_t v32 = v31[1];
        uint64_t v33 = v31[2];
        unint64_t v34 = v31[3];
        unint64_t v35 = *(void *)(v131 + 16);
        swift_unknownObjectRetain();
        if (v35)
        {
          uint64_t v36 = sub_1B62B2CE0(0x726F6C6F63, 0xE500000000000000);
          if (v37)
          {
            char v38 = (uint64_t *)(*(void *)(v131 + 56) + 32 * v36);
            uint64_t v118 = v38[1];
            uint64_t v39 = v38[2];
            unint64_t v40 = v38[3];
            uint64_t v121 = *v38;
            swift_unknownObjectRetain();
          }
          else
          {
            uint64_t v121 = 0;
            uint64_t v118 = 0;
            uint64_t v39 = 0;
            unint64_t v40 = 0;
          }
          uint64_t v119 = v39;
          if (*(void *)(v131 + 16) && (uint64_t v41 = sub_1B62B2CE0(1702521203, 0xE400000000000000), (v42 & 1) != 0))
          {
            uint64_t v43 = (uint64_t *)(*(void *)(v131 + 56) + 32 * v41);
            unint64_t v35 = v43[3];
            uint64_t v116 = v43[2];
            uint64_t v117 = v43[1];
            uint64_t v120 = *v43;
            swift_unknownObjectRetain();
          }
          else
          {
            uint64_t v120 = 0;
            uint64_t v116 = 0;
            uint64_t v117 = 0;
            unint64_t v35 = 0;
          }
        }
        else
        {
          unint64_t v40 = 0;
          uint64_t v118 = 0;
          uint64_t v119 = 0;
          uint64_t v120 = 0;
          uint64_t v121 = 0;
          uint64_t v116 = 0;
          uint64_t v117 = 0;
        }
        if (*(void *)(v131 + 16) && (uint64_t v44 = sub_1B62B2CE0(0x7461746E6569726FLL, 0xEB000000006E6F69), (v45 & 1) != 0))
        {
          float32x4_t v46 = (uint64_t *)(*(void *)(v131 + 56) + 32 * v44);
          uint64_t v47 = *v46;
          unint64_t v48 = v46[3];
          uint64_t v114 = v46[2];
          uint64_t v115 = v46[1];
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v47 = 0;
          uint64_t v114 = 0;
          uint64_t v115 = 0;
          unint64_t v48 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v130 & 0x8000000000000000) != 0 || HIDWORD(v130) || v34 >= 0x100) {
          goto LABEL_93;
        }
        if (v121)
        {
          if (v40 >= 0x100)
          {
LABEL_93:
            uint64_t result = sub_1B6E32BD8();
            __break(1u);
            return result;
          }
        }
        else
        {
          LOBYTE(v40) = 0;
        }
        if (v120)
        {
          if (v35 >= 0x100) {
            goto LABEL_93;
          }
        }
        else
        {
          LOBYTE(v35) = 0;
        }
        if (v47)
        {
          if (v48 >= 0x100) {
            goto LABEL_93;
          }
        }
        else
        {
          LOBYTE(v48) = 0;
        }
        float32x4_t v49 = vmulq_n_f32(v122, v129.f32[0]);
        float32x4_t v50 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v122, v123.f32[0]), v126, *(float32x2_t *)v123.f32, 1), v127, v123, 2), v128, v123, 3);
        float32x4_t v51 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v122, v124.f32[0]), v126, *(float32x2_t *)v124.f32, 1), v127, v124, 2), v128, v124, 3);
        float32x4_t v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v122, v125.f32[0]), v126, *(float32x2_t *)v125.f32, 1), v127, v125, 2), v128, v125, 3);
        float32x4_t v53 = vmulq_f32(v50, v50);
        float32x4_t v54 = vmulq_f32(v51, v51);
        float32x4_t v55 = vmulq_f32(v52, v52);
        float32x4_t v56 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v54, 2);
        float32x4_t v57 = (float32x4_t)vtrn2q_s32((int32x4_t)v53, (int32x4_t)v54);
        v57.i32[2] = v55.i32[1];
        float32x4_t v58 = vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32((int32x4_t)v53, (int32x4_t)v55), (int32x4_t)v56), vaddq_f32((float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)v53, (int32x4_t)v55), (int32x4_t)v54), v57));
        v59.i64[0] = 0x80000000800000;
        v59.i64[1] = 0x80000000800000;
        int8x16_t v60 = (int8x16_t)vcgeq_f32(v59, v58);
        v58.i32[3] = 0;
        float32x4_t v61 = vrsqrteq_f32(v58);
        float32x4_t v62 = vmulq_f32(v61, vrsqrtsq_f32(v58, vmulq_f32(v61, v61)));
        int32x4_t v63 = (int32x4_t)v60;
        v63.i32[3] = 0;
        float32x4_t v64 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v63), (int8x16_t)v58, (int8x16_t)vmulq_f32(v62, vrsqrtsq_f32(v58, vmulq_f32(v62, v62))));
        float32x4_t v65 = vmulq_n_f32(v50, v64.f32[0]);
        float32x4_t v66 = vmulq_lane_f32(v51, *(float32x2_t *)v64.f32, 1);
        float32x4_t v67 = vmulq_laneq_f32(v52, v64, 2);
        int8x16_t v68 = (int8x16_t)vuzp1q_s32((int32x4_t)v67, (int32x4_t)v67);
        int8x16_t v69 = (int8x16_t)vuzp1q_s32((int32x4_t)v66, (int32x4_t)v66);
        int32x4_t v70 = (int32x4_t)v65;
        if (v60.i32[0])
        {
          int8x16_t v71 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v68, (int8x16_t)v67, 0xCuLL), vnegq_f32(v66)), v67, (float32x4_t)vextq_s8(v69, (int8x16_t)v66, 0xCuLL));
          int32x4_t v70 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v71, (int32x4_t)v71), v71, 0xCuLL);
        }
        float32x4_t v72 = vmlaq_lane_f32(v49, v126, *(float32x2_t *)v129.f32, 1);
        int8x16_t v73 = (int8x16_t)vuzp1q_s32((int32x4_t)v65, (int32x4_t)v65);
        float32x4_t v74 = v66;
        if (v60.i32[1])
        {
          int8x16_t v75 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v73, (int8x16_t)v65, 0xCuLL), vnegq_f32(v67)), v65, (float32x4_t)vextq_s8(v68, (int8x16_t)v67, 0xCuLL));
          float32x4_t v74 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v75, (int32x4_t)v75), v75, 0xCuLL);
        }
        float32x4_t v76 = vmlaq_laneq_f32(v72, v127, v129, 2);
        if (v60.i32[2])
        {
          int8x16_t v60 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v69, (int8x16_t)v66, 0xCuLL), vnegq_f32(v65)), v66, (float32x4_t)vextq_s8(v73, (int8x16_t)v65, 0xCuLL));
          float32x4_t v67 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v60, (int32x4_t)v60), v60, 0xCuLL);
        }
        float32x4_t v77 = vmlaq_laneq_f32(v76, v128, v129, 3);
        float v78 = (float)(*(float *)v70.i32 + v74.f32[1]) + v67.f32[2];
        if (v78 > 0.0)
        {
          float32x4_t v79 = (float32x4_t)vzip2q_s32((int32x4_t)v74, vuzp1q_s32((int32x4_t)v74, (int32x4_t)v67));
          v79.i32[2] = v70.i32[1];
          float v80 = sqrtf(v78 + 1.0);
          float32x4_t v81 = (float32x4_t)vtrn2q_s32((int32x4_t)v67, vzip2q_s32((int32x4_t)v67, v70));
          v81.i32[2] = v74.i32[0];
          float32x4_t v83 = vsubq_f32(v79, v81);
          v79.f32[3] = v80;
          v81.f32[3] = v80;
          float32x4_t v82 = vmulq_f32(v79, v81);
          v83.i32[3] = v82.i32[3];
LABEL_62:
          v82.f32[0] = 0.5 / v80;
          float32x4_t v84 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v82.f32, 0);
LABEL_71:
          *(void *)&long long v94 = __PAIR64__(COERCE_UNSIGNED_INT(sqrtf(vaddq_f32(v56, vaddq_f32(v54, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v54.f32, 1))).f32[0])), COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v53, 2), vaddq_f32(v53, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v53.f32, 1))).f32[0])));
          *((void *)&v94 + 1) = COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v55, 2), vaddq_f32(v55, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v55.f32, 1))).f32[0]));
          v132[0] = v50;
          v132[1] = v51;
          v132[2] = v52;
          v132[3] = v77;
          v132[4] = vmulq_f32(v83, v84);
          v132[5] = v94;
          int v133 = v130;
          char v134 = v34;
          char v135 = v40;
          char v136 = v35;
          char v137 = v48;
          uint64_t v95 = *(void *)a1;
          if (*(void *)a1)
          {
            uint64_t ObjectType = swift_getObjectType();
            type metadata accessor for pointcache_spawner_uniforms(0);
            sub_1B6B594A8((uint64_t)v132, 1, ObjectType, v97, v98, v99, v100, v101);
            swift_getObjectType();
            uint64_t v102 = swift_unknownObjectRetain();
            sub_1B6B59478(v102, v32, v33, 0);
            swift_unknownObjectRelease();
            if (v121) {
              uint64_t v103 = v119;
            }
            else {
              uint64_t v103 = 0;
            }
            if (v121) {
              uint64_t v104 = v118;
            }
            else {
              uint64_t v104 = 0;
            }
            swift_getObjectType();
            uint64_t v105 = swift_unknownObjectRetain();
            sub_1B6B59478(v105, v104, v103, 0);
            swift_unknownObjectRelease();
            if (v120) {
              uint64_t v106 = v116;
            }
            else {
              uint64_t v106 = 0;
            }
            if (v120) {
              uint64_t v107 = v117;
            }
            else {
              uint64_t v107 = 0;
            }
            swift_getObjectType();
            uint64_t v108 = swift_unknownObjectRetain();
            sub_1B6B59478(v108, v107, v106, 0);
            swift_unknownObjectRelease();
            if (v47) {
              uint64_t v109 = v114;
            }
            else {
              uint64_t v109 = 0;
            }
            if (v47) {
              uint64_t v110 = v115;
            }
            else {
              uint64_t v110 = 0;
            }
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_1B6B59478(v47, v110, v109, 0);
            swift_unknownObjectRelease();
          }
          uint64_t v111 = v142;
          swift_retain();
          sub_1B6786A24(a1);
          sub_1B6BFF388(v111, v6, v95 == 0, 0, a1, 0xD000000000000012, 0x80000001B6F506A0, 0);
          sub_1B6786A7C(a1);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          return swift_release_n();
        }
        if (*(float *)v70.i32 < v74.f32[1] || *(float *)v70.i32 < v67.f32[2])
        {
          if (v74.f32[1] <= v67.f32[2])
          {
            float v80 = sqrtf((float)((float)(v67.f32[2] + 1.0) - *(float *)v70.i32) - v74.f32[1]);
            *(float32x2_t *)v83.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v70, (int32x4_t)v74), *(float32x2_t *)v67.f32);
            float32x2_t v112 = (float32x2_t)__PAIR64__(v70.u32[1], LODWORD(v80));
            float32x2_t v113 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v74.f32, 0);
            *(float32x2_t *)v82.f32 = vsub_f32(*(float32x2_t *)v70.i8, v113);
            v113.f32[0] = v80;
            v113.i32[0] = vmul_f32(v112, v113).u32[0];
            v113.i32[1] = v82.i32[1];
            *(float32x2_t *)&v83.u32[2] = v113;
            goto LABEL_62;
          }
          float v88 = sqrtf((float)((float)(v74.f32[1] + 1.0) - *(float *)v70.i32) - v67.f32[2]);
          *(int32x2_t *)v60.i8 = vdup_laneq_s32((int32x4_t)v74, 2);
          int8x16_t v86 = v60;
          *(float *)v86.i32 = v88;
          v86.i32[0] = vmul_f32(*(float32x2_t *)v86.i8, (float32x2_t)__PAIR64__(v67.u32[1], LODWORD(v88))).u32[0];
          v86.i32[1] = vadd_f32(*(float32x2_t *)&v60, *(float32x2_t *)&v67).i32[1];
          int8x16_t v87 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v70.i8, 1), v74);
          int32x2_t v93 = (int32x2_t)vsubq_f32(v67, (float32x4_t)vdupq_laneq_s32(v70, 2)).u64[0];
          float32x4_t v84 = (float32x4_t)vextq_s8(vextq_s8(v87, v87, 4uLL), v86, 0xCuLL);
          v84.i32[3] = v93.i32[0];
        }
        else
        {
          float v88 = sqrtf((float)((float)(*(float *)v70.i32 + 1.0) - v74.f32[1]) - v67.f32[2]);
          float32x2_t v89 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v74.f32, 0);
          float32x2_t v90 = vadd_f32(*(float32x2_t *)v70.i8, v89);
          v89.f32[0] = v88;
          v84.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v70.u32[1], LODWORD(v88)), v89).u32[0];
          v84.i32[1] = v90.i32[1];
          float32x2_t v91 = (float32x2_t)vzip2q_s32(v70, (int32x4_t)v74).u64[0];
          LODWORD(v92) = vadd_f32(v91, *(float32x2_t *)v67.f32).u32[0];
          int32x2_t v93 = (int32x2_t)vsub_f32(v91, *(float32x2_t *)v67.f32);
          HIDWORD(v92) = v93.i32[1];
          v84.i64[1] = v92;
        }
        *(float *)v93.i32 = 0.5 / v88;
        float32x4_t v83 = (float32x4_t)vdupq_lane_s32(v93, 0);
        goto LABEL_71;
      }
    }
  }
LABEL_16:

  return swift_release();
}

uint64_t sub_1B6C9AA50(uint64_t *a1)
{
  uint64_t v2 = *a1;
  int v3 = *(unsigned __int8 *)(*a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96);
  swift_retain();
  if (v3 != 1) {
    goto LABEL_9;
  }
  sub_1B62F46E8();
  float v5 = v4;
  unint64_t v6 = a1[1];
  swift_retain();
  uint64_t v7 = sub_1B695EF10(v6);
  char v9 = v8;
  swift_release();
  unint64_t v10 = v9 == 2 ? 0xFFFFFFFFLL : v7;
  uint64_t v11 = sub_1B695E820(v10);
  if (v11)
  {
    uint64_t v15 = v11;
    uint64_t v16 = v12;
    uint64_t v17 = v13;
    uint64_t v18 = v14;
    sub_1B62F6B80((uint64_t)a1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6C02BFC(v6, v2, a1, v2, v15, v16, v17, v18, v5);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62F648C((uint64_t)a1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    return swift_release();
  }
}

uint64_t sub_1B6C9ABE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B63965F4(0, &qword_1E9DD8078, (uint64_t (*)(void))sub_1B6C9B060, (uint64_t)&type metadata for PointCacheEmitter.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  char v9 = (char *)&v21 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C9B060();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v6;
  char v29 = 0;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  uint64_t v11 = v27;
  sub_1B62AA858();
  char v29 = 1;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v12 = v27;
  LOBYTE(v27) = 2;
  char v14 = sub_1B6E32DA8();
  LOBYTE(v27) = 3;
  char v15 = sub_1B6E32DA8();
  LOBYTE(v27) = 4;
  int v25 = sub_1B6E32DA8();
  LOBYTE(v27) = 5;
  int v24 = sub_1B6E32DA8();
  char v29 = 6;
  sub_1B6E32D78();
  if (v28) {
    int v16 = -1;
  }
  else {
    int v16 = v27;
  }
  int v23 = v16;
  if (v28) {
    int v17 = 0;
  }
  else {
    int v17 = HIDWORD(v27);
  }
  char v29 = 7;
  sub_1B62AA8B8();
  sub_1B6E32D78();
  int v18 = v27;
  if (v27 == 3) {
    int v18 = 0;
  }
  int v22 = v18;
  LOBYTE(v27) = 8;
  uint64_t v21 = sub_1B6E32D58();
  LOBYTE(v27) = 9;
  char v19 = sub_1B6E32D38();
  if ((v21 & 0x100000000) != 0) {
    float v20 = 0.0;
  }
  else {
    float v20 = *(float *)&v21;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v26);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v11;
  *(_DWORD *)(a2 + 8) = v23;
  *(_DWORD *)(a2 + 12) = v17;
  *(void *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 24) = v14 & 1;
  *(unsigned char *)(a2 + 25) = v15 & 1;
  *(unsigned char *)(a2 + 26) = v25 & 1;
  *(unsigned char *)(a2 + 27) = v24 & 1;
  *(unsigned char *)(a2 + 28) = v19 & 1;
  *(unsigned char *)(a2 + 29) = v22;
  *(float *)(a2 + 32) = v20;
  return result;
}

unint64_t sub_1B6C9B060()
{
  unint64_t result = qword_1E9DD8080;
  if (!qword_1E9DD8080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8080);
  }
  return result;
}

void sub_1B6C9B0B4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B62C5560(255, a3);
    unint64_t v4 = sub_1B6E330A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1B6C9B10C()
{
  unint64_t result = qword_1E9DD8098;
  if (!qword_1E9DD8098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8098);
  }
  return result;
}

void *sub_1B6C9B160(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1B6C9B198(void *a1)
{
  sub_1B63965F4(0, &qword_1E9DD81A0, (uint64_t (*)(void))sub_1B6C9CA08, (uint64_t)&type metadata for PointCacheSpawner.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6C9CA08();
  sub_1B6E33A48();
  if (!v1)
  {
    char v16 = 0;
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    uint64_t v9 = v17;
    char v15 = 1;
    sub_1B6E32DA8();
    char v14 = 2;
    sub_1B6E32DA8();
    char v13 = 3;
    v11[1] = sub_1B6E32DA8();
    char v12 = 4;
    sub_1B6E32DA8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1B6C9B434(void *a1)
{
  sub_1B63965F4(0, &qword_1E9DD80A8, (uint64_t (*)(void))sub_1B6C9B6F0, (uint64_t)&type metadata for PointCacheGenerator.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6C9B6F0();
  sub_1B6E33A48();
  if (!v1)
  {
    char v15 = 0;
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    uint64_t v9 = v16;
    LOBYTE(v16) = 1;
    sub_1B6E32DD8();
    char v15 = 2;
    sub_1B66C5158();
    sub_1B6E32DF8();
    char v15 = 3;
    sub_1B6C9B744();
    sub_1B6E32DF8();
    int v14 = (unsigned __int16)v16;
    LOBYTE(v16) = 4;
    uint64_t v10 = sub_1B6E32D88();
    char v12 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v13 = v10;
    v12(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

unint64_t sub_1B6C9B6F0()
{
  unint64_t result = qword_1E9DD80B0;
  if (!qword_1E9DD80B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD80B0);
  }
  return result;
}

unint64_t sub_1B6C9B744()
{
  unint64_t result = qword_1E9DD80B8;
  if (!qword_1E9DD80B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD80B8);
  }
  return result;
}

unint64_t sub_1B6C9B798()
{
  unint64_t result = qword_1E9DD80C8;
  if (!qword_1E9DD80C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD80C8);
  }
  return result;
}

uint64_t sub_1B6C9B7EC(void *a1)
{
  sub_1B63965F4(0, &qword_1E9DD80D0, (uint64_t (*)(void))sub_1B6C9B9B8, (uint64_t)&type metadata for REMeshAssetPointCache.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v13 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v12 - v6;
  sub_1B67DDCA0(MEMORY[0x1E4FBC860]);
  uint64_t v8 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6C9B9B8();
  uint64_t v9 = (uint64_t)v8;
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v13;
    uint64_t v9 = sub_1B6E32D98();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v4);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v9;
}

unint64_t sub_1B6C9B9B8()
{
  unint64_t result = qword_1E9DD80D8;
  if (!qword_1E9DD80D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD80D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMeshAssetPointCache.CodingKeys()
{
  return &type metadata for REMeshAssetPointCache.CodingKeys;
}

ValueMetadata *type metadata accessor for PointCacheGenerator.CodingKeys()
{
  return &type metadata for PointCacheGenerator.CodingKeys;
}

unsigned char *_s3VFX21REMeshAssetPointCacheV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6C9BAD0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PointCacheFromModel.CodingKeys()
{
  return &type metadata for PointCacheFromModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PointCacheEmitter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6C9BBD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PointCacheEmitter.CodingKeys()
{
  return &type metadata for PointCacheEmitter.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PointCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6C9BCD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PointCacheError()
{
  return &type metadata for PointCacheError;
}

uint64_t initializeWithCopy for TypedBufferSlice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for TypedBufferSlice(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TypedBufferSlice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for TypedBufferSlice()
{
  return &type metadata for TypedBufferSlice;
}

uint64_t getEnumTagSinglePayload for PCacheError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PCacheError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PCacheError()
{
  return &type metadata for PCacheError;
}

void *initializeWithCopy for PointCacheRuntime(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PointCacheRuntime(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

void *assignWithTake for PointCacheRuntime(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for PointCacheRuntime()
{
  return &type metadata for PointCacheRuntime;
}

uint64_t getEnumTagSinglePayload for PointCacheEmitter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 36)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PointCacheEmitter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 36) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PointCacheEmitter()
{
  return &type metadata for PointCacheEmitter;
}

ValueMetadata *type metadata accessor for PointCacheSpawner()
{
  return &type metadata for PointCacheSpawner;
}

ValueMetadata *type metadata accessor for PointCache.BakingOptions()
{
  return &type metadata for PointCache.BakingOptions;
}

ValueMetadata *type metadata accessor for PointCache()
{
  return &type metadata for PointCache;
}

unsigned char *storeEnumTagSinglePayload for PointCache.Distribution(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6C9C17CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PointCache.Distribution()
{
  return &type metadata for PointCache.Distribution;
}

unsigned char *storeEnumTagSinglePayload for PointCacheProperty(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6C9C280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PointCacheProperty()
{
  return &type metadata for PointCacheProperty;
}

uint64_t sub_1B6C9C2B8()
{
  return sub_1B6C9C2E8(&qword_1E9DD80E8, &qword_1E9DD80F0, (uint64_t)&type metadata for PointCacheProperty);
}

uint64_t sub_1B6C9C2E8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D89B0(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6C9C34C()
{
  return sub_1B6C9C2E8(&qword_1E9DD80F8, &qword_1E9DD8100, (uint64_t)&type metadata for PointCache.Distribution);
}

unint64_t sub_1B6C9C380()
{
  unint64_t result = qword_1E9DD8108;
  if (!qword_1E9DD8108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8108);
  }
  return result;
}

unint64_t sub_1B6C9C3D8()
{
  unint64_t result = qword_1E9DD8110;
  if (!qword_1E9DD8110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8110);
  }
  return result;
}

unint64_t sub_1B6C9C430()
{
  unint64_t result = qword_1E9DD8118;
  if (!qword_1E9DD8118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8118);
  }
  return result;
}

unint64_t sub_1B6C9C488()
{
  unint64_t result = qword_1E9DD8120;
  if (!qword_1E9DD8120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8120);
  }
  return result;
}

unint64_t sub_1B6C9C4E0()
{
  unint64_t result = qword_1E9DD8128;
  if (!qword_1E9DD8128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8128);
  }
  return result;
}

unint64_t sub_1B6C9C53C()
{
  unint64_t result = qword_1E9DD8130;
  if (!qword_1E9DD8130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8130);
  }
  return result;
}

unint64_t sub_1B6C9C594()
{
  unint64_t result = qword_1E9DD8138;
  if (!qword_1E9DD8138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8138);
  }
  return result;
}

unint64_t sub_1B6C9C5EC()
{
  unint64_t result = qword_1E9DD8140;
  if (!qword_1E9DD8140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8140);
  }
  return result;
}

unint64_t sub_1B6C9C644()
{
  unint64_t result = qword_1E9DD8148;
  if (!qword_1E9DD8148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8148);
  }
  return result;
}

unint64_t sub_1B6C9C69C()
{
  unint64_t result = qword_1E9DD8150;
  if (!qword_1E9DD8150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8150);
  }
  return result;
}

unint64_t sub_1B6C9C6F4()
{
  unint64_t result = qword_1E9DD8158;
  if (!qword_1E9DD8158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8158);
  }
  return result;
}

unint64_t sub_1B6C9C74C()
{
  unint64_t result = qword_1E9DD8160;
  if (!qword_1E9DD8160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8160);
  }
  return result;
}

unint64_t sub_1B6C9C7A4()
{
  unint64_t result = qword_1E9DD8168;
  if (!qword_1E9DD8168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8168);
  }
  return result;
}

unint64_t sub_1B6C9C7FC()
{
  unint64_t result = qword_1E9DD8170;
  if (!qword_1E9DD8170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8170);
  }
  return result;
}

unint64_t sub_1B6C9C854()
{
  unint64_t result = qword_1E9DD8178;
  if (!qword_1E9DD8178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8178);
  }
  return result;
}

unint64_t sub_1B6C9C8AC()
{
  unint64_t result = qword_1E9DD8180;
  if (!qword_1E9DD8180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8180);
  }
  return result;
}

unint64_t sub_1B6C9C904()
{
  unint64_t result = qword_1E9DD8188;
  if (!qword_1E9DD8188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8188);
  }
  return result;
}

unint64_t sub_1B6C9C95C()
{
  unint64_t result = qword_1E9DD8190;
  if (!qword_1E9DD8190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8190);
  }
  return result;
}

unint64_t sub_1B6C9C9B4()
{
  unint64_t result = qword_1E9DD8198;
  if (!qword_1E9DD8198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8198);
  }
  return result;
}

unint64_t sub_1B6C9CA08()
{
  unint64_t result = qword_1E9DD81A8;
  if (!qword_1E9DD81A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD81A8);
  }
  return result;
}

uint64_t sub_1B6C9CA5C()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unsigned char *_s3VFX19PointCacheGeneratorV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6C9CB74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PointCacheSpawner.CodingKeys()
{
  return &type metadata for PointCacheSpawner.CodingKeys;
}

unint64_t sub_1B6C9CBB0()
{
  unint64_t result = qword_1E9DD81B8;
  if (!qword_1E9DD81B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD81B8);
  }
  return result;
}

unint64_t sub_1B6C9CC08()
{
  unint64_t result = qword_1E9DD81C0;
  if (!qword_1E9DD81C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD81C0);
  }
  return result;
}

unint64_t sub_1B6C9CC60()
{
  unint64_t result = qword_1E9DD81C8;
  if (!qword_1E9DD81C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD81C8);
  }
  return result;
}

uint64_t sub_1B6C9CCB4(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = a1();
  return a3(v4);
}

uint64_t sub_1B6C9CCF8(uint64_t result)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v2 + 12 * (int)result + 8) == HIDWORD(result)) {
      return sub_1B635ACD8(*(uint64_t **)(*(void *)(v1 + 136) + 8 * *(int *)(v2 + 12 * (int)result) + 32));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorldAABB()
{
  return &type metadata for WorldAABB;
}

ValueMetadata *type metadata accessor for LocalAABB()
{
  return &type metadata for LocalAABB;
}

uint64_t sub_1B6C9CDD4(void *a1)
{
  return sub_1B6C9CDEC(a1);
}

uint64_t sub_1B6C9CDEC(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6A6D680();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B6C9CE9C(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v7 = 0;
  uint64_t v8 = swift_bridgeObjectRetain() + 112;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_5;
    }
    uint64_t v11 = v7 + 1;
    if (v7 + 1 >= v6) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    if (!v12)
    {
      uint64_t v11 = v7 + 2;
      if (v7 + 2 >= v6) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v2 + 8 * v11);
      if (!v12)
      {
        uint64_t v11 = v7 + 3;
        if (v7 + 3 >= v6) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v2 + 8 * v11);
        if (!v12)
        {
          uint64_t v11 = v7 + 4;
          if (v7 + 4 >= v6) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v2 + 8 * v11);
          if (!v12)
          {
            uint64_t v11 = v7 + 5;
            if (v7 + 5 >= v6) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v2 + 8 * v11);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
    uint64_t v7 = v11;
LABEL_5:
    sub_1B67E9ED4(&v14, *(void *)(*(void *)(a1 + 56) + 16 * v10));
  }
  while (v6 - 6 != v7)
  {
    unint64_t v12 = *(void *)(v8 + 8 * v7++);
    if (v12)
    {
      uint64_t v11 = v7 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t *sub_1B6C9CFF8()
{
  uint64_t v1 = v0;
  uint64_t v42 = 0;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v61 = qword_1EB997A18;
  int v62 = 0;
  char v63 = 2;
  uint64_t v64 = 1;
  char v65 = 2;
  uint64_t v66 = 0;
  swift_retain();
  sub_1B63AC2E8(3, (uint64_t)v43);
  swift_release();
  v58[0] = v43[0];
  v58[1] = v43[1];
  uint64_t v59 = v44;
  sub_1B62C9DA8(v0, (uint64_t)v58, 0x200000000, v45);
  sub_1B62D7910((uint64_t)v45, (uint64_t)v46, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v46[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v43);
  }
  long long v53 = v46[0];
  long long v54 = v46[1];
  uint64_t v34 = v48;
  uint64_t v55 = v47;
  uint64_t v3 = v49;
  uint64_t v2 = v50;
  uint64_t v4 = v52;
  char v37 = v51;
  sub_1B62CA064((uint64_t)v43);
  if (v4 > 0 && v3)
  {
    uint64_t v5 = v37[4];
    int v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v56[0] = v53;
    v56[1] = v54;
    uint64_t v57 = v55;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    int v31 = v6;
    uint64_t v32 = v5;
    uint64_t v33 = v3;
    do
    {
      uint64_t v36 = v7;
      uint64_t v8 = (unsigned int *)(v34 + 48 * v7);
      uint64_t v9 = *v8;
      uint64_t v38 = v8[1];
      unint64_t v10 = (uint64_t *)*((void *)v8 + 2);
      uint64_t v35 = *((void *)v8 + 3);
      uint64_t v11 = *((void *)v8 + 4);
      uint64_t v12 = *((void *)v8 + 5);
      if (v6)
      {
        uint64_t v13 = *(os_unfair_lock_s **)(v12 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v13);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v5);
      sub_1B62D7910((uint64_t)(v37 + 6), (uint64_t)v60, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v14 = v37[4];
      uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v37[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
      v37[7] = v15;
      v37[9] = 0;
      v37[10] = 0;
      v37[8] = 0;
      swift_release();
      uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v10, v35, v11, (uint64_t)v37);
      if (v10)
      {
        if (v11)
        {
          uint64_t v17 = (uint64_t *)(v16 + 8);
          uint64_t v18 = MEMORY[0x1E4FBC860];
          do
          {
            uint64_t v19 = *v10++;
            uint64_t v41 = v18;
            swift_retain();
            unint64_t v20 = sub_1B62DE2C8(v19);
            swift_release();
            swift_retain();
            sub_1B6877A48(v20, v1, v1, (uint64_t)&v41);
            swift_release();
            uint64_t v21 = swift_bridgeObjectRetain();
            uint64_t v22 = sub_1B6CA5898(v21, (uint64_t)&v41);
            swift_bridgeObjectRelease();
            *uint64_t v17 = v22;
            swift_bridgeObjectRelease();
            v40[0] = sub_1B62BAA04(v18);
            uint64_t v39 = sub_1B67DDFA4(v18);
            uint64_t v23 = swift_bridgeObjectRetain();
            sub_1B6BF869C(v23, &v42, &v39, v40);
            swift_bridgeObjectRelease();
            *uint64_t v17 = v40[0];
            v17 += 8;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_retain();
            sub_1B6877C28(v20, v1, v1, &v42, (uint64_t *)&v39);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            --v11;
          }
          while (v11);
        }
      }
      else if (v9 != v38)
      {
        int v24 = (uint64_t *)(v16 + (v9 << 6) + 8);
        uint64_t v25 = MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v41 = v25;
          swift_retain();
          unint64_t v26 = sub_1B62DE2C8(v9);
          swift_release();
          swift_retain();
          sub_1B6877A48(v26, v1, v1, (uint64_t)&v41);
          swift_release();
          uint64_t v27 = swift_bridgeObjectRetain();
          uint64_t v28 = sub_1B6CA5898(v27, (uint64_t)&v41);
          swift_bridgeObjectRelease();
          *int v24 = v28;
          swift_bridgeObjectRelease();
          v40[0] = sub_1B62BAA04(v25);
          uint64_t v39 = sub_1B67DDFA4(v25);
          uint64_t v29 = swift_bridgeObjectRetain();
          sub_1B6BF869C(v29, &v42, &v39, v40);
          swift_bridgeObjectRelease();
          *int v24 = v40[0];
          v24 += 8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_retain();
          sub_1B6877C28(v26, v1, v1, &v42, (uint64_t *)&v39);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v9;
        }
        while (v38 != v9);
      }
      sub_1B6345178(v37, (unsigned __int16 **)v56, (uint64_t)v60);
      sub_1B634507C((char *)v12);
      uint64_t v5 = v32;
      ecs_stack_allocator_pop_snapshot(v32);
      int v6 = v31;
      if (v31)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
      }
      swift_release();
      uint64_t v7 = v36 + 1;
    }
    while (v36 + 1 != v33);
    sub_1B632F170(v45);
  }
  return sub_1B632F170(v45);
}

uint64_t *sub_1B6C9D5A4()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1EB997A18;
  int v26 = 0;
  char v27 = 2;
  uint64_t v28 = 1;
  char v29 = 2;
  uint64_t v30 = 0;
  swift_retain();
  sub_1B67CEA44((uint64_t)v19);
  swift_release();
  v23[0] = v19[0];
  v23[1] = v19[1];
  uint64_t v24 = v20;
  sub_1B62C9DA8(v0, (uint64_t)v23, 0x200000000, v21);
  sub_1B62D7910((uint64_t)v21, (uint64_t)v22, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v22[0])
  {
    uint64_t v1 = v22[5];
    uint64_t v2 = v22[7];
    uint64_t v3 = v22[10];
    sub_1B62CA064((uint64_t)v19);
    if (v3 >= 1 && v2)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v4 = 48 * v2;
      uint64_t v5 = (uint64_t *)(v1 + 40);
      do
      {
        uint64_t v10 = *v5;
        uint64_t v11 = *(os_unfair_lock_s **)(*v5 + 376);
        swift_retain();
        os_unfair_lock_lock(v11);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
        int v12 = *(_DWORD *)(v10 + 24);
        swift_retain();
        uint64_t v18 = 0;
        memset(v17, 0, sizeof(v17));
        uint64_t v16 = 0;
        memset(v15, 0, sizeof(v15));
        int v13 = sub_1B637F628(v12, 0, 0, (uint64_t)&type metadata for CodeGenerationComponent, (uint64_t)&off_1F0F8ECC8, (uint64_t)v17, (uint64_t)v15);
        swift_release();
        sub_1B62E2E40((uint64_t)v15, (uint64_t (*)(void))sub_1B63864B4);
        sub_1B62E2E40((uint64_t)v17, (uint64_t (*)(void))sub_1B63864B4);
        if (sub_1B63B4340(v13))
        {
          sub_1B66603E4(v13);
        }
        else
        {
          uint64_t v6 = *(void *)(v10 + 232);
          uint64_t v7 = *(void *)(v10 + 240);
          char v8 = *(unsigned char *)(v10 + 120);
          uint64_t v9 = *(unsigned int *)(v10 + 28);
          LOBYTE(v17[0]) = *(unsigned char *)(v10 + 32);
          sub_1B628EEF4(v6, v7, v13, v8, v9 | ((unint64_t)LOBYTE(v17[0]) << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 376));
        swift_release();
        v5 += 6;
        v4 -= 48;
      }
      while (v4);
      sub_1B632F170(v21);
    }
    sub_1B632F170(v21);
  }
  else
  {
    sub_1B62CA064((uint64_t)v19);
  }
  sub_1B6CA0708();
  sub_1B6CA21DC();
  return sub_1B6CA3BE8();
}

uint64_t sub_1B6C9D868()
{
  uint64_t v1 = v0;
  uint64_t v105 = MEMORY[0x1E4FBC870];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v148 = qword_1EB997A18;
  int v149 = 0;
  char v150 = 2;
  uint64_t v151 = 1;
  char v152 = 2;
  uint64_t v153 = 0;
  swift_retain();
  sub_1B63AC2E8(1, (uint64_t)v106);
  swift_release();
  v138[0] = v106[0];
  v138[1] = v106[1];
  uint64_t v139 = v107;
  sub_1B62C9DA8(v0, (uint64_t)v138, 0x200000000, v108);
  sub_1B62D7910((uint64_t)v108, (uint64_t)v122, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v122[0])
  {
    sub_1B62CA064((uint64_t)v106);
    goto LABEL_25;
  }
  long long v129 = v122[0];
  long long v130 = v122[1];
  uint64_t v94 = v124;
  uint64_t v131 = v123;
  uint64_t v2 = v125;
  uint64_t v3 = v126;
  uint64_t v4 = v127;
  uint64_t v5 = v128;
  sub_1B62CA064((uint64_t)v106);
  if (v5 <= 0 || !v2)
  {
    sub_1B632F170(v108);
    goto LABEL_25;
  }
  uint64_t v85 = v0;
  uint64_t v100 = v4[4];
  int v6 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v132[0] = v129;
  v132[1] = v130;
  uint64_t v133 = v131;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v7 = 0;
  int v88 = v6;
  uint64_t v90 = v2;
  do
  {
    char v8 = (unsigned int *)(v94 + 48 * v7);
    uint64_t v10 = (uint64_t *)*((void *)v8 + 2);
    uint64_t v9 = *((void *)v8 + 3);
    uint64_t v12 = *((void *)v8 + 4);
    uint64_t v11 = *((void *)v8 + 5);
    uint64_t v96 = v8[1];
    uint64_t v98 = *v8;
    if (v6)
    {
      int v13 = *(os_unfair_lock_s **)(v11 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v13);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v100);
    sub_1B62D7910((uint64_t)(v4 + 6), (uint64_t)v147, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v14 = v4[4];
    uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v4[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
    v4[7] = v15;
    v4[9] = 0;
    v4[10] = 0;
    v4[8] = 0;
    swift_release();
    uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v10, v9, v12, (uint64_t)v4);
    if (v10)
    {
      int v6 = v88;
      if (!v12) {
        goto LABEL_17;
      }
      uint64_t v17 = v16 + 32;
      uint64_t v18 = v90;
      do
      {
        uint64_t v19 = swift_bridgeObjectRetain();
        sub_1B6C9CE9C(v19);
        swift_bridgeObjectRelease();
        v17 += 64;
        uint64_t v20 = swift_bridgeObjectRetain();
        sub_1B6C9CE9C(v20);
        swift_bridgeObjectRelease();
        --v12;
      }
      while (v12);
    }
    else
    {
      int v6 = v88;
      if (v98 == v96)
      {
LABEL_17:
        uint64_t v18 = v90;
        goto LABEL_20;
      }
      uint64_t v21 = v16 + (v98 << 6) + 32;
      uint64_t v22 = v96 - v98;
      uint64_t v18 = v90;
      do
      {
        uint64_t v23 = swift_bridgeObjectRetain();
        sub_1B6C9CE9C(v23);
        swift_bridgeObjectRelease();
        v21 += 64;
        uint64_t v24 = swift_bridgeObjectRetain();
        sub_1B6C9CE9C(v24);
        swift_bridgeObjectRelease();
        --v22;
      }
      while (v22);
    }
LABEL_20:
    sub_1B6345178(v4, (unsigned __int16 **)v132, (uint64_t)v147);
    sub_1B634507C((char *)v11);
    ecs_stack_allocator_pop_snapshot(v100);
    if (v6)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
    }
    swift_release();
    ++v7;
  }
  while (v7 != v18);
  sub_1B632F170(v108);
  sub_1B632F170(v108);
  uint64_t v1 = v85;
LABEL_25:
  uint64_t v141 = qword_1EB997A18;
  int v142 = 0;
  char v143 = 2;
  uint64_t v144 = 1;
  char v145 = 2;
  uint64_t v146 = 0;
  swift_retain();
  sub_1B67CEC50((uint64_t)v109);
  swift_release();
  v136[0] = v109[0];
  v136[1] = v109[1];
  uint64_t v137 = v110;
  sub_1B62C9DA8(v1, (uint64_t)v136, 0x200000000, v111);
  sub_1B62D7910((uint64_t)v111, (uint64_t)v112, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v112[0])
  {
    sub_1B62CA064((uint64_t)v109);
    return swift_bridgeObjectRelease();
  }
  long long v119 = v112[0];
  long long v120 = v112[1];
  uint64_t v91 = v114;
  uint64_t v121 = v113;
  uint64_t v25 = v115;
  uint64_t v26 = v116;
  char v27 = v117;
  uint64_t v28 = v118;
  sub_1B62CA064((uint64_t)v109);
  if (v28 <= 0 || !v25)
  {
LABEL_86:
    sub_1B632F170(v111);
    return swift_bridgeObjectRelease();
  }
  uint64_t v99 = v27[4];
  int v97 = *(unsigned __int8 *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v92 = v27 + 13;
  int8x16_t v86 = v27 + 8;
  uint64_t v87 = (uint64_t)(v27 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v29 = 0;
  int32x2_t v93 = v27;
  uint64_t v89 = v25;
  while (1)
  {
    uint64_t v30 = (unsigned int *)(v91 + 48 * v29);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *((void *)v30 + 2);
    uint64_t v34 = *((void *)v30 + 5);
    uint64_t v101 = *((void *)v30 + 4);
    uint64_t v95 = v29;
    if (v97)
    {
      uint64_t v35 = *(os_unfair_lock_s **)(v34 + 376);
      swift_retain();
      os_unfair_lock_lock(v35);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v99);
    sub_1B62D7910(v87, (uint64_t)v140, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v36 = v27[4];
    uint64_t v37 = *(void *)(*(void *)(*(void *)(*(void *)(v34 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v27[6] = ecs_stack_allocator_allocate(v36, 48 * v37, 8);
    v27[7] = v37;
    v86[1] = 0;
    v86[2] = 0;
    *int8x16_t v86 = 0;
    swift_release();
    if (!v33) {
      break;
    }
    if (v101)
    {
      uint64_t v38 = 0;
      uint64_t v39 = v105;
      uint64_t v40 = v105 + 56;
      do
      {
        uint64_t v41 = *(void *)(v33 + 8 * v38);
        uint64_t v42 = *(void *)(v34 + 16);
        char v43 = *(unsigned char *)(v34 + 184);
        swift_retain();
        if (v43) {
          goto LABEL_88;
        }
        int v44 = *(_DWORD *)(*(void *)(v34 + 168) + 4 * v41);
        int v45 = *(_DWORD *)(*(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v44 + 8);
        swift_bridgeObjectRetain();
        swift_release();
        if (*(void *)(v39 + 16)
          && (sub_1B6E33918(),
              sub_1B6E33958(),
              sub_1B6E33958(),
              uint64_t v46 = sub_1B6E33988(),
              uint64_t v47 = -1 << *(unsigned char *)(v39 + 32),
              unint64_t v48 = v46 & ~v47,
              ((*(void *)(v40 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0))
        {
          uint64_t v49 = ~v47;
          while (1)
          {
            uint64_t v50 = (int *)(*(void *)(v39 + 48) + 8 * v48);
            int v52 = *v50;
            int v51 = v50[1];
            if (v52 == v44 && v51 == v45) {
              break;
            }
            unint64_t v48 = (v48 + 1) & v49;
            if (((*(void *)(v40 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
              goto LABEL_36;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v54 = *(void *)(*(void *)(v34 + 40) + 16);
          uint64_t v55 = *(void *)(v54 + 128);
          if (*(void *)(v55 + 16))
          {
            unint64_t v56 = sub_1B62C1A30((uint64_t)&type metadata for DoNotExport);
            if ((v57 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v54 + 24) + 16 * *(void *)(*(void *)(v55 + 56) + 8 * v56) + 32) == &type metadata for DoNotExport)
            {
              uint64_t v102 = &type metadata for DoNotExport;
              uint64_t v103 = &off_1F0F54CE0;
              char v104 = 1;
              swift_retain();
              sub_1B63B2A48((uint64_t)v92, (uint64_t)&v102, v41, 0, v34, (uint64_t)v93);
              sub_1B6391400((uint64_t)&v102);
              swift_release();
            }
          }
        }
        else
        {
LABEL_36:
          swift_bridgeObjectRelease();
        }
      }
      while (++v38 != v101);
    }
LABEL_53:
    v134[0] = v119;
    v134[1] = v120;
    uint64_t v135 = v121;
    char v27 = v93;
    sub_1B6345178(v93, (unsigned __int16 **)v134, (uint64_t)v140);
    if (*(void *)(v93[13] + 16))
    {
      uint64_t v58 = swift_bridgeObjectRetain();
      sub_1B639147C(v58, v34);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v60 = v93[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v60 + 16));
      }
      else
      {
        uint64_t v61 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v60 + 24) >= 2uLL)
        {
          sub_1B681C594();
          uint64_t v61 = (void *)swift_allocObject();
          size_t v62 = j__malloc_size(v61);
          v61[2] = 0;
          v61[3] = 2 * ((uint64_t)(v62 - 32) / 72);
        }
        *uint64_t v92 = v61;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v93[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        char v63 = *(char **)(v34 + 232);
        uint64_t v64 = *(char **)(v34 + 256);
        if (v63 == v64)
        {
          char v65 = *(char **)(v34 + 240);
        }
        else
        {
          sub_1B666018C(v64, v63);
          uint64_t v64 = *(char **)(v34 + 232);
          char v65 = *(char **)(v34 + 240);
          if (v65 == v64)
          {
            char v65 = 0;
            uint64_t v64 = 0;
            *(void *)(v34 + 232) = 0;
            *(void *)(v34 + 240) = 0;
          }
        }
        *(void *)(v34 + 248) = v65;
        *(void *)(v34 + 256) = v64;
      }
    }
    ecs_stack_allocator_pop_snapshot(v99);
    if (v97)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 376));
    }
    swift_release();
    uint64_t v29 = v95 + 1;
    if (v95 + 1 == v89)
    {
      sub_1B632F170(v111);
      goto LABEL_86;
    }
  }
  if (v32 == v31) {
    goto LABEL_53;
  }
  uint64_t v66 = v105;
  uint64_t v67 = v105 + 56;
  while (1)
  {
    uint64_t v68 = *(void *)(v34 + 16);
    char v69 = *(unsigned char *)(v34 + 184);
    swift_retain();
    if (v69) {
      break;
    }
    int v70 = *(_DWORD *)(*(void *)(v34 + 168) + 4 * v32);
    int v71 = *(_DWORD *)(*(void *)(v68 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v70 + 8);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v66 + 16)
      && (sub_1B6E33918(),
          sub_1B6E33958(),
          sub_1B6E33958(),
          uint64_t v72 = sub_1B6E33988(),
          uint64_t v73 = -1 << *(unsigned char *)(v66 + 32),
          unint64_t v74 = v72 & ~v73,
          ((*(void *)(v67 + ((v74 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v74) & 1) != 0))
    {
      uint64_t v75 = ~v73;
      while (1)
      {
        float32x4_t v76 = (int *)(*(void *)(v66 + 48) + 8 * v74);
        int v78 = *v76;
        int v77 = v76[1];
        if (v78 == v70 && v77 == v71) {
          break;
        }
        unint64_t v74 = (v74 + 1) & v75;
        if (((*(void *)(v67 + ((v74 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v74) & 1) == 0) {
          goto LABEL_63;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v80 = *(void *)(*(void *)(v34 + 40) + 16);
      uint64_t v81 = *(void *)(v80 + 128);
      if (*(void *)(v81 + 16))
      {
        unint64_t v82 = sub_1B62C1A30((uint64_t)&type metadata for DoNotExport);
        if ((v83 & 1) != 0
          && *(ValueMetadata **)(*(void *)(v80 + 24) + 16 * *(void *)(*(void *)(v81 + 56) + 8 * v82) + 32) == &type metadata for DoNotExport)
        {
          uint64_t v102 = &type metadata for DoNotExport;
          uint64_t v103 = &off_1F0F54CE0;
          char v104 = 1;
          swift_retain();
          sub_1B63B2A48((uint64_t)v92, (uint64_t)&v102, v32, 0, v34, (uint64_t)v93);
          sub_1B6391400((uint64_t)&v102);
          swift_release();
        }
      }
    }
    else
    {
LABEL_63:
      swift_bridgeObjectRelease();
    }
    if (++v32 == v31) {
      goto LABEL_53;
    }
  }
LABEL_88:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t *sub_1B6C9E3B4()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v57 = qword_1EB997A18;
  int v58 = 0;
  char v59 = 2;
  uint64_t v60 = 1;
  char v61 = 2;
  uint64_t v62 = 0;
  swift_retain();
  sub_1B67CEC50((uint64_t)v27);
  swift_release();
  v48[0] = v27[0];
  v48[1] = v27[1];
  uint64_t v49 = v28;
  sub_1B62C9DA8(v0, (uint64_t)v48, 0x200000000, v29);
  sub_1B62D7910((uint64_t)v29, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v43[0])
  {
    v43[8] = v43[2];
    v43[9] = v43[3];
    v43[10] = v43[4];
    v43[11] = v43[5];
    v43[6] = v43[0];
    v43[7] = v43[1];
    sub_1B62CA064((uint64_t)v27);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B6365460(0);
    sub_1B632F170(v29);
    sub_1B632F170(v29);
  }
  else
  {
    sub_1B62CA064((uint64_t)v27);
  }
  uint64_t v51 = qword_1EB997A18;
  int v52 = 0;
  char v53 = 2;
  uint64_t v54 = 1;
  char v55 = 2;
  uint64_t v56 = 0;
  swift_retain();
  sub_1B67CEE5C((uint64_t)v30);
  swift_release();
  v46[0] = v30[0];
  v46[1] = v30[1];
  uint64_t v47 = v31;
  sub_1B62C9DA8(v0, (uint64_t)v46, 0x200000000, v32);
  sub_1B62D7910((uint64_t)v32, (uint64_t)v33, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v33[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v30);
  }
  long long v40 = v33[0];
  long long v41 = v33[1];
  uint64_t v1 = v35;
  uint64_t v42 = v34;
  uint64_t v3 = v36;
  uint64_t v2 = v37;
  uint64_t v4 = v38;
  uint64_t v5 = v39;
  sub_1B62CA064((uint64_t)v30);
  if (v5 <= 0 || !v3) {
    return sub_1B632F170(v32);
  }
  uint64_t v6 = v4[4];
  int v26 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v7 = (void *)(v1 + 32);
  uint64_t v23 = v6;
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *v7;
    uint64_t v10 = v7[1];
    int v24 = *((_DWORD *)v7 - 7);
    int v25 = *((_DWORD *)v7 - 8);
    if (v26)
    {
      uint64_t v11 = *(os_unfair_lock_s **)(v10 + 376);
      swift_retain();
      os_unfair_lock_lock(v11);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v6);
    sub_1B62D7910((uint64_t)(v4 + 6), (uint64_t)v50, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v12 = v4[4];
    uint64_t v13 = *(void *)(*(void *)(*(void *)(*(void *)(v10 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v4[6] = ecs_stack_allocator_allocate(v12, 48 * v13, 8);
    v4[7] = v13;
    v4[9] = 0;
    v4[10] = 0;
    v4[8] = 0;
    swift_release();
    if (!v8) {
      break;
    }
    if (v9) {
      goto LABEL_35;
    }
LABEL_18:
    v44[0] = v40;
    v44[1] = v41;
    uint64_t v45 = v42;
    sub_1B6345178(v4, (unsigned __int16 **)v44, (uint64_t)v50);
    if (*(void *)(v4[13] + 16))
    {
      uint64_t v14 = swift_bridgeObjectRetain();
      sub_1B639147C(v14, v10);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = v4[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v16 + 16));
      }
      else
      {
        uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v16 + 24) >= 2uLL)
        {
          sub_1B681C594();
          uint64_t v17 = (void *)swift_allocObject();
          size_t v18 = j__malloc_size(v17);
          _OWORD v17[2] = 0;
          v17[3] = 2 * ((uint64_t)(v18 - 32) / 72);
        }
        v4[13] = v17;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v4[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        uint64_t v19 = *(char **)(v10 + 232);
        uint64_t v20 = *(char **)(v10 + 256);
        if (v19 == v20)
        {
          uint64_t v21 = *(char **)(v10 + 240);
        }
        else
        {
          sub_1B666018C(v20, v19);
          uint64_t v20 = *(char **)(v10 + 232);
          uint64_t v21 = *(char **)(v10 + 240);
          if (v21 == v20)
          {
            uint64_t v21 = 0;
            uint64_t v20 = 0;
            *(void *)(v10 + 232) = 0;
            *(void *)(v10 + 240) = 0;
          }
        }
        *(void *)(v10 + 248) = v21;
        *(void *)(v10 + 256) = v20;
      }
    }
    uint64_t v6 = v23;
    ecs_stack_allocator_pop_snapshot(v23);
    if (v26)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 376));
    }
    swift_release();
    v7 += 6;
    if (!--v3)
    {
      sub_1B632F170(v32);
      return sub_1B632F170(v32);
    }
  }
  if (v25 == v24) {
    goto LABEL_18;
  }
LABEL_35:
  uint64_t result = (uint64_t *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t *sub_1B6C9E910()
{
  uint64_t v1 = v0;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_1EB997A18;
  int v49 = 0;
  char v50 = 2;
  uint64_t v51 = 1;
  char v52 = 2;
  uint64_t v53 = 0;
  swift_retain();
  sub_1B62C9DA8(v0, (uint64_t)&v48, 0x200000000, v34);
  swift_release();
  uint64_t result = (uint64_t *)sub_1B62D7910((uint64_t)v34, (uint64_t)v35, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v35[0])
  {
    long long v42 = v35[0];
    long long v43 = v35[1];
    uint64_t v44 = v36;
    if (v41 >= 1)
    {
      uint64_t v31 = v38;
      if (v38)
      {
        uint64_t v3 = 0;
        uint64_t v29 = v37;
        uint64_t v4 = v40;
        uint64_t v5 = v40[4];
        int v6 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        int v25 = v40 + 13;
        int v26 = v40 + 8;
        uint64_t v27 = (uint64_t)(v40 + 6);
        int v28 = v6;
        uint64_t v33 = v40;
        uint64_t v30 = v5;
        do
        {
          uint64_t v7 = (unsigned int *)(v29 + 48 * v3);
          uint64_t v8 = *v7;
          uint64_t v9 = v7[1];
          uint64_t v10 = (uint64_t *)*((void *)v7 + 2);
          uint64_t v11 = *((void *)v7 + 4);
          uint64_t v12 = *((void *)v7 + 5);
          uint64_t v32 = v3;
          if (v6)
          {
            uint64_t v13 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain();
            os_unfair_lock_lock(v13);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v5);
          sub_1B62D7910(v27, (uint64_t)v47, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v14 = v4[4];
          uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v33[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
          v33[7] = v15;
          uint64_t v4 = v33;
          v26[1] = 0;
          v26[2] = 0;
          *int v26 = 0;
          swift_release();
          if (v10)
          {
            if (v11)
            {
              uint64_t v5 = v30;
              do
              {
                uint64_t v16 = *v10++;
                sub_1B6CA5C10(v12, v16, v1);
                --v11;
              }
              while (v11);
            }
            else
            {
              uint64_t v5 = v30;
            }
          }
          else
          {
            uint64_t v5 = v30;
            if (v8 != v9)
            {
              do
                sub_1B6CA5C10(v12, v8++, v1);
              while (v9 != v8);
            }
          }
          v45[0] = v42;
          v45[1] = v43;
          uint64_t v46 = v44;
          sub_1B6345178(v33, (unsigned __int16 **)v45, (uint64_t)v47);
          if (*(void *)(v33[13] + 16))
          {
            uint64_t v17 = swift_bridgeObjectRetain();
            sub_1B639147C(v17, v12);
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v19 = v33[13];
            if (isUniquelyReferenced_nonNull_native)
            {
              sub_1B6399BB8(0, *(void *)(v19 + 16));
            }
            else
            {
              uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v19 + 24) >= 2uLL)
              {
                sub_1B681C594();
                uint64_t v20 = (void *)swift_allocObject();
                size_t v21 = j__malloc_size(v20);
                v20[2] = 0;
                v20[3] = 2 * ((uint64_t)(v21 - 32) / 72);
              }
              *int v25 = v20;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v33[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              uint64_t v22 = *(char **)(v12 + 232);
              uint64_t v23 = *(char **)(v12 + 256);
              if (v22 == v23)
              {
                int v24 = *(char **)(v12 + 240);
              }
              else
              {
                sub_1B666018C(v23, v22);
                uint64_t v23 = *(char **)(v12 + 232);
                int v24 = *(char **)(v12 + 240);
                if (v24 == v23)
                {
                  int v24 = 0;
                  uint64_t v23 = 0;
                  *(void *)(v12 + 232) = 0;
                  *(void *)(v12 + 240) = 0;
                }
              }
              *(void *)(v12 + 248) = v24;
              *(void *)(v12 + 256) = v23;
            }
          }
          ecs_stack_allocator_pop_snapshot(v5);
          int v6 = v28;
          if (v28)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          uint64_t v3 = v32 + 1;
        }
        while (v32 + 1 != v31);
      }
    }
    return sub_1B632F170(v34);
  }
  return result;
}

uint64_t *sub_1B6C9ED8C()
{
  uint64_t v1 = v0;
  uint64_t v219 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v2 = &unk_1EB997000;
  uint64_t v3 = qword_1EB997A18;
  sub_1B636E080();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E76B30;
  *(void *)(v4 + 32) = &type metadata for SubEntity;
  *(void *)(v4 + 40) = &off_1F0FAA030;
  *(void *)(v4 + 48) = &type metadata for PropagateDirtiness;
  *(void *)(v4 + 56) = &off_1F0F7A610;
  uint64_t v185 = v3;
  int v186 = 0;
  char v187 = 2;
  uint64_t v188 = 1;
  char v189 = 2;
  uint64_t v190 = 0;
  swift_retain();
  sub_1B62F776C(v4, 1, (uint64_t)v158);
  swift_setDeallocating();
  swift_deallocClassInstance();
  swift_release();
  sub_1B62C9DA8(v0, (uint64_t)v158, 0x200000000, v191);
  sub_1B62CA064((uint64_t)v158);
  sub_1B62D7910((uint64_t)v191, (uint64_t)v209, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v142 = v0;
  if (*(void *)&v209[0])
  {
    if (v215 >= 1 && (uint64_t v5 = v212) != 0)
    {
      uint64_t v6 = 0;
      uint64_t v7 = v214;
      uint64_t v8 = v214[4];
      int v9 = *(unsigned __int8 *)(v213 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v165[0] = v209[0];
      v165[1] = v209[1];
      uint64_t v166 = v210;
      uint64_t v145 = (uint64_t)(v214 + 6);
      uint64_t v10 = (uint64_t *)(v211 + 40);
      int v148 = v9;
      do
      {
        uint64_t v11 = *v10;
        uint64_t v12 = v6;
        if (v9)
        {
          uint64_t v13 = *(os_unfair_lock_s **)(v11 + 376);
          swift_retain();
          os_unfair_lock_lock(v13);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v8);
        sub_1B62D7910(v145, (uint64_t)v218, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v14 = v7[4];
        uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v7[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
        v7[7] = v15;
        v7[9] = 0;
        v7[10] = 0;
        v7[8] = 0;
        swift_release();
        if (*(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) == 2)
        {
          *(void *)&long long v197 = 0;
          long long v195 = 0u;
          long long v196 = 0u;
          BYTE8(v197) = 5;
          sub_1B639192C((uint64_t)&v195, (uint64_t)&v202);
          uint64_t v206 = 0;
          long long v205 = 0uLL;
          uint64_t v16 = (void *)v7[13];
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v7[13] = v16;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v16 = sub_1B68C0C6C(0, v16[2] + 1, 1, v16);
            v7[13] = v16;
          }
          unint64_t v19 = v16[2];
          unint64_t v18 = v16[3];
          if (v19 >= v18 >> 1)
          {
            uint64_t v16 = sub_1B68C0C6C(v18 > 1, v19 + 1, 1, v16);
            v7[13] = v16;
          }
          v16[2] = v19 + 1;
          uint64_t v20 = &v16[9 * v19];
          *((_OWORD *)v20 + 2) = v202;
          long long v21 = v203;
          long long v22 = v204;
          long long v23 = v205;
          v20[12] = v206;
          *((_OWORD *)v20 + 4) = v22;
          *((_OWORD *)v20 + 5) = v23;
          *((_OWORD *)v20 + 3) = v21;
          sub_1B6391400((uint64_t)&v195);
          swift_release();
        }
        uint64_t v6 = v12;
        sub_1B6345178(v7, (unsigned __int16 **)v165, (uint64_t)v218);
        sub_1B634507C((char *)v11);
        ecs_stack_allocator_pop_snapshot(v8);
        int v9 = v148;
        if (v148)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
        }
        swift_release();
        v10 += 6;
        --v5;
      }
      while (v5);
    }
    else
    {
      uint64_t v6 = 0;
    }
    sub_1B632F170(v191);
    uint64_t v1 = v142;
    uint64_t v2 = (void *)&unk_1EB997000;
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v24 = v2[323];
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1B6E77050;
  *(void *)(v25 + 32) = &type metadata for SubEntity;
  *(void *)(v25 + 40) = &off_1F0FAA030;
  uint64_t v179 = v24;
  int v180 = 0;
  char v181 = 2;
  uint64_t v182 = 1;
  char v183 = 2;
  uint64_t v184 = 0;
  swift_retain();
  sub_1B62F776C(v25, 1, (uint64_t)v159);
  swift_setDeallocating();
  swift_deallocClassInstance();
  swift_release();
  sub_1B62C9DA8(v1, (uint64_t)v159, 0x200000000, v192);
  sub_1B62CA064((uint64_t)v159);
  sub_1B62D7910((uint64_t)v192, (uint64_t)&v202, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v202)
  {
    if (v208 >= 1)
    {
      uint64_t v26 = *((void *)&v205 + 1);
      if (*((void *)&v205 + 1))
      {
        uint64_t v27 = v207;
        uint64_t v28 = v207[4];
        int v29 = *(unsigned __int8 *)(v206 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v167[0] = v202;
        v167[1] = v203;
        uint64_t v168 = v204;
        uint64_t v30 = v207 + 8;
        uint64_t v146 = (uint64_t)(v207 + 6);
        uint64_t v31 = (uint64_t *)(*((void *)&v204 + 1) + 40);
        int v149 = v29;
        do
        {
          uint64_t v32 = *v31;
          uint64_t v33 = v6;
          if (v29)
          {
            uint64_t v34 = *(os_unfair_lock_s **)(v32 + 376);
            swift_retain();
            os_unfair_lock_lock(v34);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v32 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v28);
          sub_1B62D7910(v146, (uint64_t)v217, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v35 = v27[4];
          uint64_t v36 = *(void *)(*(void *)(*(void *)(*(void *)(v32 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v27[6] = ecs_stack_allocator_allocate(v35, 48 * v36, 8);
          v27[7] = v36;
          v30[1] = 0;
          _OWORD v30[2] = 0;
          *uint64_t v30 = 0;
          swift_release();
          if (*(void *)(*(void *)(*(void *)(*(void *)(v32 + 40) + 16) + 32) + 16) == 1)
          {
            memset(v193, 0, sizeof(v193));
            char v194 = 5;
            sub_1B639192C((uint64_t)v193, (uint64_t)&v195);
            uint64_t v199 = 0;
            long long v198 = 0uLL;
            uint64_t v37 = (void *)v27[13];
            swift_retain();
            char v38 = swift_isUniquelyReferenced_nonNull_native();
            v27[13] = v37;
            if ((v38 & 1) == 0)
            {
              uint64_t v37 = sub_1B68C0C6C(0, v37[2] + 1, 1, v37);
              v27[13] = v37;
            }
            unint64_t v40 = v37[2];
            unint64_t v39 = v37[3];
            if (v40 >= v39 >> 1)
            {
              uint64_t v37 = sub_1B68C0C6C(v39 > 1, v40 + 1, 1, v37);
              v27[13] = v37;
            }
            v37[2] = v40 + 1;
            uint64_t v41 = &v37[9 * v40];
            *((_OWORD *)v41 + 2) = v195;
            long long v42 = v196;
            long long v43 = v197;
            long long v44 = v198;
            v41[12] = v199;
            *((_OWORD *)v41 + 4) = v43;
            *((_OWORD *)v41 + 5) = v44;
            *((_OWORD *)v41 + 3) = v42;
            sub_1B6391400((uint64_t)v193);
            swift_release();
          }
          uint64_t v6 = v33;
          sub_1B6345178(v27, (unsigned __int16 **)v167, (uint64_t)v217);
          sub_1B634507C((char *)v32);
          ecs_stack_allocator_pop_snapshot(v28);
          int v29 = v149;
          if (v149)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 376));
          }
          swift_release();
          v31 += 6;
          --v26;
        }
        while (v26);
      }
    }
    sub_1B632F170(v192);
    uint64_t v1 = v142;
    uint64_t v2 = (void *)&unk_1EB997000;
  }
  uint64_t v173 = v2[323];
  int v174 = 0;
  char v175 = 2;
  uint64_t v176 = 1;
  char v177 = 2;
  uint64_t v178 = 0;
  swift_retain();
  sub_1B62A068C(3, (uint64_t)v160);
  swift_release();
  v171[0] = v160[0];
  v171[1] = v160[1];
  uint64_t v172 = v161;
  sub_1B62C9DA8(v1, (uint64_t)v171, 0x200000000, v193);
  sub_1B62D7910((uint64_t)v193, (uint64_t)&v195, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!(void)v195) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v160);
  }
  long long v162 = v195;
  long long v163 = v196;
  uint64_t v135 = *((void *)&v197 + 1);
  uint64_t v164 = v197;
  uint64_t v45 = *((void *)&v198 + 1);
  uint64_t v46 = v199;
  long long v140 = v200;
  uint64_t v47 = v201;
  sub_1B62CA064((uint64_t)v160);
  if (v47 > 0 && v45)
  {
    int v139 = *(unsigned __int8 *)(v46 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v138 = v140[4];
    v169[0] = v162;
    v169[1] = v163;
    uint64_t v170 = v164;
    uint64_t v48 = (void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v49 = 0;
    uint64_t v134 = v45;
    do
    {
      uint64_t v136 = v49;
      uint64_t v137 = v6;
      char v50 = (unsigned int *)(v135 + 48 * v49);
      uint64_t v51 = *v50;
      uint64_t v53 = (uint64_t *)*((void *)v50 + 2);
      uint64_t v52 = *((void *)v50 + 3);
      uint64_t v54 = *((void *)v50 + 5);
      uint64_t v143 = v50[1];
      uint64_t v144 = *((void *)v50 + 4);
      uint64_t v141 = v54;
      if (v139)
      {
        char v55 = *(os_unfair_lock_s **)(v54 + 376);
        swift_retain();
        os_unfair_lock_lock(v55);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v54 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v138);
      sub_1B62D7910((uint64_t)(v140 + 6), (uint64_t)v216, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v56 = v140[4];
      uint64_t v57 = *(void *)(*(void *)(*(void *)(*(void *)(v54 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v140[6] = ecs_stack_allocator_allocate(v56, 48 * v57, 8);
      v140[7] = v57;
      v140[9] = 0;
      v140[10] = 0;
      v140[8] = 0;
      swift_release();
      uint64_t v147 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v53, v52, v144, (uint64_t)v140);
      if (v53)
      {
        if (v144)
        {
          for (uint64_t i = 0; i != v144; ++i)
          {
            char v59 = (void *)(v147 + 88 * i);
            uint64_t v60 = *v59;
            uint64_t v61 = *(void *)(*v59 + 16);
            if (v61)
            {
              swift_bridgeObjectRetain();
              uint64_t v63 = 0;
              uint64_t v64 = MEMORY[0x1E4FBC860];
              do
              {
                *(void *)&long long v62 = *(void *)(v60 + 8 * v63 + 32);
                BOOL v67 = v62 == -1 && DWORD1(v62) == 0;
                if (!v67
                  && (v62 & 0x80000000) == 0
                  && v48[1] > (int)v62
                  && (DWORD1(v62) == -1 || *(_DWORD *)(*v48 + 12 * (int)v62 + 8) == DWORD1(v62)))
                {
                  long long v150 = v62;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_1B62E1D20(0, *(void *)(v64 + 16) + 1, 1);
                  }
                  long long v62 = v150;
                  unint64_t v66 = *(void *)(v64 + 16);
                  unint64_t v65 = *(void *)(v64 + 24);
                  if (v66 >= v65 >> 1)
                  {
                    sub_1B62E1D20(v65 > 1, v66 + 1, 1);
                    long long v62 = v150;
                  }
                  *(void *)(v64 + 16) = v66 + 1;
                  *(void *)(v64 + 8 * v66 + 32) = v62;
                }
                ++v63;
              }
              while (v61 != v63);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v64 = MEMORY[0x1E4FBC860];
            }
            *char v59 = v64;
            swift_bridgeObjectRelease();
            uint64_t v69 = v59[1];
            uint64_t v70 = *(void *)(v69 + 16);
            if (v70)
            {
              swift_bridgeObjectRetain();
              uint64_t v72 = 0;
              uint64_t v73 = MEMORY[0x1E4FBC860];
              do
              {
                *(void *)&long long v71 = *(void *)(v69 + 8 * v72 + 32);
                BOOL v76 = v71 == -1 && DWORD1(v71) == 0;
                if (!v76
                  && (v71 & 0x80000000) == 0
                  && v48[1] > (int)v71
                  && (DWORD1(v71) == -1 || *(_DWORD *)(*v48 + 12 * (int)v71 + 8) == DWORD1(v71)))
                {
                  long long v151 = v71;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_1B62E1D20(0, *(void *)(v73 + 16) + 1, 1);
                  }
                  long long v71 = v151;
                  unint64_t v75 = *(void *)(v73 + 16);
                  unint64_t v74 = *(void *)(v73 + 24);
                  if (v75 >= v74 >> 1)
                  {
                    sub_1B62E1D20(v74 > 1, v75 + 1, 1);
                    long long v71 = v151;
                  }
                  *(void *)(v73 + 16) = v75 + 1;
                  *(void *)(v73 + 8 * v75 + 32) = v71;
                }
                ++v72;
              }
              while (v70 != v72);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v73 = MEMORY[0x1E4FBC860];
            }
            v59[1] = v73;
            swift_bridgeObjectRelease();
            uint64_t v78 = v59[2];
            uint64_t v79 = *(void *)(v78 + 16);
            if (v79)
            {
              swift_bridgeObjectRetain();
              uint64_t v81 = 0;
              uint64_t v82 = MEMORY[0x1E4FBC860];
              do
              {
                *(void *)&long long v80 = *(void *)(v78 + 8 * v81 + 32);
                BOOL v85 = v80 == -1 && DWORD1(v80) == 0;
                if (!v85
                  && (v80 & 0x80000000) == 0
                  && v48[1] > (int)v80
                  && (DWORD1(v80) == -1 || *(_DWORD *)(*v48 + 12 * (int)v80 + 8) == DWORD1(v80)))
                {
                  long long v152 = v80;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_1B62E1D20(0, *(void *)(v82 + 16) + 1, 1);
                  }
                  long long v80 = v152;
                  unint64_t v84 = *(void *)(v82 + 16);
                  unint64_t v83 = *(void *)(v82 + 24);
                  if (v84 >= v83 >> 1)
                  {
                    sub_1B62E1D20(v83 > 1, v84 + 1, 1);
                    long long v80 = v152;
                  }
                  *(void *)(v82 + 16) = v84 + 1;
                  *(void *)(v82 + 8 * v84 + 32) = v80;
                }
                ++v81;
              }
              while (v79 != v81);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v82 = MEMORY[0x1E4FBC860];
            }
            v59[2] = v82;
            swift_bridgeObjectRelease();
            uint64_t v87 = v59[3];
            uint64_t v88 = *(void *)(v87 + 16);
            if (v88)
            {
              swift_bridgeObjectRetain();
              uint64_t v90 = 0;
              uint64_t v91 = MEMORY[0x1E4FBC860];
              do
              {
                *(void *)&long long v89 = *(void *)(v87 + 8 * v90 + 32);
                BOOL v94 = v89 == -1 && DWORD1(v89) == 0;
                if (!v94
                  && (v89 & 0x80000000) == 0
                  && v48[1] > (int)v89
                  && (DWORD1(v89) == -1 || *(_DWORD *)(*v48 + 12 * (int)v89 + 8) == DWORD1(v89)))
                {
                  long long v153 = v89;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_1B62E1D20(0, *(void *)(v91 + 16) + 1, 1);
                  }
                  long long v89 = v153;
                  unint64_t v93 = *(void *)(v91 + 16);
                  unint64_t v92 = *(void *)(v91 + 24);
                  if (v93 >= v92 >> 1)
                  {
                    sub_1B62E1D20(v92 > 1, v93 + 1, 1);
                    long long v89 = v153;
                  }
                  *(void *)(v91 + 16) = v93 + 1;
                  *(void *)(v91 + 8 * v93 + 32) = v89;
                }
                ++v90;
              }
              while (v88 != v90);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v91 = MEMORY[0x1E4FBC860];
            }
            v59[3] = v91;
            swift_bridgeObjectRelease();
          }
        }
      }
      else if (v51 != v143)
      {
        do
        {
          uint64_t v96 = (void *)(v147 + 88 * v51);
          uint64_t v97 = *v96;
          uint64_t v98 = *(void *)(*v96 + 16);
          if (v98)
          {
            swift_bridgeObjectRetain();
            uint64_t v100 = 0;
            uint64_t v101 = MEMORY[0x1E4FBC860];
            do
            {
              *(void *)&long long v99 = *(void *)(v97 + 8 * v100 + 32);
              BOOL v104 = v99 == -1 && DWORD1(v99) == 0;
              if (!v104
                && (v99 & 0x80000000) == 0
                && v48[1] > (int)v99
                && (DWORD1(v99) == -1 || *(_DWORD *)(*v48 + 12 * (int)v99 + 8) == DWORD1(v99)))
              {
                long long v154 = v99;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1B62E1D20(0, *(void *)(v101 + 16) + 1, 1);
                }
                long long v99 = v154;
                unint64_t v103 = *(void *)(v101 + 16);
                unint64_t v102 = *(void *)(v101 + 24);
                if (v103 >= v102 >> 1)
                {
                  sub_1B62E1D20(v102 > 1, v103 + 1, 1);
                  long long v99 = v154;
                }
                *(void *)(v101 + 16) = v103 + 1;
                *(void *)(v101 + 8 * v103 + 32) = v99;
              }
              ++v100;
            }
            while (v98 != v100);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v101 = MEMORY[0x1E4FBC860];
          }
          *uint64_t v96 = v101;
          swift_bridgeObjectRelease();
          uint64_t v106 = v96[1];
          uint64_t v107 = *(void *)(v106 + 16);
          if (v107)
          {
            swift_bridgeObjectRetain();
            uint64_t v109 = 0;
            uint64_t v110 = MEMORY[0x1E4FBC860];
            do
            {
              *(void *)&long long v108 = *(void *)(v106 + 8 * v109 + 32);
              BOOL v113 = v108 == -1 && DWORD1(v108) == 0;
              if (!v113
                && (v108 & 0x80000000) == 0
                && v48[1] > (int)v108
                && (DWORD1(v108) == -1 || *(_DWORD *)(*v48 + 12 * (int)v108 + 8) == DWORD1(v108)))
              {
                long long v155 = v108;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1B62E1D20(0, *(void *)(v110 + 16) + 1, 1);
                }
                long long v108 = v155;
                unint64_t v112 = *(void *)(v110 + 16);
                unint64_t v111 = *(void *)(v110 + 24);
                if (v112 >= v111 >> 1)
                {
                  sub_1B62E1D20(v111 > 1, v112 + 1, 1);
                  long long v108 = v155;
                }
                *(void *)(v110 + 16) = v112 + 1;
                *(void *)(v110 + 8 * v112 + 32) = v108;
              }
              ++v109;
            }
            while (v107 != v109);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v110 = MEMORY[0x1E4FBC860];
          }
          v96[1] = v110;
          swift_bridgeObjectRelease();
          uint64_t v115 = v96[2];
          uint64_t v116 = *(void *)(v115 + 16);
          if (v116)
          {
            swift_bridgeObjectRetain();
            uint64_t v118 = 0;
            uint64_t v119 = MEMORY[0x1E4FBC860];
            do
            {
              *(void *)&long long v117 = *(void *)(v115 + 8 * v118 + 32);
              BOOL v122 = v117 == -1 && DWORD1(v117) == 0;
              if (!v122
                && (v117 & 0x80000000) == 0
                && v48[1] > (int)v117
                && (DWORD1(v117) == -1 || *(_DWORD *)(*v48 + 12 * (int)v117 + 8) == DWORD1(v117)))
              {
                long long v156 = v117;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1B62E1D20(0, *(void *)(v119 + 16) + 1, 1);
                }
                long long v117 = v156;
                unint64_t v121 = *(void *)(v119 + 16);
                unint64_t v120 = *(void *)(v119 + 24);
                if (v121 >= v120 >> 1)
                {
                  sub_1B62E1D20(v120 > 1, v121 + 1, 1);
                  long long v117 = v156;
                }
                *(void *)(v119 + 16) = v121 + 1;
                *(void *)(v119 + 8 * v121 + 32) = v117;
              }
              ++v118;
            }
            while (v116 != v118);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v119 = MEMORY[0x1E4FBC860];
          }
          v96[2] = v119;
          swift_bridgeObjectRelease();
          uint64_t v124 = v96[3];
          uint64_t v125 = *(void *)(v124 + 16);
          if (v125)
          {
            swift_bridgeObjectRetain();
            uint64_t v127 = 0;
            uint64_t v128 = MEMORY[0x1E4FBC860];
            do
            {
              *(void *)&long long v126 = *(void *)(v124 + 8 * v127 + 32);
              BOOL v131 = v126 == -1 && DWORD1(v126) == 0;
              if (!v131
                && (v126 & 0x80000000) == 0
                && v48[1] > (int)v126
                && (DWORD1(v126) == -1 || *(_DWORD *)(*v48 + 12 * (int)v126 + 8) == DWORD1(v126)))
              {
                long long v157 = v126;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1B62E1D20(0, *(void *)(v128 + 16) + 1, 1);
                }
                long long v126 = v157;
                unint64_t v130 = *(void *)(v128 + 16);
                unint64_t v129 = *(void *)(v128 + 24);
                if (v130 >= v129 >> 1)
                {
                  sub_1B62E1D20(v129 > 1, v130 + 1, 1);
                  long long v126 = v157;
                }
                *(void *)(v128 + 16) = v130 + 1;
                *(void *)(v128 + 8 * v130 + 32) = v126;
              }
              ++v127;
            }
            while (v125 != v127);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v128 = MEMORY[0x1E4FBC860];
          }
          ++v51;
          v96[3] = v128;
          swift_bridgeObjectRelease();
        }
        while (v51 != v143);
      }
      uint64_t v6 = v137;
      sub_1B6345178(v140, (unsigned __int16 **)v169, (uint64_t)v216);
      sub_1B634507C((char *)v141);
      ecs_stack_allocator_pop_snapshot(v138);
      if (v139)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v141 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v141 + 376));
      }
      swift_release();
      uint64_t v49 = v136 + 1;
    }
    while (v136 + 1 != v134);
    sub_1B632F170(v193);
  }
  return sub_1B632F170(v193);
}

uint64_t sub_1B6CA00E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a1 + 28);
  uint64_t v4 = *(int *)(a1 + 24);
  BOOL v5 = v4 == -1 && v3 == 0;
  if (v5
    || (v4 & 0x80000000) != 0
    || *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v4
    || ((uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v3 != -1)
      ? (BOOL v7 = *(_DWORD *)(v6 + 12 * (int)v4 + 8) == v3)
      : (BOOL v7 = 1),
        !v7
     || (uint64_t result = sub_1B6C08BD8(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)v4) + 32), *(unsigned __int16 *)(v6 + 12 * (int)v4 + 4), 32, a3), (result & 1) != 0)))
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6CA0284(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  sub_1B6CA5F14(0, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  MEMORY[0x1F4188790](v4 - 8, v5);
  BOOL v7 = (char *)v34 - v6;
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = (uint64_t)&v7[v9];
  char v11 = *(unsigned char *)(a1 + 4);
  *(_DWORD *)BOOL v7 = *(_DWORD *)a1;
  v7[4] = v11;
  sub_1B6CA5F84(a1 + v9, (uint64_t)&v7[v9]);
  uint64_t v12 = *(void *)(v10 + 24);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B62E2E40(v10, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  if (!v12) {
    return result;
  }
  uint64_t v36 = *(void *)(v12 + 16);
  if (!v36) {
    return swift_bridgeObjectRelease();
  }
  v34[2] = v2;
  uint64_t v35 = v12 + 32;
  v34[1] = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  do
  {
    uint64_t v16 = (uint64_t *)(v35 + 56 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    unint64_t v20 = v16[3];
    uint64_t v21 = v16[4];
    uint64_t v23 = v16[5];
    uint64_t v22 = v16[6];
    uint64_t v39 = v23;
    uint64_t v37 = v21;
    uint64_t v38 = v22;
    uint64_t v24 = *(void **)v40;
    uint64_t v25 = *(void *)(*(void *)v40 + 16);
    if (v25)
    {
      BOOL v26 = v24[4] == v17 && v24[5] == v18;
      if (v26 || (sub_1B6E334B8() & 1) != 0) {
        goto LABEL_5;
      }
      uint64_t v27 = v25 - 1;
      if (v25 != 1)
      {
        BOOL v31 = v24[6] == v17 && v24[7] == v18;
        if (v31 || (sub_1B6E334B8() & 1) != 0) {
          goto LABEL_5;
        }
        uint64_t v32 = v24 + 9;
        while (--v27)
        {
          if (*(v32 - 1) != v17 || *v32 != v18)
          {
            v32 += 2;
            if ((sub_1B6E334B8() & 1) == 0) {
              continue;
            }
          }
          goto LABEL_5;
        }
      }
    }
    swift_bridgeObjectRetain_n();
    sub_1B629C9E8(v19, v20);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v40 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v24 = sub_1B6335858(0, v25 + 1, 1, v24);
      *(void *)uint64_t v40 = v24;
    }
    unint64_t v30 = v24[2];
    unint64_t v29 = v24[3];
    if (v30 >= v29 >> 1) {
      uint64_t v24 = sub_1B6335858(v29 > 1, v30 + 1, 1, v24);
    }
    v24[2] = v30 + 1;
    uint64_t v15 = &v24[2 * v30];
    v15[4] = v17;
    v15[5] = v18;
    *(void *)uint64_t v40 = v24;
    swift_bridgeObjectRelease_n();
    sub_1B629DCAC(v19, v20);
LABEL_5:
    ++v14;
  }
  while (v14 != v36);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CA0568(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  int v4 = *(_DWORD *)(a1 + 28);
  uint64_t v5 = *(int *)(a1 + 24);
  BOOL v6 = v5 == -1 && v4 == 0;
  if (v6
    || (v5 & 0x80000000) != 0
    || *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v5
    || ((uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 != -1)
      ? (BOOL v8 = *(_DWORD *)(v7 + 12 * (int)v5 + 8) == v4)
      : (BOOL v8 = 1),
        !v8
     || (uint64_t result = sub_1B6C093D8(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)v5) + 32), *(_WORD *)(v7 + 12 * (int)v5 + 4), 32, a3, a4), (result & 1) == 0)))
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t *sub_1B6CA0708()
{
  uint64_t v308 = *MEMORY[0x1E4F143B8];
  sub_1B6CA5F14(0, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  uint64_t v268 = v1;
  MEMORY[0x1F4188790](v1, v2);
  v258 = (_DWORD *)((char *)&v230 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v230 - v6;
  MEMORY[0x1F4188790](v8, v9);
  v262 = (_DWORD *)((char *)&v230 - v10);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v230 - v13;
  MEMORY[0x1F4188790](v15, v16);
  v260 = (_DWORD *)((char *)&v230 - v17);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v230 - v20;
  MEMORY[0x1F4188790](v22, v23);
  v266 = (_DWORD *)((char *)&v230 - v24);
  MEMORY[0x1F4188790](v25, v26);
  uint64_t v28 = (char *)&v230 - v27;
  uint64_t v29 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v267 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29 - 8, v30);
  v235 = (char *)&v230 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32, v33);
  v242 = (char *)&v230 - v34;
  MEMORY[0x1F4188790](v35, v36);
  v241 = (char *)&v230 - v37;
  MEMORY[0x1F4188790](v38, v39);
  v243 = (char *)&v230 - v40;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v279 = qword_1EB997A18;
  int v280 = 0;
  char v281 = 2;
  uint64_t v282 = 1;
  char v283 = 2;
  uint64_t v284 = 0;
  swift_retain();
  sub_1B67CE62C((uint64_t)v270);
  swift_release();
  v277[0] = v270[0];
  v277[1] = v270[1];
  uint64_t v278 = v271;
  sub_1B62C9DA8(v0, (uint64_t)v277, 0x200000000, v299);
  sub_1B62D7910((uint64_t)v299, (uint64_t)v300, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v300[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v270);
  }
  v261 = v14;
  v257 = v7;
  long long v272 = v300[0];
  long long v273 = v300[1];
  uint64_t v234 = v302;
  uint64_t v274 = v301;
  uint64_t v42 = v303;
  uint64_t v41 = v304;
  uint64_t v43 = v306;
  v240 = v305;
  sub_1B62CA064((uint64_t)v270);
  if (v43 > 0 && v42)
  {
    uint64_t v233 = v42;
    int v239 = *(unsigned __int8 *)(v41 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v238 = v240[4];
    v275[0] = v272;
    v275[1] = v273;
    uint64_t v276 = v274;
    v230 = v240 + 13;
    v231 = v240 + 8;
    v232 = v240 + 6;
    v247 = (long long *)v293;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v44 = 0;
    uint64_t v237 = 0;
    v259 = v21;
    v265 = v28;
    while (1)
    {
      uint64_t v45 = (unsigned int *)(v234 + 48 * v44);
      uint64_t v47 = *v45;
      uint64_t v46 = v45[1];
      uint64_t v48 = *((void *)v45 + 3);
      v251 = (uint64_t *)*((void *)v45 + 2);
      uint64_t v49 = (char *)*((void *)v45 + 5);
      uint64_t v250 = *((void *)v45 + 4);
      uint64_t v248 = v46;
      v249 = v49;
      uint64_t v236 = v44;
      if (v239)
      {
        char v50 = (os_unfair_lock_s *)*((void *)v249 + 47);
        swift_retain();
        uint64_t v49 = v249;
        os_unfair_lock_lock(v50);
        os_unfair_lock_lock(*((os_unfair_lock_t *)v49 + 43));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v238);
      sub_1B62D7910((uint64_t)v232, (uint64_t)v307, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v51 = v240;
      uint64_t v52 = v240[4];
      uint64_t v53 = *(void *)(*(void *)(*(void *)(*((void *)v49 + 5) + 16) + 32) + 16) + 1;
      swift_retain();
      v51[6] = ecs_stack_allocator_allocate(v52, 48 * v53, 8);
      v51[7] = v53;
      uint64_t v54 = v231;
      v231[1] = 0;
      v54[2] = 0;
      *uint64_t v54 = 0;
      swift_release();
      char v55 = v251;
      uint64_t v56 = v48;
      uint64_t v57 = v250;
      uint64_t v58 = sub_1B62C9024((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, v251, v56, v250, (uint64_t)v51);
      if (v55)
      {
        if (!v57) {
          goto LABEL_15;
        }
        uint64_t v59 = 0;
        uint64_t v246 = v58 + 16;
LABEL_113:
        uint64_t v248 = v251[v59];
        uint64_t v254 = v59;
        uint64_t v146 = *(void *)(v246 + 32 * v59);
        char v147 = *(unsigned char *)(v146 + 32);
        unsigned int v148 = v147 & 0x3F;
        unint64_t v253 = (unint64_t)((1 << v147) + 63) >> 6;
        size_t v149 = 8 * v253;
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v148 > 0xD)
        {
          uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
          if ((isStackAllocationSafe & 1) == 0)
          {
            v255 = (char *)swift_slowAlloc();
            bzero(v255, v149);
            uint64_t v256 = 0;
            uint64_t v176 = 0;
            uint64_t v177 = 1 << *(unsigned char *)(v146 + 32);
            if (v177 < 64) {
              uint64_t v178 = ~(-1 << v177);
            }
            else {
              uint64_t v178 = -1;
            }
            unint64_t v179 = v178 & *(void *)(v146 + 64);
            uint64_t v263 = v146 + 64;
            int64_t v264 = (unint64_t)(v177 + 63) >> 6;
            v252 = (void **)(v264 - 6);
            int64_t v245 = v146 + 112;
            uint64_t v180 = (uint64_t)v241;
            while (1)
            {
              if (v179)
              {
                unint64_t v181 = __clz(__rbit64(v179));
                v179 &= v179 - 1;
                v269 = v176;
                unint64_t v182 = v181 | ((void)v176 << 6);
              }
              else
              {
                char v183 = (char *)v176 + 1;
                if ((uint64_t)v176 + 1 >= v264) {
                  goto LABEL_164;
                }
                unint64_t v184 = *(void *)(v263 + 8 * (void)v183);
                if (!v184)
                {
                  char v183 = (char *)v176 + 2;
                  if ((uint64_t)v176 + 2 >= v264) {
                    goto LABEL_164;
                  }
                  unint64_t v184 = *(void *)(v263 + 8 * (void)v183);
                  if (!v184)
                  {
                    char v183 = (char *)v176 + 3;
                    if ((uint64_t)v176 + 3 >= v264) {
                      goto LABEL_164;
                    }
                    unint64_t v184 = *(void *)(v263 + 8 * (void)v183);
                    if (!v184)
                    {
                      char v183 = (char *)v176 + 4;
                      if ((uint64_t)v176 + 4 >= v264) {
                        goto LABEL_164;
                      }
                      unint64_t v184 = *(void *)(v263 + 8 * (void)v183);
                      if (!v184)
                      {
                        char v183 = (char *)v176 + 5;
                        if ((uint64_t)v176 + 5 >= v264)
                        {
LABEL_164:
                          long long v197 = v255;
                          char v175 = sub_1B685E738((unint64_t *)v255, v253, v256, (void *)v146);
                          MEMORY[0x1BA9B84C0](v197, -1, -1);
                          goto LABEL_165;
                        }
                        unint64_t v184 = *(void *)(v263 + 8 * (void)v183);
                        if (!v184)
                        {
                          do
                          {
                            if (v252 == v176) {
                              goto LABEL_164;
                            }
                            unint64_t v184 = *(void *)(v245 + 8 * (void)v176);
                            uint64_t v176 = (void **)((char *)v176 + 1);
                          }
                          while (!v184);
                          char v183 = (char *)v176 + 5;
                        }
                      }
                    }
                  }
                }
                unint64_t v179 = (v184 - 1) & v184;
                unint64_t v182 = __clz(__rbit64(v184)) + ((void)v183 << 6);
                v269 = (void **)v183;
              }
              uint64_t v185 = *(void *)(v146 + 48) + 8 * v182;
              int v186 = *(_DWORD *)v185;
              char v187 = *(unsigned char *)(v185 + 4);
              sub_1B6CA5F84(*(void *)(v146 + 56) + *(void *)(v267 + 72) * v182, v180);
              uint64_t v188 = v268;
              uint64_t v189 = *(int *)(v268 + 48);
              uint64_t v190 = (uint64_t)v259;
              uint64_t v191 = (uint64_t)v259 + v189;
              _DWORD *v259 = v186;
              *(unsigned char *)(v190 + 4) = v187;
              sub_1B6CA5F84(v180, v190 + v189);
              uint64_t v192 = *(int *)(v188 + 48);
              v193 = v260;
              uint64_t v194 = (uint64_t)v260 + v192;
              _DWORD *v260 = v186;
              *((unsigned char *)v193 + 4) = v187;
              sub_1B6CA5F84(v191, (uint64_t)v193 + v192);
              uint64_t v195 = *(void *)(v194 + 32);
              if (v195)
              {
                uint64_t v196 = *(void *)(v195 + 16);
                sub_1B63B291C(v190, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
                sub_1B62E2E40(v194, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
                sub_1B62E2E40(v180, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
                uint64_t v176 = v269;
                if (v196)
                {
                  *(void *)&v255[(v182 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v182;
                  ++v256;
                }
              }
              else
              {
                sub_1B63B291C(v190, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
                sub_1B62E2E40(v194, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
                sub_1B62E2E40(v180, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
                uint64_t v176 = v269;
              }
            }
          }
        }
        v252 = &v230;
        MEMORY[0x1F4188790](isStackAllocationSafe, v151);
        v255 = (char *)&v230 - ((v149 + 15) & 0x3FFFFFFFFFFFFFF0);
        bzero(v255, v149);
        uint64_t v256 = 0;
        uint64_t v152 = 0;
        uint64_t v153 = 1 << *(unsigned char *)(v146 + 32);
        if (v153 < 64) {
          uint64_t v154 = ~(-1 << v153);
        }
        else {
          uint64_t v154 = -1;
        }
        unint64_t v155 = v154 & *(void *)(v146 + 64);
        uint64_t v263 = v146 + 64;
        int64_t v264 = (unint64_t)(v153 + 63) >> 6;
        uint64_t v244 = v146 + 112;
        int64_t v245 = v264 - 6;
        uint64_t v156 = (uint64_t)v243;
        while (1)
        {
          if (v155)
          {
            unint64_t v157 = __clz(__rbit64(v155));
            v155 &= v155 - 1;
            v269 = (void **)v152;
            unint64_t v158 = v157 | (v152 << 6);
          }
          else
          {
            uint64_t v159 = v152 + 1;
            if (v152 + 1 >= v264) {
              goto LABEL_139;
            }
            unint64_t v160 = *(void *)(v263 + 8 * v159);
            if (!v160)
            {
              uint64_t v159 = v152 + 2;
              if (v152 + 2 >= v264) {
                goto LABEL_139;
              }
              unint64_t v160 = *(void *)(v263 + 8 * v159);
              if (!v160)
              {
                uint64_t v159 = v152 + 3;
                if (v152 + 3 >= v264) {
                  goto LABEL_139;
                }
                unint64_t v160 = *(void *)(v263 + 8 * v159);
                if (!v160)
                {
                  uint64_t v159 = v152 + 4;
                  if (v152 + 4 >= v264) {
                    goto LABEL_139;
                  }
                  unint64_t v160 = *(void *)(v263 + 8 * v159);
                  if (!v160)
                  {
                    uint64_t v159 = v152 + 5;
                    if (v152 + 5 >= v264) {
                      goto LABEL_139;
                    }
                    unint64_t v160 = *(void *)(v263 + 8 * v159);
                    if (!v160)
                    {
                      while (v245 != v152)
                      {
                        unint64_t v160 = *(void *)(v244 + 8 * v152++);
                        if (v160)
                        {
                          uint64_t v159 = v152 + 5;
                          goto LABEL_135;
                        }
                      }
LABEL_139:
                      char v175 = sub_1B685E738((unint64_t *)v255, v253, v256, (void *)v146);
LABEL_165:
                      swift_bridgeObjectRelease();
                      uint64_t v198 = v175[2];
                      swift_release();
                      if (!v198)
                      {
                        uint64_t v199 = *(void *)(*((void *)v249 + 5) + 16);
                        uint64_t v200 = *(void *)(v199 + 128);
                        if (*(void *)(v200 + 16))
                        {
                          unint64_t v201 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig);
                          if ((v202 & 1) != 0
                            && *(ValueMetadata **)(*(void *)(v199 + 24)
                                                 + 16 * *(void *)(*(void *)(v200 + 56) + 8 * v201)
                                                 + 32) == &type metadata for GraphScriptingConfig)
                          {
                            v296 = &type metadata for GraphScriptingConfig;
                            v297 = &off_1F0F80818;
                            char v298 = 1;
                            uint64_t v203 = *(void *)(*v230 + 16);
                            if (v203)
                            {
                              uint64_t v204 = *v230 + 32;
                              swift_retain();
                              swift_bridgeObjectRetain();
                              uint64_t v205 = 0;
                              while (2)
                              {
                                sub_1B639192C(v204, (uint64_t)&v290);
                                sub_1B639192C((uint64_t)&v296, (uint64_t)v247);
                                switch(BYTE8(v292))
                                {
                                  case 1:
                                    sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                                    if (v295 != 1) {
                                      goto LABEL_172;
                                    }
                                    goto LABEL_181;
                                  case 2:
                                    sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                                    if (v295 != 2) {
                                      goto LABEL_171;
                                    }
                                    goto LABEL_186;
                                  case 3:
                                    sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                                    if (v295 == 3)
                                    {
LABEL_186:
                                      sub_1B62C15C4(v289, (uint64_t)v286);
                                      sub_1B62C15C4(v247, (uint64_t)v285);
                                      uint64_t v210 = v287;
                                      uint64_t v211 = v288;
                                      sub_1B62C14BC(v286, v287);
                                      LOBYTE(v210) = sub_1B6B3D86C(v285, v210, v211);
                                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v285);
                                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v286);
                                      sub_1B6391400((uint64_t)&v290);
                                      if (v210)
                                      {
LABEL_191:
                                        swift_bridgeObjectRelease();
                                        v214 = sub_1B6B1B930();
                                        uint64_t v215 = *(void *)(v213 + 48);
                                        if (v215)
                                        {
                                          uint64_t v216 = *(void *)(v213 + 64);
                                          *(void *)(v215 + 8 * v216) = v248;
                                          *(void *)(v213 + 64) = v216 + 1;
                                        }
                                        ((void (*)(long long *, void))v214)(&v290, 0);
                                        goto LABEL_111;
                                      }
                                    }
                                    else
                                    {
LABEL_171:
                                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v289);
LABEL_172:
                                      sub_1B62E2E40((uint64_t)&v290, (uint64_t (*)(void))sub_1B691F560);
                                    }
LABEL_173:
                                    ++v205;
                                    v204 += 72;
                                    if (v203 != v205) {
                                      continue;
                                    }
                                    swift_bridgeObjectRelease();
                                    v217 = v249;
                                    break;
                                  case 4:
                                    sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                                    if (v295 != 4) {
                                      goto LABEL_172;
                                    }
                                    int v206 = LOBYTE(v289[0]);
                                    int v207 = v293[0];
                                    sub_1B6391400((uint64_t)&v290);
                                    if (v206 == v207) {
                                      goto LABEL_191;
                                    }
                                    goto LABEL_173;
                                  case 5:
                                    if (v295 != 5) {
                                      goto LABEL_172;
                                    }
                                    int8x16_t v212 = vorrq_s8(*(int8x16_t *)&v293[8], v294);
                                    if (*(void *)&vorr_s8(*(int8x8_t *)v212.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v212, v212, 8uLL)) | *(void *)v293)goto LABEL_172; {
                                    sub_1B6391400((uint64_t)&v290);
                                    }
                                    goto LABEL_191;
                                  default:
                                    sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                                    if (v295) {
                                      goto LABEL_172;
                                    }
LABEL_181:
                                    uint64_t v208 = *(void *)&v289[0];
                                    uint64_t v209 = *(void *)v293;
                                    sub_1B6391400((uint64_t)&v290);
                                    if (v208 == v209) {
                                      goto LABEL_191;
                                    }
                                    goto LABEL_173;
                                }
                                break;
                              }
                            }
                            else
                            {
                              v217 = (char *)swift_retain();
                            }
                            uint64_t v218 = *((void *)v217 + 30) - *((void *)v217 + 29);
                            uint64_t v219 = v240;
                            v220 = ecs_stack_allocator_allocate(v240[4], 8 * v218, 8);
                            void *v220 = v248;
                            sub_1B639192C((uint64_t)&v296, (uint64_t)&v290);
                            *(void *)v293 = v220;
                            *(void *)&v293[8] = v218;
                            *(void *)&v293[16] = 1;
                            v221 = (void *)v219[13];
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            v219[13] = v221;
                            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                            {
                              v221 = sub_1B68C0C6C(0, v221[2] + 1, 1, v221);
                              void *v230 = v221;
                            }
                            unint64_t v224 = v221[2];
                            unint64_t v223 = v221[3];
                            if (v224 >= v223 >> 1)
                            {
                              v221 = sub_1B68C0C6C(v223 > 1, v224 + 1, 1, v221);
                              void *v230 = v221;
                            }
                            v221[2] = v224 + 1;
                            v225 = &v221[9 * v224];
                            *((_OWORD *)v225 + 2) = v290;
                            long long v226 = v291;
                            long long v227 = v292;
                            long long v228 = *(_OWORD *)v293;
                            v225[12] = *(void *)&v293[16];
                            *((_OWORD *)v225 + 4) = v227;
                            *((_OWORD *)v225 + 5) = v228;
                            *((_OWORD *)v225 + 3) = v226;
LABEL_111:
                            sub_1B6391400((uint64_t)&v296);
                            swift_release();
                          }
                        }
                      }
                      uint64_t v59 = v254 + 1;
                      if (v254 + 1 == v250) {
                        goto LABEL_15;
                      }
                      goto LABEL_113;
                    }
                  }
                }
              }
            }
LABEL_135:
            unint64_t v155 = (v160 - 1) & v160;
            unint64_t v158 = __clz(__rbit64(v160)) + (v159 << 6);
            v269 = (void **)v159;
          }
          uint64_t v161 = v146;
          uint64_t v162 = *(void *)(v146 + 48) + 8 * v158;
          int v163 = *(_DWORD *)v162;
          char v164 = *(unsigned char *)(v162 + 4);
          sub_1B6CA5F84(*(void *)(v146 + 56) + *(void *)(v267 + 72) * v158, v156);
          uint64_t v165 = v156;
          uint64_t v166 = v268;
          uint64_t v167 = *(int *)(v268 + 48);
          uint64_t v168 = (uint64_t)v265;
          uint64_t v169 = (uint64_t)v265 + v167;
          _DWORD *v265 = v163;
          *(unsigned char *)(v168 + 4) = v164;
          sub_1B6CA5F84(v165, v168 + v167);
          uint64_t v170 = *(int *)(v166 + 48);
          float32x4_t v171 = v266;
          uint64_t v172 = (uint64_t)v266 + v170;
          _DWORD *v266 = v163;
          *((unsigned char *)v171 + 4) = v164;
          sub_1B6CA5F84(v169, (uint64_t)v171 + v170);
          uint64_t v173 = *(void *)(v172 + 32);
          if (v173)
          {
            uint64_t v174 = *(void *)(v173 + 16);
            sub_1B63B291C(v168, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v172, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v165, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            uint64_t v156 = v165;
            uint64_t v146 = v161;
            uint64_t v152 = (uint64_t)v269;
            if (v174)
            {
              *(void *)&v255[(v158 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v158;
              ++v256;
            }
          }
          else
          {
            sub_1B63B291C(v168, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v172, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v165, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            uint64_t v156 = v165;
            uint64_t v146 = v161;
            uint64_t v152 = (uint64_t)v269;
          }
        }
      }
      if (v47 != v248) {
        break;
      }
LABEL_15:
      uint64_t v60 = v237;
      sub_1B6345178(v240, (unsigned __int16 **)v275, (uint64_t)v307);
      uint64_t v237 = v60;
      uint64_t v61 = v249;
      sub_1B634507C(v249);
      ecs_stack_allocator_pop_snapshot(v238);
      if (v239)
      {
        os_unfair_lock_unlock(*((os_unfair_lock_t *)v61 + 43));
        os_unfair_lock_unlock(*((os_unfair_lock_t *)v61 + 47));
      }
      swift_release();
      uint64_t v44 = v236 + 1;
      if (v236 + 1 == v233)
      {
        sub_1B632F170(v299);
        return sub_1B632F170(v299);
      }
    }
    v251 = (uint64_t *)(v58 + 16);
LABEL_18:
    uint64_t v62 = v251[4 * v47];
    char v63 = *(unsigned char *)(v62 + 32);
    unsigned int v64 = v63 & 0x3F;
    unint64_t v253 = (unint64_t)((1 << v63) + 63) >> 6;
    uint64_t v254 = v47;
    size_t v65 = 8 * v253;
    uint64_t v66 = swift_bridgeObjectRetain();
    if (v64 > 0xD)
    {
      uint64_t v66 = swift_stdlib_isStackAllocationSafe();
      if ((v66 & 1) == 0)
      {
        v255 = (char *)swift_slowAlloc();
        bzero(v255, v65);
        uint64_t v256 = 0;
        unint64_t v92 = 0;
        uint64_t v93 = 1 << *(unsigned char *)(v62 + 32);
        if (v93 < 64) {
          uint64_t v94 = ~(-1 << v93);
        }
        else {
          uint64_t v94 = -1;
        }
        unint64_t v95 = v94 & *(void *)(v62 + 64);
        uint64_t v263 = v62 + 64;
        int64_t v264 = (unint64_t)(v93 + 63) >> 6;
        v252 = (void **)(v264 - 6);
        uint64_t v250 = v62 + 112;
        uint64_t v96 = (uint64_t)v235;
        while (1)
        {
          if (v95)
          {
            unint64_t v97 = __clz(__rbit64(v95));
            v95 &= v95 - 1;
            v269 = v92;
            unint64_t v98 = v97 | ((void)v92 << 6);
          }
          else
          {
            long long v99 = (char *)v92 + 1;
            if ((uint64_t)v92 + 1 >= v264) {
              goto LABEL_69;
            }
            unint64_t v100 = *(void *)(v263 + 8 * (void)v99);
            if (!v100)
            {
              long long v99 = (char *)v92 + 2;
              if ((uint64_t)v92 + 2 >= v264) {
                goto LABEL_69;
              }
              unint64_t v100 = *(void *)(v263 + 8 * (void)v99);
              if (!v100)
              {
                long long v99 = (char *)v92 + 3;
                if ((uint64_t)v92 + 3 >= v264) {
                  goto LABEL_69;
                }
                unint64_t v100 = *(void *)(v263 + 8 * (void)v99);
                if (!v100)
                {
                  long long v99 = (char *)v92 + 4;
                  if ((uint64_t)v92 + 4 >= v264) {
                    goto LABEL_69;
                  }
                  unint64_t v100 = *(void *)(v263 + 8 * (void)v99);
                  if (!v100)
                  {
                    long long v99 = (char *)v92 + 5;
                    if ((uint64_t)v92 + 5 >= v264)
                    {
LABEL_69:
                      BOOL v113 = v255;
                      uint64_t v91 = sub_1B685E738((unint64_t *)v255, v253, v256, (void *)v62);
                      MEMORY[0x1BA9B84C0](v113, -1, -1);
                      goto LABEL_70;
                    }
                    unint64_t v100 = *(void *)(v263 + 8 * (void)v99);
                    if (!v100)
                    {
                      do
                      {
                        if (v252 == v92) {
                          goto LABEL_69;
                        }
                        unint64_t v100 = *(void *)(v250 + 8 * (void)v92);
                        unint64_t v92 = (void **)((char *)v92 + 1);
                      }
                      while (!v100);
                      long long v99 = (char *)v92 + 5;
                    }
                  }
                }
              }
            }
            unint64_t v95 = (v100 - 1) & v100;
            unint64_t v98 = __clz(__rbit64(v100)) + ((void)v99 << 6);
            v269 = (void **)v99;
          }
          uint64_t v101 = *(void *)(v62 + 48) + 8 * v98;
          int v102 = *(_DWORD *)v101;
          char v103 = *(unsigned char *)(v101 + 4);
          sub_1B6CA5F84(*(void *)(v62 + 56) + *(void *)(v267 + 72) * v98, v96);
          uint64_t v104 = v268;
          uint64_t v105 = *(int *)(v268 + 48);
          uint64_t v106 = (uint64_t)v257;
          uint64_t v107 = (uint64_t)v257 + v105;
          _DWORD *v257 = v102;
          *(unsigned char *)(v106 + 4) = v103;
          sub_1B6CA5F84(v96, v106 + v105);
          uint64_t v108 = *(int *)(v104 + 48);
          uint64_t v109 = v258;
          uint64_t v110 = (uint64_t)v258 + v108;
          _DWORD *v258 = v102;
          *((unsigned char *)v109 + 4) = v103;
          sub_1B6CA5F84(v107, (uint64_t)v109 + v108);
          uint64_t v111 = *(void *)(v110 + 32);
          if (v111)
          {
            uint64_t v112 = *(void *)(v111 + 16);
            sub_1B63B291C(v106, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v110, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v96, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            unint64_t v92 = v269;
            if (v112)
            {
              *(void *)&v255[(v98 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v98;
              ++v256;
            }
          }
          else
          {
            sub_1B63B291C(v106, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v110, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B62E2E40(v96, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            unint64_t v92 = v269;
          }
        }
      }
    }
    v252 = &v230;
    MEMORY[0x1F4188790](v66, v67);
    v255 = (char *)&v230 - ((v65 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v255, v65);
    uint64_t v256 = 0;
    uint64_t v68 = 0;
    uint64_t v69 = 1 << *(unsigned char *)(v62 + 32);
    if (v69 < 64) {
      uint64_t v70 = ~(-1 << v69);
    }
    else {
      uint64_t v70 = -1;
    }
    unint64_t v71 = v70 & *(void *)(v62 + 64);
    uint64_t v263 = v62 + 64;
    int64_t v264 = (unint64_t)(v69 + 63) >> 6;
    uint64_t v250 = v264 - 6;
    uint64_t v246 = v62 + 112;
    uint64_t v72 = (uint64_t)v242;
    while (1)
    {
      if (v71)
      {
        unint64_t v73 = __clz(__rbit64(v71));
        v71 &= v71 - 1;
        v269 = (void **)v68;
        unint64_t v74 = v73 | (v68 << 6);
      }
      else
      {
        uint64_t v75 = v68 + 1;
        if (v68 + 1 >= v264) {
          goto LABEL_44;
        }
        unint64_t v76 = *(void *)(v263 + 8 * v75);
        if (!v76)
        {
          uint64_t v75 = v68 + 2;
          if (v68 + 2 >= v264) {
            goto LABEL_44;
          }
          unint64_t v76 = *(void *)(v263 + 8 * v75);
          if (!v76)
          {
            uint64_t v75 = v68 + 3;
            if (v68 + 3 >= v264) {
              goto LABEL_44;
            }
            unint64_t v76 = *(void *)(v263 + 8 * v75);
            if (!v76)
            {
              uint64_t v75 = v68 + 4;
              if (v68 + 4 >= v264) {
                goto LABEL_44;
              }
              unint64_t v76 = *(void *)(v263 + 8 * v75);
              if (!v76)
              {
                uint64_t v75 = v68 + 5;
                if (v68 + 5 >= v264) {
                  goto LABEL_44;
                }
                unint64_t v76 = *(void *)(v263 + 8 * v75);
                if (!v76)
                {
                  while (v250 != v68)
                  {
                    unint64_t v76 = *(void *)(v246 + 8 * v68++);
                    if (v76)
                    {
                      uint64_t v75 = v68 + 5;
                      goto LABEL_40;
                    }
                  }
LABEL_44:
                  uint64_t v91 = sub_1B685E738((unint64_t *)v255, v253, v256, (void *)v62);
LABEL_70:
                  swift_bridgeObjectRelease();
                  uint64_t v114 = v91[2];
                  swift_release();
                  if (!v114
                    && (uint64_t v116 = *(void *)(*((void *)v249 + 5) + 16),
                        uint64_t v117 = *(void *)(v116 + 128),
                        *(void *)(v117 + 16))
                    && (unint64_t v118 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig), (v119 & 1) != 0)
                    && *(ValueMetadata **)(*(void *)(v116 + 24)
                                         + 16 * *(void *)(*(void *)(v117 + 56) + 8 * v118)
                                         + 32) == &type metadata for GraphScriptingConfig)
                  {
                    v296 = &type metadata for GraphScriptingConfig;
                    v297 = &off_1F0F80818;
                    char v298 = 1;
                    uint64_t v120 = *(void *)(*v230 + 16);
                    if (v120)
                    {
                      uint64_t v121 = *v230 + 32;
                      swift_retain();
                      swift_bridgeObjectRetain();
                      uint64_t v122 = 0;
                      while (2)
                      {
                        sub_1B639192C(v121, (uint64_t)&v290);
                        sub_1B639192C((uint64_t)&v296, (uint64_t)v247);
                        switch(BYTE8(v292))
                        {
                          case 1:
                            sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                            if (v295 != 1) {
                              goto LABEL_80;
                            }
                            goto LABEL_86;
                          case 2:
                            sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                            if (v295 != 2) {
                              goto LABEL_79;
                            }
                            goto LABEL_91;
                          case 3:
                            sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                            if (v295 == 3)
                            {
LABEL_91:
                              sub_1B62C15C4(v289, (uint64_t)v286);
                              sub_1B62C15C4(v247, (uint64_t)v285);
                              uint64_t v125 = v287;
                              uint64_t v126 = v288;
                              sub_1B62C14BC(v286, v287);
                              LOBYTE(v125) = sub_1B6B3D86C(v285, v125, v126);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v285);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v286);
                              sub_1B6391400((uint64_t)&v290);
                              if (v125)
                              {
LABEL_99:
                                swift_bridgeObjectRelease();
                                BOOL v131 = sub_1B6B1B930();
                                uint64_t v132 = *(void *)(v130 + 48);
                                uint64_t v115 = v254;
                                if (v132)
                                {
                                  uint64_t v133 = *(void *)(v130 + 64);
                                  *(void *)(v132 + 8 * v133) = v254;
                                  *(void *)(v130 + 64) = v133 + 1;
                                }
                                ((void (*)(long long *, void))v131)(&v290, 0);
                                goto LABEL_109;
                              }
                            }
                            else
                            {
LABEL_79:
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v289);
LABEL_80:
                              sub_1B62E2E40((uint64_t)&v290, (uint64_t (*)(void))sub_1B691F560);
                            }
LABEL_81:
                            ++v122;
                            v121 += 72;
                            if (v120 != v122) {
                              continue;
                            }
                            swift_bridgeObjectRelease();
                            uint64_t v134 = v249;
                            break;
                          case 4:
                            sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                            if (v295 != 4) {
                              goto LABEL_80;
                            }
                            int v127 = LOBYTE(v289[0]);
                            int v128 = v293[0];
                            sub_1B6391400((uint64_t)&v290);
                            if (v127 == v128) {
                              goto LABEL_99;
                            }
                            goto LABEL_81;
                          case 5:
                            if (v295 != 5) {
                              goto LABEL_80;
                            }
                            int8x16_t v129 = vorrq_s8(*(int8x16_t *)&v293[8], v294);
                            if (*(void *)&vorr_s8(*(int8x8_t *)v129.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v129, v129, 8uLL)) | *(void *)v293)goto LABEL_80; {
                            sub_1B6391400((uint64_t)&v290);
                            }
                            goto LABEL_99;
                          default:
                            sub_1B639192C((uint64_t)&v290, (uint64_t)v289);
                            if (v295) {
                              goto LABEL_80;
                            }
LABEL_86:
                            uint64_t v123 = *(void *)&v289[0];
                            uint64_t v124 = *(void *)v293;
                            sub_1B6391400((uint64_t)&v290);
                            if (v123 == v124) {
                              goto LABEL_99;
                            }
                            goto LABEL_81;
                        }
                        break;
                      }
                    }
                    else
                    {
                      uint64_t v134 = (char *)swift_retain();
                    }
                    uint64_t v135 = *((void *)v134 + 30) - *((void *)v134 + 29);
                    uint64_t v136 = v240;
                    uint64_t v137 = ecs_stack_allocator_allocate(v240[4], 8 * v135, 8);
                    *uint64_t v137 = v254;
                    sub_1B639192C((uint64_t)&v296, (uint64_t)&v290);
                    *(void *)v293 = v137;
                    *(void *)&v293[8] = v135;
                    *(void *)&v293[16] = 1;
                    uint64_t v138 = (void *)v136[13];
                    char v139 = swift_isUniquelyReferenced_nonNull_native();
                    v136[13] = v138;
                    if ((v139 & 1) == 0)
                    {
                      uint64_t v138 = sub_1B68C0C6C(0, v138[2] + 1, 1, v138);
                      void *v230 = v138;
                    }
                    unint64_t v141 = v138[2];
                    unint64_t v140 = v138[3];
                    if (v141 >= v140 >> 1)
                    {
                      uint64_t v138 = sub_1B68C0C6C(v140 > 1, v141 + 1, 1, v138);
                      void *v230 = v138;
                    }
                    _OWORD v138[2] = v141 + 1;
                    uint64_t v142 = &v138[9 * v141];
                    *((_OWORD *)v142 + 2) = v290;
                    long long v143 = v291;
                    long long v144 = v292;
                    long long v145 = *(_OWORD *)v293;
                    v142[12] = *(void *)&v293[16];
                    *((_OWORD *)v142 + 4) = v144;
                    *((_OWORD *)v142 + 5) = v145;
                    *((_OWORD *)v142 + 3) = v143;
                    uint64_t v115 = v254;
LABEL_109:
                    sub_1B6391400((uint64_t)&v296);
                    swift_release();
                  }
                  else
                  {
                    uint64_t v115 = v254;
                  }
                  uint64_t v47 = v115 + 1;
                  if (v47 == v248) {
                    goto LABEL_15;
                  }
                  goto LABEL_18;
                }
              }
            }
          }
        }
LABEL_40:
        unint64_t v71 = (v76 - 1) & v76;
        unint64_t v74 = __clz(__rbit64(v76)) + (v75 << 6);
        v269 = (void **)v75;
      }
      uint64_t v77 = v62;
      uint64_t v78 = *(void *)(v62 + 48) + 8 * v74;
      int v79 = *(_DWORD *)v78;
      char v80 = *(unsigned char *)(v78 + 4);
      sub_1B6CA5F84(*(void *)(v62 + 56) + *(void *)(v267 + 72) * v74, v72);
      uint64_t v81 = v72;
      uint64_t v82 = v268;
      uint64_t v83 = *(int *)(v268 + 48);
      uint64_t v84 = (uint64_t)v261;
      uint64_t v85 = (uint64_t)v261 + v83;
      _DWORD *v261 = v79;
      *(unsigned char *)(v84 + 4) = v80;
      sub_1B6CA5F84(v81, v84 + v83);
      uint64_t v86 = *(int *)(v82 + 48);
      uint64_t v87 = v262;
      uint64_t v88 = (uint64_t)v262 + v86;
      _DWORD *v262 = v79;
      *((unsigned char *)v87 + 4) = v80;
      sub_1B6CA5F84(v85, (uint64_t)v87 + v86);
      uint64_t v89 = *(void *)(v88 + 32);
      if (v89)
      {
        uint64_t v90 = *(void *)(v89 + 16);
        sub_1B63B291C(v84, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        sub_1B62E2E40(v88, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        sub_1B62E2E40(v81, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        uint64_t v72 = v81;
        uint64_t v62 = v77;
        uint64_t v68 = (uint64_t)v269;
        if (v90)
        {
          *(void *)&v255[(v74 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v74;
          ++v256;
        }
      }
      else
      {
        sub_1B63B291C(v84, &qword_1E9DD1650, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        sub_1B62E2E40(v88, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        sub_1B62E2E40(v81, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        uint64_t v72 = v81;
        uint64_t v62 = v77;
        uint64_t v68 = (uint64_t)v269;
      }
    }
  }
  return sub_1B632F170(v299);
}

uint64_t *sub_1B6CA21DC()
{
  uint64_t v1 = v0;
  uint64_t v229 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v197 = qword_1EB997A18;
  int v198 = 0;
  char v199 = 2;
  uint64_t v200 = 1;
  char v201 = 2;
  uint64_t v202 = 0;
  swift_retain();
  sub_1B67CE838((uint64_t)v188);
  swift_release();
  v195[0] = v188[0];
  v195[1] = v188[1];
  uint64_t v196 = v189;
  sub_1B62C9DA8(v0, (uint64_t)v195, 0x200000000, v220);
  sub_1B62D7910((uint64_t)v220, (uint64_t)v221, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v221[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v188);
  }
  long long v190 = v221[0];
  long long v191 = v221[1];
  uint64_t v176 = v223;
  uint64_t v192 = v222;
  uint64_t v3 = v224;
  uint64_t v2 = v225;
  uint64_t v5 = v226;
  uint64_t v4 = v227;
  sub_1B62CA064((uint64_t)v188);
  if (v4 > 0 && v3)
  {
    int v178 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v6 = &unk_1EB97E000;
    uint64_t v172 = (uint64_t *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v179 = v5[4];
    uint64_t v180 = v5 + 13;
    uint64_t v173 = v5 + 8;
    uint64_t v174 = (uint64_t)(v5 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    unint64_t v181 = v5;
    uint64_t v175 = v3;
    while (1)
    {
      uint64_t v8 = (unsigned int *)(v176 + 48 * v7);
      uint64_t v9 = *v8;
      uint64_t v186 = *((void *)v8 + 2);
      uint64_t v10 = *((void *)v8 + 5);
      uint64_t v182 = v8[1];
      uint64_t v184 = *((void *)v8 + 4);
      uint64_t v177 = v7;
      if (v178)
      {
        uint64_t v11 = *(os_unfair_lock_s **)(v10 + 376);
        swift_retain();
        os_unfair_lock_lock(v11);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v179);
      sub_1B62D7910(v174, (uint64_t)v228, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v12 = v5[4];
      uint64_t v13 = *(void *)(*(void *)(*(void *)(*(void *)(v10 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v5[6] = ecs_stack_allocator_allocate(v12, 48 * v13, 8);
      v5[7] = v13;
      v173[1] = 0;
      v173[2] = 0;
      *uint64_t v173 = 0;
      swift_release();
      if (v186)
      {
        if (v184)
        {
          for (uint64_t i = 0; i != v184; ++i)
          {
            while (1)
            {
              uint64_t v23 = *(void *)(v186 + 8 * i);
              char v24 = *(unsigned char *)(v10 + 184);
              uint64_t v25 = swift_retain();
              if (v24) {
                goto LABEL_262;
              }
              unsigned int v26 = *(_DWORD *)(*(void *)(v10 + 168) + 4 * v23);
              unsigned int v27 = *(_DWORD *)(*(void *)(v25 + v6[142]) + 12 * (int)v26 + 8);
              swift_release();
              if (v26 == -1) {
                break;
              }
              uint64_t v28 = v6[142];
              swift_retain();
              if ((v26 & 0x80000000) != 0) {
                goto LABEL_71;
              }
              if (*(void *)(v1 + v28 + 8) > (int)v26
                && ((uint64_t v29 = *(void *)(v1 + v28), v27 != -1)
                  ? (BOOL v30 = *(_DWORD *)(v29 + 12 * (int)v26 + 8) == v27)
                  : (BOOL v30 = 1),
                    v30
                 && (uint64_t v31 = *(void *)(*(void *)(*(void *)(v1 + 80)
                                                 + 8 * *(__int16 *)(v29 + 12 * (int)v26 + 6)
                                                 + 32)
                                     + 16),
                     uint64_t v32 = *(void *)(v31 + 128),
                     *(void *)(v32 + 16))
                 && (unint64_t v33 = sub_1B62C1A30((uint64_t)&type metadata for EmitterDescription), (v34 & 1) != 0)))
              {
                uint64_t v35 = *(ValueMetadata **)(*(void *)(v31 + 24)
                                        + 16 * *(void *)(*(void *)(v32 + 56) + 8 * v33)
                                        + 32);
                swift_release();
                if (v35 == &type metadata for EmitterDescription)
                {
                  uint64_t v216 = &off_1F0F53E58;
                  *(void *)&long long v214 = __PAIR64__(v27, v26);
                  uint64_t v215 = &type metadata for VFXEmitter;
                  *((void *)&v214 + 1) = v1;
                  sub_1B62C15C4(&v214, (uint64_t)&v208);
                  uint64_t v36 = sub_1B62C14BC(&v208, *((uint64_t *)&v209 + 1));
                  uint64_t v37 = sub_1B685E064(*v36, v36[1]);
                  uint64_t v38 = *(void *)(v37 + 16);
                  if (v38)
                  {
                    uint64_t v39 = 0;
                    uint64_t v170 = 0;
                    uint64_t v40 = v37 + 32;
                    uint64_t v183 = v37 + 32;
                    do
                    {
                      uint64_t v41 = (int *)(v40 + 16 * v39);
                      int v42 = v41[1];
                      uint64_t v43 = *v41;
                      uint64_t v44 = *((void *)v41 + 1);
                      swift_retain();
                      BOOL v45 = v43 == -1 && v42 == 0;
                      if (v45
                        || (v43 & 0x80000000) != 0
                        || *(void *)(v44 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v43
                        || ((uint64_t v46 = *(void *)(v44 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v42 != -1)
                          ? (BOOL v47 = *(_DWORD *)(v46 + 12 * (int)v43 + 8) == v42)
                          : (BOOL v47 = 1),
                            !v47))
                      {
                        swift_release();
                      }
                      else
                      {
                        uint64_t v48 = *(void *)(*(void *)(*(void *)(*(void *)(v44 + 80)
                                                                + 8 * *(__int16 *)(v46 + 12 * (int)v43 + 6)
                                                                + 32)
                                                    + 16)
                                        + 128);
                        if (*(void *)(v48 + 16)
                          && (uint64_t v169 = *(void *)(*(void *)(*(void *)(v44 + 80)
                                                           + 8 * *(__int16 *)(v46 + 12 * (int)v43 + 6)
                                                           + 32)
                                               + 16),
                              unint64_t v49 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig),
                              (v50 & 1) != 0))
                        {
                          uint64_t v51 = *(ValueMetadata **)(*(void *)(v169 + 24)
                                                  + 16 * *(void *)(*(void *)(v48 + 56) + 8 * v49)
                                                  + 32);
                          swift_release();
                          if (v51 == &type metadata for GraphScriptingConfig)
                          {
                            swift_retain();
                            swift_unownedRetain();
                            swift_release();
                            uint64_t v40 = v183;
                            if (v172[1] <= v43) {
                              goto LABEL_263;
                            }
                            uint64_t v52 = *v172;
                            if (v42 != -1 && *(_DWORD *)(v52 + 12 * (int)v43 + 8) != v42) {
                              goto LABEL_263;
                            }
                            uint64_t v53 = *(void *)(*(void *)(*(void *)(v1 + 136)
                                                        + 8 * *(int *)(v52 + 12 * (int)v43)
                                                        + 32)
                                            + 48);
                            uint64_t v54 = *(void *)(v53 + 16);
                            if (!v54) {
                              goto LABEL_263;
                            }
                            char v55 = (ValueMetadata **)(v53 + 32);
                            while (*v55 != &type metadata for GraphScriptingConfig)
                            {
                              v55 += 5;
                              if (!--v54) {
                                goto LABEL_263;
                              }
                            }
                            swift_unownedRelease();
                            ++v170;
                          }
                          else
                          {
                            uint64_t v40 = v183;
                          }
                        }
                        else
                        {
                          swift_release();
                          uint64_t v40 = v183;
                        }
                      }
                      ++v39;
                    }
                    while (v39 != v38);
                    swift_bridgeObjectRelease();
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v208);
                    uint64_t v5 = v181;
                    uint64_t v6 = (void *)&unk_1EB97E000;
                    if (v170) {
                      goto LABEL_26;
                    }
                    goto LABEL_96;
                  }
                  swift_bridgeObjectRelease();
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v208);
                  goto LABEL_95;
                }
              }
              else
              {
                swift_release();
              }
              uint64_t v56 = (void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
              uint64_t v57 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
              swift_retain();
              if (v57 <= (int)v26
                || (v27 != -1 ? (BOOL v58 = *(_DWORD *)(*v56 + 12 * (int)v26 + 8) == v27) : (BOOL v58 = 1),
                    !v58
                 || (uint64_t v59 = *(void *)(*(void *)(*(void *)(v1 + 80)
                                                 + 8 * *(__int16 *)(*v56 + 12 * (int)v26 + 6)
                                                 + 32)
                                     + 16),
                     uint64_t v60 = *(void *)(v59 + 128),
                     !*(void *)(v60 + 16))))
              {
                swift_release();
LABEL_95:
                uint64_t v6 = (void *)&unk_1EB97E000;
                goto LABEL_96;
              }
              unint64_t v61 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig);
              if ((v62 & 1) == 0)
              {
                swift_release();
LABEL_131:
                uint64_t v6 = (void *)&unk_1EB97E000;
                uint64_t v5 = v181;
                goto LABEL_96;
              }
              char v63 = *(ValueMetadata **)(*(void *)(v59 + 24) + 16 * *(void *)(*(void *)(v60 + 56) + 8 * v61) + 32);
              swift_release();
              if (v63 != &type metadata for GraphScriptingConfig) {
                goto LABEL_131;
              }
              swift_retain();
              swift_unownedRetain();
              swift_release();
              uint64_t v6 = (void *)&unk_1EB97E000;
              uint64_t v5 = v181;
              if (v172[1] <= (int)v26) {
                goto LABEL_261;
              }
              if (v27 != -1 && *(_DWORD *)(*v172 + 12 * (int)v26 + 8) != v27) {
                goto LABEL_261;
              }
              uint64_t v65 = *(void *)(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(*v172 + 12 * (int)v26) + 32) + 48);
              uint64_t v66 = *(void *)(v65 + 16);
              if (!v66) {
                goto LABEL_261;
              }
              uint64_t v67 = (ValueMetadata **)(v65 + 32);
              while (*v67 != &type metadata for GraphScriptingConfig)
              {
                v67 += 5;
                if (!--v66) {
                  goto LABEL_261;
                }
              }
              swift_unownedRelease();
              if (++i == v184) {
                goto LABEL_15;
              }
            }
            if (v27)
            {
              swift_retain();
LABEL_71:
              swift_release();
            }
            swift_retain();
            swift_release();
LABEL_96:
            uint64_t v68 = *(void *)(*(void *)(v10 + 40) + 16);
            uint64_t v69 = *(void *)(v68 + 128);
            if (*(void *)(v69 + 16))
            {
              unint64_t v70 = sub_1B62C1A30((uint64_t)&type metadata for CodeGenerationInitialized);
              if ((v71 & 1) != 0
                && *(ValueMetadata **)(*(void *)(v68 + 24) + 16 * *(void *)(*(void *)(v69 + 56) + 8 * v70) + 32) == &type metadata for CodeGenerationInitialized)
              {
                v217 = &type metadata for CodeGenerationInitialized;
                uint64_t v218 = &off_1F0F94338;
                char v219 = 1;
                uint64_t v72 = *(void *)(*v180 + 16);
                if (v72)
                {
                  uint64_t v73 = *v180 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v74 = 0;
                  while (2)
                  {
                    sub_1B63B2978(v73, (uint64_t)&v214);
                    sub_1B639192C((uint64_t)&v214, (uint64_t)&v208);
                    sub_1B639192C((uint64_t)&v217, (uint64_t)v211);
                    switch(BYTE8(v210))
                    {
                      case 1:
                        sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                        if (v213 != 1) {
                          goto LABEL_102;
                        }
                        goto LABEL_116;
                      case 2:
                        sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                        if (v213 == 2) {
                          goto LABEL_113;
                        }
                        goto LABEL_101;
                      case 3:
                        sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                        if (v213 == 3)
                        {
LABEL_113:
                          sub_1B62C15C4(v207, (uint64_t)v204);
                          sub_1B62C15C4((long long *)v211, (uint64_t)v203);
                          uint64_t v77 = v205;
                          uint64_t v78 = v206;
                          sub_1B62C14BC(v204, v205);
                          LOBYTE(v77) = sub_1B6B3D86C(v203, v77, v78);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v203);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v204);
                          sub_1B6391400((uint64_t)&v208);
                          sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          if (v77)
                          {
LABEL_121:
                            swift_bridgeObjectRelease();
                            uint64_t v83 = sub_1B6B1B930();
                            uint64_t v84 = *(void *)(v82 + 48);
                            if (v84)
                            {
                              uint64_t v85 = *(void *)(v82 + 64);
                              *(void *)(v84 + 8 * v85) = v23;
                              *(void *)(v82 + 64) = v85 + 1;
                            }
                            ((void (*)(long long *, void))v83)(&v208, 0);
                            uint64_t v5 = v181;
                            uint64_t v6 = &unk_1EB97E000;
                            goto LABEL_25;
                          }
                        }
                        else
                        {
LABEL_101:
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v207);
LABEL_102:
                          sub_1B62E2E40((uint64_t)&v208, (uint64_t (*)(void))sub_1B691F560);
                          sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                        }
LABEL_103:
                        ++v74;
                        v73 += 72;
                        if (v72 != v74) {
                          continue;
                        }
                        swift_bridgeObjectRelease();
                        uint64_t v6 = (void *)&unk_1EB97E000;
                        break;
                      case 4:
                        sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                        if (v213 != 4) {
                          goto LABEL_102;
                        }
                        int v75 = LOBYTE(v207[0]);
                        int v76 = v211[0];
                        sub_1B6391400((uint64_t)&v208);
                        sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                        if (v75 == v76) {
                          goto LABEL_121;
                        }
                        goto LABEL_103;
                      case 5:
                        if (v213 != 5) {
                          goto LABEL_102;
                        }
                        int8x16_t v81 = vorrq_s8(*(int8x16_t *)&v211[8], v212);
                        if (*(void *)&vorr_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)) | *(void *)v211) {
                          goto LABEL_102;
                        }
                        sub_1B6391400((uint64_t)&v208);
                        sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                        goto LABEL_121;
                      default:
                        sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                        if (v213) {
                          goto LABEL_102;
                        }
LABEL_116:
                        uint64_t v79 = *(void *)&v207[0];
                        uint64_t v80 = *(void *)v211;
                        sub_1B6391400((uint64_t)&v208);
                        sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                        if (v79 == v80) {
                          goto LABEL_121;
                        }
                        goto LABEL_103;
                    }
                    break;
                  }
                }
                else
                {
                  swift_retain();
                }
                uint64_t v86 = *(void *)(v10 + 240) - *(void *)(v10 + 232);
                uint64_t v5 = v181;
                uint64_t v87 = ecs_stack_allocator_allocate(v181[4], 8 * v86, 8);
                *uint64_t v87 = v23;
                sub_1B639192C((uint64_t)&v217, (uint64_t)&v208);
                *(void *)uint64_t v211 = v87;
                *(void *)&v211[8] = v86;
                *(void *)&v211[16] = 1;
                uint64_t v88 = (void *)v181[13];
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v181[13] = v88;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v88 = sub_1B68C0C6C(0, v88[2] + 1, 1, v88);
                  *uint64_t v180 = v88;
                }
                unint64_t v91 = v88[2];
                unint64_t v90 = v88[3];
                if (v91 >= v90 >> 1)
                {
                  uint64_t v88 = sub_1B68C0C6C(v90 > 1, v91 + 1, 1, v88);
                  *uint64_t v180 = v88;
                }
                v88[2] = v91 + 1;
                unint64_t v92 = &v88[9 * v91];
                *((_OWORD *)v92 + 2) = v208;
                long long v93 = v209;
                long long v94 = v210;
                long long v95 = *(_OWORD *)v211;
                v92[12] = *(void *)&v211[16];
                *((_OWORD *)v92 + 4) = v94;
                *((_OWORD *)v92 + 5) = v95;
                *((_OWORD *)v92 + 3) = v93;
LABEL_25:
                sub_1B6391400((uint64_t)&v217);
                swift_release();
              }
            }
LABEL_26:
            ;
          }
        }
      }
      else if (v9 != v182)
      {
        uint64_t v96 = swift_retain();
        if (*(unsigned char *)(v10 + 184)) {
          goto LABEL_262;
        }
        while (2)
        {
          unsigned int v97 = *(_DWORD *)(*(void *)(v10 + 168) + 4 * v9);
          uint64_t v98 = v9 + 1;
          unsigned int v99 = *(_DWORD *)(*(void *)(v96 + v6[142]) + 12 * (int)v97 + 8);
          swift_release();
          if (v97 == -1)
          {
            if (v99)
            {
              swift_retain();
              goto LABEL_181;
            }
          }
          else
          {
            uint64_t v100 = v6[142];
            swift_retain();
            if ((v97 & 0x80000000) == 0)
            {
              if (*(void *)(v1 + v100 + 8) > (int)v97
                && ((uint64_t v101 = *(void *)(v1 + v100), v99 != -1)
                  ? (BOOL v102 = *(_DWORD *)(v101 + 12 * (int)v97 + 8) == v99)
                  : (BOOL v102 = 1),
                    v102
                 && (uint64_t v103 = *(void *)(*(void *)(*(void *)(v1 + 80)
                                                  + 8 * *(__int16 *)(v101 + 12 * (int)v97 + 6)
                                                  + 32)
                                      + 16),
                     uint64_t v104 = *(void *)(v103 + 128),
                     *(void *)(v104 + 16))
                 && (unint64_t v105 = sub_1B62C1A30((uint64_t)&type metadata for EmitterDescription), (v106 & 1) != 0)))
              {
                uint64_t v107 = *(ValueMetadata **)(*(void *)(v103 + 24)
                                         + 16 * *(void *)(*(void *)(v104 + 56) + 8 * v105)
                                         + 32);
                swift_release();
                if (v107 == &type metadata for EmitterDescription)
                {
                  uint64_t v216 = &off_1F0F53E58;
                  *(void *)&long long v214 = __PAIR64__(v99, v97);
                  uint64_t v215 = &type metadata for VFXEmitter;
                  *((void *)&v214 + 1) = v1;
                  sub_1B62C15C4(&v214, (uint64_t)&v208);
                  uint64_t v108 = sub_1B62C14BC(&v208, *((uint64_t *)&v209 + 1));
                  uint64_t v109 = sub_1B685E064(*v108, v108[1]);
                  uint64_t v110 = *(void *)(v109 + 16);
                  if (v110)
                  {
                    uint64_t v111 = 0;
                    uint64_t v112 = v109 + 32;
                    uint64_t v185 = 0;
                    uint64_t v187 = v109 + 32;
                    do
                    {
                      BOOL v113 = (int *)(v112 + 16 * v111);
                      int v114 = v113[1];
                      uint64_t v115 = *v113;
                      uint64_t v116 = *((void *)v113 + 1);
                      swift_retain();
                      BOOL v117 = v115 == -1 && v114 == 0;
                      if (v117
                        || (v115 & 0x80000000) != 0
                        || *(void *)(v116 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v115
                        || ((uint64_t v118 = *(void *)(v116 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v114 != -1)
                          ? (BOOL v119 = *(_DWORD *)(v118 + 12 * (int)v115 + 8) == v114)
                          : (BOOL v119 = 1),
                            !v119))
                      {
                        swift_release();
                      }
                      else
                      {
                        uint64_t v120 = *(void *)(*(void *)(*(void *)(*(void *)(v116 + 80)
                                                                 + 8 * *(__int16 *)(v118 + 12 * (int)v115 + 6)
                                                                 + 32)
                                                     + 16)
                                         + 128);
                        if (*(void *)(v120 + 16)
                          && (uint64_t v171 = *(void *)(*(void *)(*(void *)(v116 + 80)
                                                           + 8 * *(__int16 *)(v118 + 12 * (int)v115 + 6)
                                                           + 32)
                                               + 16),
                              unint64_t v121 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig),
                              (v122 & 1) != 0))
                        {
                          uint64_t v123 = *(ValueMetadata **)(*(void *)(v171 + 24)
                                                   + 16 * *(void *)(*(void *)(v120 + 56) + 8 * v121)
                                                   + 32);
                          swift_release();
                          if (v123 == &type metadata for GraphScriptingConfig)
                          {
                            swift_retain();
                            swift_unownedRetain();
                            swift_release();
                            uint64_t v112 = v187;
                            if (v172[1] <= v115
                              || (uint64_t v124 = *v172, v114 != -1) && *(_DWORD *)(v124 + 12 * (int)v115 + 8) != v114
                              || (uint64_t v125 = *(void *)(*(void *)(*(void *)(v1 + 136)
                                                               + 8 * *(int *)(v124 + 12 * (int)v115)
                                                               + 32)
                                                   + 48),
                                  (uint64_t v126 = *(void *)(v125 + 16)) == 0))
                            {
                              while (1)
                              {
LABEL_263:
                                *(void *)&long long v214 = 0;
                                *((void *)&v214 + 1) = 0xE000000000000000;
                                sub_1B6E328C8();
                                sub_1B6E31948();
                                sub_1B681F698();
                                sub_1B6E31948();
                                swift_bridgeObjectRelease();
                                sub_1B6E31948();
                                sub_1B6E31948();
                                sub_1B6E31948();
LABEL_262:
                                sub_1B6E32BE8();
                                __break(1u);
                              }
                            }
                            int v127 = (ValueMetadata **)(v125 + 32);
                            while (*v127 != &type metadata for GraphScriptingConfig)
                            {
                              v127 += 5;
                              if (!--v126) {
                                goto LABEL_263;
                              }
                            }
                            swift_unownedRelease();
                            ++v185;
                          }
                          else
                          {
                            uint64_t v112 = v187;
                          }
                        }
                        else
                        {
                          swift_release();
                          uint64_t v112 = v187;
                        }
                      }
                      ++v111;
                    }
                    while (v111 != v110);
                    swift_bridgeObjectRelease();
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v208);
                    uint64_t v5 = v181;
                    uint64_t v6 = (void *)&unk_1EB97E000;
                    if (!v185)
                    {
LABEL_206:
                      uint64_t v140 = *(void *)(*(void *)(v10 + 40) + 16);
                      uint64_t v141 = *(void *)(v140 + 128);
                      if (*(void *)(v141 + 16))
                      {
                        unint64_t v142 = sub_1B62C1A30((uint64_t)&type metadata for CodeGenerationInitialized);
                        if ((v143 & 1) != 0
                          && *(ValueMetadata **)(*(void *)(v140 + 24)
                                               + 16 * *(void *)(*(void *)(v141 + 56) + 8 * v142)
                                               + 32) == &type metadata for CodeGenerationInitialized)
                        {
                          v217 = &type metadata for CodeGenerationInitialized;
                          uint64_t v218 = &off_1F0F94338;
                          char v219 = 1;
                          uint64_t v144 = *(void *)(*v180 + 16);
                          if (v144)
                          {
                            uint64_t v145 = *v180 + 32;
                            swift_retain();
                            swift_bridgeObjectRetain();
                            uint64_t v146 = 0;
                            while (2)
                            {
                              sub_1B63B2978(v145, (uint64_t)&v214);
                              sub_1B639192C((uint64_t)&v214, (uint64_t)&v208);
                              sub_1B639192C((uint64_t)&v217, (uint64_t)v211);
                              switch(BYTE8(v210))
                              {
                                case 1:
                                  sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                                  if (v213 != 1) {
                                    goto LABEL_212;
                                  }
                                  goto LABEL_226;
                                case 2:
                                  sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                                  if (v213 == 2) {
                                    goto LABEL_223;
                                  }
                                  goto LABEL_211;
                                case 3:
                                  sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                                  if (v213 == 3)
                                  {
LABEL_223:
                                    sub_1B62C15C4(v207, (uint64_t)v204);
                                    sub_1B62C15C4((long long *)v211, (uint64_t)v203);
                                    uint64_t v149 = v205;
                                    uint64_t v150 = v206;
                                    sub_1B62C14BC(v204, v205);
                                    LOBYTE(v149) = sub_1B6B3D86C(v203, v149, v150);
                                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v203);
                                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v204);
                                    sub_1B6391400((uint64_t)&v208);
                                    sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                                    if (v149)
                                    {
LABEL_231:
                                      swift_bridgeObjectRelease();
                                      unint64_t v155 = sub_1B6B1B930();
                                      uint64_t v156 = *(void *)(v154 + 48);
                                      if (v156)
                                      {
                                        uint64_t v157 = *(void *)(v154 + 64);
                                        *(void *)(v156 + 8 * v157) = v9;
                                        *(void *)(v154 + 64) = v157 + 1;
                                      }
                                      ((void (*)(long long *, void))v155)(&v208, 0);
                                      uint64_t v5 = v181;
                                      uint64_t v6 = (void *)&unk_1EB97E000;
                                      goto LABEL_241;
                                    }
                                  }
                                  else
                                  {
LABEL_211:
                                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v207);
LABEL_212:
                                    sub_1B62E2E40((uint64_t)&v208, (uint64_t (*)(void))sub_1B691F560);
                                    sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                                  }
LABEL_213:
                                  ++v146;
                                  v145 += 72;
                                  if (v144 != v146) {
                                    continue;
                                  }
                                  swift_bridgeObjectRelease();
                                  uint64_t v6 = (void *)&unk_1EB97E000;
                                  break;
                                case 4:
                                  sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                                  if (v213 != 4) {
                                    goto LABEL_212;
                                  }
                                  int v147 = LOBYTE(v207[0]);
                                  int v148 = v211[0];
                                  sub_1B6391400((uint64_t)&v208);
                                  sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                                  if (v147 == v148) {
                                    goto LABEL_231;
                                  }
                                  goto LABEL_213;
                                case 5:
                                  if (v213 != 5) {
                                    goto LABEL_212;
                                  }
                                  int8x16_t v153 = vorrq_s8(*(int8x16_t *)&v211[8], v212);
                                  if (*(void *)&vorr_s8(*(int8x8_t *)v153.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v153, v153, 8uLL)) | *(void *)v211)goto LABEL_212; {
                                  sub_1B6391400((uint64_t)&v208);
                                  }
                                  sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                                  goto LABEL_231;
                                default:
                                  sub_1B639192C((uint64_t)&v208, (uint64_t)v207);
                                  if (v213) {
                                    goto LABEL_212;
                                  }
LABEL_226:
                                  uint64_t v151 = *(void *)&v207[0];
                                  uint64_t v152 = *(void *)v211;
                                  sub_1B6391400((uint64_t)&v208);
                                  sub_1B63B291C((uint64_t)&v214, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                                  if (v151 == v152) {
                                    goto LABEL_231;
                                  }
                                  goto LABEL_213;
                              }
                              break;
                            }
                          }
                          else
                          {
                            swift_retain();
                          }
                          uint64_t v158 = *(void *)(v10 + 240) - *(void *)(v10 + 232);
                          uint64_t v5 = v181;
                          uint64_t v159 = ecs_stack_allocator_allocate(v181[4], 8 * v158, 8);
                          *uint64_t v159 = v9;
                          sub_1B639192C((uint64_t)&v217, (uint64_t)&v208);
                          *(void *)uint64_t v211 = v159;
                          *(void *)&v211[8] = v158;
                          *(void *)&v211[16] = 1;
                          unint64_t v160 = (void *)v181[13];
                          char v161 = swift_isUniquelyReferenced_nonNull_native();
                          v181[13] = v160;
                          if ((v161 & 1) == 0)
                          {
                            unint64_t v160 = sub_1B68C0C6C(0, v160[2] + 1, 1, v160);
                            *uint64_t v180 = v160;
                          }
                          unint64_t v163 = v160[2];
                          unint64_t v162 = v160[3];
                          if (v163 >= v162 >> 1)
                          {
                            unint64_t v160 = sub_1B68C0C6C(v162 > 1, v163 + 1, 1, v160);
                            *uint64_t v180 = v160;
                          }
                          _OWORD v160[2] = v163 + 1;
                          char v164 = &v160[9 * v163];
                          *((_OWORD *)v164 + 2) = v208;
                          long long v165 = v209;
                          long long v166 = v210;
                          long long v167 = *(_OWORD *)v211;
                          v164[12] = *(void *)&v211[16];
                          *((_OWORD *)v164 + 4) = v166;
                          *((_OWORD *)v164 + 5) = v167;
                          *((_OWORD *)v164 + 3) = v165;
LABEL_241:
                          sub_1B6391400((uint64_t)&v217);
                          swift_release();
                        }
                      }
                    }
                    if (v98 == v182) {
                      goto LABEL_15;
                    }
LABEL_243:
                    uint64_t v96 = swift_retain();
                    ++v9;
                    if (*(unsigned char *)(v10 + 184)) {
                      goto LABEL_262;
                    }
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v208);
                  goto LABEL_205;
                }
              }
              else
              {
                swift_release();
              }
              int v128 = (void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
              uint64_t v129 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
              swift_retain();
              if (v129 > (int)v97 && (v99 == -1 || *(_DWORD *)(*v128 + 12 * (int)v97 + 8) == v99))
              {
                uint64_t v131 = *(void *)(*(void *)(*(void *)(v1 + 80)
                                             + 8 * *(__int16 *)(*v128 + 12 * (int)v97 + 6)
                                             + 32)
                                 + 16);
                uint64_t v132 = *(void *)(v131 + 128);
                if (*(void *)(v132 + 16))
                {
                  unint64_t v133 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig);
                  if (v134)
                  {
                    uint64_t v135 = *(ValueMetadata **)(*(void *)(v131 + 24)
                                             + 16 * *(void *)(*(void *)(v132 + 56) + 8 * v133)
                                             + 32);
                    swift_release();
                    if (v135 == &type metadata for GraphScriptingConfig)
                    {
                      swift_retain();
                      swift_unownedRetain();
                      swift_release();
                      uint64_t v6 = (void *)&unk_1EB97E000;
                      uint64_t v5 = v181;
                      if (v172[1] <= (int)v97
                        || (v99 != -1 ? (BOOL v136 = *(_DWORD *)(*v172 + 12 * (int)v97 + 8) == v99) : (BOOL v136 = 1),
                            !v136
                         || (uint64_t v137 = *(void *)(*(void *)(*(void *)(v1 + 136)
                                                          + 8 * *(int *)(*v172 + 12 * (int)v97)
                                                          + 32)
                                              + 48),
                             (uint64_t v138 = *(void *)(v137 + 16)) == 0)))
                      {
LABEL_261:
                        *(void *)&long long v208 = 0;
                        *((void *)&v208 + 1) = 0xE000000000000000;
                        sub_1B6E328C8();
                        sub_1B6E31948();
                        sub_1B681F698();
                        sub_1B6E31948();
                        swift_bridgeObjectRelease();
                        sub_1B6E31948();
                        sub_1B6E31948();
                        sub_1B6E31948();
                        goto LABEL_262;
                      }
                      char v139 = (ValueMetadata **)(v137 + 32);
                      while (*v139 != &type metadata for GraphScriptingConfig)
                      {
                        v139 += 5;
                        if (!--v138) {
                          goto LABEL_261;
                        }
                      }
                      swift_unownedRelease();
                      if (v98 == v182) {
                        goto LABEL_15;
                      }
                      goto LABEL_243;
                    }
                  }
                  else
                  {
                    swift_release();
                  }
                  uint64_t v6 = (void *)&unk_1EB97E000;
                  uint64_t v5 = v181;
                  goto LABEL_206;
                }
              }
              swift_release();
LABEL_205:
              uint64_t v6 = (void *)&unk_1EB97E000;
              goto LABEL_206;
            }
LABEL_181:
            swift_release();
          }
          break;
        }
        swift_retain();
        swift_release();
        goto LABEL_206;
      }
LABEL_15:
      v193[0] = v190;
      v193[1] = v191;
      uint64_t v194 = v192;
      sub_1B6345178(v5, (unsigned __int16 **)v193, (uint64_t)v228);
      if (*(void *)(v5[13] + 16))
      {
        uint64_t v15 = swift_bridgeObjectRetain();
        sub_1B639147C(v15, v10);
        swift_bridgeObjectRelease();
        char v16 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = v5[13];
        if (v16)
        {
          sub_1B6399BB8(0, *(void *)(v17 + 16));
        }
        else
        {
          uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v17 + 24) >= 2uLL)
          {
            sub_1B681C594();
            uint64_t v18 = (void *)swift_allocObject();
            size_t v19 = j__malloc_size(v18);
            v18[2] = 0;
            v18[3] = 2 * ((uint64_t)(v19 - 32) / 72);
          }
          *uint64_t v180 = v18;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v5[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          uint64_t v20 = *(char **)(v10 + 232);
          uint64_t v21 = *(char **)(v10 + 256);
          if (v20 == v21)
          {
            uint64_t v22 = *(char **)(v10 + 240);
          }
          else
          {
            sub_1B666018C(v21, v20);
            uint64_t v21 = *(char **)(v10 + 232);
            uint64_t v22 = *(char **)(v10 + 240);
            if (v22 == v21)
            {
              uint64_t v22 = 0;
              uint64_t v21 = 0;
              *(void *)(v10 + 232) = 0;
              *(void *)(v10 + 240) = 0;
            }
          }
          *(void *)(v10 + 248) = v22;
          *(void *)(v10 + 256) = v21;
        }
      }
      ecs_stack_allocator_pop_snapshot(v179);
      if (v178)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 376));
      }
      swift_release();
      uint64_t v7 = v177 + 1;
      if (v177 + 1 == v175)
      {
        sub_1B632F170(v220);
        return sub_1B632F170(v220);
      }
    }
  }
  return sub_1B632F170(v220);
}

uint64_t *sub_1B6CA3BE8()
{
  uint64_t v1 = v0;
  uint64_t v252 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v212 = qword_1EB997A18;
  int v213 = 0;
  char v214 = 2;
  uint64_t v215 = 1;
  char v216 = 2;
  uint64_t v217 = 0;
  swift_retain();
  sub_1B63AC2E8(1, (uint64_t)v186);
  swift_release();
  sub_1B636E080();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  *(void *)(v2 + 32) = &type metadata for CodeGenerationInitialized;
  *(void *)(v2 + 40) = &off_1F0F94368;
  sub_1B62AD184(v187);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v186);
  v204[0] = v187[0];
  v204[1] = v187[1];
  uint64_t v205 = v188;
  sub_1B62C9DA8(v0, (uint64_t)v204, 0x200000000, v235);
  sub_1B62D7910((uint64_t)v235, (uint64_t)v243, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v243[0])
  {
    long long v195 = v243[0];
    long long v196 = v243[1];
    uint64_t v172 = v245;
    uint64_t v197 = v244;
    uint64_t v3 = v246;
    uint64_t v4 = v247;
    uint64_t v179 = v248;
    uint64_t v5 = v249;
    sub_1B62CA064((uint64_t)v187);
    if (v5 > 0 && v3)
    {
      uint64_t v165 = v0;
      int v177 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v175 = v179[4];
      v198[0] = v195;
      v198[1] = v196;
      uint64_t v199 = v197;
      uint64_t v168 = v179 + 13;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v171 = v3;
      do
      {
        uint64_t v8 = (unsigned int *)(v172 + 48 * v6);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        uint64_t v11 = (uint64_t *)*((void *)v8 + 2);
        uint64_t v12 = *((void *)v8 + 3);
        uint64_t v14 = *((void *)v8 + 4);
        uint64_t v13 = *((void *)v8 + 5);
        uint64_t v185 = v13;
        uint64_t v173 = v6;
        if (v177)
        {
          uint64_t v15 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain();
          char v16 = v15;
          uint64_t v13 = v185;
          os_unfair_lock_lock(v16);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v185 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v175);
        sub_1B62D7910((uint64_t)(v179 + 6), (uint64_t)v251, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v17 = v179[4];
        uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        uint64_t v19 = v185;
        v179[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
        v179[7] = v18;
        v179[9] = 0;
        v179[10] = 0;
        v179[8] = 0;
        swift_release();
        uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v11, v12, v14, (uint64_t)v179);
        if (v11)
        {
          if (v14)
          {
            for (uint64_t i = 0; i != v14; ++i)
            {
              uint64_t v22 = v11[i];
              uint64_t v23 = v20 + (i << 6);
              uint64_t v24 = *(void *)(v23 + 40);
              if ((!v24 || !*(void *)(v24 + 16)) && !*(void *)(*(void *)(v23 + 48) + 16))
              {
                uint64_t v25 = *(void *)(*(void *)(v19 + 40) + 16);
                uint64_t v26 = *(void *)(v25 + 128);
                if (*(void *)(v26 + 16)
                  && (unint64_t v27 = sub_1B62C1A30((uint64_t)&type metadata for GraphEntityComponentPropertyReferences),
                      (v28 & 1) != 0)
                  && *(ValueMetadata **)(*(void *)(v25 + 24) + 16 * *(void *)(*(void *)(v26 + 56) + 8 * v27) + 32) == &type metadata for GraphEntityComponentPropertyReferences)
                {
                  uint64_t v181 = v7;
                  *(void *)&long long v223 = &type metadata for GraphEntityComponentPropertyReferences;
                  *((void *)&v223 + 1) = &off_1F0F9DA30;
                  BYTE8(v225) = 1;
                  uint64_t v29 = *(void *)(*v168 + 16);
                  if (v29)
                  {
                    uint64_t v30 = *v168 + 32;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v31 = 0;
                    while (2)
                    {
                      sub_1B63B2978(v30, (uint64_t)v236);
                      sub_1B639192C((uint64_t)v236, (uint64_t)&v237);
                      sub_1B639192C((uint64_t)&v223, (uint64_t)v240);
                      switch(BYTE8(v239))
                      {
                        case 1:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 != 1) {
                            goto LABEL_25;
                          }
                          goto LABEL_34;
                        case 2:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 != 2) {
                            goto LABEL_24;
                          }
                          goto LABEL_39;
                        case 3:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 == 3)
                          {
LABEL_39:
                            sub_1B62C15C4(v229, (uint64_t)&v230);
                            sub_1B62C15C4((long long *)v240, (uint64_t)v222);
                            uint64_t v36 = v232;
                            uint64_t v37 = v233;
                            sub_1B62C14BC(&v230, v232);
                            LOBYTE(v36) = sub_1B6B3D86C(v222, v36, v37);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v222);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v230);
                            sub_1B6391400((uint64_t)&v237);
                            sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                            if (v36)
                            {
LABEL_44:
                              swift_bridgeObjectRelease();
                              uint64_t v40 = sub_1B6B1B930();
                              uint64_t v41 = *(void *)(v39 + 48);
                              if (v41)
                              {
                                uint64_t v42 = *(void *)(v39 + 64);
                                *(void *)(v41 + 8 * v42) = v22;
                                *(void *)(v39 + 64) = v42 + 1;
                              }
                              ((void (*)(long long *, void))v40)(&v237, 0);
                              uint64_t v7 = v181;
                              goto LABEL_54;
                            }
                          }
                          else
                          {
LABEL_24:
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v229);
LABEL_25:
                            sub_1B62E2E40((uint64_t)&v237, (uint64_t (*)(void))sub_1B691F560);
                            sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          }
LABEL_26:
                          ++v31;
                          v30 += 72;
                          if (v29 != v31) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          uint64_t v43 = v185;
                          break;
                        case 4:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 != 4) {
                            goto LABEL_25;
                          }
                          int v32 = LOBYTE(v229[0]);
                          int v33 = v240[0];
                          sub_1B6391400((uint64_t)&v237);
                          sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          if (v32 == v33) {
                            goto LABEL_44;
                          }
                          goto LABEL_26;
                        case 5:
                          if (v242 != 5) {
                            goto LABEL_25;
                          }
                          int8x16_t v38 = vorrq_s8(*(int8x16_t *)&v240[8], v241);
                          if (*(void *)&vorr_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)) | *(void *)v240) {
                            goto LABEL_25;
                          }
                          sub_1B6391400((uint64_t)&v237);
                          sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          goto LABEL_44;
                        default:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242) {
                            goto LABEL_25;
                          }
LABEL_34:
                          uint64_t v34 = *(void *)&v229[0];
                          uint64_t v35 = *(void *)v240;
                          sub_1B6391400((uint64_t)&v237);
                          sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          if (v34 == v35) {
                            goto LABEL_44;
                          }
                          goto LABEL_26;
                      }
                      break;
                    }
                  }
                  else
                  {
                    uint64_t v43 = swift_retain();
                  }
                  uint64_t v44 = *(void *)(v43 + 240) - *(void *)(v43 + 232);
                  BOOL v45 = ecs_stack_allocator_allocate(v179[4], 8 * v44, 8);
                  *BOOL v45 = v22;
                  sub_1B639192C((uint64_t)&v223, (uint64_t)&v237);
                  *(void *)v240 = v45;
                  *(void *)&v240[8] = v44;
                  *(void *)&v240[16] = 1;
                  uint64_t v46 = (void *)v179[13];
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v179[13] = v46;
                  uint64_t v7 = v181;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    uint64_t v46 = sub_1B68C0C6C(0, v46[2] + 1, 1, v46);
                    *uint64_t v168 = v46;
                  }
                  unint64_t v49 = v46[2];
                  unint64_t v48 = v46[3];
                  if (v49 >= v48 >> 1)
                  {
                    uint64_t v46 = sub_1B68C0C6C(v48 > 1, v49 + 1, 1, v46);
                    *uint64_t v168 = v46;
                  }
                  _OWORD v46[2] = v49 + 1;
                  char v50 = &v46[9 * v49];
                  *((_OWORD *)v50 + 2) = v237;
                  long long v51 = v238;
                  long long v52 = v239;
                  long long v53 = *(_OWORD *)v240;
                  v50[12] = *(void *)&v240[16];
                  *((_OWORD *)v50 + 4) = v52;
                  *((_OWORD *)v50 + 5) = v53;
                  *((_OWORD *)v50 + 3) = v51;
LABEL_54:
                  uint64_t v19 = v185;
                  sub_1B6391400((uint64_t)&v223);
                  swift_release();
                }
                else
                {
                  uint64_t v19 = v185;
                }
              }
            }
          }
        }
        else if (v9 != v10)
        {
          do
          {
            uint64_t v54 = v20 + (v9 << 6);
            uint64_t v55 = *(void *)(v54 + 40);
            if ((!v55 || !*(void *)(v55 + 16)) && !*(void *)(*(void *)(v54 + 48) + 16))
            {
              uint64_t v56 = *(void *)(*(void *)(v19 + 40) + 16);
              uint64_t v57 = *(void *)(v56 + 128);
              if (*(void *)(v57 + 16))
              {
                unint64_t v58 = sub_1B62C1A30((uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
                if ((v59 & 1) != 0
                  && *(ValueMetadata **)(*(void *)(v56 + 24) + 16 * *(void *)(*(void *)(v57 + 56) + 8 * v58) + 32) == &type metadata for GraphEntityComponentPropertyReferences)
                {
                  *(void *)&long long v223 = &type metadata for GraphEntityComponentPropertyReferences;
                  *((void *)&v223 + 1) = &off_1F0F9DA30;
                  BYTE8(v225) = 1;
                  uint64_t v60 = *(void *)(*v168 + 16);
                  if (v60)
                  {
                    uint64_t v61 = *v168 + 32;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v62 = 0;
                    while (2)
                    {
                      sub_1B63B2978(v61, (uint64_t)v236);
                      sub_1B639192C((uint64_t)v236, (uint64_t)&v237);
                      sub_1B639192C((uint64_t)&v223, (uint64_t)v240);
                      switch(BYTE8(v239))
                      {
                        case 1:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 != 1) {
                            goto LABEL_70;
                          }
                          goto LABEL_76;
                        case 2:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 != 2) {
                            goto LABEL_69;
                          }
                          goto LABEL_81;
                        case 3:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 == 3)
                          {
LABEL_81:
                            sub_1B62C15C4(v229, (uint64_t)&v230);
                            sub_1B62C15C4((long long *)v240, (uint64_t)v222);
                            uint64_t v65 = v232;
                            uint64_t v66 = v233;
                            sub_1B62C14BC(&v230, v232);
                            LOBYTE(v65) = sub_1B6B3D86C(v222, v65, v66);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v222);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v230);
                            sub_1B6391400((uint64_t)&v237);
                            sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                            if (v65)
                            {
LABEL_89:
                              swift_bridgeObjectRelease();
                              char v71 = sub_1B6B1B930();
                              uint64_t v72 = *(void *)(v70 + 48);
                              if (v72)
                              {
                                uint64_t v73 = *(void *)(v70 + 64);
                                *(void *)(v72 + 8 * v73) = v9;
                                *(void *)(v70 + 64) = v73 + 1;
                              }
                              ((void (*)(long long *, void))v71)(&v237, 0);
                              goto LABEL_99;
                            }
                          }
                          else
                          {
LABEL_69:
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v229);
LABEL_70:
                            sub_1B62E2E40((uint64_t)&v237, (uint64_t (*)(void))sub_1B691F560);
                            sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          }
LABEL_71:
                          ++v62;
                          v61 += 72;
                          if (v60 != v62) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          uint64_t v19 = v185;
                          break;
                        case 4:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242 != 4) {
                            goto LABEL_70;
                          }
                          int v67 = LOBYTE(v229[0]);
                          int v68 = v240[0];
                          sub_1B6391400((uint64_t)&v237);
                          sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          if (v67 == v68) {
                            goto LABEL_89;
                          }
                          goto LABEL_71;
                        case 5:
                          if (v242 != 5) {
                            goto LABEL_70;
                          }
                          int8x16_t v69 = vorrq_s8(*(int8x16_t *)&v240[8], v241);
                          if (*(void *)&vorr_s8(*(int8x8_t *)v69.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL)) | *(void *)v240) {
                            goto LABEL_70;
                          }
                          sub_1B6391400((uint64_t)&v237);
                          sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          goto LABEL_89;
                        default:
                          sub_1B639192C((uint64_t)&v237, (uint64_t)v229);
                          if (v242) {
                            goto LABEL_70;
                          }
LABEL_76:
                          uint64_t v63 = *(void *)&v229[0];
                          uint64_t v64 = *(void *)v240;
                          sub_1B6391400((uint64_t)&v237);
                          sub_1B63B291C((uint64_t)v236, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                          if (v63 == v64) {
                            goto LABEL_89;
                          }
                          goto LABEL_71;
                      }
                      break;
                    }
                  }
                  else
                  {
                    swift_retain();
                  }
                  uint64_t v74 = *(void *)(v19 + 240) - *(void *)(v19 + 232);
                  int v75 = ecs_stack_allocator_allocate(v179[4], 8 * v74, 8);
                  *int v75 = v9;
                  sub_1B639192C((uint64_t)&v223, (uint64_t)&v237);
                  *(void *)v240 = v75;
                  *(void *)&v240[8] = v74;
                  *(void *)&v240[16] = 1;
                  int v76 = (void *)v179[13];
                  char v77 = swift_isUniquelyReferenced_nonNull_native();
                  v179[13] = v76;
                  if ((v77 & 1) == 0)
                  {
                    int v76 = sub_1B68C0C6C(0, v76[2] + 1, 1, v76);
                    *uint64_t v168 = v76;
                  }
                  unint64_t v79 = v76[2];
                  unint64_t v78 = v76[3];
                  if (v79 >= v78 >> 1)
                  {
                    int v76 = sub_1B68C0C6C(v78 > 1, v79 + 1, 1, v76);
                    *uint64_t v168 = v76;
                  }
                  v76[2] = v79 + 1;
                  uint64_t v80 = &v76[9 * v79];
                  *((_OWORD *)v80 + 2) = v237;
                  long long v81 = v238;
                  long long v82 = v239;
                  long long v83 = *(_OWORD *)v240;
                  v80[12] = *(void *)&v240[16];
                  *((_OWORD *)v80 + 4) = v82;
                  *((_OWORD *)v80 + 5) = v83;
                  *((_OWORD *)v80 + 3) = v81;
LABEL_99:
                  uint64_t v19 = v185;
                  sub_1B6391400((uint64_t)&v223);
                  swift_release();
                }
              }
            }
            ++v9;
          }
          while (v9 != v10);
        }
        sub_1B6345178(v179, (unsigned __int16 **)v198, (uint64_t)v251);
        sub_1B634507C((char *)v19);
        ecs_stack_allocator_pop_snapshot(v175);
        if (v177)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
        }
        swift_release();
        uint64_t v6 = v173 + 1;
      }
      while (v173 + 1 != v171);
      sub_1B632F170(v235);
      sub_1B632F170(v235);
      uint64_t v1 = v165;
    }
    else
    {
      sub_1B632F170(v235);
      uint64_t v7 = 0;
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v187);
    uint64_t v7 = 0;
  }
  uint64_t v206 = qword_1EB997A18;
  int v207 = 0;
  char v208 = 2;
  uint64_t v209 = 1;
  char v210 = 2;
  uint64_t v211 = 0;
  swift_retain();
  sub_1B63AC2E8(1, (uint64_t)v189);
  swift_release();
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_1B6E77050;
  *(void *)(v84 + 32) = &type metadata for CodeGenerationInitialized;
  *(void *)(v84 + 40) = &off_1F0F94368;
  sub_1B63B9C40(v84, 1, (uint64_t)v190);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v189);
  v202[0] = v190[0];
  v202[1] = v190[1];
  uint64_t v203 = v191;
  sub_1B62C9DA8(v1, (uint64_t)v202, 0x200000000, v236);
  sub_1B62D7910((uint64_t)v236, (uint64_t)&v237, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!(void)v237) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v190);
  }
  long long v192 = v237;
  long long v193 = v238;
  uint64_t v178 = *((void *)&v239 + 1);
  uint64_t v194 = v239;
  uint64_t v85 = *(void *)&v240[8];
  uint64_t v86 = *(void *)&v240[16];
  int8x16_t v87 = v241;
  sub_1B62CA064((uint64_t)v190);
  if (v87.i64[1] > 0 && v85)
  {
    int v88 = *(unsigned __int8 *)(v86 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v180 = *(void *)(v87.i64[0] + 32);
    v200[0] = v192;
    v200[1] = v193;
    uint64_t v201 = v194;
    uint64_t v169 = v87.i64[0] + 104;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v89 = 0;
    uint64_t v174 = v85;
    int v176 = v88;
    while (1)
    {
      unint64_t v90 = (unsigned int *)(v178 + 48 * v89);
      uint64_t v92 = *v90;
      uint64_t v91 = v90[1];
      uint64_t v93 = *((void *)v90 + 3);
      uint64_t v182 = v7;
      uint64_t v183 = (uint64_t *)*((void *)v90 + 2);
      uint64_t v94 = *((void *)v90 + 4);
      uint64_t v95 = *((void *)v90 + 5);
      if (v88)
      {
        uint64_t v96 = *(os_unfair_lock_s **)(v95 + 376);
        swift_retain();
        os_unfair_lock_lock(v96);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v95 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v180);
      sub_1B62D7910(v87.i64[0] + 48, (uint64_t)v250, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v97 = *(void *)(v87.i64[0] + 32);
      uint64_t v98 = *(void *)(*(void *)(*(void *)(*(void *)(v95 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      *(void *)(v87.i64[0] + 48) = ecs_stack_allocator_allocate(v97, 48 * v98, 8);
      *(void *)(v87.i64[0] + 56) = v98;
      *(void *)(v87.i64[0] + 72) = 0;
      *(void *)(v87.i64[0] + 80) = 0;
      *(void *)(v87.i64[0] + 64) = 0;
      swift_release();
      unsigned int v99 = v183;
      uint64_t v100 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v183, v93, v94, v87.i64[0]);
      if (!v183)
      {
        int v88 = v176;
        if (v92 == v91) {
          goto LABEL_115;
        }
        while (2)
        {
          BOOL v102 = (void *)(v100 + (v92 << 6));
          if (*(void *)(v102[1] + 16)) {
            goto LABEL_118;
          }
          if (*(void *)(v102[2] + 16)) {
            goto LABEL_118;
          }
          if (*(void *)(v102[3] + 16)) {
            goto LABEL_118;
          }
          if (*(void *)(v102[4] + 16)) {
            goto LABEL_118;
          }
          uint64_t v103 = v102[5];
          if (v103)
          {
            if (*(void *)(v103 + 16)) {
              goto LABEL_118;
            }
          }
          if (*(void *)(v102[6] + 16)) {
            goto LABEL_118;
          }
          uint64_t v104 = *(void *)(*(void *)(v95 + 40) + 16);
          uint64_t v105 = *(void *)(v104 + 128);
          if (!*(void *)(v105 + 16)) {
            goto LABEL_118;
          }
          unint64_t v106 = sub_1B62C1A30((uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
          if ((v107 & 1) == 0
            || *(ValueMetadata **)(*(void *)(v104 + 24) + 16 * *(void *)(*(void *)(v105 + 56) + 8 * v106) + 32) != &type metadata for GraphEntityComponentPropertyReferences)
          {
            goto LABEL_118;
          }
          v230 = &type metadata for GraphEntityComponentPropertyReferences;
          v231 = &off_1F0F9DA30;
          char v234 = 1;
          uint64_t v108 = *(void *)(*(void *)v169 + 16);
          if (v108)
          {
            uint64_t v109 = *(void *)v169 + 32;
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v110 = 0;
            uint64_t v184 = v108;
LABEL_134:
            sub_1B63B2978(v109, (uint64_t)v229);
            sub_1B639192C((uint64_t)v229, (uint64_t)&v223);
            sub_1B639192C((uint64_t)&v230, (uint64_t)v226);
            switch(BYTE8(v225))
            {
              case 1:
                sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
                if (v228 != 1) {
                  goto LABEL_132;
                }
                goto LABEL_138;
              case 2:
                sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
                if (v228 != 2) {
                  goto LABEL_131;
                }
                goto LABEL_142;
              case 3:
                sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
                if (v228 == 3)
                {
LABEL_142:
                  sub_1B62C15C4(v222, (uint64_t)v219);
                  sub_1B62C15C4((long long *)v226, (uint64_t)v218);
                  uint64_t v114 = v220;
                  uint64_t v115 = v221;
                  sub_1B62C14BC(v219, v220);
                  uint64_t v116 = v115;
                  uint64_t v108 = v184;
                  LOBYTE(v114) = sub_1B6B3D86C(v218, v114, v116);
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v218);
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v219);
                  sub_1B6391400((uint64_t)&v223);
                  sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                  if (v114)
                  {
LABEL_152:
                    swift_bridgeObjectRelease();
                    unint64_t v121 = sub_1B6B1B930();
                    uint64_t v122 = *(void *)(v120 + 48);
                    if (v122)
                    {
                      uint64_t v123 = *(void *)(v120 + 64);
                      *(void *)(v122 + 8 * v123) = v92;
                      *(void *)(v120 + 64) = v123 + 1;
                    }
                    ((void (*)(long long *, void))v121)(&v223, 0);
                    int v88 = v176;
LABEL_162:
                    sub_1B6391400((uint64_t)&v230);
                    swift_release();
LABEL_118:
                    if (++v92 == v91) {
                      goto LABEL_115;
                    }
                    continue;
                  }
                }
                else
                {
LABEL_131:
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v222);
LABEL_132:
                  sub_1B62E2E40((uint64_t)&v223, (uint64_t (*)(void))sub_1B691F560);
                  sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                }
LABEL_133:
                ++v110;
                v109 += 72;
                if (v108 != v110) {
                  goto LABEL_134;
                }
                swift_bridgeObjectRelease();
                int v88 = v176;
                break;
              case 4:
                sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
                if (v228 != 4) {
                  goto LABEL_132;
                }
                int v117 = LOBYTE(v222[0]);
                int v118 = v226[0];
                sub_1B6391400((uint64_t)&v223);
                sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                BOOL v113 = v117 == v118;
                goto LABEL_146;
              case 5:
                if (v228 != 5) {
                  goto LABEL_132;
                }
                int8x16_t v119 = vorrq_s8(*(int8x16_t *)&v226[8], v227);
                if (*(void *)&vorr_s8(*(int8x8_t *)v119.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v119, v119, 8uLL)) | *(void *)v226) {
                  goto LABEL_132;
                }
                sub_1B6391400((uint64_t)&v223);
                sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                goto LABEL_152;
              default:
                sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
                if (v228) {
                  goto LABEL_132;
                }
LABEL_138:
                uint64_t v111 = *(void *)&v222[0];
                uint64_t v112 = *(void *)v226;
                sub_1B6391400((uint64_t)&v223);
                sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
                BOOL v113 = v111 == v112;
LABEL_146:
                if (!v113) {
                  goto LABEL_133;
                }
                goto LABEL_152;
            }
          }
          else
          {
            swift_retain();
          }
          break;
        }
        uint64_t v124 = *(void *)(v95 + 240) - *(void *)(v95 + 232);
        uint64_t v125 = ecs_stack_allocator_allocate(*(void *)(v87.i64[0] + 32), 8 * v124, 8);
        void *v125 = v92;
        sub_1B639192C((uint64_t)&v230, (uint64_t)&v223);
        *(void *)long long v226 = v125;
        *(void *)&v226[8] = v124;
        *(void *)&v226[16] = 1;
        uint64_t v126 = *(void **)(v87.i64[0] + 104);
        char v127 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v87.i64[0] + 104) = v126;
        if ((v127 & 1) == 0)
        {
          uint64_t v126 = sub_1B68C0C6C(0, v126[2] + 1, 1, v126);
          *(void *)uint64_t v169 = v126;
        }
        unint64_t v129 = v126[2];
        unint64_t v128 = v126[3];
        if (v129 >= v128 >> 1)
        {
          uint64_t v126 = sub_1B68C0C6C(v128 > 1, v129 + 1, 1, v126);
          *(void *)uint64_t v169 = v126;
        }
        v126[2] = v129 + 1;
        uint64_t v130 = &v126[9 * v129];
        *((_OWORD *)v130 + 2) = v223;
        long long v131 = v224;
        long long v132 = v225;
        long long v133 = *(_OWORD *)v226;
        v130[12] = *(void *)&v226[16];
        *((_OWORD *)v130 + 4) = v132;
        *((_OWORD *)v130 + 5) = v133;
        *((_OWORD *)v130 + 3) = v131;
        goto LABEL_162;
      }
      int v88 = v176;
      if (!v94) {
        goto LABEL_115;
      }
      uint64_t v101 = 0;
LABEL_165:
      char v134 = (void *)(v100 + (v101 << 6));
      if (*(void *)(v134[1] + 16)) {
        goto LABEL_164;
      }
      if (*(void *)(v134[2] + 16)) {
        goto LABEL_164;
      }
      if (*(void *)(v134[3] + 16)) {
        goto LABEL_164;
      }
      if (*(void *)(v134[4] + 16)) {
        goto LABEL_164;
      }
      uint64_t v135 = v99[v101];
      uint64_t v136 = v134[5];
      if (v136)
      {
        if (*(void *)(v136 + 16)) {
          goto LABEL_164;
        }
      }
      if (*(void *)(v134[6] + 16)) {
        goto LABEL_164;
      }
      uint64_t v137 = *(void *)(*(void *)(v95 + 40) + 16);
      uint64_t v138 = *(void *)(v137 + 128);
      if (!*(void *)(v138 + 16)
        || (unint64_t v139 = sub_1B62C1A30((uint64_t)&type metadata for GraphEntityComponentPropertyReferences), (v140 & 1) == 0)
        || *(ValueMetadata **)(*(void *)(v137 + 24) + 16 * *(void *)(*(void *)(v138 + 56) + 8 * v139) + 32) != &type metadata for GraphEntityComponentPropertyReferences)
      {
        unsigned int v99 = v183;
        goto LABEL_164;
      }
      v230 = &type metadata for GraphEntityComponentPropertyReferences;
      v231 = &off_1F0F9DA30;
      char v234 = 1;
      uint64_t v170 = *(void *)(*(void *)v169 + 16);
      if (!v170)
      {
        swift_retain();
        goto LABEL_203;
      }
      uint64_t v166 = v135;
      uint64_t v141 = *(void *)v169 + 32;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v142 = 0;
      while (2)
      {
        sub_1B63B2978(v141, (uint64_t)v229);
        sub_1B639192C((uint64_t)v229, (uint64_t)&v223);
        sub_1B639192C((uint64_t)&v230, (uint64_t)v226);
        switch(BYTE8(v225))
        {
          case 1:
            sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
            if (v228 != 1) {
              goto LABEL_178;
            }
            goto LABEL_184;
          case 2:
            sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
            if (v228 != 2) {
              goto LABEL_177;
            }
            goto LABEL_188;
          case 3:
            sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
            if (v228 != 3)
            {
LABEL_177:
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v222);
LABEL_178:
              sub_1B62E2E40((uint64_t)&v223, (uint64_t (*)(void))sub_1B691F560);
              sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
              goto LABEL_179;
            }
LABEL_188:
            sub_1B62C15C4(v222, (uint64_t)v219);
            sub_1B62C15C4((long long *)v226, (uint64_t)v218);
            uint64_t v146 = v220;
            uint64_t v167 = v221;
            sub_1B62C14BC(v219, v220);
            LOBYTE(v146) = sub_1B6B3D86C(v218, v146, v167);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v218);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v219);
            sub_1B6391400((uint64_t)&v223);
            sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
            if ((v146 & 1) == 0)
            {
LABEL_179:
              ++v142;
              v141 += 72;
              if (v170 == v142)
              {
                swift_bridgeObjectRelease();
                uint64_t v135 = v166;
LABEL_203:
                uint64_t v154 = *(void *)(v95 + 240) - *(void *)(v95 + 232);
                unint64_t v155 = ecs_stack_allocator_allocate(*(void *)(v87.i64[0] + 32), 8 * v154, 8);
                *unint64_t v155 = v135;
                sub_1B639192C((uint64_t)&v230, (uint64_t)&v223);
                *(void *)long long v226 = v155;
                *(void *)&v226[8] = v154;
                *(void *)&v226[16] = 1;
                uint64_t v156 = *(void **)(v87.i64[0] + 104);
                char v157 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)(v87.i64[0] + 104) = v156;
                if ((v157 & 1) == 0)
                {
                  uint64_t v156 = sub_1B68C0C6C(0, v156[2] + 1, 1, v156);
                  *(void *)uint64_t v169 = v156;
                }
                unint64_t v159 = v156[2];
                unint64_t v158 = v156[3];
                if (v159 >= v158 >> 1)
                {
                  uint64_t v156 = sub_1B68C0C6C(v158 > 1, v159 + 1, 1, v156);
                  *(void *)uint64_t v169 = v156;
                }
                v156[2] = v159 + 1;
                unint64_t v160 = &v156[9 * v159];
                *((_OWORD *)v160 + 2) = v223;
                long long v161 = v224;
                long long v162 = v225;
                long long v163 = *(_OWORD *)v226;
                v160[12] = *(void *)&v226[16];
                *((_OWORD *)v160 + 4) = v162;
                *((_OWORD *)v160 + 5) = v163;
                *((_OWORD *)v160 + 3) = v161;
                goto LABEL_208;
              }
              continue;
            }
LABEL_198:
            swift_bridgeObjectRelease();
            uint64_t v151 = sub_1B6B1B930();
            uint64_t v152 = *(void *)(v150 + 48);
            if (v152)
            {
              uint64_t v153 = *(void *)(v150 + 64);
              *(void *)(v152 + 8 * v153) = v166;
              *(void *)(v150 + 64) = v153 + 1;
            }
            ((void (*)(long long *, void))v151)(&v223, 0);
LABEL_208:
            unsigned int v99 = v183;
            sub_1B6391400((uint64_t)&v230);
            swift_release();
LABEL_164:
            if (++v101 != v94) {
              goto LABEL_165;
            }
LABEL_115:
            uint64_t v7 = v182;
            sub_1B6345178(v87.i64[0], (unsigned __int16 **)v200, (uint64_t)v250);
            sub_1B634507C((char *)v95);
            ecs_stack_allocator_pop_snapshot(v180);
            if (v88)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v95 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v95 + 376));
            }
            swift_release();
            if (++v89 == v174)
            {
              sub_1B632F170(v236);
              return sub_1B632F170(v236);
            }
            break;
          case 4:
            sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
            if (v228 != 4) {
              goto LABEL_178;
            }
            int v147 = LOBYTE(v222[0]);
            int v148 = v226[0];
            sub_1B6391400((uint64_t)&v223);
            sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
            BOOL v145 = v147 == v148;
            goto LABEL_192;
          case 5:
            if (v228 != 5) {
              goto LABEL_178;
            }
            int8x16_t v149 = vorrq_s8(*(int8x16_t *)&v226[8], v227);
            if (*(void *)&vorr_s8(*(int8x8_t *)v149.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v149, v149, 8uLL)) | *(void *)v226) {
              goto LABEL_178;
            }
            sub_1B6391400((uint64_t)&v223);
            sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
            goto LABEL_198;
          default:
            sub_1B639192C((uint64_t)&v223, (uint64_t)v222);
            if (v228) {
              goto LABEL_178;
            }
LABEL_184:
            uint64_t v143 = *(void *)&v222[0];
            uint64_t v144 = *(void *)v226;
            sub_1B6391400((uint64_t)&v223);
            sub_1B63B291C((uint64_t)v229, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
            BOOL v145 = v143 == v144;
LABEL_192:
            if (!v145) {
              goto LABEL_179;
            }
            goto LABEL_198;
        }
        break;
      }
    }
  }
  return sub_1B632F170(v236);
}

uint64_t sub_1B6CA5898(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, a2);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_1B6CA5A04((void *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, v3);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v8;
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v3 = sub_1B6CA5A04((unint64_t *)v9, v6, v4, v3);
    MEMORY[0x1BA9B84C0](v9, -1, -1);
  }
  return v3;
}

uint64_t sub_1B6CA5A04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v25 = a3 + 104;
LABEL_5:
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v5 << 6);
LABEL_19:
    uint64_t v14 = *(void **)a4;
    uint64_t v15 = *(void *)(*(void *)a4 + 16);
    if (v15)
    {
      char v16 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      BOOL v19 = v14[4] == *v16 && v14[5] == v18;
      if (v19 || (sub_1B6E334B8() & 1) != 0) {
        goto LABEL_4;
      }
      uint64_t v20 = v15 - 1;
      if (v20)
      {
        uint64_t v21 = v14 + 7;
        while (1)
        {
          BOOL v22 = *(v21 - 1) == v17 && *v21 == v18;
          if (v22 || (sub_1B6E334B8() & 1) != 0) {
            break;
          }
          v21 += 2;
          if (!--v20) {
            goto LABEL_5;
          }
        }
LABEL_4:
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        ++v27;
      }
    }
  }
  uint64_t v12 = v5 + 1;
  if (v5 + 1 >= v28) {
    return sub_1B685E498(a1, a2, v27, a3);
  }
  unint64_t v13 = *(void *)(v6 + 8 * v12);
  if (v13) {
    goto LABEL_18;
  }
  uint64_t v12 = v5 + 2;
  if (v5 + 2 >= v28) {
    return sub_1B685E498(a1, a2, v27, a3);
  }
  unint64_t v13 = *(void *)(v6 + 8 * v12);
  if (v13) {
    goto LABEL_18;
  }
  uint64_t v12 = v5 + 3;
  if (v5 + 3 >= v28) {
    return sub_1B685E498(a1, a2, v27, a3);
  }
  unint64_t v13 = *(void *)(v6 + 8 * v12);
  if (v13) {
    goto LABEL_18;
  }
  uint64_t v12 = v5 + 4;
  if (v5 + 4 >= v28) {
    return sub_1B685E498(a1, a2, v27, a3);
  }
  unint64_t v13 = *(void *)(v6 + 8 * v12);
  if (v13)
  {
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    uint64_t v5 = v12;
    goto LABEL_19;
  }
  while (v28 - 5 != v5)
  {
    unint64_t v13 = *(void *)(v25 + 8 * v5++);
    if (v13)
    {
      uint64_t v12 = v5 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B685E498(a1, a2, v27, a3);
}

uint64_t sub_1B6CA5C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  uint64_t v40 = a2;
  unint64_t v6 = sub_1B62DE2C8(a2);
  swift_release();
  uint64_t v7 = sub_1B6BFADC0(v6);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = a3;
  uint64_t v10 = 0;
  uint64_t v33 = v9;
  uint64_t v34 = (void *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v35 = v7 + 32;
  while (1)
  {
    long long v36 = *(_OWORD *)(v35 + 16 * v10);
    uint64_t v18 = swift_retain();
    if (*(unsigned char *)(a1 + 184)) {
      break;
    }
    uint64_t v19 = *(int *)(*(void *)(a1 + 168) + 4 * v40);
    int v20 = *(_DWORD *)(*(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v19 + 8);
    swift_release();
    uint64_t v11 = 0;
    BOOL v21 = v19 == -1 && v20 == 0;
    if (!v21 && (v19 & 0x80000000) == 0 && v34[1] > v19)
    {
      uint64_t v22 = *v34 + 12 * (int)v19;
      BOOL v23 = v20 == -1 || *(_DWORD *)(v22 + 8) == v20;
      if (v23
        && (uint64_t v24 = *(void *)(*(void *)(v33 + 136) + 8 * *(int *)(*v34 + 12 * (int)v19) + 32),
            uint64_t v25 = *(void *)(v24 + 48),
            (uint64_t v26 = *(void *)(v25 + 16)) != 0))
      {
        uint64_t v27 = *(__int16 *)(v22 + 4);
        uint64_t v28 = v25 + 56;
        while (*(void *)(v28 - 24) != (void)v36)
        {
          v28 += 40;
          if (!--v26) {
            goto LABEL_3;
          }
        }
        uint64_t v31 = v28 - 8;
        uint64_t v30 = *(void *)(v28 - 8);
        uint64_t v29 = *(void *)(v31 + 8);
        if (v30 <= 1) {
          uint64_t v30 = 1;
        }
        uint64_t v11 = *(void *)(v24 + 128) + v29 + v30 * v27;
      }
      else
      {
LABEL_3:
        uint64_t v11 = 0;
      }
    }
    ++v10;
    long long v39 = v36;
    uint64_t v12 = sub_1B62C12C4(v38);
    uint64_t v13 = *(void *)(*((void *)&v36 + 1) + 8);
    sub_1B62C5E18(v11, v36, (uint64_t)v12);
    long long v14 = v39;
    sub_1B62C550C((uint64_t)v38, v39);
    (*(void (**)(void, void))(v13 + 112))(v14, *(void *)(*((void *)&v14 + 1) + 8));
    long long v15 = v39;
    char v16 = sub_1B62C14BC(v38, v39);
    v37[3] = v15;
    v37[4] = *(void *)(*((void *)&v15 + 1) + 8);
    uint64_t v17 = sub_1B62C12C4(v37);
    (*(void (**)(uint64_t *, void *, void))(*(void *)(v15 - 8) + 16))(v17, v16, v15);
    sub_1B6B3F674((uint64_t)v37, v11, v36);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v37);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
    if (v10 == v8) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B6CA5F14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1B6CA5F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6CA5FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  unint64_t v8 = (*v2)[9];
  if (v8 > 0xF)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    uint64_t v11 = sub_1B62F79D4((char *)(v7 + v6[8]), v8 >> 4);
    uint64_t v9 = v11;
    if (v10)
    {
      uint64_t v32 = v11;
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_1B62F8084(v12);
      uint64_t v9 = v32;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = a1;
  }
  uint64_t v13 = v6[10];
  int64_t v14 = v6[11];
  uint64_t v15 = sub_1B62F79C8(0, *(void *)(a1 + 16));
  uint64_t v16 = v15;
  if (v14)
  {
    uint64_t v17 = (char *)(v7 + v13);
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v19 = sub_1B62F7C94(v17, v14);
    uint64_t v20 = v19;
    if (v18)
    {
      uint64_t v33 = v19;
      sub_1B62F81D8(v16);
      uint64_t v20 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v20 = v15;
  }
  BOOL v21 = (char *)(v7 + v6[12]);
  unint64_t v22 = (unint64_t)v6[13] >> 4;
  BOOL v23 = (char *)(v7 + v6[14]);
  uint64_t v24 = v6[15] / 0x18u;
  int v25 = *((_DWORD *)v3 + 2);
  char v26 = *((unsigned char *)v3 + 12);
  uint64_t v27 = v3[4];
  uint64_t v28 = v3[2];
  char v29 = *((unsigned char *)v3 + 24);
  uint64_t v30 = sub_1B62C8668((char *)(v9 + 32), *(void *)(v9 + 16), (char *)(v20 + 32), *(void *)(v20 + 16), v21, v22, v23, v24);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v30;
  *(_DWORD *)(a2 + 8) = v25;
  *(unsigned char *)(a2 + 12) = v26;
  *(void *)(a2 + 16) = v28;
  *(unsigned char *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = v27;
  return result;
}

void sub_1B6CA6168()
{
  qword_1EB9979A0 = (uint64_t)&unk_1F0F7BCC0;
}

uint64_t sub_1B6CA617C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v57 = qword_1EB997A18;
  int v58 = v7;
  char v59 = v6 >> 31;
  uint64_t v60 = 1;
  char v61 = 2;
  uint64_t v62 = 0;
  swift_retain();
  sub_1B6A6FB38(1, (uint64_t)v27);
  swift_release();
  uint64_t v51 = qword_1EB997A18;
  int v52 = v7;
  char v53 = v6 >> 31;
  uint64_t v54 = 1;
  char v55 = 2;
  uint64_t v56 = 0;
  swift_retain();
  sub_1B6A6FD40(1, (uint64_t)v29);
  swift_release();
  uint64_t v45 = qword_1EB997A18;
  int v46 = v7;
  char v47 = v6 >> 31;
  uint64_t v48 = 1;
  char v49 = 2;
  uint64_t v50 = 0;
  swift_retain();
  sub_1B6A6FF48(1, (uint64_t)v31);
  swift_release();
  v43[0] = v27[0];
  v43[1] = v27[1];
  uint64_t v44 = v28;
  sub_1B62C9DA8(a1, (uint64_t)v43, 0x200000000, v33);
  sub_1B62D8068((uint64_t)v33, (uint64_t)v38, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v38[0])
  {
    uint64_t v8 = v38[10];
    sub_1B632F220(v33, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    uint64_t v8 = 0;
  }
  v41[0] = v29[0];
  v41[1] = v29[1];
  uint64_t v42 = v30;
  sub_1B62C9DA8(a1, (uint64_t)v41, 0x200000000, v34);
  sub_1B62D8068((uint64_t)v34, (uint64_t)v37, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v37[0])
  {
    uint64_t v9 = v37[10];
    sub_1B632F220(v34, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 + v8;
  v39[0] = v31[0];
  v39[1] = v31[1];
  uint64_t v40 = v32;
  sub_1B62C9DA8(a1, (uint64_t)v39, 0x200000000, v35);
  sub_1B62D8068((uint64_t)v35, (uint64_t)v36, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v36[0])
  {
    uint64_t v11 = v36[10];
    sub_1B632F220(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    if (!(v10 + v11))
    {
LABEL_14:
      sub_1B62CA064((uint64_t)v31);
      sub_1B62CA064((uint64_t)v29);
      return sub_1B62CA064((uint64_t)v27);
    }
  }
  else if (!v10)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_1B6C2D3B0(0);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v16 = (uint64_t *)(v13 + 40);
    while (1)
    {
      uint64_t v17 = *((unsigned int *)v16 - 1);
      uint64_t v18 = *((int *)v16 - 2);
      if (v18 != -1 || v17 != 0)
      {
        int v20 = 0;
        char v21 = 1;
        if ((v18 & 0x80000000) != 0 || v15[1] <= v18) {
          goto LABEL_32;
        }
        if (v17 == -1 || *(_DWORD *)(*v15 + 12 * (int)v18 + 8) == v17) {
          break;
        }
      }
      int v20 = 0;
      char v21 = 1;
      uint64_t v24 = *v16;
      if (v6)
      {
LABEL_39:
        if ((v21 & 1) == 0) {
          goto LABEL_19;
        }
        goto LABEL_18;
      }
LABEL_33:
      if (v20 == v4) {
        char v25 = v21;
      }
      else {
        char v25 = 1;
      }
      if (v25) {
        goto LABEL_19;
      }
LABEL_18:
      sub_1B664FDD4((uint64_t)&type metadata for ParticleCollide, (uint64_t)&off_1F0F69500, 3, *((unsigned int *)v16 - 2) | (unint64_t)(v17 << 32), v24);
      swift_release();
LABEL_19:
      v16 += 2;
      if (!--v14) {
        goto LABEL_41;
      }
    }
    uint64_t v23 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v15 + 12 * (int)v18) + 32);
    int v20 = *(_DWORD *)(v23 + 28);
    char v21 = *(unsigned char *)(v23 + 32);
LABEL_32:
    uint64_t v24 = *v16;
    if (v6) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
LABEL_41:
  sub_1B62CA064((uint64_t)v31);
  sub_1B62CA064((uint64_t)v29);
  sub_1B62CA064((uint64_t)v27);
  return swift_bridgeObjectRelease();
}

void *sub_1B6CA657C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v170 = qword_1EB997A18;
  unint64_t v8 = v6 >> 31;
  int v171 = v7;
  char v172 = v6 >> 31;
  uint64_t v173 = 1;
  char v174 = 2;
  uint64_t v175 = 0;
  swift_retain();
  sub_1B6A6F520(1, (uint64_t)v92);
  swift_release();
  v142[0] = v92[0];
  v142[1] = v92[1];
  uint64_t v143 = v93;
  sub_1B62C9DA8(a1, (uint64_t)v142, 0x200000000, v94);
  sub_1B62D8068((uint64_t)v94, (uint64_t)v129, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v129[0])
  {
    uint64_t v9 = v94;
LABEL_8:
    sub_1B632F220(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    return (void *)sub_1B62CA064((uint64_t)v92);
  }
  uint64_t v164 = qword_1EB997A18;
  int v165 = v7;
  char v166 = v6 >> 31;
  uint64_t v167 = 1;
  char v168 = 2;
  uint64_t v169 = 0;
  swift_retain();
  sub_1B6A70150(3, (uint64_t)v95);
  swift_release();
  v140[0] = v95[0];
  v140[1] = v95[1];
  uint64_t v141 = v96;
  sub_1B62C9DA8(a1, (uint64_t)v140, 0x200000000, v97);
  sub_1B62D8068((uint64_t)v97, (uint64_t)v128, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v89 = v128[0];
  uint64_t v11 = v128[10];
  sub_1B62CA064((uint64_t)v95);
  uint64_t v158 = qword_1EB997A18;
  int v81 = v7;
  int v159 = v7;
  unint64_t v80 = v6 >> 31;
  char v160 = v6 >> 31;
  uint64_t v161 = 1;
  char v162 = 2;
  uint64_t v163 = 0;
  swift_retain();
  sub_1B6A70358(3, (uint64_t)v98);
  swift_release();
  v138[0] = v98[0];
  v138[1] = v98[1];
  uint64_t v139 = v99;
  uint64_t v79 = a1;
  sub_1B62C9DA8(a1, (uint64_t)v138, 0x200000000, v100);
  sub_1B62D8068((uint64_t)v100, (uint64_t)v127, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v12 = v127[0];
  if (v127[0])
  {
    uint64_t v13 = v127[10];
    sub_1B62CA064((uint64_t)v98);
    int v15 = v81;
    char v16 = v8;
    if (v13 > 0)
    {
LABEL_15:
      uint64_t v17 = a1;
      uint64_t v18 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                      + 8 * *(void *)thread_worker_index(&thread_worker_index, v14)
                      + 8);
      LOBYTE(v117[0]) = 1;
      sub_1B6D7C8A8(0x100000000uLL, v18);
      uint64_t v19 = (void *)&unk_1EB997000;
      goto LABEL_49;
    }
    if (!v89) {
      goto LABEL_16;
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v98);
    int v15 = v7;
    char v16 = v8;
    if (!v89) {
      goto LABEL_16;
    }
  }
  if (v11 >= 1) {
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v152 = qword_1EB997A18;
  int v153 = v15;
  char v154 = v16;
  uint64_t v155 = 1;
  char v156 = 2;
  uint64_t v157 = 0;
  swift_retain();
  sub_1B63A8534(3, (uint64_t)v101);
  swift_release();
  v136[0] = v101[0];
  v136[1] = v101[1];
  uint64_t v137 = v102;
  uint64_t v17 = a1;
  sub_1B62C9DA8(a1, (uint64_t)v136, 0x200000000, v103);
  sub_1B62D8068((uint64_t)v103, (uint64_t)v117, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v117[0])
  {
    sub_1B62CA064((uint64_t)v101);
    goto LABEL_48;
  }
  long long v124 = v117[0];
  long long v125 = v117[1];
  uint64_t v87 = v119;
  uint64_t v126 = v118;
  uint64_t v20 = v120;
  uint64_t v21 = v121;
  unint64_t v22 = v122;
  uint64_t v23 = v123;
  sub_1B62CA064((uint64_t)v101);
  if (v23 <= 0 || !v20)
  {
    sub_1B632F220(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    goto LABEL_47;
  }
  uint64_t v85 = v20;
  uint64_t v77 = v12;
  uint64_t v24 = v22[4];
  int v25 = *(unsigned __int8 *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v130[0] = v124;
  v130[1] = v125;
  uint64_t v131 = v126;
  sub_1B632F220(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v26 = 0;
  int v82 = v25;
  uint64_t v84 = v24;
  do
  {
    uint64_t v27 = (unsigned int *)(v87 + 48 * v26);
    uint64_t v28 = *v27;
    uint64_t v90 = v27[1];
    uint64_t v30 = (uint64_t *)*((void *)v27 + 2);
    uint64_t v29 = *((void *)v27 + 3);
    uint64_t v31 = *((void *)v27 + 4);
    uint64_t v32 = *((void *)v27 + 5);
    if (v25)
    {
      uint64_t v33 = *(os_unfair_lock_s **)(v32 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v33);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v32 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v24);
    sub_1B62D8068((uint64_t)(v22 + 6), (uint64_t)v151, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v34 = v22[4];
    uint64_t v35 = *(void *)(*(void *)(*(void *)(*(void *)(v32 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v22[6] = ecs_stack_allocator_allocate(v34, 48 * v35, 8);
    v22[7] = v35;
    v22[9] = 0;
    v22[10] = 0;
    v22[8] = 0;
    swift_release();
    uint64_t v36 = sub_1B62C9024((uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, v30, v29, v31, (uint64_t)v22);
    if (v30)
    {
      int v25 = v82;
      if (!v31) {
        goto LABEL_42;
      }
      if (v31 == 1)
      {
        unint64_t v37 = 0;
LABEL_34:
        unint64_t v42 = v31 - v37;
        uint64_t v43 = (unsigned char *)(v36 + 144 * v37 + 44);
        do
        {
          *uint64_t v43 = 0;
          v43 += 144;
          --v42;
        }
        while (v42);
        goto LABEL_42;
      }
      unint64_t v37 = v31 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v40 = (unsigned char *)(v36 + 188);
      unint64_t v41 = v31 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        *(v40 - 144) = 0;
        *uint64_t v40 = 0;
        v40 += 288;
        v41 -= 2;
      }
      while (v41);
      if (v31 != v37) {
        goto LABEL_34;
      }
    }
    else
    {
      int v25 = v82;
      if (v28 == v90) {
        goto LABEL_42;
      }
      uint64_t v38 = v90 - v28;
      if ((unint64_t)(v90 - v28) < 2)
      {
        uint64_t v39 = v28;
LABEL_40:
        uint64_t v46 = v90 - v39;
        char v47 = (unsigned char *)(v36 + 144 * v39 + 44);
        do
        {
          *char v47 = 0;
          v47 += 144;
          --v46;
        }
        while (v46);
        goto LABEL_42;
      }
      uint64_t v39 = (v38 & 0xFFFFFFFFFFFFFFFELL) + v28;
      uint64_t v44 = (unsigned char *)(v36 + 144 * v28 + 188);
      unint64_t v45 = v38 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        *(v44 - 144) = 0;
        *uint64_t v44 = 0;
        v44 += 288;
        v45 -= 2;
      }
      while (v45);
      if (v38 != (v38 & 0xFFFFFFFFFFFFFFFELL)) {
        goto LABEL_40;
      }
    }
LABEL_42:
    sub_1B6345178(v22, (unsigned __int16 **)v130, (uint64_t)v151);
    sub_1B634507C((char *)v32);
    uint64_t v24 = v84;
    ecs_stack_allocator_pop_snapshot(v84);
    if (v25)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 376));
    }
    swift_release();
    ++v26;
  }
  while (v26 != v85);
  sub_1B632F220(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B632F220(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B632F220(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v12 = v77;
LABEL_47:
  uint64_t v17 = v79;
LABEL_48:
  uint64_t v19 = &unk_1EB997000;
  int v15 = v81;
  char v16 = v80;
LABEL_49:
  uint64_t v145 = v19[323];
  int v146 = v15;
  char v147 = v16;
  uint64_t v148 = 1;
  char v149 = 2;
  uint64_t v150 = 0;
  swift_retain();
  sub_1B63A8534(3, (uint64_t)v104);
  swift_release();
  v134[0] = v104[0];
  v134[1] = v104[1];
  uint64_t v135 = v105;
  sub_1B62C9DA8(v17, (uint64_t)v134, 0x200000000, v106);
  sub_1B62D8068((uint64_t)v106, (uint64_t)v107, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v107[0])
  {
    sub_1B62CA064((uint64_t)v104);
    sub_1B632F27C(v12);
    uint64_t v9 = v97;
    goto LABEL_8;
  }
  long long v114 = v107[0];
  long long v115 = v107[1];
  uint64_t v86 = v109;
  uint64_t v116 = v108;
  uint64_t v48 = v110;
  uint64_t v49 = v111;
  uint64_t v50 = v112;
  uint64_t v51 = v113;
  sub_1B62CA064((uint64_t)v104);
  if (v51 <= 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v76 = v12;
  }
  else
  {
    uint64_t v78 = v12;
    if (v48)
    {
      uint64_t v91 = v50[4];
      char v52 = *(unsigned char *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v132[0] = v114;
      v132[1] = v115;
      uint64_t v133 = v116;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v53 = 0;
      char v83 = v52;
      while (1)
      {
        uint64_t v54 = (unsigned int *)(v86 + 48 * v53);
        uint64_t v55 = *v54;
        uint64_t v88 = v54[1];
        uint64_t v57 = (uint64_t *)*((void *)v54 + 2);
        uint64_t v56 = *((void *)v54 + 3);
        uint64_t v58 = *((void *)v54 + 4);
        uint64_t v59 = *((void *)v54 + 5);
        if (v52)
        {
          uint64_t v60 = *(os_unfair_lock_s **)(v59 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v60);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v59 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v91);
        sub_1B62D8068((uint64_t)(v50 + 6), (uint64_t)v144, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v61 = v50[4];
        uint64_t v62 = *(void *)(*(void *)(*(void *)(*(void *)(v59 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v50[6] = ecs_stack_allocator_allocate(v61, 48 * v62, 8);
        v50[7] = v62;
        v50[9] = 0;
        v50[10] = 0;
        v50[8] = 0;
        swift_release();
        uint64_t v63 = sub_1B62C9024((uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, v57, v56, v58, (uint64_t)v50);
        if (v57)
        {
          uint64_t v64 = v48;
          char v52 = v83;
          if (!v58) {
            goto LABEL_75;
          }
          if (v58 == 1)
          {
            unint64_t v65 = 0;
LABEL_67:
            unint64_t v70 = v58 - v65;
            char v71 = (unsigned char *)(v63 + 144 * v65 + 44);
            do
            {
              *char v71 = 0;
              v71 += 144;
              --v70;
            }
            while (v70);
            goto LABEL_75;
          }
          unint64_t v65 = v58 & 0xFFFFFFFFFFFFFFFELL;
          int v68 = (unsigned char *)(v63 + 188);
          unint64_t v69 = v58 & 0xFFFFFFFFFFFFFFFELL;
          do
          {
            *(v68 - 144) = 0;
            *int v68 = 0;
            v68 += 288;
            v69 -= 2;
          }
          while (v69);
          if (v58 != v65) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v64 = v48;
          char v52 = v83;
          if (v55 == v88) {
            goto LABEL_75;
          }
          uint64_t v66 = v88 - v55;
          if ((unint64_t)(v88 - v55) < 2)
          {
            uint64_t v67 = v55;
LABEL_73:
            uint64_t v74 = v88 - v67;
            int v75 = (unsigned char *)(v63 + 144 * v67 + 44);
            do
            {
              *int v75 = 0;
              v75 += 144;
              --v74;
            }
            while (v74);
            goto LABEL_75;
          }
          uint64_t v67 = (v66 & 0xFFFFFFFFFFFFFFFELL) + v55;
          uint64_t v72 = (unsigned char *)(v63 + 144 * v55 + 188);
          unint64_t v73 = v66 & 0xFFFFFFFFFFFFFFFELL;
          do
          {
            *(v72 - 144) = 0;
            *uint64_t v72 = 0;
            v72 += 288;
            v73 -= 2;
          }
          while (v73);
          if (v66 != (v66 & 0xFFFFFFFFFFFFFFFELL)) {
            goto LABEL_73;
          }
        }
LABEL_75:
        sub_1B6345178(v50, (unsigned __int16 **)v132, (uint64_t)v144);
        sub_1B634507C((char *)v59);
        ecs_stack_allocator_pop_snapshot(v91);
        if (v52)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v59 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v59 + 376));
        }
        swift_release();
        if (++v53 == v64) {
          goto LABEL_80;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_80:
    uint64_t v76 = v78;
  }
  sub_1B632F27C(v76);
  sub_1B632F220(v97, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B62CA064((uint64_t)v92);
  sub_1B632F220(v106, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v106, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t sub_1B6CA71D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1B6C2D3B0(0);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = 0;
    uint64_t v94 = a4;
    uint64_t v95 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v97 = a1;
    uint64_t v98 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v10 = v7 + 32;
    uint64_t v92 = *(void *)(v7 + 16);
    uint64_t v93 = a2;
    uint64_t v91 = v7 + 32;
    while (1)
    {
      uint64_t v11 = (int *)(v10 + 16 * v9);
      uint64_t v12 = v11[1];
      uint64_t v13 = *v11;
      if (v13 != -1 || v12 != 0)
      {
        int v15 = 0;
        char v16 = 1;
        if ((v13 & 0x80000000) != 0 || v95[1] <= v13) {
          goto LABEL_18;
        }
        if (v12 == -1 || *(_DWORD *)(*v95 + 12 * (int)v13 + 8) == v12) {
          break;
        }
      }
      int v15 = 0;
      char v16 = 1;
      uint64_t v19 = *((void *)v11 + 1);
      if ((a4 & 0x100000000) == 0)
      {
LABEL_19:
        if (v15 == a4) {
          char v20 = v16;
        }
        else {
          char v20 = 1;
        }
        if (v20) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
LABEL_25:
      if ((v16 & 1) == 0) {
        goto LABEL_5;
      }
LABEL_26:
      uint64_t v96 = v9;
      uint64_t v21 = 0;
      unint64_t v103 = v13 | (unint64_t)(v12 << 32);
      unint64_t v22 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v104 = v22;
        char v23 = *((unsigned char *)&unk_1F0F996F8 + v21 + 32);
        uint64_t v24 = sub_1B6C2C804(v23, v103, v19);
        uint64_t v25 = *(void *)(v24 + 16);
        uint64_t v100 = v21;
        char v99 = v23;
        uint64_t v102 = v24;
        if (v25)
        {
          uint64_t v26 = (void *)(v24 + 40);
          uint64_t v27 = *(void *)(v24 + 16);
          uint64_t v101 = MEMORY[0x1E4FBC860];
          do
          {
            int v28 = *((_DWORD *)v26 - 2);
            int v29 = *((_DWORD *)v26 - 1);
            uint64_t v30 = *v26;
            swift_retain();
            BOOL v31 = v28 == -1 && v29 == 0;
            if (!v31
              && (v28 & 0x80000000) == 0
              && *(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v28
              && ((uint64_t v32 = *(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v29 == -1)
               || *(_DWORD *)(v32 + 12 * v28 + 8) == v29)
              && (uint64_t v33 = *(void *)(*(void *)(*(void *)(v30 + 80) + 8 * *(__int16 *)(v32 + 12 * v28 + 6) + 32)
                                  + 16),
                  uint64_t v34 = *(void *)(v33 + 128),
                  *(void *)(v34 + 16))
              && (unint64_t v35 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig), (v36 & 1) != 0))
            {
              unint64_t v37 = *(ValueMetadata **)(*(void *)(v33 + 24) + 16 * *(void *)(*(void *)(v34 + 56) + 8 * v35) + 32);
              swift_release();
              if (v37 == &type metadata for GraphScriptingConfig)
              {
                uint64_t v38 = v101;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v109[0] = v101;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1B6C3D398(0, *(void *)(v101 + 16) + 1, 1);
                  uint64_t v38 = v109[0];
                }
                unint64_t v41 = *(void *)(v38 + 16);
                unint64_t v40 = *(void *)(v38 + 24);
                if (v41 >= v40 >> 1)
                {
                  sub_1B6C3D398(v40 > 1, v41 + 1, 1);
                  uint64_t v38 = v109[0];
                }
                *(void *)(v38 + 16) = v41 + 1;
                uint64_t v101 = v38;
                uint64_t v42 = v38 + 16 * v41;
                *(_DWORD *)(v42 + 32) = v28;
                *(_DWORD *)(v42 + 36) = v29;
                *(void *)(v42 + 40) = v30;
              }
            }
            else
            {
              swift_release();
            }
            v26 += 2;
            --v27;
          }
          while (v27);
        }
        else
        {
          uint64_t v101 = MEMORY[0x1E4FBC860];
        }
        uint64_t v43 = v104;
        uint64_t v44 = *((void *)v104 + 2);
        uint64_t v45 = v44 + *(void *)(v101 + 16);
        int v46 = swift_isUniquelyReferenced_nonNull_native();
        if (v46 && v45 <= *((void *)v104 + 3) >> 1)
        {
          uint64_t v47 = *(void *)(v101 + 16);
          if (!v47) {
            goto LABEL_66;
          }
        }
        else
        {
          if (v44 <= v45) {
            uint64_t v48 = v45;
          }
          else {
            uint64_t v48 = v44;
          }
          uint64_t v43 = sub_1B68C18B8(v46, v48, 1, v104);
          uint64_t v47 = *(void *)(v101 + 16);
          if (!v47) {
            goto LABEL_66;
          }
        }
        uint64_t v49 = &v43[16 * *((void *)v43 + 2) + 32];
        if (v101 + 32 < (unint64_t)&v49[16 * v47] && (unint64_t)v49 < v101 + 32 + 16 * v47)
        {
          uint64_t result = sub_1B6E32C88();
          __break(1u);
          return result;
        }
        memcpy(v49, (const void *)(v101 + 32), 16 * v47);
        *((void *)v43 + 2) += v47;
LABEL_66:
        uint64_t v105 = v43;
        swift_release();
        if (v25)
        {
          uint64_t v51 = (void *)(v102 + 40);
          uint64_t v52 = MEMORY[0x1E4FBC860];
          while (1)
          {
            int v54 = *((_DWORD *)v51 - 2);
            int v53 = *((_DWORD *)v51 - 1);
            uint64_t v55 = *v51;
            swift_retain();
            if (v54 == -1 && v53 == 0) {
              break;
            }
            if (v54 < 0) {
              break;
            }
            if (*(void *)(v55 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v54) {
              break;
            }
            uint64_t v57 = *(void *)(v55 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            if (v53 != -1 && *(_DWORD *)(v57 + 12 * v54 + 8) != v53) {
              break;
            }
            uint64_t v58 = *(void *)(*(void *)(*(void *)(v55 + 80) + 8 * *(__int16 *)(v57 + 12 * v54 + 6) + 32) + 16);
            uint64_t v59 = *(void *)(v58 + 128);
            if (!*(void *)(v59 + 16)) {
              break;
            }
            unint64_t v60 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig);
            if ((v61 & 1) == 0) {
              break;
            }
            uint64_t v62 = *(ValueMetadata **)(*(void *)(v58 + 24) + 16 * *(void *)(*(void *)(v59 + 56) + 8 * v60) + 32);
            swift_release();
            if (v62 != &type metadata for GraphScriptingConfig) {
              goto LABEL_81;
            }
LABEL_86:
            v51 += 2;
            if (!--v25) {
              goto LABEL_89;
            }
          }
          swift_release();
LABEL_81:
          char v63 = swift_isUniquelyReferenced_nonNull_native();
          v109[0] = v52;
          if ((v63 & 1) == 0)
          {
            sub_1B6C3D398(0, *(void *)(v52 + 16) + 1, 1);
            uint64_t v52 = v109[0];
          }
          unint64_t v65 = *(void *)(v52 + 16);
          unint64_t v64 = *(void *)(v52 + 24);
          if (v65 >= v64 >> 1)
          {
            sub_1B6C3D398(v64 > 1, v65 + 1, 1);
            uint64_t v52 = v109[0];
          }
          *(void *)(v52 + 16) = v65 + 1;
          uint64_t v66 = v52 + 16 * v65;
          *(_DWORD *)(v66 + 32) = v54;
          *(_DWORD *)(v66 + 36) = v53;
          *(void *)(v66 + 40) = v55;
          goto LABEL_86;
        }
        uint64_t v52 = MEMORY[0x1E4FBC860];
LABEL_89:
        swift_bridgeObjectRelease();
        uint64_t v67 = *(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v67)
        {
          char v68 = *(unsigned char *)(v67 + 80);
          MEMORY[0x1BA9B8670](v67 + 48);
          uint64_t v67 = *(void *)(v67 + 56);
        }
        else
        {
          char v68 = 0;
        }
        unint64_t v22 = v105;
        uint64_t v107 = 0;
        swift_unknownObjectUnownedInit();
        v106[0] = v19;
        uint64_t v107 = v67;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        char v108 = v68;
        sub_1B636C4E0((uint64_t)v106, (uint64_t)v109);
        sub_1B6C2CF84((uint64_t)v109, v99, v52, v103);
        sub_1B636C450((uint64_t)v109);
        if (v68) {
          sub_1B6A667F0(1);
        }
        uint64_t v21 = v100 + 1;
        swift_release();
        swift_release();
      }
      while (v100 != 3);
      uint64_t v69 = *((void *)v105 + 2);
      if (v69)
      {
        swift_bridgeObjectRetain();
        uint64_t v70 = 0;
        while (1)
        {
          uint64_t v71 = (uint64_t)&v105[16 * v70 + 32];
          int v72 = *(_DWORD *)v71;
          int v73 = *(_DWORD *)(v71 + 4);
          uint64_t v74 = *(void *)(v71 + 8);
          if (*(_DWORD *)v71 != -1 || v73 != 0)
          {
            LOBYTE(v76) = 1;
            if (v72 < 0 || v98[1] <= v72) {
              goto LABEL_113;
            }
            uint64_t v77 = *v98 + 12 * v72;
            if (v73 == -1 || *(_DWORD *)(v77 + 8) == v73)
            {
              uint64_t v79 = *(void *)(*(void *)(v97 + 136) + 8 * *(int *)(*v98 + 12 * v72) + 32);
              uint64_t v80 = *(void *)(v79 + 48);
              uint64_t v81 = *(void *)(v80 + 16);
              if (v81)
              {
                uint64_t v82 = *(__int16 *)(v77 + 4);
                char v83 = (void *)(v80 + 56);
                while ((ValueMetadata *)*(v83 - 3) != &type metadata for GraphScriptingConfig)
                {
                  v83 += 5;
                  if (!--v81) {
                    goto LABEL_112;
                  }
                }
                unint64_t v76 = 0x4030302020101uLL >> (8 * *(unsigned char *)(*(void *)(v79 + 128) + *v83 + 32 * v82));
                goto LABEL_113;
              }
            }
          }
LABEL_112:
          LOBYTE(v76) = 1;
LABEL_113:
          uint64_t v84 = sub_1B6C2C804(v76, v103, v19);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v84 = (uint64_t)sub_1B68C18B8(0, *(void *)(v84 + 16) + 1, 1, (char *)v84);
          }
          unint64_t v86 = *(void *)(v84 + 16);
          unint64_t v85 = *(void *)(v84 + 24);
          if (v86 >= v85 >> 1) {
            uint64_t v84 = (uint64_t)sub_1B68C18B8(v85 > 1, v86 + 1, 1, (char *)v84);
          }
          *(void *)(v84 + 16) = v86 + 1;
          uint64_t v87 = v84 + 16 * v86;
          *(_DWORD *)(v87 + 32) = v72;
          *(_DWORD *)(v87 + 36) = v73;
          *(void *)(v87 + 40) = v74;
          uint64_t v88 = *(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
          swift_retain();
          if (v88)
          {
            char v89 = *(unsigned char *)(v88 + 80);
            MEMORY[0x1BA9B8670](v88 + 48);
            uint64_t v88 = *(void *)(v88 + 56);
          }
          else
          {
            char v89 = 0;
          }
          uint64_t v107 = 0;
          swift_unknownObjectUnownedInit();
          v106[0] = v19;
          uint64_t v107 = v88;
          swift_unknownObjectUnownedAssign();
          swift_unownedRetain();
          swift_unknownObjectRelease();
          char v108 = v89;
          sub_1B636C4E0((uint64_t)v106, (uint64_t)v109);
          sub_1B6C2CF84((uint64_t)v109, v76, v84, v103);
          sub_1B636C450((uint64_t)v109);
          if (v89) {
            sub_1B6A667F0(1);
          }
          ++v70;
          swift_bridgeObjectRelease();
          swift_release();
          if (v70 == v69)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_4:
      a2 = v93;
      a4 = v94;
      uint64_t v10 = v91;
      uint64_t v8 = v92;
      uint64_t v9 = v96;
LABEL_5:
      if (++v9 == v8) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v18 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v95 + 12 * (int)v13) + 32);
    int v15 = *(_DWORD *)(v18 + 28);
    char v16 = *(unsigned char *)(v18 + 32);
LABEL_18:
    uint64_t v19 = *((void *)v11 + 1);
    if ((a4 & 0x100000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_25;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CA7AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v97 = qword_1EB997A18;
  int v98 = v7;
  char v99 = v6 >> 31;
  uint64_t v100 = 1;
  char v101 = 2;
  uint64_t v102 = 0;
  swift_retain();
  sub_1B63A7278(1, (uint64_t)v79);
  swift_release();
  v94[0] = v79[0];
  v94[1] = v79[1];
  uint64_t v95 = v80;
  uint64_t v67 = a1;
  sub_1B62C9DA8(a1, (uint64_t)v94, 0x200000000, v81);
  sub_1B62D8068((uint64_t)v81, (uint64_t)v82, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v82[0])
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v36 = a1;
    uint64_t v37 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v37)
    {
LABEL_65:
      sub_1B62CA064((uint64_t)v79);
      return swift_bridgeObjectRelease();
    }
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v38 = (unsigned int *)(v11 + 44);
    do
    {
      uint64_t v40 = *(v38 - 3);
      uint64_t v41 = *(v38 - 2);
      uint64_t v39 = *(v38 - 1);
      uint64_t v42 = *v38;
      if (v40 == -1 && v41 == 0)
      {
        unint64_t v46 = 0xFFFFFFFFLL;
      }
      else
      {
        uint64_t v71 = *(v38 - 1);
        uint64_t v44 = *(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v44)
        {
          char v45 = *(unsigned char *)(v44 + 80);
          MEMORY[0x1BA9B8670](v44 + 48);
          uint64_t v44 = *(void *)(v44 + 56);
        }
        else
        {
          char v45 = 0;
        }
        uint64_t v74 = 0;
        swift_unknownObjectUnownedInit();
        v73[0] = v67;
        uint64_t v74 = (ValueMetadata *)v44;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        LOBYTE(v75) = v45;
        sub_1B636C4E0((uint64_t)v73, (uint64_t)v77);
        uint64_t v47 = v77[0];
        swift_unownedRetainStrong();
        swift_release();
        swift_unownedRetainStrong();
        unint64_t v46 = v40 | (v41 << 32);
        sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v46, 0);
        swift_release();
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        if (v78 == 1)
        {
          swift_unownedRetainStrong();
          v73[0] = __PAIR64__(v41, v40);
          v73[1] = v47;
          uint64_t v74 = &type metadata for Parent;
          int v75 = &off_1F0FA0430;
          char v76 = 13;
          uint64_t v48 = *(void *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
          if (v48 && (*(unsigned char *)(v48 + 81) & 1) != 0 && *(void *)(v48 + 24) && swift_weakLoadStrong())
          {
            swift_retain();
            swift_unknownObjectRetain();
            swift_release();
            sub_1B6873570((uint64_t)v73, (uint64_t)v72);
            uint64_t v49 = *(void **)(v48 + 16);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v48 + 16) = v49;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v49 = sub_1B68C0B2C(0, v49[2] + 1, 1, v49);
              *(void *)(v48 + 16) = v49;
            }
            unint64_t v52 = v49[2];
            unint64_t v51 = v49[3];
            unint64_t v53 = v52 + 1;
            if (v52 >= v51 >> 1)
            {
              unint64_t v64 = v52 + 1;
              int v54 = v49;
              unint64_t v55 = v49[2];
              uint64_t v56 = sub_1B68C0B2C(v51 > 1, v52 + 1, 1, v54);
              unint64_t v53 = v64;
              unint64_t v52 = v55;
              uint64_t v49 = v56;
              *(void *)(v48 + 16) = v56;
            }
            v49[2] = v53;
            sub_1B68735CC((uint64_t)v72, (uint64_t)&v49[8 * v52 + 4]);
            swift_release();
            swift_unknownObjectRelease();
          }
          swift_release();
          sub_1B67421B0((uint64_t)v73);
        }
        sub_1B636C450((uint64_t)v77);
        if (v45) {
          sub_1B6A667F0(1);
        }
        uint64_t v36 = v67;
        swift_release();
        uint64_t v39 = v71;
      }
      v38 += 4;
      sub_1B6AADDB4(v39 | (v42 << 32), v36, v46, v36);
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  long long v89 = v82[0];
  long long v90 = v82[1];
  uint64_t v91 = v83;
  if (v88 < 1 || (uint64_t v63 = v85) == 0)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_37:
    uint64_t v36 = v67;
    sub_1B632F220(v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    uint64_t v37 = *((void *)v11 + 2);
    if (!v37) {
      goto LABEL_65;
    }
    goto LABEL_38;
  }
  uint64_t v62 = v84;
  uint64_t v8 = v87[4];
  int v9 = *(unsigned __int8 *)(v86 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v66 = v87;
  uint64_t v58 = v87 + 8;
  uint64_t v59 = (uint64_t)(v87 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = 0;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  int v60 = v9;
  uint64_t v61 = v8;
  while (1)
  {
    uint64_t v65 = v10;
    uint64_t v12 = (unsigned int *)(v62 + 48 * v10);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    int v15 = (uint64_t *)*((void *)v12 + 2);
    uint64_t v16 = *((void *)v12 + 4);
    uint64_t v17 = *((void *)v12 + 5);
    uint64_t v68 = *((void *)v12 + 3);
    if (v9)
    {
      uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    sub_1B62D8068(v59, (uint64_t)v96, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v19 = v66[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v66[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v66[7] = v20;
    v58[1] = 0;
    _OWORD v58[2] = 0;
    void *v58 = 0;
    swift_release();
    uint64_t v21 = (uint64_t *)sub_1B62C9024((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v15, v68, v16, (uint64_t)v66);
    if (!v15) {
      break;
    }
    if (v16)
    {
      do
      {
        uint64_t v23 = *v15++;
        uint64_t v22 = v23;
        uint64_t v24 = swift_retain();
        if (*(unsigned char *)(v17 + 184)) {
          goto LABEL_66;
        }
        unsigned int v25 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v22);
        unsigned int v26 = *(_DWORD *)(*(void *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v25 + 8);
        swift_release();
        uint64_t v69 = *v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1B68C6BF8(0, *((void *)v11 + 2) + 1, 1, v11);
        }
        unint64_t v28 = *((void *)v11 + 2);
        unint64_t v27 = *((void *)v11 + 3);
        if (v28 >= v27 >> 1) {
          uint64_t v11 = sub_1B68C6BF8(v27 > 1, v28 + 1, 1, v11);
        }
        *((void *)v11 + 2) = v28 + 1;
        *(void *)&long long v29 = __PAIR64__(v26, v25);
        *((void *)&v29 + 1) = v69;
        *(_OWORD *)&v11[16 * v28 + 32] = v29;
        ++v21;
      }
      while (--v16);
    }
LABEL_24:
    v92[0] = v89;
    v92[1] = v90;
    uint64_t v93 = v91;
    sub_1B6345178(v66, (unsigned __int16 **)v92, (uint64_t)v96);
    sub_1B634507C((char *)v17);
    uint64_t v8 = v61;
    ecs_stack_allocator_pop_snapshot(v61);
    int v9 = v60;
    if (v60)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    uint64_t v10 = v65 + 1;
    if (v65 + 1 == v63)
    {
      sub_1B632F220(v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      goto LABEL_37;
    }
  }
  if (v14 == v13) {
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v30 = swift_retain();
    if (*(unsigned char *)(v17 + 184)) {
      break;
    }
    unsigned int v31 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v14);
    unsigned int v32 = *(_DWORD *)(*(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v31 + 8);
    swift_release();
    uint64_t v70 = v21[v14];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1B68C6BF8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v34 = *((void *)v11 + 2);
    unint64_t v33 = *((void *)v11 + 3);
    if (v34 >= v33 >> 1) {
      uint64_t v11 = sub_1B68C6BF8(v33 > 1, v34 + 1, 1, v11);
    }
    ++v14;
    *((void *)v11 + 2) = v34 + 1;
    *(void *)&long long v35 = __PAIR64__(v32, v31);
    *((void *)&v35 + 1) = v70;
    *(_OWORD *)&v11[16 * v34 + 32] = v35;
    if (v13 == v14) {
      goto LABEL_24;
    }
  }
LABEL_66:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void *sub_1B6CA8318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v230 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v174 = qword_1EB997A18;
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  int v102 = v7;
  int v175 = v7;
  unint64_t v101 = v6 >> 31;
  char v176 = v6 >> 31;
  uint64_t v177 = 1;
  char v178 = 2;
  uint64_t v179 = 0;
  swift_retain();
  sub_1B62A1E28(1, (uint64_t)v103);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v8 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v104);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v103);
  v136[0] = v104[0];
  v136[1] = v104[1];
  uint64_t v137 = v105;
  sub_1B62C9DA8(a1, (uint64_t)v136, 0x200000000, v184);
  sub_1B62D8068((uint64_t)v184, (uint64_t)v227, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v227[0])
  {
    if (v229 >= 1)
    {
      uint64_t v9 = v228;
      if (v228)
      {
        uint64_t v10 = v227[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v11 = 48 * v9;
        uint64_t v12 = (uint64_t *)(v10 + 40);
        do
        {
          uint64_t v17 = *v12;
          uint64_t v18 = *(os_unfair_lock_s **)(*v12 + 376);
          swift_retain();
          os_unfair_lock_lock(v18);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
          int v19 = *(_DWORD *)(v17 + 24);
          swift_retain();
          uint64_t v223 = 0;
          memset(v222, 0, sizeof(v222));
          uint64_t v218 = 0;
          long long v217 = 0u;
          long long v216 = 0u;
          int v20 = sub_1B637F628(v19, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)v222, (uint64_t)&v216);
          swift_release();
          sub_1B62E2EA0((uint64_t)&v216, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)v222, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v20))
          {
            sub_1B66603E4(v20);
          }
          else
          {
            uint64_t v13 = *(void *)(v17 + 232);
            uint64_t v14 = *(void *)(v17 + 240);
            char v15 = *(unsigned char *)(v17 + 120);
            uint64_t v16 = *(unsigned int *)(v17 + 28);
            LOBYTE(v222[0]) = *(unsigned char *)(v17 + 32);
            sub_1B628EEF4(v13, v14, v20, v15, v16 | ((unint64_t)LOBYTE(v222[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
          swift_release();
          v12 += 6;
          v11 -= 48;
        }
        while (v11);
        sub_1B632F220(v184, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    sub_1B632F220(v184, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v168 = qword_1EB997A18;
  int v169 = v102;
  char v21 = v101;
  char v170 = v101;
  uint64_t v171 = 1;
  char v172 = 2;
  uint64_t v173 = 0;
  swift_retain();
  sub_1B63AA66C(1, (uint64_t)v106);
  swift_release();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1B6E77050;
  *(void *)(v22 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v22 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v107);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v106);
  v134[0] = v107[0];
  v134[1] = v107[1];
  uint64_t v135 = v108;
  sub_1B62C9DA8(a1, (uint64_t)v134, 0x200000000, v185);
  sub_1B62D8068((uint64_t)v185, (uint64_t)v222, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v222[0])
  {
    if (v226 >= 1)
    {
      uint64_t v23 = v225;
      if (v225)
      {
        uint64_t v24 = v224;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v25 = 48 * v23;
        unsigned int v26 = (uint64_t *)(v24 + 40);
        do
        {
          uint64_t v31 = *v26;
          unsigned int v32 = *(os_unfair_lock_s **)(*v26 + 376);
          swift_retain();
          os_unfair_lock_lock(v32);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 344));
          int v33 = *(_DWORD *)(v31 + 24);
          swift_retain();
          uint64_t v218 = 0;
          long long v217 = 0u;
          long long v216 = 0u;
          uint64_t v212 = 0;
          long long v211 = 0u;
          long long v210 = 0u;
          int v34 = sub_1B637F628(v33, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v216, (uint64_t)&v210);
          swift_release();
          sub_1B62E2EA0((uint64_t)&v210, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)&v216, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v34))
          {
            sub_1B66603E4(v34);
          }
          else
          {
            uint64_t v27 = *(void *)(v31 + 232);
            uint64_t v28 = *(void *)(v31 + 240);
            char v29 = *(unsigned char *)(v31 + 120);
            uint64_t v30 = *(unsigned int *)(v31 + 28);
            LOBYTE(v216) = *(unsigned char *)(v31 + 32);
            sub_1B628EEF4(v27, v28, v34, v29, v30 | ((unint64_t)v216 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 376));
          swift_release();
          v26 += 6;
          v25 -= 48;
        }
        while (v25);
        sub_1B632F220(v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        char v21 = v101;
      }
    }
    sub_1B632F220(v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v162 = qword_1EB997A18;
  int v163 = v102;
  char v164 = v21;
  uint64_t v165 = 1;
  char v166 = 2;
  uint64_t v167 = 0;
  swift_retain();
  sub_1B63AB4E8(1, (uint64_t)v109);
  swift_release();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1B6E77050;
  *(void *)(v35 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v35 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v110);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v109);
  v132[0] = v110[0];
  v132[1] = v110[1];
  uint64_t v133 = v111;
  sub_1B62C9DA8(a1, (uint64_t)v132, 0x200000000, v186);
  sub_1B62D8068((uint64_t)v186, (uint64_t)&v216, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v216)
  {
    if (v221 >= 1)
    {
      uint64_t v36 = v220;
      if (v220)
      {
        uint64_t v37 = v219;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v38 = 48 * v36;
        uint64_t v39 = (uint64_t *)(v37 + 40);
        do
        {
          uint64_t v44 = *v39;
          char v45 = *(os_unfair_lock_s **)(*v39 + 376);
          swift_retain();
          os_unfair_lock_lock(v45);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v44 + 344));
          int v46 = *(_DWORD *)(v44 + 24);
          swift_retain();
          uint64_t v212 = 0;
          long long v211 = 0u;
          long long v210 = 0u;
          uint64_t v206 = 0;
          long long v205 = 0u;
          long long v204 = 0u;
          int v47 = sub_1B637F628(v46, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v210, (uint64_t)&v204);
          swift_release();
          sub_1B62E2EA0((uint64_t)&v204, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)&v210, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v47))
          {
            sub_1B66603E4(v47);
          }
          else
          {
            uint64_t v40 = *(void *)(v44 + 232);
            uint64_t v41 = *(void *)(v44 + 240);
            char v42 = *(unsigned char *)(v44 + 120);
            uint64_t v43 = *(unsigned int *)(v44 + 28);
            LOBYTE(v210) = *(unsigned char *)(v44 + 32);
            sub_1B628EEF4(v40, v41, v47, v42, v43 | ((unint64_t)v210 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v44 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v44 + 376));
          swift_release();
          v39 += 6;
          v38 -= 48;
        }
        while (v38);
        sub_1B632F220(v186, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        char v21 = v101;
      }
    }
    sub_1B632F220(v186, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v156 = qword_1EB997A18;
  int v157 = v102;
  char v158 = v21;
  uint64_t v159 = 1;
  char v160 = 2;
  uint64_t v161 = 0;
  swift_retain();
  sub_1B62943C0(1, (uint64_t)v112);
  swift_release();
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1B6E77050;
  *(void *)(v48 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v48 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v113);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v112);
  v130[0] = v113[0];
  v130[1] = v113[1];
  uint64_t v131 = v114;
  sub_1B62C9DA8(a1, (uint64_t)v130, 0x200000000, v187);
  sub_1B62D8068((uint64_t)v187, (uint64_t)&v210, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v210)
  {
    if (v215 >= 1)
    {
      uint64_t v49 = v214;
      if (v214)
      {
        uint64_t v50 = v213;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v51 = 48 * v49;
        unint64_t v52 = (uint64_t *)(v50 + 40);
        do
        {
          uint64_t v57 = *v52;
          uint64_t v58 = *(os_unfair_lock_s **)(*v52 + 376);
          swift_retain();
          os_unfair_lock_lock(v58);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v57 + 344));
          int v59 = *(_DWORD *)(v57 + 24);
          swift_retain();
          uint64_t v206 = 0;
          long long v205 = 0u;
          long long v204 = 0u;
          uint64_t v200 = 0;
          long long v199 = 0u;
          long long v198 = 0u;
          int v60 = sub_1B637F628(v59, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v204, (uint64_t)&v198);
          swift_release();
          sub_1B62E2EA0((uint64_t)&v198, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)&v204, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v60))
          {
            sub_1B66603E4(v60);
          }
          else
          {
            uint64_t v53 = *(void *)(v57 + 232);
            uint64_t v54 = *(void *)(v57 + 240);
            char v55 = *(unsigned char *)(v57 + 120);
            uint64_t v56 = *(unsigned int *)(v57 + 28);
            LOBYTE(v204) = *(unsigned char *)(v57 + 32);
            sub_1B628EEF4(v53, v54, v60, v55, v56 | ((unint64_t)v204 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v57 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v57 + 376));
          swift_release();
          v52 += 6;
          v51 -= 48;
        }
        while (v51);
        sub_1B632F220(v187, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        char v21 = v101;
      }
    }
    sub_1B632F220(v187, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v150 = qword_1EB997A18;
  int v151 = v102;
  char v152 = v21;
  uint64_t v153 = 1;
  char v154 = 2;
  uint64_t v155 = 0;
  swift_retain();
  sub_1B63A8B4C(1, (uint64_t)v115);
  swift_release();
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1B6E77050;
  *(void *)(v61 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v61 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v116);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v115);
  v128[0] = v116[0];
  v128[1] = v116[1];
  uint64_t v129 = v117;
  sub_1B62C9DA8(a1, (uint64_t)v128, 0x200000000, v188);
  sub_1B62D8068((uint64_t)v188, (uint64_t)&v204, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v204)
  {
    if (v209 >= 1)
    {
      uint64_t v62 = v208;
      if (v208)
      {
        uint64_t v63 = v207;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v64 = 48 * v62;
        uint64_t v65 = (uint64_t *)(v63 + 40);
        do
        {
          uint64_t v70 = *v65;
          uint64_t v71 = *(os_unfair_lock_s **)(*v65 + 376);
          swift_retain();
          os_unfair_lock_lock(v71);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v70 + 344));
          int v72 = *(_DWORD *)(v70 + 24);
          swift_retain();
          uint64_t v200 = 0;
          long long v199 = 0u;
          long long v198 = 0u;
          uint64_t v194 = 0;
          long long v193 = 0u;
          long long v192 = 0u;
          int v73 = sub_1B637F628(v72, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v198, (uint64_t)&v192);
          swift_release();
          sub_1B62E2EA0((uint64_t)&v192, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)&v198, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v73))
          {
            sub_1B66603E4(v73);
          }
          else
          {
            uint64_t v66 = *(void *)(v70 + 232);
            uint64_t v67 = *(void *)(v70 + 240);
            char v68 = *(unsigned char *)(v70 + 120);
            uint64_t v69 = *(unsigned int *)(v70 + 28);
            LOBYTE(v198) = *(unsigned char *)(v70 + 32);
            sub_1B628EEF4(v66, v67, v73, v68, v69 | ((unint64_t)v198 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v70 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v70 + 376));
          swift_release();
          v65 += 6;
          v64 -= 48;
        }
        while (v64);
        sub_1B632F220(v188, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        char v21 = v101;
      }
    }
    sub_1B632F220(v188, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v144 = qword_1EB997A18;
  int v145 = v102;
  char v146 = v21;
  uint64_t v147 = 1;
  char v148 = 2;
  uint64_t v149 = 0;
  swift_retain();
  sub_1B636DA60(1, (uint64_t)v118);
  swift_release();
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1B6E77050;
  *(void *)(v74 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v74 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v119);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v118);
  v126[0] = v119[0];
  v126[1] = v119[1];
  uint64_t v127 = v120;
  sub_1B62C9DA8(a1, (uint64_t)v126, 0x200000000, v189);
  sub_1B62D8068((uint64_t)v189, (uint64_t)&v198, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v198)
  {
    if (v203 >= 1)
    {
      uint64_t v75 = v202;
      if (v202)
      {
        uint64_t v76 = v201;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v77 = 48 * v75;
        char v78 = (uint64_t *)(v76 + 40);
        do
        {
          uint64_t v83 = *v78;
          uint64_t v84 = *(os_unfair_lock_s **)(*v78 + 376);
          swift_retain();
          os_unfair_lock_lock(v84);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v83 + 344));
          int v85 = *(_DWORD *)(v83 + 24);
          swift_retain();
          uint64_t v194 = 0;
          long long v193 = 0u;
          long long v192 = 0u;
          uint64_t v191 = 0;
          memset(v190, 0, sizeof(v190));
          int v86 = sub_1B637F628(v85, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v192, (uint64_t)v190);
          swift_release();
          sub_1B62E2EA0((uint64_t)v190, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)&v192, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v86))
          {
            sub_1B66603E4(v86);
          }
          else
          {
            uint64_t v79 = *(void *)(v83 + 232);
            uint64_t v80 = *(void *)(v83 + 240);
            char v81 = *(unsigned char *)(v83 + 120);
            uint64_t v82 = *(unsigned int *)(v83 + 28);
            LOBYTE(v192) = *(unsigned char *)(v83 + 32);
            sub_1B628EEF4(v79, v80, v86, v81, v82 | ((unint64_t)v192 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v83 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v83 + 376));
          swift_release();
          v78 += 6;
          v77 -= 48;
        }
        while (v77);
        sub_1B632F220(v189, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        char v21 = v101;
      }
    }
    sub_1B632F220(v189, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v138 = qword_1EB997A18;
  int v139 = v102;
  char v140 = v21;
  uint64_t v141 = 1;
  char v142 = 2;
  uint64_t v143 = 0;
  swift_retain();
  sub_1B63AA054(1, (uint64_t)v121);
  swift_release();
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_1B6E77050;
  *(void *)(v87 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v87 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v122);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v121);
  v124[0] = v122[0];
  v124[1] = v122[1];
  uint64_t v125 = v123;
  sub_1B62C9DA8(a1, (uint64_t)v124, 0x200000000, v190);
  sub_1B62D8068((uint64_t)v190, (uint64_t)&v192, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v192)
  {
    if (v197 >= 1)
    {
      uint64_t v88 = v196;
      if (v196)
      {
        uint64_t v89 = v195;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v90 = 48 * v88;
        uint64_t v91 = (uint64_t *)(v89 + 40);
        do
        {
          uint64_t v96 = *v91;
          uint64_t v97 = *(os_unfair_lock_s **)(*v91 + 376);
          swift_retain();
          os_unfair_lock_lock(v97);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v96 + 344));
          int v98 = *(_DWORD *)(v96 + 24);
          swift_retain();
          uint64_t v183 = 0;
          memset(v182, 0, sizeof(v182));
          uint64_t v181 = 0;
          memset(v180, 0, sizeof(v180));
          int v99 = sub_1B637F628(v98, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)v182, (uint64_t)v180);
          swift_release();
          sub_1B62E2EA0((uint64_t)v180, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v99))
          {
            sub_1B66603E4(v99);
          }
          else
          {
            uint64_t v92 = *(void *)(v96 + 232);
            uint64_t v93 = *(void *)(v96 + 240);
            char v94 = *(unsigned char *)(v96 + 120);
            uint64_t v95 = *(unsigned int *)(v96 + 28);
            LOBYTE(v182[0]) = *(unsigned char *)(v96 + 32);
            sub_1B628EEF4(v92, v93, v99, v94, v95 | ((unint64_t)LOBYTE(v182[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 376));
          swift_release();
          v91 += 6;
          v90 -= 48;
        }
        while (v90);
        sub_1B632F220(v190, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    sub_1B62CA064((uint64_t)v122);
    sub_1B62CA064((uint64_t)v119);
    sub_1B62CA064((uint64_t)v116);
    sub_1B62CA064((uint64_t)v113);
    sub_1B62CA064((uint64_t)v110);
    sub_1B62CA064((uint64_t)v107);
    sub_1B62CA064((uint64_t)v104);
    return sub_1B632F220(v190, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v122);
    sub_1B62CA064((uint64_t)v119);
    sub_1B62CA064((uint64_t)v116);
    sub_1B62CA064((uint64_t)v113);
    sub_1B62CA064((uint64_t)v110);
    sub_1B62CA064((uint64_t)v107);
    return (void *)sub_1B62CA064((uint64_t)v104);
  }
}

uint64_t sub_1B6CA97A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v153 = qword_1EB997A18;
  int v154 = v7;
  char v155 = v6 >> 31;
  uint64_t v156 = 1;
  char v157 = 2;
  uint64_t v158 = 0;
  swift_retain();
  sub_1B6A70560(0, (uint64_t)v135);
  swift_release();
  v150[0] = v135[0];
  v150[1] = v135[1];
  uint64_t v151 = v136;
  sub_1B62C9DA8(a1, (uint64_t)v150, 0x200000000, v137);
  sub_1B62D8068((uint64_t)v137, (uint64_t)v138, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v103 = a1;
  if (!*(void *)&v138[0])
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v38 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v38)
    {
LABEL_148:
      sub_1B62CA064((uint64_t)v135);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_41;
  }
  long long v145 = v138[0];
  long long v146 = v138[1];
  uint64_t v147 = v139;
  if (v144 < 1 || (uint64_t v114 = v141) == 0)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_40;
  }
  uint64_t v110 = v140;
  uint64_t v8 = v143;
  uint64_t v123 = v143[4];
  int v121 = *(unsigned __int8 *)(v142 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v106 = (uint64_t)(v143 + 6);
  uint64_t v108 = type metadata accessor for VFXObjectTag();
  long long v124 = v8;
  uint64_t v104 = v8 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v118 = v10;
    uint64_t v119 = v9;
    uint64_t v12 = (unsigned int *)(v110 + 48 * v9);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    char v15 = (uint64_t *)*((void *)v12 + 2);
    uint64_t v16 = *((void *)v12 + 4);
    uint64_t v17 = *((void *)v12 + 5);
    uint64_t v116 = *((void *)v12 + 3);
    if (v121)
    {
      uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v123);
    sub_1B62D8068(v106, (uint64_t)v152, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v19 = v124[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v124[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v124[7] = v20;
    v104[1] = 0;
    _OWORD v104[2] = 0;
    *uint64_t v104 = 0;
    swift_release();
    sub_1B62C9024(v108, (uint64_t)&off_1F0F5D1E8, v15, v116, v16, (uint64_t)v124);
    if (v15)
    {
      if (v16)
      {
        while (1)
        {
          uint64_t v23 = *v15++;
          uint64_t v22 = v23;
          if ((*(unsigned char *)(v17 + 120) & 1) == 0)
          {
            char v24 = *(unsigned char *)(v17 + 184);
            uint64_t v25 = swift_retain();
            if (v24) {
              goto LABEL_149;
            }
            int v26 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v22);
            int v27 = *(_DWORD *)(*(void *)(v25 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v26 + 8);
            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v11 = sub_1B633F784(0, *((void *)v11 + 2) + 1, 1, v11);
            }
            unint64_t v29 = *((void *)v11 + 2);
            unint64_t v28 = *((void *)v11 + 3);
            if (v29 >= v28 >> 1) {
              uint64_t v11 = sub_1B633F784(v28 > 1, v29 + 1, 1, v11);
            }
            *((void *)v11 + 2) = v29 + 1;
            char v21 = &v11[8 * v29];
            *((_DWORD *)v21 + 8) = v26;
            *((_DWORD *)v21 + 9) = v27;
          }
          if (!--v16) {
            goto LABEL_26;
          }
        }
      }
      goto LABEL_26;
    }
    uint64_t v30 = (void *)&unk_1EB97E000;
    if (v13 != v14) {
      break;
    }
LABEL_26:
    v148[0] = v145;
    v148[1] = v146;
    uint64_t v149 = v147;
    uint64_t v10 = v118;
    sub_1B6345178(v124, (unsigned __int16 **)v148, (uint64_t)v152);
    sub_1B634507C((char *)v17);
    ecs_stack_allocator_pop_snapshot(v123);
    if (v121)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    uint64_t v9 = v119 + 1;
    if (v119 + 1 == v114)
    {
      sub_1B632F220(v137, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      a1 = v103;
LABEL_40:
      sub_1B632F220(v137, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      uint64_t v38 = *((void *)v11 + 2);
      if (!v38) {
        goto LABEL_148;
      }
LABEL_41:
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      uint64_t v117 = v38;
      while (1)
      {
        uint64_t v40 = *(void *)&v11[8 * v39 + 32];
        uint64_t v41 = v40;
        uint64_t v42 = HIDWORD(v40);
        if (v40 == -1 && HIDWORD(v40) == 0) {
          goto LABEL_134;
        }
        uint64_t v120 = *(ValueMetadata **)&v11[8 * v39 + 32];
        uint64_t v44 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v44)
        {
          char v45 = *(unsigned char *)(v44 + 80);
          MEMORY[0x1BA9B8670](v44 + 48);
          uint64_t v44 = *(void *)(v44 + 56);
        }
        else
        {
          char v45 = 0;
        }
        uint64_t v128 = 0;
        swift_unknownObjectUnownedInit();
        uint64_t v126 = (ValueMetadata *)a1;
        uint64_t v128 = v44;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        char v129 = v45;
        sub_1B636C4E0((uint64_t)&v126, (uint64_t)v133);
        uint64_t v46 = v133[0];
        swift_unownedRetainStrong();
        swift_release();
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        swift_unownedRetainStrong();
        if ((v41 & 0x80000000) == 0
          && (int v47 = (uint64_t *)(v46 + OBJC_IVAR____TtC3VFX13EntityManager__entries),
              *(void *)(v46 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v41)
          && ((uint64_t v48 = *v47, v42 == -1) || *(_DWORD *)(v48 + 12 * (int)v41 + 8) == v42))
        {
          uint64_t v55 = *(void *)(*(void *)(v46 + 136) + 8 * *(int *)(v48 + 12 * (int)v41) + 32);
          uint64_t v56 = *(os_unfair_lock_s **)(v55 + 344);
          swift_retain();
          os_unfair_lock_lock(v56);
          if (v47[1] > (int)v41)
          {
            uint64_t v58 = *v47 + 12 * (int)v41;
            uint64_t v59 = *(__int16 *)(v58 + 4);
            if (v42 == -1 || *(_DWORD *)(v58 + 8) == v42)
            {
              uint64_t v60 = *(void *)(*(void *)(v46 + 136) + 8 * *(int *)(*v47 + 12 * (int)v41) + 32);
              if ((*(unsigned char *)(v60 + 120) & 1) == 0)
              {
                if ((uint64_t)(*(void *)(v60 + 240) - *(void *)(v60 + 232)) < 2)
                {
                  unsigned int v109 = *(_DWORD *)(v60 + 188);
                  int v113 = *(_DWORD *)(v60 + 24);
                  swift_retain();
                  swift_retain();
                  sub_1B68E61E4(v109, 1, v113);
                  swift_release();
                  *(unsigned char *)(v60 + 120) = 1;
                }
                else
                {
                  signed int v111 = *(_DWORD *)(v60 + 24);
                  uint64_t v107 = *(unsigned int *)(v60 + 28);
                  unsigned __int8 v105 = *(unsigned char *)(v60 + 32);
                  swift_retain();
                  LOBYTE(v126) = v105;
                  sub_1B6BF2E48(v59, v111, 1, v107 | ((unint64_t)v105 << 32), 0, 0, 0, 0);
                }
                swift_release();
              }
              if (v47[1] > (int)v41 && (v42 == -1 || *(_DWORD *)(*v47 + 12 * (int)v41 + 8) == v42))
              {
                thread_worker_index(&thread_worker_index, v57);
                uint64_t v98 = v96[24];
                if (v98)
                {
                  uint64_t v99 = v96[26];
                  uint64_t v100 = 8 * (v97 >> 6);
                  *(void *)(v98 + v100) |= 1 << v97;
                  *(void *)(v99 + v100) &= ~(1 << v97);
                }
                sub_1B635AD78(v96[5], (uint64_t)v96, v97);
              }
            }
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 344));
          swift_release();
          swift_release();
          a1 = v103;
        }
        else
        {
          swift_release();
        }
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        if (v134 == 1)
        {
          swift_unownedRetainStrong();
          uint64_t v126 = v120;
          uint64_t v127 = (_UNKNOWN **)v46;
          LOBYTE(v128) = 1;
          char v132 = 7;
          uint64_t v49 = *(void *)(v46 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
          if (v49 && (*(unsigned char *)(v49 + 81) & 1) != 0 && *(void *)(v49 + 24))
          {
            if (swift_weakLoadStrong())
            {
              swift_retain();
              swift_unknownObjectRetain();
              swift_release();
              sub_1B6873570((uint64_t)&v126, (uint64_t)v125);
              uint64_t v50 = *(void **)(v49 + 16);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v49 + 16) = v50;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v50 = sub_1B68C0B2C(0, v50[2] + 1, 1, v50);
                *(void *)(v49 + 16) = v50;
              }
              unint64_t v53 = v50[2];
              unint64_t v52 = v50[3];
              unint64_t v54 = v53 + 1;
              if (v53 >= v52 >> 1)
              {
                unint64_t v101 = sub_1B68C0B2C(v52 > 1, v53 + 1, 1, v50);
                unint64_t v54 = v53 + 1;
                uint64_t v50 = v101;
                *(void *)(v49 + 16) = v101;
              }
              v50[2] = v54;
              sub_1B68735CC((uint64_t)v125, (uint64_t)&v50[8 * v53 + 4]);
              swift_release();
              swift_unknownObjectRelease();
            }
            swift_release();
            a1 = v103;
          }
          else
          {
            swift_release();
          }
          sub_1B67421B0((uint64_t)&v126);
        }
        sub_1B636C450((uint64_t)v133);
        if (v45) {
          sub_1B6A667F0(1);
        }
        swift_release();
        uint64_t v61 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
        swift_retain();
        if ((v41 & 0x80000000) != 0) {
          break;
        }
        if (*(void *)(a1 + v61 + 8) <= (int)v41) {
          break;
        }
        uint64_t v62 = *(void *)(a1 + v61);
        if (v42 != -1 && *(_DWORD *)(v62 + 12 * (int)v41 + 8) != v42) {
          break;
        }
        uint64_t v63 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(v62 + 12 * (int)v41 + 6) + 32) + 16);
        uint64_t v64 = *(void *)(v63 + 128);
        if (!*(void *)(v64 + 16)) {
          break;
        }
        unint64_t v65 = sub_1B62C1A30((uint64_t)&type metadata for Hidden);
        if ((v66 & 1) == 0) {
          break;
        }
        uint64_t v67 = *(ValueMetadata **)(*(void *)(v63 + 24) + 16 * *(void *)(*(void *)(v64 + 56) + 8 * v65) + 32);
        swift_release();
        if (v67 != &type metadata for Hidden) {
          goto LABEL_89;
        }
        uint64_t v38 = v117;
LABEL_135:
        if (v38 == ++v39)
        {
          swift_bridgeObjectRelease();
          goto LABEL_148;
        }
      }
      swift_release();
LABEL_89:
      uint64_t v68 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
      swift_retain();
      if (v68)
      {
        char v69 = *(unsigned char *)(v68 + 80);
        MEMORY[0x1BA9B8670](v68 + 48);
        uint64_t v68 = *(void *)(v68 + 56);
      }
      else
      {
        char v69 = 0;
      }
      uint64_t v128 = 0;
      swift_unknownObjectUnownedInit();
      uint64_t v126 = (ValueMetadata *)a1;
      uint64_t v128 = v68;
      swift_unknownObjectUnownedAssign();
      swift_unownedRetain();
      swift_unknownObjectRelease();
      char v129 = v69;
      sub_1B636C4E0((uint64_t)&v126, (uint64_t)v133);
      if (v41 == -1)
      {
        if (!v42)
        {
LABEL_131:
          sub_1B636C450((uint64_t)v133);
          if (v69) {
            sub_1B6A667F0(1);
          }
          swift_release();
          uint64_t v38 = v117;
LABEL_134:
          sub_1B6D15234(v41 | (v42 << 32), a1);
          goto LABEL_135;
        }
        uint64_t v70 = v133[0];
        swift_unownedRetainStrong();
      }
      else
      {
        uint64_t v70 = v133[0];
        swift_unownedRetainStrong();
        if ((v41 & 0x80000000) == 0)
        {
          if (*(void *)(v70 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v41
            && ((uint64_t v71 = *(void *)(v70 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v42 == -1)
             || *(_DWORD *)(v71 + 12 * (int)v41 + 8) == v42)
            && (uint64_t v72 = *(void *)(*(void *)(*(void *)(v70 + 80) + 8 * *(__int16 *)(v71 + 12 * (int)v41 + 6) + 32)
                                + 16),
                uint64_t v73 = *(void *)(v72 + 128),
                *(void *)(v73 + 16))
            && (unint64_t v74 = sub_1B62C1A30((uint64_t)&type metadata for Hidden), (v75 & 1) != 0))
          {
            uint64_t v76 = *(ValueMetadata **)(*(void *)(v72 + 24) + 16 * *(void *)(*(void *)(v73 + 56) + 8 * v74) + 32);
            swift_release();
            BOOL v77 = v76 != &type metadata for Hidden;
          }
          else
          {
            swift_release();
            BOOL v77 = 1;
          }
          swift_unownedRetainStrong();
          if (*(void *)(v70 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v41)
          {
            uint64_t v78 = *(void *)(v70 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            uint64_t v79 = v78 + 12 * (int)v41;
            if (v42 == -1 || *(_DWORD *)(v79 + 8) == v42)
            {
              uint64_t v122 = *(__int16 *)(v79 + 4);
              uint64_t v80 = *(void *)(*(void *)(v70 + 136) + 8 * *(int *)(v78 + 12 * (int)v41) + 32);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v80 + 344));
              uint64_t v81 = *(void *)(*(void *)(v80 + 40) + 16);
              uint64_t v82 = *(void *)(v81 + 128);
              if (*(void *)(v82 + 16)
                && (unint64_t v83 = sub_1B62C1A30((uint64_t)&type metadata for Hidden), (v84 & 1) != 0)
                && *(ValueMetadata **)(*(void *)(v81 + 24) + 16 * *(void *)(*(void *)(v82 + 56) + 8 * v83) + 32) == &type metadata for Hidden)
              {
                j_nullsub_1(v122);
              }
              else
              {
                int v85 = *(uint64_t **)(v70 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
                ecs_stack_allocator_push_snapshot(*(void *)(*v85 + 32));
                uint64_t v86 = *v85;
                uint64_t v87 = *(void *)(*(void *)(*(void *)(v80 + 40) + 16) + 128);
                if (!*(void *)(v87 + 16)
                  || (uint64_t v112 = *(void *)(*(void *)(v80 + 40) + 16),
                      uint64_t v115 = *v85,
                      unint64_t v88 = sub_1B62C1A30((uint64_t)&type metadata for Hidden),
                      uint64_t v86 = v115,
                      (v89 & 1) == 0)
                  || *(ValueMetadata **)(*(void *)(v112 + 24)
                                       + 16 * *(void *)(*(void *)(v87 + 56) + 8 * v88)
                                       + 32) != &type metadata for Hidden)
                {
                  uint64_t v126 = &type metadata for Hidden;
                  uint64_t v127 = &off_1F0F9FD68;
                  LOBYTE(v130) = 0;
                  sub_1B63B2A48(v86 + 104, (uint64_t)&v126, v122, 0, v80, v86);
                  sub_1B6391400((uint64_t)&v126);
                }
                sub_1B634507C((char *)v80);
                ecs_stack_allocator_pop_snapshot(*(void *)(*v85 + 32));
              }
              a1 = v103;
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 344));
            }
          }
          swift_release();
          goto LABEL_117;
        }
      }
      swift_release();
      swift_unownedRetainStrong();
      swift_release();
      BOOL v77 = 1;
LABEL_117:
      swift_unownedRetainStrong();
      swift_release();
      if (swift_unknownObjectUnownedLoadStrong()) {
        swift_unknownObjectRelease();
      }
      if (v134 == 1)
      {
        swift_unownedRetainStrong();
        uint64_t v126 = v120;
        uint64_t v127 = (_UNKNOWN **)v70;
        sub_1B6CC85A4(0, &qword_1E9DD6660, (uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FD68, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ComponentWriter);
        uint64_t v130 = v90;
        uint64_t v131 = &off_1F0F68360;
        LOBYTE(v128) = v77;
        char v132 = 12;
        uint64_t v91 = *(void *)(v70 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        if (v91 && (*(unsigned char *)(v91 + 81) & 1) != 0 && *(void *)(v91 + 24))
        {
          if (swift_weakLoadStrong())
          {
            swift_retain();
            swift_unknownObjectRetain();
            swift_release();
            sub_1B6873570((uint64_t)&v126, (uint64_t)v125);
            uint64_t v92 = *(void **)(v91 + 16);
            char v93 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v91 + 16) = v92;
            if ((v93 & 1) == 0)
            {
              uint64_t v92 = sub_1B68C0B2C(0, v92[2] + 1, 1, v92);
              *(void *)(v91 + 16) = v92;
            }
            unint64_t v95 = v92[2];
            unint64_t v94 = v92[3];
            if (v95 >= v94 >> 1)
            {
              uint64_t v92 = sub_1B68C0B2C(v94 > 1, v95 + 1, 1, v92);
              *(void *)(v91 + 16) = v92;
            }
            _OWORD v92[2] = v95 + 1;
            sub_1B68735CC((uint64_t)v125, (uint64_t)&v92[8 * v95 + 4]);
            swift_release();
            swift_unknownObjectRelease();
          }
          swift_release();
          a1 = v103;
        }
        else
        {
          swift_release();
        }
        sub_1B67421B0((uint64_t)&v126);
      }
      goto LABEL_131;
    }
  }
  while (1)
  {
    if (*(unsigned char *)(v17 + 120)) {
      goto LABEL_29;
    }
    char v32 = *(unsigned char *)(v17 + 184);
    uint64_t v33 = swift_retain();
    if (v32) {
      break;
    }
    int v34 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v13);
    int v35 = *(_DWORD *)(*(void *)(v33 + v30[142]) + 12 * v34 + 8);
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1B633F784(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v37 = *((void *)v11 + 2);
    unint64_t v36 = *((void *)v11 + 3);
    if (v37 >= v36 >> 1) {
      uint64_t v11 = sub_1B633F784(v36 > 1, v37 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v37 + 1;
    uint64_t v31 = &v11[8 * v37];
    *((_DWORD *)v31 + 8) = v34;
    *((_DWORD *)v31 + 9) = v35;
    uint64_t v30 = &unk_1EB97E000;
LABEL_29:
    if (v14 == ++v13) {
      goto LABEL_26;
    }
  }
LABEL_149:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void *sub_1B6CAA7B0(ProtocolDescriptor *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(v4) = a4;
  unint64_t v6 = (unint64_t)v235;
  unint64_t v7 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    goto LABEL_264;
  }
  while (1)
  {
    if (v7) {
      int v8 = 0;
    }
    else {
      int v8 = (int)v4;
    }
    uint64_t v260 = qword_1EB997A18;
    int v261 = v8;
    char v262 = v7 >> 31;
    uint64_t v263 = 1;
    char v264 = 2;
    uint64_t v265 = 0;
    swift_retain();
    sub_1B66647C0(1, 1, 3, (uint64_t)v232);
    swift_release();
    long long v9 = v232[1];
    *(_OWORD *)(v6 + 144) = v232[0];
    *(_OWORD *)(v6 + 160) = v9;
    uint64_t v242 = v233;
    sub_1B62C9DA8((uint64_t)a1, (uint64_t)v241, 0x200000000, v234);
    sub_1B62D8068((uint64_t)v234, (uint64_t)v235, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!v235[0]) {
      return (void *)sub_1B62CA064((uint64_t)v232);
    }
    if (v239 <= 0) {
      break;
    }
    uint64_t v193 = v236;
    if (!v236) {
      break;
    }
    uint64_t v10 = v238;
    int v196 = *(unsigned __int8 *)(v237 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v195 = v238[4];
    long long v11 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(v6 + 96) = *(_OWORD *)v6;
    *(_OWORD *)(v6 + 112) = v11;
    uint64_t v197 = v10;
    uint64_t v191 = v10 + 8;
    uint64_t v192 = (uint64_t)(v10 + 6);
    uint64_t v190 = v235[5];
    v240[4] = (unsigned __int16 *)v235[4];
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v194 = v12;
      uint64_t v13 = (unsigned int *)(v190 + 48 * v12);
      uint64_t v14 = *v13;
      char v15 = (uint64_t *)*((void *)v13 + 2);
      uint64_t v16 = *((void *)v13 + 3);
      uint64_t v17 = *((void *)v13 + 5);
      uint64_t v201 = *((void *)v13 + 4);
      uint64_t v203 = v13[1];
      if (v196)
      {
        uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v18);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v195);
      sub_1B62D8068(v192, (uint64_t)v243, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v19 = v197[4];
      uint64_t v198 = v17;
      uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v197[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
      v197[7] = v20;
      v191[1] = 0;
      v191[2] = 0;
      *uint64_t v191 = 0;
      swift_release();
      uint64_t v21 = v201;
      sub_1B62C9024((uint64_t)&type metadata for CodeGenerationInitialized, (uint64_t)&off_1F0F94338, v15, v16, v201, (uint64_t)v197);
      uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v15, v16, v201, (uint64_t)v197);
      uint64_t v207 = sub_1B62C9024((uint64_t)&type metadata for CodeGenerationComponent, (uint64_t)&off_1F0F8ECC8, v15, v16, v201, (uint64_t)v197);
      if (!v15)
      {
        if (v14 != v203)
        {
          uint64_t v200 = v22 + 8;
          do
          {
            uint64_t v106 = *(void *)(v207 + 8 * v14);
            if (v106)
            {
              uint64_t v206 = v14;
              uint64_t v107 = *(void *)(v200 + (v14 << 6));
              uint64_t v108 = *(void *)(v107 + 64);
              uint64_t v213 = v107 + 64;
              uint64_t v109 = 1 << *(unsigned char *)(v107 + 32);
              if (v109 < 64) {
                uint64_t v110 = ~(-1 << v109);
              }
              else {
                uint64_t v110 = -1;
              }
              unint64_t v6 = v110 & v108;
              unint64_t v111 = (unint64_t)(v109 + 63) >> 6;
              uint64_t v217 = *(void *)(v200 + (v14 << 6));
              swift_bridgeObjectRetain_n();
              swift_retain();
              unint64_t v7 = 0;
              int64_t v215 = v111;
              unint64_t v202 = v111 - 7;
              uint64_t v223 = v106;
              while (1)
              {
LABEL_147:
                if (v6)
                {
                  unint64_t v112 = __clz(__rbit64(v6));
                  v6 &= v6 - 1;
                  unint64_t v113 = v112 | (v7 << 6);
                }
                else
                {
                  unint64_t v114 = v7 + 1;
                  if ((uint64_t)(v7 + 1) >= v215) {
                    goto LABEL_138;
                  }
                  unint64_t v115 = *(void *)(v213 + 8 * v114);
                  if (!v115)
                  {
                    unint64_t v114 = v7 + 2;
                    if ((uint64_t)(v7 + 2) >= v215) {
                      goto LABEL_138;
                    }
                    unint64_t v115 = *(void *)(v213 + 8 * v114);
                    if (!v115)
                    {
                      unint64_t v114 = v7 + 3;
                      if ((uint64_t)(v7 + 3) >= v215) {
                        goto LABEL_138;
                      }
                      unint64_t v115 = *(void *)(v213 + 8 * v114);
                      if (!v115)
                      {
                        unint64_t v114 = v7 + 4;
                        if ((uint64_t)(v7 + 4) >= v215) {
                          goto LABEL_138;
                        }
                        unint64_t v115 = *(void *)(v213 + 8 * v114);
                        if (!v115)
                        {
                          unint64_t v114 = v7 + 5;
                          if ((uint64_t)(v7 + 5) >= v215) {
                            goto LABEL_138;
                          }
                          unint64_t v115 = *(void *)(v213 + 8 * v114);
                          if (!v115)
                          {
                            unint64_t v114 = v7 + 6;
                            if ((uint64_t)(v7 + 6) >= v215)
                            {
LABEL_138:
                              swift_release();
                              swift_bridgeObjectRelease();
                              swift_release();
                              uint64_t v14 = v206;
                              break;
                            }
                            unint64_t v115 = *(void *)(v213 + 8 * v114);
                            if (!v115)
                            {
                              do
                              {
                                if (v202 == v7) {
                                  goto LABEL_138;
                                }
                                unint64_t v115 = *(void *)(v217 + 8 * v7++ + 120);
                              }
                              while (!v115);
                              unint64_t v114 = v7 + 6;
                            }
                          }
                        }
                      }
                    }
                  }
                  unint64_t v6 = (v115 - 1) & v115;
                  unint64_t v113 = __clz(__rbit64(v115)) + (v114 << 6);
                  unint64_t v7 = v114;
                }
                uint64_t v116 = 16 * v113;
                uint64_t v117 = (uint64_t *)(*(void *)(v217 + 48) + 16 * v113);
                uint64_t v118 = *v117;
                LODWORD(v4) = **(void **)(*(void *)(*(void *)(v217 + 56) + v116 + 8) + 32);
                uint64_t v225 = v117[1];
                swift_bridgeObjectRetain();
                swift_retain();
                uint64_t v119 = (ValueMetadata *)sub_1B6E32738();
                a1 = &protocol descriptor for Component;
                if (!swift_conformsToProtocol2()) {
                  goto LABEL_262;
                }
                if (v119 != &type metadata for ColorRampComponent)
                {
                  int v4 = (ValueMetadata *)sub_1B6E32738();
                  if (!swift_conformsToProtocol2()) {
                    goto LABEL_263;
                  }
                  if (v4 != &type metadata for CurveComponent) {
                    goto LABEL_146;
                  }
                }
                unint64_t v219 = v6;
                unint64_t v221 = v7;
                uint64_t v120 = *(void *)(v106 + 168);
                uint64_t v227 = v120 + 64;
                uint64_t v121 = 1 << *(unsigned char *)(v120 + 32);
                if (v121 < 64) {
                  uint64_t v122 = ~(-1 << v121);
                }
                else {
                  uint64_t v122 = -1;
                }
                unint64_t v123 = v122 & *(void *)(v120 + 64);
                int64_t v124 = (unint64_t)(v121 + 63) >> 6;
                swift_bridgeObjectRetain_n();
                uint64_t v125 = 0;
                while (1)
                {
                  do
                  {
                    if (v123)
                    {
                      unint64_t v126 = __clz(__rbit64(v123));
                      v123 &= v123 - 1;
                      unint64_t v127 = v126 | (v125 << 6);
                    }
                    else
                    {
                      uint64_t v128 = v125 + 1;
                      if (v125 + 1 >= v124) {
                        goto LABEL_145;
                      }
                      unint64_t v129 = *(void *)(v227 + 8 * v128);
                      if (!v129)
                      {
                        uint64_t v128 = v125 + 2;
                        if (v125 + 2 >= v124) {
                          goto LABEL_145;
                        }
                        unint64_t v129 = *(void *)(v227 + 8 * v128);
                        if (!v129)
                        {
                          uint64_t v128 = v125 + 3;
                          if (v125 + 3 >= v124) {
                            goto LABEL_145;
                          }
                          unint64_t v129 = *(void *)(v227 + 8 * v128);
                          if (!v129)
                          {
                            uint64_t v128 = v125 + 4;
                            if (v125 + 4 >= v124) {
                              goto LABEL_145;
                            }
                            unint64_t v129 = *(void *)(v227 + 8 * v128);
                            if (!v129)
                            {
                              uint64_t v128 = v125 + 5;
                              if (v125 + 5 >= v124) {
                                goto LABEL_145;
                              }
                              unint64_t v129 = *(void *)(v227 + 8 * v128);
                              if (!v129)
                              {
                                uint64_t v128 = v125 + 6;
                                if (v125 + 6 >= v124)
                                {
LABEL_145:
                                  uint64_t v106 = v223;
                                  unint64_t v6 = v219;
                                  unint64_t v7 = v221;
                                  swift_release();
                                  swift_bridgeObjectRelease();
LABEL_146:
                                  swift_release();
                                  swift_bridgeObjectRelease();
                                  goto LABEL_147;
                                }
                                unint64_t v129 = *(void *)(v227 + 8 * v128);
                                if (!v129)
                                {
                                  do
                                  {
                                    if (v124 - 7 == v125) {
                                      goto LABEL_145;
                                    }
                                    unint64_t v129 = *(void *)(v120 + 120 + 8 * v125++);
                                  }
                                  while (!v129);
                                  uint64_t v128 = v125 + 6;
                                }
                              }
                            }
                          }
                        }
                      }
                      unint64_t v123 = (v129 - 1) & v129;
                      unint64_t v127 = __clz(__rbit64(v129)) + (v128 << 6);
                      uint64_t v125 = v128;
                    }
                    uint64_t v130 = *(void *)(*(void *)(v120 + 56) + 8 * v127);
                    uint64_t v131 = *(void *)(v130 + 80);
                  }
                  while (!sub_1B6355ED4(v131));
                  uint64_t v132 = *(void *)(v131 + 32);
                  uint64_t v133 = *(void *)(v131 + 40);
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_bridgeObjectRetain();
                  char v134 = sub_1B6A5D700(v132, v133);
                  swift_bridgeObjectRelease();
                  if (v134)
                  {
                    uint64_t v136 = v134[5];
                    uint64_t v135 = v134[6];
                    swift_bridgeObjectRetain();
                    swift_release();
                    if (v136 == v118 && v135 == v225)
                    {
                      swift_release();
                      swift_bridgeObjectRelease();
                      goto LABEL_201;
                    }
                    char v138 = sub_1B6E334B8();
                    swift_bridgeObjectRelease();
                    if (v138) {
                      break;
                    }
                  }
                  swift_release();
                  swift_bridgeObjectRelease();
                }
                swift_release();
LABEL_201:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v139 = *(void *)(v130 + 80);
                unint64_t v6 = v219;
                unint64_t v7 = v221;
                if (!sub_1B6355ED4(v139)
                  || (uint64_t v140 = *(void *)(v139 + 32),
                      uint64_t v141 = *(void *)(v139 + 40),
                      swift_bridgeObjectRetain(),
                      uint64_t v142 = sub_1B6A5D700(v140, v141),
                      swift_bridgeObjectRelease(),
                      !v142))
                {
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  uint64_t v106 = v223;
                  continue;
                }
                uint64_t v144 = v142[7];
                unint64_t v143 = v142[8];
                if (v143 == 28)
                {
                  uint64_t v211 = v142[7];
                  uint64_t v166 = v142[3];
                  uint64_t v167 = v142[4];
                  long long v252 = xmmword_1B6E9E220;
                  uint64_t v254 = 0;
                  uint64_t v255 = 0;
                  uint64_t v253 = 0;
                  swift_bridgeObjectRetain();
                  sub_1B6A5D458(v166, v167, (uint64_t)&v252);
                  uint64_t v168 = sub_1B6A5D700(v166, v167);
                  uint64_t v170 = v168[5];
                  uint64_t v169 = v168[6];
                  swift_bridgeObjectRetain();
                  swift_retain();
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v231 = *(void *)(v223 + 264);
                  *(void *)(v223 + 264) = 0x8000000000000000;
                  sub_1B67E67C0((uint64_t)v168, v170, v169, isUniquelyReferenced_nonNull_native);
                  *(void *)(v223 + 264) = v231;
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_retain();
                  swift_retain();
                  uint64_t v172 = swift_bridgeObjectRetain();
                  uint64_t v173 = sub_1B6A33600(v172, v223, v130);
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  uint64_t v174 = v173 + 64;
                  uint64_t v175 = 1 << *(unsigned char *)(v173 + 32);
                  if (v175 < 64) {
                    uint64_t v176 = ~(-1 << v175);
                  }
                  else {
                    uint64_t v176 = -1;
                  }
                  unint64_t v177 = v176 & *(void *)(v173 + 64);
                  int64_t v178 = (unint64_t)(v175 + 63) >> 6;
                  swift_retain();
                  uint64_t v179 = 0;
                  while (1)
                  {
                    if (v177)
                    {
                      unint64_t v180 = __clz(__rbit64(v177));
                      v177 &= v177 - 1;
                      unint64_t v181 = v180 | (v179 << 6);
                    }
                    else
                    {
                      uint64_t v185 = v179 + 1;
                      if (v179 + 1 >= v178) {
                        goto LABEL_254;
                      }
                      unint64_t v186 = *(void *)(v174 + 8 * v185);
                      if (!v186)
                      {
                        uint64_t v185 = v179 + 2;
                        if (v179 + 2 >= v178) {
                          goto LABEL_254;
                        }
                        unint64_t v186 = *(void *)(v174 + 8 * v185);
                        if (!v186)
                        {
                          uint64_t v185 = v179 + 3;
                          if (v179 + 3 >= v178) {
                            goto LABEL_254;
                          }
                          unint64_t v186 = *(void *)(v174 + 8 * v185);
                          if (!v186)
                          {
                            uint64_t v185 = v179 + 4;
                            if (v179 + 4 >= v178) {
                              goto LABEL_254;
                            }
                            unint64_t v186 = *(void *)(v174 + 8 * v185);
                            if (!v186)
                            {
                              uint64_t v185 = v179 + 5;
                              if (v179 + 5 >= v178) {
                                goto LABEL_254;
                              }
                              unint64_t v186 = *(void *)(v174 + 8 * v185);
                              if (!v186)
                              {
                                uint64_t v185 = v179 + 6;
                                if (v179 + 6 >= v178)
                                {
LABEL_254:
                                  swift_release();
                                  swift_release();
                                  swift_release();
                                  uint64_t v187 = v211;
                                  unint64_t v188 = 28;
                                  goto LABEL_255;
                                }
                                unint64_t v186 = *(void *)(v174 + 8 * v185);
                                if (!v186)
                                {
                                  do
                                  {
                                    if (v178 - 7 == v179) {
                                      goto LABEL_254;
                                    }
                                    unint64_t v186 = *(void *)(v173 + 120 + 8 * v179++);
                                  }
                                  while (!v186);
                                  uint64_t v185 = v179 + 6;
                                }
                              }
                            }
                          }
                        }
                      }
                      unint64_t v177 = (v186 - 1) & v186;
                      unint64_t v181 = __clz(__rbit64(v186)) + (v185 << 6);
                      uint64_t v179 = v185;
                    }
                    uint64_t v182 = (uint64_t *)(*(void *)(v173 + 48) + 16 * v181);
                    uint64_t v183 = *v182;
                    uint64_t v184 = v182[1];
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    sub_1B6CC78E0(v183, v184, v223);
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                }
                if (v143 != 37)
                {
                  sub_1B629C9E8(v142[7], v142[8]);
                  swift_release();
                  swift_release();
                  sub_1B629DCAC(v144, v143);
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v106 = v223;
                  continue;
                }
                uint64_t v210 = v142[7];
                uint64_t v145 = v142[3];
                uint64_t v146 = v142[4];
                long long v256 = xmmword_1B6E9E290;
                uint64_t v258 = 0;
                uint64_t v259 = 0;
                uint64_t v257 = 0;
                swift_bridgeObjectRetain();
                sub_1B6A5D458(v145, v146, (uint64_t)&v256);
                uint64_t v147 = sub_1B6A5D700(v145, v146);
                uint64_t v148 = v147[5];
                uint64_t v149 = v147[6];
                swift_bridgeObjectRetain();
                swift_retain();
                char v150 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v230 = *(void *)(v223 + 264);
                *(void *)(v223 + 264) = 0x8000000000000000;
                sub_1B67E67C0((uint64_t)v147, v148, v149, v150);
                *(void *)(v223 + 264) = v230;
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_retain();
                swift_retain();
                uint64_t v151 = swift_bridgeObjectRetain();
                uint64_t v152 = sub_1B6A33600(v151, v223, v130);
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                uint64_t v153 = v152 + 64;
                uint64_t v154 = 1 << *(unsigned char *)(v152 + 32);
                if (v154 < 64) {
                  uint64_t v155 = ~(-1 << v154);
                }
                else {
                  uint64_t v155 = -1;
                }
                unint64_t v156 = v155 & *(void *)(v152 + 64);
                int64_t v157 = (unint64_t)(v154 + 63) >> 6;
                swift_retain();
                uint64_t v158 = 0;
                while (2)
                {
                  if (v156)
                  {
                    unint64_t v159 = __clz(__rbit64(v156));
                    v156 &= v156 - 1;
                    unint64_t v160 = v159 | (v158 << 6);
LABEL_210:
                    uint64_t v161 = (uint64_t *)(*(void *)(v152 + 48) + 16 * v160);
                    uint64_t v162 = *v161;
                    uint64_t v163 = v161[1];
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    sub_1B6CC7CE4(v162, v163, v223);
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    continue;
                  }
                  break;
                }
                uint64_t v164 = v158 + 1;
                if (v158 + 1 >= v157) {
                  goto LABEL_253;
                }
                unint64_t v165 = *(void *)(v153 + 8 * v164);
                if (v165) {
                  goto LABEL_227;
                }
                uint64_t v164 = v158 + 2;
                if (v158 + 2 >= v157) {
                  goto LABEL_253;
                }
                unint64_t v165 = *(void *)(v153 + 8 * v164);
                if (v165) {
                  goto LABEL_227;
                }
                uint64_t v164 = v158 + 3;
                if (v158 + 3 >= v157) {
                  goto LABEL_253;
                }
                unint64_t v165 = *(void *)(v153 + 8 * v164);
                if (v165) {
                  goto LABEL_227;
                }
                uint64_t v164 = v158 + 4;
                if (v158 + 4 >= v157) {
                  goto LABEL_253;
                }
                unint64_t v165 = *(void *)(v153 + 8 * v164);
                if (v165) {
                  goto LABEL_227;
                }
                uint64_t v164 = v158 + 5;
                if (v158 + 5 >= v157) {
                  goto LABEL_253;
                }
                unint64_t v165 = *(void *)(v153 + 8 * v164);
                if (v165) {
                  goto LABEL_227;
                }
                uint64_t v164 = v158 + 6;
                if (v158 + 6 >= v157) {
                  goto LABEL_253;
                }
                unint64_t v165 = *(void *)(v153 + 8 * v164);
                if (v165)
                {
LABEL_227:
                  unint64_t v156 = (v165 - 1) & v165;
                  unint64_t v160 = __clz(__rbit64(v165)) + (v164 << 6);
                  uint64_t v158 = v164;
                  goto LABEL_210;
                }
                while (v157 - 7 != v158)
                {
                  unint64_t v165 = *(void *)(v152 + 120 + 8 * v158++);
                  if (v165)
                  {
                    uint64_t v164 = v158 + 6;
                    goto LABEL_227;
                  }
                }
LABEL_253:
                swift_release();
                swift_release();
                swift_release();
                uint64_t v187 = v210;
                unint64_t v188 = 37;
LABEL_255:
                sub_1B629DCAC(v187, v188);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v106 = v223;
                unint64_t v6 = v219;
                unint64_t v7 = v221;
              }
            }
            ++v14;
          }
          while (v14 != v203);
        }
        goto LABEL_135;
      }
      if (v201) {
        break;
      }
LABEL_135:
      sub_1B6345178(v197, v240, (uint64_t)v243);
      sub_1B634507C((char *)v198);
      ecs_stack_allocator_pop_snapshot(v195);
      if (v196)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v198 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v198 + 376));
      }
      swift_release();
      uint64_t v12 = v194 + 1;
      if (v194 + 1 == v193)
      {
        sub_1B62CA064((uint64_t)v232);
        sub_1B632F220(v234, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        return sub_1B632F220(v234, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    uint64_t v23 = 0;
    uint64_t v199 = v22 + 8;
    while (1)
    {
      unint64_t v7 = *(void *)(v207 + 8 * v23);
      if (v7) {
        break;
      }
LABEL_17:
      if (++v23 == v21) {
        goto LABEL_135;
      }
    }
    uint64_t v205 = v23;
    uint64_t v24 = *(void *)(v199 + (v23 << 6));
    uint64_t v212 = v24 + 64;
    uint64_t v25 = 1 << *(unsigned char *)(v24 + 32);
    if (v25 < 64) {
      uint64_t v26 = ~(-1 << v25);
    }
    else {
      uint64_t v26 = -1;
    }
    unint64_t v6 = v26 & *(void *)(v24 + 64);
    unint64_t v27 = (unint64_t)(v25 + 63) >> 6;
    uint64_t v216 = v24;
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v28 = 0;
    int64_t v214 = v27;
    unint64_t v204 = v27 - 7;
    uint64_t v222 = v7;
    while (1)
    {
LABEL_25:
      if (v6)
      {
        unint64_t v29 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v30 = v29 | (v28 << 6);
      }
      else
      {
        uint64_t v31 = v28 + 1;
        if (v28 + 1 >= v214) {
          goto LABEL_16;
        }
        unint64_t v32 = *(void *)(v212 + 8 * v31);
        if (!v32)
        {
          uint64_t v31 = v28 + 2;
          if (v28 + 2 >= v214) {
            goto LABEL_16;
          }
          unint64_t v32 = *(void *)(v212 + 8 * v31);
          if (!v32)
          {
            uint64_t v31 = v28 + 3;
            if (v28 + 3 >= v214) {
              goto LABEL_16;
            }
            unint64_t v32 = *(void *)(v212 + 8 * v31);
            if (!v32)
            {
              uint64_t v31 = v28 + 4;
              if (v28 + 4 >= v214) {
                goto LABEL_16;
              }
              unint64_t v32 = *(void *)(v212 + 8 * v31);
              if (!v32)
              {
                uint64_t v31 = v28 + 5;
                if (v28 + 5 >= v214) {
                  goto LABEL_16;
                }
                unint64_t v32 = *(void *)(v212 + 8 * v31);
                if (!v32)
                {
                  uint64_t v31 = v28 + 6;
                  if (v28 + 6 >= v214)
                  {
LABEL_16:
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release();
                    uint64_t v21 = v201;
                    uint64_t v23 = v205;
                    goto LABEL_17;
                  }
                  unint64_t v32 = *(void *)(v212 + 8 * v31);
                  if (!v32)
                  {
                    do
                    {
                      if (v204 == v28) {
                        goto LABEL_16;
                      }
                      unint64_t v32 = *(void *)(v216 + 8 * v28++ + 120);
                    }
                    while (!v32);
                    uint64_t v31 = v28 + 6;
                  }
                }
              }
            }
          }
        }
        unint64_t v6 = (v32 - 1) & v32;
        unint64_t v30 = __clz(__rbit64(v32)) + (v31 << 6);
        uint64_t v28 = v31;
      }
      uint64_t v33 = 16 * v30;
      int v34 = (uint64_t *)(*(void *)(v216 + 48) + 16 * v30);
      uint64_t v35 = *v34;
      LODWORD(v4) = **(void **)(*(void *)(*(void *)(v216 + 56) + v33 + 8) + 32);
      uint64_t v224 = v34[1];
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v36 = (ValueMetadata *)sub_1B6E32738();
      a1 = &protocol descriptor for Component;
      if (!swift_conformsToProtocol2()) {
        break;
      }
      if (v36 != &type metadata for ColorRampComponent)
      {
        int v4 = (ValueMetadata *)sub_1B6E32738();
        if (!swift_conformsToProtocol2()) {
          goto LABEL_261;
        }
        if (v4 != &type metadata for CurveComponent) {
          goto LABEL_24;
        }
      }
      uint64_t v218 = v28;
      unint64_t v220 = v6;
      uint64_t v37 = *(void *)(v7 + 168);
      uint64_t v226 = v37 + 64;
      uint64_t v38 = 1 << *(unsigned char *)(v37 + 32);
      if (v38 < 64) {
        uint64_t v39 = ~(-1 << v38);
      }
      else {
        uint64_t v39 = -1;
      }
      unint64_t v40 = v39 & *(void *)(v37 + 64);
      int64_t v41 = (unint64_t)(v38 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      uint64_t v42 = 0;
      while (1)
      {
        do
        {
          if (v40)
          {
            unint64_t v43 = __clz(__rbit64(v40));
            v40 &= v40 - 1;
            unint64_t v44 = v43 | (v42 << 6);
          }
          else
          {
            uint64_t v45 = v42 + 1;
            if (v42 + 1 >= v41) {
              goto LABEL_23;
            }
            unint64_t v46 = *(void *)(v226 + 8 * v45);
            if (!v46)
            {
              uint64_t v45 = v42 + 2;
              if (v42 + 2 >= v41) {
                goto LABEL_23;
              }
              unint64_t v46 = *(void *)(v226 + 8 * v45);
              if (!v46)
              {
                uint64_t v45 = v42 + 3;
                if (v42 + 3 >= v41) {
                  goto LABEL_23;
                }
                unint64_t v46 = *(void *)(v226 + 8 * v45);
                if (!v46)
                {
                  uint64_t v45 = v42 + 4;
                  if (v42 + 4 >= v41) {
                    goto LABEL_23;
                  }
                  unint64_t v46 = *(void *)(v226 + 8 * v45);
                  if (!v46)
                  {
                    uint64_t v45 = v42 + 5;
                    if (v42 + 5 >= v41) {
                      goto LABEL_23;
                    }
                    unint64_t v46 = *(void *)(v226 + 8 * v45);
                    if (!v46)
                    {
                      uint64_t v45 = v42 + 6;
                      if (v42 + 6 >= v41)
                      {
LABEL_23:
                        unint64_t v7 = v222;
                        uint64_t v28 = v218;
                        unint64_t v6 = v220;
                        swift_release();
                        swift_bridgeObjectRelease();
LABEL_24:
                        swift_release();
                        swift_bridgeObjectRelease();
                        goto LABEL_25;
                      }
                      unint64_t v46 = *(void *)(v226 + 8 * v45);
                      if (!v46)
                      {
                        do
                        {
                          if (v41 - 7 == v42) {
                            goto LABEL_23;
                          }
                          unint64_t v46 = *(void *)(v37 + 120 + 8 * v42++);
                        }
                        while (!v46);
                        uint64_t v45 = v42 + 6;
                      }
                    }
                  }
                }
              }
            }
            unint64_t v40 = (v46 - 1) & v46;
            unint64_t v44 = __clz(__rbit64(v46)) + (v45 << 6);
            uint64_t v42 = v45;
          }
          uint64_t v47 = *(void *)(*(void *)(v37 + 56) + 8 * v44);
          uint64_t v48 = *(void *)(v47 + 80);
        }
        while (!sub_1B6355ED4(v48));
        uint64_t v49 = *(void *)(v48 + 32);
        uint64_t v50 = *(void *)(v48 + 40);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_1B6A5D700(v49, v50);
        swift_bridgeObjectRelease();
        if (v51)
        {
          uint64_t v53 = v51[5];
          uint64_t v52 = v51[6];
          swift_bridgeObjectRetain();
          swift_release();
          if (v53 == v35 && v52 == v224)
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_79;
          }
          char v55 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if (v55) {
            break;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_release();
LABEL_79:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void *)(v47 + 80);
      unint64_t v7 = v222;
      unint64_t v6 = v220;
      if (!sub_1B6355ED4(v56)
        || (uint64_t v57 = *(void *)(v56 + 32),
            uint64_t v58 = *(void *)(v56 + 40),
            swift_bridgeObjectRetain(),
            uint64_t v59 = sub_1B6A5D700(v57, v58),
            swift_bridgeObjectRelease(),
            !v59))
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v28 = v218;
        continue;
      }
      uint64_t v61 = v59[7];
      unint64_t v60 = v59[8];
      if (v60 == 28)
      {
        uint64_t v209 = v59[7];
        uint64_t v83 = v59[3];
        uint64_t v84 = v59[4];
        long long v244 = xmmword_1B6E9E220;
        uint64_t v246 = 0;
        uint64_t v247 = 0;
        uint64_t v245 = 0;
        swift_bridgeObjectRetain();
        sub_1B6A5D458(v83, v84, (uint64_t)&v244);
        int v85 = sub_1B6A5D700(v83, v84);
        uint64_t v86 = v85[5];
        uint64_t v87 = v85[6];
        swift_bridgeObjectRetain();
        swift_retain();
        char v88 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v229 = *(void *)(v222 + 264);
        *(void *)(v222 + 264) = 0x8000000000000000;
        sub_1B67E67C0((uint64_t)v85, v86, v87, v88);
        *(void *)(v222 + 264) = v229;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain();
        swift_retain();
        uint64_t v89 = swift_bridgeObjectRetain();
        uint64_t v90 = sub_1B6A33600(v89, v222, v47);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v91 = v90 + 64;
        uint64_t v92 = 1 << *(unsigned char *)(v90 + 32);
        if (v92 < 64) {
          uint64_t v93 = ~(-1 << v92);
        }
        else {
          uint64_t v93 = -1;
        }
        unint64_t v94 = v93 & *(void *)(v90 + 64);
        int64_t v95 = (unint64_t)(v92 + 63) >> 6;
        swift_retain();
        uint64_t v96 = 0;
        while (1)
        {
          if (v94)
          {
            unint64_t v97 = __clz(__rbit64(v94));
            v94 &= v94 - 1;
            unint64_t v98 = v97 | (v96 << 6);
          }
          else
          {
            uint64_t v102 = v96 + 1;
            if (v96 + 1 >= v95) {
              goto LABEL_132;
            }
            unint64_t v103 = *(void *)(v91 + 8 * v102);
            if (!v103)
            {
              uint64_t v102 = v96 + 2;
              if (v96 + 2 >= v95) {
                goto LABEL_132;
              }
              unint64_t v103 = *(void *)(v91 + 8 * v102);
              if (!v103)
              {
                uint64_t v102 = v96 + 3;
                if (v96 + 3 >= v95) {
                  goto LABEL_132;
                }
                unint64_t v103 = *(void *)(v91 + 8 * v102);
                if (!v103)
                {
                  uint64_t v102 = v96 + 4;
                  if (v96 + 4 >= v95) {
                    goto LABEL_132;
                  }
                  unint64_t v103 = *(void *)(v91 + 8 * v102);
                  if (!v103)
                  {
                    uint64_t v102 = v96 + 5;
                    if (v96 + 5 >= v95) {
                      goto LABEL_132;
                    }
                    unint64_t v103 = *(void *)(v91 + 8 * v102);
                    if (!v103)
                    {
                      uint64_t v102 = v96 + 6;
                      if (v96 + 6 >= v95)
                      {
LABEL_132:
                        swift_release();
                        swift_release();
                        swift_release();
                        uint64_t v104 = v209;
                        unint64_t v105 = 28;
                        goto LABEL_133;
                      }
                      unint64_t v103 = *(void *)(v91 + 8 * v102);
                      if (!v103)
                      {
                        do
                        {
                          if (v95 - 7 == v96) {
                            goto LABEL_132;
                          }
                          unint64_t v103 = *(void *)(v90 + 120 + 8 * v96++);
                        }
                        while (!v103);
                        uint64_t v102 = v96 + 6;
                      }
                    }
                  }
                }
              }
            }
            unint64_t v94 = (v103 - 1) & v103;
            unint64_t v98 = __clz(__rbit64(v103)) + (v102 << 6);
            uint64_t v96 = v102;
          }
          uint64_t v99 = (uint64_t *)(*(void *)(v90 + 48) + 16 * v98);
          uint64_t v100 = *v99;
          uint64_t v101 = v99[1];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B6CC78E0(v100, v101, v222);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      if (v60 != 37)
      {
        sub_1B629C9E8(v59[7], v59[8]);
        swift_release();
        swift_release();
        sub_1B629DCAC(v61, v60);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v28 = v218;
        continue;
      }
      uint64_t v208 = v59[7];
      uint64_t v62 = v59[3];
      uint64_t v63 = v59[4];
      long long v248 = xmmword_1B6E9E290;
      uint64_t v250 = 0;
      uint64_t v251 = 0;
      uint64_t v249 = 0;
      swift_bridgeObjectRetain();
      sub_1B6A5D458(v62, v63, (uint64_t)&v248);
      uint64_t v64 = sub_1B6A5D700(v62, v63);
      uint64_t v65 = v64[5];
      uint64_t v66 = v64[6];
      swift_bridgeObjectRetain();
      swift_retain();
      char v67 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v228 = *(void *)(v222 + 264);
      *(void *)(v222 + 264) = 0x8000000000000000;
      sub_1B67E67C0((uint64_t)v64, v65, v66, v67);
      *(void *)(v222 + 264) = v228;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_retain();
      uint64_t v68 = swift_bridgeObjectRetain();
      uint64_t v69 = sub_1B6A33600(v68, v222, v47);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v70 = v69 + 64;
      uint64_t v71 = 1 << *(unsigned char *)(v69 + 32);
      if (v71 < 64) {
        uint64_t v72 = ~(-1 << v71);
      }
      else {
        uint64_t v72 = -1;
      }
      unint64_t v73 = v72 & *(void *)(v69 + 64);
      int64_t v74 = (unint64_t)(v71 + 63) >> 6;
      swift_retain();
      uint64_t v75 = 0;
      while (2)
      {
        if (v73)
        {
          unint64_t v76 = __clz(__rbit64(v73));
          v73 &= v73 - 1;
          unint64_t v77 = v76 | (v75 << 6);
LABEL_88:
          uint64_t v78 = (uint64_t *)(*(void *)(v69 + 48) + 16 * v77);
          uint64_t v79 = *v78;
          uint64_t v80 = v78[1];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B6CC7CE4(v79, v80, v222);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          continue;
        }
        break;
      }
      uint64_t v81 = v75 + 1;
      if (v75 + 1 >= v74) {
        goto LABEL_131;
      }
      unint64_t v82 = *(void *)(v70 + 8 * v81);
      if (v82) {
        goto LABEL_105;
      }
      uint64_t v81 = v75 + 2;
      if (v75 + 2 >= v74) {
        goto LABEL_131;
      }
      unint64_t v82 = *(void *)(v70 + 8 * v81);
      if (v82) {
        goto LABEL_105;
      }
      uint64_t v81 = v75 + 3;
      if (v75 + 3 >= v74) {
        goto LABEL_131;
      }
      unint64_t v82 = *(void *)(v70 + 8 * v81);
      if (v82) {
        goto LABEL_105;
      }
      uint64_t v81 = v75 + 4;
      if (v75 + 4 >= v74) {
        goto LABEL_131;
      }
      unint64_t v82 = *(void *)(v70 + 8 * v81);
      if (v82) {
        goto LABEL_105;
      }
      uint64_t v81 = v75 + 5;
      if (v75 + 5 >= v74) {
        goto LABEL_131;
      }
      unint64_t v82 = *(void *)(v70 + 8 * v81);
      if (v82) {
        goto LABEL_105;
      }
      uint64_t v81 = v75 + 6;
      if (v75 + 6 >= v74) {
        goto LABEL_131;
      }
      unint64_t v82 = *(void *)(v70 + 8 * v81);
      if (v82)
      {
LABEL_105:
        unint64_t v73 = (v82 - 1) & v82;
        unint64_t v77 = __clz(__rbit64(v82)) + (v81 << 6);
        uint64_t v75 = v81;
        goto LABEL_88;
      }
      while (v74 - 7 != v75)
      {
        unint64_t v82 = *(void *)(v69 + 120 + 8 * v75++);
        if (v82)
        {
          uint64_t v81 = v75 + 6;
          goto LABEL_105;
        }
      }
LABEL_131:
      swift_release();
      swift_release();
      swift_release();
      uint64_t v104 = v208;
      unint64_t v105 = 37;
LABEL_133:
      sub_1B629DCAC(v104, v105);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v7 = v222;
      uint64_t v28 = v218;
      unint64_t v6 = v220;
    }
    __break(1u);
LABEL_261:
    __break(1u);
LABEL_262:
    __break(1u);
LABEL_263:
    __break(1u);
LABEL_264:
    swift_once();
  }
  sub_1B62CA064((uint64_t)v232);
  return sub_1B632F220(v234, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CAC220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v50 = qword_1EB997A18;
  int v51 = v7;
  char v52 = v6 >> 31;
  uint64_t v53 = 1;
  char v54 = 2;
  uint64_t v55 = 0;
  swift_retain();
  sub_1B63A1C20(1, 1, (uint64_t)v35);
  swift_release();
  v47[0] = v35[0];
  v47[1] = v35[1];
  uint64_t v48 = v36;
  sub_1B62C9DA8(a1, (uint64_t)v47, 0x200000000, v37);
  sub_1B62D8068((uint64_t)v37, (uint64_t)v38, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v38[0]) {
    return (void *)sub_1B62CA064((uint64_t)v35);
  }
  if (v44 <= 0 || (uint64_t v28 = v41) == 0)
  {
    sub_1B62CA064((uint64_t)v35);
    return sub_1B632F220(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v8 = v43[4];
  int v33 = *(unsigned __int8 *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v45[0] = v38[0];
  v45[1] = v38[1];
  uint64_t v46 = v39;
  uint64_t v25 = (uint64_t)(v43 + 6);
  uint64_t v26 = v40;
  int v34 = v43;
  uint64_t v24 = v43 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v27 = v8;
  do
  {
    long long v11 = (unsigned int *)(v26 + 48 * v9);
    uint64_t v30 = *v11;
    uint64_t v31 = v10;
    uint64_t v29 = v11[1];
    uint64_t v12 = (uint64_t *)*((void *)v11 + 2);
    uint64_t v32 = *((void *)v11 + 3);
    uint64_t v14 = *((void *)v11 + 4);
    uint64_t v13 = *((void *)v11 + 5);
    if (v33)
    {
      char v15 = *(os_unfair_lock_s **)(v13 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v15);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    sub_1B62D8068(v25, (uint64_t)v49, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v16 = v34[4];
    uint64_t v17 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v34[6] = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
    v34[7] = v17;
    v24[1] = 0;
    v24[2] = 0;
    *uint64_t v24 = 0;
    swift_release();
    uint64_t v18 = (uint64_t *)sub_1B62C9024((uint64_t)&type metadata for Skybox, (uint64_t)&off_1F0FA1BB0, v12, v32, v14, (uint64_t)v34);
    sub_1B62C9024((uint64_t)&type metadata for IBLGenerator, (uint64_t)&off_1F0F5A5F0, v12, v32, v14, (uint64_t)v34);
    if (v12)
    {
      if (v14)
      {
        uint64_t v10 = v31;
        do
        {
          uint64_t v19 = *v18;
          v18 += 4;
          sub_1B62E364C((uint64_t)&type metadata for TextureRequireMipmapGeneration, (uint64_t)&off_1F0F9AA80, v19);
          --v14;
        }
        while (v14);
        goto LABEL_23;
      }
    }
    else if (v30 != v29)
    {
      uint64_t v20 = &v18[4 * v30];
      uint64_t v21 = v29 - v30;
      uint64_t v10 = v31;
      do
      {
        uint64_t v22 = *v20;
        v20 += 4;
        sub_1B62E364C((uint64_t)&type metadata for TextureRequireMipmapGeneration, (uint64_t)&off_1F0F9AA80, v22);
        --v21;
      }
      while (v21);
      goto LABEL_23;
    }
    uint64_t v10 = v31;
LABEL_23:
    sub_1B6345178(v34, (unsigned __int16 **)v45, (uint64_t)v49);
    sub_1B634507C((char *)v13);
    uint64_t v8 = v27;
    ecs_stack_allocator_pop_snapshot(v27);
    if (v33)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
    }
    swift_release();
    ++v9;
  }
  while (v9 != v28);
  sub_1B62CA064((uint64_t)v35);
  sub_1B632F220(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CAC64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v246 = qword_1EB997A18;
  int v247 = v7;
  char v248 = v6 >> 31;
  uint64_t v249 = 1;
  char v250 = 2;
  uint64_t v251 = 0;
  swift_retain();
  sub_1B62A068C(3, (uint64_t)v231);
  swift_release();
  v243[0] = v231[0];
  v243[1] = v231[1];
  uint64_t v244 = v232;
  sub_1B62C9DA8(a1, (uint64_t)v243, 0x200000000, v233);
  sub_1B62D8068((uint64_t)v233, (uint64_t)v234, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v234[0]) {
    return (void *)sub_1B62CA064((uint64_t)v231);
  }
  if (v240 <= 0 || (uint64_t v208 = v237) == 0)
  {
    sub_1B62CA064((uint64_t)v231);
    return sub_1B632F220(v233, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v8 = v239[4];
  int v211 = *(unsigned __int8 *)(v238 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v241[0] = v234[0];
  v241[1] = v234[1];
  uint64_t v242 = v235;
  uint64_t v205 = (uint64_t)(v239 + 6);
  uint64_t v206 = v236;
  uint64_t v223 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v214 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  uint64_t v212 = v239;
  unint64_t v204 = v239 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v224 = a1;
  uint64_t v207 = v8;
  do
  {
    uint64_t v210 = v9;
    long long v11 = (unsigned int *)(v206 + 48 * v9);
    uint64_t v12 = *v11;
    uint64_t v215 = v11[1];
    uint64_t v14 = (uint64_t *)*((void *)v11 + 2);
    uint64_t v13 = *((void *)v11 + 3);
    uint64_t v16 = *((void *)v11 + 4);
    uint64_t v15 = *((void *)v11 + 5);
    uint64_t v222 = v10;
    if (v211)
    {
      uint64_t v17 = *(os_unfair_lock_s **)(v15 + 376);
      swift_retain();
      os_unfair_lock_lock(v17);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    sub_1B62D8068(v205, (uint64_t)v245, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v18 = v212[4];
    uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v212[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
    v212[7] = v19;
    v204[1] = 0;
    _OWORD v204[2] = 0;
    *unint64_t v204 = 0;
    swift_release();
    uint64_t v209 = v15;
    uint64_t v216 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v14, v13, v16, (uint64_t)v212);
    if (!v14)
    {
      if (v12 == v215) {
        goto LABEL_181;
      }
      uint64_t v120 = v224;
      while (1)
      {
        uint64_t v219 = v12;
        unint64_t v123 = (uint64_t *)(v216 + 88 * v12);
        uint64_t v124 = *v123;
        uint64_t v125 = MEMORY[0x1E4FBC860];
        uint64_t v225 = MEMORY[0x1E4FBC860];
        uint64_t v126 = *(void *)(v124 + 16);
        unint64_t v221 = v123;
        if (v126)
        {
          uint64_t v127 = v124 + 32;
          swift_bridgeObjectRetain();
          uint64_t v128 = 0;
          while (1)
          {
            unint64_t v129 = (unsigned int *)(v127 + 8 * v128);
            uint64_t v130 = v129[1];
            uint64_t v131 = (int)*v129;
            uint64_t v132 = *v129;
            BOOL v133 = v131 == -1 && v130 == 0;
            if (v133 || (v132 & 0x80000000) != 0 || v223[1] <= v131) {
              break;
            }
            uint64_t v134 = *v223;
            uint64_t v135 = *v223 + 12 * (int)v131;
            BOOL v136 = v130 == -1 || *(_DWORD *)(v135 + 8) == v130;
            int v137 = v136;
            if (!v136) {
              goto LABEL_215;
            }
            uint64_t v138 = *(void *)(*(void *)(v120 + 136) + 8 * *(int *)(v134 + 12 * (int)v131) + 32);
            uint64_t v139 = *(void *)(v138 + 48);
            uint64_t v140 = *(void *)(v139 + 16);
            if (!v140) {
              goto LABEL_215;
            }
            uint64_t v141 = *(__int16 *)(v135 + 4);
            uint64_t v142 = (void *)(v139 + 56);
            while ((ValueMetadata *)*(v142 - 3) != &type metadata for GraphScriptingConfig)
            {
              v142 += 5;
              if (!--v140) {
                goto LABEL_215;
              }
            }
            if (*(void *)(*(void *)(*(void *)(v138 + 128) + *v142 + 32 * v141 + 8) + 16))
            {
LABEL_215:
              LOBYTE(v229) = 0;
              char v230 = 0;
              if (v137)
              {
                uint64_t v146 = *(void *)(*(void *)(*(void *)(*(void *)(v120 + 80)
                                                         + 8 * *(__int16 *)(v134 + 12 * (int)v131 + 6)
                                                         + 32)
                                             + 16)
                                 + 32);
                uint64_t v147 = *(void *)(v146 + 16);
                if (v147)
                {
                  swift_retain();
                  swift_retain();
                  uint64_t v148 = (uint64_t *)(v146 + 40);
                  do
                  {
                    sub_1B6CC6A34((ValueMetadata *)*(v148 - 1), *v148, &v230, &v229);
                    v148 += 2;
                    --v147;
                  }
                  while (v147);
                  swift_release();
                  swift_release();
                  uint64_t v120 = v224;
                  if (v229) {
                    goto LABEL_209;
                  }
                }
                else
                {
                  uint64_t v120 = v224;
                }
              }
LABEL_208:
              sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v132 | (v130 << 32), 0);
LABEL_209:
              unint64_t v143 = v131 | ((unint64_t)v130 << 32);
              if ((v230 & 1) == 0) {
                sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v143, 0);
              }
              sub_1B691D98C();
              uint64_t v144 = *(void *)(v225 + 16);
              sub_1B691DA48(v144);
              uint64_t v145 = sub_1B691DACC(v144, v143);
              nullsub_1(v145);
              goto LABEL_212;
            }
            sub_1B69DE144(v132 | (v130 << 32));
LABEL_212:
            if (++v128 == v126)
            {
              swift_bridgeObjectRelease();
              uint64_t v149 = v225;
              unint64_t v123 = v221;
              uint64_t v125 = MEMORY[0x1E4FBC860];
              goto LABEL_224;
            }
          }
          char v230 = 0;
          goto LABEL_208;
        }
        uint64_t v149 = MEMORY[0x1E4FBC860];
LABEL_224:
        swift_bridgeObjectRelease();
        *unint64_t v123 = v149;
        uint64_t v150 = v123[1];
        uint64_t v229 = v125;
        uint64_t v151 = *(void *)(v150 + 16);
        uint64_t v152 = v223;
        if (v151)
        {
          uint64_t v153 = v150 + 32;
          swift_bridgeObjectRetain();
          uint64_t v154 = 0;
          uint64_t v155 = v224;
          while (1)
          {
            unint64_t v156 = (unsigned int *)(v153 + 8 * v154);
            uint64_t v157 = v156[1];
            uint64_t v158 = (int)*v156;
            uint64_t v159 = *v156;
            if (v158 == -1 && v157 == 0)
            {
              char v230 = 0;
              goto LABEL_242;
            }
            if ((v159 & 0x80000000) != 0
              || v152[1] <= v158
              || (v157 != -1 ? (BOOL v161 = *(_DWORD *)(*v152 + 12 * (int)v158 + 8) == v157) : (BOOL v161 = 1),
                  !v161))
            {
              LOBYTE(v225) = 0;
              char v230 = 0;
              if ((v159 & 0x80000000) == 0) {
                goto LABEL_250;
              }
              goto LABEL_242;
            }
            uint64_t v162 = (unsigned int *)(*v152 + 12 * (int)v158);
            sub_1B6963C10(*(void *)(*(void *)(v155 + 136) + 8 * (int)*v162 + 32), *v162 | ((unint64_t)*((unsigned __int16 *)v162 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v162 + 2) << 32), 32, v155, (uint64_t)&v225);
            if (!v226) {
              break;
            }
            uint64_t v163 = v226[2];
            sub_1B677C3D4(v225, (uint64_t)v226);
            if (v163)
            {
              LOBYTE(v225) = 0;
              char v230 = 0;
              uint64_t v152 = v223;
              uint64_t v155 = v224;
              if ((v159 & 0x80000000) != 0) {
                goto LABEL_242;
              }
LABEL_250:
              if (v152[1] > v158 && (v157 == -1 || *(_DWORD *)(*v152 + 12 * (int)v158 + 8) == v157))
              {
                uint64_t v169 = *(void *)(*(void *)(*(void *)(*(void *)(v155 + 80)
                                                         + 8 * *(__int16 *)(*v152 + 12 * (int)v158 + 6)
                                                         + 32)
                                             + 16)
                                 + 32);
                uint64_t v170 = *(void *)(v169 + 16);
                if (!v170)
                {
                  uint64_t v155 = v224;
                  goto LABEL_242;
                }
                swift_retain();
                swift_retain();
                uint64_t v171 = (uint64_t *)(v169 + 40);
                do
                {
                  sub_1B6CC6A34((ValueMetadata *)*(v171 - 1), *v171, &v230, &v225);
                  v171 += 2;
                  --v170;
                }
                while (v170);
                swift_release();
                swift_release();
                uint64_t v152 = v223;
                uint64_t v155 = v224;
                if (v225)
                {
LABEL_243:
                  if (v230 == 1)
                  {
                    unint64_t v164 = v158 | ((unint64_t)v157 << 32);
                  }
                  else
                  {
                    char v165 = sub_1B62C91B0();
                    unint64_t v164 = v159 | (v157 << 32);
                    sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v164, v165 & 1);
                  }
                  sub_1B691D98C();
                  uint64_t v166 = *(void *)(v229 + 16);
                  sub_1B691DA48(v166);
                  uint64_t v167 = sub_1B691DACC(v166, v164);
                  nullsub_1(v167);
                  goto LABEL_247;
                }
              }
LABEL_242:
              sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v159 | (v157 << 32), 0);
              goto LABEL_243;
            }
            uint64_t v155 = v224;
            sub_1B69DE144(v159 | (v157 << 32));
            uint64_t v152 = v223;
LABEL_247:
            if (++v154 == v151)
            {
              swift_bridgeObjectRelease();
              uint64_t v172 = v229;
              uint64_t v173 = v221;
              uint64_t v125 = MEMORY[0x1E4FBC860];
              goto LABEL_266;
            }
          }
          LOBYTE(v225) = 0;
          char v230 = 0;
          uint64_t v152 = v223;
          if ((v159 & 0x80000000) == 0) {
            goto LABEL_250;
          }
          goto LABEL_242;
        }
        uint64_t v172 = v125;
        uint64_t v173 = v221;
LABEL_266:
        swift_bridgeObjectRelease();
        v173[1] = v172;
        uint64_t v174 = v173[2];
        uint64_t v229 = v125;
        uint64_t v175 = *(void *)(v174 + 16);
        if (v175) {
          break;
        }
        uint64_t v191 = v125;
        uint64_t v122 = v221;
LABEL_291:
        swift_bridgeObjectRelease();
        _OWORD v122[2] = v191;
        uint64_t v192 = v122[3];
        uint64_t v229 = v125;
        uint64_t v193 = *(void *)(v192 + 16);
        if (v193)
        {
          swift_bridgeObjectRetain();
          uint64_t v194 = v192 + 36;
          do
          {
            uint64_t v197 = *(void *)(v194 - 4);
            sub_1B695E090(v197, (uint64_t)&v225);
            uint64_t v198 = v226;
            if (v226 && (uint64_t v199 = v225, v200 = sub_1B685223C((uint64_t)v226), sub_1B677C3D4(v199, (uint64_t)v198), v200))
            {
              sub_1B69DE144(v197);
            }
            else
            {
              LOBYTE(v225) = 0;
              char v230 = 0;
              sub_1B6BF8E20(v197, v224, &v230, &v225);
              if ((v225 & 1) == 0)
              {
                char v201 = sub_1B62C91B0();
                sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v197, v201 & 1);
              }
              if ((v230 & 1) == 0)
              {
                char v202 = sub_1B62C91B0();
                sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v197, v202 & 1);
              }
              sub_1B691D98C();
              uint64_t v195 = *(void *)(v229 + 16);
              sub_1B691DA48(v195);
              uint64_t v196 = sub_1B691DACC(v195, v197);
              nullsub_1(v196);
            }
            v194 += 8;
            --v193;
          }
          while (v193);
          swift_bridgeObjectRelease();
          uint64_t v121 = v229;
          uint64_t v122 = v221;
        }
        else
        {
          uint64_t v121 = v125;
        }
        uint64_t v12 = v219 + 1;
        swift_bridgeObjectRelease();
        v122[3] = v121;
        uint64_t v120 = v224;
        if (v219 + 1 == v215) {
          goto LABEL_181;
        }
      }
      uint64_t v176 = (unsigned int *)(swift_bridgeObjectRetain() + 36);
      while (1)
      {
        uint64_t v177 = (int)*(v176 - 1);
        uint64_t v178 = *v176;
        uint64_t v179 = *(v176 - 1);
        BOOL v180 = v177 == -1 && v178 == 0;
        if (v180 || (v177 & 0x80000000) != 0 || v152[1] <= v177) {
          goto LABEL_283;
        }
        if (v178 != -1 && *(_DWORD *)(*v152 + 12 * (int)v177 + 8) != v178) {
          goto LABEL_283;
        }
        uint64_t v182 = (unsigned int *)(*v152 + 12 * (int)v177);
        sub_1B6963C10(*(void *)(*(void *)(v224 + 136) + 8 * (int)*v182 + 32), *v182 | ((unint64_t)*((unsigned __int16 *)v182 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v182+ 2) << 32), 32, v224, (uint64_t)&v225);
        uint64_t v183 = v226;
        if (!v226) {
          break;
        }
        uint64_t v184 = v225;
        BOOL v185 = sub_1B685223C((uint64_t)v226);
        sub_1B677C3D4(v184, (uint64_t)v183);
        uint64_t v152 = v223;
        if (!v185) {
          goto LABEL_283;
        }
        sub_1B69DE144(v179 | (v178 << 32));
LABEL_288:
        v176 += 2;
        if (!--v175)
        {
          swift_bridgeObjectRelease();
          uint64_t v191 = v229;
          uint64_t v122 = v221;
          uint64_t v125 = MEMORY[0x1E4FBC860];
          goto LABEL_291;
        }
      }
      uint64_t v152 = v223;
LABEL_283:
      LOBYTE(v225) = 0;
      char v230 = 0;
      uint64_t v186 = v179 | (v178 << 32);
      sub_1B6BF8E20(v186, v224, &v230, &v225);
      if ((v225 & 1) == 0)
      {
        char v187 = sub_1B62C91B0();
        sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v186, v187 & 1);
      }
      if ((v230 & 1) == 0)
      {
        char v188 = sub_1B62C91B0();
        sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v186, v188 & 1);
      }
      sub_1B691D98C();
      uint64_t v189 = *(void *)(v229 + 16);
      sub_1B691DA48(v189);
      uint64_t v190 = sub_1B691DACC(v189, v186);
      nullsub_1(v190);
      goto LABEL_288;
    }
    uint64_t v20 = v223;
    if (v16)
    {
      uint64_t v21 = 0;
      uint64_t v22 = v224;
      uint64_t v213 = v16;
      do
      {
        uint64_t v218 = v21;
        unint64_t v220 = (void *)(v216 + 88 * v21);
        uint64_t v24 = *v220;
        uint64_t v25 = MEMORY[0x1E4FBC860];
        uint64_t v229 = MEMORY[0x1E4FBC860];
        uint64_t v26 = *(void *)(v24 + 16);
        if (v26)
        {
          uint64_t v27 = v24 + 32;
          swift_bridgeObjectRetain();
          uint64_t v28 = 0;
          uint64_t v217 = v27;
          while (1)
          {
            uint64_t v29 = (unsigned int *)(v27 + 8 * v28);
            uint64_t v30 = v29[1];
            uint64_t v31 = (int)*v29;
            uint64_t v32 = *v29;
            if (v31 == -1 && v30 == 0)
            {
LABEL_66:
              unint64_t v53 = v32 | (v30 << 32);
              sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v53, 0);
              goto LABEL_67;
            }
            if ((v32 & 0x80000000) != 0 || v223[1] <= v31)
            {
              char v230 = 0;
              v228[0] = 0;
              if ((v32 & 0x80000000) != 0) {
                goto LABEL_64;
              }
            }
            else
            {
              uint64_t v34 = *v223;
              uint64_t v35 = *v223 + 12 * (int)v31;
              BOOL v36 = v30 == -1 || *(_DWORD *)(v35 + 8) == v30;
              int v37 = v36;
              if (v36)
              {
                uint64_t v38 = *(void *)(*(void *)(v22 + 136) + 8 * *(int *)(v34 + 12 * (int)v31) + 32);
                uint64_t v39 = *(void *)(v38 + 48);
                uint64_t v40 = *(void *)(v39 + 16);
                if (v40)
                {
                  uint64_t v41 = *(__int16 *)(v35 + 4);
                  uint64_t v42 = (void *)(v39 + 56);
                  while ((ValueMetadata *)*(v42 - 3) != &type metadata for GraphScriptingConfig)
                  {
                    v42 += 5;
                    if (!--v40) {
                      goto LABEL_43;
                    }
                  }
                  if (!*(void *)(*(void *)(*(void *)(v38 + 128) + *v42 + 32 * v41 + 8) + 16))
                  {
                    sub_1B69DE144(v32 | (v30 << 32));
                    goto LABEL_68;
                  }
                }
              }
LABEL_43:
              char v230 = 0;
              v228[0] = 0;
              if (v37)
              {
                uint64_t v43 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 80)
                                                        + 8 * *(__int16 *)(v34 + 12 * (int)v31 + 6)
                                                        + 32)
                                            + 16)
                                + 32);
                uint64_t v44 = *(void *)(v43 + 16);
                if (!v44)
                {
                  uint64_t v22 = v224;
                  if ((v32 & 0x80000000) != 0) {
                    goto LABEL_64;
                  }
                  goto LABEL_49;
                }
                swift_retain();
                swift_retain();
                uint64_t v45 = (uint64_t *)(v43 + 40);
                do
                {
                  sub_1B6CC6A34((ValueMetadata *)*(v45 - 1), *v45, v228, &v230);
                  v45 += 2;
                  --v44;
                }
                while (v44);
                swift_release();
                swift_release();
                uint64_t v22 = v224;
                if (v230) {
                  goto LABEL_64;
                }
              }
              if ((v32 & 0x80000000) != 0) {
                goto LABEL_64;
              }
            }
LABEL_49:
            if (v223[1] > v31)
            {
              uint64_t v46 = *v223;
              if (v30 == -1 || *(_DWORD *)(v46 + 12 * (int)v31 + 8) == v30)
              {
                uint64_t v47 = (int *)(v46 + 12 * (int)v31);
                uint64_t v48 = *((__int16 *)v47 + 2);
                uint64_t v49 = *(void *)(*(void *)(v22 + 136) + 8 * *v47 + 32);
                if (*(void *)(v49 + 232) <= v48 && *(void *)(v49 + 240) > v48)
                {
                  uint64_t v51 = **(void **)(v22 + v214);
                  char v52 = *(os_unfair_lock_s **)(v49 + 344);
                  swift_retain();
                  os_unfair_lock_lock(v52);
                  ecs_stack_allocator_push_snapshot(*(void *)(v51 + 32));
                  if (sub_1B62FACF8((uint64_t)&type metadata for Parent))
                  {
                    uint64_t v225 = (uint64_t)&type metadata for Parent;
                    uint64_t v226 = &off_1F0FA0430;
                    char v227 = 1;
                    swift_retain();
                    sub_1B63B2A48(v51 + 104, (uint64_t)&v225, v48, 0, v49, v51);
                    sub_1B6391400((uint64_t)&v225);
                  }
                  else
                  {
                    swift_retain();
                  }
                  sub_1B634507C((char *)v49);
                  swift_release();
                  ecs_stack_allocator_pop_snapshot(*(void *)(v51 + 32));
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 344));
                  swift_release();
                  uint64_t v27 = v217;
                }
              }
            }
LABEL_64:
            if (v228[0] != 1) {
              goto LABEL_66;
            }
            unint64_t v53 = v31 | ((unint64_t)v30 << 32);
LABEL_67:
            sub_1B691D98C();
            uint64_t v54 = *(void *)(v229 + 16);
            sub_1B691DA48(v54);
            uint64_t v55 = sub_1B691DACC(v54, v53);
            nullsub_1(v55);
LABEL_68:
            if (++v28 == v26)
            {
              swift_bridgeObjectRelease();
              uint64_t v56 = v229;
              uint64_t v57 = v220;
              uint64_t v20 = v223;
              uint64_t v25 = MEMORY[0x1E4FBC860];
              goto LABEL_72;
            }
          }
        }
        uint64_t v56 = MEMORY[0x1E4FBC860];
        uint64_t v57 = (void *)(v216 + 88 * v21);
LABEL_72:
        swift_bridgeObjectRelease();
        *uint64_t v57 = v56;
        uint64_t v58 = v57[1];
        uint64_t v229 = v25;
        uint64_t v59 = *(void *)(v58 + 16);
        if (v59)
        {
          uint64_t v60 = v58 + 32;
          swift_bridgeObjectRetain();
          uint64_t v61 = 0;
          uint64_t v62 = v224;
          while (1)
          {
            uint64_t v63 = (unsigned int *)(v60 + 8 * v61);
            uint64_t v64 = v63[1];
            uint64_t v65 = (int)*v63;
            uint64_t v66 = *v63;
            if (v65 == -1 && v64 == 0)
            {
              char v230 = 0;
              goto LABEL_90;
            }
            if ((v66 & 0x80000000) != 0
              || v20[1] <= v65
              || (v64 != -1 ? (BOOL v68 = *(_DWORD *)(*v20 + 12 * (int)v65 + 8) == v64) : (BOOL v68 = 1), !v68))
            {
              LOBYTE(v225) = 0;
              char v230 = 0;
              if ((v66 & 0x80000000) == 0) {
                goto LABEL_98;
              }
              goto LABEL_90;
            }
            uint64_t v69 = (unsigned int *)(*v20 + 12 * (int)v65);
            sub_1B6963C10(*(void *)(*(void *)(v62 + 136) + 8 * (int)*v69 + 32), *v69 | ((unint64_t)*((unsigned __int16 *)v69 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v69 + 2) << 32), 32, v62, (uint64_t)&v225);
            if (!v226) {
              break;
            }
            uint64_t v70 = v226[2];
            sub_1B677C3D4(v225, (uint64_t)v226);
            if (v70)
            {
              LOBYTE(v225) = 0;
              char v230 = 0;
              uint64_t v20 = v223;
              uint64_t v62 = v224;
              if ((v66 & 0x80000000) != 0) {
                goto LABEL_90;
              }
LABEL_98:
              if (v20[1] > v65 && (v64 == -1 || *(_DWORD *)(*v20 + 12 * (int)v65 + 8) == v64))
              {
                uint64_t v76 = *(void *)(*(void *)(*(void *)(*(void *)(v62 + 80)
                                                        + 8 * *(__int16 *)(*v20 + 12 * (int)v65 + 6)
                                                        + 32)
                                            + 16)
                                + 32);
                uint64_t v77 = *(void *)(v76 + 16);
                if (!v77)
                {
                  uint64_t v62 = v224;
                  goto LABEL_90;
                }
                swift_retain();
                swift_retain();
                uint64_t v78 = (uint64_t *)(v76 + 40);
                do
                {
                  sub_1B6CC6A34((ValueMetadata *)*(v78 - 1), *v78, &v230, &v225);
                  v78 += 2;
                  --v77;
                }
                while (v77);
                swift_release();
                swift_release();
                uint64_t v20 = v223;
                uint64_t v62 = v224;
                if (v225)
                {
LABEL_91:
                  if (v230 == 1)
                  {
                    unint64_t v71 = v65 | ((unint64_t)v64 << 32);
                  }
                  else
                  {
                    char v72 = sub_1B62C91B0();
                    unint64_t v71 = v66 | (v64 << 32);
                    sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v71, v72 & 1);
                  }
                  sub_1B691D98C();
                  uint64_t v73 = *(void *)(v229 + 16);
                  sub_1B691DA48(v73);
                  uint64_t v74 = sub_1B691DACC(v73, v71);
                  nullsub_1(v74);
                  goto LABEL_95;
                }
              }
LABEL_90:
              sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v66 | (v64 << 32), 0);
              goto LABEL_91;
            }
            uint64_t v62 = v224;
            sub_1B69DE144(v66 | (v64 << 32));
            uint64_t v20 = v223;
LABEL_95:
            if (++v61 == v59)
            {
              swift_bridgeObjectRelease();
              uint64_t v79 = v229;
              uint64_t v57 = v220;
              uint64_t v25 = MEMORY[0x1E4FBC860];
              goto LABEL_114;
            }
          }
          LOBYTE(v225) = 0;
          char v230 = 0;
          uint64_t v20 = v223;
          if ((v66 & 0x80000000) == 0) {
            goto LABEL_98;
          }
          goto LABEL_90;
        }
        uint64_t v79 = v25;
LABEL_114:
        swift_bridgeObjectRelease();
        v57[1] = v79;
        uint64_t v80 = v57[2];
        uint64_t v229 = v25;
        uint64_t v81 = *(void *)(v80 + 16);
        if (v81)
        {
          uint64_t v82 = v80 + 32;
          swift_bridgeObjectRetain();
          uint64_t v83 = 0;
          uint64_t v84 = v224;
          while (1)
          {
            int v85 = (unsigned int *)(v82 + 8 * v83);
            uint64_t v86 = v85[1];
            uint64_t v87 = (int)*v85;
            uint64_t v88 = *v85;
            if (v87 == -1 && v86 == 0)
            {
              char v230 = 0;
              goto LABEL_132;
            }
            if ((v88 & 0x80000000) != 0
              || v20[1] <= v87
              || (v86 != -1 ? (BOOL v90 = *(_DWORD *)(*v20 + 12 * (int)v87 + 8) == v86) : (BOOL v90 = 1), !v90))
            {
              LOBYTE(v225) = 0;
              char v230 = 0;
              if ((v88 & 0x80000000) == 0) {
                goto LABEL_140;
              }
              goto LABEL_132;
            }
            uint64_t v91 = (unsigned int *)(*v20 + 12 * (int)v87);
            sub_1B6963C10(*(void *)(*(void *)(v84 + 136) + 8 * (int)*v91 + 32), *v91 | ((unint64_t)*((unsigned __int16 *)v91 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v91 + 2) << 32), 32, v84, (uint64_t)&v225);
            if (!v226) {
              break;
            }
            uint64_t v92 = v226[2];
            sub_1B677C3D4(v225, (uint64_t)v226);
            if (v92)
            {
              LOBYTE(v225) = 0;
              char v230 = 0;
              uint64_t v20 = v223;
              uint64_t v84 = v224;
              if ((v88 & 0x80000000) != 0) {
                goto LABEL_132;
              }
LABEL_140:
              if (v20[1] > v87 && (v86 == -1 || *(_DWORD *)(*v20 + 12 * (int)v87 + 8) == v86))
              {
                uint64_t v99 = *(void *)(*(void *)(*(void *)(*(void *)(v84 + 80)
                                                        + 8 * *(__int16 *)(*v20 + 12 * (int)v87 + 6)
                                                        + 32)
                                            + 16)
                                + 32);
                uint64_t v100 = *(void *)(v99 + 16);
                if (!v100)
                {
                  uint64_t v84 = v224;
                  goto LABEL_132;
                }
                swift_retain();
                swift_retain();
                uint64_t v101 = (uint64_t *)(v99 + 40);
                do
                {
                  sub_1B6CC6A34((ValueMetadata *)*(v101 - 1), *v101, &v230, &v225);
                  v101 += 2;
                  --v100;
                }
                while (v100);
                swift_release();
                swift_release();
                uint64_t v20 = v223;
                uint64_t v84 = v224;
                if (v225)
                {
LABEL_133:
                  if (v230 == 1)
                  {
                    unint64_t v94 = v87 | ((unint64_t)v86 << 32);
                  }
                  else
                  {
                    char v95 = sub_1B62C91B0();
                    unint64_t v94 = v88 | (v86 << 32);
                    sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v94, v95 & 1);
                  }
                  sub_1B691D98C();
                  uint64_t v96 = *(void *)(v229 + 16);
                  sub_1B691DA48(v96);
                  uint64_t v97 = sub_1B691DACC(v96, v94);
                  nullsub_1(v97);
                  goto LABEL_137;
                }
              }
LABEL_132:
              char v93 = sub_1B62C91B0();
              sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v88 | (v86 << 32), v93 & 1);
              goto LABEL_133;
            }
            uint64_t v84 = v224;
            sub_1B69DE144(v88 | (v86 << 32));
            uint64_t v20 = v223;
LABEL_137:
            if (++v83 == v81)
            {
              swift_bridgeObjectRelease();
              uint64_t v102 = v229;
              uint64_t v57 = v220;
              uint64_t v25 = MEMORY[0x1E4FBC860];
              goto LABEL_156;
            }
          }
          LOBYTE(v225) = 0;
          char v230 = 0;
          uint64_t v20 = v223;
          if ((v88 & 0x80000000) == 0) {
            goto LABEL_140;
          }
          goto LABEL_132;
        }
        uint64_t v102 = v25;
LABEL_156:
        swift_bridgeObjectRelease();
        v57[2] = v102;
        uint64_t v103 = v57[3];
        uint64_t v229 = v25;
        uint64_t v104 = *(void *)(v103 + 16);
        if (!v104)
        {
          uint64_t v23 = v25;
          goto LABEL_18;
        }
        unint64_t v105 = (unsigned int *)(swift_bridgeObjectRetain() + 36);
        do
        {
          uint64_t v106 = (int)*(v105 - 1);
          uint64_t v107 = *v105;
          uint64_t v108 = *(v105 - 1);
          BOOL v109 = v106 == -1 && v107 == 0;
          if (!v109
            && (v106 & 0x80000000) == 0
            && v20[1] > v106
            && (v107 == -1 || *(_DWORD *)(*v20 + 12 * (int)v106 + 8) == v107))
          {
            unint64_t v111 = (unsigned int *)(*v20 + 12 * (int)v106);
            sub_1B6963C10(*(void *)(*(void *)(v224 + 136) + 8 * (int)*v111 + 32), *v111 | ((unint64_t)*((unsigned __int16 *)v111 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v111 + 2) << 32), 32, v224, (uint64_t)&v225);
            unint64_t v112 = v226;
            if (v226)
            {
              uint64_t v113 = v225;
              BOOL v114 = sub_1B685223C((uint64_t)v226);
              sub_1B677C3D4(v113, (uint64_t)v112);
              uint64_t v20 = v223;
              if (v114)
              {
                sub_1B69DE144(v108 | (v107 << 32));
                goto LABEL_178;
              }
            }
            else
            {
              uint64_t v20 = v223;
            }
          }
          LOBYTE(v225) = 0;
          char v230 = 0;
          uint64_t v115 = v108 | (v107 << 32);
          sub_1B6BF8E20(v115, v224, &v230, &v225);
          if ((v225 & 1) == 0)
          {
            char v116 = sub_1B62C91B0();
            sub_1B62E280C((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v115, v116 & 1);
          }
          if ((v230 & 1) == 0)
          {
            char v117 = sub_1B62C91B0();
            sub_1B62E280C((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A5E0, v115, v117 & 1);
          }
          sub_1B691D98C();
          uint64_t v118 = *(void *)(v229 + 16);
          sub_1B691DA48(v118);
          uint64_t v119 = sub_1B691DACC(v118, v115);
          nullsub_1(v119);
LABEL_178:
          v105 += 2;
          --v104;
        }
        while (v104);
        swift_bridgeObjectRelease();
        uint64_t v23 = v229;
        uint64_t v57 = v220;
LABEL_18:
        swift_bridgeObjectRelease();
        v57[3] = v23;
        uint64_t v21 = v218 + 1;
        uint64_t v22 = v224;
      }
      while (v218 + 1 != v213);
    }
LABEL_181:
    uint64_t v10 = v222;
    sub_1B6345178(v212, (unsigned __int16 **)v241, (uint64_t)v245);
    sub_1B634507C((char *)v209);
    uint64_t v8 = v207;
    ecs_stack_allocator_pop_snapshot(v207);
    if (v211)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v209 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v209 + 376));
    }
    swift_release();
    uint64_t v9 = v210 + 1;
  }
  while (v210 + 1 != v208);
  sub_1B62CA064((uint64_t)v231);
  sub_1B632F220(v233, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v233, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void sub_1B6CADD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x10000000000) != 0)
  {
    sub_1B6CC6AFC(0.0078125, (float32x4_t)xmmword_1B6EBF1B0, 7368532, 0xE300000000000000, a1);
    sub_1B6CC6AFC(-0.0078125, (float32x4_t)xmmword_1B6EBF1C0, 0x6D6F74746F42, 0xE600000000000000, a1);
    sub_1B6CC6AFC(COERCE_DOUBLE(3212836864), (float32x4_t)xmmword_1B6EBF1D0, 1952867660, 0xE400000000000000, a1);
    sub_1B6CC6AFC(COERCE_DOUBLE(1065353216), (float32x4_t)xmmword_1B6EBF1E0, 0x7468676952, 0xE500000000000000, a1);
    sub_1B6CC6AFC(0.0, (float32x4_t)0, 0x746E6F7246, 0xE500000000000000, a1);
    sub_1B6CC6AFC(0.0, (float32x4_t)xmmword_1B6EBF1F0, 1801675074, 0xE400000000000000, a1);
  }
}

void *sub_1B6CADE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v127 = qword_1EB997A18;
  int v128 = v7;
  char v129 = v6 >> 31;
  uint64_t v130 = 1;
  char v131 = 2;
  uint64_t v132 = 0;
  swift_retain();
  sub_1B63AC2E8(3, (uint64_t)v112);
  swift_release();
  v124[0] = v112[0];
  v124[1] = v112[1];
  uint64_t v125 = v113;
  sub_1B62C9DA8(a1, (uint64_t)v124, 0x200000000, v114);
  sub_1B62D8068((uint64_t)v114, (uint64_t)v115, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v115[0]) {
    return (void *)sub_1B62CA064((uint64_t)v112);
  }
  if (v121 > 0 && (uint64_t v98 = v118) != 0)
  {
    uint64_t v8 = v120;
    uint64_t v9 = v120[4];
    int v10 = *(unsigned __int8 *)(v119 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v122[0] = v115[0];
    v122[1] = v115[1];
    uint64_t v123 = v116;
    uint64_t v93 = (uint64_t)(v120 + 6);
    uint64_t v94 = v117;
    uint64_t v92 = v120 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = 0;
    uint64_t v96 = v9;
    uint64_t v97 = v8;
    int v95 = v10;
    do
    {
      uint64_t v99 = v11;
      uint64_t v12 = (unsigned int *)(v94 + 48 * v11);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = (uint64_t *)*((void *)v12 + 2);
      uint64_t v16 = *((void *)v12 + 3);
      uint64_t v17 = *((void *)v12 + 5);
      uint64_t v102 = *((void *)v12 + 4);
      if (v10)
      {
        uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
        swift_retain();
        os_unfair_lock_lock(v18);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v9);
      sub_1B62D8068(v93, (uint64_t)v126, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v19 = v8[4];
      uint64_t v101 = v17;
      uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
      v8[7] = v20;
      v92[1] = 0;
      _OWORD v92[2] = 0;
      *uint64_t v92 = 0;
      swift_release();
      uint64_t v21 = v102;
      uint64_t v105 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v15, v16, v102, (uint64_t)v8);
      if (v15)
      {
        uint64_t v22 = MEMORY[0x1E4FBC860];
        if (v102)
        {
          uint64_t v23 = 0;
          do
          {
            uint64_t v24 = v105 + (v23 << 6);
            if (*(void *)(v24 + 40))
            {
              swift_bridgeObjectRelease();
              *(void *)(v24 + 40) = v22;
            }
            swift_bridgeObjectRelease();
            *(void *)(v24 + 48) = v22;
            uint64_t v25 = *(void *)(v24 + 40);
            if (v25)
            {
              uint64_t v26 = *(void *)(v25 + 16);
              if (v26)
              {
                uint64_t v103 = v23;
                uint64_t v27 = v25 + 32;
                swift_bridgeObjectRetain_n();
                uint64_t v28 = 0;
                uint64_t v106 = v27;
                uint64_t v108 = v26;
                do
                {
                  uint64_t v29 = *(void *)(v24 + 8);
                  if (*(void *)(v29 + 16))
                  {
                    uint64_t v30 = (uint64_t *)(v27 + 24 * v28);
                    uint64_t v32 = v30[1];
                    uint64_t v31 = v30[2];
                    uint64_t v33 = *v30;
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain();
                    uint64_t v34 = sub_1B62B2CE0(v33, v32);
                    if (v35)
                    {
                      BOOL v36 = (uint64_t *)(*(void *)(v29 + 56) + 16 * v34);
                      uint64_t v37 = *v36;
                      uint64_t v110 = v36[1];
                      swift_retain();
                      swift_bridgeObjectRelease();
                      uint64_t v38 = *(void *)(v31 + 16);
                      if (v38)
                      {
                        swift_bridgeObjectRetain_n();
                        uint64_t v39 = (uint64_t *)(v31 + 40);
                        uint64_t v40 = (void *)MEMORY[0x1E4FBC860];
                        do
                        {
                          uint64_t v41 = *(void *)v24;
                          if (*(void *)(*(void *)v24 + 16))
                          {
                            uint64_t v42 = *(v39 - 1);
                            uint64_t v43 = *v39;
                            swift_bridgeObjectRetain_n();
                            uint64_t v44 = sub_1B62B2CE0(v42, v43);
                            if (v45)
                            {
                              uint64_t v46 = (uint64_t *)(*(void *)(v41 + 56) + 16 * v44);
                              uint64_t v47 = *v46;
                              uint64_t v48 = v46[1];
                              swift_retain();
                              swift_bridgeObjectRelease_n();
                              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                                uint64_t v40 = sub_1B68C3F64(0, v40[2] + 1, 1, v40);
                              }
                              unint64_t v50 = v40[2];
                              unint64_t v49 = v40[3];
                              if (v50 >= v49 >> 1) {
                                uint64_t v40 = sub_1B68C3F64(v49 > 1, v50 + 1, 1, v40);
                              }
                              void v40[2] = v50 + 1;
                              uint64_t v51 = &v40[2 * v50];
                              v51[4] = v47;
                              v51[5] = v48;
                            }
                            else
                            {
                              swift_bridgeObjectRelease_n();
                            }
                          }
                          v39 += 2;
                          --v38;
                        }
                        while (v38);
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
                        uint64_t v40 = (void *)MEMORY[0x1E4FBC860];
                      }
                      char v52 = *(void **)(v24 + 48);
                      swift_retain();
                      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)(v24 + 48) = v52;
                      uint64_t v27 = v106;
                      uint64_t v26 = v108;
                      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                      {
                        char v52 = sub_1B68C3E34(0, v52[2] + 1, 1, v52);
                        *(void *)(v24 + 48) = v52;
                      }
                      unint64_t v55 = v52[2];
                      unint64_t v54 = v52[3];
                      if (v55 >= v54 >> 1)
                      {
                        char v52 = sub_1B68C3E34(v54 > 1, v55 + 1, 1, v52);
                        *(void *)(v24 + 48) = v52;
                      }
                      v52[2] = v55 + 1;
                      uint64_t v56 = &v52[3 * v55];
                      v56[4] = v37;
                      v56[5] = v110;
                      v56[6] = v40;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_release();
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease_n();
                    }
                  }
                  ++v28;
                }
                while (v28 != v26);
                swift_bridgeObjectRelease_n();
                uint64_t v22 = MEMORY[0x1E4FBC860];
                uint64_t v21 = v102;
                uint64_t v23 = v103;
              }
            }
            *(unsigned char *)(v24 + 56) = 1;
            ++v23;
          }
          while (v23 != v21);
        }
      }
      else
      {
        uint64_t v57 = MEMORY[0x1E4FBC860];
        if (v13 != v14)
        {
          uint64_t v100 = v14;
          do
          {
            uint64_t v58 = v105 + (v13 << 6);
            if (*(void *)(v58 + 40))
            {
              swift_bridgeObjectRelease();
              *(void *)(v58 + 40) = v57;
            }
            swift_bridgeObjectRelease();
            *(void *)(v58 + 48) = v57;
            uint64_t v59 = *(void *)(v58 + 40);
            if (v59)
            {
              uint64_t v60 = *(void *)(v59 + 16);
              if (v60)
              {
                uint64_t v104 = v13;
                uint64_t v61 = v59 + 32;
                swift_bridgeObjectRetain_n();
                uint64_t v62 = 0;
                uint64_t v107 = v61;
                uint64_t v109 = v60;
                do
                {
                  uint64_t v63 = *(void *)(v58 + 8);
                  if (*(void *)(v63 + 16))
                  {
                    uint64_t v64 = (uint64_t *)(v61 + 24 * v62);
                    uint64_t v66 = v64[1];
                    uint64_t v65 = v64[2];
                    uint64_t v67 = *v64;
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain();
                    uint64_t v68 = sub_1B62B2CE0(v67, v66);
                    if (v69)
                    {
                      uint64_t v70 = (uint64_t *)(*(void *)(v63 + 56) + 16 * v68);
                      uint64_t v71 = *v70;
                      uint64_t v111 = v70[1];
                      swift_retain();
                      swift_bridgeObjectRelease();
                      uint64_t v72 = *(void *)(v65 + 16);
                      if (v72)
                      {
                        swift_bridgeObjectRetain_n();
                        uint64_t v73 = (uint64_t *)(v65 + 40);
                        uint64_t v74 = (void *)MEMORY[0x1E4FBC860];
                        do
                        {
                          uint64_t v75 = *(void *)v58;
                          if (*(void *)(*(void *)v58 + 16))
                          {
                            uint64_t v76 = *(v73 - 1);
                            uint64_t v77 = *v73;
                            swift_bridgeObjectRetain_n();
                            uint64_t v78 = sub_1B62B2CE0(v76, v77);
                            if (v79)
                            {
                              uint64_t v80 = (uint64_t *)(*(void *)(v75 + 56) + 16 * v78);
                              uint64_t v81 = *v80;
                              uint64_t v82 = v80[1];
                              swift_retain();
                              swift_bridgeObjectRelease_n();
                              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                                uint64_t v74 = sub_1B68C3F64(0, v74[2] + 1, 1, v74);
                              }
                              unint64_t v84 = v74[2];
                              unint64_t v83 = v74[3];
                              if (v84 >= v83 >> 1) {
                                uint64_t v74 = sub_1B68C3F64(v83 > 1, v84 + 1, 1, v74);
                              }
                              v74[2] = v84 + 1;
                              int v85 = &v74[2 * v84];
                              v85[4] = v81;
                              v85[5] = v82;
                            }
                            else
                            {
                              swift_bridgeObjectRelease_n();
                            }
                          }
                          v73 += 2;
                          --v72;
                        }
                        while (v72);
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
                        uint64_t v74 = (void *)MEMORY[0x1E4FBC860];
                      }
                      uint64_t v86 = *(void **)(v58 + 48);
                      swift_retain();
                      char v87 = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)(v58 + 48) = v86;
                      uint64_t v61 = v107;
                      uint64_t v60 = v109;
                      if ((v87 & 1) == 0)
                      {
                        uint64_t v86 = sub_1B68C3E34(0, v86[2] + 1, 1, v86);
                        *(void *)(v58 + 48) = v86;
                      }
                      unint64_t v89 = v86[2];
                      unint64_t v88 = v86[3];
                      if (v89 >= v88 >> 1)
                      {
                        uint64_t v86 = sub_1B68C3E34(v88 > 1, v89 + 1, 1, v86);
                        *(void *)(v58 + 48) = v86;
                      }
                      v86[2] = v89 + 1;
                      BOOL v90 = &v86[3 * v89];
                      v90[4] = v71;
                      v90[5] = v111;
                      v90[6] = v74;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_release();
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease_n();
                    }
                  }
                  ++v62;
                }
                while (v62 != v60);
                swift_bridgeObjectRelease_n();
                uint64_t v13 = v104;
                uint64_t v14 = v100;
              }
            }
            ++v13;
            *(unsigned char *)(v58 + 56) = 1;
            uint64_t v57 = MEMORY[0x1E4FBC860];
          }
          while (v13 != v14);
        }
      }
      uint64_t v8 = v97;
      sub_1B6345178(v97, (unsigned __int16 **)v122, (uint64_t)v126);
      sub_1B634507C((char *)v101);
      uint64_t v9 = v96;
      ecs_stack_allocator_pop_snapshot(v96);
      int v10 = v95;
      if (v95)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v101 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v101 + 376));
      }
      swift_release();
      uint64_t v11 = v99 + 1;
    }
    while (v99 + 1 != v98);
    sub_1B62CA064((uint64_t)v112);
    sub_1B632F220(v114, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v112);
  }
  return sub_1B632F220(v114, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CAE7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  v168[12] = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v129 = qword_1EB997A18;
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  int v79 = v7;
  int v130 = v7;
  char v131 = v6 >> 31;
  uint64_t v132 = 1;
  char v133 = 2;
  uint64_t v134 = 0;
  swift_retain();
  sub_1B63AC0E0(1, (uint64_t)v80);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v8 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v81);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v80);
  v103[0] = v81[0];
  v103[1] = v81[1];
  uint64_t v104 = v82;
  sub_1B62C9DA8(a1, (uint64_t)v103, 0x200000000, v139);
  sub_1B62D8068((uint64_t)v139, (uint64_t)v168, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v168[0])
  {
    uint64_t v9 = v168[5];
    uint64_t v10 = v168[7];
    uint64_t v11 = v168[10];
    sub_1B62CA064((uint64_t)v81);
    if (v11 >= 1 && v10)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v12 = 48 * v10;
      uint64_t v13 = (uint64_t *)(v9 + 40);
      do
      {
        uint64_t v18 = *v13;
        uint64_t v19 = *(os_unfair_lock_s **)(*v13 + 376);
        swift_retain();
        os_unfair_lock_lock(v19);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
        int v20 = *(_DWORD *)(v18 + 24);
        swift_retain();
        uint64_t v164 = 0;
        memset(v163, 0, sizeof(v163));
        uint64_t v159 = 0;
        long long v158 = 0u;
        long long v157 = 0u;
        int v21 = sub_1B637F628(v20, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)v163, (uint64_t)&v157);
        swift_release();
        sub_1B62E2EA0((uint64_t)&v157, (uint64_t (*)(void))sub_1B63864B4);
        sub_1B62E2EA0((uint64_t)v163, (uint64_t (*)(void))sub_1B63864B4);
        if (sub_1B63B4340(v21))
        {
          sub_1B66603E4(v21);
        }
        else
        {
          uint64_t v14 = *(void *)(v18 + 232);
          uint64_t v15 = *(void *)(v18 + 240);
          char v16 = *(unsigned char *)(v18 + 120);
          uint64_t v17 = *(unsigned int *)(v18 + 28);
          LOBYTE(v163[0]) = *(unsigned char *)(v18 + 32);
          sub_1B628EEF4(v14, v15, v21, v16, v17 | ((unint64_t)LOBYTE(v163[0]) << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
        swift_release();
        v13 += 6;
        v12 -= 48;
      }
      while (v12);
      sub_1B632F220(v139, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F220(v139, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      sub_1B632F220(v139, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v81);
  }
  uint64_t v123 = qword_1EB997A18;
  int v124 = v79;
  char v125 = v6 >> 31;
  uint64_t v126 = 1;
  char v127 = 2;
  uint64_t v128 = 0;
  swift_retain();
  sub_1B63AC4F0(1, (uint64_t)v83);
  swift_release();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1B6E77050;
  *(void *)(v22 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v22 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v84);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v83);
  v101[0] = v84[0];
  v101[1] = v84[1];
  uint64_t v102 = v85;
  sub_1B62C9DA8(a1, (uint64_t)v101, 0x200000000, v140);
  sub_1B62D8068((uint64_t)v140, (uint64_t)v163, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v163[0])
  {
    uint64_t v23 = v165;
    uint64_t v24 = v166;
    uint64_t v25 = v167;
    sub_1B62CA064((uint64_t)v84);
    if (v25 >= 1 && v24)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v26 = 48 * v24;
      uint64_t v27 = (uint64_t *)(v23 + 40);
      do
      {
        uint64_t v32 = *v27;
        uint64_t v33 = *(os_unfair_lock_s **)(*v27 + 376);
        swift_retain();
        os_unfair_lock_lock(v33);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v32 + 344));
        int v34 = *(_DWORD *)(v32 + 24);
        swift_retain();
        uint64_t v159 = 0;
        long long v158 = 0u;
        long long v157 = 0u;
        uint64_t v153 = 0;
        long long v152 = 0u;
        long long v151 = 0u;
        int v35 = sub_1B637F628(v34, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v157, (uint64_t)&v151);
        swift_release();
        sub_1B62E2EA0((uint64_t)&v151, (uint64_t (*)(void))sub_1B63864B4);
        sub_1B62E2EA0((uint64_t)&v157, (uint64_t (*)(void))sub_1B63864B4);
        if (sub_1B63B4340(v35))
        {
          sub_1B66603E4(v35);
        }
        else
        {
          uint64_t v28 = *(void *)(v32 + 232);
          uint64_t v29 = *(void *)(v32 + 240);
          char v30 = *(unsigned char *)(v32 + 120);
          uint64_t v31 = *(unsigned int *)(v32 + 28);
          LOBYTE(v157) = *(unsigned char *)(v32 + 32);
          sub_1B628EEF4(v28, v29, v35, v30, v31 | ((unint64_t)v157 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 376));
        swift_release();
        v27 += 6;
        v26 -= 48;
      }
      while (v26);
      sub_1B632F220(v140, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F220(v140, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      sub_1B632F220(v140, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v84);
  }
  uint64_t v117 = qword_1EB997A18;
  int v118 = v79;
  char v119 = v6 >> 31;
  uint64_t v120 = 1;
  char v121 = 2;
  uint64_t v122 = 0;
  swift_retain();
  sub_1B63A7CA0(1, (uint64_t)v86);
  swift_release();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1B6E77050;
  *(void *)(v36 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v36 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v87);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  v99[0] = v87[0];
  v99[1] = v87[1];
  uint64_t v100 = v88;
  sub_1B62C9DA8(a1, (uint64_t)v99, 0x200000000, v141);
  sub_1B62D8068((uint64_t)v141, (uint64_t)&v157, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v157)
  {
    uint64_t v37 = v160;
    uint64_t v38 = v161;
    uint64_t v39 = v162;
    sub_1B62CA064((uint64_t)v87);
    if (v39 >= 1 && v38)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v40 = 48 * v38;
      uint64_t v41 = (uint64_t *)(v37 + 40);
      do
      {
        uint64_t v46 = *v41;
        uint64_t v47 = *(os_unfair_lock_s **)(*v41 + 376);
        swift_retain();
        os_unfair_lock_lock(v47);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 344));
        int v48 = *(_DWORD *)(v46 + 24);
        swift_retain();
        uint64_t v153 = 0;
        long long v152 = 0u;
        long long v151 = 0u;
        uint64_t v147 = 0;
        long long v146 = 0u;
        long long v145 = 0u;
        int v49 = sub_1B637F628(v48, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v151, (uint64_t)&v145);
        swift_release();
        sub_1B62E2EA0((uint64_t)&v145, (uint64_t (*)(void))sub_1B63864B4);
        sub_1B62E2EA0((uint64_t)&v151, (uint64_t (*)(void))sub_1B63864B4);
        if (sub_1B63B4340(v49))
        {
          sub_1B66603E4(v49);
        }
        else
        {
          uint64_t v42 = *(void *)(v46 + 232);
          uint64_t v43 = *(void *)(v46 + 240);
          char v44 = *(unsigned char *)(v46 + 120);
          uint64_t v45 = *(unsigned int *)(v46 + 28);
          LOBYTE(v151) = *(unsigned char *)(v46 + 32);
          sub_1B628EEF4(v42, v43, v49, v44, v45 | ((unint64_t)v151 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 376));
        swift_release();
        v41 += 6;
        v40 -= 48;
      }
      while (v40);
      sub_1B632F220(v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F220(v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      sub_1B632F220(v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v87);
  }
  uint64_t v111 = qword_1EB997A18;
  int v112 = v79;
  char v113 = v6 >> 31;
  uint64_t v114 = 1;
  char v115 = 2;
  uint64_t v116 = 0;
  swift_retain();
  sub_1B62943C0(1, (uint64_t)v89);
  swift_release();
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1B6E77050;
  *(void *)(v50 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v50 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v90);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v89);
  v97[0] = v90[0];
  v97[1] = v90[1];
  uint64_t v98 = v91;
  sub_1B62C9DA8(a1, (uint64_t)v97, 0x200000000, v142);
  sub_1B62D8068((uint64_t)v142, (uint64_t)&v151, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v151)
  {
    uint64_t v51 = v154;
    uint64_t v52 = v155;
    uint64_t v53 = v156;
    sub_1B62CA064((uint64_t)v90);
    if (v53 >= 1 && v52)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v54 = 48 * v52;
      unint64_t v55 = (uint64_t *)(v51 + 40);
      do
      {
        uint64_t v60 = *v55;
        uint64_t v61 = *(os_unfair_lock_s **)(*v55 + 376);
        swift_retain();
        os_unfair_lock_lock(v61);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v60 + 344));
        int v62 = *(_DWORD *)(v60 + 24);
        swift_retain();
        uint64_t v147 = 0;
        long long v146 = 0u;
        long long v145 = 0u;
        uint64_t v144 = 0;
        memset(v143, 0, sizeof(v143));
        int v63 = sub_1B637F628(v62, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)&v145, (uint64_t)v143);
        swift_release();
        sub_1B62E2EA0((uint64_t)v143, (uint64_t (*)(void))sub_1B63864B4);
        sub_1B62E2EA0((uint64_t)&v145, (uint64_t (*)(void))sub_1B63864B4);
        if (sub_1B63B4340(v63))
        {
          sub_1B66603E4(v63);
        }
        else
        {
          uint64_t v56 = *(void *)(v60 + 232);
          uint64_t v57 = *(void *)(v60 + 240);
          char v58 = *(unsigned char *)(v60 + 120);
          uint64_t v59 = *(unsigned int *)(v60 + 28);
          LOBYTE(v145) = *(unsigned char *)(v60 + 32);
          sub_1B628EEF4(v56, v57, v63, v58, v59 | ((unint64_t)v145 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 376));
        swift_release();
        v55 += 6;
        v54 -= 48;
      }
      while (v54);
      sub_1B632F220(v142, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F220(v142, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      sub_1B632F220(v142, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v90);
  }
  uint64_t v105 = qword_1EB997A18;
  int v106 = v79;
  char v107 = v6 >> 31;
  uint64_t v108 = 1;
  char v109 = 2;
  uint64_t v110 = 0;
  swift_retain();
  sub_1B6A705D4(1, (uint64_t)v92);
  swift_release();
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1B6E77050;
  *(void *)(v64 + 32) = &type metadata for VFXAssetTag;
  *(void *)(v64 + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v93);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v92);
  v95[0] = v93[0];
  v95[1] = v93[1];
  uint64_t v96 = v94;
  sub_1B62C9DA8(a1, (uint64_t)v95, 0x200000000, v143);
  sub_1B62D8068((uint64_t)v143, (uint64_t)&v145, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!(void)v145) {
    return (void *)sub_1B62CA064((uint64_t)v93);
  }
  uint64_t v65 = v148;
  uint64_t v66 = v149;
  uint64_t v67 = v150;
  sub_1B62CA064((uint64_t)v93);
  if (v67 >= 1 && v66)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v68 = 48 * v66;
    char v69 = (uint64_t *)(v65 + 40);
    do
    {
      uint64_t v74 = *v69;
      uint64_t v75 = *(os_unfair_lock_s **)(*v69 + 376);
      swift_retain();
      os_unfair_lock_lock(v75);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v74 + 344));
      int v76 = *(_DWORD *)(v74 + 24);
      swift_retain();
      uint64_t v138 = 0;
      memset(v137, 0, sizeof(v137));
      uint64_t v136 = 0;
      memset(v135, 0, sizeof(v135));
      int v77 = sub_1B637F628(v76, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)v137, (uint64_t)v135);
      swift_release();
      sub_1B62E2EA0((uint64_t)v135, (uint64_t (*)(void))sub_1B63864B4);
      sub_1B62E2EA0((uint64_t)v137, (uint64_t (*)(void))sub_1B63864B4);
      if (sub_1B63B4340(v77))
      {
        sub_1B66603E4(v77);
      }
      else
      {
        uint64_t v70 = *(void *)(v74 + 232);
        uint64_t v71 = *(void *)(v74 + 240);
        char v72 = *(unsigned char *)(v74 + 120);
        uint64_t v73 = *(unsigned int *)(v74 + 28);
        LOBYTE(v137[0]) = *(unsigned char *)(v74 + 32);
        sub_1B628EEF4(v70, v71, v77, v72, v73 | ((unint64_t)LOBYTE(v137[0]) << 32));
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 376));
      swift_release();
      v69 += 6;
      v68 -= 48;
    }
    while (v68);
    sub_1B632F220(v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  return sub_1B632F220(v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t sub_1B6CAF730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v329 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v283 = qword_1EB997A18;
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  unint64_t v8 = v6 >> 31;
  int v284 = v7;
  char v285 = v6 >> 31;
  uint64_t v286 = 1;
  char v287 = 2;
  uint64_t v288 = 0;
  swift_retain();
  sub_1B6A707DC(1, (uint64_t)v267);
  swift_release();
  v281[0] = v267[0];
  v281[1] = v267[1];
  uint64_t v282 = v268;
  sub_1B62C9DA8(a1, (uint64_t)v281, 0x200000000, v298);
  sub_1B62D8068((uint64_t)v298, (uint64_t)v309, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v231 = a1;
  if (*(void *)&v309[0])
  {
    if (v315 >= 1)
    {
      uint64_t v238 = v312;
      if (v312)
      {
        int v229 = v7;
        unint64_t v230 = v6 >> 31;
        uint64_t v245 = v314[4];
        int v243 = *(unsigned __int8 *)(v313 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v275[0] = v309[0];
        v275[1] = v309[1];
        uint64_t v276 = v310;
        uint64_t v233 = (uint64_t)(v314 + 6);
        uint64_t v234 = v311;
        int v261 = v314 + 13;
        uint64_t v255 = v314;
        uint64_t v232 = v314 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v9 = 0;
        do
        {
          uint64_t v10 = (unsigned int *)(v234 + 48 * v9);
          uint64_t v11 = *v10;
          uint64_t v12 = *((void *)v10 + 3);
          long long v252 = (uint64_t *)*((void *)v10 + 2);
          uint64_t v13 = *((void *)v10 + 5);
          uint64_t v247 = v10[1];
          uint64_t v249 = *((void *)v10 + 4);
          uint64_t v241 = v9;
          if (v243)
          {
            uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
            swift_retain();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v245);
          sub_1B62D8068(v233, (uint64_t)v328, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v15 = v255[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v255[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v255[7] = v16;
          v232[1] = 0;
          _OWORD v232[2] = 0;
          void *v232 = 0;
          swift_release();
          sub_1B62C9024((uint64_t)&type metadata for ParticleGlobalForce, (uint64_t)&off_1F0F7D928, v252, v12, v249, (uint64_t)v255);
          if (v252)
          {
            if (v249)
            {
              uint64_t v17 = v249;
              for (uint64_t i = 0; i != v17; ++i)
              {
                uint64_t v19 = v252[i];
                uint64_t v20 = *(void *)(*(void *)(v13 + 40) + 16);
                uint64_t v21 = *(void *)(v20 + 128);
                if (*(void *)(v21 + 16))
                {
                  unint64_t v22 = sub_1B62C1A30((uint64_t)&type metadata for ParticleGlobalForce);
                  if ((v23 & 1) != 0
                    && *(ValueMetadata **)(*(void *)(v20 + 24)
                                         + 16 * *(void *)(*(void *)(v21 + 56) + 8 * v22)
                                         + 32) == &type metadata for ParticleGlobalForce)
                  {
                    v299 = &type metadata for ParticleGlobalForce;
                    v300 = &off_1F0F7D928;
                    char v301 = 1;
                    uint64_t v24 = *(void *)(*v261 + 16);
                    if (v24)
                    {
                      uint64_t v25 = *v261 + 32;
                      swift_retain();
                      swift_bridgeObjectRetain();
                      uint64_t v26 = 0;
                      while (2)
                      {
                        sub_1B63B2978(v25, (uint64_t)v302);
                        sub_1B639192C((uint64_t)v302, (uint64_t)&v316);
                        sub_1B639192C((uint64_t)&v299, (uint64_t)v318);
                        switch(v317[24])
                        {
                          case 1:
                            sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                            if (v318[40] != 1) {
                              goto LABEL_26;
                            }
                            goto LABEL_40;
                          case 2:
                            sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                            if (v318[40] != 2) {
                              goto LABEL_25;
                            }
                            goto LABEL_37;
                          case 3:
                            sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                            if (v318[40] == 3)
                            {
LABEL_37:
                              sub_1B62C15C4(&v292, (uint64_t)v289);
                              sub_1B62C15C4((long long *)v318, (uint64_t)&v322);
                              uint64_t v29 = v290;
                              uint64_t v30 = v291;
                              sub_1B62C14BC(v289, v290);
                              LOBYTE(v29) = sub_1B6B3D86C(&v322, v29, v30);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v322);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v289);
                              sub_1B6391400((uint64_t)&v316);
                              sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                              if (v29)
                              {
LABEL_45:
                                swift_bridgeObjectRelease();
                                int v35 = sub_1B6B1B930();
                                uint64_t v36 = *(void *)(v34 + 48);
                                if (v36)
                                {
                                  uint64_t v37 = *(void *)(v34 + 64);
                                  *(void *)(v36 + 8 * v37) = v19;
                                  *(void *)(v34 + 64) = v37 + 1;
                                }
                                ((void (*)(long long *, void))v35)(&v316, 0);
                                uint64_t v17 = v249;
                                goto LABEL_55;
                              }
                            }
                            else
                            {
LABEL_25:
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v292);
LABEL_26:
                              sub_1B62E2EA0((uint64_t)&v316, (uint64_t (*)(void))sub_1B691F560);
                              sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                            }
LABEL_27:
                            ++v26;
                            v25 += 72;
                            if (v24 != v26) {
                              continue;
                            }
                            swift_bridgeObjectRelease();
                            uint64_t v17 = v249;
                            break;
                          case 4:
                            sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                            if (v318[40] != 4) {
                              goto LABEL_26;
                            }
                            int v27 = v292;
                            int v28 = v318[0];
                            sub_1B6391400((uint64_t)&v316);
                            sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v27 == v28) {
                              goto LABEL_45;
                            }
                            goto LABEL_27;
                          case 5:
                            if (v318[40] != 5) {
                              goto LABEL_26;
                            }
                            int8x16_t v33 = vorrq_s8(*(int8x16_t *)&v318[8], *(int8x16_t *)&v318[24]);
                            if (*(void *)&vorr_s8(*(int8x8_t *)v33.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL)) | *(void *)v318)goto LABEL_26; {
                            sub_1B6391400((uint64_t)&v316);
                            }
                            sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                            goto LABEL_45;
                          default:
                            sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                            if (v318[40]) {
                              goto LABEL_26;
                            }
LABEL_40:
                            uint64_t v31 = v292;
                            uint64_t v32 = *(void *)v318;
                            sub_1B6391400((uint64_t)&v316);
                            sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v31 == v32) {
                              goto LABEL_45;
                            }
                            goto LABEL_27;
                        }
                        break;
                      }
                    }
                    else
                    {
                      swift_retain();
                    }
                    uint64_t v38 = *(void *)(v13 + 240) - *(void *)(v13 + 232);
                    uint64_t v39 = ecs_stack_allocator_allocate(v255[4], 8 * v38, 8);
                    *uint64_t v39 = v19;
                    sub_1B639192C((uint64_t)&v299, (uint64_t)&v316);
                    *(void *)v318 = v39;
                    *(void *)&v318[8] = v38;
                    *(void *)&v318[16] = 1;
                    uint64_t v40 = (void *)v255[13];
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v255[13] = v40;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      uint64_t v40 = sub_1B68C0C6C(0, v40[2] + 1, 1, v40);
                      void *v261 = v40;
                    }
                    unint64_t v43 = v40[2];
                    unint64_t v42 = v40[3];
                    if (v43 >= v42 >> 1)
                    {
                      uint64_t v40 = sub_1B68C0C6C(v42 > 1, v43 + 1, 1, v40);
                      void *v261 = v40;
                    }
                    void v40[2] = v43 + 1;
                    char v44 = &v40[9 * v43];
                    *((_OWORD *)v44 + 2) = v316;
                    long long v45 = *(_OWORD *)v317;
                    long long v46 = *(_OWORD *)&v317[16];
                    long long v47 = *(_OWORD *)v318;
                    v44[12] = *(void *)&v318[16];
                    *((_OWORD *)v44 + 4) = v46;
                    *((_OWORD *)v44 + 5) = v47;
                    *((_OWORD *)v44 + 3) = v45;
LABEL_55:
                    sub_1B6391400((uint64_t)&v299);
                    swift_release();
                  }
                }
                uint64_t v48 = *(void *)(*(void *)(v13 + 40) + 16);
                uint64_t v49 = *(void *)(v48 + 128);
                if (*(void *)(v49 + 16))
                {
                  unint64_t v50 = sub_1B62C1A30((uint64_t)&type metadata for ParticleForceField);
                  if ((v51 & 1) != 0
                    && *(ValueMetadata **)(*(void *)(v48 + 24)
                                         + 16 * *(void *)(*(void *)(v49 + 56) + 8 * v50)
                                         + 32) == &type metadata for ParticleForceField)
                  {
                    continue;
                  }
                }
                v299 = &type metadata for ParticleForceField;
                v300 = &off_1F0F79230;
                char v301 = 0;
                uint64_t v52 = *(void *)(*v261 + 16);
                if (v52)
                {
                  uint64_t v53 = *v261 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v54 = 0;
                  while (2)
                  {
                    sub_1B63B2978(v53, (uint64_t)v302);
                    sub_1B639192C((uint64_t)v302, (uint64_t)&v316);
                    sub_1B639192C((uint64_t)&v299, (uint64_t)v318);
                    switch(v317[24])
                    {
                      case 1:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] != 1) {
                          goto LABEL_62;
                        }
                        goto LABEL_76;
                      case 2:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] != 2) {
                          goto LABEL_61;
                        }
                        goto LABEL_73;
                      case 3:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] == 3)
                        {
LABEL_73:
                          sub_1B62C15C4(&v292, (uint64_t)v289);
                          sub_1B62C15C4((long long *)v318, (uint64_t)&v322);
                          uint64_t v57 = v290;
                          uint64_t v58 = v291;
                          sub_1B62C14BC(v289, v290);
                          LOBYTE(v57) = sub_1B6B3D86C(&v322, v57, v58);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v322);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v289);
                          sub_1B6391400((uint64_t)&v316);
                          sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v57)
                          {
LABEL_81:
                            swift_bridgeObjectRelease();
                            int v63 = sub_1B6B1B930();
                            uint64_t v64 = *(void *)(v62 + 48);
                            if (v64)
                            {
                              uint64_t v65 = *(void *)(v62 + 64);
                              *(void *)(v64 + 8 * v65) = v19;
                              *(void *)(v62 + 64) = v65 + 1;
                            }
                            ((void (*)(long long *, void))v63)(&v316, 0);
                            uint64_t v17 = v249;
                            goto LABEL_18;
                          }
                        }
                        else
                        {
LABEL_61:
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v292);
LABEL_62:
                          sub_1B62E2EA0((uint64_t)&v316, (uint64_t (*)(void))sub_1B691F560);
                          sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        }
LABEL_63:
                        ++v54;
                        v53 += 72;
                        if (v52 != v54) {
                          continue;
                        }
                        swift_bridgeObjectRelease();
                        uint64_t v17 = v249;
                        break;
                      case 4:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] != 4) {
                          goto LABEL_62;
                        }
                        int v55 = v292;
                        int v56 = v318[0];
                        sub_1B6391400((uint64_t)&v316);
                        sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v55 == v56) {
                          goto LABEL_81;
                        }
                        goto LABEL_63;
                      case 5:
                        if (v318[40] != 5) {
                          goto LABEL_62;
                        }
                        int8x16_t v61 = vorrq_s8(*(int8x16_t *)&v318[8], *(int8x16_t *)&v318[24]);
                        if (*(void *)&vorr_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)) | *(void *)v318) {
                          goto LABEL_62;
                        }
                        sub_1B6391400((uint64_t)&v316);
                        sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        goto LABEL_81;
                      default:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40]) {
                          goto LABEL_62;
                        }
LABEL_76:
                        uint64_t v59 = v292;
                        uint64_t v60 = *(void *)v318;
                        sub_1B6391400((uint64_t)&v316);
                        sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v59 == v60) {
                          goto LABEL_81;
                        }
                        goto LABEL_63;
                    }
                    break;
                  }
                }
                else
                {
                  swift_retain();
                }
                uint64_t v66 = *(void *)(v13 + 240) - *(void *)(v13 + 232);
                uint64_t v67 = ecs_stack_allocator_allocate(v255[4], 8 * v66, 8);
                *uint64_t v67 = v19;
                sub_1B639192C((uint64_t)&v299, (uint64_t)&v316);
                *(void *)v318 = v67;
                *(void *)&v318[8] = v66;
                *(void *)&v318[16] = 1;
                uint64_t v68 = (void *)v255[13];
                char v69 = swift_isUniquelyReferenced_nonNull_native();
                v255[13] = v68;
                if ((v69 & 1) == 0)
                {
                  uint64_t v68 = sub_1B68C0C6C(0, v68[2] + 1, 1, v68);
                  void *v261 = v68;
                }
                unint64_t v71 = v68[2];
                unint64_t v70 = v68[3];
                if (v71 >= v70 >> 1)
                {
                  uint64_t v68 = sub_1B68C0C6C(v70 > 1, v71 + 1, 1, v68);
                  void *v261 = v68;
                }
                v68[2] = v71 + 1;
                char v72 = &v68[9 * v71];
                *((_OWORD *)v72 + 2) = v316;
                long long v73 = *(_OWORD *)v317;
                long long v74 = *(_OWORD *)&v317[16];
                long long v75 = *(_OWORD *)v318;
                v72[12] = *(void *)&v318[16];
                *((_OWORD *)v72 + 4) = v74;
                *((_OWORD *)v72 + 5) = v75;
                *((_OWORD *)v72 + 3) = v73;
LABEL_18:
                sub_1B6391400((uint64_t)&v299);
                swift_release();
              }
            }
          }
          else if (v11 != v247)
          {
            do
            {
              uint64_t v76 = *(void *)(*(void *)(v13 + 40) + 16);
              uint64_t v77 = *(void *)(v76 + 128);
              if (*(void *)(v77 + 16))
              {
                unint64_t v78 = sub_1B62C1A30((uint64_t)&type metadata for ParticleGlobalForce);
                if ((v79 & 1) != 0
                  && *(ValueMetadata **)(*(void *)(v76 + 24) + 16 * *(void *)(*(void *)(v77 + 56) + 8 * v78) + 32) == &type metadata for ParticleGlobalForce)
                {
                  v299 = &type metadata for ParticleGlobalForce;
                  v300 = &off_1F0F7D928;
                  char v301 = 1;
                  uint64_t v80 = *(void *)(*v261 + 16);
                  if (v80)
                  {
                    uint64_t v81 = *v261 + 32;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v82 = 0;
                    while (2)
                    {
                      sub_1B63B2978(v81, (uint64_t)v302);
                      sub_1B639192C((uint64_t)v302, (uint64_t)&v316);
                      sub_1B639192C((uint64_t)&v299, (uint64_t)v318);
                      switch(v317[24])
                      {
                        case 1:
                          sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                          if (v318[40] != 1) {
                            goto LABEL_102;
                          }
                          goto LABEL_116;
                        case 2:
                          sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                          if (v318[40] != 2) {
                            goto LABEL_101;
                          }
                          goto LABEL_113;
                        case 3:
                          sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                          if (v318[40] == 3)
                          {
LABEL_113:
                            sub_1B62C15C4(&v292, (uint64_t)v289);
                            sub_1B62C15C4((long long *)v318, (uint64_t)&v322);
                            uint64_t v85 = v290;
                            uint64_t v86 = v291;
                            sub_1B62C14BC(v289, v290);
                            LOBYTE(v85) = sub_1B6B3D86C(&v322, v85, v86);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v322);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v289);
                            sub_1B6391400((uint64_t)&v316);
                            sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v85)
                            {
LABEL_121:
                              swift_bridgeObjectRelease();
                              uint64_t v91 = sub_1B6B1B930();
                              uint64_t v92 = *(void *)(v90 + 48);
                              if (v92)
                              {
                                uint64_t v93 = *(void *)(v90 + 64);
                                *(void *)(v92 + 8 * v93) = v11;
                                *(void *)(v90 + 64) = v93 + 1;
                              }
                              ((void (*)(long long *, void))v91)(&v316, 0);
                              goto LABEL_131;
                            }
                          }
                          else
                          {
LABEL_101:
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v292);
LABEL_102:
                            sub_1B62E2EA0((uint64_t)&v316, (uint64_t (*)(void))sub_1B691F560);
                            sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                          }
LABEL_103:
                          ++v82;
                          v81 += 72;
                          if (v80 != v82) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          break;
                        case 4:
                          sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                          if (v318[40] != 4) {
                            goto LABEL_102;
                          }
                          int v83 = v292;
                          int v84 = v318[0];
                          sub_1B6391400((uint64_t)&v316);
                          sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v83 == v84) {
                            goto LABEL_121;
                          }
                          goto LABEL_103;
                        case 5:
                          if (v318[40] != 5) {
                            goto LABEL_102;
                          }
                          int8x16_t v89 = vorrq_s8(*(int8x16_t *)&v318[8], *(int8x16_t *)&v318[24]);
                          if (*(void *)&vorr_s8(*(int8x8_t *)v89.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL)) | *(void *)v318) {
                            goto LABEL_102;
                          }
                          sub_1B6391400((uint64_t)&v316);
                          sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                          goto LABEL_121;
                        default:
                          sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                          if (v318[40]) {
                            goto LABEL_102;
                          }
LABEL_116:
                          uint64_t v87 = v292;
                          uint64_t v88 = *(void *)v318;
                          sub_1B6391400((uint64_t)&v316);
                          sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v87 == v88) {
                            goto LABEL_121;
                          }
                          goto LABEL_103;
                      }
                      break;
                    }
                  }
                  else
                  {
                    swift_retain();
                  }
                  uint64_t v94 = *(void *)(v13 + 240) - *(void *)(v13 + 232);
                  int v95 = ecs_stack_allocator_allocate(v255[4], 8 * v94, 8);
                  void *v95 = v11;
                  sub_1B639192C((uint64_t)&v299, (uint64_t)&v316);
                  *(void *)v318 = v95;
                  *(void *)&v318[8] = v94;
                  *(void *)&v318[16] = 1;
                  uint64_t v96 = (void *)v255[13];
                  char v97 = swift_isUniquelyReferenced_nonNull_native();
                  v255[13] = v96;
                  if ((v97 & 1) == 0)
                  {
                    uint64_t v96 = sub_1B68C0C6C(0, v96[2] + 1, 1, v96);
                    void *v261 = v96;
                  }
                  unint64_t v99 = v96[2];
                  unint64_t v98 = v96[3];
                  if (v99 >= v98 >> 1)
                  {
                    uint64_t v96 = sub_1B68C0C6C(v98 > 1, v99 + 1, 1, v96);
                    void *v261 = v96;
                  }
                  v96[2] = v99 + 1;
                  uint64_t v100 = &v96[9 * v99];
                  *((_OWORD *)v100 + 2) = v316;
                  long long v101 = *(_OWORD *)v317;
                  long long v102 = *(_OWORD *)&v317[16];
                  long long v103 = *(_OWORD *)v318;
                  void v100[12] = *(void *)&v318[16];
                  *((_OWORD *)v100 + 4) = v102;
                  *((_OWORD *)v100 + 5) = v103;
                  *((_OWORD *)v100 + 3) = v101;
LABEL_131:
                  sub_1B6391400((uint64_t)&v299);
                  swift_release();
                }
              }
              uint64_t v104 = *(void *)(*(void *)(v13 + 40) + 16);
              uint64_t v105 = *(void *)(v104 + 128);
              if (!*(void *)(v105 + 16)
                || (unint64_t v106 = sub_1B62C1A30((uint64_t)&type metadata for ParticleForceField), (v107 & 1) == 0)
                || *(ValueMetadata **)(*(void *)(v104 + 24)
                                     + 16 * *(void *)(*(void *)(v105 + 56) + 8 * v106)
                                     + 32) != &type metadata for ParticleForceField)
              {
                v299 = &type metadata for ParticleForceField;
                v300 = &off_1F0F79230;
                char v301 = 0;
                uint64_t v108 = *(void *)(*v261 + 16);
                if (v108)
                {
                  uint64_t v109 = *v261 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v110 = 0;
                  while (2)
                  {
                    sub_1B63B2978(v109, (uint64_t)v302);
                    sub_1B639192C((uint64_t)v302, (uint64_t)&v316);
                    sub_1B639192C((uint64_t)&v299, (uint64_t)v318);
                    switch(v317[24])
                    {
                      case 1:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] != 1) {
                          goto LABEL_138;
                        }
                        goto LABEL_152;
                      case 2:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] != 2) {
                          goto LABEL_137;
                        }
                        goto LABEL_149;
                      case 3:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] == 3)
                        {
LABEL_149:
                          sub_1B62C15C4(&v292, (uint64_t)v289);
                          sub_1B62C15C4((long long *)v318, (uint64_t)&v322);
                          uint64_t v113 = v290;
                          uint64_t v114 = v291;
                          sub_1B62C14BC(v289, v290);
                          LOBYTE(v113) = sub_1B6B3D86C(&v322, v113, v114);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v322);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v289);
                          sub_1B6391400((uint64_t)&v316);
                          sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v113)
                          {
LABEL_157:
                            swift_bridgeObjectRelease();
                            char v119 = sub_1B6B1B930();
                            uint64_t v120 = *(void *)(v118 + 48);
                            if (v120)
                            {
                              uint64_t v121 = *(void *)(v118 + 64);
                              *(void *)(v120 + 8 * v121) = v11;
                              *(void *)(v118 + 64) = v121 + 1;
                            }
                            ((void (*)(long long *, void))v119)(&v316, 0);
                            goto LABEL_94;
                          }
                        }
                        else
                        {
LABEL_137:
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v292);
LABEL_138:
                          sub_1B62E2EA0((uint64_t)&v316, (uint64_t (*)(void))sub_1B691F560);
                          sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        }
LABEL_139:
                        ++v110;
                        v109 += 72;
                        if (v108 != v110) {
                          continue;
                        }
                        swift_bridgeObjectRelease();
                        break;
                      case 4:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40] != 4) {
                          goto LABEL_138;
                        }
                        int v111 = v292;
                        int v112 = v318[0];
                        sub_1B6391400((uint64_t)&v316);
                        sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v111 == v112) {
                          goto LABEL_157;
                        }
                        goto LABEL_139;
                      case 5:
                        if (v318[40] != 5) {
                          goto LABEL_138;
                        }
                        int8x16_t v117 = vorrq_s8(*(int8x16_t *)&v318[8], *(int8x16_t *)&v318[24]);
                        if (*(void *)&vorr_s8(*(int8x8_t *)v117.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v117, v117, 8uLL)) | *(void *)v318) {
                          goto LABEL_138;
                        }
                        sub_1B6391400((uint64_t)&v316);
                        sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        goto LABEL_157;
                      default:
                        sub_1B639192C((uint64_t)&v316, (uint64_t)&v292);
                        if (v318[40]) {
                          goto LABEL_138;
                        }
LABEL_152:
                        uint64_t v115 = v292;
                        uint64_t v116 = *(void *)v318;
                        sub_1B6391400((uint64_t)&v316);
                        sub_1B62E2EA0((uint64_t)v302, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v115 == v116) {
                          goto LABEL_157;
                        }
                        goto LABEL_139;
                    }
                    break;
                  }
                }
                else
                {
                  swift_retain();
                }
                uint64_t v122 = *(void *)(v13 + 240) - *(void *)(v13 + 232);
                uint64_t v123 = ecs_stack_allocator_allocate(v255[4], 8 * v122, 8);
                *uint64_t v123 = v11;
                sub_1B639192C((uint64_t)&v299, (uint64_t)&v316);
                *(void *)v318 = v123;
                *(void *)&v318[8] = v122;
                *(void *)&v318[16] = 1;
                int v124 = (void *)v255[13];
                char v125 = swift_isUniquelyReferenced_nonNull_native();
                v255[13] = v124;
                if ((v125 & 1) == 0)
                {
                  int v124 = sub_1B68C0C6C(0, v124[2] + 1, 1, v124);
                  void *v261 = v124;
                }
                unint64_t v127 = v124[2];
                unint64_t v126 = v124[3];
                if (v127 >= v126 >> 1)
                {
                  int v124 = sub_1B68C0C6C(v126 > 1, v127 + 1, 1, v124);
                  void *v261 = v124;
                }
                _OWORD v124[2] = v127 + 1;
                uint64_t v128 = &v124[9 * v127];
                *((_OWORD *)v128 + 2) = v316;
                long long v129 = *(_OWORD *)v317;
                long long v130 = *(_OWORD *)&v317[16];
                long long v131 = *(_OWORD *)v318;
                void v128[12] = *(void *)&v318[16];
                *((_OWORD *)v128 + 4) = v130;
                *((_OWORD *)v128 + 5) = v131;
                *((_OWORD *)v128 + 3) = v129;
LABEL_94:
                sub_1B6391400((uint64_t)&v299);
                swift_release();
              }
              ++v11;
            }
            while (v11 != v247);
          }
          sub_1B6345178(v255, (unsigned __int16 **)v275, (uint64_t)v328);
          sub_1B634507C((char *)v13);
          ecs_stack_allocator_pop_snapshot(v245);
          if (v243)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
          }
          swift_release();
          uint64_t v9 = v241 + 1;
        }
        while (v241 + 1 != v238);
        sub_1B632F220(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        a1 = v231;
        LOBYTE(v8) = v230;
        int v7 = v229;
      }
    }
    sub_1B632F220(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v132 = (char *)MEMORY[0x1E4FBC860];
  v266 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v322 = qword_1EB997A18;
  int v323 = v7;
  char v324 = v8;
  uint64_t v325 = 1;
  char v326 = 2;
  uint64_t v327 = 0;
  swift_retain();
  sub_1B6A709E4(1, (uint64_t)v269);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = xmmword_1B6E77050;
  *(void *)(v133 + 32) = &type metadata for SubEntity;
  *(void *)(v133 + 40) = &off_1F0FAA030;
  sub_1B62AD184(v270);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v269);
  v279[0] = v270[0];
  v279[1] = v270[1];
  uint64_t v280 = v271;
  sub_1B62C9DA8(a1, (uint64_t)v279, 0x200000000, &v299);
  sub_1B62D8068((uint64_t)&v299, (uint64_t)v302, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v302[0]) {
    goto LABEL_202;
  }
  long long v272 = v302[0];
  long long v273 = v302[1];
  uint64_t v274 = v303;
  if (v308 <= 0 || (uint64_t v250 = v305) == 0)
  {
    sub_1B632F220(&v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    goto LABEL_202;
  }
  uint64_t v248 = v304;
  uint64_t v134 = v307[4];
  int v135 = *(unsigned __int8 *)(v306 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v242 = (uint64_t)(v307 + 6);
  char v262 = v307;
  uint64_t v239 = v307 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v136 = 0;
  int v244 = v135;
  uint64_t v246 = v134;
  do
  {
    int v137 = (unsigned int *)(v248 + 48 * v136);
    uint64_t v138 = *v137;
    uint64_t v139 = v137[1];
    uint64_t v140 = (uint64_t *)*((void *)v137 + 2);
    uint64_t v142 = *((void *)v137 + 4);
    uint64_t v141 = *((void *)v137 + 5);
    uint64_t v253 = *((void *)v137 + 3);
    uint64_t v256 = v136;
    if (v135)
    {
      unint64_t v143 = *(os_unfair_lock_s **)(v141 + 376);
      swift_retain();
      os_unfair_lock_lock(v143);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v141 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v134);
    sub_1B62D8068(v242, (uint64_t)v321, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v144 = v262[4];
    uint64_t v145 = *(void *)(*(void *)(*(void *)(*(void *)(v141 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v262[6] = ecs_stack_allocator_allocate(v144, 48 * v145, 8);
    v262[7] = v145;
    v239[1] = 0;
    v239[2] = 0;
    *uint64_t v239 = 0;
    swift_release();
    sub_1B62C9024((uint64_t)&type metadata for ParticleForce, (uint64_t)&off_1F0F60C08, v140, v253, v142, (uint64_t)v262);
    if (v140)
    {
      if (!v142) {
        goto LABEL_189;
      }
      long long v146 = v266;
      uint64_t v134 = v246;
      do
      {
        uint64_t v148 = *v140++;
        uint64_t v147 = v148;
        uint64_t v149 = swift_retain();
        if (*(unsigned char *)(v141 + 184)) {
          goto LABEL_292;
        }
        int v150 = *(_DWORD *)(*(void *)(v141 + 168) + 4 * v147);
        int v151 = *(_DWORD *)(*(void *)(v149 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v150 + 8);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v146 = sub_1B633F784(0, *((void *)v146 + 2) + 1, 1, v146);
        }
        unint64_t v153 = *((void *)v146 + 2);
        unint64_t v152 = *((void *)v146 + 3);
        if (v153 >= v152 >> 1) {
          long long v146 = sub_1B633F784(v152 > 1, v153 + 1, 1, v146);
        }
        *((void *)v146 + 2) = v153 + 1;
        uint64_t v154 = &v146[8 * v153];
        *((_DWORD *)v154 + 8) = v150;
        *((_DWORD *)v154 + 9) = v151;
        --v142;
      }
      while (v142);
      v266 = v146;
    }
    else
    {
      if (v138 == v139)
      {
LABEL_189:
        uint64_t v134 = v246;
        goto LABEL_190;
      }
      uint64_t v134 = v246;
      do
      {
        uint64_t v155 = swift_retain();
        if (*(unsigned char *)(v141 + 184))
        {
LABEL_292:
          sub_1B6E32BE8();
          __break(1u);
          JUMPOUT(0x1B6CB1C7CLL);
        }
        unsigned int v156 = *(_DWORD *)(*(void *)(v141 + 168) + 4 * v138);
        uint64_t v157 = *(unsigned int *)(*(void *)(v155 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v156 + 8);
        swift_release();
        long long v158 = v266;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          long long v158 = sub_1B633F784(0, *((void *)v266 + 2) + 1, 1, v266);
          v266 = v158;
        }
        unint64_t v160 = *((void *)v158 + 2);
        unint64_t v159 = *((void *)v158 + 3);
        if (v160 >= v159 >> 1) {
          v266 = sub_1B633F784(v159 > 1, v160 + 1, 1, v158);
        }
        ++v138;
        uint64_t v161 = sub_1B69FFE1C(v160, v156 | (unint64_t)(v157 << 32));
        nullsub_1(v161);
      }
      while (v139 != v138);
    }
LABEL_190:
    v277[0] = v272;
    v277[1] = v273;
    uint64_t v278 = v274;
    sub_1B6345178(v262, (unsigned __int16 **)v277, (uint64_t)v321);
    sub_1B634507C((char *)v141);
    ecs_stack_allocator_pop_snapshot(v134);
    int v135 = v244;
    if (v244)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v141 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v141 + 376));
    }
    swift_release();
    uint64_t v136 = v256 + 1;
  }
  while (v256 + 1 != v250);
  sub_1B632F220(&v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B632F220(&v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v132 = v266;
  a1 = v231;
LABEL_202:
  uint64_t v251 = *((void *)v132 + 2);
  if (v251)
  {
    uint64_t v254 = v132;
    swift_bridgeObjectRetain();
    uint64_t v162 = 0;
    __asm { FMOV            V0.4S, #1.0 }
    int8x16_t v240 = _Q0;
    v166.i32[0] = 1.0;
    while (1)
    {
      uint64_t v167 = *(void *)&v254[8 * v162 + 32];
      uint64_t v168 = v167;
      uint64_t v263 = v167;
      if (v167 == -1)
      {
        if (!HIDWORD(v167))
        {
          float32x4_t v183 = 0uLL;
          char v179 = 1;
          goto LABEL_245;
        }
        swift_retain();
      }
      else
      {
        uint64_t v169 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
        swift_retain();
        if ((v168 & 0x80000000) == 0)
        {
          if (*(void *)(a1 + v169 + 8) > (int)v168
            && ((uint64_t v170 = *(void *)(a1 + v169), HIDWORD(v263) != -1)
              ? (_ZF = *(_DWORD *)(v170 + 12 * (int)v168 + 8) == HIDWORD(v263))
              : (_ZF = 1),
                _ZF))
          {
            uint64_t v172 = sub_1B69657F8(*(void *)(*(void *)(a1 + 136) + 8 * *(int *)(v170 + 12 * (int)v168) + 32), *(_DWORD *)(v170 + 12 * (int)v168), *(_WORD *)(v170 + 12 * (int)v168 + 4), 32, a1);
            uint64_t v174 = v173;
            swift_release();
          }
          else
          {
            swift_release();
            uint64_t v172 = 0;
            uint64_t v174 = 0;
          }
          v175.i64[0] = v172;
          v175.i64[1] = v174;
          goto LABEL_220;
        }
      }
      swift_release();
      float32x4_t v175 = 0uLL;
LABEL_220:
      float32x4_t v257 = v175;
      uint64_t v176 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
      swift_retain();
      if (v176)
      {
        char v177 = *(unsigned char *)(v176 + 80);
        MEMORY[0x1BA9B8670](v176 + 48);
        uint64_t v176 = *(void *)(v176 + 56);
      }
      else
      {
        char v177 = 0;
      }
      v293 = 0;
      swift_unknownObjectUnownedInit();
      *(void *)&long long v292 = a1;
      v293 = (ValueMetadata *)v176;
      swift_unknownObjectUnownedAssign();
      swift_unownedRetain();
      swift_unknownObjectRelease();
      LOBYTE(v294) = v177;
      sub_1B636C4E0((uint64_t)&v292, (uint64_t)v264);
      BOOL v178 = v168 == -1 && HIDWORD(v263) == 0;
      char v179 = v178;
      if (!v178)
      {
        uint64_t v180 = v264[0];
        swift_unownedRetainStrong();
        swift_release();
        swift_unownedRetainStrong();
        sub_1B62E280C((uint64_t)&type metadata for ParticleForce, (uint64_t)&off_1F0F60C08, v168 | ((unint64_t)HIDWORD(v263) << 32), 0);
        swift_release();
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        if (v265 == 1)
        {
          swift_unownedRetainStrong();
          *(void *)&long long v292 = v263;
          *((void *)&v292 + 1) = v180;
          v293 = &type metadata for ParticleForce;
          int8x16_t v294 = &off_1F0F60C08;
          char v297 = 13;
          uint64_t v181 = *(void *)(v180 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
          if (v181 && (*(unsigned char *)(v181 + 81) & 1) != 0)
          {
            if (*(void *)(v181 + 24) && swift_weakLoadStrong())
            {
              swift_retain();
              swift_unknownObjectRetain();
              swift_release();
              sub_1B6873570((uint64_t)&v292, (uint64_t)v289);
              sub_1B69FFBEC();
              uint64_t v235 = *(void *)(*(void *)(v181 + 16) + 16);
              sub_1B69FFCF0(v235);
              uint64_t v182 = sub_1B69FFDFC(v235, (uint64_t)v289);
              nullsub_1(v182);
              swift_release();
              swift_unknownObjectRelease();
            }
            swift_release();
            a1 = v231;
          }
          else
          {
            swift_release();
          }
          sub_1B67421B0((uint64_t)&v292);
        }
      }
      sub_1B636C450((uint64_t)v264);
      if (v177) {
        sub_1B6A667F0(1);
      }
      swift_release();
      v166.i32[0] = 1.0;
      float32x4_t v183 = v257;
LABEL_245:
      float32x4_t v184 = vmulq_f32(v183, v183);
      int8x16_t v185 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v184, 2), vaddq_f32(v184, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v184.f32, 1)));
      *(void *)&long long v316 = 0;
      BYTE8(v316) = 1;
      HIDWORD(v316) = sqrtf(*(float *)v185.i32);
      *(void *)v317 = 1065353216;
      *(_OWORD *)&v317[8] = xmmword_1B6E849D0;
      *(void *)&v317[24] = 1;
      *(void *)v318 = 0;
      *(void *)&v318[8] = 0;
      *(_OWORD *)&v318[32] = xmmword_1B6E4F540;
      long long v319 = 0uLL;
      *(_DWORD *)v320 = 0;
      *(_DWORD *)&v318[16] = 1065353216;
      *(_DWORD *)&v320[4] = 1065353216;
      *(_WORD *)&v320[16] = 1;
      *(void *)&v320[20] = 0xFFFFFFFFLL;
      if ((v179 & 1) == 0)
      {
        int8x16_t v236 = v185;
        float32x4_t v258 = v183;
        uint64_t v186 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v186)
        {
          char v187 = *(unsigned char *)(v186 + 80);
          MEMORY[0x1BA9B8670](v186 + 48);
          uint64_t v186 = *(void *)(v186 + 56);
        }
        else
        {
          char v187 = 0;
        }
        v293 = 0;
        swift_unknownObjectUnownedInit();
        *(void *)&long long v292 = a1;
        v293 = (ValueMetadata *)v186;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        LOBYTE(v294) = v187;
        sub_1B636C4E0((uint64_t)&v292, (uint64_t)v289);
        uint64_t v188 = v289[0];
        swift_unownedRetainStrong();
        if ((v168 & 0x80000000) == 0
          && *(void *)(v188 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v168
          && ((uint64_t v189 = *(void *)(v188 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(v263) == -1)
           || *(_DWORD *)(v189 + 12 * (int)v168 + 8) == HIDWORD(v263)))
        {
          sub_1B6345398(*(void *)(*(void *)(v188 + 80) + 8 * *(__int16 *)(v189 + 12 * (int)v168 + 6) + 32), (uint64_t)&type metadata for ForceField, &v292);
          swift_release();
          char v190 = v292;
        }
        else
        {
          swift_release();
          char v190 = 0;
        }
        swift_unownedRetainStrong();
        sub_1B68503A8(&v316, v168 | ((unint64_t)HIDWORD(v263) << 32));
        swift_release();
        swift_unownedRetainStrong();
        swift_release();
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        if (v290 == 1)
        {
          swift_unownedRetainStrong();
          *(void *)&long long v292 = v263;
          *((void *)&v292 + 1) = v188;
          sub_1B6CC85A4(0, &qword_1E9DD81D0, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ComponentWriter);
          uint64_t v295 = v191;
          v296 = &off_1F0F68360;
          uint64_t v192 = swift_allocObject();
          v293 = (ValueMetadata *)v192;
          long long v193 = *(_OWORD *)v320;
          *(_OWORD *)(v192 + 112) = v319;
          *(_OWORD *)(v192 + 128) = v193;
          *(_OWORD *)(v192 + 140) = *(_OWORD *)&v320[12];
          long long v194 = *(_OWORD *)v318;
          *(_OWORD *)(v192 + 48) = *(_OWORD *)&v317[16];
          *(_OWORD *)(v192 + 64) = v194;
          long long v195 = *(_OWORD *)&v318[32];
          *(_OWORD *)(v192 + 80) = *(_OWORD *)&v318[16];
          *(_OWORD *)(v192 + 96) = v195;
          long long v196 = *(_OWORD *)v317;
          *(_OWORD *)(v192 + 16) = v316;
          *(_OWORD *)(v192 + 32) = v196;
          *(unsigned char *)(v192 + 156) = v190 ^ 1;
          char v297 = 12;
          sub_1B6A62610((uint64_t)&v292);
          swift_release();
          sub_1B67421B0((uint64_t)&v292);
        }
        sub_1B636C450((uint64_t)v289);
        if (v187) {
          sub_1B6A667F0(1);
        }
        swift_release();
        v166.i32[0] = 1.0;
        float32x4_t v183 = v258;
        int8x16_t v185 = v236;
      }
      float32x4_t v197 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v185.i8, 0);
      v197.i32[3] = 0;
      float32x4_t v198 = vrsqrteq_f32(v197);
      float32x4_t v199 = vmulq_f32(v198, vrsqrtsq_f32(v197, vmulq_f32(v198, v198)));
      int8x16_t v200 = (int8x16_t)vmulq_f32(v199, vrsqrtsq_f32(v197, vmulq_f32(v199, v199)));
      int32x4_t v201 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(*(float *)v185.i32 != 0.0)), 0x1FuLL));
      v201.i32[3] = 0;
      int8x16_t v207 = (int8x16_t)vcltzq_s32(v201);
      float32x4_t v202 = vmulq_f32(v183, (float32x4_t)vbslq_s8(v207, v200, v240));
      v185.i32[0] = v202.i32[2];
      v205.i64[0] = 0x8000000080000000;
      v205.i64[1] = 0x8000000080000000;
      float v203 = *(float *)vbslq_s8(v205, v166, v185).i32;
      *(float *)v205.i32 = v202.f32[1] / (float)(fabsf(v202.f32[2]) + *(float *)v166.i32);
      float v204 = vmuls_lane_f32(*(float *)v205.i32, *(float32x2_t *)v202.f32, 1);
      *(float *)v205.i32 = -(float)(v202.f32[0] * *(float *)v205.i32);
      float v206 = v202.f32[2] + (float)(v203 * v204);
      *(float *)v207.i32 = v203 * *(float *)v205.i32;
      float v208 = *(float *)v166.i32 - v204;
      float v209 = vmuls_lane_f32(-v203, *(float32x2_t *)v202.f32, 1);
      float v210 = v202.f32[2] + (float)(v206 + v208);
      if (v210 > 0.0)
      {
        float32x2_t v211 = (float32x2_t)vrev64_s32(*(int32x2_t *)v202.f32);
        *(int32x2_t *)v215.i8 = vdup_lane_s32((int32x2_t)vadd_f32(*(float32x2_t *)v202.f32, *(float32x2_t *)v202.f32), 0);
        v215.i32[0] = vsub_f32((float32x2_t)__PAIR64__(v211.u32[1], LODWORD(v209)), v211).u32[0];
        float32x2_t v212 = (float32x2_t)__PAIR64__(COERCE_UNSIGNED_INT(sqrtf(v210 + *(float *)v166.i32)), v207.u32[0]);
        float32x2_t v213 = vmul_f32(v212, v212);
        v212.i32[0] = v205.i32[0];
        unsigned __int32 v214 = vsub_f32(*(float32x2_t *)v207.i8, v212).u32[0];
        v205.i32[1] = v213.i32[1];
        v215.i64[1] = v205.i64[0];
        *(float *)v205.i32 = 0.5 / v212.f32[1];
        goto LABEL_263;
      }
      if (v206 < v208 || v206 < v202.f32[2])
      {
        if (v208 <= v202.f32[2])
        {
          float v227 = sqrtf((float)((float)(v202.f32[2] + *(float *)v166.i32) - v206) - v208);
          v215.i32[0] = vsubq_f32(v202, v202).u32[0];
          *(float *)&v215.i32[1] = v202.f32[1] + v209;
          *(float *)&v215.i32[2] = v227 * v227;
          *(float *)&v215.i32[3] = *(float *)v207.i32 - *(float *)v205.i32;
          *(float *)v205.i32 = 0.5 / v227;
LABEL_263:
          int32x4_t v216 = vdupq_lane_s32(*(int32x2_t *)v205.i8, 0);
          if ((v179 & 1) == 0) {
            goto LABEL_273;
          }
          goto LABEL_205;
        }
        float v219 = sqrtf((float)((float)(v208 + *(float *)v166.i32) - v206) - v202.f32[2]);
        *(float *)v216.i32 = *(float *)v205.i32 + *(float *)v207.i32;
        float32x2_t v218 = (float32x2_t)vrev64_s32(*(int32x2_t *)v202.f32);
        *(float *)&v216.i32[1] = v219 * v219;
        int32x2_t v220 = (int32x2_t)vadd_f32(v218, (float32x2_t)__PAIR64__(v218.u32[1], LODWORD(v209)));
      }
      else
      {
        float v219 = sqrtf((float)((float)(v206 + *(float *)v166.i32) - v208) - v202.f32[2]);
        *(float *)v216.i32 = v219 * v219;
        *(float *)&v216.i32[1] = *(float *)v205.i32 + *(float *)v207.i32;
        int32x2_t v220 = (int32x2_t)vsub_f32((float32x2_t)__PAIR64__(LODWORD(v209), v202.u32[0]), *(float32x2_t *)v202.f32);
      }
      v216.u64[1] = (unint64_t)v220;
      *(float *)v220.i32 = 0.5 / v219;
      int32x4_t v215 = vdupq_lane_s32(v220, 0);
      if ((v179 & 1) == 0)
      {
LABEL_273:
        float32x4_t v237 = (float32x4_t)v216;
        float32x4_t v259 = (float32x4_t)v215;
        uint64_t v221 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v221)
        {
          char v222 = *(unsigned char *)(v221 + 80);
          MEMORY[0x1BA9B8670](v221 + 48);
          uint64_t v221 = *(void *)(v221 + 56);
        }
        else
        {
          char v222 = 0;
        }
        v293 = 0;
        swift_unknownObjectUnownedInit();
        *(void *)&long long v292 = a1;
        v293 = (ValueMetadata *)v221;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        LOBYTE(v294) = v222;
        sub_1B636C4E0((uint64_t)&v292, (uint64_t)v289);
        uint64_t v223 = v289[0];
        swift_unownedRetainStrong();
        if ((v168 & 0x80000000) == 0
          && *(void *)(v223 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v168
          && (HIDWORD(v263) == -1
           || *(_DWORD *)(*(void *)(v223 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v168 + 8) == HIDWORD(v263)))
        {
          BOOL v224 = sub_1B637D6B4((uint64_t)&type metadata for Orientation);
          swift_release();
        }
        else
        {
          swift_release();
          BOOL v224 = 0;
        }
        __n128 v260 = (__n128)vmulq_f32(v259, v237);
        swift_unownedRetainStrong();
        sub_1B684FF98(v168 | ((unint64_t)HIDWORD(v263) << 32), v260);
        swift_release();
        swift_unownedRetainStrong();
        swift_release();
        if (swift_unknownObjectUnownedLoadStrong()) {
          swift_unknownObjectRelease();
        }
        if (v290 == 1)
        {
          swift_unownedRetainStrong();
          *(void *)&long long v292 = v263;
          *((void *)&v292 + 1) = v223;
          sub_1B6CC85A4(0, &qword_1E9DD16E0, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ComponentWriter);
          uint64_t v295 = v225;
          v296 = &off_1F0F68360;
          uint64_t v226 = swift_allocObject();
          v293 = (ValueMetadata *)v226;
          *(__n128 *)(v226 + 16) = v260;
          *(unsigned char *)(v226 + 32) = !v224;
          char v297 = 12;
          sub_1B6A62610((uint64_t)&v292);
          swift_release();
          sub_1B67421B0((uint64_t)&v292);
        }
        sub_1B636C450((uint64_t)v289);
        if (v222) {
          sub_1B6A667F0(1);
        }
        swift_release();
        v166.i32[0] = 1.0;
      }
LABEL_205:
      if (v251 == ++v162)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_1B62CA064((uint64_t)v270);
  sub_1B62CA064((uint64_t)v267);
  return swift_bridgeObjectRelease();
}

void *sub_1B6CB1CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(v4) = a4;
  uint64_t v241 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    goto LABEL_254;
  }
  while (1)
  {
    if (v6) {
      int v7 = 0;
    }
    else {
      int v7 = v4;
    }
    uint64_t v226 = qword_1EB997A18;
    int v227 = v7;
    char v228 = v6 >> 31;
    uint64_t v229 = 1;
    char v230 = 2;
    uint64_t v231 = 0;
    swift_retain();
    sub_1B63AC2E8(3, (uint64_t)v217);
    swift_release();
    v224[0] = v217[0];
    v224[1] = v217[1];
    uint64_t v225 = v218;
    sub_1B62C9DA8(a1, (uint64_t)v224, 0x200000000, v232);
    sub_1B62D8068((uint64_t)v232, (uint64_t)v233, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!*(void *)&v233[0]) {
      return (void *)sub_1B62CA064((uint64_t)v217);
    }
    long long v219 = v233[0];
    long long v220 = v233[1];
    uint64_t v190 = v235;
    uint64_t v221 = v234;
    uint64_t v9 = v236;
    uint64_t v8 = v237;
    uint64_t v10 = v239;
    long long v194 = v238;
    sub_1B62CA064((uint64_t)v217);
    if (v10 <= 0 || !v9) {
      return sub_1B632F220(v232, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    uint64_t v187 = v9;
    uint64_t v193 = v194[4];
    int v192 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v222[0] = v219;
    v222[1] = v220;
    uint64_t v223 = v221;
    uint64_t v188 = v194 + 8;
    uint64_t v189 = v194 + 6;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = 0;
    uint64_t v215 = 0;
    while (1)
    {
      uint64_t v191 = v11;
      uint64_t v12 = (unsigned int *)(v190 + 48 * v11);
      unint64_t v13 = *v12;
      uint64_t v209 = v12[1];
      uint64_t v14 = (uint64_t *)*((void *)v12 + 2);
      uint64_t v15 = *((void *)v12 + 3);
      uint64_t v16 = *((void *)v12 + 5);
      uint64_t v197 = *((void *)v12 + 4);
      float32x4_t v198 = v14;
      if (v192)
      {
        uint64_t v17 = *(os_unfair_lock_s **)(v16 + 376);
        swift_retain();
        os_unfair_lock_lock(v17);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v193);
      sub_1B62D8068((uint64_t)v189, (uint64_t)v240, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v18 = v194;
      uint64_t v19 = v194[4];
      uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v18[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
      v18[7] = v20;
      uint64_t v21 = v188;
      v188[1] = 0;
      v21[2] = 0;
      *uint64_t v21 = 0;
      swift_release();
      uint64_t v23 = v197;
      unint64_t v22 = v198;
      long long v196 = (char *)v16;
      uint64_t v205 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v198, v15, v197, (uint64_t)v18);
      if (!v22)
      {
        if (v13 == v209) {
          goto LABEL_142;
        }
LABEL_148:
        uint64_t v110 = *(void *)(v205 + (v13 << 6) + 8);
        if (!*(void *)(v110 + 16)) {
          goto LABEL_147;
        }
        unint64_t v208 = v205 + (v13 << 6);
        uint64_t v212 = v13;
        char v111 = *(unsigned char *)(v110 + 32);
        unsigned int v112 = v111 & 0x3F;
        uint64_t v210 = (unint64_t)((1 << v111) + 63) >> 6;
        size_t v113 = 8 * v210;
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v112 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          int8x16_t v207 = &v186;
          MEMORY[0x1F4188790](isStackAllocationSafe, v115);
          float32x2_t v211 = (char *)&v186 - ((v113 + 15) & 0x3FFFFFFFFFFFFFF0);
          bzero(v211, v113);
          uint64_t v116 = 0;
          uint64_t v117 = v110 + 64;
          uint64_t v118 = 1 << *(unsigned char *)(v110 + 32);
          if (v118 < 64) {
            uint64_t v119 = ~(-1 << v118);
          }
          else {
            uint64_t v119 = -1;
          }
          unint64_t v120 = v119 & *(void *)(v110 + 64);
          uint64_t v213 = 0;
          int64_t v214 = (unint64_t)(v118 + 63) >> 6;
          float v206 = (char *)(v214 - 6);
          uint64_t v204 = v110 + 112;
          while (1)
          {
            if (v120)
            {
              unint64_t v121 = __clz(__rbit64(v120));
              v120 &= v120 - 1;
              unint64_t v122 = v121 | ((void)v116 << 6);
            }
            else
            {
              uint64_t v123 = v116 + 1;
              if ((uint64_t)(v116 + 1) >= v214) {
                goto LABEL_175;
              }
              unint64_t v124 = *(void *)(v117 + 8 * (void)v123);
              if (!v124)
              {
                uint64_t v123 = v116 + 2;
                if ((uint64_t)(v116 + 2) >= v214) {
                  goto LABEL_175;
                }
                unint64_t v124 = *(void *)(v117 + 8 * (void)v123);
                if (!v124)
                {
                  uint64_t v123 = v116 + 3;
                  if ((uint64_t)(v116 + 3) >= v214) {
                    goto LABEL_175;
                  }
                  unint64_t v124 = *(void *)(v117 + 8 * (void)v123);
                  if (!v124)
                  {
                    uint64_t v123 = v116 + 4;
                    if ((uint64_t)(v116 + 4) >= v214) {
                      goto LABEL_175;
                    }
                    unint64_t v124 = *(void *)(v117 + 8 * (void)v123);
                    if (!v124)
                    {
                      uint64_t v123 = v116 + 5;
                      if ((uint64_t)(v116 + 5) >= v214)
                      {
LABEL_175:
                        uint64_t v130 = sub_1B685E498((unint64_t *)v211, v210, v213, v110);
LABEL_201:
                        swift_bridgeObjectRelease();
                        if (!*(void *)(v130 + 16))
                        {
LABEL_145:
                          unint64_t v13 = v212;
                          goto LABEL_146;
                        }
                        sub_1B67F91F4();
                        uint64_t v146 = sub_1B6E32C28();
                        uint64_t v147 = (void *)v146;
                        uint64_t v148 = 0;
                        uint64_t v149 = v130 + 64;
                        uint64_t v150 = 1 << *(unsigned char *)(v130 + 32);
                        if (v150 < 64) {
                          uint64_t v151 = ~(-1 << v150);
                        }
                        else {
                          uint64_t v151 = -1;
                        }
                        unint64_t v152 = v151 & *(void *)(v130 + 64);
                        int64_t v153 = (unint64_t)(v150 + 63) >> 6;
                        uint64_t v154 = v146 + 64;
                        int64_t v214 = v130 + 112;
                        while (1)
                        {
                          if (v152)
                          {
                            unint64_t v155 = __clz(__rbit64(v152));
                            v152 &= v152 - 1;
                            unint64_t v156 = v155 | (v148 << 6);
                          }
                          else
                          {
                            uint64_t v162 = v148 + 1;
                            if (v148 + 1 >= v153) {
                              goto LABEL_223;
                            }
                            unint64_t v163 = *(void *)(v149 + 8 * v162);
                            if (!v163)
                            {
                              uint64_t v162 = v148 + 2;
                              if (v148 + 2 >= v153) {
                                goto LABEL_223;
                              }
                              unint64_t v163 = *(void *)(v149 + 8 * v162);
                              if (!v163)
                              {
                                uint64_t v162 = v148 + 3;
                                if (v148 + 3 >= v153) {
                                  goto LABEL_223;
                                }
                                unint64_t v163 = *(void *)(v149 + 8 * v162);
                                if (!v163)
                                {
                                  uint64_t v162 = v148 + 4;
                                  if (v148 + 4 >= v153) {
                                    goto LABEL_223;
                                  }
                                  unint64_t v163 = *(void *)(v149 + 8 * v162);
                                  if (!v163)
                                  {
                                    uint64_t v162 = v148 + 5;
                                    if (v148 + 5 >= v153)
                                    {
LABEL_223:
                                      unint64_t v164 = v208;
                                      *(void *)(v208 + 16) = v147;
                                      swift_bridgeObjectRelease();
                                      swift_retain();
                                      uint64_t v165 = swift_bridgeObjectRetain();
                                      uint64_t v166 = v215;
                                      uint64_t v167 = sub_1B6CC82D0(v165, v130);
                                      uint64_t v215 = v166;
                                      swift_bridgeObjectRelease();
                                      swift_release();
                                      *(void *)(v164 + 8) = v167;
                                      swift_bridgeObjectRelease();
                                      uint64_t v168 = sub_1B62C91B8((uint64_t)&type metadata for CodeGenerationComponent);
                                      unint64_t v13 = v212;
                                      if ((v169 & 1) == 0 && *(void *)(v168 + 8 * v212))
                                      {
                                        uint64_t v170 = 1 << *(unsigned char *)(v130 + 32);
                                        if (v170 < 64) {
                                          uint64_t v171 = ~(-1 << v170);
                                        }
                                        else {
                                          uint64_t v171 = -1;
                                        }
                                        unint64_t v172 = v171 & *(void *)(v130 + 64);
                                        int64_t v173 = (unint64_t)(v170 + 63) >> 6;
                                        swift_retain();
                                        swift_retain();
                                        uint64_t v174 = 0;
                                        uint64_t v213 = v130 + 120;
                                        int64_t v214 = v173 - 7;
                                        while (1)
                                        {
                                          if (v172)
                                          {
                                            unint64_t v175 = __clz(__rbit64(v172));
                                            v172 &= v172 - 1;
                                            unint64_t v176 = v175 | (v174 << 6);
                                          }
                                          else
                                          {
                                            uint64_t v183 = v174 + 1;
                                            if (v174 + 1 >= v173) {
                                              goto LABEL_144;
                                            }
                                            unint64_t v184 = *(void *)(v149 + 8 * v183);
                                            if (!v184)
                                            {
                                              uint64_t v183 = v174 + 2;
                                              if (v174 + 2 >= v173) {
                                                goto LABEL_144;
                                              }
                                              unint64_t v184 = *(void *)(v149 + 8 * v183);
                                              if (!v184)
                                              {
                                                uint64_t v183 = v174 + 3;
                                                if (v174 + 3 >= v173) {
                                                  goto LABEL_144;
                                                }
                                                unint64_t v184 = *(void *)(v149 + 8 * v183);
                                                if (!v184)
                                                {
                                                  uint64_t v183 = v174 + 4;
                                                  if (v174 + 4 >= v173) {
                                                    goto LABEL_144;
                                                  }
                                                  unint64_t v184 = *(void *)(v149 + 8 * v183);
                                                  if (!v184)
                                                  {
                                                    uint64_t v183 = v174 + 5;
                                                    if (v174 + 5 >= v173) {
                                                      goto LABEL_144;
                                                    }
                                                    unint64_t v184 = *(void *)(v149 + 8 * v183);
                                                    if (!v184)
                                                    {
                                                      uint64_t v183 = v174 + 6;
                                                      if (v174 + 6 >= v173)
                                                      {
LABEL_144:
                                                        swift_release();
                                                        swift_release();
                                                        goto LABEL_145;
                                                      }
                                                      unint64_t v184 = *(void *)(v149 + 8 * v183);
                                                      if (!v184)
                                                      {
                                                        do
                                                        {
                                                          if (v214 == v174) {
                                                            goto LABEL_144;
                                                          }
                                                          unint64_t v184 = *(void *)(v213 + 8 * v174++);
                                                        }
                                                        while (!v184);
                                                        uint64_t v183 = v174 + 6;
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            unint64_t v172 = (v184 - 1) & v184;
                                            unint64_t v176 = __clz(__rbit64(v184)) + (v183 << 6);
                                            uint64_t v174 = v183;
                                          }
                                          uint64_t v177 = 16 * v176;
                                          BOOL v178 = (uint64_t *)(*(void *)(v130 + 48) + 16 * v176);
                                          uint64_t v179 = v178[1];
                                          uint64_t v180 = (uint64_t *)(*(void *)(v130 + 56) + v177);
                                          uint64_t v181 = v180[1];
                                          v216[0] = *v178;
                                          v216[1] = v179;
                                          v216[2] = *v180;
                                          v216[3] = v181;
                                          swift_bridgeObjectRetain();
                                          swift_retain();
                                          uint64_t v182 = v215;
                                          sub_1B6CC6918(v216);
                                          uint64_t v215 = v182;
                                          swift_release();
                                          swift_bridgeObjectRelease();
                                        }
                                      }
LABEL_146:
                                      swift_release();
LABEL_147:
                                      if (++v13 == v209) {
                                        goto LABEL_142;
                                      }
                                      goto LABEL_148;
                                    }
                                    unint64_t v163 = *(void *)(v149 + 8 * v162);
                                    if (!v163)
                                    {
                                      do
                                      {
                                        if (v153 - 6 == v148) {
                                          goto LABEL_223;
                                        }
                                        unint64_t v163 = *(void *)(v214 + 8 * v148++);
                                      }
                                      while (!v163);
                                      uint64_t v162 = v148 + 5;
                                    }
                                  }
                                }
                              }
                            }
                            unint64_t v152 = (v163 - 1) & v163;
                            unint64_t v156 = __clz(__rbit64(v163)) + (v162 << 6);
                            uint64_t v148 = v162;
                          }
                          uint64_t v157 = (uint64_t *)(*(void *)(v130 + 48) + 16 * v156);
                          uint64_t v159 = *v157;
                          uint64_t v158 = v157[1];
                          uint64_t v160 = *(void *)(*(void *)(v130 + 56) + 16 * v156 + 8);
                          *(void *)(v154 + ((v156 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v156;
                          uint64_t v161 = (void *)(v147[6] + 16 * v156);
                          *uint64_t v161 = v159;
                          v161[1] = v158;
                          *(void *)(v147[7] + 8 * v156) = v160;
                          ++v147[2];
                          swift_bridgeObjectRetain();
                          swift_retain();
                        }
                      }
                      unint64_t v124 = *(void *)(v117 + 8 * (void)v123);
                      if (!v124)
                      {
                        do
                        {
                          if (v206 == v116) {
                            goto LABEL_175;
                          }
                          unint64_t v124 = *(void *)(v204 + 8 * (void)v116++);
                        }
                        while (!v124);
                        uint64_t v123 = v116 + 5;
                      }
                    }
                  }
                }
              }
              unint64_t v120 = (v124 - 1) & v124;
              unint64_t v122 = __clz(__rbit64(v124)) + ((void)v123 << 6);
              uint64_t v116 = v123;
            }
            uint64_t v125 = *(void *)(v110 + 56);
            unint64_t v126 = (_DWORD *)(v125 + 16 * v122);
            if (*v126 == -1 && !v126[1])
            {
              unint64_t v127 = *(void **)(v125 + 16 * v122 + 8);
              swift_bridgeObjectRetain();
              swift_retain();
              uint64_t v128 = *sub_1B6854E80();
              swift_retain();
              swift_bridgeObjectRetain();
              char v129 = sub_1B69EEFB4(v127, v128);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
              if (v129)
              {
                *(void *)&v211[(v122 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v122;
                ++v213;
              }
            }
          }
        }
        float32x2_t v211 = (char *)swift_slowAlloc();
        bzero(v211, v113);
        long long v131 = 0;
        uint64_t v132 = v110 + 64;
        uint64_t v133 = 1 << *(unsigned char *)(v110 + 32);
        if (v133 < 64) {
          uint64_t v134 = ~(-1 << v133);
        }
        else {
          uint64_t v134 = -1;
        }
        unint64_t v135 = v134 & *(void *)(v110 + 64);
        uint64_t v213 = 0;
        int64_t v214 = (unint64_t)(v133 + 63) >> 6;
        float v206 = (char *)(v110 + 112);
        int8x16_t v207 = (uint64_t *)(v214 - 6);
        while (1)
        {
          if (v135)
          {
            unint64_t v136 = __clz(__rbit64(v135));
            v135 &= v135 - 1;
            unint64_t v137 = v136 | ((void)v131 << 6);
          }
          else
          {
            uint64_t v138 = v131 + 1;
            if ((uint64_t)(v131 + 1) >= v214) {
              goto LABEL_200;
            }
            unint64_t v139 = *(void *)(v132 + 8 * (void)v138);
            if (!v139)
            {
              uint64_t v138 = v131 + 2;
              if ((uint64_t)(v131 + 2) >= v214) {
                goto LABEL_200;
              }
              unint64_t v139 = *(void *)(v132 + 8 * (void)v138);
              if (!v139)
              {
                uint64_t v138 = v131 + 3;
                if ((uint64_t)(v131 + 3) >= v214) {
                  goto LABEL_200;
                }
                unint64_t v139 = *(void *)(v132 + 8 * (void)v138);
                if (!v139)
                {
                  uint64_t v138 = v131 + 4;
                  if ((uint64_t)(v131 + 4) >= v214) {
                    goto LABEL_200;
                  }
                  unint64_t v139 = *(void *)(v132 + 8 * (void)v138);
                  if (!v139)
                  {
                    uint64_t v138 = v131 + 5;
                    if ((uint64_t)(v131 + 5) >= v214)
                    {
LABEL_200:
                      uint64_t v145 = v211;
                      uint64_t v130 = sub_1B685E498((unint64_t *)v211, v210, v213, v110);
                      MEMORY[0x1BA9B84C0](v145, -1, -1);
                      goto LABEL_201;
                    }
                    unint64_t v139 = *(void *)(v132 + 8 * (void)v138);
                    if (!v139)
                    {
                      do
                      {
                        if (v207 == (uint64_t *)v131) {
                          goto LABEL_200;
                        }
                        unint64_t v139 = *(void *)&v206[8 * (void)v131++];
                      }
                      while (!v139);
                      uint64_t v138 = v131 + 5;
                    }
                  }
                }
              }
            }
            unint64_t v135 = (v139 - 1) & v139;
            unint64_t v137 = __clz(__rbit64(v139)) + ((void)v138 << 6);
            long long v131 = v138;
          }
          uint64_t v140 = *(void *)(v110 + 56);
          uint64_t v141 = (_DWORD *)(v140 + 16 * v137);
          if (*v141 == -1 && !v141[1])
          {
            uint64_t v142 = *(void **)(v140 + 16 * v137 + 8);
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v143 = *sub_1B6854E80();
            swift_retain();
            swift_bridgeObjectRetain();
            char v144 = sub_1B69EEFB4(v142, v143);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release_n();
            if (v144)
            {
              *(void *)&v211[(v137 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v137;
              ++v213;
            }
          }
        }
      }
      if (!v23) {
        goto LABEL_142;
      }
      uint64_t v24 = 0;
LABEL_19:
      uint64_t v25 = *(void *)(v205 + (v24 << 6) + 8);
      if (!*(void *)(v25 + 16)) {
        goto LABEL_18;
      }
      uint64_t v203 = v24;
      uint64_t v199 = v198[v24];
      char v26 = *(unsigned char *)(v25 + 32);
      unsigned int v27 = v26 & 0x3F;
      uint64_t v201 = v205 + (v24 << 6);
      unint64_t v202 = (unint64_t)((1 << v26) + 63) >> 6;
      size_t v28 = 8 * v202;
      uint64_t v29 = swift_bridgeObjectRetain();
      int64_t v214 = v25;
      if (v27 <= 0xD) {
        break;
      }
      uint64_t v29 = swift_stdlib_isStackAllocationSafe();
      if (v29) {
        break;
      }
      uint64_t v212 = swift_slowAlloc();
      bzero((void *)v212, v28);
      uint64_t v213 = 0;
      unint64_t v50 = 0;
      uint64_t v51 = v25 + 64;
      uint64_t v52 = 1 << *(unsigned char *)(v25 + 32);
      if (v52 < 64) {
        uint64_t v53 = ~(-1 << v52);
      }
      else {
        uint64_t v53 = -1;
      }
      unint64_t v54 = v53 & *(void *)(v25 + 64);
      int64_t v55 = (unint64_t)(v52 + 63) >> 6;
      uint64_t v210 = v25 + 112;
      float32x2_t v211 = (char *)(v55 - 6);
      while (1)
      {
        if (v54)
        {
          unint64_t v56 = __clz(__rbit64(v54));
          v54 &= v54 - 1;
          unint64_t v57 = v56 | ((void)v50 << 6);
          goto LABEL_86;
        }
        uint64_t v58 = v50 + 1;
        if ((uint64_t)(v50 + 1) >= v55) {
          goto LABEL_90;
        }
        unint64_t v59 = *(void *)(v51 + 8 * (void)v58);
        if (!v59)
        {
          uint64_t v58 = v50 + 2;
          if ((uint64_t)(v50 + 2) >= v55) {
            goto LABEL_90;
          }
          unint64_t v59 = *(void *)(v51 + 8 * (void)v58);
          if (!v59)
          {
            uint64_t v58 = v50 + 3;
            if ((uint64_t)(v50 + 3) >= v55) {
              goto LABEL_90;
            }
            unint64_t v59 = *(void *)(v51 + 8 * (void)v58);
            if (!v59)
            {
              uint64_t v58 = v50 + 4;
              if ((uint64_t)(v50 + 4) >= v55) {
                goto LABEL_90;
              }
              unint64_t v59 = *(void *)(v51 + 8 * (void)v58);
              if (!v59)
              {
                uint64_t v58 = v50 + 5;
                if ((uint64_t)(v50 + 5) >= v55) {
                  goto LABEL_90;
                }
                unint64_t v59 = *(void *)(v51 + 8 * (void)v58);
                if (!v59) {
                  break;
                }
              }
            }
          }
        }
LABEL_85:
        unint64_t v54 = (v59 - 1) & v59;
        unint64_t v57 = __clz(__rbit64(v59)) + ((void)v58 << 6);
        unint64_t v50 = v58;
LABEL_86:
        uint64_t v60 = *(void *)(v25 + 56);
        int8x16_t v61 = (_DWORD *)(v60 + 16 * v57);
        if (*v61 == -1 && !v61[1])
        {
          uint64_t v62 = *(void **)(v60 + 16 * v57 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v63 = *sub_1B6854E80();
          swift_retain();
          swift_bridgeObjectRetain();
          char v64 = sub_1B69EEFB4(v62, v63);
          uint64_t v25 = v214;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          if (v64)
          {
            *(void *)(v212 + ((v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v57;
            ++v213;
          }
        }
      }
      while (v211 != v50)
      {
        unint64_t v59 = *(void *)(v210 + 8 * (void)v50++);
        if (v59)
        {
          uint64_t v58 = v50 + 5;
          goto LABEL_85;
        }
      }
LABEL_90:
      uint64_t v65 = v212;
      uint64_t v49 = sub_1B685E498((unint64_t *)v212, v202, v213, v25);
      MEMORY[0x1BA9B84C0](v65, -1, -1);
LABEL_91:
      swift_bridgeObjectRelease();
      if (!*(void *)(v49 + 16)) {
        goto LABEL_17;
      }
      sub_1B67F91F4();
      uint64_t v66 = sub_1B6E32C28();
      uint64_t v67 = (void *)v66;
      uint64_t v68 = 0;
      uint64_t v69 = 1 << *(unsigned char *)(v49 + 32);
      if (v69 < 64) {
        uint64_t v70 = ~(-1 << v69);
      }
      else {
        uint64_t v70 = -1;
      }
      unint64_t v71 = v70 & *(void *)(v49 + 64);
      int64_t v72 = (unint64_t)(v69 + 63) >> 6;
      uint64_t v73 = v66 + 64;
      int64_t v214 = v49 + 64;
      while (2)
      {
        if (v71)
        {
          unint64_t v74 = __clz(__rbit64(v71));
          v71 &= v71 - 1;
          unint64_t v75 = v74 | (v68 << 6);
LABEL_97:
          uint64_t v76 = (uint64_t *)(*(void *)(v49 + 48) + 16 * v75);
          uint64_t v78 = *v76;
          uint64_t v77 = v76[1];
          uint64_t v79 = *(void *)(*(void *)(v49 + 56) + 16 * v75 + 8);
          *(void *)(v73 + ((v75 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v75;
          uint64_t v80 = (void *)(v67[6] + 16 * v75);
          *uint64_t v80 = v78;
          v80[1] = v77;
          *(void *)(v67[7] + 8 * v75) = v79;
          ++v67[2];
          swift_bridgeObjectRetain();
          swift_retain();
          continue;
        }
        break;
      }
      uint64_t v81 = v68 + 1;
      if (v68 + 1 >= v72) {
        goto LABEL_113;
      }
      unint64_t v82 = *(void *)(v214 + 8 * v81);
      if (v82) {
        goto LABEL_112;
      }
      uint64_t v81 = v68 + 2;
      if (v68 + 2 >= v72) {
        goto LABEL_113;
      }
      unint64_t v82 = *(void *)(v214 + 8 * v81);
      if (v82) {
        goto LABEL_112;
      }
      uint64_t v81 = v68 + 3;
      if (v68 + 3 >= v72) {
        goto LABEL_113;
      }
      unint64_t v82 = *(void *)(v214 + 8 * v81);
      if (v82) {
        goto LABEL_112;
      }
      uint64_t v81 = v68 + 4;
      if (v68 + 4 >= v72) {
        goto LABEL_113;
      }
      unint64_t v82 = *(void *)(v214 + 8 * v81);
      if (v82) {
        goto LABEL_112;
      }
      uint64_t v81 = v68 + 5;
      if (v68 + 5 >= v72) {
        goto LABEL_113;
      }
      unint64_t v82 = *(void *)(v214 + 8 * v81);
      if (v82)
      {
LABEL_112:
        unint64_t v71 = (v82 - 1) & v82;
        unint64_t v75 = __clz(__rbit64(v82)) + (v81 << 6);
        uint64_t v68 = v81;
        goto LABEL_97;
      }
      while (v72 - 6 != v68)
      {
        unint64_t v82 = *(void *)(v49 + 112 + 8 * v68++);
        if (v82)
        {
          uint64_t v81 = v68 + 5;
          goto LABEL_112;
        }
      }
LABEL_113:
      uint64_t v83 = v201;
      *(void *)(v201 + 16) = v67;
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v84 = swift_bridgeObjectRetain();
      uint64_t v85 = v215;
      uint64_t v86 = sub_1B6CC82D0(v84, v49);
      uint64_t v215 = v85;
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)(v83 + 8) = v86;
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_1B62C91B8((uint64_t)&type metadata for CodeGenerationComponent);
      if (v88) {
        goto LABEL_17;
      }
      uint64_t v89 = *(void *)(v87 + 8 * v199);
      if (!v89) {
        goto LABEL_17;
      }
      uint64_t v90 = 1 << *(unsigned char *)(v49 + 32);
      if (v90 < 64) {
        uint64_t v91 = ~(-1 << v90);
      }
      else {
        uint64_t v91 = -1;
      }
      unint64_t v92 = v91 & *(void *)(v49 + 64);
      uint64_t v93 = (char *)((unint64_t)(v90 + 63) >> 6);
      swift_retain();
      swift_retain();
      uint64_t v94 = 0;
      float32x2_t v211 = v93 - 7;
      uint64_t v212 = (uint64_t)v93;
      uint64_t v210 = v49 + 120;
      uint64_t v213 = v49;
      while (2)
      {
        if (v92)
        {
          unint64_t v95 = __clz(__rbit64(v92));
          v92 &= v92 - 1;
          uint64_t v96 = v94;
          unint64_t v97 = v95 | ((void)v94 << 6);
LABEL_139:
          uint64_t v100 = (uint64_t *)(*(void *)(v213 + 48) + 16 * v97);
          uint64_t v101 = *v100;
          uint64_t v102 = v100[1];
          uint64_t v103 = v89;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v104 = swift_bridgeObjectRetain();
          uint64_t v105 = v215;
          sub_1B6CC7454(v104, v101, v102);
          uint64_t v107 = v106;
          uint64_t v215 = v105;
          swift_bridgeObjectRelease();
          if (v107)
          {
            swift_bridgeObjectRelease();
            swift_retain();
            sub_1B685DB30(1);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
          }
          else
          {
            swift_release();
            swift_bridgeObjectRelease();
          }
          uint64_t v89 = v103;
          uint64_t v94 = v96;
          continue;
        }
        break;
      }
      unint64_t v98 = v94 + 1;
      if ((uint64_t)(v94 + 1) >= v212) {
        goto LABEL_16;
      }
      unint64_t v99 = *(void *)(v214 + 8 * (void)v98);
      if (v99) {
        goto LABEL_138;
      }
      unint64_t v98 = v94 + 2;
      if ((uint64_t)(v94 + 2) >= v212) {
        goto LABEL_16;
      }
      unint64_t v99 = *(void *)(v214 + 8 * (void)v98);
      if (v99) {
        goto LABEL_138;
      }
      unint64_t v98 = v94 + 3;
      if ((uint64_t)(v94 + 3) >= v212) {
        goto LABEL_16;
      }
      unint64_t v99 = *(void *)(v214 + 8 * (void)v98);
      if (v99) {
        goto LABEL_138;
      }
      unint64_t v98 = v94 + 4;
      if ((uint64_t)(v94 + 4) >= v212) {
        goto LABEL_16;
      }
      unint64_t v99 = *(void *)(v214 + 8 * (void)v98);
      if (v99) {
        goto LABEL_138;
      }
      unint64_t v98 = v94 + 5;
      if ((uint64_t)(v94 + 5) >= v212) {
        goto LABEL_16;
      }
      unint64_t v99 = *(void *)(v214 + 8 * (void)v98);
      if (v99) {
        goto LABEL_138;
      }
      unint64_t v98 = v94 + 6;
      if ((uint64_t)(v94 + 6) >= v212) {
        goto LABEL_16;
      }
      unint64_t v99 = *(void *)(v214 + 8 * (void)v98);
      if (v99)
      {
LABEL_138:
        unint64_t v92 = (v99 - 1) & v99;
        unint64_t v97 = __clz(__rbit64(v99)) + ((void)v98 << 6);
        uint64_t v96 = v98;
        goto LABEL_139;
      }
      while (v211 != v94)
      {
        unint64_t v99 = *(void *)(v210 + 8 * (void)v94++);
        if (v99)
        {
          unint64_t v98 = v94 + 6;
          goto LABEL_138;
        }
      }
LABEL_16:
      swift_release();
      swift_release();
LABEL_17:
      swift_release();
      uint64_t v23 = v197;
      uint64_t v24 = v203;
LABEL_18:
      if (++v24 != v23) {
        goto LABEL_19;
      }
LABEL_142:
      uint64_t v108 = v215;
      sub_1B6345178(v194, (unsigned __int16 **)v222, (uint64_t)v240);
      uint64_t v215 = v108;
      uint64_t v109 = v196;
      sub_1B634507C(v196);
      ecs_stack_allocator_pop_snapshot(v193);
      if (v192)
      {
        os_unfair_lock_unlock(*((os_unfair_lock_t *)v109 + 43));
        os_unfair_lock_unlock(*((os_unfair_lock_t *)v109 + 47));
      }
      swift_release();
      uint64_t v11 = v191 + 1;
      if (v191 + 1 == v187)
      {
        sub_1B632F220(v232, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        return sub_1B632F220(v232, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    int8x16_t v200 = &v186;
    MEMORY[0x1F4188790](v29, v30);
    float v206 = (char *)&v186 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v206, v28);
    int8x16_t v207 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 1 << *(unsigned char *)(v25 + 32);
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    else {
      uint64_t v33 = -1;
    }
    unint64_t v34 = v33 & *(void *)(v25 + 64);
    uint64_t v209 = v25 + 64;
    uint64_t v210 = (unint64_t)(v32 + 63) >> 6;
    uint64_t v195 = v210 - 6;
    uint64_t v204 = v25 + 112;
    while (1)
    {
      do
      {
LABEL_27:
        if (v34)
        {
          unint64_t v35 = __clz(__rbit64(v34));
          v34 &= v34 - 1;
          unint64_t v36 = v35 | (v31 << 6);
        }
        else
        {
          uint64_t v37 = v31 + 1;
          if (v31 + 1 >= v210) {
            goto LABEL_65;
          }
          unint64_t v38 = *(void *)(v209 + 8 * v37);
          if (!v38)
          {
            uint64_t v37 = v31 + 2;
            if (v31 + 2 >= v210) {
              goto LABEL_65;
            }
            unint64_t v38 = *(void *)(v209 + 8 * v37);
            if (!v38)
            {
              uint64_t v37 = v31 + 3;
              if (v31 + 3 >= v210) {
                goto LABEL_65;
              }
              unint64_t v38 = *(void *)(v209 + 8 * v37);
              if (!v38)
              {
                uint64_t v37 = v31 + 4;
                if (v31 + 4 >= v210) {
                  goto LABEL_65;
                }
                unint64_t v38 = *(void *)(v209 + 8 * v37);
                if (!v38)
                {
                  uint64_t v37 = v31 + 5;
                  if (v31 + 5 >= v210)
                  {
LABEL_65:
                    uint64_t v49 = sub_1B685E498((unint64_t *)v206, v202, (uint64_t)v207, v25);
                    goto LABEL_91;
                  }
                  unint64_t v38 = *(void *)(v209 + 8 * v37);
                  if (!v38)
                  {
                    do
                    {
                      if (v195 == v31) {
                        goto LABEL_65;
                      }
                      unint64_t v38 = *(void *)(v204 + 8 * v31++);
                    }
                    while (!v38);
                    uint64_t v37 = v31 + 5;
                  }
                }
              }
            }
          }
          unint64_t v34 = (v38 - 1) & v38;
          unint64_t v36 = __clz(__rbit64(v38)) + (v37 << 6);
          uint64_t v31 = v37;
        }
        uint64_t v39 = *(void *)(v25 + 56) + 16 * v36;
      }
      while (*(_DWORD *)v39 != -1 || *(_DWORD *)(v39 + 4));
      uint64_t v40 = *(char **)(*(void *)(v25 + 48) + 16 * v36 + 8);
      uint64_t v41 = *(void **)(v39 + 8);
      uint64_t v42 = qword_1EB97F2F0;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v42 != -1) {
        swift_once();
      }
      uint64_t v43 = qword_1EB997D88;
      uint64_t v44 = sub_1B6355ED4(qword_1EB997D88);
      if (v44) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v25 = v214;
    }
    uint64_t v45 = v44;
    float32x2_t v211 = v40;
    uint64_t v212 = v34;
    unint64_t v208 = v36;
    uint64_t v213 = v31;
    swift_bridgeObjectRetain_n();
    swift_retain();
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v46 = *(void *)(v43 + 8 * v6 + 32);
      LODWORD(v4) = **(void **)(v46 + 32);
      swift_retain();
      a1 = sub_1B6E32738();
      if (!swift_conformsToProtocol2()) {
        break;
      }
      uint64_t v4 = sub_1B6E32738();
      if (!swift_conformsToProtocol2()) {
        goto LABEL_253;
      }
      if (a1 == v4 && *(void *)(v46 + 40) == v41[5])
      {
        if (*(void *)(v46 + 16) == v41[2] && *(void *)(v46 + 24) == v41[3])
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
LABEL_63:
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)&v206[(v208 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v208;
          int8x16_t v207 = (uint64_t *)((char *)v207 + 1);
LABEL_64:
          uint64_t v31 = v213;
          uint64_t v25 = v214;
          unint64_t v34 = v212;
          goto LABEL_27;
        }
        char v48 = sub_1B6E334B8();
        swift_release();
        if (v48)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_63;
        }
      }
      else
      {
        swift_release();
      }
      if (v45 == ++v6)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_64;
      }
    }
    __break(1u);
LABEL_253:
    __break(1u);
LABEL_254:
    swift_once();
  }
}

void *sub_1B6CB339C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v58 = qword_1EB997A18;
  int v59 = v7;
  char v60 = v6 >> 31;
  uint64_t v61 = 1;
  char v62 = 2;
  uint64_t v63 = 0;
  swift_retain();
  sub_1B63AC0E0(3, (uint64_t)v43);
  swift_release();
  v55[0] = v43[0];
  v55[1] = v43[1];
  uint64_t v56 = v44;
  sub_1B62C9DA8(a1, (uint64_t)v55, 0x200000000, v45);
  sub_1B62D8068((uint64_t)v45, (uint64_t)v46, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v46[0]) {
    return (void *)sub_1B62CA064((uint64_t)v43);
  }
  if (v52 <= 0 || (uint64_t v39 = v49) == 0)
  {
    sub_1B62CA064((uint64_t)v43);
    return sub_1B632F220(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v8 = v51;
  uint64_t v9 = v51[4];
  int v10 = *(unsigned __int8 *)(v50 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v53[0] = v46[0];
  v53[1] = v46[1];
  uint64_t v54 = v47;
  uint64_t v35 = (uint64_t)(v51 + 6);
  uint64_t v36 = v48;
  unint64_t v34 = v51 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  __asm { FMOV            V0.4S, #1.0 }
  long long v42 = _Q0;
  int v37 = v10;
  uint64_t v38 = v9;
  do
  {
    uint64_t v18 = (unsigned int *)(v36 + 48 * v11);
    uint64_t v19 = *v18;
    uint64_t v40 = v18[1];
    uint64_t v41 = v12;
    uint64_t v21 = (uint64_t *)*((void *)v18 + 2);
    uint64_t v20 = *((void *)v18 + 3);
    uint64_t v23 = *((void *)v18 + 4);
    uint64_t v22 = *((void *)v18 + 5);
    if (v10)
    {
      uint64_t v24 = *(os_unfair_lock_s **)(v22 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v24);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v9);
    sub_1B62D8068(v35, (uint64_t)v57, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v25 = v8[4];
    uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v8[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
    v8[7] = v26;
    v34[1] = 0;
    v34[2] = 0;
    *unint64_t v34 = 0;
    swift_release();
    uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for ColorRampComponent, (uint64_t)&off_1F0F75B28, v21, v20, v23, (uint64_t)v8);
    if (v21)
    {
      int v10 = v37;
      if (!v23) {
        goto LABEL_21;
      }
      size_t v28 = (unsigned char *)(v27 + 8);
      uint64_t v12 = v41;
      do
      {
        if (!*(void *)(*(void *)v28 + 16))
        {
          sub_1B63BDF50(0, (unint64_t *)&qword_1EB980DA0, (uint64_t (*)(uint64_t))sub_1B62AADE8, MEMORY[0x1E4FBBE00]);
          uint64_t v29 = (_OWORD *)swift_allocObject();
          v29[1] = xmmword_1B6E76B30;
          _OWORD v29[2] = v42;
          v29[3] = xmmword_1B6E4F370;
          *((void *)v28 - 1) = v29;
          *(void *)size_t v28 = &unk_1F0F51890;
          v28[8] = 1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v28 += 24;
        --v23;
      }
      while (v23);
    }
    else
    {
      int v10 = v37;
      if (v19 == v40)
      {
LABEL_21:
        uint64_t v12 = v41;
        goto LABEL_22;
      }
      uint64_t v30 = v40 - v19;
      uint64_t v31 = (unsigned char *)(v27 + 24 * v19 + 8);
      uint64_t v12 = v41;
      do
      {
        if (!*(void *)(*(void *)v31 + 16))
        {
          sub_1B63BDF50(0, (unint64_t *)&qword_1EB980DA0, (uint64_t (*)(uint64_t))sub_1B62AADE8, MEMORY[0x1E4FBBE00]);
          uint64_t v32 = (_OWORD *)swift_allocObject();
          v32[1] = xmmword_1B6E76B30;
          v32[2] = v42;
          v32[3] = xmmword_1B6E4F370;
          *((void *)v31 - 1) = v32;
          *(void *)uint64_t v31 = &unk_1F0F51868;
          v31[8] = 1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v31 += 24;
        --v30;
      }
      while (v30);
    }
LABEL_22:
    sub_1B6345178(v8, (unsigned __int16 **)v53, (uint64_t)v57);
    sub_1B634507C((char *)v22);
    uint64_t v9 = v38;
    ecs_stack_allocator_pop_snapshot(v38);
    if (v10)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
    }
    swift_release();
    ++v11;
  }
  while (v11 != v39);
  sub_1B62CA064((uint64_t)v43);
  sub_1B632F220(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CB38A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v214 = qword_1EB997A18;
  int v215 = v7;
  char v216 = v6 >> 31;
  uint64_t v217 = 1;
  char v218 = 2;
  uint64_t v219 = 0;
  swift_retain();
  sub_1B6782CA4(1, 3, (uint64_t)v196);
  swift_release();
  v211[0] = v196[0];
  v211[1] = v196[1];
  uint64_t v212 = v197;
  sub_1B62C9DA8(a1, (uint64_t)v211, 0x200000000, v198);
  sub_1B62D8068((uint64_t)v198, (uint64_t)v199, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v199[0]) {
    return (void *)sub_1B62CA064((uint64_t)v196);
  }
  long long v206 = v199[0];
  long long v207 = v199[1];
  uint64_t v208 = v200;
  if (v205 > 0)
  {
    uint64_t v180 = v202;
    if (v202)
    {
      uint64_t v178 = v201;
      uint64_t v8 = v204;
      uint64_t v9 = v204[4];
      int v10 = *(unsigned __int8 *)(v203 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v175 = (uint64_t)(v204 + 6);
      uint64_t v185 = a1;
      uint64_t v11 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v181 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
      uint64_t v174 = v204 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v179 = v8;
      uint64_t v177 = v9;
      int v176 = v10;
      uint64_t v189 = v11;
      while (1)
      {
        uint64_t v183 = v13;
        uint64_t v184 = v12;
        uint64_t v14 = (unsigned int *)(v178 + 48 * v12);
        uint64_t v15 = *v14;
        uint64_t v187 = v14[1];
        uint64_t v16 = *((void *)v14 + 3);
        uint64_t v190 = (uint64_t *)*((void *)v14 + 2);
        uint64_t v18 = *((void *)v14 + 4);
        uint64_t v17 = *((void *)v14 + 5);
        if (v10)
        {
          uint64_t v19 = *(os_unfair_lock_s **)(v17 + 376);
          swift_retain();
          os_unfair_lock_lock(v19);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v9);
        sub_1B62D8068(v175, (uint64_t)v213, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v20 = v8[4];
        uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v8[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
        v8[7] = v21;
        v174[1] = 0;
        v174[2] = 0;
        *uint64_t v174 = 0;
        swift_release();
        uint64_t v186 = sub_1B62C9024((uint64_t)&type metadata for SubEntity, (uint64_t)&off_1F0FAA000, v190, v16, v18, (uint64_t)v8);
        uint64_t v192 = sub_1B62C9024((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v190, v16, v18, (uint64_t)v8);
        if (v190)
        {
          if (v18)
          {
            uint64_t v22 = 0;
            uint64_t v188 = v18;
            while (1)
            {
              uint64_t v23 = v190[v22];
              uint64_t v24 = (int *)(v192 + 8 * v22);
              int v26 = *v24;
              int v25 = v24[1];
              if (*v24 == -1 && v25 == 0)
              {
                size_t v28 = (int *)(v186 + 8 * v22);
                int v26 = *v28;
                int v25 = v28[1];
                *uint64_t v24 = v26;
                v24[1] = v25;
              }
              BOOL v29 = v26 == -1 && v25 == 0;
              if (!v29
                && (v26 & 0x80000000) == 0
                && (uint64_t v30 = v11[1], v30 > v26)
                && ((uint64_t v31 = *v11, v25 != -1) ? (v32 = *(_DWORD *)(*v11 + 12 * v26 + 8) == v25) : (v32 = 1),
                    v32
                 && (uint64_t v33 = *(void *)(*(void *)(*(void *)(v185 + 80) + 8 * *(__int16 *)(v31 + 12 * v26 + 6) + 32)
                                     + 16),
                     uint64_t v34 = *(void *)(v33 + 128),
                     *(void *)(v34 + 16))
                 && (unint64_t v35 = sub_1B62C1A30((uint64_t)&type metadata for Children), (v36 & 1) != 0)
                 && *(ValueMetadata **)(*(void *)(v33 + 24) + 16 * *(void *)(*(void *)(v34 + 56) + 8 * v35) + 32) == &type metadata for Children))
              {
                int v66 = v24[1];
                uint64_t v67 = *v24;
                if (__PAIR64__(v66, v67) == 0xFFFFFFFF) {
                  goto LABEL_184;
                }
                if ((v67 & 0x80000000) != 0) {
                  goto LABEL_184;
                }
                if (v30 <= v67) {
                  goto LABEL_184;
                }
                uint64_t v68 = v31 + 12 * (int)v67;
                uint64_t v69 = *(__int16 *)(v68 + 4);
                if (v66 != -1 && *(_DWORD *)(v68 + 8) != v66) {
                  goto LABEL_184;
                }
                uint64_t v70 = *(void *)(*(void *)(v185 + 136) + 8 * *(int *)(v31 + 12 * (int)v67) + 32);
                uint64_t v71 = *(void *)(v70 + 48);
                uint64_t v72 = *(void *)(v71 + 16);
                if (!v72) {
                  goto LABEL_184;
                }
                uint64_t v73 = (void *)(v71 + 56);
                while ((ValueMetadata *)*(v73 - 3) != &type metadata for Children)
                {
                  v73 += 5;
                  if (!--v72) {
                    goto LABEL_184;
                  }
                }
                uint64_t v74 = *v73 + 8 * v69;
                uint64_t v75 = *(void *)(v70 + 128);
                uint64_t v76 = *(void *)(v75 + v74);
                uint64_t v77 = *(void *)(v17 + 16);
                char v78 = *(unsigned char *)(v17 + 184);
                swift_retain();
                if (v78) {
                  goto LABEL_185;
                }
                int v79 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v23);
                int v80 = *(_DWORD *)(*(void *)(v77 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v79 + 8);
                swift_bridgeObjectRetain();
                swift_release();
                uint64_t v81 = *(void *)(v76 + 16);
                if (v81)
                {
                  unint64_t v82 = (_DWORD *)(v76 + 36);
                  while (*(v82 - 1) != v79 || *v82 != v80)
                  {
                    v82 += 2;
                    if (!--v81) {
                      goto LABEL_81;
                    }
                  }
                  swift_bridgeObjectRelease();
                }
                else
                {
LABEL_81:
                  swift_bridgeObjectRelease();
                  char v84 = *(unsigned char *)(v17 + 184);
                  uint64_t v85 = swift_retain();
                  if (v84) {
                    goto LABEL_185;
                  }
                  int v86 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v23);
                  int v87 = *(_DWORD *)(*(void *)(v85 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v86 + 8);
                  swift_release();
                  char v88 = *(char **)(v75 + v74);
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *(void *)(v75 + v74) = v88;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    char v88 = sub_1B633F784(0, *((void *)v88 + 2) + 1, 1, v88);
                    *(void *)(v75 + v74) = v88;
                  }
                  unint64_t v91 = *((void *)v88 + 2);
                  unint64_t v90 = *((void *)v88 + 3);
                  if (v91 >= v90 >> 1) {
                    char v88 = sub_1B633F784(v90 > 1, v91 + 1, 1, v88);
                  }
                  *((void *)v88 + 2) = v91 + 1;
                  unint64_t v92 = &v88[8 * v91];
                  *((_DWORD *)v92 + 8) = v86;
                  *((_DWORD *)v92 + 9) = v87;
                  *(void *)(v75 + v74) = v88;
                }
                uint64_t v11 = v189;
              }
              else
              {
                sub_1B62D89FC(0, &qword_1EB980C50, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBBE00]);
                uint64_t v37 = swift_allocObject();
                *(_OWORD *)(v37 + 16) = xmmword_1B6E77050;
                char v38 = *(unsigned char *)(v17 + 184);
                uint64_t v39 = swift_retain();
                if (v38) {
                  goto LABEL_185;
                }
                int v40 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v23);
                int v41 = *(_DWORD *)(*(void *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v40 + 8);
                swift_release();
                *(_DWORD *)(v37 + 32) = v40;
                *(_DWORD *)(v37 + 36) = v41;
                int v42 = v24[1];
                uint64_t v43 = *v24;
                if (__PAIR64__(v42, v43) != 0xFFFFFFFF && (v43 & 0x80000000) == 0 && v11[1] > v43)
                {
                  uint64_t v44 = *v11 + 12 * (int)v43;
                  uint64_t v45 = *(__int16 *)(v44 + 4);
                  if (v42 == -1 || *(_DWORD *)(v44 + 8) == v42)
                  {
                    uint64_t v46 = *(void *)(*(void *)(v185 + 136) + 8 * *(int *)(*v11 + 12 * (int)v43) + 32);
                    os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 344));
                    uint64_t v47 = *(void *)(*(void *)(v46 + 40) + 16);
                    uint64_t v48 = *(void *)(v47 + 128);
                    if (*(void *)(v48 + 16)
                      && (unint64_t v49 = sub_1B62C1A30((uint64_t)&type metadata for Children), (v50 & 1) != 0)
                      && *(ValueMetadata **)(*(void *)(v47 + 24)
                                           + 16 * *(void *)(*(void *)(v48 + 56) + 8 * v49)
                                           + 32) == &type metadata for Children)
                    {
                      uint64_t v93 = *(void *)(v46 + 48);
                      uint64_t v94 = *(void *)(v93 + 16);
                      if (v94)
                      {
                        unint64_t v95 = (uint64_t *)(v93 + 56);
                        uint64_t v11 = v189;
                        while ((ValueMetadata *)*(v95 - 3) != &type metadata for Children)
                        {
                          v95 += 5;
                          if (!--v94) {
                            goto LABEL_96;
                          }
                        }
                        uint64_t v94 = *v95;
                      }
                      else
                      {
                        uint64_t v11 = v189;
                      }
LABEL_96:
                      uint64_t v96 = v94 + 8 * v45;
                      uint64_t v97 = *(void *)(v46 + 128);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(void *)(v97 + v96) = v37;
                    }
                    else
                    {
                      uint64_t v182 = v45;
                      uint64_t v51 = *(uint64_t **)(v185 + v181);
                      ecs_stack_allocator_push_snapshot(*(void *)(*v51 + 32));
                      uint64_t v52 = *v51;
                      uint64_t v53 = *(void *)(*(void *)(v46 + 40) + 16);
                      uint64_t v54 = *(void *)(v53 + 128);
                      if (!*(void *)(v54 + 16)
                        || (unint64_t v55 = sub_1B62C1A30((uint64_t)&type metadata for Children), (v56 & 1) == 0)
                        || *(ValueMetadata **)(*(void *)(v53 + 24)
                                             + 16 * *(void *)(*(void *)(v54 + 56) + 8 * v55)
                                             + 32) != &type metadata for Children)
                      {
                        uint64_t v193 = &type metadata for Children;
                        long long v194 = &off_1F0FA3898;
                        char v195 = 0;
                        sub_1B63B2A48(v52 + 104, (uint64_t)&v193, v182, 0, v46, v52);
                        sub_1B6391400((uint64_t)&v193);
                      }
                      sub_1B634507C((char *)v46);
                      if (v189[1] <= v43) {
                        goto LABEL_184;
                      }
                      uint64_t v57 = *v189 + 12 * (int)v43;
                      uint64_t v58 = *(__int16 *)(v57 + 4);
                      if (v42 != -1 && *(_DWORD *)(v57 + 8) != v42) {
                        goto LABEL_184;
                      }
                      uint64_t v59 = *(void *)(*(void *)(v185 + 136) + 8 * *(int *)(*v189 + 12 * (int)v43) + 32);
                      uint64_t v60 = *(void *)(v59 + 48);
                      uint64_t v61 = *(void *)(v60 + 16);
                      if (!v61) {
                        goto LABEL_184;
                      }
                      char v62 = (void *)(v60 + 56);
                      while ((ValueMetadata *)*(v62 - 3) != &type metadata for Children)
                      {
                        v62 += 5;
                        if (!--v61) {
                          goto LABEL_184;
                        }
                      }
                      uint64_t v63 = *v62 + 8 * v58;
                      uint64_t v64 = *(void *)(v59 + 128);
                      swift_bridgeObjectRelease();
                      *(void *)(v64 + v63) = v37;
                      uint64_t v65 = *(void *)(*v51 + 32);
                      swift_bridgeObjectRetain();
                      ecs_stack_allocator_pop_snapshot(v65);
                      uint64_t v11 = v189;
                    }
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 344));
                  }
                }
                swift_bridgeObjectRelease();
              }
              if (++v22 == v188) {
                goto LABEL_98;
              }
            }
          }
          goto LABEL_98;
        }
        uint64_t v98 = v187;
        if (v15 != v187) {
          break;
        }
LABEL_98:
        v209[0] = v206;
        v209[1] = v207;
        uint64_t v210 = v208;
        uint64_t v8 = v179;
        uint64_t v13 = v183;
        sub_1B6345178(v179, (unsigned __int16 **)v209, (uint64_t)v213);
        sub_1B634507C((char *)v17);
        uint64_t v9 = v177;
        ecs_stack_allocator_pop_snapshot(v177);
        int v10 = v176;
        if (v176)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
        }
        swift_release();
        uint64_t v12 = v184 + 1;
        if (v184 + 1 == v180)
        {
          sub_1B62CA064((uint64_t)v196);
          sub_1B632F220(v198, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          return sub_1B632F220(v198, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        }
      }
      while (1)
      {
        unint64_t v99 = (int *)(v192 + 8 * v15);
        int v101 = *v99;
        int v100 = v99[1];
        if (*v99 == -1 && v100 == 0)
        {
          uint64_t v103 = (int *)(v186 + 8 * v15);
          int v101 = *v103;
          int v100 = v103[1];
          *unint64_t v99 = v101;
          v99[1] = v100;
        }
        if ((v101 != -1 || v100 != 0) && (v101 & 0x80000000) == 0)
        {
          uint64_t v105 = v189[1];
          if (v105 > v101)
          {
            uint64_t v106 = *v189;
            if (v100 == -1 || *(_DWORD *)(*v189 + 12 * v101 + 8) == v100)
            {
              uint64_t v108 = *(void *)(*(void *)(*(void *)(v185 + 80) + 8 * *(__int16 *)(v106 + 12 * v101 + 6) + 32)
                               + 16);
              uint64_t v109 = *(void *)(v108 + 128);
              if (*(void *)(v109 + 16))
              {
                unint64_t v110 = sub_1B62C1A30((uint64_t)&type metadata for Children);
                if ((v111 & 1) != 0
                  && *(ValueMetadata **)(*(void *)(v108 + 24)
                                       + 16 * *(void *)(*(void *)(v109 + 56) + 8 * v110)
                                       + 32) == &type metadata for Children)
                {
                  break;
                }
              }
            }
          }
        }
        sub_1B62D89FC(0, &qword_1EB980C50, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBBE00]);
        uint64_t v112 = swift_allocObject();
        *(_OWORD *)(v112 + 16) = xmmword_1B6E77050;
        char v113 = *(unsigned char *)(v17 + 184);
        uint64_t v114 = swift_retain();
        if (v113) {
          goto LABEL_185;
        }
        int v115 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v15);
        int v116 = *(_DWORD *)(*(void *)(v114 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v115 + 8);
        swift_release();
        *(_DWORD *)(v112 + 32) = v115;
        *(_DWORD *)(v112 + 36) = v116;
        int v117 = v99[1];
        uint64_t v118 = *v99;
        if (__PAIR64__(v117, v118) == 0xFFFFFFFF) {
          goto LABEL_124;
        }
        uint64_t v11 = v189;
        if ((v118 & 0x80000000) == 0 && v189[1] > v118)
        {
          uint64_t v119 = *v189 + 12 * (int)v118;
          uint64_t v120 = *(__int16 *)(v119 + 4);
          if (v117 == -1 || *(_DWORD *)(v119 + 8) == v117)
          {
            uint64_t v121 = *(void *)(*(void *)(v185 + 136) + 8 * *(int *)(*v189 + 12 * (int)v118) + 32);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v121 + 344));
            uint64_t v122 = *(void *)(*(void *)(v121 + 40) + 16);
            uint64_t v123 = *(void *)(v122 + 128);
            if (*(void *)(v123 + 16)
              && (unint64_t v124 = sub_1B62C1A30((uint64_t)&type metadata for Children), (v125 & 1) != 0)
              && *(ValueMetadata **)(*(void *)(v122 + 24) + 16 * *(void *)(*(void *)(v123 + 56) + 8 * v124) + 32) == &type metadata for Children)
            {
              uint64_t v168 = *(void *)(v121 + 48);
              uint64_t v169 = *(void *)(v168 + 16);
              if (v169)
              {
                uint64_t v170 = (uint64_t *)(v168 + 56);
                while ((ValueMetadata *)*(v170 - 3) != &type metadata for Children)
                {
                  v170 += 5;
                  if (!--v169) {
                    goto LABEL_177;
                  }
                }
                uint64_t v169 = *v170;
              }
LABEL_177:
              uint64_t v171 = v169 + 8 * v120;
              uint64_t v172 = *(void *)(v121 + 128);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v172 + v171) = v112;
            }
            else
            {
              uint64_t v191 = v120;
              unint64_t v126 = *(uint64_t **)(v185 + v181);
              ecs_stack_allocator_push_snapshot(*(void *)(*v126 + 32));
              uint64_t v127 = *v126;
              uint64_t v128 = *(void *)(*(void *)(v121 + 40) + 16);
              uint64_t v129 = *(void *)(v128 + 128);
              if (!*(void *)(v129 + 16)
                || (unint64_t v130 = sub_1B62C1A30((uint64_t)&type metadata for Children), (v131 & 1) == 0)
                || *(ValueMetadata **)(*(void *)(v128 + 24)
                                     + 16 * *(void *)(*(void *)(v129 + 56) + 8 * v130)
                                     + 32) != &type metadata for Children)
              {
                uint64_t v193 = &type metadata for Children;
                long long v194 = &off_1F0FA3898;
                char v195 = 0;
                sub_1B63B2A48(v127 + 104, (uint64_t)&v193, v191, 0, v121, v127);
                sub_1B6391400((uint64_t)&v193);
              }
              sub_1B634507C((char *)v121);
              uint64_t v98 = v187;
              if (v189[1] <= v118
                || (v132 = *v189 + 12 * (int)v118, uint64_t v133 = *(__int16 *)(v132 + 4), v117 != -1)
                && *(_DWORD *)(v132 + 8) != v117
                || (uint64_t v134 = *(void *)(*(void *)(v185 + 136) + 8 * *(int *)(*v189 + 12 * (int)v118) + 32),
                    uint64_t v135 = *(void *)(v134 + 48),
                    (uint64_t v136 = *(void *)(v135 + 16)) == 0))
              {
                while (1)
                {
LABEL_184:
                  uint64_t v193 = 0;
                  long long v194 = (_UNKNOWN **)0xE000000000000000;
                  sub_1B6E328C8();
                  sub_1B6E31948();
                  sub_1B681F698();
                  sub_1B6E31948();
                  swift_bridgeObjectRelease();
                  sub_1B6E31948();
                  sub_1B6E31948();
                  sub_1B6E31948();
LABEL_185:
                  sub_1B6E32BE8();
                  __break(1u);
                }
              }
              unint64_t v137 = (void *)(v135 + 56);
              while ((ValueMetadata *)*(v137 - 3) != &type metadata for Children)
              {
                v137 += 5;
                if (!--v136) {
                  goto LABEL_184;
                }
              }
              uint64_t v138 = *v137 + 8 * v133;
              uint64_t v139 = *(void *)(v134 + 128);
              swift_bridgeObjectRelease();
              *(void *)(v139 + v138) = v112;
              uint64_t v140 = *(void *)(*v126 + 32);
              swift_bridgeObjectRetain();
              ecs_stack_allocator_pop_snapshot(v140);
            }
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v121 + 344));
LABEL_124:
            swift_bridgeObjectRelease();
            uint64_t v11 = v189;
            goto LABEL_101;
          }
        }
        swift_bridgeObjectRelease();
LABEL_101:
        if (++v15 == v98) {
          goto LABEL_98;
        }
      }
      int v141 = *v99;
      int v142 = v99[1];
      if (v141 == -1 && !v142) {
        goto LABEL_184;
      }
      if (v141 < 0) {
        goto LABEL_184;
      }
      if (v105 <= v141) {
        goto LABEL_184;
      }
      uint64_t v143 = v106 + 12 * v141;
      uint64_t v144 = *(__int16 *)(v143 + 4);
      if (v142 != -1 && *(_DWORD *)(v143 + 8) != v142) {
        goto LABEL_184;
      }
      uint64_t v145 = *(void *)(*(void *)(v185 + 136) + 8 * *(int *)(v106 + 12 * v141) + 32);
      uint64_t v146 = *(void *)(v145 + 48);
      uint64_t v147 = *(void *)(v146 + 16);
      if (!v147) {
        goto LABEL_184;
      }
      uint64_t v148 = (void *)(v146 + 56);
      while ((ValueMetadata *)*(v148 - 3) != &type metadata for Children)
      {
        v148 += 5;
        if (!--v147) {
          goto LABEL_184;
        }
      }
      uint64_t v149 = *v148 + 8 * v144;
      uint64_t v150 = *(void *)(v145 + 128);
      uint64_t v151 = *(void *)(v150 + v149);
      uint64_t v152 = *(void *)(v17 + 16);
      char v153 = *(unsigned char *)(v17 + 184);
      swift_retain();
      if (v153) {
        goto LABEL_185;
      }
      int v154 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v15);
      int v155 = *(_DWORD *)(*(void *)(v152 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v154 + 8);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v156 = *(void *)(v151 + 16);
      if (!v156)
      {
LABEL_165:
        swift_bridgeObjectRelease();
        char v159 = *(unsigned char *)(v17 + 184);
        uint64_t v160 = swift_retain();
        if (v159) {
          goto LABEL_185;
        }
        int v161 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v15);
        int v162 = *(_DWORD *)(*(void *)(v160 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v161 + 8);
        swift_release();
        unint64_t v163 = *(char **)(v150 + v149);
        char v164 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v150 + v149) = v163;
        if ((v164 & 1) == 0)
        {
          unint64_t v163 = sub_1B633F784(0, *((void *)v163 + 2) + 1, 1, v163);
          *(void *)(v150 + v149) = v163;
        }
        unint64_t v166 = *((void *)v163 + 2);
        unint64_t v165 = *((void *)v163 + 3);
        if (v166 >= v165 >> 1) {
          unint64_t v163 = sub_1B633F784(v165 > 1, v166 + 1, 1, v163);
        }
        *((void *)v163 + 2) = v166 + 1;
        uint64_t v167 = &v163[8 * v166];
        *((_DWORD *)v167 + 8) = v161;
        *((_DWORD *)v167 + 9) = v162;
        *(void *)(v150 + v149) = v163;
        uint64_t v11 = v189;
        goto LABEL_101;
      }
      uint64_t v157 = (_DWORD *)(v151 + 36);
      while (*(v157 - 1) != v154 || *v157 != v155)
      {
        v157 += 2;
        if (!--v156) {
          goto LABEL_165;
        }
      }
      goto LABEL_124;
    }
  }
  sub_1B62CA064((uint64_t)v196);
  return sub_1B632F220(v198, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t sub_1B6CB4A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  uint64_t v7 = sub_1B6E31118();
  uint64_t v101 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v104 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v106 = (char *)&v85 - v12;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v107 = (char *)&v85 - v15;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v16 = 0;
  }
  else {
    int v16 = v4;
  }
  uint64_t v129 = qword_1EB997A18;
  int v130 = v16;
  char v131 = v6 >> 31;
  uint64_t v132 = 1;
  char v133 = 2;
  uint64_t v134 = 0;
  swift_retain();
  sub_1B6A70560(3, (uint64_t)v111);
  swift_release();
  v126[0] = v111[0];
  v126[1] = v111[1];
  uint64_t v127 = v112;
  sub_1B62C9DA8(a1, (uint64_t)v126, 0x200000000, v113);
  sub_1B62D8068((uint64_t)v113, (uint64_t)v114, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v114[0])
  {
    long long v121 = v114[0];
    long long v122 = v114[1];
    uint64_t v91 = v116;
    uint64_t v123 = v115;
    uint64_t v18 = v117;
    uint64_t v17 = v118;
    uint64_t v19 = v120;
    uint64_t v96 = v119;
    sub_1B62CA064((uint64_t)v111);
    if (v19 > 0 && v18)
    {
      uint64_t v90 = v18;
      uint64_t v20 = v96;
      uint64_t v95 = v96[4];
      int v94 = *(unsigned __int8 *)(v17 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v21 = type metadata accessor for VFXObjectTag();
      v124[0] = v121;
      v124[1] = v122;
      int v87 = v20 + 8;
      char v88 = v20 + 6;
      uint64_t v125 = v123;
      uint64_t v89 = v21;
      uint64_t v86 = v21 - 8;
      uint64_t v108 = (void (**)(char *, uint64_t))(v101 + 8);
      uint64_t v109 = (void (**)(void, void, void))(v101 + 16);
      uint64_t v97 = (void (**)(void, char *, uint64_t))(v101 + 40);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v22 = 0;
      uint64_t v93 = 0;
      uint64_t v23 = MEMORY[0x1E4FBC870];
      do
      {
        uint64_t v92 = v22;
        uint64_t v24 = (unsigned int *)(v91 + 48 * v22);
        uint64_t v25 = *v24;
        uint64_t v99 = v24[1];
        int v26 = (uint64_t *)*((void *)v24 + 2);
        uint64_t v105 = (void (*)(void, void, void))*((void *)v24 + 3);
        uint64_t v28 = *((void *)v24 + 4);
        uint64_t v27 = *((void *)v24 + 5);
        if (v94)
        {
          BOOL v29 = *(os_unfair_lock_s **)(v27 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v29);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v95);
        sub_1B62D8068((uint64_t)v88, (uint64_t)v128, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v30 = v96;
        uint64_t v31 = v96[4];
        uint64_t v32 = *(void *)(*(void *)(*(void *)(*(void *)(v27 + 40) + 16) + 32) + 16) + 1;
        uint64_t v98 = (char *)v27;
        swift_retain();
        v30[6] = ecs_stack_allocator_allocate(v31, 48 * v32, 8);
        v30[7] = v32;
        uint64_t v33 = v87;
        v87[1] = 0;
        _OWORD v33[2] = 0;
        *uint64_t v33 = 0;
        swift_release();
        uint64_t v102 = sub_1B62C9024(v89, (uint64_t)&off_1F0F5D1E8, v26, (uint64_t)v105, v28, (uint64_t)v30);
        if (v26)
        {
          if (v28)
          {
            uint64_t v34 = 0;
            uint64_t v99 = *(void *)(*(void *)v86 + 72);
            uint64_t v100 = v28;
            do
            {
              char v38 = (void (*)(void, void, void))(v102 + v99 * v34);
              uint64_t v39 = *(void *)(v23 + 16);
              uint64_t v103 = v34;
              if (v39)
              {
                sub_1B6CC740C((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
                swift_bridgeObjectRetain();
                uint64_t v40 = sub_1B6E315A8();
                uint64_t v41 = -1 << *(unsigned char *)(v23 + 32);
                unint64_t v42 = v40 & ~v41;
                if ((*(void *)(v23 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42))
                {
                  uint64_t v105 = v38;
                  uint64_t v43 = ~v41;
                  uint64_t v44 = *(void *)(v101 + 72);
                  uint64_t v45 = *(void (**)(char *, unint64_t, uint64_t))(v101 + 16);
                  while (1)
                  {
                    uint64_t v46 = v107;
                    v45(v107, *(void *)(v23 + 48) + v44 * v42, v7);
                    sub_1B6CC740C(&qword_1EB97D9B0, MEMORY[0x1E4F27990]);
                    char v47 = sub_1B6E31708();
                    (*v108)(v46, v7);
                    if (v47) {
                      break;
                    }
                    unint64_t v42 = (v42 + 1) & v43;
                    if (((*(void *)(v23 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
                    {
                      swift_bridgeObjectRelease();
                      char v38 = v105;
                      goto LABEL_27;
                    }
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v48 = v107;
                  sub_1B6E31108();
                  char v38 = v105;
                  (*v97)(v105, v48, v7);
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
              }
LABEL_27:
              uint64_t v105 = *v109;
              v105(v106, v38, v7);
              sub_1B6CC740C((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
              swift_bridgeObjectRetain();
              uint64_t v49 = sub_1B6E315A8();
              uint64_t v50 = -1 << *(unsigned char *)(v23 + 32);
              unint64_t v51 = v49 & ~v50;
              uint64_t v52 = v23 + 56;
              if ((*(void *)(v23 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51))
              {
                uint64_t v53 = ~v50;
                uint64_t v54 = *(void *)(v101 + 72);
                while (1)
                {
                  uint64_t v55 = v23;
                  char v56 = v107;
                  v105(v107, *(void *)(v23 + 48) + v54 * v51, v7);
                  sub_1B6CC740C(&qword_1EB97D9B0, MEMORY[0x1E4F27990]);
                  char v57 = sub_1B6E31708();
                  uint64_t v58 = *v108;
                  (*v108)(v56, v7);
                  if (v57) {
                    break;
                  }
                  unint64_t v51 = (v51 + 1) & v53;
                  uint64_t v23 = v55;
                  if (((*(void *)(v52 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
                    goto LABEL_17;
                  }
                }
                swift_bridgeObjectRelease();
                v58(v106, v7);
                uint64_t v23 = v55;
              }
              else
              {
LABEL_17:
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                char v36 = v106;
                uint64_t v37 = (uint64_t)v107;
                v105(v107, v106, v7);
                uint64_t v110 = v23;
                sub_1B67EF750(v37, v51, isUniquelyReferenced_nonNull_native);
                uint64_t v23 = v110;
                swift_bridgeObjectRelease();
                (*v108)(v36, v7);
              }
              uint64_t v34 = v103 + 1;
            }
            while (v103 + 1 != v100);
          }
        }
        else if (v25 != v99)
        {
          uint64_t v100 = *(void *)(*(void *)v86 + 72);
          do
          {
            uint64_t v103 = v25;
            uint64_t v64 = (void (*)(void, void, void))(v102 + v100 * v25);
            if (*(void *)(v23 + 16))
            {
              sub_1B6CC740C((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
              swift_bridgeObjectRetain();
              uint64_t v65 = sub_1B6E315A8();
              uint64_t v66 = -1 << *(unsigned char *)(v23 + 32);
              unint64_t v67 = v65 & ~v66;
              if ((*(void *)(v23 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67))
              {
                uint64_t v105 = v64;
                uint64_t v68 = ~v66;
                uint64_t v69 = *(void *)(v101 + 72);
                uint64_t v70 = *(void (**)(char *, unint64_t, uint64_t))(v101 + 16);
                while (1)
                {
                  uint64_t v71 = v107;
                  v70(v107, *(void *)(v23 + 48) + v69 * v67, v7);
                  sub_1B6CC740C(&qword_1EB97D9B0, MEMORY[0x1E4F27990]);
                  char v72 = sub_1B6E31708();
                  (*v108)(v71, v7);
                  if (v72) {
                    break;
                  }
                  unint64_t v67 = (v67 + 1) & v68;
                  if (((*(void *)(v23 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v64 = v105;
                    goto LABEL_47;
                  }
                }
                swift_bridgeObjectRelease();
                uint64_t v73 = v107;
                sub_1B6E31108();
                uint64_t v64 = v105;
                (*v97)(v105, v73, v7);
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
LABEL_47:
            uint64_t v105 = *v109;
            v105(v104, v64, v7);
            sub_1B6CC740C((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
            swift_bridgeObjectRetain();
            uint64_t v74 = sub_1B6E315A8();
            uint64_t v75 = -1 << *(unsigned char *)(v23 + 32);
            unint64_t v76 = v74 & ~v75;
            uint64_t v77 = v23 + 56;
            if ((*(void *)(v23 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76))
            {
              uint64_t v78 = ~v75;
              uint64_t v79 = *(void *)(v101 + 72);
              while (1)
              {
                uint64_t v80 = v23;
                uint64_t v81 = v107;
                v105(v107, *(void *)(v23 + 48) + v79 * v76, v7);
                sub_1B6CC740C(&qword_1EB97D9B0, MEMORY[0x1E4F27990]);
                char v82 = sub_1B6E31708();
                uint64_t v83 = *v108;
                (*v108)(v81, v7);
                if (v82) {
                  break;
                }
                unint64_t v76 = (v76 + 1) & v78;
                uint64_t v23 = v80;
                if (((*(void *)(v77 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76) & 1) == 0) {
                  goto LABEL_37;
                }
              }
              swift_bridgeObjectRelease();
              v83(v104, v7);
              uint64_t v23 = v80;
            }
            else
            {
LABEL_37:
              swift_bridgeObjectRelease();
              char v61 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v62 = (uint64_t)v107;
              uint64_t v63 = v104;
              v105(v107, v104, v7);
              uint64_t v110 = v23;
              sub_1B67EF750(v62, v76, v61);
              uint64_t v23 = v110;
              swift_bridgeObjectRelease();
              (*v108)(v63, v7);
            }
            uint64_t v25 = v103 + 1;
          }
          while (v103 + 1 != v99);
        }
        uint64_t v59 = v93;
        sub_1B6345178(v96, (unsigned __int16 **)v124, (uint64_t)v128);
        uint64_t v93 = v59;
        uint64_t v60 = v98;
        sub_1B634507C(v98);
        ecs_stack_allocator_pop_snapshot(v95);
        if (v94)
        {
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v60 + 43));
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v60 + 47));
        }
        swift_release();
        uint64_t v22 = v92 + 1;
      }
      while (v92 + 1 != v90);
      sub_1B632F220(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F220(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      sub_1B632F220(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v111);
  }
  return swift_bridgeObjectRelease();
}

void *sub_1B6CB56EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v220 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v186 = qword_1EB997A18;
  unint64_t v8 = v6 >> 31;
  int v187 = v7;
  char v188 = v6 >> 31;
  uint64_t v189 = 1;
  char v190 = 2;
  uint64_t v191 = 0;
  swift_retain();
  sub_1B63A7278(3, (uint64_t)v172);
  swift_release();
  v184[0] = v172[0];
  v184[1] = v172[1];
  uint64_t v185 = v173;
  sub_1B62C9DA8(a1, (uint64_t)v184, 0x200000000, v199);
  sub_1B62D8068((uint64_t)v199, (uint64_t)v207, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v207[0])
  {
    uint64_t v10 = 0;
    goto LABEL_126;
  }
  long long v179 = v207[0];
  long long v180 = v207[1];
  uint64_t v181 = v208;
  if (v213 < 1 || (uint64_t v150 = v210) == 0)
  {
    uint64_t v10 = 0;
    goto LABEL_125;
  }
  unint64_t v140 = v6 >> 31;
  int v141 = v7;
  uint64_t v148 = v209;
  int v155 = *(unsigned __int8 *)(v211 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v142 = a1;
  unint64_t v163 = v212;
  unint64_t v165 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v159 = v212[4];
  int v161 = v212 + 13;
  uint64_t v144 = v212 + 8;
  uint64_t v146 = (uint64_t)(v212 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  do
  {
    uint64_t v153 = v9;
    uint64_t v11 = (unsigned int *)(v148 + 48 * v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v14 = (uint64_t *)*((void *)v11 + 2);
    uint64_t v15 = *((void *)v11 + 3);
    uint64_t v16 = *((void *)v11 + 5);
    uint64_t v167 = *((void *)v11 + 4);
    uint64_t v157 = v10;
    if (v155)
    {
      uint64_t v17 = *(os_unfair_lock_s **)(v16 + 376);
      swift_retain();
      os_unfair_lock_lock(v17);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v159);
    sub_1B62D8068(v146, (uint64_t)v219, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v18 = v163[4];
    uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v163[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
    v163[7] = v19;
    v144[1] = 0;
    v144[2] = 0;
    *uint64_t v144 = 0;
    swift_release();
    uint64_t v169 = sub_1B62C9024((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v14, v15, v167, (uint64_t)v163);
    if (v14)
    {
      if (v167)
      {
        uint64_t v20 = 0;
        do
        {
          uint64_t v22 = v14[v20];
          uint64_t v23 = (int *)(v169 + 8 * v20);
          int v24 = *v23;
          int v25 = v23[1];
          char v26 = *(unsigned char *)(v16 + 184);
          uint64_t v27 = swift_retain();
          if (v26) {
            goto LABEL_198;
          }
          int v28 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v22);
          int v29 = *(_DWORD *)(*(void *)(v27 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v28 + 8);
          swift_release();
          BOOL v30 = v24 == v28 && v25 == v29;
          if ((v30
             || ((int v31 = v23[1], v32 = *v23, v32 == -1) ? (v33 = v31 == 0) : (v33 = 0),
                 v33
              || (v32 & 0x80000000) != 0
              || v165[1] <= v32
              || v31 != -1 && *(_DWORD *)(*v165 + 12 * (int)v32 + 8) != v31))
            && (uint64_t v34 = *(void *)(*(void *)(v16 + 40) + 16), v35 = *(void *)(v34 + 128), *(void *)(v35 + 16))
            && (unint64_t v36 = sub_1B62C1A30((uint64_t)&type metadata for Parent), (v37 & 1) != 0)
            && *(ValueMetadata **)(*(void *)(v34 + 24) + 16 * *(void *)(*(void *)(v35 + 56) + 8 * v36) + 32) == &type metadata for Parent)
          {
            uint64_t v193 = &type metadata for Parent;
            long long v194 = &off_1F0FA0430;
            char v198 = 1;
            uint64_t v38 = *(void *)(*v161 + 16);
            if (v38)
            {
              uint64_t v39 = *v161 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v40 = 0;
              while (2)
              {
                sub_1B63B2978(v39, (uint64_t)v200);
                sub_1B639192C((uint64_t)v200, (uint64_t)&v201);
                sub_1B639192C((uint64_t)&v193, (uint64_t)v204);
                switch(BYTE8(v203))
                {
                  case 1:
                    sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                    if (v206 != 1) {
                      goto LABEL_38;
                    }
                    goto LABEL_47;
                  case 2:
                    sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                    if (v206 != 2) {
                      goto LABEL_37;
                    }
                    goto LABEL_52;
                  case 3:
                    sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                    if (v206 == 3)
                    {
LABEL_52:
                      sub_1B62C15C4(v192, (uint64_t)&v216);
                      sub_1B62C15C4((long long *)v204, (uint64_t)v214);
                      uint64_t v45 = *((void *)&v217 + 1);
                      uint64_t v46 = v218;
                      sub_1B62C14BC(&v216, *((uint64_t *)&v217 + 1));
                      LOBYTE(v45) = sub_1B6B3D86C(v214, v45, v46);
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v214);
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v216);
                      sub_1B6391400((uint64_t)&v201);
                      sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                      if (v45)
                      {
LABEL_57:
                        swift_bridgeObjectRelease();
                        uint64_t v49 = sub_1B6B1B930();
                        uint64_t v50 = *(void *)(v48 + 48);
                        if (v50)
                        {
                          uint64_t v51 = *(void *)(v48 + 64);
                          *(void *)(v50 + 8 * v51) = v22;
                          *(void *)(v48 + 64) = v51 + 1;
                        }
                        ((void (*)(long long *, void))v49)(&v201, 0);
                        goto LABEL_67;
                      }
                    }
                    else
                    {
LABEL_37:
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v192);
LABEL_38:
                      sub_1B62E2EA0((uint64_t)&v201, (uint64_t (*)(void))sub_1B691F560);
                      sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                    }
LABEL_39:
                    ++v40;
                    v39 += 72;
                    if (v38 != v40) {
                      continue;
                    }
                    swift_bridgeObjectRelease();
                    break;
                  case 4:
                    sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                    if (v206 != 4) {
                      goto LABEL_38;
                    }
                    int v41 = LOBYTE(v192[0]);
                    int v42 = v204[0];
                    sub_1B6391400((uint64_t)&v201);
                    sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v41 == v42) {
                      goto LABEL_57;
                    }
                    goto LABEL_39;
                  case 5:
                    if (v206 != 5) {
                      goto LABEL_38;
                    }
                    int8x16_t v47 = vorrq_s8(*(int8x16_t *)&v204[8], v205);
                    if (*(void *)&vorr_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)) | *(void *)v204) {
                      goto LABEL_38;
                    }
                    sub_1B6391400((uint64_t)&v201);
                    sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                    goto LABEL_57;
                  default:
                    sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                    if (v206) {
                      goto LABEL_38;
                    }
LABEL_47:
                    uint64_t v43 = *(void *)&v192[0];
                    uint64_t v44 = *(void *)v204;
                    sub_1B6391400((uint64_t)&v201);
                    sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v43 == v44) {
                      goto LABEL_57;
                    }
                    goto LABEL_39;
                }
                break;
              }
            }
            else
            {
              swift_retain();
            }
            uint64_t v52 = *(void *)(v16 + 240) - *(void *)(v16 + 232);
            uint64_t v53 = ecs_stack_allocator_allocate(v163[4], 8 * v52, 8);
            *uint64_t v53 = v22;
            sub_1B639192C((uint64_t)&v193, (uint64_t)&v201);
            *(void *)uint64_t v204 = v53;
            *(void *)&v204[8] = v52;
            *(void *)&v204[16] = 1;
            uint64_t v54 = (void *)v163[13];
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v163[13] = v54;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v54 = sub_1B68C0C6C(0, v54[2] + 1, 1, v54);
              *int v161 = v54;
            }
            unint64_t v57 = v54[2];
            unint64_t v56 = v54[3];
            if (v57 >= v56 >> 1)
            {
              uint64_t v54 = sub_1B68C0C6C(v56 > 1, v57 + 1, 1, v54);
              *int v161 = v54;
            }
            v54[2] = v57 + 1;
            uint64_t v58 = &v54[9 * v57];
            *((_OWORD *)v58 + 2) = v201;
            long long v59 = v202;
            long long v60 = v203;
            long long v61 = *(_OWORD *)v204;
            v58[12] = *(void *)&v204[16];
            *((_OWORD *)v58 + 4) = v60;
            *((_OWORD *)v58 + 5) = v61;
            *((_OWORD *)v58 + 3) = v59;
LABEL_67:
            uint64_t v21 = v167;
            sub_1B6391400((uint64_t)&v193);
            swift_release();
          }
          else
          {
            uint64_t v21 = v167;
          }
        }
        while (++v20 != v21);
      }
    }
    else if (v13 != v12)
    {
      while (1)
      {
        uint64_t v62 = (int *)(v169 + 8 * v13);
        int v63 = *v62;
        int v64 = v62[1];
        char v65 = *(unsigned char *)(v16 + 184);
        uint64_t v66 = swift_retain();
        if (v65) {
          break;
        }
        int v67 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v13);
        int v68 = *(_DWORD *)(*(void *)(v66 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v67 + 8);
        swift_release();
        BOOL v69 = v63 == v67 && v64 == v68;
        if (v69
          || ((int v70 = v62[1], v71 = *v62, v71 == -1) ? (v72 = v70 == 0) : (v72 = 0),
              v72
           || (v71 & 0x80000000) != 0
           || v165[1] <= v71
           || v70 != -1 && *(_DWORD *)(*v165 + 12 * (int)v71 + 8) != v70))
        {
          uint64_t v73 = *(void *)(*(void *)(v16 + 40) + 16);
          uint64_t v74 = *(void *)(v73 + 128);
          if (*(void *)(v74 + 16))
          {
            unint64_t v75 = sub_1B62C1A30((uint64_t)&type metadata for Parent);
            if ((v76 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v73 + 24) + 16 * *(void *)(*(void *)(v74 + 56) + 8 * v75) + 32) == &type metadata for Parent)
            {
              uint64_t v193 = &type metadata for Parent;
              long long v194 = &off_1F0FA0430;
              char v198 = 1;
              uint64_t v77 = *(void *)(*v161 + 16);
              if (v77)
              {
                uint64_t v78 = *v161 + 32;
                swift_retain();
                swift_bridgeObjectRetain();
                uint64_t v79 = 0;
                while (2)
                {
                  sub_1B63B2978(v78, (uint64_t)v200);
                  sub_1B639192C((uint64_t)v200, (uint64_t)&v201);
                  sub_1B639192C((uint64_t)&v193, (uint64_t)v204);
                  switch(BYTE8(v203))
                  {
                    case 1:
                      sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                      if (v206 != 1) {
                        goto LABEL_94;
                      }
                      goto LABEL_100;
                    case 2:
                      sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                      if (v206 != 2) {
                        goto LABEL_93;
                      }
                      goto LABEL_105;
                    case 3:
                      sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                      if (v206 == 3)
                      {
LABEL_105:
                        sub_1B62C15C4(v192, (uint64_t)&v216);
                        sub_1B62C15C4((long long *)v204, (uint64_t)v214);
                        uint64_t v82 = *((void *)&v217 + 1);
                        uint64_t v83 = v218;
                        sub_1B62C14BC(&v216, *((uint64_t *)&v217 + 1));
                        LOBYTE(v82) = sub_1B6B3D86C(v214, v82, v83);
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v214);
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v216);
                        sub_1B6391400((uint64_t)&v201);
                        sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v82)
                        {
LABEL_113:
                          swift_bridgeObjectRelease();
                          char v88 = sub_1B6B1B930();
                          uint64_t v89 = *(void *)(v87 + 48);
                          if (v89)
                          {
                            uint64_t v90 = *(void *)(v87 + 64);
                            *(void *)(v89 + 8 * v90) = v13;
                            *(void *)(v87 + 64) = v90 + 1;
                          }
                          ((void (*)(long long *, void))v88)(&v201, 0);
                          goto LABEL_73;
                        }
                      }
                      else
                      {
LABEL_93:
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v192);
LABEL_94:
                        sub_1B62E2EA0((uint64_t)&v201, (uint64_t (*)(void))sub_1B691F560);
                        sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                      }
LABEL_95:
                      ++v79;
                      v78 += 72;
                      if (v77 != v79) {
                        continue;
                      }
                      swift_bridgeObjectRelease();
                      break;
                    case 4:
                      sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                      if (v206 != 4) {
                        goto LABEL_94;
                      }
                      int v84 = LOBYTE(v192[0]);
                      int v85 = v204[0];
                      sub_1B6391400((uint64_t)&v201);
                      sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                      if (v84 == v85) {
                        goto LABEL_113;
                      }
                      goto LABEL_95;
                    case 5:
                      if (v206 != 5) {
                        goto LABEL_94;
                      }
                      int8x16_t v86 = vorrq_s8(*(int8x16_t *)&v204[8], v205);
                      if (*(void *)&vorr_s8(*(int8x8_t *)v86.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL)) | *(void *)v204) {
                        goto LABEL_94;
                      }
                      sub_1B6391400((uint64_t)&v201);
                      sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                      goto LABEL_113;
                    default:
                      sub_1B639192C((uint64_t)&v201, (uint64_t)v192);
                      if (v206) {
                        goto LABEL_94;
                      }
LABEL_100:
                      uint64_t v80 = *(void *)&v192[0];
                      uint64_t v81 = *(void *)v204;
                      sub_1B6391400((uint64_t)&v201);
                      sub_1B62E2EA0((uint64_t)v200, (uint64_t (*)(void))sub_1B63B29DC);
                      if (v80 == v81) {
                        goto LABEL_113;
                      }
                      goto LABEL_95;
                  }
                  break;
                }
              }
              else
              {
                swift_retain();
              }
              uint64_t v91 = *(void *)(v16 + 240) - *(void *)(v16 + 232);
              uint64_t v92 = ecs_stack_allocator_allocate(v163[4], 8 * v91, 8);
              *uint64_t v92 = v13;
              sub_1B639192C((uint64_t)&v193, (uint64_t)&v201);
              *(void *)uint64_t v204 = v92;
              *(void *)&v204[8] = v91;
              *(void *)&v204[16] = 1;
              uint64_t v93 = (void *)v163[13];
              char v94 = swift_isUniquelyReferenced_nonNull_native();
              v163[13] = v93;
              if ((v94 & 1) == 0)
              {
                uint64_t v93 = sub_1B68C0C6C(0, v93[2] + 1, 1, v93);
                *int v161 = v93;
              }
              unint64_t v96 = v93[2];
              unint64_t v95 = v93[3];
              if (v96 >= v95 >> 1)
              {
                uint64_t v93 = sub_1B68C0C6C(v95 > 1, v96 + 1, 1, v93);
                *int v161 = v93;
              }
              _OWORD v93[2] = v96 + 1;
              uint64_t v97 = &v93[9 * v96];
              *((_OWORD *)v97 + 2) = v201;
              long long v98 = v202;
              long long v99 = v203;
              long long v100 = *(_OWORD *)v204;
              void v97[12] = *(void *)&v204[16];
              *((_OWORD *)v97 + 4) = v99;
              *((_OWORD *)v97 + 5) = v100;
              *((_OWORD *)v97 + 3) = v98;
LABEL_73:
              sub_1B6391400((uint64_t)&v193);
              swift_release();
            }
          }
        }
        if (++v13 == v12) {
          goto LABEL_69;
        }
      }
LABEL_198:
      sub_1B6E32BE8();
      __break(1u);
    }
LABEL_69:
    v182[0] = v179;
    v182[1] = v180;
    uint64_t v183 = v181;
    uint64_t v10 = v157;
    sub_1B6345178(v163, (unsigned __int16 **)v182, (uint64_t)v219);
    sub_1B634507C((char *)v16);
    ecs_stack_allocator_pop_snapshot(v159);
    if (v155)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
    }
    swift_release();
    uint64_t v9 = v153 + 1;
  }
  while (v153 + 1 != v150);
  sub_1B632F220(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  a1 = v142;
  int v7 = v141;
  LOBYTE(v8) = v140;
LABEL_125:
  sub_1B632F220(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_126:
  uint64_t v193 = (ValueMetadata *)qword_1EB997A18;
  LODWORD(v194) = v7;
  BYTE4(v194) = v8;
  uint64_t v195 = 1;
  char v196 = 2;
  uint64_t v197 = 0;
  swift_retain();
  sub_1B6A70BEC(3, (uint64_t)v174);
  swift_release();
  long long v216 = v174[0];
  long long v217 = v174[1];
  uint64_t v218 = v175;
  sub_1B62C9DA8(a1, (uint64_t)&v216, 0x200000000, v200);
  sub_1B62D8068((uint64_t)v200, (uint64_t)&v201, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v201)
  {
    long long v176 = v201;
    long long v177 = v202;
    uint64_t v178 = v203;
    if (v205.i64[1] > 0 && (uint64_t v149 = *(void *)&v204[8]) != 0)
    {
      uint64_t v147 = *((void *)&v203 + 1);
      char v154 = *(unsigned char *)(*(void *)&v204[16] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v152 = *(void *)(v205.i64[0] + 32);
      uint64_t v168 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v156 = (void *)v205.i64[0];
      uint64_t v143 = (void *)(v205.i64[0] + 64);
      uint64_t v145 = v205.i64[0] + 48;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v101 = 0;
      do
      {
        uint64_t v102 = (unsigned int *)(v147 + 48 * v101);
        uint64_t v103 = *v102;
        uint64_t v158 = v10;
        uint64_t v160 = v102[1];
        uint64_t v104 = *((void *)v102 + 3);
        uint64_t v105 = *((void *)v102 + 5);
        uint64_t v164 = *((void *)v102 + 4);
        unint64_t v166 = (uint64_t *)*((void *)v102 + 2);
        if (v154)
        {
          uint64_t v106 = *(os_unfair_lock_s **)(v105 + 376);
          swift_retain();
          os_unfair_lock_lock(v106);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v105 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v152);
        sub_1B62D8068(v145, (uint64_t)v192, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v107 = v156[4];
        uint64_t v108 = *(void *)(*(void *)(*(void *)(*(void *)(v105 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v156[6] = ecs_stack_allocator_allocate(v107, 48 * v108, 8);
        v156[7] = v108;
        v143[1] = 0;
        _OWORD v143[2] = 0;
        *uint64_t v143 = 0;
        swift_release();
        uint64_t v162 = sub_1B62C9024((uint64_t)&type metadata for Children, (uint64_t)&off_1F0FA3898, v166, v104, v164, (uint64_t)v156);
        uint64_t v151 = v101;
        if (v166)
        {
          if (v164)
          {
            uint64_t v109 = v164;
            uint64_t v110 = 0;
            uint64_t v111 = v162;
            do
            {
              uint64_t v112 = *(void *)(v111 + 8 * v110);
              uint64_t v113 = *(void *)(v112 + 16);
              if (v113)
              {
                uint64_t v114 = v166[v110];
                swift_bridgeObjectRetain();
                uint64_t v116 = 0;
                uint64_t v117 = MEMORY[0x1E4FBC860];
                do
                {
                  *(void *)&long long v115 = *(void *)(v112 + 8 * v116 + 32);
                  long long v170 = v115;
                  uint64_t v120 = swift_retain();
                  if (*(unsigned char *)(v105 + 184)) {
                    goto LABEL_198;
                  }
                  int v121 = *(_DWORD *)(*(void *)(v105 + 168) + 4 * v114);
                  int v122 = *(_DWORD *)(*(void *)(v120 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v121 + 8);
                  swift_release();
                  *((void *)&v115 + 1) = *((void *)&v170 + 1);
                  if (v170 != v121 || DWORD1(v170) != v122)
                  {
                    BOOL v124 = v170 == -1 && DWORD1(v170) == 0;
                    if (!v124
                      && (v170 & 0x80000000) == 0
                      && v168[1] > (int)v170
                      && (DWORD1(v170) == -1 || *(_DWORD *)(*v168 + 12 * (int)v170 + 8) == DWORD1(v170)))
                    {
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        sub_1B62E1D20(0, *(void *)(v117 + 16) + 1, 1);
                      }
                      long long v115 = v170;
                      unint64_t v119 = *(void *)(v117 + 16);
                      unint64_t v118 = *(void *)(v117 + 24);
                      if (v119 >= v118 >> 1)
                      {
                        sub_1B62E1D20(v118 > 1, v119 + 1, 1);
                        long long v115 = v170;
                      }
                      *(void *)(v117 + 16) = v119 + 1;
                      *(void *)(v117 + 8 * v119 + 32) = v115;
                    }
                  }
                  ++v116;
                }
                while (v113 != v116);
                swift_bridgeObjectRelease();
                uint64_t v111 = v162;
                uint64_t v109 = v164;
              }
              else
              {
                uint64_t v117 = MEMORY[0x1E4FBC860];
              }
              *(void *)(v111 + 8 * v110) = v117;
              swift_bridgeObjectRelease();
              ++v110;
            }
            while (v110 != v109);
          }
        }
        else if (v103 != v160)
        {
          do
          {
            uint64_t v126 = *(void *)(v162 + 8 * v103);
            uint64_t v127 = *(void *)(v126 + 16);
            if (v127)
            {
              swift_bridgeObjectRetain();
              uint64_t v129 = 0;
              uint64_t v130 = MEMORY[0x1E4FBC860];
              do
              {
                *(void *)&long long v128 = *(void *)(v126 + 8 * v129 + 32);
                long long v171 = v128;
                uint64_t v133 = swift_retain();
                if (*(unsigned char *)(v105 + 184)) {
                  goto LABEL_198;
                }
                int v134 = *(_DWORD *)(*(void *)(v105 + 168) + 4 * v103);
                int v135 = *(_DWORD *)(*(void *)(v133 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v134 + 8);
                swift_release();
                *((void *)&v128 + 1) = *((void *)&v171 + 1);
                if (v171 != v134 || DWORD1(v171) != v135)
                {
                  BOOL v137 = v171 == -1 && DWORD1(v171) == 0;
                  if (!v137
                    && (v171 & 0x80000000) == 0
                    && v168[1] > (int)v171
                    && (DWORD1(v171) == -1 || *(_DWORD *)(*v168 + 12 * (int)v171 + 8) == DWORD1(v171)))
                  {
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      sub_1B62E1D20(0, *(void *)(v130 + 16) + 1, 1);
                    }
                    long long v128 = v171;
                    unint64_t v132 = *(void *)(v130 + 16);
                    unint64_t v131 = *(void *)(v130 + 24);
                    if (v132 >= v131 >> 1)
                    {
                      sub_1B62E1D20(v131 > 1, v132 + 1, 1);
                      long long v128 = v171;
                    }
                    *(void *)(v130 + 16) = v132 + 1;
                    *(void *)(v130 + 8 * v132 + 32) = v128;
                  }
                }
                ++v129;
              }
              while (v127 != v129);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v130 = MEMORY[0x1E4FBC860];
            }
            *(void *)(v162 + 8 * v103) = v130;
            swift_bridgeObjectRelease();
            ++v103;
          }
          while (v103 != v160);
        }
        v214[0] = v176;
        v214[1] = v177;
        uint64_t v215 = v178;
        uint64_t v10 = v158;
        sub_1B6345178(v156, (unsigned __int16 **)v214, (uint64_t)v192);
        sub_1B634507C((char *)v105);
        ecs_stack_allocator_pop_snapshot(v152);
        if (v154)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v105 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v105 + 376));
        }
        swift_release();
        uint64_t v101 = v151 + 1;
      }
      while (v151 + 1 != v149);
    }
    else
    {
      swift_retain();
      swift_retain();
      swift_retain();
    }
    sub_1B62CA064((uint64_t)v174);
    sub_1B62CA064((uint64_t)v172);
    sub_1B632F220(v200, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    return sub_1B632F220(v200, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v174);
    return (void *)sub_1B62CA064((uint64_t)v172);
  }
}

void *sub_1B6CB6B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v26 = qword_1EB997A18;
  int v27 = v7;
  char v28 = v6 >> 31;
  uint64_t v29 = 1;
  char v30 = 2;
  uint64_t v31 = 0;
  swift_retain();
  sub_1B62A068C(3, (uint64_t)v10);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Seed;
  *(void *)(inited + 40) = &off_1F0F9EA48;
  sub_1B62AD184(v11);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v10);
  v13[0] = v11[0];
  v13[1] = v11[1];
  uint64_t v14 = v12;
  sub_1B62C9DA8(a1, (uint64_t)v13, 0x200000000, v32);
  sub_1B62D8068((uint64_t)v32, (uint64_t)&v33, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v33) {
    return (void *)sub_1B62CA064((uint64_t)v11);
  }
  uint64_t v15 = v33;
  int v16 = v34;
  char v17 = v35;
  uint64_t v18 = v36;
  char v19 = v37;
  uint64_t v20 = v38;
  uint64_t v21 = v39;
  long long v22 = v40;
  long long v23 = v41;
  uint64_t v24 = v42;
  uint64_t v25 = v43;
  sub_1B6D86DE0((uint64_t)&v15);
  sub_1B62CA064((uint64_t)v11);
  return sub_1B632F220(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CB6D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  v39[12] = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v28 = qword_1EB997A18;
  int v29 = v7;
  char v30 = v6 >> 31;
  uint64_t v31 = 1;
  char v32 = 2;
  uint64_t v33 = 0;
  swift_retain();
  sub_1B636DA60(1, (uint64_t)v23);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for VFXAssetTag;
  *(void *)(inited + 40) = &off_1F0F58BA8;
  sub_1B62AD184(v24);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v23);
  v26[0] = v24[0];
  v26[1] = v24[1];
  uint64_t v27 = v25;
  sub_1B62C9DA8(a1, (uint64_t)v26, 0x200000000, v38);
  sub_1B62D8068((uint64_t)v38, (uint64_t)v39, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v39[0]) {
    return (void *)sub_1B62CA064((uint64_t)v24);
  }
  uint64_t v9 = v39[5];
  uint64_t v10 = v39[7];
  uint64_t v11 = v39[10];
  sub_1B62CA064((uint64_t)v24);
  if (v11 >= 1 && v10)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = 48 * v10;
    uint64_t v13 = (uint64_t *)(v9 + 40);
    do
    {
      uint64_t v18 = *v13;
      char v19 = *(os_unfair_lock_s **)(*v13 + 376);
      swift_retain();
      os_unfair_lock_lock(v19);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
      int v20 = *(_DWORD *)(v18 + 24);
      swift_retain();
      uint64_t v37 = 0;
      memset(v36, 0, sizeof(v36));
      uint64_t v35 = 0;
      memset(v34, 0, sizeof(v34));
      int v21 = sub_1B637F628(v20, (uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, 0, 0, (uint64_t)v36, (uint64_t)v34);
      swift_release();
      sub_1B62E2EA0((uint64_t)v34, (uint64_t (*)(void))sub_1B63864B4);
      sub_1B62E2EA0((uint64_t)v36, (uint64_t (*)(void))sub_1B63864B4);
      if (sub_1B63B4340(v21))
      {
        sub_1B66603E4(v21);
      }
      else
      {
        uint64_t v14 = *(void *)(v18 + 232);
        uint64_t v15 = *(void *)(v18 + 240);
        char v16 = *(unsigned char *)(v18 + 120);
        uint64_t v17 = *(unsigned int *)(v18 + 28);
        LOBYTE(v36[0]) = *(unsigned char *)(v18 + 32);
        sub_1B628EEF4(v14, v15, v21, v16, v17 | ((unint64_t)LOBYTE(v36[0]) << 32));
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
      swift_release();
      v13 += 6;
      v12 -= 48;
    }
    while (v12);
    sub_1B632F220(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  return sub_1B632F220(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CB7130(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x10000000000) == 0) {
    return result;
  }
  int v4 = a4;
  uint64_t v5 = (uint64_t)result;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v48 = qword_1EB997A18;
  int v49 = v7;
  char v50 = v6 >> 31;
  uint64_t v51 = 1;
  char v52 = 2;
  uint64_t v53 = 0;
  swift_retain();
  sub_1B6A6E6E8(3, (uint64_t)v33);
  swift_release();
  v45[0] = v33[0];
  v45[1] = v33[1];
  uint64_t v46 = v34;
  sub_1B62C9DA8(v5, (uint64_t)v45, 0x200000000, v35);
  sub_1B62D8068((uint64_t)v35, (uint64_t)v36, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v36[0]) {
    return (void *)sub_1B62CA064((uint64_t)v33);
  }
  if (v42 <= 0 || (uint64_t v29 = v39) == 0)
  {
    sub_1B62CA064((uint64_t)v33);
    return sub_1B632F220(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  unint64_t v8 = v41;
  uint64_t v9 = v41[4];
  int v10 = *(unsigned __int8 *)(v40 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v43[0] = v36[0];
  v43[1] = v36[1];
  uint64_t v44 = v37;
  uint64_t v26 = (uint64_t)(v41 + 6);
  uint64_t v27 = v38;
  uint64_t v25 = v41 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v28 = v10;
  do
  {
    uint64_t v13 = (unsigned int *)(v27 + 48 * v11);
    uint64_t v31 = *v13;
    uint64_t v32 = v12;
    uint64_t v30 = v13[1];
    uint64_t v15 = (uint64_t *)*((void *)v13 + 2);
    uint64_t v14 = *((void *)v13 + 3);
    uint64_t v16 = *((void *)v13 + 4);
    uint64_t v17 = *((void *)v13 + 5);
    if (v10)
    {
      uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v9);
    sub_1B62D8068(v26, (uint64_t)v47, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v19 = v8[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v8[7] = v20;
    v25[1] = 0;
    v25[2] = 0;
    *uint64_t v25 = 0;
    swift_release();
    uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, v15, v14, v16, (uint64_t)v8);
    uint64_t v22 = v21;
    if (v15)
    {
      if (v16)
      {
        uint64_t v12 = v32;
        do
        {
          sub_1B685B2A0();
          v22 += 32;
          --v16;
        }
        while (v16);
        goto LABEL_24;
      }
    }
    else if (v31 != v30)
    {
      uint64_t v23 = v21 + 32 * v31;
      uint64_t v24 = v30 - v31;
      uint64_t v12 = v32;
      do
      {
        sub_1B685B2A0();
        v23 += 32;
        --v24;
      }
      while (v24);
      goto LABEL_24;
    }
    uint64_t v12 = v32;
LABEL_24:
    sub_1B6345178(v8, (unsigned __int16 **)v43, (uint64_t)v47);
    sub_1B634507C((char *)v17);
    ecs_stack_allocator_pop_snapshot(v9);
    int v10 = v28;
    if (v28)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    ++v11;
  }
  while (v11 != v29);
  sub_1B62CA064((uint64_t)v33);
  sub_1B632F220(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CB7508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v293 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v258 = qword_1EB997A18;
  unint64_t v8 = v6 >> 31;
  int v259 = v7;
  char v260 = v6 >> 31;
  uint64_t v261 = 1;
  char v262 = 2;
  uint64_t v263 = 0;
  swift_retain();
  sub_1B6A70DF4(1, (uint64_t)v244);
  swift_release();
  v256[0] = v244[0];
  v256[1] = v244[1];
  uint64_t v257 = v245;
  sub_1B62C9DA8(a1, (uint64_t)v256, 0x200000000, v269);
  sub_1B62D8068((uint64_t)v269, (uint64_t)v280, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v280[0])
  {
    long long v177 = v244;
    return (void *)sub_1B62CA064((uint64_t)v177);
  }
  long long v251 = v280[0];
  long long v252 = v280[1];
  uint64_t v221 = v282;
  uint64_t v253 = v281;
  uint64_t v9 = v283;
  uint64_t v10 = v284;
  char v230 = v285;
  uint64_t v11 = v286;
  sub_1B62CA064((uint64_t)v244);
  if (v11 <= 0 || !v9)
  {
    uint64_t v175 = (long long *)v269;
    return sub_1B632F220(v175, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v224 = v230[4];
  char v12 = *(unsigned char *)(v10 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v241 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  char v228 = v230 + 13;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = 0;
  char v14 = 0;
  char v219 = v12;
  uint64_t v232 = a1;
  uint64_t v220 = v9;
LABEL_11:
  uint64_t v15 = (unsigned int *)(v221 + 48 * v13);
  uint64_t v16 = *v15;
  uint64_t v226 = v15[1];
  uint64_t v17 = *((void *)v15 + 3);
  uint64_t v18 = *((void *)v15 + 5);
  uint64_t v234 = *((void *)v15 + 4);
  uint64_t v235 = (uint64_t *)*((void *)v15 + 2);
  uint64_t v222 = v13;
  if (v12)
  {
    uint64_t v19 = *(os_unfair_lock_s **)(v18 + 376);
    swift_retain();
    os_unfair_lock_lock(v19);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
  }
  else
  {
    swift_retain();
  }
  ecs_stack_allocator_push_snapshot(v224);
  sub_1B62D8068((uint64_t)(v230 + 6), (uint64_t)v292, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
  uint64_t v20 = v230[4];
  uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v18 + 40) + 16) + 32) + 16) + 1;
  swift_retain();
  v230[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
  v230[7] = v21;
  v230[9] = 0;
  v230[10] = 0;
  v230[8] = 0;
  swift_release();
  uint64_t v239 = sub_1B62C9024((uint64_t)&type metadata for SubEntity, (uint64_t)&off_1F0FAA000, v235, v17, v234, (uint64_t)v230);
  if (!v235)
  {
    uint64_t v100 = v226;
    if (v16 == v226)
    {
      uint64_t v22 = v232;
      goto LABEL_119;
    }
    char v101 = *(unsigned char *)(v18 + 184);
    uint64_t v102 = swift_retain();
    if (v101)
    {
LABEL_283:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B6CB8CE0);
    }
    while (1)
    {
      uint64_t v104 = v16 + 1;
      int v105 = *(_DWORD *)(*(void *)(v18 + 168) + 4 * v16);
      uint64_t v106 = (int *)(v239 + 8 * v16);
      int v107 = *(_DWORD *)(*(void *)(v102 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v105 + 8);
      swift_release();
      int v108 = v106[1];
      uint64_t v109 = *v106;
      BOOL v110 = v109 == -1 && v108 == 0;
      if (v110
        || (v109 & 0x80000000) != 0
        || v241[1] <= v109
        || (v108 != -1 ? (BOOL v111 = *(_DWORD *)(*v241 + 12 * (int)v109 + 8) == v108) : (BOOL v111 = 1), !v111))
      {
        uint64_t v118 = *(void *)(v18 + 232);
        if (v16 >= *(void *)(v18 + 256) && v16 < v118) {
          goto LABEL_123;
        }
        uint64_t v236 = v16 + 1;
        uint64_t v267 = 0;
        long long v265 = 0u;
        long long v266 = 0u;
        char v268 = 5;
        uint64_t v120 = *(void *)(*v228 + 16);
        if (v120)
        {
          uint64_t v121 = *v228 + 32;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v122 = 0;
          while (2)
          {
            sub_1B63B2978(v121, (uint64_t)&v270);
            sub_1B639192C((uint64_t)&v270, (uint64_t)&v274);
            sub_1B639192C((uint64_t)&v265, (uint64_t)v277);
            switch(BYTE8(v276))
            {
              case 1:
                sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
                if (v279 != 1) {
                  goto LABEL_150;
                }
                goto LABEL_164;
              case 2:
                sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
                if (v279 != 2) {
                  goto LABEL_149;
                }
                goto LABEL_161;
              case 3:
                sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
                if (v279 == 3)
                {
LABEL_161:
                  sub_1B62C15C4(v264, (uint64_t)&v289);
                  sub_1B62C15C4((long long *)v277, (uint64_t)v287);
                  uint64_t v125 = *((void *)&v290 + 1);
                  uint64_t v126 = v291;
                  sub_1B62C14BC(&v289, *((uint64_t *)&v290 + 1));
                  LOBYTE(v125) = sub_1B6B3D86C(v287, v125, v126);
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v287);
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v289);
                  sub_1B6391400((uint64_t)&v274);
                  sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
                  if (v125)
                  {
LABEL_169:
                    swift_bridgeObjectRelease();
                    unint64_t v131 = sub_1B6B1B930();
                    uint64_t v132 = *(void *)(v130 + 48);
                    if (v132)
                    {
                      uint64_t v133 = *(void *)(v130 + 64);
                      *(void *)(v132 + 8 * v133) = v16;
                      *(void *)(v130 + 64) = v133 + 1;
                    }
                    ((void (*)(long long *, void))v131)(&v274, 0);
                    uint64_t v22 = v232;
                    uint64_t v100 = v226;
                    uint64_t v104 = v236;
                    goto LABEL_179;
                  }
                }
                else
                {
LABEL_149:
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v264);
LABEL_150:
                  sub_1B62E2EA0((uint64_t)&v274, (uint64_t (*)(void))sub_1B691F560);
                  sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
                }
LABEL_151:
                ++v122;
                v121 += 72;
                if (v120 != v122) {
                  continue;
                }
                swift_bridgeObjectRelease();
                uint64_t v118 = *(void *)(v18 + 232);
                break;
              case 4:
                sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
                if (v279 != 4) {
                  goto LABEL_150;
                }
                int v123 = LOBYTE(v264[0]);
                int v124 = v277[0];
                sub_1B6391400((uint64_t)&v274);
                sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
                if (v123 == v124) {
                  goto LABEL_169;
                }
                goto LABEL_151;
              case 5:
                if (v279 != 5) {
                  goto LABEL_150;
                }
                int8x16_t v129 = vorrq_s8(*(int8x16_t *)&v277[8], v278);
                if (*(void *)&vorr_s8(*(int8x8_t *)v129.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v129, v129, 8uLL)) | *(void *)v277) {
                  goto LABEL_150;
                }
                sub_1B6391400((uint64_t)&v274);
                sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
                goto LABEL_169;
              default:
                sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
                if (v279) {
                  goto LABEL_150;
                }
LABEL_164:
                uint64_t v127 = *(void *)&v264[0];
                uint64_t v128 = *(void *)v277;
                sub_1B6391400((uint64_t)&v274);
                sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
                if (v127 == v128) {
                  goto LABEL_169;
                }
                goto LABEL_151;
            }
            break;
          }
        }
        else
        {
          swift_retain();
        }
        uint64_t v134 = *(void *)(v18 + 240) - v118;
        int v135 = ecs_stack_allocator_allocate(v230[4], 8 * v134, 8);
        *int v135 = v16;
        sub_1B639192C((uint64_t)&v265, (uint64_t)&v274);
        *(void *)v277 = v135;
        *(void *)&v277[8] = v134;
        *(void *)&v277[16] = 1;
        uint64_t v136 = (void *)v230[13];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v230[13] = v136;
        uint64_t v100 = v226;
        uint64_t v104 = v16 + 1;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v136 = sub_1B68C0C6C(0, v136[2] + 1, 1, v136);
          *char v228 = v136;
        }
        uint64_t v22 = v232;
        unint64_t v139 = v136[2];
        unint64_t v138 = v136[3];
        if (v139 >= v138 >> 1)
        {
          uint64_t v136 = sub_1B68C0C6C(v138 > 1, v139 + 1, 1, v136);
          *char v228 = v136;
        }
        _OWORD v136[2] = v139 + 1;
        unint64_t v140 = &v136[9 * v139];
        *((_OWORD *)v140 + 2) = v274;
        long long v141 = v275;
        long long v142 = v276;
        long long v143 = *(_OWORD *)v277;
        v140[12] = *(void *)&v277[16];
        *((_OWORD *)v140 + 4) = v142;
        *((_OWORD *)v140 + 5) = v143;
        *((_OWORD *)v140 + 3) = v141;
LABEL_179:
        uint64_t v144 = &v265;
      }
      else
      {
        uint64_t v112 = (int *)(*v241 + 12 * (int)v109);
        uint64_t v113 = *(void *)(*(void *)(v232 + 136) + 8 * *v112 + 32);
        uint64_t v114 = *(void *)(v113 + 48);
        uint64_t v115 = *(void *)(v114 + 16);
        if (!v115) {
          goto LABEL_141;
        }
        int v116 = *((__int16 *)v112 + 2);
        uint64_t v117 = (void *)(v114 + 56);
        while ((ValueMetadata *)*(v117 - 3) != &type metadata for EmitterDescription)
        {
          v117 += 5;
          if (!--v115) {
            goto LABEL_141;
          }
        }
        uint64_t v145 = (uint64_t *)(*(void *)(v113 + 128) + *v117 + 88 * v116);
        uint64_t v147 = *v145;
        uint64_t v146 = v145[1];
        uint64_t v149 = v145[2];
        uint64_t v148 = v145[3];
        uint64_t v150 = *(void *)(v147 + 16);
        if (v150)
        {
          uint64_t v151 = (_DWORD *)(v147 + 36);
          while (*(v151 - 1) != v105 || *v151 != v107)
          {
            v151 += 2;
            if (!--v150) {
              goto LABEL_188;
            }
          }
          goto LABEL_141;
        }
LABEL_188:
        uint64_t v153 = *(void *)(v146 + 16);
        if (v153)
        {
          char v154 = (_DWORD *)(v146 + 36);
          while (*(v154 - 1) != v105 || *v154 != v107)
          {
            v154 += 2;
            if (!--v153) {
              goto LABEL_195;
            }
          }
          goto LABEL_141;
        }
LABEL_195:
        uint64_t v156 = *(void *)(v149 + 16);
        if (v156)
        {
          uint64_t v157 = (_DWORD *)(v149 + 36);
          while (*(v157 - 1) != v105 || *v157 != v107)
          {
            v157 += 2;
            if (!--v156) {
              goto LABEL_202;
            }
          }
          goto LABEL_141;
        }
LABEL_202:
        uint64_t v159 = *(void *)(v148 + 16);
        if (v159)
        {
          uint64_t v160 = (_DWORD *)(v148 + 36);
          while (*(v160 - 1) != v105 || *v160 != v107)
          {
            v160 += 2;
            if (!--v159) {
              goto LABEL_209;
            }
          }
LABEL_141:
          uint64_t v22 = v232;
          if (v104 == v100) {
            goto LABEL_119;
          }
          goto LABEL_125;
        }
LABEL_209:
        uint64_t v162 = *(void *)(v18 + 232);
        if (v16 >= *(void *)(v18 + 256) && v16 < v162)
        {
LABEL_123:
          uint64_t v22 = v232;
          goto LABEL_124;
        }
        uint64_t v237 = v16 + 1;
        uint64_t v272 = 0;
        long long v270 = 0u;
        long long v271 = 0u;
        char v273 = 5;
        uint64_t v164 = *(void *)(*v228 + 16);
        if (v164)
        {
          uint64_t v165 = *v228 + 32;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v166 = 0;
          while ((sub_1B6B1E658(v165, (uint64_t)&v270) & 1) == 0)
          {
            ++v166;
            v165 += 72;
            if (v164 == v166)
            {
              swift_bridgeObjectRelease();
              uint64_t v162 = *(void *)(v18 + 232);
              goto LABEL_219;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v172 = sub_1B6B1B930();
          uint64_t v173 = *(void *)(v171 + 48);
          if (v173)
          {
            uint64_t v174 = *(void *)(v171 + 64);
            *(void *)(v173 + 8 * v174) = v16;
            *(void *)(v171 + 64) = v174 + 1;
          }
          ((void (*)(long long *, void))v172)(&v274, 0);
        }
        else
        {
          swift_retain();
LABEL_219:
          uint64_t v167 = *(void *)(v18 + 240) - v162;
          uint64_t v168 = ecs_stack_allocator_allocate(v230[4], 8 * v167, 8);
          *uint64_t v168 = v16;
          sub_1B639192C((uint64_t)&v270, (uint64_t)&v274);
          *(void *)v277 = v168;
          *(void *)&v277[8] = v167;
          *(void *)&v277[16] = 1;
          sub_1B69FFBD4();
          uint64_t v169 = *(void *)(v230[13] + 16);
          sub_1B69FFCD8(v169);
          sub_1B69FFDCC(v169, (uint64_t)&v274);
          nullsub_1(v170);
        }
        uint64_t v22 = v232;
        uint64_t v104 = v237;
        uint64_t v144 = &v270;
      }
      sub_1B6391400((uint64_t)v144);
      swift_release();
LABEL_124:
      char v14 = 1;
      if (v104 == v100) {
        goto LABEL_119;
      }
LABEL_125:
      char v103 = *(unsigned char *)(v18 + 184);
      uint64_t v102 = swift_retain();
      uint64_t v16 = v104;
      if (v103) {
        goto LABEL_283;
      }
    }
  }
  uint64_t v22 = v232;
  if (!v234) {
    goto LABEL_119;
  }
  uint64_t v23 = 0;
  while (1)
  {
LABEL_18:
    uint64_t v24 = v235[v23];
    char v25 = *(unsigned char *)(v18 + 184);
    uint64_t v26 = swift_retain();
    if (v25) {
      goto LABEL_283;
    }
    int v27 = *(_DWORD *)(*(void *)(v18 + 168) + 4 * v24);
    int v28 = (int *)(v239 + 8 * v23);
    int v29 = *(_DWORD *)(*(void *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v27 + 8);
    swift_release();
    int v30 = v28[1];
    uint64_t v31 = *v28;
    if (v31 == -1 && v30 == 0) {
      break;
    }
    if ((v31 & 0x80000000) != 0) {
      break;
    }
    if (v241[1] <= v31) {
      break;
    }
    uint64_t v33 = *v241;
    if (v30 != -1 && *(_DWORD *)(v33 + 12 * (int)v31 + 8) != v30) {
      break;
    }
    uint64_t v34 = (int *)(v33 + 12 * (int)v31);
    uint64_t v35 = *(void *)(*(void *)(v22 + 136) + 8 * *v34 + 32);
    uint64_t v36 = *(void *)(v35 + 48);
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      int v38 = *((__int16 *)v34 + 2);
      uint64_t v39 = (void *)(v36 + 56);
      while ((ValueMetadata *)*(v39 - 3) != &type metadata for EmitterDescription)
      {
        v39 += 5;
        if (!--v37) {
          goto LABEL_17;
        }
      }
      uint64_t v40 = (uint64_t *)(*(void *)(v35 + 128) + *v39 + 88 * v38);
      uint64_t v42 = *v40;
      uint64_t v41 = v40[1];
      uint64_t v44 = v40[2];
      uint64_t v43 = v40[3];
      uint64_t v45 = *(void *)(v42 + 16);
      if (v45)
      {
        uint64_t v46 = (_DWORD *)(v42 + 36);
        while (*(v46 - 1) != v27 || *v46 != v29)
        {
          v46 += 2;
          if (!--v45) {
            goto LABEL_39;
          }
        }
      }
      else
      {
LABEL_39:
        uint64_t v48 = *(void *)(v41 + 16);
        if (v48)
        {
          int v49 = (_DWORD *)(v41 + 36);
          while (*(v49 - 1) != v27 || *v49 != v29)
          {
            v49 += 2;
            if (!--v48) {
              goto LABEL_46;
            }
          }
        }
        else
        {
LABEL_46:
          uint64_t v51 = *(void *)(v44 + 16);
          if (v51)
          {
            char v52 = (_DWORD *)(v44 + 36);
            while (*(v52 - 1) != v27 || *v52 != v29)
            {
              v52 += 2;
              if (!--v51) {
                goto LABEL_53;
              }
            }
          }
          else
          {
LABEL_53:
            uint64_t v54 = *(void *)(v43 + 16);
            if (!v54)
            {
LABEL_60:
              uint64_t v57 = *(void *)(v18 + 232);
              if (v24 < *(void *)(v18 + 256) || v24 >= v57)
              {
                uint64_t v272 = 0;
                long long v270 = 0u;
                long long v271 = 0u;
                char v273 = 5;
                uint64_t v59 = *(void *)(*v228 + 16);
                if (v59)
                {
                  uint64_t v60 = *v228 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v61 = 0;
                  while ((sub_1B6B1E658(v60, (uint64_t)&v270) & 1) == 0)
                  {
                    ++v61;
                    v60 += 72;
                    if (v59 == v61)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v57 = *(void *)(v18 + 232);
                      goto LABEL_109;
                    }
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v97 = sub_1B6B1B930();
                  uint64_t v98 = *(void *)(v96 + 48);
                  if (v98)
                  {
                    uint64_t v99 = *(void *)(v96 + 64);
                    *(void *)(v98 + 8 * v99) = v24;
                    *(void *)(v96 + 64) = v99 + 1;
                  }
                  ((void (*)(long long *, void))v97)(&v274, 0);
                }
                else
                {
                  swift_retain();
LABEL_109:
                  uint64_t v92 = *(void *)(v18 + 240) - v57;
                  uint64_t v93 = ecs_stack_allocator_allocate(v230[4], 8 * v92, 8);
                  *uint64_t v93 = v24;
                  sub_1B639192C((uint64_t)&v270, (uint64_t)&v274);
                  *(void *)v277 = v93;
                  *(void *)&v277[8] = v92;
                  *(void *)&v277[16] = 1;
                  sub_1B69FFBD4();
                  uint64_t v94 = *(void *)(v230[13] + 16);
                  sub_1B69FFCD8(v94);
                  sub_1B69FFDCC(v94, (uint64_t)&v274);
                  nullsub_1(v95);
                }
                uint64_t v22 = v232;
                uint64_t v80 = v234;
                uint64_t v91 = &v270;
                goto LABEL_114;
              }
LABEL_99:
              uint64_t v80 = v234;
              goto LABEL_115;
            }
            uint64_t v55 = (_DWORD *)(v43 + 36);
            while (*(v55 - 1) != v27 || *v55 != v29)
            {
              v55 += 2;
              if (!--v54) {
                goto LABEL_60;
              }
            }
          }
        }
      }
    }
LABEL_17:
    if (++v23 == v234) {
      goto LABEL_119;
    }
  }
  uint64_t v62 = *(void *)(v18 + 232);
  if (v24 >= *(void *)(v18 + 256) && v24 < v62) {
    goto LABEL_99;
  }
  uint64_t v267 = 0;
  long long v265 = 0u;
  long long v266 = 0u;
  char v268 = 5;
  uint64_t v64 = *(void *)(*v228 + 16);
  if (!v64)
  {
    swift_retain();
    goto LABEL_102;
  }
  uint64_t v65 = *v228 + 32;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v66 = 0;
  while (2)
  {
    sub_1B63B2978(v65, (uint64_t)&v270);
    sub_1B639192C((uint64_t)&v270, (uint64_t)&v274);
    sub_1B639192C((uint64_t)&v265, (uint64_t)v277);
    switch(BYTE8(v276))
    {
      case 1:
        sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
        if (v279 != 1) {
          goto LABEL_76;
        }
        goto LABEL_86;
      case 2:
        sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
        if (v279 != 2) {
          goto LABEL_75;
        }
        goto LABEL_91;
      case 3:
        sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
        if (v279 != 3)
        {
LABEL_75:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v264);
LABEL_76:
          sub_1B62E2EA0((uint64_t)&v274, (uint64_t (*)(void))sub_1B691F560);
          sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
          goto LABEL_77;
        }
LABEL_91:
        sub_1B62C15C4(v264, (uint64_t)&v289);
        sub_1B62C15C4((long long *)v277, (uint64_t)v287);
        uint64_t v72 = *((void *)&v290 + 1);
        uint64_t v73 = v291;
        sub_1B62C14BC(&v289, *((uint64_t *)&v290 + 1));
        uint64_t v74 = v73;
        uint64_t v22 = v232;
        LOBYTE(v72) = sub_1B6B3D86C(v287, v72, v74);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v287);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v289);
        sub_1B6391400((uint64_t)&v274);
        sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
        if ((v72 & 1) == 0)
        {
LABEL_77:
          ++v66;
          v65 += 72;
          if (v64 == v66)
          {
            swift_bridgeObjectRelease();
            uint64_t v62 = *(void *)(v18 + 232);
LABEL_102:
            uint64_t v81 = *(void *)(v18 + 240) - v62;
            uint64_t v82 = ecs_stack_allocator_allocate(v230[4], 8 * v81, 8);
            *uint64_t v82 = v24;
            sub_1B639192C((uint64_t)&v265, (uint64_t)&v274);
            *(void *)v277 = v82;
            *(void *)&v277[8] = v81;
            *(void *)&v277[16] = 1;
            uint64_t v83 = (void *)v230[13];
            char v84 = swift_isUniquelyReferenced_nonNull_native();
            v230[13] = v83;
            if ((v84 & 1) == 0)
            {
              uint64_t v83 = sub_1B68C0C6C(0, v83[2] + 1, 1, v83);
              *char v228 = v83;
            }
            unint64_t v86 = v83[2];
            unint64_t v85 = v83[3];
            if (v86 >= v85 >> 1)
            {
              uint64_t v83 = sub_1B68C0C6C(v85 > 1, v86 + 1, 1, v83);
              *char v228 = v83;
            }
            v83[2] = v86 + 1;
            uint64_t v87 = &v83[9 * v86];
            *((_OWORD *)v87 + 2) = v274;
            long long v88 = v275;
            long long v89 = v276;
            long long v90 = *(_OWORD *)v277;
            v87[12] = *(void *)&v277[16];
            *((_OWORD *)v87 + 4) = v89;
            *((_OWORD *)v87 + 5) = v90;
            *((_OWORD *)v87 + 3) = v88;
            goto LABEL_107;
          }
          continue;
        }
LABEL_96:
        swift_bridgeObjectRelease();
        uint64_t v77 = sub_1B6B1B930();
        uint64_t v78 = *(void *)(v76 + 48);
        if (v78)
        {
          uint64_t v79 = *(void *)(v76 + 64);
          *(void *)(v78 + 8 * v79) = v24;
          *(void *)(v76 + 64) = v79 + 1;
        }
        ((void (*)(long long *, void))v77)(&v274, 0);
LABEL_107:
        uint64_t v80 = v234;
        uint64_t v91 = &v265;
LABEL_114:
        sub_1B6391400((uint64_t)v91);
        swift_release();
LABEL_115:
        ++v23;
        char v14 = 1;
        if (v23 != v80) {
          goto LABEL_18;
        }
LABEL_119:
        v254[0] = v251;
        v254[1] = v252;
        uint64_t v255 = v253;
        sub_1B6345178(v230, (unsigned __int16 **)v254, (uint64_t)v292);
        sub_1B634507C((char *)v18);
        ecs_stack_allocator_pop_snapshot(v224);
        char v12 = v219;
        if (v219)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
        }
        swift_release();
        uint64_t v13 = v222 + 1;
        if (v222 + 1 != v220) {
          goto LABEL_11;
        }
        sub_1B632F220(v269, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t result = sub_1B632F220(v269, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        if (v14)
        {
          *(void *)&long long v265 = qword_1EB997A18;
          DWORD2(v265) = v7;
          BYTE12(v265) = v8;
          *(void *)&long long v266 = 1;
          BYTE8(v266) = 2;
          uint64_t v267 = 0;
          swift_retain();
          sub_1B67D00C8((uint64_t)v246);
          swift_release();
          long long v289 = v246[0];
          long long v290 = v246[1];
          uint64_t v291 = v247;
          sub_1B62C9DA8(v22, (uint64_t)&v289, 0x200000000, &v270);
          sub_1B62D8068((uint64_t)&v270, (uint64_t)&v274, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
          if ((void)v274)
          {
            long long v248 = v274;
            long long v249 = v275;
            uint64_t v227 = *((void *)&v276 + 1);
            uint64_t v250 = v276;
            uint64_t v178 = *(void *)&v277[8];
            uint64_t v179 = *(void *)&v277[16];
            int8x16_t v180 = v278;
            sub_1B62CA064((uint64_t)v246);
            if (v180.i64[1] > 0 && v178)
            {
              uint64_t v233 = *(void *)(v180.i64[0] + 32);
              int v181 = *(unsigned __int8 *)(v179 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
              v287[0] = v248;
              v287[1] = v249;
              uint64_t v288 = v250;
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v182 = 0;
              uint64_t v183 = MEMORY[0x1E4FBC860];
              int v223 = v181;
              uint64_t v225 = v178;
              do
              {
                uint64_t v184 = (unsigned int *)(v227 + 48 * v182);
                uint64_t v185 = *v184;
                int v187 = (uint64_t *)*((void *)v184 + 2);
                uint64_t v186 = *((void *)v184 + 3);
                uint64_t v188 = *((void *)v184 + 5);
                uint64_t v238 = v184[1];
                uint64_t v240 = *((void *)v184 + 4);
                uint64_t v231 = v182;
                if (v181)
                {
                  uint64_t v189 = *(os_unfair_lock_s **)(v188 + 376);
                  swift_retain();
                  os_unfair_lock_lock(v189);
                  os_unfair_lock_lock(*(os_unfair_lock_t *)(v188 + 344));
                }
                else
                {
                  swift_retain();
                }
                ecs_stack_allocator_push_snapshot(v233);
                sub_1B62D8068(v180.i64[0] + 48, (uint64_t)v264, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
                uint64_t v190 = *(void *)(v180.i64[0] + 32);
                uint64_t v191 = *(void *)(*(void *)(*(void *)(*(void *)(v188 + 40) + 16) + 32) + 16) + 1;
                swift_retain();
                *(void *)(v180.i64[0] + 48) = ecs_stack_allocator_allocate(v190, 48 * v191, 8);
                *(void *)(v180.i64[0] + 56) = v191;
                *(void *)(v180.i64[0] + 72) = 0;
                *(void *)(v180.i64[0] + 80) = 0;
                *(void *)(v180.i64[0] + 64) = 0;
                swift_release();
                uint64_t v192 = v240;
                uint64_t v229 = v188;
                uint64_t v193 = sub_1B62C9024((uint64_t)&type metadata for Children, (uint64_t)&off_1F0FA3898, v187, v186, v240, v180.i64[0]);
                if (v187)
                {
                  if (v240)
                  {
                    uint64_t v194 = 0;
                    do
                    {
                      uint64_t v196 = *(void *)(v193 + 8 * v194);
                      uint64_t v242 = v183;
                      uint64_t v197 = *(void *)(v196 + 16);
                      if (v197)
                      {
                        swift_bridgeObjectRetain();
                        char v198 = (unsigned int *)(v196 + 36);
                        uint64_t v199 = v241;
                        do
                        {
                          uint64_t v200 = (int)*(v198 - 1);
                          uint64_t v201 = *v198;
                          BOOL v202 = v200 == -1 && v201 == 0;
                          if (!v202
                            && (v200 & 0x80000000) == 0
                            && v199[1] > v200
                            && (v201 == -1 || *(_DWORD *)(*v199 + 12 * (int)v200 + 8) == v201))
                          {
                            uint64_t v204 = *(v198 - 1);
                            sub_1B691D98C();
                            uint64_t v205 = *(void *)(v242 + 16);
                            sub_1B691DA48(v205);
                            uint64_t v206 = sub_1B691DACC(v205, v204 | (v201 << 32));
                            nullsub_1(v206);
                            uint64_t v199 = v241;
                          }
                          v198 += 2;
                          --v197;
                        }
                        while (v197);
                        swift_bridgeObjectRelease();
                        uint64_t v195 = v242;
                        uint64_t v183 = MEMORY[0x1E4FBC860];
                        uint64_t v192 = v240;
                      }
                      else
                      {
                        uint64_t v195 = v183;
                      }
                      *(void *)(v193 + 8 * v194) = v195;
                      swift_bridgeObjectRelease();
                      ++v194;
                    }
                    while (v194 != v192);
                  }
                }
                else if (v185 != v238)
                {
                  do
                  {
                    uint64_t v208 = *(void *)(v193 + 8 * v185);
                    uint64_t v243 = v183;
                    uint64_t v209 = *(void *)(v208 + 16);
                    if (v209)
                    {
                      swift_bridgeObjectRetain();
                      uint64_t v210 = (unsigned int *)(v208 + 36);
                      uint64_t v211 = v241;
                      do
                      {
                        uint64_t v212 = (int)*(v210 - 1);
                        uint64_t v213 = *v210;
                        BOOL v214 = v212 == -1 && v213 == 0;
                        if (!v214
                          && (v212 & 0x80000000) == 0
                          && v211[1] > v212
                          && (v213 == -1 || *(_DWORD *)(*v211 + 12 * (int)v212 + 8) == v213))
                        {
                          uint64_t v216 = *(v210 - 1);
                          sub_1B691D98C();
                          uint64_t v217 = *(void *)(v243 + 16);
                          sub_1B691DA48(v217);
                          uint64_t v218 = sub_1B691DACC(v217, v216 | (v213 << 32));
                          nullsub_1(v218);
                          uint64_t v211 = v241;
                        }
                        v210 += 2;
                        --v209;
                      }
                      while (v209);
                      swift_bridgeObjectRelease();
                      uint64_t v207 = v243;
                      uint64_t v183 = MEMORY[0x1E4FBC860];
                    }
                    else
                    {
                      uint64_t v207 = v183;
                    }
                    *(void *)(v193 + 8 * v185) = v207;
                    swift_bridgeObjectRelease();
                    ++v185;
                  }
                  while (v185 != v238);
                }
                sub_1B6345178(v180.i64[0], (unsigned __int16 **)v287, (uint64_t)v264);
                sub_1B634507C((char *)v229);
                ecs_stack_allocator_pop_snapshot(v233);
                int v181 = v223;
                if (v223)
                {
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v229 + 344));
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v229 + 376));
                }
                swift_release();
                uint64_t v182 = v231 + 1;
              }
              while (v231 + 1 != v225);
              sub_1B632F220(&v270, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
              uint64_t v175 = &v270;
            }
            else
            {
              uint64_t v175 = &v270;
            }
            return sub_1B632F220(v175, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          }
          long long v177 = v246;
          return (void *)sub_1B62CA064((uint64_t)v177);
        }
        return result;
      case 4:
        sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
        if (v279 != 4) {
          goto LABEL_76;
        }
        int v67 = LOBYTE(v264[0]);
        int v68 = v277[0];
        sub_1B6391400((uint64_t)&v274);
        sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v69 = v67 == v68;
        goto LABEL_87;
      case 5:
        if (v279 != 5) {
          goto LABEL_76;
        }
        int8x16_t v75 = vorrq_s8(*(int8x16_t *)&v277[8], v278);
        if (*(void *)&vorr_s8(*(int8x8_t *)v75.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)) | *(void *)v277) {
          goto LABEL_76;
        }
        sub_1B6391400((uint64_t)&v274);
        sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
        goto LABEL_96;
      default:
        sub_1B639192C((uint64_t)&v274, (uint64_t)v264);
        if (v279) {
          goto LABEL_76;
        }
LABEL_86:
        uint64_t v70 = *(void *)&v264[0];
        uint64_t v71 = *(void *)v277;
        sub_1B6391400((uint64_t)&v274);
        sub_1B62E2EA0((uint64_t)&v270, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v69 = v70 == v71;
LABEL_87:
        uint64_t v22 = v232;
        if (!v69) {
          goto LABEL_77;
        }
        goto LABEL_96;
    }
  }
}

void *sub_1B6CB8D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v195 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v165 = qword_1EB997A18;
  int v166 = v7;
  char v167 = v6 >> 31;
  uint64_t v168 = 1;
  char v169 = 2;
  uint64_t v170 = 0;
  swift_retain();
  sub_1B67D02D4((uint64_t)v156);
  swift_release();
  v163[0] = v156[0];
  v163[1] = v156[1];
  uint64_t v164 = v157;
  sub_1B62C9DA8(a1, (uint64_t)v163, 0x200000000, v186);
  sub_1B62D8068((uint64_t)v186, (uint64_t)v187, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v187[0]) {
    return (void *)sub_1B62CA064((uint64_t)v156);
  }
  long long v158 = v187[0];
  long long v159 = v187[1];
  uint64_t v160 = v188;
  if (v193 > 0)
  {
    uint64_t v144 = v190;
    if (v190)
    {
      uint64_t v143 = v189;
      uint64_t v8 = v191;
      int v9 = *(unsigned __int8 *)(v191 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v10 = v192[4];
      uint64_t v147 = v192 + 13;
      uint64_t v148 = v192;
      unint64_t v139 = v192 + 8;
      uint64_t v140 = (uint64_t)(v192 + 6);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v154 = v8;
      int v142 = v9;
      uint64_t v141 = v10;
      while (1)
      {
        uint64_t v145 = v12;
        uint64_t v146 = v11;
        uint64_t v13 = (unsigned int *)(v143 + 48 * v11);
        uint64_t v14 = *v13;
        uint64_t v15 = *((void *)v13 + 3);
        uint64_t v151 = v13[1];
        uint64_t v153 = (uint64_t *)*((void *)v13 + 2);
        uint64_t v16 = *((void *)v13 + 5);
        uint64_t v149 = *((void *)v13 + 4);
        if (v9)
        {
          uint64_t v17 = *(os_unfair_lock_s **)(v16 + 376);
          swift_retain();
          os_unfair_lock_lock(v17);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v10);
        sub_1B62D8068(v140, (uint64_t)v194, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v18 = v148[4];
        uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v148[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
        v148[7] = v19;
        v139[1] = 0;
        v139[2] = 0;
        *unint64_t v139 = 0;
        swift_release();
        uint64_t v20 = v149;
        uint64_t v155 = sub_1B62C9024((uint64_t)&type metadata for SubEntity, (uint64_t)&off_1F0FAA000, v153, v15, v149, (uint64_t)v148);
        uint64_t v150 = v16;
        if (v153)
        {
          if (v149)
          {
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = v153[v21];
              uint64_t v23 = *(void *)(v155 + 8 * v21);
              uint64_t v24 = *(void *)(v16 + 16);
              char v25 = *(unsigned char *)(v16 + 184);
              swift_retain();
              if (v25) {
                goto LABEL_136;
              }
              int v26 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v22);
              int v27 = *(_DWORD *)(*(void *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v26 + 8);
              swift_retain();
              swift_release();
              if (v26 == -1 && v27 == 0)
              {
                swift_release();
              }
              else
              {
                uint64_t v152 = v22;
                uint64_t v29 = swift_allocObject();
                *(void *)(v29 + 16) = &type metadata for IsSubEntityOf;
                *(void *)(v29 + 24) = &off_1F0F5FCE0;
                uint64_t v30 = swift_allocObject();
                *(void *)(v30 + 16) = sub_1B6CC85F4;
                *(void *)(v30 + 24) = v29;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v32 = v8;
                char v33 = isUniquelyReferenced_nonNull_native;
                *(void *)&long long v176 = *(void *)(v32 + 208);
                uint64_t v34 = v176;
                *(void *)(v32 + 208) = 0x8000000000000000;
                unint64_t v35 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf);
                char v37 = v36;
                uint64_t v38 = *(void *)(v34 + 16) + ((v36 & 1) == 0);
                if (*(void *)(v34 + 24) >= v38)
                {
                  if ((v33 & 1) == 0)
                  {
                    sub_1B6ACD434();
                    uint64_t v34 = v176;
                  }
                }
                else
                {
                  sub_1B6AB89CC(v38, v33);
                  uint64_t v34 = v176;
                  unint64_t v39 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf);
                  if ((v37 & 1) != (v40 & 1)) {
                    goto LABEL_137;
                  }
                  unint64_t v35 = v39;
                }
                uint64_t v16 = v150;
                *(void *)(v154 + 208) = v34;
                swift_bridgeObjectRelease();
                uint64_t v41 = *(void **)(v154 + 208);
                swift_bridgeObjectRetain();
                if ((v37 & 1) == 0)
                {
                  sub_1B6C3166C(*(uint64_t (**)(void))(v30 + 16), (uint64_t *)&v176);
                  uint64_t v42 = v177;
                  v41[(v35 >> 6) + 8] |= 1 << v35;
                  *(void *)(v41[6] + 8 * v35) = &type metadata for IsSubEntityOf;
                  uint64_t v43 = v41[7] + 24 * v35;
                  *(_OWORD *)uint64_t v43 = v176;
                  *(void *)(v43 + 16) = v42;
                  ++v41[2];
                }
                uint64_t v44 = v41[7];
                swift_bridgeObjectRelease();
                uint64_t v45 = (char **)(v44 + 24 * v35);
                uint64_t v46 = *v45;
                char v47 = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v45 = v46;
                if ((v47 & 1) == 0)
                {
                  uint64_t v46 = sub_1B68C17A0(0, *((void *)v46 + 2) + 1, 1, v46);
                  *uint64_t v45 = v46;
                }
                unint64_t v49 = *((void *)v46 + 2);
                unint64_t v48 = *((void *)v46 + 3);
                if (v49 >= v48 >> 1)
                {
                  uint64_t v46 = sub_1B68C17A0(v48 > 1, v49 + 1, 1, v46);
                  *uint64_t v45 = v46;
                }
                *((void *)v46 + 2) = v49 + 1;
                char v50 = &v46[16 * v49];
                *((_DWORD *)v50 + 8) = v26;
                *((_DWORD *)v50 + 9) = v27;
                *((void *)v50 + 5) = v23;
                uint64_t v8 = v154;
                swift_release();
                swift_release();
                swift_release();
                uint64_t v20 = v149;
                uint64_t v22 = v152;
              }
              uint64_t v51 = *(void *)(*(void *)(v16 + 40) + 16);
              uint64_t v52 = *(void *)(v51 + 128);
              if (!*(void *)(v52 + 16)) {
                goto LABEL_22;
              }
              unint64_t v53 = sub_1B62C1A30((uint64_t)&type metadata for SubEntity);
              if ((v54 & 1) == 0
                || *(ValueMetadata **)(*(void *)(v51 + 24) + 16 * *(void *)(*(void *)(v52 + 56) + 8 * v53) + 32) != &type metadata for SubEntity)
              {
                goto LABEL_22;
              }
              uint64_t v183 = &type metadata for SubEntity;
              uint64_t v184 = &off_1F0FAA000;
              char v185 = 1;
              uint64_t v55 = *(void *)(*v147 + 16);
              if (!v55)
              {
                swift_retain();
                goto LABEL_71;
              }
              uint64_t v56 = v22;
              uint64_t v57 = *v147 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v58 = 0;
              while (2)
              {
                sub_1B63B2978(v57, (uint64_t)v182);
                sub_1B639192C((uint64_t)v182, (uint64_t)&v176);
                sub_1B639192C((uint64_t)&v183, (uint64_t)v179);
                switch(BYTE8(v178))
                {
                  case 1:
                    sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
                    if (v181 != 1) {
                      goto LABEL_47;
                    }
                    goto LABEL_60;
                  case 2:
                    sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
                    if (v181 != 2) {
                      goto LABEL_46;
                    }
                    goto LABEL_57;
                  case 3:
                    sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
                    if (v181 != 3)
                    {
LABEL_46:
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v175);
LABEL_47:
                      sub_1B62E2EA0((uint64_t)&v176, (uint64_t (*)(void))sub_1B691F560);
                      sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
                      goto LABEL_48;
                    }
LABEL_57:
                    sub_1B62C15C4(v175, (uint64_t)v172);
                    sub_1B62C15C4((long long *)v179, (uint64_t)v171);
                    uint64_t v62 = v173;
                    uint64_t v63 = v174;
                    sub_1B62C14BC(v172, v173);
                    LOBYTE(v62) = sub_1B6B3D86C(v171, v62, v63);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v171);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v172);
                    sub_1B6391400((uint64_t)&v176);
                    sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
                    if ((v62 & 1) == 0)
                    {
LABEL_48:
                      ++v58;
                      v57 += 72;
                      if (v55 == v58)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v22 = v56;
LABEL_71:
                        uint64_t v71 = *(void *)(v16 + 240) - *(void *)(v16 + 232);
                        uint64_t v72 = ecs_stack_allocator_allocate(v148[4], 8 * v71, 8);
                        *uint64_t v72 = v22;
                        sub_1B639192C((uint64_t)&v183, (uint64_t)&v176);
                        *(void *)uint64_t v179 = v72;
                        *(void *)&v179[8] = v71;
                        *(void *)&v179[16] = 1;
                        uint64_t v73 = (void *)v148[13];
                        char v74 = swift_isUniquelyReferenced_nonNull_native();
                        v148[13] = v73;
                        uint64_t v8 = v154;
                        uint64_t v20 = v149;
                        if ((v74 & 1) == 0)
                        {
                          uint64_t v73 = sub_1B68C0C6C(0, v73[2] + 1, 1, v73);
                          *uint64_t v147 = v73;
                        }
                        unint64_t v76 = v73[2];
                        unint64_t v75 = v73[3];
                        if (v76 >= v75 >> 1)
                        {
                          uint64_t v73 = sub_1B68C0C6C(v75 > 1, v76 + 1, 1, v73);
                          *uint64_t v147 = v73;
                        }
                        void v73[2] = v76 + 1;
                        uint64_t v77 = &v73[9 * v76];
                        *((_OWORD *)v77 + 2) = v176;
                        long long v78 = v177;
                        long long v79 = v178;
                        long long v80 = *(_OWORD *)v179;
                        v77[12] = *(void *)&v179[16];
                        *((_OWORD *)v77 + 4) = v79;
                        *((_OWORD *)v77 + 5) = v80;
                        *((_OWORD *)v77 + 3) = v78;
                        goto LABEL_21;
                      }
                      continue;
                    }
LABEL_67:
                    swift_bridgeObjectRelease();
                    int v68 = sub_1B6B1B930();
                    uint64_t v69 = *(void *)(v67 + 48);
                    if (v69)
                    {
                      uint64_t v70 = *(void *)(v67 + 64);
                      *(void *)(v69 + 8 * v70) = v56;
                      *(void *)(v67 + 64) = v70 + 1;
                    }
                    ((void (*)(long long *, void))v68)(&v176, 0);
                    uint64_t v8 = v154;
                    uint64_t v20 = v149;
LABEL_21:
                    sub_1B6391400((uint64_t)&v183);
                    swift_release();
LABEL_22:
                    if (++v21 == v20) {
                      goto LABEL_18;
                    }
                    break;
                  case 4:
                    sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
                    if (v181 != 4) {
                      goto LABEL_47;
                    }
                    int v59 = LOBYTE(v175[0]);
                    int v60 = v179[0];
                    sub_1B6391400((uint64_t)&v176);
                    sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
                    BOOL v61 = v59 == v60;
                    goto LABEL_61;
                  case 5:
                    if (v181 != 5) {
                      goto LABEL_47;
                    }
                    int8x16_t v66 = vorrq_s8(*(int8x16_t *)&v179[8], v180);
                    if (*(void *)&vorr_s8(*(int8x8_t *)v66.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL)) | *(void *)v179) {
                      goto LABEL_47;
                    }
                    sub_1B6391400((uint64_t)&v176);
                    sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
                    goto LABEL_67;
                  default:
                    sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
                    if (v181) {
                      goto LABEL_47;
                    }
LABEL_60:
                    uint64_t v64 = *(void *)&v175[0];
                    uint64_t v65 = *(void *)v179;
                    sub_1B6391400((uint64_t)&v176);
                    sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
                    BOOL v61 = v64 == v65;
LABEL_61:
                    if (!v61) {
                      goto LABEL_48;
                    }
                    goto LABEL_67;
                }
                break;
              }
            }
          }
          goto LABEL_18;
        }
        if (v14 != v151) {
          break;
        }
LABEL_18:
        v161[0] = v158;
        v161[1] = v159;
        uint64_t v162 = v160;
        uint64_t v12 = v145;
        sub_1B6345178(v148, (unsigned __int16 **)v161, (uint64_t)v194);
        sub_1B634507C((char *)v16);
        uint64_t v10 = v141;
        ecs_stack_allocator_pop_snapshot(v141);
        int v9 = v142;
        if (v142)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
        }
        swift_release();
        uint64_t v11 = v146 + 1;
        if (v146 + 1 == v144)
        {
          sub_1B62CA064((uint64_t)v156);
          sub_1B632F220(v186, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          return sub_1B632F220(v186, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        }
      }
      while (2)
      {
        uint64_t v81 = *(void *)(v155 + 8 * v14);
        uint64_t v82 = *(void *)(v16 + 16);
        char v83 = *(unsigned char *)(v16 + 184);
        swift_retain();
        if (v83)
        {
LABEL_136:
          sub_1B6E32BE8();
          __break(1u);
LABEL_137:
          sub_1B6E33838();
          __break(1u);
          JUMPOUT(0x1B6CB9F9CLL);
        }
        int v84 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v14);
        int v85 = *(_DWORD *)(*(void *)(v82 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v84 + 8);
        swift_retain();
        swift_release();
        if (v84 == -1 && v85 == 0)
        {
          swift_release();
        }
        else
        {
          uint64_t v87 = swift_allocObject();
          *(void *)(v87 + 16) = &type metadata for IsSubEntityOf;
          *(void *)(v87 + 24) = &off_1F0F5FCE0;
          uint64_t v88 = swift_allocObject();
          *(void *)(v88 + 16) = sub_1B6A6AEF4;
          *(void *)(v88 + 24) = v87;
          char v89 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v90 = v8;
          char v91 = v89;
          *(void *)&long long v176 = *(void *)(v90 + 208);
          uint64_t v92 = v176;
          *(void *)(v90 + 208) = 0x8000000000000000;
          unint64_t v93 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf);
          char v95 = v94;
          uint64_t v96 = *(void *)(v92 + 16) + ((v94 & 1) == 0);
          if (*(void *)(v92 + 24) >= v96)
          {
            if ((v91 & 1) == 0)
            {
              sub_1B6ACD434();
              uint64_t v92 = v176;
            }
          }
          else
          {
            sub_1B6AB89CC(v96, v91);
            uint64_t v92 = v176;
            unint64_t v97 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf);
            if ((v95 & 1) != (v98 & 1)) {
              goto LABEL_137;
            }
            unint64_t v93 = v97;
          }
          uint64_t v8 = v154;
          *(void *)(v154 + 208) = v92;
          swift_bridgeObjectRelease();
          uint64_t v99 = *(void **)(v154 + 208);
          swift_bridgeObjectRetain();
          if ((v95 & 1) == 0)
          {
            sub_1B6C3166C(*(uint64_t (**)(void))(v88 + 16), (uint64_t *)&v176);
            uint64_t v100 = v177;
            v99[(v93 >> 6) + 8] |= 1 << v93;
            *(void *)(v99[6] + 8 * v93) = &type metadata for IsSubEntityOf;
            uint64_t v101 = v99[7] + 24 * v93;
            *(_OWORD *)uint64_t v101 = v176;
            *(void *)(v101 + 16) = v100;
            ++v99[2];
          }
          uint64_t v102 = v99[7];
          swift_bridgeObjectRelease();
          char v103 = (char **)(v102 + 24 * v93);
          uint64_t v104 = *v103;
          char v105 = swift_isUniquelyReferenced_nonNull_native();
          *char v103 = v104;
          if ((v105 & 1) == 0)
          {
            uint64_t v104 = sub_1B68C17A0(0, *((void *)v104 + 2) + 1, 1, v104);
            *char v103 = v104;
          }
          unint64_t v107 = *((void *)v104 + 2);
          unint64_t v106 = *((void *)v104 + 3);
          if (v107 >= v106 >> 1)
          {
            uint64_t v104 = sub_1B68C17A0(v106 > 1, v107 + 1, 1, v104);
            *char v103 = v104;
          }
          *((void *)v104 + 2) = v107 + 1;
          int v108 = &v104[16 * v107];
          *((_DWORD *)v108 + 8) = v84;
          *((_DWORD *)v108 + 9) = v85;
          *((void *)v108 + 5) = v81;
          swift_release();
          swift_release();
          swift_release();
          uint64_t v16 = v150;
        }
        uint64_t v109 = *(void *)(*(void *)(v16 + 40) + 16);
        uint64_t v110 = *(void *)(v109 + 128);
        if (!*(void *)(v110 + 16)) {
          goto LABEL_78;
        }
        unint64_t v111 = sub_1B62C1A30((uint64_t)&type metadata for SubEntity);
        if ((v112 & 1) == 0
          || *(ValueMetadata **)(*(void *)(v109 + 24) + 16 * *(void *)(*(void *)(v110 + 56) + 8 * v111) + 32) != &type metadata for SubEntity)
        {
          goto LABEL_78;
        }
        uint64_t v183 = &type metadata for SubEntity;
        uint64_t v184 = &off_1F0FAA000;
        char v185 = 1;
        uint64_t v113 = *(void *)(*v147 + 16);
        if (v113)
        {
          uint64_t v114 = *v147 + 32;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v115 = 0;
LABEL_105:
          sub_1B63B2978(v114, (uint64_t)v182);
          sub_1B639192C((uint64_t)v182, (uint64_t)&v176);
          sub_1B639192C((uint64_t)&v183, (uint64_t)v179);
          switch(BYTE8(v178))
          {
            case 1:
              sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
              if (v181 != 1) {
                goto LABEL_103;
              }
              goto LABEL_116;
            case 2:
              sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
              if (v181 != 2) {
                goto LABEL_102;
              }
              goto LABEL_113;
            case 3:
              sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
              if (v181 == 3)
              {
LABEL_113:
                sub_1B62C15C4(v175, (uint64_t)v172);
                sub_1B62C15C4((long long *)v179, (uint64_t)v171);
                uint64_t v119 = v173;
                uint64_t v120 = v174;
                sub_1B62C14BC(v172, v173);
                LOBYTE(v119) = sub_1B6B3D86C(v171, v119, v120);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v171);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v172);
                sub_1B6391400((uint64_t)&v176);
                sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
                if (v119)
                {
LABEL_123:
                  swift_bridgeObjectRelease();
                  uint64_t v125 = sub_1B6B1B930();
                  uint64_t v126 = *(void *)(v124 + 48);
                  if (v126)
                  {
                    uint64_t v127 = *(void *)(v124 + 64);
                    *(void *)(v126 + 8 * v127) = v14;
                    *(void *)(v124 + 64) = v127 + 1;
                  }
                  ((void (*)(long long *, void))v125)(&v176, 0);
                  uint64_t v16 = v150;
LABEL_77:
                  sub_1B6391400((uint64_t)&v183);
                  swift_release();
LABEL_78:
                  if (++v14 == v151) {
                    goto LABEL_18;
                  }
                  continue;
                }
              }
              else
              {
LABEL_102:
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v175);
LABEL_103:
                sub_1B62E2EA0((uint64_t)&v176, (uint64_t (*)(void))sub_1B691F560);
                sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
              }
LABEL_104:
              ++v115;
              v114 += 72;
              if (v113 != v115) {
                goto LABEL_105;
              }
              swift_bridgeObjectRelease();
              uint64_t v16 = v150;
              break;
            case 4:
              sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
              if (v181 != 4) {
                goto LABEL_103;
              }
              int v116 = LOBYTE(v175[0]);
              int v117 = v179[0];
              sub_1B6391400((uint64_t)&v176);
              sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
              BOOL v118 = v116 == v117;
              goto LABEL_117;
            case 5:
              if (v181 != 5) {
                goto LABEL_103;
              }
              int8x16_t v123 = vorrq_s8(*(int8x16_t *)&v179[8], v180);
              if (*(void *)&vorr_s8(*(int8x8_t *)v123.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v123, v123, 8uLL)) | *(void *)v179) {
                goto LABEL_103;
              }
              sub_1B6391400((uint64_t)&v176);
              sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
              goto LABEL_123;
            default:
              sub_1B639192C((uint64_t)&v176, (uint64_t)v175);
              if (v181) {
                goto LABEL_103;
              }
LABEL_116:
              uint64_t v121 = *(void *)&v175[0];
              uint64_t v122 = *(void *)v179;
              sub_1B6391400((uint64_t)&v176);
              sub_1B62E2EA0((uint64_t)v182, (uint64_t (*)(void))sub_1B63B29DC);
              BOOL v118 = v121 == v122;
LABEL_117:
              if (!v118) {
                goto LABEL_104;
              }
              goto LABEL_123;
          }
        }
        else
        {
          uint64_t v16 = v150;
          swift_retain();
        }
        break;
      }
      uint64_t v128 = *(void *)(v16 + 240) - *(void *)(v16 + 232);
      int8x16_t v129 = ecs_stack_allocator_allocate(v148[4], 8 * v128, 8);
      void *v129 = v14;
      sub_1B639192C((uint64_t)&v183, (uint64_t)&v176);
      *(void *)uint64_t v179 = v129;
      *(void *)&v179[8] = v128;
      *(void *)&v179[16] = 1;
      uint64_t v130 = (void *)v148[13];
      char v131 = swift_isUniquelyReferenced_nonNull_native();
      v148[13] = v130;
      if ((v131 & 1) == 0)
      {
        uint64_t v130 = sub_1B68C0C6C(0, v130[2] + 1, 1, v130);
        *uint64_t v147 = v130;
      }
      unint64_t v133 = v130[2];
      unint64_t v132 = v130[3];
      if (v133 >= v132 >> 1)
      {
        uint64_t v130 = sub_1B68C0C6C(v132 > 1, v133 + 1, 1, v130);
        *uint64_t v147 = v130;
      }
      _OWORD v130[2] = v133 + 1;
      uint64_t v134 = &v130[9 * v133];
      *((_OWORD *)v134 + 2) = v176;
      long long v135 = v177;
      long long v136 = v178;
      long long v137 = *(_OWORD *)v179;
      v134[12] = *(void *)&v179[16];
      *((_OWORD *)v134 + 4) = v136;
      *((_OWORD *)v134 + 5) = v137;
      *((_OWORD *)v134 + 3) = v135;
      goto LABEL_77;
    }
  }
  sub_1B62CA064((uint64_t)v156);
  return sub_1B632F220(v186, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CB9FCC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x1000000000000) == 0)
  {
    int v4 = a4;
    uint64_t v5 = (uint64_t)result;
    unint64_t v6 = a4 & 0x100000000;
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    if (v6) {
      int v7 = 0;
    }
    else {
      int v7 = v4;
    }
    uint64_t v125 = qword_1EB997A18;
    int v126 = v7;
    char v127 = v6 >> 31;
    uint64_t v128 = 1;
    char v129 = 2;
    uint64_t v130 = 0;
    swift_retain();
    sub_1B63AC2E8(3, (uint64_t)v110);
    swift_release();
    v122[0] = v110[0];
    v122[1] = v110[1];
    uint64_t v123 = v111;
    sub_1B62C9DA8(v5, (uint64_t)v122, 0x200000000, v112);
    sub_1B62D8068((uint64_t)v112, (uint64_t)v113, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v113[0])
    {
      if (v119 > 0 && (uint64_t v96 = v116) != 0)
      {
        uint64_t v8 = v118;
        uint64_t v9 = v118[4];
        int v10 = *(unsigned __int8 *)(v117 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v120[0] = v113[0];
        v120[1] = v113[1];
        uint64_t v121 = v114;
        uint64_t v91 = (uint64_t)(v118 + 6);
        uint64_t v92 = v115;
        uint64_t v90 = v118 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v11 = 0;
        uint64_t v94 = v9;
        char v95 = v8;
        int v93 = v10;
        do
        {
          uint64_t v97 = v11;
          uint64_t v12 = (unsigned int *)(v92 + 48 * v11);
          uint64_t v13 = *v12;
          uint64_t v14 = v12[1];
          uint64_t v15 = (uint64_t *)*((void *)v12 + 2);
          uint64_t v16 = *((void *)v12 + 3);
          uint64_t v17 = *((void *)v12 + 5);
          uint64_t v100 = *((void *)v12 + 4);
          if (v10)
          {
            uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
            swift_retain();
            os_unfair_lock_lock(v18);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v9);
          sub_1B62D8068(v91, (uint64_t)v124, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v19 = v8[4];
          uint64_t v99 = v17;
          uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
          v8[7] = v20;
          v90[1] = 0;
          _OWORD v90[2] = 0;
          *uint64_t v90 = 0;
          swift_release();
          uint64_t v21 = v100;
          uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v15, v16, v100, (uint64_t)v8);
          uint64_t v101 = v22;
          if (v15)
          {
            if (v100)
            {
              uint64_t v23 = 0;
              do
              {
                uint64_t v24 = v22 + (v23 << 6);
                swift_bridgeObjectRelease();
                *(void *)(v24 + 48) = MEMORY[0x1E4FBC860];
                uint64_t v25 = *(void *)(v24 + 40);
                if (v25)
                {
                  uint64_t v26 = *(void *)(v25 + 16);
                  if (v26)
                  {
                    uint64_t v102 = v23;
                    uint64_t v27 = v25 + 32;
                    swift_bridgeObjectRetain_n();
                    uint64_t v28 = 0;
                    uint64_t v104 = v27;
                    uint64_t v106 = v26;
                    do
                    {
                      uint64_t v29 = *(void *)(v24 + 8);
                      if (*(void *)(v29 + 16))
                      {
                        uint64_t v30 = (uint64_t *)(v27 + 24 * v28);
                        uint64_t v32 = v30[1];
                        uint64_t v31 = v30[2];
                        uint64_t v33 = *v30;
                        swift_bridgeObjectRetain_n();
                        swift_bridgeObjectRetain();
                        uint64_t v34 = sub_1B62B2CE0(v33, v32);
                        if (v35)
                        {
                          char v36 = (uint64_t *)(*(void *)(v29 + 56) + 16 * v34);
                          uint64_t v37 = *v36;
                          uint64_t v108 = v36[1];
                          swift_retain();
                          swift_bridgeObjectRelease();
                          uint64_t v38 = *(void *)(v31 + 16);
                          if (v38)
                          {
                            swift_bridgeObjectRetain_n();
                            unint64_t v39 = (uint64_t *)(v31 + 40);
                            char v40 = (void *)MEMORY[0x1E4FBC860];
                            do
                            {
                              uint64_t v41 = *(void *)v24;
                              if (*(void *)(*(void *)v24 + 16))
                              {
                                uint64_t v42 = *(v39 - 1);
                                uint64_t v43 = *v39;
                                swift_bridgeObjectRetain_n();
                                uint64_t v44 = sub_1B62B2CE0(v42, v43);
                                if (v45)
                                {
                                  uint64_t v46 = (uint64_t *)(*(void *)(v41 + 56) + 16 * v44);
                                  uint64_t v47 = *v46;
                                  uint64_t v48 = v46[1];
                                  swift_retain();
                                  swift_bridgeObjectRelease_n();
                                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                                    char v40 = sub_1B68C3F64(0, v40[2] + 1, 1, v40);
                                  }
                                  unint64_t v50 = v40[2];
                                  unint64_t v49 = v40[3];
                                  if (v50 >= v49 >> 1) {
                                    char v40 = sub_1B68C3F64(v49 > 1, v50 + 1, 1, v40);
                                  }
                                  void v40[2] = v50 + 1;
                                  uint64_t v51 = &v40[2 * v50];
                                  v51[4] = v47;
                                  v51[5] = v48;
                                }
                                else
                                {
                                  swift_bridgeObjectRelease_n();
                                }
                              }
                              v39 += 2;
                              --v38;
                            }
                            while (v38);
                            swift_bridgeObjectRelease_n();
                          }
                          else
                          {
                            char v40 = (void *)MEMORY[0x1E4FBC860];
                          }
                          uint64_t v52 = *(void **)(v24 + 48);
                          swift_retain();
                          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                          *(void *)(v24 + 48) = v52;
                          uint64_t v27 = v104;
                          uint64_t v26 = v106;
                          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                          {
                            uint64_t v52 = sub_1B68C3E34(0, v52[2] + 1, 1, v52);
                            *(void *)(v24 + 48) = v52;
                          }
                          unint64_t v55 = v52[2];
                          unint64_t v54 = v52[3];
                          if (v55 >= v54 >> 1)
                          {
                            uint64_t v52 = sub_1B68C3E34(v54 > 1, v55 + 1, 1, v52);
                            *(void *)(v24 + 48) = v52;
                          }
                          v52[2] = v55 + 1;
                          uint64_t v56 = &v52[3 * v55];
                          v56[4] = v37;
                          v56[5] = v108;
                          v56[6] = v40;
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_release();
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease_n();
                        }
                      }
                      ++v28;
                    }
                    while (v28 != v26);
                    swift_bridgeObjectRelease_n();
                    uint64_t v21 = v100;
                    uint64_t v22 = v101;
                    uint64_t v23 = v102;
                  }
                }
                *(unsigned char *)(v24 + 56) = 1;
                ++v23;
              }
              while (v23 != v21);
            }
          }
          else if (v13 != v14)
          {
            uint64_t v98 = v14;
            do
            {
              uint64_t v57 = v22 + (v13 << 6);
              swift_bridgeObjectRelease();
              *(void *)(v57 + 48) = MEMORY[0x1E4FBC860];
              uint64_t v58 = *(void *)(v57 + 40);
              if (v58)
              {
                uint64_t v59 = *(void *)(v58 + 16);
                if (v59)
                {
                  uint64_t v103 = v13;
                  uint64_t v60 = v58 + 32;
                  swift_bridgeObjectRetain_n();
                  uint64_t v61 = 0;
                  uint64_t v105 = v60;
                  uint64_t v107 = v59;
                  do
                  {
                    uint64_t v62 = *(void *)(v57 + 8);
                    if (*(void *)(v62 + 16))
                    {
                      uint64_t v63 = (uint64_t *)(v60 + 24 * v61);
                      uint64_t v65 = v63[1];
                      uint64_t v64 = v63[2];
                      uint64_t v66 = *v63;
                      swift_bridgeObjectRetain_n();
                      swift_bridgeObjectRetain();
                      uint64_t v67 = sub_1B62B2CE0(v66, v65);
                      if (v68)
                      {
                        uint64_t v69 = (uint64_t *)(*(void *)(v62 + 56) + 16 * v67);
                        uint64_t v70 = *v69;
                        uint64_t v109 = v69[1];
                        swift_retain();
                        swift_bridgeObjectRelease();
                        uint64_t v71 = *(void *)(v64 + 16);
                        if (v71)
                        {
                          swift_bridgeObjectRetain_n();
                          uint64_t v72 = (uint64_t *)(v64 + 40);
                          uint64_t v73 = (void *)MEMORY[0x1E4FBC860];
                          do
                          {
                            uint64_t v74 = *(void *)v57;
                            if (*(void *)(*(void *)v57 + 16))
                            {
                              uint64_t v75 = *(v72 - 1);
                              uint64_t v76 = *v72;
                              swift_bridgeObjectRetain_n();
                              uint64_t v77 = sub_1B62B2CE0(v75, v76);
                              if (v78)
                              {
                                long long v79 = (uint64_t *)(*(void *)(v74 + 56) + 16 * v77);
                                uint64_t v80 = *v79;
                                uint64_t v81 = v79[1];
                                swift_retain();
                                swift_bridgeObjectRelease_n();
                                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                                  uint64_t v73 = sub_1B68C3F64(0, v73[2] + 1, 1, v73);
                                }
                                unint64_t v83 = v73[2];
                                unint64_t v82 = v73[3];
                                if (v83 >= v82 >> 1) {
                                  uint64_t v73 = sub_1B68C3F64(v82 > 1, v83 + 1, 1, v73);
                                }
                                void v73[2] = v83 + 1;
                                int v84 = &v73[2 * v83];
                                v84[4] = v80;
                                v84[5] = v81;
                              }
                              else
                              {
                                swift_bridgeObjectRelease_n();
                              }
                            }
                            v72 += 2;
                            --v71;
                          }
                          while (v71);
                          swift_bridgeObjectRelease_n();
                        }
                        else
                        {
                          uint64_t v73 = (void *)MEMORY[0x1E4FBC860];
                        }
                        int v85 = *(void **)(v57 + 48);
                        swift_retain();
                        char v86 = swift_isUniquelyReferenced_nonNull_native();
                        *(void *)(v57 + 48) = v85;
                        uint64_t v60 = v105;
                        uint64_t v59 = v107;
                        if ((v86 & 1) == 0)
                        {
                          int v85 = sub_1B68C3E34(0, v85[2] + 1, 1, v85);
                          *(void *)(v57 + 48) = v85;
                        }
                        unint64_t v88 = v85[2];
                        unint64_t v87 = v85[3];
                        if (v88 >= v87 >> 1)
                        {
                          int v85 = sub_1B68C3E34(v87 > 1, v88 + 1, 1, v85);
                          *(void *)(v57 + 48) = v85;
                        }
                        v85[2] = v88 + 1;
                        char v89 = &v85[3 * v88];
                        v89[4] = v70;
                        v89[5] = v109;
                        v89[6] = v73;
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_release();
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease_n();
                      }
                    }
                    ++v61;
                  }
                  while (v61 != v59);
                  swift_bridgeObjectRelease_n();
                  uint64_t v22 = v101;
                  uint64_t v13 = v103;
                  uint64_t v14 = v98;
                }
              }
              ++v13;
              *(unsigned char *)(v57 + 56) = 1;
            }
            while (v13 != v14);
          }
          uint64_t v8 = v95;
          sub_1B6345178(v95, (unsigned __int16 **)v120, (uint64_t)v124);
          sub_1B634507C((char *)v99);
          uint64_t v9 = v94;
          ecs_stack_allocator_pop_snapshot(v94);
          int v10 = v93;
          if (v93)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v99 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v99 + 376));
          }
          swift_release();
          uint64_t v11 = v97 + 1;
        }
        while (v97 + 1 != v96);
        sub_1B62CA064((uint64_t)v110);
        sub_1B632F220(v112, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      else
      {
        sub_1B62CA064((uint64_t)v110);
      }
      return sub_1B632F220(v112, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      return (void *)sub_1B62CA064((uint64_t)v110);
    }
  }
  return result;
}

void *sub_1B6CBA8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v62 = qword_1EB997A18;
  int v63 = v7;
  char v64 = v6 >> 31;
  uint64_t v65 = 1;
  char v66 = 2;
  uint64_t v67 = 0;
  swift_retain();
  sub_1B6A70FFC(3, (uint64_t)v47);
  swift_release();
  v59[0] = v47[0];
  v59[1] = v47[1];
  uint64_t v60 = v48;
  sub_1B62C9DA8(a1, (uint64_t)v59, 0x200000000, v49);
  sub_1B62D8068((uint64_t)v49, (uint64_t)v50, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v50[0]) {
    return (void *)sub_1B62CA064((uint64_t)v47);
  }
  if (v56 <= 0 || (uint64_t v43 = v53) == 0)
  {
    sub_1B62CA064((uint64_t)v47);
    return sub_1B632F220(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v8 = v55;
  uint64_t v9 = v55[4];
  int v10 = *(unsigned __int8 *)(v54 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v57[0] = v50[0];
  v57[1] = v50[1];
  uint64_t v40 = v52;
  uint64_t v41 = (uint64_t)(v55 + 6);
  uint64_t v58 = v51;
  unint64_t v39 = v55 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v42 = v10;
  do
  {
    uint64_t v13 = (unsigned int *)(v40 + 48 * v11);
    uint64_t v45 = *v13;
    uint64_t v46 = v12;
    uint64_t v44 = v13[1];
    uint64_t v15 = (uint64_t *)*((void *)v13 + 2);
    uint64_t v14 = *((void *)v13 + 3);
    uint64_t v16 = *((void *)v13 + 4);
    uint64_t v17 = *((void *)v13 + 5);
    if (v10)
    {
      uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v9);
    sub_1B62D8068(v41, (uint64_t)v61, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v19 = v8[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v8[7] = v20;
    v39[1] = 0;
    _OWORD v39[2] = 0;
    *unint64_t v39 = 0;
    swift_release();
    uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for ParticleAngularVelocityInit, (uint64_t)&off_1F0F978D8, v15, v14, v16, (uint64_t)v8);
    if (v15)
    {
      if (v16)
      {
        uint64_t v23 = (_DWORD *)(v21 + 12);
        uint64_t v12 = v46;
        do
        {
          uint64_t v24 = (float *)(v23 - 3);
          v25.i32[0] = *(v23 - 3);
          v22.i32[0] = *(v23 - 2);
          v25.i32[1] = *(v23 - 1);
          v22.i32[1] = *v23;
          v25.i64[1] = v23[1];
          float32x4_t v26 = vmaxnmq_f32(v25, (float32x4_t)xmmword_1B6EBF200);
          v26.i32[3] = 0;
          v22.i32[2] = v23[2];
          float32x2x2_t v27 = (float32x2x2_t)vminnmq_f32(v26, (float32x4_t)xmmword_1B6EBF210);
          float32x4_t v28 = vmaxnmq_f32(v22, (float32x4_t)xmmword_1B6EBF200);
          v28.i32[3] = 0;
          int8x16_t v29 = (int8x16_t)vminnmq_f32(v28, (float32x4_t)xmmword_1B6EBF210);
          vst2_f32(v24, v27);
          float32x4_t v22 = (float32x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL);
          *(int32x2_t *)(v23 + 1) = vzip1_s32(*(int32x2_t *)v22.f32, (int32x2_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL));
          v23 += 6;
          --v16;
        }
        while (v16);
        goto LABEL_23;
      }
    }
    else if (v45 != v44)
    {
      uint64_t v30 = (_DWORD *)(v21 + 24 * v45 + 12);
      uint64_t v31 = v44 - v45;
      uint64_t v12 = v46;
      do
      {
        uint64_t v32 = (float *)(v30 - 3);
        v33.i32[0] = *(v30 - 3);
        v22.i32[0] = *(v30 - 2);
        v33.i32[1] = *(v30 - 1);
        v22.i32[1] = *v30;
        v33.i64[1] = v30[1];
        float32x4_t v34 = vmaxnmq_f32(v33, (float32x4_t)xmmword_1B6EBF200);
        v34.i32[3] = 0;
        v22.i32[2] = v30[2];
        float32x2x2_t v35 = (float32x2x2_t)vminnmq_f32(v34, (float32x4_t)xmmword_1B6EBF210);
        float32x4_t v36 = vmaxnmq_f32(v22, (float32x4_t)xmmword_1B6EBF200);
        v36.i32[3] = 0;
        int8x16_t v37 = (int8x16_t)vminnmq_f32(v36, (float32x4_t)xmmword_1B6EBF210);
        vst2_f32(v32, v35);
        float32x4_t v22 = (float32x4_t)vextq_s8((int8x16_t)v35, (int8x16_t)v35, 8uLL);
        *(int32x2_t *)(v30 + 1) = vzip1_s32(*(int32x2_t *)v22.f32, (int32x2_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL));
        v30 += 6;
        --v31;
      }
      while (v31);
      goto LABEL_23;
    }
    uint64_t v12 = v46;
LABEL_23:
    sub_1B6345178(v8, (unsigned __int16 **)v57, (uint64_t)v61);
    sub_1B634507C((char *)v17);
    ecs_stack_allocator_pop_snapshot(v9);
    int v10 = v42;
    if (v42)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    ++v11;
  }
  while (v11 != v43);
  sub_1B62CA064((uint64_t)v47);
  sub_1B632F220(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t sub_1B6CBAD84(uint64_t a1)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1B6CC4EDC(a1);

  return swift_release();
}

void *sub_1B6CBAE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v200 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v170 = qword_1EB997A18;
  int v171 = v7;
  char v172 = v6 >> 31;
  uint64_t v173 = 1;
  char v174 = 2;
  uint64_t v175 = 0;
  swift_retain();
  sub_1B6782EF8(2, 1, (uint64_t)v161);
  swift_release();
  v168[0] = v161[0];
  v168[1] = v161[1];
  uint64_t v169 = v162;
  sub_1B62C9DA8(a1, (uint64_t)v168, 0x200000000, v191);
  sub_1B62D8068((uint64_t)v191, (uint64_t)v192, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v192[0]) {
    return (void *)sub_1B62CA064((uint64_t)v161);
  }
  long long v163 = v192[0];
  long long v164 = v192[1];
  uint64_t v165 = v193;
  if (v198 > 0 && (uint64_t v149 = v195) != 0)
  {
    uint64_t v148 = v194;
    int v8 = *(unsigned __int8 *)(v196 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v9 = v197[4];
    uint64_t v152 = v197 + 13;
    uint64_t v153 = v197;
    uint64_t v144 = v197 + 8;
    uint64_t v145 = (uint64_t)(v197 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    int v147 = v8;
    uint64_t v146 = v9;
    do
    {
      uint64_t v150 = v11;
      uint64_t v151 = v10;
      uint64_t v12 = (unsigned int *)(v148 + 48 * v10);
      uint64_t v13 = *v12;
      uint64_t v14 = *((void *)v12 + 3);
      uint64_t v157 = v12[1];
      long long v159 = (uint64_t *)*((void *)v12 + 2);
      uint64_t v15 = *((void *)v12 + 5);
      uint64_t v154 = *((void *)v12 + 4);
      if (v8)
      {
        uint64_t v16 = *(os_unfair_lock_s **)(v15 + 376);
        swift_retain();
        os_unfair_lock_lock(v16);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v9);
      sub_1B62D8068(v145, (uint64_t)v199, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v17 = v153[4];
      uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v153[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
      v153[7] = v18;
      v144[1] = 0;
      v144[2] = 0;
      *uint64_t v144 = 0;
      swift_release();
      uint64_t v19 = v154;
      uint64_t v160 = sub_1B62C9024((uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, v159, v14, v154, (uint64_t)v153);
      uint64_t v155 = sub_1B62C9024((uint64_t)&type metadata for MaterialParameters, (uint64_t)&off_1F0F77018, v159, v14, v154, (uint64_t)v153);
      uint64_t v156 = v15;
      uint64_t v20 = v15;
      if (v159)
      {
        if (v154)
        {
          uint64_t v21 = 0;
          uint64_t v22 = v160;
          do
          {
            uint64_t v158 = v159[v21];
            if (*(unsigned char *)(v22 + 104 * v21) == 2)
            {
              uint64_t v24 = (void *)(v155 + 32 * v21);
              type metadata accessor for CustomParameters();
              float32x4_t v25 = (void *)swift_allocObject();
              uint64_t v26 = MEMORY[0x1E4FBC860];
              v25[2] = MEMORY[0x1E4FBC860];
              v25[3] = v26;
              v25[4] = v26;
              float32x2x2_t v27 = *(void **)(*v24 + 16);
              uint64_t v28 = *(void *)(v24[1] + 16);
              uint64_t v29 = *(void *)(v28 + 16);
              uint64_t v30 = v27[2];
              uint64_t v31 = v30 + v29;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              if (!isUniquelyReferenced_nonNull_native || v31 > v27[3] >> 1)
              {
                if (v30 <= v31) {
                  uint64_t v33 = v30 + v29;
                }
                else {
                  uint64_t v33 = v30;
                }
                float32x2x2_t v27 = sub_1B68C4E38(isUniquelyReferenced_nonNull_native, v33, 1, v27);
              }
              if (*(void *)(v28 + 16))
              {
                unint64_t v34 = (unint64_t)&v27[8 * v27[2] + 4];
                if (v28 + 32 < v34 + (v29 << 6) && v34 < v28 + 32 + (v29 << 6)) {
                  goto LABEL_167;
                }
                swift_arrayInitWithCopy();
                if (v29) {
                  v27[2] += v29;
                }
              }
              swift_bridgeObjectRelease();
              v25[2] = v27;
              swift_bridgeObjectRelease();
              float32x4_t v36 = *(char **)(*v24 + 24);
              uint64_t v37 = *(void *)(v24[1] + 24);
              uint64_t v38 = *(void *)(v37 + 16);
              uint64_t v39 = *((void *)v36 + 2);
              uint64_t v40 = v39 + v38;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v41 = swift_isUniquelyReferenced_nonNull_native();
              if (!v41 || v40 > *((void *)v36 + 3) >> 1)
              {
                if (v39 <= v40) {
                  uint64_t v42 = v39 + v38;
                }
                else {
                  uint64_t v42 = v39;
                }
                float32x4_t v36 = sub_1B68C1E4C(v41, v42, 1, v36);
              }
              if (*(void *)(v37 + 16))
              {
                uint64_t v43 = &v36[80 * *((void *)v36 + 2) + 32];
                if (v37 + 32 < (unint64_t)&v43[80 * v38] && (unint64_t)v43 < v37 + 32 + 80 * v38) {
                  goto LABEL_167;
                }
                memcpy(v43, (const void *)(v37 + 32), 80 * v38);
                if (v38) {
                  *((void *)v36 + 2) += v38;
                }
              }
              swift_bridgeObjectRelease();
              v25[3] = v36;
              swift_bridgeObjectRelease();
              uint64_t v45 = sub_1B6CC740C(&qword_1E9DD2DB0, (void (*)(uint64_t))type metadata accessor for CustomParameters);
              uint64_t v22 = v160;
              uint64_t v46 = v160 + 104 * v21;
              *(void *)(v46 + 24) = v25;
              *(void *)(v46 + 32) = v45;
              swift_retain();
              swift_unknownObjectRelease();
              if (*(void *)(v46 + 24)
                && object_getClass(*(id *)(v46 + 24)) == (Class)_TtC3VFX16CustomParameters)
              {
                swift_unknownObjectRetain();
                uint64_t v51 = sub_1B6B98A6C();
                uint64_t v53 = v52;
                swift_unknownObjectRelease();
                uint64_t v54 = v160 + 104 * v21;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)(v54 + 88) = v51;
                *(void *)(v54 + 96) = v53;
                uint64_t v22 = v160;
              }
              else
              {
                uint64_t v47 = sub_1B6335620(MEMORY[0x1E4FBC860]);
                uint64_t v49 = v48;
                uint64_t v50 = v160 + 104 * v21;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)(v50 + 88) = v47;
                *(void *)(v50 + 96) = v49;
              }
              swift_release();
              uint64_t v20 = v156;
              uint64_t v19 = v154;
            }
            uint64_t v55 = *(void *)(*(void *)(v20 + 40) + 16);
            uint64_t v56 = *(void *)(v55 + 128);
            if (*(void *)(v56 + 16))
            {
              unint64_t v57 = sub_1B62C1A30((uint64_t)&type metadata for MaterialParameters);
              if ((v58 & 1) != 0
                && *(ValueMetadata **)(*(void *)(v55 + 24) + 16 * *(void *)(*(void *)(v56 + 56) + 8 * v57) + 32) == &type metadata for MaterialParameters)
              {
                uint64_t v188 = &type metadata for MaterialParameters;
                uint64_t v189 = &off_1F0F77018;
                char v190 = 1;
                uint64_t v59 = *(void *)(*v152 + 16);
                if (v59)
                {
                  uint64_t v60 = *v152 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v61 = 0;
                  while (2)
                  {
                    sub_1B63B2978(v60, (uint64_t)v187);
                    sub_1B639192C((uint64_t)v187, (uint64_t)&v181);
                    sub_1B639192C((uint64_t)&v188, (uint64_t)v184);
                    switch(BYTE8(v183))
                    {
                      case 1:
                        sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                        if (v186 != 1) {
                          goto LABEL_63;
                        }
                        goto LABEL_77;
                      case 2:
                        sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                        if (v186 != 2) {
                          goto LABEL_62;
                        }
                        goto LABEL_74;
                      case 3:
                        sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                        if (v186 == 3)
                        {
LABEL_74:
                          sub_1B62C15C4(v180, (uint64_t)v177);
                          sub_1B62C15C4((long long *)v184, (uint64_t)v176);
                          uint64_t v64 = v178;
                          uint64_t v65 = v179;
                          sub_1B62C14BC(v177, v178);
                          LOBYTE(v64) = sub_1B6B3D86C(v176, v64, v65);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v176);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v177);
                          sub_1B6391400((uint64_t)&v181);
                          sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v64)
                          {
LABEL_82:
                            swift_bridgeObjectRelease();
                            uint64_t v70 = sub_1B6B1B930();
                            uint64_t v71 = *(void *)(v69 + 48);
                            if (v71)
                            {
                              uint64_t v72 = *(void *)(v69 + 64);
                              *(void *)(v71 + 8 * v72) = v158;
                              *(void *)(v69 + 64) = v72 + 1;
                            }
                            ((void (*)(long long *, void))v70)(&v181, 0);
                            uint64_t v20 = v156;
                            uint64_t v19 = v154;
                            uint64_t v22 = v160;
                            goto LABEL_21;
                          }
                        }
                        else
                        {
LABEL_62:
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v180);
LABEL_63:
                          sub_1B62E2EA0((uint64_t)&v181, (uint64_t (*)(void))sub_1B691F560);
                          sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                        }
LABEL_64:
                        ++v61;
                        v60 += 72;
                        if (v59 != v61) {
                          continue;
                        }
                        swift_bridgeObjectRelease();
                        uint64_t v20 = v156;
                        break;
                      case 4:
                        sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                        if (v186 != 4) {
                          goto LABEL_63;
                        }
                        int v62 = LOBYTE(v180[0]);
                        int v63 = v184[0];
                        sub_1B6391400((uint64_t)&v181);
                        sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v62 == v63) {
                          goto LABEL_82;
                        }
                        goto LABEL_64;
                      case 5:
                        if (v186 != 5) {
                          goto LABEL_63;
                        }
                        int8x16_t v68 = vorrq_s8(*(int8x16_t *)&v184[8], v185);
                        if (*(void *)&vorr_s8(*(int8x8_t *)v68.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v68, v68, 8uLL)) | *(void *)v184) {
                          goto LABEL_63;
                        }
                        sub_1B6391400((uint64_t)&v181);
                        sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                        goto LABEL_82;
                      default:
                        sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                        if (v186) {
                          goto LABEL_63;
                        }
LABEL_77:
                        uint64_t v66 = *(void *)&v180[0];
                        uint64_t v67 = *(void *)v184;
                        sub_1B6391400((uint64_t)&v181);
                        sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v66 == v67) {
                          goto LABEL_82;
                        }
                        goto LABEL_64;
                    }
                    break;
                  }
                }
                else
                {
                  uint64_t v20 = v156;
                  swift_retain();
                }
                uint64_t v73 = *(void *)(v20 + 240) - *(void *)(v20 + 232);
                uint64_t v74 = ecs_stack_allocator_allocate(v153[4], 8 * v73, 8);
                *uint64_t v74 = v158;
                sub_1B639192C((uint64_t)&v188, (uint64_t)&v181);
                *(void *)uint64_t v184 = v74;
                *(void *)&void v184[8] = v73;
                *(void *)&v184[16] = 1;
                uint64_t v75 = (void *)v153[13];
                char v76 = swift_isUniquelyReferenced_nonNull_native();
                v153[13] = v75;
                uint64_t v22 = v160;
                if ((v76 & 1) == 0)
                {
                  uint64_t v75 = sub_1B68C0C6C(0, v75[2] + 1, 1, v75);
                  *uint64_t v152 = v75;
                }
                unint64_t v78 = v75[2];
                unint64_t v77 = v75[3];
                if (v78 >= v77 >> 1)
                {
                  uint64_t v75 = sub_1B68C0C6C(v77 > 1, v78 + 1, 1, v75);
                  *uint64_t v152 = v75;
                }
                v75[2] = v78 + 1;
                long long v79 = &v75[9 * v78];
                *((_OWORD *)v79 + 2) = v181;
                long long v80 = v182;
                long long v81 = v183;
                long long v82 = *(_OWORD *)v184;
                v79[12] = *(void *)&v184[16];
                *((_OWORD *)v79 + 4) = v81;
                *((_OWORD *)v79 + 5) = v82;
                *((_OWORD *)v79 + 3) = v80;
                uint64_t v19 = v154;
LABEL_21:
                sub_1B6391400((uint64_t)&v188);
                swift_release();
              }
            }
            ++v21;
          }
          while (v21 != v19);
        }
      }
      else if (v13 != v157)
      {
        uint64_t v83 = v160;
        do
        {
          if (*(unsigned char *)(v83 + 104 * v13) == 2)
          {
            int v84 = (void *)(v155 + 32 * v13);
            type metadata accessor for CustomParameters();
            int v85 = (void *)swift_allocObject();
            uint64_t v86 = MEMORY[0x1E4FBC860];
            v85[2] = MEMORY[0x1E4FBC860];
            v85[3] = v86;
            v85[4] = v86;
            unint64_t v87 = *(void **)(*v84 + 16);
            uint64_t v88 = *(void *)(v84[1] + 16);
            uint64_t v89 = *(void *)(v88 + 16);
            uint64_t v90 = v87[2];
            uint64_t v91 = v90 + v89;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v92 = swift_isUniquelyReferenced_nonNull_native();
            if (!v92 || v91 > v87[3] >> 1)
            {
              if (v90 <= v91) {
                uint64_t v93 = v90 + v89;
              }
              else {
                uint64_t v93 = v90;
              }
              unint64_t v87 = sub_1B68C4E38(v92, v93, 1, v87);
            }
            if (*(void *)(v88 + 16))
            {
              unint64_t v94 = (unint64_t)&v87[8 * v87[2] + 4];
              if (v88 + 32 < v94 + (v89 << 6) && v94 < v88 + 32 + (v89 << 6))
              {
LABEL_167:
                sub_1B6E32C88();
                __break(1u);
                JUMPOUT(0x1B6CBC11CLL);
              }
              swift_arrayInitWithCopy();
              if (v89) {
                v87[2] += v89;
              }
            }
            swift_bridgeObjectRelease();
            v85[2] = v87;
            swift_bridgeObjectRelease();
            uint64_t v96 = *(char **)(*v84 + 24);
            uint64_t v97 = *(void *)(v84[1] + 24);
            uint64_t v98 = *(void *)(v97 + 16);
            uint64_t v99 = *((void *)v96 + 2);
            uint64_t v100 = v99 + v98;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v101 = swift_isUniquelyReferenced_nonNull_native();
            if (!v101 || v100 > *((void *)v96 + 3) >> 1)
            {
              if (v99 <= v100) {
                uint64_t v102 = v99 + v98;
              }
              else {
                uint64_t v102 = v99;
              }
              uint64_t v96 = sub_1B68C1E4C(v101, v102, 1, v96);
            }
            if (*(void *)(v97 + 16))
            {
              uint64_t v103 = &v96[80 * *((void *)v96 + 2) + 32];
              if (v97 + 32 < (unint64_t)&v103[80 * v98] && (unint64_t)v103 < v97 + 32 + 80 * v98) {
                goto LABEL_167;
              }
              memcpy(v103, (const void *)(v97 + 32), 80 * v98);
              if (v98) {
                *((void *)v96 + 2) += v98;
              }
            }
            swift_bridgeObjectRelease();
            v85[3] = v96;
            swift_bridgeObjectRelease();
            uint64_t v105 = sub_1B6CC740C(&qword_1E9DD2DB0, (void (*)(uint64_t))type metadata accessor for CustomParameters);
            uint64_t v83 = v160;
            uint64_t v106 = v160 + 104 * v13;
            *(void *)(v106 + 24) = v85;
            *(void *)(v106 + 32) = v105;
            swift_retain();
            swift_unknownObjectRelease();
            if (*(void *)(v106 + 24)
              && object_getClass(*(id *)(v106 + 24)) == (Class)_TtC3VFX16CustomParameters)
            {
              swift_unknownObjectRetain();
              uint64_t v111 = sub_1B6B98A6C();
              uint64_t v113 = v112;
              swift_unknownObjectRelease();
              uint64_t v114 = v160 + 104 * v13;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)(v114 + 88) = v111;
              *(void *)(v114 + 96) = v113;
              uint64_t v83 = v160;
            }
            else
            {
              uint64_t v107 = sub_1B6335620(MEMORY[0x1E4FBC860]);
              uint64_t v109 = v108;
              uint64_t v110 = v160 + 104 * v13;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)(v110 + 88) = v107;
              *(void *)(v110 + 96) = v109;
            }
            swift_release();
            uint64_t v20 = v156;
          }
          uint64_t v115 = *(void *)(*(void *)(v20 + 40) + 16);
          uint64_t v116 = *(void *)(v115 + 128);
          if (*(void *)(v116 + 16))
          {
            unint64_t v117 = sub_1B62C1A30((uint64_t)&type metadata for MaterialParameters);
            if ((v118 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v115 + 24) + 16 * *(void *)(*(void *)(v116 + 56) + 8 * v117) + 32) == &type metadata for MaterialParameters)
            {
              uint64_t v188 = &type metadata for MaterialParameters;
              uint64_t v189 = &off_1F0F77018;
              char v190 = 1;
              uint64_t v119 = *(void *)(*v152 + 16);
              if (v119)
              {
                uint64_t v120 = *v152 + 32;
                swift_retain();
                swift_bridgeObjectRetain();
                uint64_t v121 = 0;
                while (2)
                {
                  sub_1B63B2978(v120, (uint64_t)v187);
                  sub_1B639192C((uint64_t)v187, (uint64_t)&v181);
                  sub_1B639192C((uint64_t)&v188, (uint64_t)v184);
                  switch(BYTE8(v183))
                  {
                    case 1:
                      sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                      if (v186 != 1) {
                        goto LABEL_135;
                      }
                      goto LABEL_146;
                    case 2:
                      sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                      if (v186 != 2) {
                        goto LABEL_134;
                      }
                      goto LABEL_149;
                    case 3:
                      sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                      if (v186 == 3)
                      {
LABEL_149:
                        sub_1B62C15C4(v180, (uint64_t)v177);
                        sub_1B62C15C4((long long *)v184, (uint64_t)v176);
                        uint64_t v126 = v178;
                        uint64_t v127 = v179;
                        sub_1B62C14BC(v177, v178);
                        LOBYTE(v126) = sub_1B6B3D86C(v176, v126, v127);
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v176);
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v177);
                        sub_1B6391400((uint64_t)&v181);
                        sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v126)
                        {
LABEL_154:
                          swift_bridgeObjectRelease();
                          uint64_t v130 = sub_1B6B1B930();
                          uint64_t v131 = *(void *)(v129 + 48);
                          if (v131)
                          {
                            uint64_t v132 = *(void *)(v129 + 64);
                            *(void *)(v131 + 8 * v132) = v13;
                            *(void *)(v129 + 64) = v132 + 1;
                          }
                          ((void (*)(long long *, void))v130)(&v181, 0);
                          uint64_t v20 = v156;
                          uint64_t v83 = v160;
                          goto LABEL_93;
                        }
                      }
                      else
                      {
LABEL_134:
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v180);
LABEL_135:
                        sub_1B62E2EA0((uint64_t)&v181, (uint64_t (*)(void))sub_1B691F560);
                        sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                      }
LABEL_136:
                      ++v121;
                      v120 += 72;
                      if (v119 != v121) {
                        continue;
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v20 = v156;
                      break;
                    case 4:
                      sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                      if (v186 != 4) {
                        goto LABEL_135;
                      }
                      int v122 = LOBYTE(v180[0]);
                      int v123 = v184[0];
                      sub_1B6391400((uint64_t)&v181);
                      sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                      if (v122 == v123) {
                        goto LABEL_154;
                      }
                      goto LABEL_136;
                    case 5:
                      if (v186 != 5) {
                        goto LABEL_135;
                      }
                      int8x16_t v128 = vorrq_s8(*(int8x16_t *)&v184[8], v185);
                      if (*(void *)&vorr_s8(*(int8x8_t *)v128.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL)) | *(void *)v184) {
                        goto LABEL_135;
                      }
                      sub_1B6391400((uint64_t)&v181);
                      sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                      goto LABEL_154;
                    default:
                      sub_1B639192C((uint64_t)&v181, (uint64_t)v180);
                      if (v186) {
                        goto LABEL_135;
                      }
LABEL_146:
                      uint64_t v124 = *(void *)&v180[0];
                      uint64_t v125 = *(void *)v184;
                      sub_1B6391400((uint64_t)&v181);
                      sub_1B62E2EA0((uint64_t)v187, (uint64_t (*)(void))sub_1B63B29DC);
                      if (v124 == v125) {
                        goto LABEL_154;
                      }
                      goto LABEL_136;
                  }
                  break;
                }
              }
              else
              {
                uint64_t v20 = v156;
                swift_retain();
              }
              uint64_t v133 = *(void *)(v20 + 240) - *(void *)(v20 + 232);
              uint64_t v134 = ecs_stack_allocator_allocate(v153[4], 8 * v133, 8);
              *uint64_t v134 = v13;
              sub_1B639192C((uint64_t)&v188, (uint64_t)&v181);
              *(void *)uint64_t v184 = v134;
              *(void *)&void v184[8] = v133;
              *(void *)&v184[16] = 1;
              long long v135 = (void *)v153[13];
              char v136 = swift_isUniquelyReferenced_nonNull_native();
              v153[13] = v135;
              uint64_t v83 = v160;
              if ((v136 & 1) == 0)
              {
                long long v135 = sub_1B68C0C6C(0, v135[2] + 1, 1, v135);
                *uint64_t v152 = v135;
              }
              unint64_t v138 = v135[2];
              unint64_t v137 = v135[3];
              if (v138 >= v137 >> 1)
              {
                long long v135 = sub_1B68C0C6C(v137 > 1, v138 + 1, 1, v135);
                *uint64_t v152 = v135;
              }
              _OWORD v135[2] = v138 + 1;
              unint64_t v139 = &v135[9 * v138];
              *((_OWORD *)v139 + 2) = v181;
              long long v140 = v182;
              long long v141 = v183;
              long long v142 = *(_OWORD *)v184;
              v139[12] = *(void *)&v184[16];
              *((_OWORD *)v139 + 4) = v141;
              *((_OWORD *)v139 + 5) = v142;
              *((_OWORD *)v139 + 3) = v140;
LABEL_93:
              sub_1B6391400((uint64_t)&v188);
              swift_release();
            }
          }
          ++v13;
        }
        while (v13 != v157);
      }
      v166[0] = v163;
      v166[1] = v164;
      uint64_t v167 = v165;
      uint64_t v11 = v150;
      sub_1B6345178(v153, (unsigned __int16 **)v166, (uint64_t)v199);
      sub_1B634507C((char *)v20);
      uint64_t v23 = v20;
      uint64_t v9 = v146;
      ecs_stack_allocator_pop_snapshot(v146);
      int v8 = v147;
      if (v147)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 376));
      }
      swift_release();
      uint64_t v10 = v151 + 1;
    }
    while (v151 + 1 != v149);
    sub_1B62CA064((uint64_t)v161);
    sub_1B632F220(v191, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v161);
  }
  return sub_1B632F220(v191, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CBC14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v133 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v103 = qword_1EB997A18;
  int v104 = v7;
  char v105 = v6 >> 31;
  uint64_t v106 = 1;
  char v107 = 2;
  uint64_t v108 = 0;
  swift_retain();
  sub_1B678314C(1, 3, (uint64_t)v97);
  swift_release();
  v101[0] = v97[0];
  v101[1] = v97[1];
  uint64_t v102 = v98;
  sub_1B62C9DA8(a1, (uint64_t)v101, 0x200000000, v124);
  sub_1B62D8068((uint64_t)v124, (uint64_t)v125, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v125[0]) {
    return (void *)sub_1B62CA064((uint64_t)v97);
  }
  if (v131 <= 0 || (uint64_t v89 = v128) == 0)
  {
    sub_1B62CA064((uint64_t)v97);
    return sub_1B632F220(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  int v8 = v130;
  uint64_t v95 = v130[4];
  int v94 = *(unsigned __int8 *)(v129 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v99[0] = v125[0];
  v99[1] = v125[1];
  uint64_t v100 = v126;
  uint64_t v87 = (uint64_t)(v130 + 6);
  uint64_t v88 = v127;
  uint64_t v91 = v130 + 13;
  uint64_t v86 = v130 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v90 = v8;
LABEL_11:
  uint64_t v11 = (unsigned int *)(v88 + 48 * v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v15 = (uint64_t *)*((void *)v11 + 2);
  uint64_t v14 = *((void *)v11 + 3);
  uint64_t v16 = *((void *)v11 + 4);
  uint64_t v17 = *((void *)v11 + 5);
  uint64_t v92 = v10;
  uint64_t v93 = v9;
  if (v94)
  {
    uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
    swift_retain();
    os_unfair_lock_lock(v18);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
  }
  else
  {
    swift_retain();
  }
  ecs_stack_allocator_push_snapshot(v95);
  sub_1B62D8068(v87, (uint64_t)v132, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
  uint64_t v19 = v8[4];
  uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
  swift_retain();
  v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
  v8[7] = v20;
  v86[1] = 0;
  v86[2] = 0;
  *uint64_t v86 = 0;
  swift_release();
  sub_1B62C9024((uint64_t)&type metadata for VFXAssetTag, (uint64_t)&off_1F0F58B78, v15, v14, v16, (uint64_t)v8);
  uint64_t v96 = sub_1B62C9024((uint64_t)&type metadata for Name, (uint64_t)&off_1F0F9E630, v15, v14, v16, (uint64_t)v8);
  if (!v15)
  {
    if (v13 == v12) {
      goto LABEL_18;
    }
    while (1)
    {
      uint64_t v54 = (void *)(v96 + 16 * v13);
      BOOL v55 = *v54 == 0x7465737341 && v54[1] == 0xE500000000000000;
      if (v55 || (sub_1B6E334B8() & 1) != 0)
      {
        uint64_t v56 = *(void *)(*(void *)(v17 + 40) + 16);
        uint64_t v57 = *(void *)(v56 + 128);
        if (*(void *)(v57 + 16))
        {
          unint64_t v58 = sub_1B62C1A30((uint64_t)&type metadata for Name);
          if ((v59 & 1) != 0
            && *(ValueMetadata **)(*(void *)(v56 + 24) + 16 * *(void *)(*(void *)(v57 + 56) + 8 * v58) + 32) == &type metadata for Name)
          {
            uint64_t v60 = v12;
            uint64_t v121 = &type metadata for Name;
            int v122 = &off_1F0F9E630;
            char v123 = 1;
            uint64_t v61 = *(void *)(*v91 + 16);
            if (v61)
            {
              uint64_t v62 = *v91 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v63 = 0;
              while (2)
              {
                sub_1B63B2978(v62, (uint64_t)v120);
                sub_1B639192C((uint64_t)v120, (uint64_t)&v114);
                sub_1B639192C((uint64_t)&v121, (uint64_t)v117);
                switch(BYTE8(v116))
                {
                  case 1:
                    sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
                    if (v119 != 1) {
                      goto LABEL_77;
                    }
                    goto LABEL_83;
                  case 2:
                    sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
                    if (v119 != 2) {
                      goto LABEL_76;
                    }
                    goto LABEL_88;
                  case 3:
                    sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
                    if (v119 == 3)
                    {
LABEL_88:
                      sub_1B62C15C4(v113, (uint64_t)v110);
                      sub_1B62C15C4((long long *)v117, (uint64_t)v109);
                      uint64_t v66 = v111;
                      uint64_t v67 = v112;
                      sub_1B62C14BC(v110, v111);
                      LOBYTE(v66) = sub_1B6B3D86C(v109, v66, v67);
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v109);
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v110);
                      sub_1B6391400((uint64_t)&v114);
                      sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
                      if (v66)
                      {
LABEL_96:
                        swift_bridgeObjectRelease();
                        uint64_t v72 = sub_1B6B1B930();
                        uint64_t v73 = *(void *)(v71 + 48);
                        if (v73)
                        {
                          uint64_t v74 = *(void *)(v71 + 64);
                          *(void *)(v73 + 8 * v74) = v13;
                          *(void *)(v71 + 64) = v74 + 1;
                        }
                        ((void (*)(long long *, void))v72)(&v114, 0);
                        uint64_t v12 = v60;
                        goto LABEL_64;
                      }
                    }
                    else
                    {
LABEL_76:
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v113);
LABEL_77:
                      sub_1B62E2EA0((uint64_t)&v114, (uint64_t (*)(void))sub_1B691F560);
                      sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
                    }
LABEL_78:
                    ++v63;
                    v62 += 72;
                    if (v61 != v63) {
                      continue;
                    }
                    swift_bridgeObjectRelease();
                    break;
                  case 4:
                    sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
                    if (v119 != 4) {
                      goto LABEL_77;
                    }
                    int v68 = LOBYTE(v113[0]);
                    int v69 = v117[0];
                    sub_1B6391400((uint64_t)&v114);
                    sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v68 == v69) {
                      goto LABEL_96;
                    }
                    goto LABEL_78;
                  case 5:
                    if (v119 != 5) {
                      goto LABEL_77;
                    }
                    int8x16_t v70 = vorrq_s8(*(int8x16_t *)&v117[8], v118);
                    if (*(void *)&vorr_s8(*(int8x8_t *)v70.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL)) | *(void *)v117) {
                      goto LABEL_77;
                    }
                    sub_1B6391400((uint64_t)&v114);
                    sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
                    goto LABEL_96;
                  default:
                    sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
                    if (v119) {
                      goto LABEL_77;
                    }
LABEL_83:
                    uint64_t v64 = *(void *)&v113[0];
                    uint64_t v65 = *(void *)v117;
                    sub_1B6391400((uint64_t)&v114);
                    sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v64 == v65) {
                      goto LABEL_96;
                    }
                    goto LABEL_78;
                }
                break;
              }
            }
            else
            {
              swift_retain();
            }
            uint64_t v75 = *(void *)(v17 + 240) - *(void *)(v17 + 232);
            char v76 = ecs_stack_allocator_allocate(v8[4], 8 * v75, 8);
            *char v76 = v13;
            sub_1B639192C((uint64_t)&v121, (uint64_t)&v114);
            *(void *)unint64_t v117 = v76;
            *(void *)&v117[8] = v75;
            *(void *)&v117[16] = 1;
            unint64_t v77 = (void *)v8[13];
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v8[13] = v77;
            uint64_t v12 = v60;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unint64_t v77 = sub_1B68C0C6C(0, v77[2] + 1, 1, v77);
              *uint64_t v91 = v77;
            }
            unint64_t v80 = v77[2];
            unint64_t v79 = v77[3];
            if (v80 >= v79 >> 1)
            {
              unint64_t v77 = sub_1B68C0C6C(v79 > 1, v80 + 1, 1, v77);
              *uint64_t v91 = v77;
            }
            v77[2] = v80 + 1;
            long long v81 = &v77[9 * v80];
            *((_OWORD *)v81 + 2) = v114;
            long long v82 = v115;
            long long v83 = v116;
            long long v84 = *(_OWORD *)v117;
            v81[12] = *(void *)&v117[16];
            *((_OWORD *)v81 + 4) = v83;
            *((_OWORD *)v81 + 5) = v84;
            *((_OWORD *)v81 + 3) = v82;
LABEL_64:
            sub_1B6391400((uint64_t)&v121);
            swift_release();
          }
        }
      }
      if (++v13 == v12) {
        goto LABEL_18;
      }
    }
  }
  if (!v16) {
    goto LABEL_18;
  }
  uint64_t v21 = 0;
LABEL_23:
  uint64_t v22 = v15[v21];
  uint64_t v23 = (void *)(v96 + 16 * v21);
  BOOL v24 = *v23 == 0x7465737341 && v23[1] == 0xE500000000000000;
  if (!v24 && (sub_1B6E334B8() & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v25 = *(void *)(*(void *)(v17 + 40) + 16);
  uint64_t v26 = *(void *)(v25 + 128);
  if (!*(void *)(v26 + 16)) {
    goto LABEL_22;
  }
  unint64_t v27 = sub_1B62C1A30((uint64_t)&type metadata for Name);
  if ((v28 & 1) == 0
    || *(ValueMetadata **)(*(void *)(v25 + 24) + 16 * *(void *)(*(void *)(v26 + 56) + 8 * v27) + 32) != &type metadata for Name)
  {
    goto LABEL_22;
  }
  uint64_t v121 = &type metadata for Name;
  int v122 = &off_1F0F9E630;
  char v123 = 1;
  uint64_t v29 = *(void *)(*v91 + 16);
  if (!v29)
  {
    swift_retain();
    goto LABEL_58;
  }
  uint64_t v30 = *v91 + 32;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  while (2)
  {
    sub_1B63B2978(v30, (uint64_t)v120);
    sub_1B639192C((uint64_t)v120, (uint64_t)&v114);
    sub_1B639192C((uint64_t)&v121, (uint64_t)v117);
    switch(BYTE8(v116))
    {
      case 1:
        sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
        if (v119 != 1) {
          goto LABEL_34;
        }
        goto LABEL_40;
      case 2:
        sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
        if (v119 != 2) {
          goto LABEL_33;
        }
        goto LABEL_44;
      case 3:
        sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
        if (v119 != 3)
        {
LABEL_33:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v113);
LABEL_34:
          sub_1B62E2EA0((uint64_t)&v114, (uint64_t (*)(void))sub_1B691F560);
          sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
          goto LABEL_35;
        }
LABEL_44:
        sub_1B62C15C4(v113, (uint64_t)v110);
        sub_1B62C15C4((long long *)v117, (uint64_t)v109);
        uint64_t v35 = v111;
        uint64_t v36 = v112;
        sub_1B62C14BC(v110, v111);
        LOBYTE(v35) = sub_1B6B3D86C(v109, v35, v36);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v109);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v110);
        sub_1B6391400((uint64_t)&v114);
        sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
        if ((v35 & 1) == 0)
        {
LABEL_35:
          ++v31;
          v30 += 72;
          if (v29 == v31)
          {
            swift_bridgeObjectRelease();
LABEL_58:
            uint64_t v44 = *(void *)(v17 + 240) - *(void *)(v17 + 232);
            int v8 = v90;
            uint64_t v45 = ecs_stack_allocator_allocate(v90[4], 8 * v44, 8);
            *uint64_t v45 = v22;
            sub_1B639192C((uint64_t)&v121, (uint64_t)&v114);
            *(void *)unint64_t v117 = v45;
            *(void *)&v117[8] = v44;
            *(void *)&v117[16] = 1;
            uint64_t v46 = (void *)v90[13];
            char v47 = swift_isUniquelyReferenced_nonNull_native();
            v90[13] = v46;
            if ((v47 & 1) == 0)
            {
              uint64_t v46 = sub_1B68C0C6C(0, v46[2] + 1, 1, v46);
              *uint64_t v91 = v46;
            }
            unint64_t v49 = v46[2];
            unint64_t v48 = v46[3];
            if (v49 >= v48 >> 1)
            {
              uint64_t v46 = sub_1B68C0C6C(v48 > 1, v49 + 1, 1, v46);
              *uint64_t v91 = v46;
            }
            _OWORD v46[2] = v49 + 1;
            uint64_t v50 = &v46[9 * v49];
            *((_OWORD *)v50 + 2) = v114;
            long long v51 = v115;
            long long v52 = v116;
            long long v53 = *(_OWORD *)v117;
            v50[12] = *(void *)&v117[16];
            *((_OWORD *)v50 + 4) = v52;
            *((_OWORD *)v50 + 5) = v53;
            *((_OWORD *)v50 + 3) = v51;
            goto LABEL_21;
          }
          continue;
        }
LABEL_54:
        swift_bridgeObjectRelease();
        int v41 = sub_1B6B1B930();
        uint64_t v42 = *(void *)(v40 + 48);
        if (v42)
        {
          uint64_t v43 = *(void *)(v40 + 64);
          *(void *)(v42 + 8 * v43) = v22;
          *(void *)(v40 + 64) = v43 + 1;
        }
        ((void (*)(long long *, void))v41)(&v114, 0);
        int v8 = v90;
LABEL_21:
        sub_1B6391400((uint64_t)&v121);
        swift_release();
LABEL_22:
        if (++v21 != v16) {
          goto LABEL_23;
        }
LABEL_18:
        uint64_t v10 = v92;
        sub_1B6345178(v8, (unsigned __int16 **)v99, (uint64_t)v132);
        sub_1B634507C((char *)v17);
        ecs_stack_allocator_pop_snapshot(v95);
        if (v94)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
        }
        swift_release();
        uint64_t v9 = v93 + 1;
        if (v93 + 1 != v89) {
          goto LABEL_11;
        }
        sub_1B62CA064((uint64_t)v97);
        sub_1B632F220(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        return sub_1B632F220(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      case 4:
        sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
        if (v119 != 4) {
          goto LABEL_34;
        }
        int v37 = LOBYTE(v113[0]);
        int v38 = v117[0];
        sub_1B6391400((uint64_t)&v114);
        sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v34 = v37 == v38;
        goto LABEL_48;
      case 5:
        if (v119 != 5) {
          goto LABEL_34;
        }
        int8x16_t v39 = vorrq_s8(*(int8x16_t *)&v117[8], v118);
        if (*(void *)&vorr_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)) | *(void *)v117) {
          goto LABEL_34;
        }
        sub_1B6391400((uint64_t)&v114);
        sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
        goto LABEL_54;
      default:
        sub_1B639192C((uint64_t)&v114, (uint64_t)v113);
        if (v119) {
          goto LABEL_34;
        }
LABEL_40:
        uint64_t v32 = *(void *)&v113[0];
        uint64_t v33 = *(void *)v117;
        sub_1B6391400((uint64_t)&v114);
        sub_1B62E2EA0((uint64_t)v120, (uint64_t (*)(void))sub_1B63B29DC);
        BOOL v34 = v32 == v33;
LABEL_48:
        if (!v34) {
          goto LABEL_35;
        }
        goto LABEL_54;
    }
  }
}

void *sub_1B6CBCED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v54 = qword_1EB997A18;
  int v55 = v7;
  char v56 = v6 >> 31;
  uint64_t v57 = 1;
  char v58 = 2;
  uint64_t v59 = 0;
  swift_retain();
  sub_1B6A71204(2, (uint64_t)v39);
  swift_release();
  v51[0] = v39[0];
  v51[1] = v39[1];
  uint64_t v52 = v40;
  sub_1B62C9DA8(a1, (uint64_t)v51, 0x200000000, v41);
  sub_1B62D8068((uint64_t)v41, (uint64_t)v42, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v42[0]) {
    return (void *)sub_1B62CA064((uint64_t)v39);
  }
  if (v48 <= 0 || (uint64_t v35 = v45) == 0)
  {
    sub_1B62CA064((uint64_t)v39);
    return sub_1B632F220(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  int v8 = v47;
  uint64_t v9 = v47[4];
  int v10 = *(unsigned __int8 *)(v46 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v49[0] = v42[0];
  v49[1] = v42[1];
  uint64_t v50 = v43;
  uint64_t v32 = (uint64_t)(v47 + 6);
  uint64_t v33 = v44;
  uint64_t v31 = v47 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  __asm { FMOV            V8.2S, #1.0 }
  int v34 = v10;
  do
  {
    uint64_t v18 = (unsigned int *)(v33 + 48 * v11);
    uint64_t v37 = *v18;
    uint64_t v38 = v12;
    uint64_t v36 = v18[1];
    uint64_t v20 = (uint64_t *)*((void *)v18 + 2);
    uint64_t v19 = *((void *)v18 + 3);
    uint64_t v21 = *((void *)v18 + 4);
    uint64_t v22 = *((void *)v18 + 5);
    if (v10)
    {
      uint64_t v23 = *(os_unfair_lock_s **)(v22 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v23);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v9);
    sub_1B62D8068(v32, (uint64_t)v53, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v24 = v8[4];
    uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v8[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
    v8[7] = v25;
    v31[1] = 0;
    _OWORD v31[2] = 0;
    *uint64_t v31 = 0;
    swift_release();
    uint64_t v26 = sub_1B62C9024((uint64_t)&type metadata for ParticlePivotInit, (uint64_t)&off_1F0F733C0, v20, v19, v21, (uint64_t)v8);
    if (v20)
    {
      if (v21)
      {
        unint64_t v27 = (float32x2_t *)(v26 + 16);
        uint64_t v12 = v38;
        do
        {
          v27[-2] = (float32x2_t)vrev64_s32((int32x2_t)vsub_f32(_D8, v27[-2]));
          *unint64_t v27 = (float32x2_t)vrev64_s32((int32x2_t)vsub_f32(_D8, *v27));
          v27 += 3;
          --v21;
        }
        while (v21);
        goto LABEL_23;
      }
    }
    else if (v37 != v36)
    {
      char v28 = (float32x2_t *)(v26 + 24 * v37 + 16);
      uint64_t v29 = v36 - v37;
      uint64_t v12 = v38;
      do
      {
        v28[-2] = (float32x2_t)vrev64_s32((int32x2_t)vsub_f32(_D8, v28[-2]));
        float32x2_t *v28 = (float32x2_t)vrev64_s32((int32x2_t)vsub_f32(_D8, *v28));
        v28 += 3;
        --v29;
      }
      while (v29);
      goto LABEL_23;
    }
    uint64_t v12 = v38;
LABEL_23:
    sub_1B6345178(v8, (unsigned __int16 **)v49, (uint64_t)v53);
    sub_1B634507C((char *)v22);
    ecs_stack_allocator_pop_snapshot(v9);
    int v10 = v34;
    if (v34)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
    }
    swift_release();
    ++v11;
  }
  while (v11 != v35);
  sub_1B62CA064((uint64_t)v39);
  sub_1B632F220(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void sub_1B6CBD2E4(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  int v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = v2 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v3;
  }
  uint64_t v544 = qword_1EB997A18;
  int v269 = v7;
  int v545 = v7;
  unint64_t v268 = v6 >> 31;
  char v546 = v6 >> 31;
  char v548 = 2;
  uint64_t v547 = 1;
  uint64_t v549 = 0;
  swift_retain();
  sub_1B62A068C(2, (uint64_t)v295);
  swift_release();
  v438[0] = v295[0];
  v438[1] = v295[1];
  uint64_t v439 = v296;
  uint64_t v270 = v5;
  sub_1B62C9DA8(v5, (uint64_t)v438, 0x200000000, v297);
  sub_1B62D8068((uint64_t)v297, (uint64_t)v387, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v387[0])
  {
    uint64_t v31 = v5;
    goto LABEL_39;
  }
  if (v393 < 1 || (uint64_t v271 = v390) == 0)
  {
    uint64_t v31 = v5;
    goto LABEL_38;
  }
  int v8 = v392;
  uint64_t v9 = v392[4];
  int v10 = *(unsigned __int8 *)(v391 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v394[0] = v387[0];
  v394[1] = v387[1];
  uint64_t v395 = v388;
  uint64_t v256 = (uint64_t)(v392 + 6);
  uint64_t v262 = v389;
  uint64_t v250 = v392 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = 0;
  int v241 = v10;
  uint64_t v244 = v9;
  do
  {
    uint64_t v12 = (unsigned int *)(v262 + 48 * v11);
    uint64_t v276 = *v12;
    uint64_t v282 = v12[1];
    uint64_t v13 = (uint64_t *)*((void *)v12 + 2);
    uint64_t v288 = *((void *)v12 + 3);
    uint64_t v14 = *((void *)v12 + 4);
    uint64_t v15 = *((void *)v12 + 5);
    if (v10)
    {
      uint64_t v16 = *(os_unfair_lock_s **)(v15 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v16);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v9);
    sub_1B62D8068(v256, (uint64_t)v543, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v17 = v8[4];
    uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v8[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
    v8[7] = v18;
    v250[1] = 0;
    v250[2] = 0;
    *uint64_t v250 = 0;
    swift_release();
    uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v13, v288, v14, (uint64_t)v8);
    if (v13)
    {
      int v10 = v241;
      if (!v14) {
        goto LABEL_19;
      }
      uint64_t v9 = v244;
      if (v14 == 1)
      {
        unint64_t v20 = 0;
LABEL_23:
        unint64_t v23 = v14 - v20;
        uint64_t v24 = (unsigned char *)(v19 + 88 * v20 + 58);
        do
        {
          *uint64_t v24 = 1;
          v24 += 88;
          --v23;
        }
        while (v23);
        goto LABEL_33;
      }
      unint64_t v20 = v14 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v21 = (unsigned char *)(v19 + 146);
      unint64_t v22 = v14 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        *(v21 - 88) = 1;
        *uint64_t v21 = 1;
        v21 += 176;
        v22 -= 2;
      }
      while (v22);
      if (v14 != v20) {
        goto LABEL_23;
      }
    }
    else
    {
      int v10 = v241;
      if (v276 == v282)
      {
LABEL_19:
        uint64_t v9 = v244;
        goto LABEL_33;
      }
      uint64_t v25 = v282 - v276;
      uint64_t v9 = v244;
      if ((unint64_t)(v282 - v276) < 2)
      {
        uint64_t v26 = v276;
LABEL_31:
        uint64_t v29 = v282 - v26;
        uint64_t v30 = (unsigned char *)(v19 + 88 * v26 + 58);
        do
        {
          *uint64_t v30 = 1;
          v30 += 88;
          --v29;
        }
        while (v29);
        goto LABEL_33;
      }
      uint64_t v26 = (v25 & 0xFFFFFFFFFFFFFFFELL) + v276;
      unint64_t v27 = (unsigned char *)(v19 + 88 * v276 + 146);
      unint64_t v28 = v25 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        *(v27 - 88) = 1;
        *unint64_t v27 = 1;
        v27 += 176;
        v28 -= 2;
      }
      while (v28);
      if (v25 != (v25 & 0xFFFFFFFFFFFFFFFELL)) {
        goto LABEL_31;
      }
    }
LABEL_33:
    sub_1B6345178(v8, (unsigned __int16 **)v394, (uint64_t)v543);
    sub_1B634507C((char *)v15);
    ecs_stack_allocator_pop_snapshot(v9);
    if (v10)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
    }
    swift_release();
    ++v11;
  }
  while (v11 != v271);
  sub_1B632F220(v297, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v31 = v5;
LABEL_38:
  sub_1B632F220(v297, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_39:
  v537[5] = qword_1EB997A18;
  int v538 = v269;
  char v539 = v268;
  char v541 = 2;
  uint64_t v540 = 1;
  uint64_t v542 = 0;
  swift_retain();
  sub_1B6A7140C(2, (uint64_t)v298);
  swift_release();
  v436[0] = v298[0];
  v436[1] = v298[1];
  uint64_t v437 = v299;
  sub_1B62C9DA8(v31, (uint64_t)v436, 0x200000000, v300);
  sub_1B62D8068((uint64_t)v300, (uint64_t)v380, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v380[0])
  {
    if (v386 >= 1)
    {
      uint64_t v263 = v383;
      if (v383)
      {
        uint64_t v277 = v385[4];
        int v32 = *(unsigned __int8 *)(v384 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v396[0] = v380[0];
        v396[1] = v380[1];
        uint64_t v397 = v381;
        uint64_t v245 = (uint64_t)(v385 + 6);
        uint64_t v251 = v382;
        uint64_t v283 = v385;
        uint64_t v242 = v385 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v33 = 0;
        int v257 = v32;
        do
        {
          int v34 = (unsigned int *)(v251 + 48 * v33);
          uint64_t v35 = *v34;
          uint64_t v36 = v34[1];
          uint64_t v38 = (uint64_t *)*((void *)v34 + 2);
          uint64_t v37 = *((void *)v34 + 3);
          uint64_t v40 = *((void *)v34 + 4);
          uint64_t v39 = *((void *)v34 + 5);
          if (v32)
          {
            int v41 = *(os_unfair_lock_s **)(v39 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v41);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v277);
          sub_1B62D8068(v245, (uint64_t)v537, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v42 = v283[4];
          uint64_t v43 = *(void *)(*(void *)(*(void *)(*(void *)(v39 + 40) + 16) + 32) + 16) + 1;
          uint64_t v289 = v39;
          swift_retain();
          v283[6] = ecs_stack_allocator_allocate(v42, 48 * v43, 8);
          v283[7] = v43;
          v242[1] = 0;
          v242[2] = 0;
          void *v242 = 0;
          swift_release();
          uint64_t v44 = sub_1B62C9024((uint64_t)&type metadata for ParticleSizeOverLife, (uint64_t)&off_1F0F828C8, v38, v37, v40, (uint64_t)v283);
          if (v38)
          {
            if (v40)
            {
              for (uint64_t i = 0; i != v40; ++i)
              {
                uint64_t v46 = (uint64_t *)(v44 + 112 * i);
                if (*(unsigned __int8 *)v46 <= 1u)
                {
                  uint64_t v47 = *(void *)(v46[3] + 16);
                  if (v47)
                  {
                    uint64_t v48 = v46 + 2;
                    uint64_t v49 = v46[2];
                    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    _OWORD v46[2] = v49;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1B6C1683C(v49);
                      *uint64_t v48 = isUniquelyReferenced_nonNull_native;
                    }
                    nullsub_1(isUniquelyReferenced_nonNull_native);
                    uint64_t v51 = sub_1B6C165E8();
                    nullsub_1(v51);
                    uint64_t v52 = sub_1B6C165E8();
                    nullsub_1(v52);
                    uint64_t v53 = -v47;
                    uint64_t v54 = 8;
                    do
                    {
                      float v55 = *(float *)(*v48 + 4 * v54) + *(float *)(*v48 + 4 * v54);
                      uint64_t v56 = sub_1B6C165E8();
                      *(float *)(*v48 + 4 * v54) = v55;
                      nullsub_1(v56);
                      ++v54;
                    }
                    while (v53 + v54 != 8);
                  }
                  uint64_t v57 = *(void *)(v46[7] + 16);
                  if (v57)
                  {
                    char v58 = v46 + 6;
                    uint64_t v59 = sub_1B6C165E8();
                    nullsub_1(v59);
                    uint64_t v60 = sub_1B6C165E8();
                    nullsub_1(v60);
                    uint64_t v61 = sub_1B6C165E8();
                    nullsub_1(v61);
                    uint64_t v62 = -v57;
                    uint64_t v63 = 8;
                    do
                    {
                      float v64 = *(float *)(*v58 + 4 * v63) + *(float *)(*v58 + 4 * v63);
                      uint64_t v65 = sub_1B6C165E8();
                      *(float *)(*v58 + 4 * v63) = v64;
                      nullsub_1(v65);
                      ++v63;
                    }
                    while (v62 + v63 != 8);
                  }
                  uint64_t v66 = sub_1B6355ED4(v46[11]);
                  if (v66)
                  {
                    uint64_t v67 = v66;
                    int v68 = v46 + 10;
                    uint64_t v69 = sub_1B6C165E8();
                    nullsub_1(v69);
                    uint64_t v70 = sub_1B6C165E8();
                    nullsub_1(v70);
                    uint64_t v71 = sub_1B6C165E8();
                    nullsub_1(v71);
                    uint64_t v72 = 8;
                    do
                    {
                      float v73 = *(float *)(*v68 + 4 * v72) + *(float *)(*v68 + 4 * v72);
                      uint64_t v74 = sub_1B6C165E8();
                      *(float *)(*v68 + 4 * v72) = v73;
                      nullsub_1(v74);
                      ++v72;
                    }
                    while (v72 - v67 != 8);
                  }
                }
              }
            }
          }
          else if (v35 != v36)
          {
            do
            {
              uint64_t v75 = (uint64_t *)(v44 + 112 * v35);
              if (*(unsigned __int8 *)v75 <= 1u)
              {
                uint64_t v76 = *(void *)(v75[3] + 16);
                if (v76)
                {
                  unint64_t v77 = v75 + 2;
                  uint64_t v78 = v75[2];
                  uint64_t v79 = swift_isUniquelyReferenced_nonNull_native();
                  v75[2] = v78;
                  if ((v79 & 1) == 0)
                  {
                    uint64_t v79 = (uint64_t)sub_1B6C1683C(v78);
                    *unint64_t v77 = v79;
                  }
                  nullsub_1(v79);
                  uint64_t v80 = sub_1B6C165E8();
                  nullsub_1(v80);
                  uint64_t v81 = sub_1B6C165E8();
                  nullsub_1(v81);
                  uint64_t v82 = -v76;
                  uint64_t v83 = 8;
                  do
                  {
                    float v84 = *(float *)(*v77 + 4 * v83) + *(float *)(*v77 + 4 * v83);
                    uint64_t v85 = sub_1B6C165E8();
                    *(float *)(*v77 + 4 * v83) = v84;
                    nullsub_1(v85);
                    ++v83;
                  }
                  while (v82 + v83 != 8);
                }
                uint64_t v86 = *(void *)(v75[7] + 16);
                if (v86)
                {
                  uint64_t v87 = v75 + 6;
                  uint64_t v88 = sub_1B6C165E8();
                  nullsub_1(v88);
                  uint64_t v89 = sub_1B6C165E8();
                  nullsub_1(v89);
                  uint64_t v90 = sub_1B6C165E8();
                  nullsub_1(v90);
                  uint64_t v91 = -v86;
                  uint64_t v92 = 8;
                  do
                  {
                    float v93 = *(float *)(*v87 + 4 * v92) + *(float *)(*v87 + 4 * v92);
                    uint64_t v94 = sub_1B6C165E8();
                    *(float *)(*v87 + 4 * v92) = v93;
                    nullsub_1(v94);
                    ++v92;
                  }
                  while (v91 + v92 != 8);
                }
                uint64_t v95 = sub_1B6355ED4(v75[11]);
                if (v95)
                {
                  uint64_t v96 = v95;
                  uint64_t v97 = v75 + 10;
                  uint64_t v98 = sub_1B6C165E8();
                  nullsub_1(v98);
                  uint64_t v99 = sub_1B6C165E8();
                  nullsub_1(v99);
                  uint64_t v100 = sub_1B6C165E8();
                  nullsub_1(v100);
                  uint64_t v101 = -v96;
                  uint64_t v102 = 8;
                  do
                  {
                    float v103 = *(float *)(*v97 + 4 * v102) + *(float *)(*v97 + 4 * v102);
                    uint64_t v104 = sub_1B6C165E8();
                    *(float *)(*v97 + 4 * v102) = v103;
                    nullsub_1(v104);
                    ++v102;
                  }
                  while (v101 + v102 != 8);
                }
              }
              ++v35;
            }
            while (v35 != v36);
          }
          sub_1B6345178(v283, (unsigned __int16 **)v396, (uint64_t)v537);
          sub_1B634507C((char *)v289);
          ecs_stack_allocator_pop_snapshot(v277);
          int v32 = v257;
          if (v257)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v289 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v289 + 376));
          }
          swift_release();
          ++v33;
        }
        while (v33 != v263);
        sub_1B632F220(v300, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v31 = v270;
      }
    }
    sub_1B632F220(v300, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  v531[5] = qword_1EB997A18;
  int v532 = v269;
  char v533 = v268;
  char v535 = 2;
  uint64_t v534 = 1;
  uint64_t v536 = 0;
  swift_retain();
  sub_1B6A71614(2, (uint64_t)v301);
  swift_release();
  v434[0] = v301[0];
  v434[1] = v301[1];
  uint64_t v435 = v302;
  sub_1B62C9DA8(v31, (uint64_t)v434, 0x200000000, v303);
  sub_1B62D8068((uint64_t)v303, (uint64_t)v373, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v373[0])
  {
    uint64_t v121 = v270;
    goto LABEL_110;
  }
  if (v379 < 1 || (uint64_t v278 = v376) == 0)
  {
    uint64_t v121 = v270;
    goto LABEL_109;
  }
  char v105 = v378;
  uint64_t v106 = v378[4];
  int v107 = *(unsigned __int8 *)(v377 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v398[0] = v373[0];
  v398[1] = v373[1];
  uint64_t v272 = v375;
  uint64_t v399 = v374;
  uint64_t v258 = v378 + 8;
  uint64_t v264 = (uint64_t)(v378 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v108 = 0;
  int v246 = v107;
  uint64_t v252 = v106;
  while (2)
  {
    uint64_t v109 = (unsigned int *)(v272 + 48 * v108);
    uint64_t v290 = *v109;
    uint64_t v284 = v109[1];
    uint64_t v111 = (uint64_t *)*((void *)v109 + 2);
    uint64_t v110 = *((void *)v109 + 3);
    uint64_t v112 = *((void *)v109 + 4);
    uint64_t v113 = *((void *)v109 + 5);
    if (v107)
    {
      long long v114 = *(os_unfair_lock_s **)(v113 + 376);
      swift_retain();
      os_unfair_lock_lock(v114);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v113 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v106);
    sub_1B62D8068(v264, (uint64_t)v531, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v115 = v105[4];
    uint64_t v116 = *(void *)(*(void *)(*(void *)(*(void *)(v113 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v105[6] = ecs_stack_allocator_allocate(v115, 48 * v116, 8);
    v105[7] = v116;
    v258[1] = 0;
    v258[2] = 0;
    void *v258 = 0;
    swift_release();
    uint64_t v117 = sub_1B62C9024((uint64_t)&type metadata for ParticleSizeOverVelocity, (uint64_t)&off_1F0F93890, v111, v110, v112, (uint64_t)v105);
    if (v111)
    {
      int v107 = v246;
      if (v112)
      {
        int8x16_t v118 = (float32x2_t *)(v117 + 36);
        uint64_t v106 = v252;
        do
        {
          if (v118[-5].u8[4] <= 1u)
          {
            *(float32x4_t *)v118[-2].f32 = vaddq_f32(*(float32x4_t *)v118[-2].f32, *(float32x4_t *)v118[-2].f32);
            *int8x16_t v118 = vadd_f32(*v118, *v118);
          }
          int8x16_t v118 = (float32x2_t *)((char *)v118 + 44);
          --v112;
        }
        while (v112);
        goto LABEL_100;
      }
LABEL_99:
      uint64_t v106 = v252;
      goto LABEL_100;
    }
    int v107 = v246;
    if (v290 == v284) {
      goto LABEL_99;
    }
    char v119 = (float32x2_t *)(v117 + 44 * v290 + 36);
    uint64_t v120 = v284 - v290;
    uint64_t v106 = v252;
    do
    {
      if (v119[-5].u8[4] <= 1u)
      {
        *(float32x4_t *)v119[-2].f32 = vaddq_f32(*(float32x4_t *)v119[-2].f32, *(float32x4_t *)v119[-2].f32);
        *char v119 = vadd_f32(*v119, *v119);
      }
      char v119 = (float32x2_t *)((char *)v119 + 44);
      --v120;
    }
    while (v120);
LABEL_100:
    sub_1B6345178(v105, (unsigned __int16 **)v398, (uint64_t)v531);
    sub_1B634507C((char *)v113);
    ecs_stack_allocator_pop_snapshot(v106);
    if (v107)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v113 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v113 + 376));
    }
    swift_release();
    if (++v108 != v278) {
      continue;
    }
    break;
  }
  sub_1B632F220(v303, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v121 = v270;
LABEL_109:
  sub_1B632F220(v303, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_110:
  v525[5] = qword_1EB997A18;
  int v526 = v269;
  char v527 = v268;
  char v529 = 2;
  uint64_t v528 = 1;
  uint64_t v530 = 0;
  swift_retain();
  sub_1B6A7181C(2, (uint64_t)v304);
  swift_release();
  v432[0] = v304[0];
  v432[1] = v304[1];
  uint64_t v433 = v305;
  sub_1B62C9DA8(v121, (uint64_t)v432, 0x200000000, v306);
  sub_1B62D8068((uint64_t)v306, (uint64_t)v366, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v366[0])
  {
    if (v372 >= 1)
    {
      uint64_t v279 = v369;
      if (v369)
      {
        int v122 = v371;
        uint64_t v123 = v371[4];
        int v124 = *(unsigned __int8 *)(v370 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v400[0] = v366[0];
        v400[1] = v366[1];
        uint64_t v273 = v368;
        uint64_t v401 = v367;
        int v259 = v371 + 8;
        uint64_t v265 = (uint64_t)(v371 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v125 = 0;
        int v247 = v124;
        uint64_t v253 = v123;
        while (1)
        {
          uint64_t v126 = (unsigned int *)(v273 + 48 * v125);
          uint64_t v291 = *v126;
          uint64_t v285 = v126[1];
          uint64_t v128 = (uint64_t *)*((void *)v126 + 2);
          uint64_t v127 = *((void *)v126 + 3);
          uint64_t v129 = *((void *)v126 + 4);
          uint64_t v130 = *((void *)v126 + 5);
          if (v124)
          {
            uint64_t v131 = *(os_unfair_lock_s **)(v130 + 376);
            swift_retain();
            os_unfair_lock_lock(v131);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v130 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v123);
          sub_1B62D8068(v265, (uint64_t)v525, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v132 = v122[4];
          uint64_t v133 = *(void *)(*(void *)(*(void *)(*(void *)(v130 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v122[6] = ecs_stack_allocator_allocate(v132, 48 * v133, 8);
          v122[7] = v133;
          v259[1] = 0;
          v259[2] = 0;
          void *v259 = 0;
          swift_release();
          uint64_t v134 = sub_1B62C9024((uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, v128, v127, v129, (uint64_t)v122);
          if (v128)
          {
            int v124 = v247;
            if (v129)
            {
              long long v135 = (float32x2_t *)(v134 + 40);
              uint64_t v123 = v253;
              do
              {
                if (v135[-4].u8[4] <= 1u)
                {
                  *(float32x4_t *)v135[-2].f32 = vaddq_f32(*(float32x4_t *)v135[-2].f32, *(float32x4_t *)v135[-2].f32);
                  *long long v135 = vadd_f32(*v135, *v135);
                }
                v135 += 9;
                --v129;
              }
              while (v129);
              goto LABEL_126;
            }
          }
          else
          {
            int v124 = v247;
            if (v291 != v285)
            {
              uint64_t v136 = v285 - v291;
              unint64_t v137 = (float32x2_t *)(v134 + 72 * v291 + 40);
              uint64_t v123 = v253;
              do
              {
                if (v137[-4].u8[4] <= 1u)
                {
                  *(float32x4_t *)v137[-2].f32 = vaddq_f32(*(float32x4_t *)v137[-2].f32, *(float32x4_t *)v137[-2].f32);
                  *unint64_t v137 = vadd_f32(*v137, *v137);
                }
                v137 += 9;
                --v136;
              }
              while (v136);
              goto LABEL_126;
            }
          }
          uint64_t v123 = v253;
LABEL_126:
          sub_1B6345178(v122, (unsigned __int16 **)v400, (uint64_t)v525);
          sub_1B634507C((char *)v130);
          ecs_stack_allocator_pop_snapshot(v123);
          if (v124)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v130 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v130 + 376));
          }
          swift_release();
          if (++v125 == v279)
          {
            sub_1B632F220(v306, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            break;
          }
        }
      }
    }
    uint64_t v138 = v270;
    sub_1B632F220(v306, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    uint64_t v138 = v270;
  }
  v519[5] = qword_1EB997A18;
  int v520 = v269;
  char v521 = v268;
  char v523 = 2;
  uint64_t v522 = 1;
  uint64_t v524 = 0;
  swift_retain();
  sub_1B67833A0(1, 2, (uint64_t)v307);
  swift_release();
  v430[0] = v307[0];
  v430[1] = v307[1];
  uint64_t v431 = v308;
  sub_1B62C9DA8(v138, (uint64_t)v430, 0x200000000, v309);
  sub_1B62D8068((uint64_t)v309, (uint64_t)v356, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v356[0])
  {
    long long v363 = v356[0];
    long long v364 = v356[1];
    uint64_t v365 = v357;
    if (v362 >= 1)
    {
      uint64_t v260 = v359;
      if (v359)
      {
        uint64_t v248 = v358;
        unint64_t v139 = v361;
        uint64_t v140 = v361[4];
        uint64_t v292 = v360;
        int v286 = *(unsigned __int8 *)(v360 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v240 = v361 + 8;
        uint64_t v243 = (uint64_t)(v361 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v141 = 0;
        uint64_t v254 = v140;
        do
        {
          uint64_t v280 = v141;
          long long v142 = (unsigned int *)(v248 + 48 * v141);
          uint64_t v143 = *v142;
          uint64_t v266 = v142[1];
          uint64_t v144 = v142[2];
          uint64_t v145 = (uint64_t *)*((void *)v142 + 2);
          uint64_t v274 = *((void *)v142 + 3);
          uint64_t v147 = *((void *)v142 + 4);
          uint64_t v146 = *((void *)v142 + 5);
          if (v286)
          {
            uint64_t v148 = *(os_unfair_lock_s **)(v146 + 376);
            swift_retain();
            os_unfair_lock_lock(v148);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v146 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v140);
          sub_1B62D8068(v243, (uint64_t)v517, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v149 = v139[4];
          uint64_t v150 = *(void *)(*(void *)(*(void *)(*(void *)(v146 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v139[6] = ecs_stack_allocator_allocate(v149, 48 * v150, 8);
          v139[7] = v150;
          v240[1] = 0;
          v240[2] = 0;
          void *v240 = 0;
          swift_release();
          uint64_t v151 = sub_1B62C9024((uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, v145, v274, v147, (uint64_t)v139);
          uint64_t v152 = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v145, v274, v147, (uint64_t)v139);
          uint64_t v153 = (float32x2_t *)v152;
          if (v145)
          {
            for (; v147; --v147)
            {
              uint64_t v154 = *v145++;
              v518[0] = v292;
              v518[1] = v146;
              v518[2] = v139;
              v518[3] = v144;
              v518[4] = v154;
              sub_1B6CC4E48((uint64_t)v518, v151, v153);
              ++v144;
              v153 += 2;
              v151 += 224;
            }
          }
          else if (v143 != v266)
          {
            uint64_t v155 = (float32x2_t *)(v152 + 16 * v143);
            uint64_t v156 = v151 + 224 * v143;
            do
            {
              v519[0] = v292;
              v519[1] = v146;
              v519[2] = v139;
              v519[3] = v144;
              v519[4] = v143;
              sub_1B6CC4E48((uint64_t)v519, v156, v155);
              ++v143;
              ++v144;
              v155 += 2;
              v156 += 224;
            }
            while (v266 != v143);
          }
          v402[0] = v363;
          v402[1] = v364;
          uint64_t v403 = v365;
          sub_1B6345178(v139, (unsigned __int16 **)v402, (uint64_t)v517);
          sub_1B634507C((char *)v146);
          uint64_t v140 = v254;
          ecs_stack_allocator_pop_snapshot(v254);
          if (v286)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v146 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v146 + 376));
          }
          swift_release();
          uint64_t v141 = v280 + 1;
        }
        while (v280 + 1 != v260);
        sub_1B632F220(v309, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    sub_1B632F220(v309, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  v511[5] = qword_1EB997A18;
  int v512 = v269;
  char v513 = v268;
  char v515 = 2;
  uint64_t v514 = 1;
  uint64_t v516 = 0;
  swift_retain();
  sub_1B67835F4(1, 2, (uint64_t)v310);
  swift_release();
  v428[0] = v310[0];
  v428[1] = v310[1];
  uint64_t v429 = v311;
  sub_1B62C9DA8(v270, (uint64_t)v428, 0x200000000, v312);
  sub_1B62D8068((uint64_t)v312, (uint64_t)v349, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v349[0])
  {
    uint64_t v169 = v270;
    goto LABEL_177;
  }
  if (v355 < 1 || (uint64_t v275 = v352) == 0)
  {
    uint64_t v169 = v270;
    goto LABEL_176;
  }
  uint64_t v157 = v354;
  uint64_t v158 = v354[4];
  int v293 = *(unsigned __int8 *)(v353 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v404[0] = v349[0];
  v404[1] = v349[1];
  uint64_t v255 = v351;
  uint64_t v261 = (uint64_t)(v354 + 6);
  uint64_t v405 = v350;
  long long v249 = v354 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v159 = 0;
  uint64_t v267 = v158;
  while (2)
  {
    uint64_t v160 = (unsigned int *)(v255 + 48 * v159);
    int v161 = (uint64_t *)*((void *)v160 + 2);
    uint64_t v162 = *((void *)v160 + 3);
    uint64_t v164 = *((void *)v160 + 4);
    uint64_t v163 = *((void *)v160 + 5);
    uint64_t v281 = v160[1];
    uint64_t v287 = *v160;
    if (v293)
    {
      uint64_t v165 = *(os_unfair_lock_s **)(v163 + 376);
      swift_retain();
      os_unfair_lock_lock(v165);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v163 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v158);
    sub_1B62D8068(v261, (uint64_t)v511, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v166 = v157[4];
    uint64_t v167 = *(void *)(*(void *)(*(void *)(*(void *)(v163 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v157[6] = ecs_stack_allocator_allocate(v166, 48 * v167, 8);
    v157[7] = v167;
    v249[1] = 0;
    v249[2] = 0;
    void *v249 = 0;
    swift_release();
    sub_1B62C9024((uint64_t)&type metadata for ParticlePlaneCollider, (uint64_t)&off_1F0F895A0, v161, v162, v164, (uint64_t)v157);
    uint64_t v168 = (float32x2_t *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v161, v162, v164, (uint64_t)v157);
    if (v161)
    {
      if (v164)
      {
        uint64_t v169 = v270;
        uint64_t v158 = v267;
        do
        {
          *(float32x2_t *)&long long v170 = vadd_f32(*v168, *v168);
          *((float *)&v170 + 2) = v168[1].f32[0] + v168[1].f32[0];
          HIDWORD(v170) = 0;
          *(_OWORD *)v168->f32 = v170;
          v168 += 2;
          --v164;
        }
        while (v164);
        goto LABEL_171;
      }
LABEL_168:
      uint64_t v169 = v270;
      uint64_t v158 = v267;
      goto LABEL_171;
    }
    if (v287 == v281) {
      goto LABEL_168;
    }
    uint64_t v171 = v281 - v287;
    char v172 = &v168[2 * v287];
    uint64_t v169 = v270;
    uint64_t v158 = v267;
    do
    {
      *(float32x2_t *)&long long v173 = vadd_f32(*v172, *v172);
      *((float *)&v173 + 2) = v172[1].f32[0] + v172[1].f32[0];
      HIDWORD(v173) = 0;
      *(_OWORD *)v172->f32 = v173;
      v172 += 2;
      --v171;
    }
    while (v171);
LABEL_171:
    sub_1B6345178(v157, (unsigned __int16 **)v404, (uint64_t)v511);
    sub_1B634507C((char *)v163);
    ecs_stack_allocator_pop_snapshot(v158);
    if (v293)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v163 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v163 + 376));
    }
    swift_release();
    if (++v159 != v275) {
      continue;
    }
    break;
  }
  sub_1B632F220(v312, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_176:
  sub_1B632F220(v312, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_177:
  uint64_t v505 = qword_1EB997A18;
  int v506 = v269;
  char v507 = v268;
  char v509 = 2;
  uint64_t v508 = 1;
  uint64_t v510 = 0;
  swift_retain();
  sub_1B6783848(1, 2, (uint64_t)v313);
  swift_release();
  v426[0] = v313[0];
  v426[1] = v313[1];
  uint64_t v427 = v314;
  sub_1B62C9DA8(v169, (uint64_t)v426, 0x200000000, v315);
  sub_1B62D8068((uint64_t)v315, (uint64_t)v342, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v342[0])
  {
    long long v348 = v343;
    long long v345 = v342[2];
    long long v346 = v342[3];
    long long v347 = v342[4];
    v344[0] = v342[0];
    v344[1] = v342[1];
    uint64_t v174 = v343;
    if ((uint64_t)v343 <= 0)
    {
      sub_1B632F220(v315, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      uint64_t v175 = *((void *)&v346 + 1);
      if (*((void *)&v346 + 1))
      {
        uint64_t v176 = *((void *)&v347 + 1);
        uint64_t v177 = *(void *)(*((void *)&v347 + 1) + 32);
        uint64_t v178 = v347;
        uint64_t v179 = (long long *)*((void *)&v345 + 1);
        char v180 = *(unsigned char *)(v347 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        swift_retain();
        swift_retain();
        swift_retain();
        do
        {
          long long v181 = *v179;
          long long v182 = v179[1];
          long long v500 = v179[2];
          long long v499 = v182;
          long long v498 = v181;
          sub_1B6CC73A0((uint64_t)&v498);
          if (v180) {
            sub_1B66603B4();
          }
          j__ecs_stack_allocator_push_snapshot(v177);
          uint64_t v183 = *((void *)&v500 + 1);
          sub_1B6CC73A0((uint64_t)&v498);
          sub_1B62CD8E4(v183, v176, (uint64_t)v316);
          sub_1B68D6414((uint64_t)&v498);
          v501[0] = v178;
          v501[1] = v183;
          v501[2] = v176;
          v501[3] = DWORD2(v498);
          v501[4] = (DWORD1(v498) - v498 + DWORD2(v498));
          v501[5] = v174;
          v501[6] = v498;
          v501[7] = DWORD1(v498);
          v501[8] = 0;
          v501[9] = 0;
          char v502 = 1;
          long long v503 = v499;
          uint64_t v504 = v500;
          sub_1B6D8FFE8(v501);
          nullsub_1(v184);
          sub_1B684575C((uint64_t)v344, (uint64_t)v316, (uint64_t)&v498);
          j__ecs_stack_allocator_pop_snapshot(v177);
          sub_1B6845714(v180, (uint64_t)&v498);
          sub_1B68D6414((uint64_t)&v498);
          v179 += 3;
          --v175;
        }
        while (v175);
        sub_1B632F220(v315, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      int8x16_t v185 = sub_1B632F220(v315, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      nullsub_1(v185);
    }
  }
  uint64_t v492 = qword_1EB997A18;
  int v493 = v269;
  char v494 = v268;
  char v496 = 2;
  uint64_t v495 = 1;
  uint64_t v497 = 0;
  swift_retain();
  sub_1B6783A9C(1, 2, (uint64_t)v317);
  swift_release();
  sub_1B6CEE8E4((uint64_t)v317, 0x200000000, (uint64_t)v318);
  sub_1B6CC6FD8((uint64_t)v318, (uint64_t)v340);
  if (*(void *)&v340[0])
  {
    long long v410 = v341;
    long long v407 = v340[2];
    long long v408 = v340[3];
    long long v409 = v340[4];
    v406[0] = v340[0];
    v406[1] = v340[1];
    uint64_t v186 = v341;
    if ((uint64_t)v341 <= 0)
    {
      sub_1B632F220(v318, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      uint64_t v187 = *((void *)&v408 + 1);
      if (*((void *)&v408 + 1))
      {
        uint64_t v188 = *((void *)&v409 + 1);
        uint64_t v189 = *(void *)(*((void *)&v409 + 1) + 32);
        uint64_t v190 = v409;
        uint64_t v191 = (long long *)*((void *)&v407 + 1);
        char v192 = *(unsigned char *)(v409 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        swift_retain();
        swift_retain();
        swift_retain();
        do
        {
          long long v193 = *v191;
          long long v194 = v191[1];
          long long v487 = v191[2];
          long long v486 = v194;
          long long v485 = v193;
          sub_1B6CC73A0((uint64_t)&v485);
          if (v192) {
            sub_1B66603B4();
          }
          j__ecs_stack_allocator_push_snapshot(v189);
          uint64_t v195 = *((void *)&v487 + 1);
          sub_1B6CC73A0((uint64_t)&v485);
          sub_1B62CD8E4(v195, v188, (uint64_t)v319);
          sub_1B68D6414((uint64_t)&v485);
          v488[0] = v190;
          v488[1] = v195;
          v488[2] = v188;
          v488[3] = DWORD2(v485);
          v488[4] = (DWORD1(v485) - v485 + DWORD2(v485));
          v488[5] = v186;
          v488[6] = v485;
          v488[7] = DWORD1(v485);
          v488[8] = 0;
          v488[9] = 0;
          char v489 = 1;
          long long v490 = v486;
          uint64_t v491 = v487;
          sub_1B6D900E0(v488);
          nullsub_1(v196);
          sub_1B684575C((uint64_t)v406, (uint64_t)v319, (uint64_t)&v485);
          j__ecs_stack_allocator_pop_snapshot(v189);
          sub_1B6845714(v192, (uint64_t)&v485);
          sub_1B68D6414((uint64_t)&v485);
          v191 += 3;
          --v187;
        }
        while (v187);
        sub_1B632F220(v318, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      uint64_t v197 = sub_1B632F220(v318, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      nullsub_1(v197);
    }
  }
  uint64_t v479 = qword_1EB997A18;
  int v480 = v269;
  char v481 = v268;
  char v483 = 2;
  uint64_t v482 = 1;
  uint64_t v484 = 0;
  swift_retain();
  sub_1B6783CF0(1, 2, (uint64_t)v320);
  swift_release();
  sub_1B6CEE8E4((uint64_t)v320, 0x200000000, (uint64_t)v321);
  sub_1B6CC705C((uint64_t)v321, (uint64_t)v338);
  if (*(void *)&v338[0])
  {
    long long v415 = v339;
    long long v412 = v338[2];
    long long v413 = v338[3];
    long long v414 = v338[4];
    v411[0] = v338[0];
    v411[1] = v338[1];
    if ((uint64_t)v339 <= 0)
    {
      sub_1B632F220(v321, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      uint64_t v198 = v415;
      uint64_t v199 = *((void *)&v414 + 1);
      uint64_t v200 = sub_1B6534800(*((uint64_t *)&v414 + 1));
      uint64_t v201 = *((void *)&v413 + 1);
      if (*((void *)&v413 + 1))
      {
        uint64_t v202 = v200;
        uint64_t v203 = v414;
        uint64_t v204 = (long long *)*((void *)&v412 + 1);
        char v205 = *(unsigned char *)(v414 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        swift_retain();
        swift_retain();
        swift_retain();
        do
        {
          long long v206 = *v204;
          long long v207 = v204[1];
          long long v474 = v204[2];
          long long v473 = v207;
          long long v472 = v206;
          sub_1B6CC73A0((uint64_t)&v472);
          if (v205) {
            sub_1B66603B4();
          }
          j__ecs_stack_allocator_push_snapshot(v202);
          uint64_t v208 = *((void *)&v474 + 1);
          sub_1B6CC73A0((uint64_t)&v472);
          sub_1B62CD8E4(v208, v199, (uint64_t)v322);
          sub_1B68D6414((uint64_t)&v472);
          v475[0] = v203;
          v475[1] = v208;
          v475[2] = v199;
          v475[3] = DWORD2(v472);
          v475[4] = (DWORD1(v472) - v472 + DWORD2(v472));
          v475[5] = v198;
          v475[6] = v472;
          v475[7] = DWORD1(v472);
          v475[8] = 0;
          v475[9] = 0;
          char v476 = 1;
          long long v477 = v473;
          uint64_t v478 = v474;
          sub_1B6D901D8(v475);
          nullsub_1(v209);
          sub_1B684575C((uint64_t)v411, (uint64_t)v322, (uint64_t)&v472);
          j__ecs_stack_allocator_pop_snapshot(v202);
          sub_1B6845714(v205, (uint64_t)&v472);
          sub_1B68D6414((uint64_t)&v472);
          v204 += 3;
          --v201;
        }
        while (v201);
        sub_1B632F220(v321, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      uint64_t v210 = sub_1B632F220(v321, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      nullsub_1(v210);
    }
  }
  uint64_t v466 = qword_1EB997A18;
  int v467 = v269;
  char v468 = v268;
  char v470 = 2;
  uint64_t v469 = 1;
  uint64_t v471 = 0;
  swift_retain();
  sub_1B6783F44(1, 2, (uint64_t)v323);
  swift_release();
  sub_1B6CEE8E4((uint64_t)v323, 0x200000000, (uint64_t)v324);
  sub_1B6CC713C((uint64_t)v324, (uint64_t)v336);
  if (*(void *)&v336[0])
  {
    long long v420 = v337;
    long long v417 = v336[2];
    long long v418 = v336[3];
    long long v419 = v336[4];
    v416[0] = v336[0];
    v416[1] = v336[1];
    uint64_t v211 = v337;
    if ((uint64_t)v337 <= 0)
    {
      sub_1B632F220(v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      uint64_t v212 = *((void *)&v419 + 1);
      uint64_t v213 = sub_1B6534800(*((uint64_t *)&v419 + 1));
      uint64_t v214 = *((void *)&v418 + 1);
      if (*((void *)&v418 + 1))
      {
        uint64_t v215 = v213;
        uint64_t v216 = v419;
        uint64_t v217 = (long long *)*((void *)&v417 + 1);
        char v218 = *(unsigned char *)(v419 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        sub_1B632F220(v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
        do
        {
          long long v219 = *v217;
          long long v220 = v217[2];
          long long v460 = v217[1];
          long long v461 = v220;
          long long v459 = v219;
          sub_1B6CC73A0((uint64_t)&v459);
          if (v218) {
            sub_1B66603B4();
          }
          j__ecs_stack_allocator_push_snapshot(v215);
          uint64_t v221 = *((void *)&v461 + 1);
          sub_1B6CC73A0((uint64_t)&v459);
          sub_1B62CD8E4(v221, v212, (uint64_t)v325);
          sub_1B68D6414((uint64_t)&v459);
          v462[0] = v216;
          v462[1] = v221;
          v462[2] = v212;
          v462[3] = DWORD2(v459);
          v462[4] = (DWORD1(v459) - v459 + DWORD2(v459));
          v462[5] = v211;
          v462[6] = v459;
          v462[7] = DWORD1(v459);
          v462[8] = 0;
          v462[9] = 0;
          char v463 = 1;
          long long v464 = v460;
          uint64_t v465 = v461;
          uint64_t v222 = sub_1B6D902D0(v462);
          nullsub_1(v222);
          sub_1B684575C((uint64_t)v416, (uint64_t)v325, (uint64_t)&v459);
          j__ecs_stack_allocator_pop_snapshot(v215);
          sub_1B6845714(v218, (uint64_t)&v459);
          sub_1B68D6414((uint64_t)&v459);
          v217 += 3;
          --v214;
        }
        while (v214);
        sub_1B632F220(v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      int v223 = sub_1B632F220(v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      nullsub_1(v223);
    }
  }
  uint64_t v453 = qword_1EB997A18;
  int v454 = v269;
  char v455 = v268;
  char v457 = 2;
  uint64_t v456 = 1;
  uint64_t v458 = 0;
  swift_retain();
  sub_1B629FB54(1, (uint64_t)v326);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t v224 = swift_allocObject();
  uint64_t v225 = sub_1B68D6DD0(v224, 1);
  *uint64_t v226 = &type metadata for Scale;
  v226[1] = &off_1F0F9F580;
  nullsub_1(v225);
  sub_1B62AD184(v327);
  swift_bridgeObjectRelease();
  sub_1B62CA064((uint64_t)v326);
  uint64_t v227 = sub_1B67D1D54();
  sub_1B6355DF8(v328, v327, v227 & 0xFFFFFFFFFFLL);
  sub_1B6CC7228((uint64_t)v328, (uint64_t)v334);
  if (*(void *)&v334[0])
  {
    v335[2] = v334[2];
    v335[3] = v334[3];
    v335[4] = v334[4];
    v335[5] = v334[5];
    v335[0] = v334[0];
    v335[1] = v334[1];
    sub_1B6D86E0C((uint64_t)v335);
    sub_1B632F220(v328, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v447 = qword_1EB997A18;
  int v448 = v269;
  char v449 = v268;
  char v451 = 2;
  uint64_t v450 = 1;
  uint64_t v452 = 0;
  swift_retain();
  sub_1B6A71A24(2, (uint64_t)v329);
  swift_release();
  uint64_t v228 = sub_1B67D1D54();
  sub_1B6355DF8(v330, v329, v228 & 0xFFFFFFFFFFLL);
  sub_1B6CC731C((uint64_t)v330, (uint64_t)v332);
  if (*(void *)&v332[0])
  {
    long long v425 = v333;
    long long v422 = v332[2];
    long long v423 = v332[3];
    long long v424 = v332[4];
    v421[0] = v332[0];
    v421[1] = v332[1];
    uint64_t v294 = v333;
    if ((uint64_t)v333 <= 0)
    {
      sub_1B632F220(v330, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      sub_1B62CA064((uint64_t)v329);
      sub_1B62CA064((uint64_t)v327);
      sub_1B62CA064((uint64_t)v323);
      sub_1B62CA064((uint64_t)v320);
      sub_1B62CA064((uint64_t)v317);
      sub_1B62CA064((uint64_t)v313);
      sub_1B62CA064((uint64_t)v310);
      sub_1B62CA064((uint64_t)v307);
      sub_1B62CA064((uint64_t)v304);
      sub_1B62CA064((uint64_t)v301);
      sub_1B62CA064((uint64_t)v298);
      sub_1B62CA064((uint64_t)v295);
      sub_1B632F220(v330, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F220(v330, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      uint64_t v229 = *((void *)&v424 + 1);
      uint64_t v230 = sub_1B6534800(*((uint64_t *)&v424 + 1));
      uint64_t v231 = v424;
      char v232 = *(unsigned char *)(v424 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v233 = (long long *)*((void *)&v422 + 1);
      uint64_t v234 = *((void *)&v423 + 1);
      sub_1B632F220(v330, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      for (; v234; --v234)
      {
        long long v235 = *v233;
        long long v236 = v233[1];
        long long v442 = v233[2];
        long long v441 = v236;
        long long v440 = v235;
        sub_1B6CC73A0((uint64_t)&v440);
        if (v232) {
          sub_1B66603B4();
        }
        j__ecs_stack_allocator_push_snapshot(v230);
        uint64_t v237 = *((void *)&v442 + 1);
        sub_1B6CC73A0((uint64_t)&v440);
        sub_1B62CD8E4(v237, v229, (uint64_t)v331);
        sub_1B68D6414((uint64_t)&v440);
        v443[0] = v231;
        v443[1] = v237;
        v443[2] = v229;
        v443[3] = DWORD2(v440);
        v443[4] = (DWORD1(v440) - v440 + DWORD2(v440));
        v443[5] = v294;
        v443[6] = v440;
        v443[7] = DWORD1(v440);
        v443[8] = 0;
        v443[9] = 0;
        char v444 = 1;
        long long v445 = v441;
        uint64_t v446 = v442;
        uint64_t v238 = sub_1B6D87C14(v443);
        nullsub_1(v238);
        sub_1B684575C((uint64_t)v421, (uint64_t)v331, (uint64_t)&v440);
        j__ecs_stack_allocator_pop_snapshot(v230);
        sub_1B6845714(v232, (uint64_t)&v440);
        sub_1B68D6414((uint64_t)&v440);
        v233 += 3;
      }
      sub_1B62CA064((uint64_t)v329);
      sub_1B62CA064((uint64_t)v327);
      sub_1B62CA064((uint64_t)v323);
      sub_1B62CA064((uint64_t)v320);
      sub_1B62CA064((uint64_t)v317);
      sub_1B62CA064((uint64_t)v313);
      sub_1B62CA064((uint64_t)v310);
      sub_1B62CA064((uint64_t)v307);
      sub_1B62CA064((uint64_t)v304);
      sub_1B62CA064((uint64_t)v301);
      sub_1B62CA064((uint64_t)v298);
      sub_1B62CA064((uint64_t)v295);
      sub_1B632F220(v330, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      uint64_t v239 = sub_1B632F220(v330, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      nullsub_1(v239);
    }
  }
  else
  {
    sub_1B62CA064((uint64_t)v329);
    sub_1B62CA064((uint64_t)v327);
    sub_1B62CA064((uint64_t)v323);
    sub_1B62CA064((uint64_t)v320);
    sub_1B62CA064((uint64_t)v317);
    sub_1B62CA064((uint64_t)v313);
    sub_1B62CA064((uint64_t)v310);
    sub_1B62CA064((uint64_t)v307);
    sub_1B62CA064((uint64_t)v304);
    sub_1B62CA064((uint64_t)v301);
    sub_1B62CA064((uint64_t)v298);
    sub_1B62CA064((uint64_t)v295);
  }
}

void *sub_1B6CBFEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v61 = qword_1EB997A18;
  int v62 = v7;
  char v63 = v6 >> 31;
  uint64_t v64 = 1;
  char v65 = 2;
  uint64_t v66 = 0;
  swift_retain();
  sub_1B6A71C2C(2, (uint64_t)v46);
  swift_release();
  v58[0] = v46[0];
  v58[1] = v46[1];
  uint64_t v59 = v47;
  sub_1B62C9DA8(a1, (uint64_t)v58, 0x200000000, v48);
  sub_1B62D8068((uint64_t)v48, (uint64_t)v49, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v49[0]) {
    return (void *)sub_1B62CA064((uint64_t)v46);
  }
  if (v55 <= 0 || (uint64_t v40 = v52) == 0)
  {
    sub_1B62CA064((uint64_t)v46);
    return sub_1B632F220(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v8 = v54[4];
  int v9 = *(unsigned __int8 *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v56[0] = v49[0];
  v56[1] = v49[1];
  uint64_t v57 = v50;
  uint64_t v38 = (uint64_t)(v54 + 6);
  uint64_t v39 = v51;
  uint64_t v45 = v54;
  uint64_t v37 = v54 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v36 = v9;
  do
  {
    uint64_t v12 = (unsigned int *)(v39 + 48 * v10);
    uint64_t v41 = *v12;
    uint64_t v42 = v12[1];
    uint64_t v43 = v11;
    uint64_t v13 = (uint64_t *)*((void *)v12 + 2);
    uint64_t v44 = *((void *)v12 + 3);
    unint64_t v14 = *((void *)v12 + 4);
    uint64_t v15 = *((void *)v12 + 5);
    if (v9)
    {
      uint64_t v16 = *(os_unfair_lock_s **)(v15 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v16);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    sub_1B62D8068(v38, (uint64_t)v60, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v17 = v45[4];
    uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v45[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
    v45[7] = v18;
    v37[1] = 0;
    v37[2] = 0;
    *uint64_t v37 = 0;
    swift_release();
    uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for ParticleSpawnDuration, (uint64_t)&off_1F0F89D18, v13, v44, v14, (uint64_t)v45);
    if (v13)
    {
      if (!v14) {
        goto LABEL_19;
      }
      uint64_t v11 = v43;
      if (v14 < 4)
      {
        unint64_t v20 = 0;
        int v9 = v36;
LABEL_33:
        unint64_t v25 = v14 - v20;
        uint64_t v26 = (float *)(v19 + 4 * v20);
        do
        {
          if (*v26 == 0.0) {
            *uint64_t v26 = INFINITY;
          }
          ++v26;
          --v25;
        }
        while (v25);
        goto LABEL_20;
      }
      unint64_t v20 = v14 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v21 = (float32x2_t *)(v19 + 8);
      unint64_t v22 = v14 & 0xFFFFFFFFFFFFFFFCLL;
      int v9 = v36;
      do
      {
        int32x2_t v23 = vceqz_f32(v21[-1]);
        if (v23.i8[0]) {
          v21[-1].i32[0] = 2139095040;
        }
        if (v23.i8[4]) {
          v21[-1].i32[1] = 2139095040;
        }
        int32x2_t v24 = vceqz_f32(*v21);
        if (v24.i8[0]) {
          v21->i32[0] = 2139095040;
        }
        if (v24.i8[4]) {
          v21->i32[1] = 2139095040;
        }
        v21 += 2;
        v22 -= 4;
      }
      while (v22);
      if (v14 != v20) {
        goto LABEL_33;
      }
    }
    else
    {
      if (v41 == v42)
      {
LABEL_19:
        int v9 = v36;
        uint64_t v11 = v43;
        goto LABEL_20;
      }
      uint64_t v27 = v42 - v41;
      uint64_t v11 = v43;
      if ((unint64_t)(v42 - v41) < 4)
      {
        uint64_t v28 = v41;
        int v9 = v36;
LABEL_50:
        uint64_t v33 = v42 - v28;
        int v34 = (float *)(v19 + 4 * v28);
        do
        {
          if (*v34 == 0.0) {
            *int v34 = INFINITY;
          }
          ++v34;
          --v33;
        }
        while (v33);
        goto LABEL_20;
      }
      uint64_t v28 = (v27 & 0xFFFFFFFFFFFFFFFCLL) + v41;
      uint64_t v29 = (float32x2_t *)(v19 + 4 * v41 + 8);
      unint64_t v30 = v27 & 0xFFFFFFFFFFFFFFFCLL;
      int v9 = v36;
      do
      {
        int32x2_t v31 = vceqz_f32(v29[-1]);
        if (v31.i8[0]) {
          v29[-1].i32[0] = 2139095040;
        }
        if (v31.i8[4]) {
          v29[-1].i32[1] = 2139095040;
        }
        int32x2_t v32 = vceqz_f32(*v29);
        if (v32.i8[0]) {
          v29->i32[0] = 2139095040;
        }
        if (v32.i8[4]) {
          v29->i32[1] = 2139095040;
        }
        v29 += 2;
        v30 -= 4;
      }
      while (v30);
      if (v27 != (v27 & 0xFFFFFFFFFFFFFFFCLL)) {
        goto LABEL_50;
      }
    }
LABEL_20:
    sub_1B6345178(v45, (unsigned __int16 **)v56, (uint64_t)v60);
    sub_1B634507C((char *)v15);
    ecs_stack_allocator_pop_snapshot(v8);
    if (v9)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
    }
    swift_release();
    ++v10;
  }
  while (v10 != v40);
  sub_1B62CA064((uint64_t)v46);
  sub_1B632F220(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F220(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CC03B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v4;
  }
  uint64_t v60 = qword_1EB997A18;
  int v61 = v7;
  char v62 = v6 >> 31;
  uint64_t v63 = 1;
  char v64 = 2;
  uint64_t v65 = 0;
  swift_retain();
  sub_1B6A71E34(2, (uint64_t)v45);
  swift_release();
  v57[0] = v45[0];
  v57[1] = v45[1];
  uint64_t v58 = v46;
  sub_1B62C9DA8(a1, (uint64_t)v57, 0x200000000, v47);
  sub_1B62D8068((uint64_t)v47, (uint64_t)v48, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v48[0]) {
    return (void *)sub_1B62CA064((uint64_t)v45);
  }
  if (v54 > 0 && (uint64_t v41 = v51) != 0)
  {
    uint64_t v8 = v53;
    uint64_t v9 = v53[4];
    int v10 = *(unsigned __int8 *)(v52 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v55[0] = v48[0];
    v55[1] = v48[1];
    uint64_t v56 = v49;
    uint64_t v37 = (uint64_t)(v53 + 6);
    uint64_t v38 = v50;
    int v36 = v53 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    int v39 = v10;
    uint64_t v40 = v9;
    do
    {
      uint64_t v13 = (unsigned int *)(v38 + 48 * v11);
      uint64_t v43 = *v13;
      uint64_t v44 = v12;
      uint64_t v42 = v13[1];
      uint64_t v15 = (uint64_t *)*((void *)v13 + 2);
      uint64_t v14 = *((void *)v13 + 3);
      uint64_t v17 = *((void *)v13 + 4);
      uint64_t v16 = *((void *)v13 + 5);
      if (v10)
      {
        uint64_t v18 = *(os_unfair_lock_s **)(v16 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v18);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v9);
      sub_1B62D8068(v37, (uint64_t)v59, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v19 = v8[4];
      uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
      v8[7] = v20;
      v36[1] = 0;
      _OWORD v36[2] = 0;
      *int v36 = 0;
      swift_release();
      uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, v15, v14, v17, (uint64_t)v8);
      if (v15)
      {
        int v10 = v39;
        if (v17)
        {
          uint64_t v22 = *(void *)(*(void *)(v16 + 40) + 16);
          uint64_t v23 = *(void *)(v22 + 128);
          uint64_t v24 = *(void *)(v23 + 16);
          uint64_t v25 = v21 + 48;
          do
          {
            if (*(unsigned __int8 *)(v25 + 16) >= 2u && !(*(void *)v25 ^ 1 | *(void *)(v25 + 8)))
            {
              *(void *)uint64_t v25 = 0;
              *(void *)(v25 + 8) = 0;
              *(unsigned char *)(v25 + 16) = 2;
            }
            if (!v24
              || (unint64_t v26 = sub_1B62C1A30((uint64_t)&type metadata for LastFrameWorldTransform), (v27 & 1) == 0)
              || *(ValueMetadata **)(*(void *)(v22 + 24) + 16 * *(void *)(*(void *)(v23 + 56) + 8 * v26) + 32) != &type metadata for LastFrameWorldTransform)
            {
              *(unsigned char *)(v25 + 49) = 0;
            }
            v25 += 224;
            --v17;
          }
          while (v17);
        }
      }
      else
      {
        int v10 = v39;
        if (v43 != v42)
        {
          uint64_t v28 = *(void *)(*(void *)(v16 + 40) + 16);
          uint64_t v29 = *(void *)(v28 + 128);
          uint64_t v30 = *(void *)(v29 + 16);
          uint64_t v31 = v42 - v43;
          uint64_t v32 = v21 + 224 * v43 + 48;
          do
          {
            if (*(unsigned __int8 *)(v32 + 16) >= 2u && !(*(void *)v32 ^ 1 | *(void *)(v32 + 8)))
            {
              *(void *)uint64_t v32 = 0;
              *(void *)(v32 + 8) = 0;
              *(unsigned char *)(v32 + 16) = 2;
            }
            if (!v30
              || (unint64_t v33 = sub_1B62C1A30((uint64_t)&type metadata for LastFrameWorldTransform), (v34 & 1) == 0)
              || *(ValueMetadata **)(*(void *)(v28 + 24) + 16 * *(void *)(*(void *)(v29 + 56) + 8 * v33) + 32) != &type metadata for LastFrameWorldTransform)
            {
              *(unsigned char *)(v32 + 49) = 0;
            }
            v32 += 224;
            --v31;
          }
          while (v31);
        }
      }
      uint64_t v12 = v44;
      sub_1B6345178(v8, (unsigned __int16 **)v55, (uint64_t)v59);
      sub_1B634507C((char *)v16);
      uint64_t v9 = v40;
      ecs_stack_allocator_pop_snapshot(v40);
      if (v10)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
      }
      swift_release();
      ++v11;
    }
    while (v11 != v41);
    sub_1B62CA064((uint64_t)v45);
    sub_1B632F220(v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v45);
  }
  return sub_1B632F220(v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void *sub_1B6CC0858(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v447 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = v2 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v285 = qword_1EB997A18;
  if (v6) {
    int v7 = 0;
  }
  else {
    int v7 = v3;
  }
  int v13 = v7;
  int v286 = v7;
  char v287 = v6 >> 31;
  uint64_t v288 = 1;
  char v289 = 2;
  uint64_t v290 = 0;
  swift_retain();
  sub_1B6A7203C(1, (uint64_t)v14);
  swift_release();
  v68[0] = v14[0];
  v68[1] = v14[1];
  uint64_t v69 = v15;
  sub_1B62C9DA8(v5, (uint64_t)v68, 0x200000000, v291);
  sub_1B62D8068((uint64_t)v291, (uint64_t)&v436, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v436)
  {
    uint64_t v274 = v436;
    int v275 = v437;
    char v276 = v438;
    uint64_t v277 = v439;
    char v278 = v440;
    uint64_t v279 = v441;
    uint64_t v280 = v442;
    long long v281 = v443;
    long long v282 = v444;
    uint64_t v283 = v445;
    uint64_t v284 = v446;
    sub_1B6D86E38((uint64_t)&v274);
    sub_1B632F220(v291, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v268 = qword_1EB997A18;
  int v269 = v13;
  char v270 = v6 >> 31;
  uint64_t v271 = 1;
  char v272 = 2;
  uint64_t v273 = 0;
  swift_retain();
  sub_1B62A1E28(3, (uint64_t)v16);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = &type metadata for TextureRequireCPURepresentation;
  *(void *)(v8 + 40) = &off_1F0F9AED8;
  sub_1B62AD184(v17);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v16);
  v66[0] = v17[0];
  v66[1] = v17[1];
  uint64_t v67 = v18;
  sub_1B62C9DA8(v5, (uint64_t)v66, 0x200000000, v292);
  sub_1B62D8068((uint64_t)v292, (uint64_t)&v425, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v425)
  {
    uint64_t v257 = v425;
    int v258 = v426;
    char v259 = v427;
    uint64_t v260 = v428;
    char v261 = v429;
    uint64_t v262 = v430;
    uint64_t v263 = v431;
    long long v264 = v432;
    long long v265 = v433;
    uint64_t v266 = v434;
    uint64_t v267 = v435;
    sub_1B6D86E64((uint64_t)&v257);
    sub_1B632F220(v292, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v251 = qword_1EB997A18;
  int v252 = v13;
  char v253 = v6 >> 31;
  uint64_t v254 = 1;
  char v255 = 2;
  uint64_t v256 = 0;
  swift_retain();
  sub_1B63A7CA0(3, (uint64_t)v19);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = &type metadata for TextureRequireCPURepresentation;
  *(void *)(v9 + 40) = &off_1F0F9AED8;
  sub_1B62AD184(v20);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v19);
  v64[0] = v20[0];
  v64[1] = v20[1];
  uint64_t v65 = v21;
  sub_1B62C9DA8(v5, (uint64_t)v64, 0x200000000, v293);
  sub_1B62D8068((uint64_t)v293, (uint64_t)&v414, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v414)
  {
    uint64_t v240 = v414;
    int v241 = v415;
    char v242 = v416;
    uint64_t v243 = v417;
    char v244 = v418;
    uint64_t v245 = v419;
    uint64_t v246 = v420;
    long long v247 = v421;
    long long v248 = v422;
    uint64_t v249 = v423;
    uint64_t v250 = v424;
    sub_1B6D86EBC((uint64_t)&v240);
    sub_1B632F220(v293, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v234 = qword_1EB997A18;
  int v235 = v13;
  char v236 = v6 >> 31;
  uint64_t v237 = 1;
  char v238 = 2;
  uint64_t v239 = 0;
  swift_retain();
  sub_1B63A7688(1, (uint64_t)v22);
  swift_release();
  v62[0] = v22[0];
  v62[1] = v22[1];
  uint64_t v63 = v23;
  sub_1B62C9DA8(v5, (uint64_t)v62, 0x200000000, v294);
  sub_1B62D8068((uint64_t)v294, (uint64_t)&v403, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v403)
  {
    long long v230 = v410;
    uint64_t v223 = v403;
    int v224 = v404;
    char v225 = v405;
    uint64_t v226 = v406;
    char v227 = v407;
    uint64_t v228 = v408;
    uint64_t v229 = v409;
    long long v231 = v411;
    uint64_t v232 = v412;
    uint64_t v233 = v413;
    sub_1B6D86F14((uint64_t)&v223);
    sub_1B632F220(v294, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v217 = qword_1EB997A18;
  int v218 = v13;
  char v219 = v6 >> 31;
  uint64_t v220 = 1;
  char v221 = 2;
  uint64_t v222 = 0;
  swift_retain();
  sub_1B62A1E28(3, (uint64_t)v24);
  swift_release();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B6E77050;
  *(void *)(v10 + 32) = &type metadata for TextureRequireGPURepresentation;
  *(void *)(v10 + 40) = &off_1F0F9AFB0;
  sub_1B62AD184(v25);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v24);
  v60[0] = v25[0];
  v60[1] = v25[1];
  uint64_t v61 = v26;
  sub_1B62C9DA8(v5, (uint64_t)v60, 0x200000000, v295);
  sub_1B62D8068((uint64_t)v295, (uint64_t)&v392, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v392)
  {
    uint64_t v206 = v392;
    int v207 = v393;
    char v208 = v394;
    uint64_t v209 = v395;
    char v210 = v396;
    uint64_t v211 = v397;
    uint64_t v212 = v398;
    long long v213 = v399;
    long long v214 = v400;
    uint64_t v215 = v401;
    uint64_t v216 = v402;
    sub_1B6D86E90((uint64_t)&v206);
    sub_1B632F220(v295, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v200 = qword_1EB997A18;
  int v201 = v13;
  char v202 = v6 >> 31;
  uint64_t v203 = 1;
  char v204 = 2;
  uint64_t v205 = 0;
  swift_retain();
  sub_1B63A7CA0(3, (uint64_t)v27);
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E77050;
  *(void *)(v11 + 32) = &type metadata for TextureRequireGPURepresentation;
  *(void *)(v11 + 40) = &off_1F0F9AFB0;
  sub_1B62AD184(v28);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v27);
  v58[0] = v28[0];
  v58[1] = v28[1];
  uint64_t v59 = v29;
  sub_1B62C9DA8(v5, (uint64_t)v58, 0x200000000, v296);
  sub_1B62D8068((uint64_t)v296, (uint64_t)&v381, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v381)
  {
    long long v196 = v388;
    uint64_t v189 = v381;
    int v190 = v382;
    char v191 = v383;
    uint64_t v192 = v384;
    char v193 = v385;
    uint64_t v194 = v386;
    uint64_t v195 = v387;
    long long v197 = v389;
    uint64_t v198 = v390;
    uint64_t v199 = v391;
    sub_1B6D86EE8((uint64_t)&v189);
    sub_1B632F220(v296, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v183 = qword_1EB997A18;
  int v184 = v13;
  char v185 = v6 >> 31;
  uint64_t v186 = 1;
  char v187 = 2;
  uint64_t v188 = 0;
  swift_retain();
  sub_1B6A72244(1, (uint64_t)v30);
  swift_release();
  v56[0] = v30[0];
  v56[1] = v30[1];
  uint64_t v57 = v31;
  sub_1B62C9DA8(v5, (uint64_t)v56, 0x200000000, v297);
  sub_1B62D8068((uint64_t)v297, (uint64_t)&v370, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v370)
  {
    uint64_t v172 = v370;
    int v173 = v371;
    char v174 = v372;
    uint64_t v175 = v373;
    char v176 = v374;
    uint64_t v177 = v375;
    uint64_t v178 = v376;
    long long v179 = v377;
    long long v180 = v378;
    uint64_t v181 = v379;
    uint64_t v182 = v380;
    sub_1B6D86F40((uint64_t)&v172);
    sub_1B632F220(v297, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v166 = qword_1EB997A18;
  int v167 = v13;
  char v168 = v6 >> 31;
  uint64_t v169 = 1;
  char v170 = 2;
  uint64_t v171 = 0;
  swift_retain();
  sub_1B6A7244C(1, (uint64_t)v32);
  swift_release();
  v54[0] = v32[0];
  v54[1] = v32[1];
  uint64_t v55 = v33;
  sub_1B62C9DA8(v5, (uint64_t)v54, 0x200000000, v298);
  sub_1B62D8068((uint64_t)v298, (uint64_t)&v359, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v359)
  {
    long long v162 = v366;
    uint64_t v155 = v359;
    int v156 = v360;
    char v157 = v361;
    uint64_t v158 = v362;
    char v159 = v363;
    uint64_t v160 = v364;
    uint64_t v161 = v365;
    long long v163 = v367;
    uint64_t v164 = v368;
    uint64_t v165 = v369;
    sub_1B6D86F6C((uint64_t)&v155);
    sub_1B632F220(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v149 = qword_1EB997A18;
  int v150 = v13;
  char v151 = v6 >> 31;
  uint64_t v152 = 1;
  char v153 = 2;
  uint64_t v154 = 0;
  swift_retain();
  sub_1B6A72654(1, (uint64_t)v34);
  swift_release();
  v52[0] = v34[0];
  v52[1] = v34[1];
  uint64_t v53 = v35;
  sub_1B62C9DA8(v5, (uint64_t)v52, 0x200000000, v299);
  sub_1B62D8068((uint64_t)v299, (uint64_t)&v348, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v348)
  {
    uint64_t v138 = v348;
    int v139 = v349;
    char v140 = v350;
    uint64_t v141 = v351;
    char v142 = v352;
    uint64_t v143 = v353;
    uint64_t v144 = v354;
    long long v145 = v355;
    long long v146 = v356;
    uint64_t v147 = v357;
    uint64_t v148 = v358;
    sub_1B6D86F98((uint64_t)&v138);
    sub_1B632F220(v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v132 = qword_1EB997A18;
  int v133 = v13;
  char v134 = v6 >> 31;
  uint64_t v135 = 1;
  char v136 = 2;
  uint64_t v137 = 0;
  swift_retain();
  sub_1B6A7285C(1, (uint64_t)v36);
  swift_release();
  v50[0] = v36[0];
  v50[1] = v36[1];
  uint64_t v51 = v37;
  sub_1B62C9DA8(v5, (uint64_t)v50, 0x200000000, v300);
  sub_1B62D8068((uint64_t)v300, (uint64_t)&v337, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v337)
  {
    long long v128 = v344;
    uint64_t v121 = v337;
    int v122 = v338;
    char v123 = v339;
    uint64_t v124 = v340;
    char v125 = v341;
    uint64_t v126 = v342;
    uint64_t v127 = v343;
    long long v129 = v345;
    uint64_t v130 = v346;
    uint64_t v131 = v347;
    sub_1B6D86FC4((uint64_t)&v121);
    sub_1B632F220(v300, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v115 = qword_1EB997A18;
  int v116 = v13;
  char v117 = v6 >> 31;
  uint64_t v118 = 1;
  char v119 = 2;
  uint64_t v120 = 0;
  swift_retain();
  sub_1B6A72A64(1, (uint64_t)v38);
  swift_release();
  v48[0] = v38[0];
  v48[1] = v38[1];
  uint64_t v49 = v39;
  sub_1B62C9DA8(v5, (uint64_t)v48, 0x200000000, v301);
  sub_1B62D8068((uint64_t)v301, (uint64_t)&v326, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v326)
  {
    uint64_t v104 = v326;
    int v105 = v327;
    char v106 = v328;
    uint64_t v107 = v329;
    char v108 = v330;
    uint64_t v109 = v331;
    uint64_t v110 = v332;
    long long v111 = v333;
    long long v112 = v334;
    uint64_t v113 = v335;
    uint64_t v114 = v336;
    sub_1B6D86FF0((uint64_t)&v104);
    sub_1B632F220(v301, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v98 = qword_1EB997A18;
  int v99 = v13;
  char v100 = v6 >> 31;
  uint64_t v101 = 1;
  char v102 = 2;
  uint64_t v103 = 0;
  swift_retain();
  sub_1B6A72C6C(1, (uint64_t)v40);
  swift_release();
  v46[0] = v40[0];
  v46[1] = v40[1];
  uint64_t v47 = v41;
  sub_1B62C9DA8(v5, (uint64_t)v46, 0x200000000, v302);
  sub_1B62D8068((uint64_t)v302, (uint64_t)&v315, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v315)
  {
    long long v94 = v322;
    uint64_t v87 = v315;
    int v88 = v316;
    char v89 = v317;
    uint64_t v90 = v318;
    char v91 = v319;
    uint64_t v92 = v320;
    uint64_t v93 = v321;
    long long v95 = v323;
    uint64_t v96 = v324;
    uint64_t v97 = v325;
    sub_1B6D8701C((uint64_t)&v87);
    sub_1B632F220(v302, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v81 = qword_1EB997A18;
  int v82 = v13;
  char v83 = v6 >> 31;
  uint64_t v84 = 1;
  char v85 = 2;
  uint64_t v86 = 0;
  swift_retain();
  sub_1B6A72E74(1, (uint64_t)v42);
  swift_release();
  v44[0] = v42[0];
  v44[1] = v42[1];
  uint64_t v45 = v43;
  sub_1B62C9DA8(v5, (uint64_t)v44, 0x200000000, v303);
  sub_1B62D8068((uint64_t)v303, (uint64_t)&v304, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v304)
  {
    uint64_t v70 = v304;
    int v71 = v305;
    char v72 = v306;
    uint64_t v73 = v307;
    char v74 = v308;
    uint64_t v75 = v309;
    uint64_t v76 = v310;
    long long v77 = v311;
    long long v78 = v312;
    uint64_t v79 = v313;
    uint64_t v80 = v314;
    sub_1B6D87048((uint64_t)&v70);
    sub_1B62CA064((uint64_t)v42);
    sub_1B62CA064((uint64_t)v40);
    sub_1B62CA064((uint64_t)v38);
    sub_1B62CA064((uint64_t)v36);
    sub_1B62CA064((uint64_t)v34);
    sub_1B62CA064((uint64_t)v32);
    sub_1B62CA064((uint64_t)v30);
    sub_1B62CA064((uint64_t)v28);
    sub_1B62CA064((uint64_t)v25);
    sub_1B62CA064((uint64_t)v22);
    sub_1B62CA064((uint64_t)v20);
    sub_1B62CA064((uint64_t)v17);
    sub_1B62CA064((uint64_t)v14);
    return sub_1B632F220(v303, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v42);
    sub_1B62CA064((uint64_t)v40);
    sub_1B62CA064((uint64_t)v38);
    sub_1B62CA064((uint64_t)v36);
    sub_1B62CA064((uint64_t)v34);
    sub_1B62CA064((uint64_t)v32);
    sub_1B62CA064((uint64_t)v30);
    sub_1B62CA064((uint64_t)v28);
    sub_1B62CA064((uint64_t)v25);
    sub_1B62CA064((uint64_t)v22);
    sub_1B62CA064((uint64_t)v20);
    sub_1B62CA064((uint64_t)v17);
    return (void *)sub_1B62CA064((uint64_t)v14);
  }
}

uint64_t sub_1B6CC19C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v218 = *MEMORY[0x1E4F143B8];
  uint64_t v150 = result;
  if (*(unsigned char *)(result + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) == 1 && a5 >= 2024)
  {
    int v5 = a4;
    unint64_t v6 = a4 & 0x100000000;
    sub_1B62F7B88(0, (unint64_t *)&qword_1EB980BA0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 32) = &type metadata for ParticlePlaneCollider;
    uint64_t v144 = v7 + 32;
    *(void *)(v7 + 40) = &off_1F0F895A0;
    *(void *)(v7 + 48) = &type metadata for ParticleSphereCollider;
    *(void *)(v7 + 56) = &off_1F0F8D908;
    *(void *)(v7 + 64) = &type metadata for ParticleBoxCollider;
    *(void *)(v7 + 72) = &off_1F0F7D338;
    *(void *)(v7 + 80) = &type metadata for ParticleCylinderCollider;
    *(void *)(v7 + 88) = &off_1F0F92BD0;
    *(void *)(v7 + 96) = &type metadata for ParticleSDFCollider;
    *(void *)(v7 + 104) = &off_1F0F7DEA0;
    *(void *)(v7 + 112) = &type metadata for ParticleMeshCollider;
    *(void *)(v7 + 120) = &off_1F0F81550;
    *(void *)(v7 + 128) = &type metadata for EmitterDescription;
    *(void *)(v7 + 136) = &off_1F0F76610;
    *(void *)(v7 + 144) = &type metadata for KillShape;
    *(_OWORD *)(v7 + 16) = xmmword_1B6EB4810;
    *(void *)(v7 + 152) = &off_1F0FA8978;
    *(void *)(v7 + 160) = &type metadata for ForceField;
    *(void *)(v7 + 168) = &off_1F0F525A8;
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    if (v6) {
      int v8 = 0;
    }
    else {
      int v8 = v5;
    }
    int v149 = v8;
    sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
    uint64_t v9 = 0;
    unint64_t v148 = v6 >> 31;
    do
    {
      uint64_t v145 = v9;
      uint64_t v10 = (uint64_t *)(v144 + 16 * v9);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      uint64_t v13 = qword_1EB997A18;
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1B6E76B30;
      uint64_t v15 = *(void *)(v11 + 8);
      *(void *)(v14 + 32) = v12;
      *(void *)(v14 + 40) = v15;
      *(void *)(v14 + 48) = &type metadata for Position;
      *(void *)(v14 + 56) = &off_1F0FA6F58;
      uint64_t v181 = v13;
      int v182 = v149;
      char v183 = v148;
      uint64_t v184 = 1;
      char v185 = 2;
      uint64_t v186 = 0;
      swift_retain();
      sub_1B6CA5FE8(v14, (uint64_t)v152);
      swift_setDeallocating();
      swift_deallocClassInstance();
      swift_release();
      sub_1B62C9DA8(v150, (uint64_t)v152, 0x200000000, v193);
      sub_1B62D8068((uint64_t)v193, (uint64_t)v214, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      uint64_t v147 = v12;
      uint64_t v146 = v15;
      if (v214[0])
      {
        if (v217 >= 1 && v216)
        {
          uint64_t v16 = v215;
          uint64_t v17 = v215 + 48 * v216;
          while (1)
          {
            uint64_t v18 = *(void *)(v16 + 40);
            uint64_t v19 = *(os_unfair_lock_s **)(v18 + 376);
            swift_retain();
            os_unfair_lock_lock(v19);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
            int v20 = *(_DWORD *)(v18 + 24);
            swift_retain();
            uint64_t v192 = 0;
            long long v190 = 0u;
            long long v191 = 0u;
            uint64_t v189 = 0;
            long long v187 = 0u;
            long long v188 = 0u;
            signed int v21 = sub_1B637F628(v20, 0, 0, (uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, (uint64_t)&v190, (uint64_t)&v187);
            swift_release();
            sub_1B62E2EA0((uint64_t)&v187, (uint64_t (*)(void))sub_1B63864B4);
            sub_1B62E2EA0((uint64_t)&v190, (uint64_t (*)(void))sub_1B63864B4);
            uint64_t v22 = *(void **)(*(void *)(*(void *)(v18 + 16) + 80) + 8 * v21 + 32);
            uint64_t v23 = *(void **)(v18 + 40);
            uint64_t v24 = v22[4];
            uint64_t v25 = v22[5];
            uint64_t v26 = v22[8];
            uint64_t v27 = v23[4];
            uint64_t v28 = v23[5];
            uint64_t v29 = v23[8];
            swift_retain();
            if (v26 != v29) {
              goto LABEL_34;
            }
            uint64_t v30 = *(void *)(v25 + 16);
            if (v30 != *(void *)(v28 + 16)) {
              goto LABEL_34;
            }
            if (v30 && v25 != v28) {
              break;
            }
LABEL_22:
            uint64_t v32 = *(void *)(v24 + 16);
            if (v32 != *(void *)(v27 + 16)) {
              goto LABEL_34;
            }
            if (v32 && v24 != v27)
            {
              uint64_t v33 = (void *)(v24 + 32);
              char v34 = (void *)(v27 + 32);
              while (*v33 == *v34 && v33[3] == v34[3])
              {
                v34 += 5;
                v33 += 5;
                if (!--v32) {
                  goto LABEL_29;
                }
              }
LABEL_34:
              swift_release();
              uint64_t v37 = *(void *)(v18 + 232);
              uint64_t v38 = *(void *)(v18 + 240);
              char v39 = *(unsigned char *)(v18 + 120);
              uint64_t v40 = *(unsigned int *)(v18 + 28);
              LOBYTE(v190) = *(unsigned char *)(v18 + 32);
              sub_1B628EEF4(v37, v38, v21, v39, v40 | ((unint64_t)v190 << 32));
              goto LABEL_35;
            }
LABEL_29:
            swift_release();
            sub_1B66603E4(v21);
LABEL_35:
            v16 += 48;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
            swift_release();
            if (v16 == v17) {
              goto LABEL_36;
            }
          }
          uint64_t v35 = (void *)(v25 + 32);
          int v36 = (void *)(v28 + 32);
          while (*v35 == *v36 && v35[3] == v36[3])
          {
            v36 += 5;
            v35 += 5;
            if (!--v30) {
              goto LABEL_22;
            }
          }
          goto LABEL_34;
        }
LABEL_36:
        sub_1B632F220(v193, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v12 = v147;
        uint64_t v15 = v146;
      }
      uint64_t v41 = qword_1EB997A18;
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1B6E76B30;
      *(void *)(v42 + 32) = v12;
      *(void *)(v42 + 40) = v15;
      *(void *)(v42 + 48) = &type metadata for Orientation;
      *(void *)(v42 + 56) = &off_1F0F56120;
      uint64_t v175 = v41;
      int v176 = v149;
      char v177 = v148;
      uint64_t v178 = 1;
      char v179 = 2;
      uint64_t v180 = 0;
      swift_retain();
      sub_1B6CA5FE8(v42, (uint64_t)v153);
      swift_setDeallocating();
      swift_deallocClassInstance();
      swift_release();
      sub_1B62C9DA8(v150, (uint64_t)v153, 0x200000000, v194);
      sub_1B62D8068((uint64_t)v194, (uint64_t)v210, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (v210[0])
      {
        if (v213 >= 1 && v212)
        {
          uint64_t v43 = v211;
          uint64_t v44 = v211 + 48 * v212;
          while (1)
          {
            uint64_t v45 = *(void *)(v43 + 40);
            uint64_t v46 = *(os_unfair_lock_s **)(v45 + 376);
            swift_retain();
            os_unfair_lock_lock(v46);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v45 + 344));
            LODWORD(v46) = *(_DWORD *)(v45 + 24);
            swift_retain();
            uint64_t v192 = 0;
            long long v190 = 0u;
            long long v191 = 0u;
            uint64_t v189 = 0;
            long long v187 = 0u;
            long long v188 = 0u;
            signed int v47 = sub_1B637F628((int)v46, 0, 0, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, (uint64_t)&v190, (uint64_t)&v187);
            swift_release();
            sub_1B62E2EA0((uint64_t)&v187, (uint64_t (*)(void))sub_1B63864B4);
            sub_1B62E2EA0((uint64_t)&v190, (uint64_t (*)(void))sub_1B63864B4);
            uint64_t v48 = *(void **)(*(void *)(*(void *)(v45 + 16) + 80) + 8 * v47 + 32);
            uint64_t v49 = *(void **)(v45 + 40);
            uint64_t v51 = v48[4];
            uint64_t v50 = v48[5];
            uint64_t v52 = v48[8];
            uint64_t v53 = v49[4];
            uint64_t v54 = v49[5];
            uint64_t v55 = v49[8];
            swift_retain();
            if (v52 != v55) {
              goto LABEL_60;
            }
            uint64_t v56 = *(void *)(v50 + 16);
            if (v56 != *(void *)(v54 + 16)) {
              goto LABEL_60;
            }
            if (v56 && v50 != v54) {
              break;
            }
LABEL_48:
            uint64_t v58 = *(void *)(v51 + 16);
            if (v58 != *(void *)(v53 + 16)) {
              goto LABEL_60;
            }
            if (v58 && v51 != v53)
            {
              uint64_t v59 = (void *)(v51 + 32);
              uint64_t v60 = (void *)(v53 + 32);
              while (*v59 == *v60 && v59[3] == v60[3])
              {
                v60 += 5;
                v59 += 5;
                if (!--v58) {
                  goto LABEL_55;
                }
              }
LABEL_60:
              swift_release();
              uint64_t v63 = *(void *)(v45 + 232);
              uint64_t v64 = *(void *)(v45 + 240);
              char v65 = *(unsigned char *)(v45 + 120);
              uint64_t v66 = *(unsigned int *)(v45 + 28);
              LOBYTE(v190) = *(unsigned char *)(v45 + 32);
              sub_1B628EEF4(v63, v64, v47, v65, v66 | ((unint64_t)v190 << 32));
              goto LABEL_61;
            }
LABEL_55:
            swift_release();
            sub_1B66603E4(v47);
LABEL_61:
            v43 += 48;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 376));
            swift_release();
            if (v43 == v44) {
              goto LABEL_62;
            }
          }
          uint64_t v61 = (void *)(v50 + 32);
          char v62 = (void *)(v54 + 32);
          while (*v61 == *v62 && v61[3] == v62[3])
          {
            v62 += 5;
            v61 += 5;
            if (!--v56) {
              goto LABEL_48;
            }
          }
          goto LABEL_60;
        }
LABEL_62:
        sub_1B632F220(v194, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v12 = v147;
        uint64_t v15 = v146;
      }
      uint64_t v67 = qword_1EB997A18;
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_1B6E76B30;
      *(void *)(v68 + 32) = v12;
      *(void *)(v68 + 40) = v15;
      *(void *)(v68 + 48) = &type metadata for Scale3;
      *(void *)(v68 + 56) = &off_1F0FA1118;
      uint64_t v169 = v67;
      int v170 = v149;
      char v171 = v148;
      uint64_t v172 = 1;
      char v173 = 2;
      uint64_t v174 = 0;
      swift_retain();
      sub_1B6CA5FE8(v68, (uint64_t)v154);
      swift_setDeallocating();
      swift_deallocClassInstance();
      swift_release();
      sub_1B62C9DA8(v150, (uint64_t)v154, 0x200000000, v195);
      sub_1B62D8068((uint64_t)v195, (uint64_t)v206, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (v206[0])
      {
        if (v209 >= 1 && v208)
        {
          uint64_t v69 = v207;
          uint64_t v70 = v207 + 48 * v208;
          while (1)
          {
            uint64_t v71 = *(void *)(v69 + 40);
            char v72 = *(os_unfair_lock_s **)(v71 + 376);
            swift_retain();
            os_unfair_lock_lock(v72);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v71 + 344));
            LODWORD(v72) = *(_DWORD *)(v71 + 24);
            swift_retain();
            uint64_t v192 = 0;
            long long v190 = 0u;
            long long v191 = 0u;
            uint64_t v189 = 0;
            long long v187 = 0u;
            long long v188 = 0u;
            signed int v73 = sub_1B637F628((int)v72, 0, 0, (uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA10A0, (uint64_t)&v190, (uint64_t)&v187);
            swift_release();
            sub_1B62E2EA0((uint64_t)&v187, (uint64_t (*)(void))sub_1B63864B4);
            sub_1B62E2EA0((uint64_t)&v190, (uint64_t (*)(void))sub_1B63864B4);
            char v74 = *(void **)(*(void *)(*(void *)(v71 + 16) + 80) + 8 * v73 + 32);
            uint64_t v75 = *(void **)(v71 + 40);
            uint64_t v77 = v74[4];
            uint64_t v76 = v74[5];
            uint64_t v78 = v74[8];
            uint64_t v79 = v75[4];
            uint64_t v80 = v75[5];
            uint64_t v81 = v75[8];
            swift_retain();
            if (v78 != v81) {
              goto LABEL_86;
            }
            uint64_t v82 = *(void *)(v76 + 16);
            if (v82 != *(void *)(v80 + 16)) {
              goto LABEL_86;
            }
            if (v82 && v76 != v80) {
              break;
            }
LABEL_74:
            uint64_t v84 = *(void *)(v77 + 16);
            if (v84 != *(void *)(v79 + 16)) {
              goto LABEL_86;
            }
            if (v84 && v77 != v79)
            {
              char v85 = (void *)(v77 + 32);
              uint64_t v86 = (void *)(v79 + 32);
              while (*v85 == *v86 && v85[3] == v86[3])
              {
                v86 += 5;
                v85 += 5;
                if (!--v84) {
                  goto LABEL_81;
                }
              }
LABEL_86:
              swift_release();
              uint64_t v89 = *(void *)(v71 + 232);
              uint64_t v90 = *(void *)(v71 + 240);
              char v91 = *(unsigned char *)(v71 + 120);
              uint64_t v92 = *(unsigned int *)(v71 + 28);
              LOBYTE(v190) = *(unsigned char *)(v71 + 32);
              sub_1B628EEF4(v89, v90, v73, v91, v92 | ((unint64_t)v190 << 32));
              goto LABEL_87;
            }
LABEL_81:
            swift_release();
            sub_1B66603E4(v73);
LABEL_87:
            v69 += 48;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 376));
            swift_release();
            if (v69 == v70) {
              goto LABEL_88;
            }
          }
          uint64_t v87 = (void *)(v76 + 32);
          int v88 = (void *)(v80 + 32);
          while (*v87 == *v88 && v87[3] == v88[3])
          {
            v88 += 5;
            v87 += 5;
            if (!--v82) {
              goto LABEL_74;
            }
          }
          goto LABEL_86;
        }
LABEL_88:
        sub_1B632F220(v195, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v12 = v147;
        uint64_t v15 = v146;
      }
      uint64_t v93 = qword_1EB997A18;
      uint64_t v94 = swift_allocObject();
      *(_OWORD *)(v94 + 16) = xmmword_1B6E76B30;
      *(void *)(v94 + 32) = v12;
      *(void *)(v94 + 40) = v15;
      *(void *)(v94 + 48) = &type metadata for Scale2;
      *(void *)(v94 + 56) = &off_1F0FA0FB0;
      uint64_t v163 = v93;
      int v164 = v149;
      char v165 = v148;
      uint64_t v166 = 1;
      char v167 = 2;
      uint64_t v168 = 0;
      swift_retain();
      sub_1B6CA5FE8(v94, (uint64_t)v155);
      swift_setDeallocating();
      swift_deallocClassInstance();
      swift_release();
      sub_1B62C9DA8(v150, (uint64_t)v155, 0x200000000, v196);
      sub_1B62D8068((uint64_t)v196, (uint64_t)v202, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (v202[0])
      {
        if (v205 >= 1 && v204)
        {
          uint64_t v95 = v203;
          uint64_t v96 = v203 + 48 * v204;
          while (1)
          {
            uint64_t v97 = *(void *)(v95 + 40);
            uint64_t v98 = *(os_unfair_lock_s **)(v97 + 376);
            swift_retain();
            os_unfair_lock_lock(v98);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v97 + 344));
            LODWORD(v98) = *(_DWORD *)(v97 + 24);
            swift_retain();
            uint64_t v192 = 0;
            long long v190 = 0u;
            long long v191 = 0u;
            uint64_t v189 = 0;
            long long v187 = 0u;
            long long v188 = 0u;
            signed int v99 = sub_1B637F628((int)v98, 0, 0, (uint64_t)&type metadata for Scale2, (uint64_t)&off_1F0FA0F38, (uint64_t)&v190, (uint64_t)&v187);
            swift_release();
            sub_1B62E2EA0((uint64_t)&v187, (uint64_t (*)(void))sub_1B63864B4);
            sub_1B62E2EA0((uint64_t)&v190, (uint64_t (*)(void))sub_1B63864B4);
            char v100 = *(void **)(*(void *)(*(void *)(v97 + 16) + 80) + 8 * v99 + 32);
            uint64_t v101 = *(void **)(v97 + 40);
            uint64_t v103 = v100[4];
            uint64_t v102 = v100[5];
            uint64_t v104 = v100[8];
            uint64_t v105 = v101[4];
            uint64_t v106 = v101[5];
            uint64_t v107 = v101[8];
            swift_retain();
            if (v104 != v107) {
              goto LABEL_112;
            }
            uint64_t v108 = *(void *)(v102 + 16);
            if (v108 != *(void *)(v106 + 16)) {
              goto LABEL_112;
            }
            if (v108 && v102 != v106) {
              break;
            }
LABEL_100:
            uint64_t v110 = *(void *)(v103 + 16);
            if (v110 != *(void *)(v105 + 16)) {
              goto LABEL_112;
            }
            if (v110 && v103 != v105)
            {
              long long v111 = (void *)(v103 + 32);
              long long v112 = (void *)(v105 + 32);
              while (*v111 == *v112 && v111[3] == v112[3])
              {
                v112 += 5;
                v111 += 5;
                if (!--v110) {
                  goto LABEL_107;
                }
              }
LABEL_112:
              swift_release();
              uint64_t v115 = *(void *)(v97 + 232);
              uint64_t v116 = *(void *)(v97 + 240);
              char v117 = *(unsigned char *)(v97 + 120);
              uint64_t v118 = *(unsigned int *)(v97 + 28);
              LOBYTE(v190) = *(unsigned char *)(v97 + 32);
              sub_1B628EEF4(v115, v116, v99, v117, v118 | ((unint64_t)v190 << 32));
              goto LABEL_113;
            }
LABEL_107:
            swift_release();
            sub_1B66603E4(v99);
LABEL_113:
            v95 += 48;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 376));
            swift_release();
            if (v95 == v96) {
              goto LABEL_114;
            }
          }
          uint64_t v113 = (void *)(v102 + 32);
          uint64_t v114 = (void *)(v106 + 32);
          while (*v113 == *v114 && v113[3] == v114[3])
          {
            v114 += 5;
            v113 += 5;
            if (!--v108) {
              goto LABEL_100;
            }
          }
          goto LABEL_112;
        }
LABEL_114:
        sub_1B632F220(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v12 = v147;
        uint64_t v15 = v146;
      }
      uint64_t v119 = qword_1EB997A18;
      uint64_t v120 = swift_allocObject();
      *(_OWORD *)(v120 + 16) = xmmword_1B6E76B30;
      *(void *)(v120 + 32) = v12;
      *(void *)(v120 + 40) = v15;
      *(void *)(v120 + 48) = &type metadata for Scale1;
      *(void *)(v120 + 56) = &off_1F0FA0E48;
      uint64_t v157 = v119;
      int v158 = v149;
      char v159 = v148;
      uint64_t v160 = 1;
      char v161 = 2;
      uint64_t v162 = 0;
      swift_retain();
      sub_1B6CA5FE8(v120, (uint64_t)v156);
      swift_setDeallocating();
      swift_deallocClassInstance();
      swift_release();
      sub_1B62C9DA8(v150, (uint64_t)v156, 0x200000000, v197);
      sub_1B62D8068((uint64_t)v197, (uint64_t)v198, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (v198[0])
      {
        if (v201 >= 1 && v200)
        {
          uint64_t v121 = v199;
          uint64_t v151 = v199 + 48 * v200;
          while (1)
          {
            uint64_t v122 = *(void *)(v121 + 40);
            char v123 = *(os_unfair_lock_s **)(v122 + 376);
            swift_retain();
            os_unfair_lock_lock(v123);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v122 + 344));
            LODWORD(v123) = *(_DWORD *)(v122 + 24);
            swift_retain();
            uint64_t v192 = 0;
            long long v190 = 0u;
            long long v191 = 0u;
            uint64_t v189 = 0;
            long long v187 = 0u;
            long long v188 = 0u;
            signed int v124 = sub_1B637F628((int)v123, 0, 0, (uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, (uint64_t)&v190, (uint64_t)&v187);
            swift_release();
            sub_1B62E2EA0((uint64_t)&v187, (uint64_t (*)(void))sub_1B63864B4);
            sub_1B62E2EA0((uint64_t)&v190, (uint64_t (*)(void))sub_1B63864B4);
            char v125 = *(void **)(*(void *)(*(void *)(v122 + 16) + 80) + 8 * v124 + 32);
            uint64_t v126 = *(void **)(v122 + 40);
            uint64_t v127 = v125[4];
            uint64_t v128 = v125[5];
            uint64_t v129 = v125[8];
            uint64_t v130 = v126[4];
            uint64_t v131 = v126[5];
            uint64_t v132 = v126[8];
            swift_retain();
            if (v129 != v132) {
              goto LABEL_138;
            }
            uint64_t v133 = *(void *)(v128 + 16);
            if (v133 != *(void *)(v131 + 16)) {
              goto LABEL_138;
            }
            if (v133 && v128 != v131) {
              break;
            }
LABEL_126:
            uint64_t v135 = *(void *)(v127 + 16);
            if (v135 != *(void *)(v130 + 16)) {
              goto LABEL_138;
            }
            if (v135 && v127 != v130)
            {
              char v136 = (void *)(v127 + 32);
              uint64_t v137 = (void *)(v130 + 32);
              while (*v136 == *v137 && v136[3] == v137[3])
              {
                v137 += 5;
                v136 += 5;
                if (!--v135) {
                  goto LABEL_133;
                }
              }
LABEL_138:
              swift_release();
              uint64_t v140 = *(void *)(v122 + 232);
              uint64_t v141 = *(void *)(v122 + 240);
              char v142 = *(unsigned char *)(v122 + 120);
              uint64_t v143 = *(unsigned int *)(v122 + 28);
              LOBYTE(v190) = *(unsigned char *)(v122 + 32);
              sub_1B628EEF4(v140, v141, v124, v142, v143 | ((unint64_t)v190 << 32));
              goto LABEL_139;
            }
LABEL_133:
            swift_release();
            sub_1B66603E4(v124);
LABEL_139:
            v121 += 48;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v122 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v122 + 376));
            swift_release();
            if (v121 == v151) {
              goto LABEL_9;
            }
          }
          uint64_t v138 = (void *)(v128 + 32);
          int v139 = (void *)(v131 + 32);
          while (*v138 == *v139 && v138[3] == v139[3])
          {
            v139 += 5;
            v138 += 5;
            if (!--v133) {
              goto LABEL_126;
            }
          }
          goto LABEL_138;
        }
LABEL_9:
        sub_1B62CA064((uint64_t)v156);
        sub_1B62CA064((uint64_t)v155);
        sub_1B62CA064((uint64_t)v154);
        sub_1B62CA064((uint64_t)v153);
        sub_1B62CA064((uint64_t)v152);
        sub_1B632F220(v197, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      else
      {
        sub_1B62CA064((uint64_t)v156);
        sub_1B62CA064((uint64_t)v155);
        sub_1B62CA064((uint64_t)v154);
        sub_1B62CA064((uint64_t)v153);
        sub_1B62CA064((uint64_t)v152);
      }
      uint64_t v9 = v145 + 1;
    }
    while (v145 != 8);
    swift_setDeallocating();
    return swift_deallocClassInstance();
  }
  return result;
}

void *sub_1B6CC2C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a4 & 0x100000000;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EB997A18;
  if (v6) {
    int v4 = 0;
  }
  unint64_t v8 = v6 >> 31;
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Authoring;
  *(void *)(inited + 40) = &off_1F0FA7FD8;
  *(void *)(inited + 48) = &type metadata for OrthographicCamera;
  *(void *)(inited + 56) = &off_1F0F78798;
  uint64_t v18 = v7;
  int v19 = v4;
  char v20 = v8;
  uint64_t v21 = 1;
  char v22 = 2;
  uint64_t v23 = 0;
  swift_retain();
  sub_1B6CA5FE8(inited, (uint64_t)v11);
  swift_setDeallocating();
  swift_release();
  sub_1B62C9DA8(a1, (uint64_t)v11, 0x200000000, v24);
  sub_1B62D8068((uint64_t)v24, (uint64_t)v25, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v25[0]) {
    return (void *)sub_1B62CA064((uint64_t)v11);
  }
  long long v14 = v25[2];
  long long v15 = v25[3];
  long long v16 = v25[4];
  long long v17 = v25[5];
  long long v12 = v25[0];
  long long v13 = v25[1];
  sub_1B6365460(0);
  sub_1B62CA064((uint64_t)v11);
  return sub_1B632F220(v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void sub_1B6CC2E64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v289 = *MEMORY[0x1E4F143B8];
  uint64_t v234 = sub_1B6E31118();
  uint64_t v228 = *(void *)(v234 - 8);
  MEMORY[0x1F4188790](v234, v4);
  uint64_t v223 = (char *)&v207 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v222 = (char *)&v207 - v8;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v233 = (char *)&v207 - v11;
  double v14 = MEMORY[0x1F4188790](v12, v13);
  uint64_t v232 = (char *)&v207 - v15;
  if (a3)
  {
    id v16 = objc_msgSend(a3, sel_assetRegistry, v14);
    id v17 = objc_msgSend(v16, sel_rootNode);

    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1B69F09B0;
    *(void *)(v18 + 24) = 0;
    long long v282 = sub_1B6B95060;
    uint64_t v283 = v18;
    *(void *)&aBlocuint64_t k = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v281 = sub_1B69F0B50;
    *((void *)&v281 + 1) = &unk_1F0FBA310;
    int v19 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v17, sel_enumerateHierarchyUsingBlock_, v19);

    _Block_release(v19);
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    uint64_t v273 = qword_1EB997A18;
    int v274 = 0;
    char v275 = 2;
    uint64_t v276 = 0;
    char v277 = 2;
    uint64_t v278 = 0;
    swift_retain();
    sub_1B6A6DCF0(1, (uint64_t)v264);
    swift_release();
    char v20 = (char *)objc_msgSend(a3, sel_scene);
    uint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
    swift_retain();

    v271[0] = v264[0];
    v271[1] = v264[1];
    uint64_t v272 = v265;
    sub_1B62C9DA8(v21, (uint64_t)v271, 0x200000000, v279);
    sub_1B62D8068((uint64_t)v279, (uint64_t)&aBlock, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!(void)aBlock)
    {
      swift_release();
      sub_1B62CA064((uint64_t)v264);
      return;
    }
    long long v266 = aBlock;
    long long v267 = v281;
    uint64_t v211 = v283;
    uint64_t v268 = v282;
    uint64_t v23 = v284;
    uint64_t v22 = v285;
    uint64_t v24 = v287;
    uint64_t v215 = v286;
    swift_release();
    if (v24 <= 0 || !v23)
    {
      sub_1B62CA064((uint64_t)v264);
LABEL_182:
      sub_1B632F220(v279, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      return;
    }
    uint64_t v208 = v23;
    int v214 = *(unsigned __int8 *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v213 = v215[4];
    v269[0] = v266;
    v269[1] = v267;
    char v270 = v268;
    uint64_t v209 = v215 + 8;
    char v210 = v215 + 6;
    uint64_t v226 = v228 + 32;
    char v227 = (void (**)(char *, char *, uint64_t))(v228 + 16);
    uint64_t v225 = v228 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v25 = 0;
    uint64_t v237 = 0;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v221 = MEMORY[0x1E4FBC848] + 8;
    while (1)
    {
      uint64_t v212 = v25;
      uint64_t v27 = (unsigned int *)(v211 + 48 * v25);
      unint64_t v28 = *v27;
      uint64_t v219 = v27[1];
      uint64_t v30 = (uint64_t *)*((void *)v27 + 2);
      uint64_t v29 = *((void *)v27 + 3);
      uint64_t v31 = *((void *)v27 + 5);
      uint64_t v217 = *((void *)v27 + 4);
      if (v214)
      {
        uint64_t v32 = *(os_unfair_lock_s **)(v31 + 376);
        swift_retain();
        os_unfair_lock_lock(v32);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v213);
      sub_1B62D8068((uint64_t)v210, (uint64_t)v288, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v33 = *(void *)(*(void *)(*(void *)(*(void *)(v31 + 40) + 16) + 32) + 16);
      char v34 = v215;
      uint64_t v35 = v215[4];
      uint64_t v216 = (char *)v31;
      uint64_t v36 = v33 + 1;
      uint64_t v37 = 48 * (v33 + 1);
      swift_retain();
      v34[6] = ecs_stack_allocator_allocate(v35, v37, 8);
      v34[7] = v36;
      uint64_t v38 = v209;
      v209[1] = 0;
      _OWORD v38[2] = 0;
      *uint64_t v38 = 0;
      swift_release();
      uint64_t v39 = v217;
      uint64_t v218 = sub_1B62C9024((uint64_t)&type metadata for GraphComponent, (uint64_t)&off_1F0F64250, v30, v29, v217, (uint64_t)v34);
      if (v30)
      {
        if (v39)
        {
          uint64_t v40 = 0;
          while (1)
          {
            uint64_t v220 = v40;
            uint64_t v45 = *(void *)(v218 + 40 * v40 + 32);
            uint64_t v248 = sub_1B68C967C(v26);
            uint64_t v249 = v46;
            uint64_t v240 = (__objc2_class **)v45;
            unint64_t v47 = *(void *)(v45 + 24);
            uint64_t v219 = v45 + 24;
            unint64_t v246 = v26;
            long long v247 = (void *)MEMORY[0x1E4FBC868];
            if (v47 >> 62) {
              break;
            }
            uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            if (v48) {
              goto LABEL_24;
            }
LABEL_96:
            swift_bridgeObjectRelease_n();
            unint64_t v127 = v246;
            if (v246 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v43 = sub_1B6E32C18();
              swift_bridgeObjectRelease();
              unint64_t v44 = v127;
              if (!v43) {
                goto LABEL_98;
              }
            }
            else
            {
              unint64_t v44 = v246;
              if (!*(void *)((v246 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_98:
                swift_bridgeObjectRelease();
                goto LABEL_21;
              }
            }
            sub_1B66415C8(v44);
LABEL_21:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v40 = v220 + 1;
            if (v220 + 1 == v217) {
              goto LABEL_16;
            }
          }
          swift_bridgeObjectRetain_n();
          uint64_t v48 = sub_1B6E32C18();
          if (!v48) {
            goto LABEL_96;
          }
LABEL_24:
          unint64_t v49 = 0;
          unint64_t v50 = v47 & 0xC000000000000001;
          unint64_t v224 = v47 + 32;
          unint64_t v230 = v48;
          uint64_t v231 = v47;
          unint64_t v229 = v47 & 0xC000000000000001;
LABEL_28:
          if (v50)
          {
            uint64_t v239 = (__objc2_class **)MEMORY[0x1BA9B4580](v49, v47);
          }
          else
          {
            uint64_t v239 = *(__objc2_class ***)(v224 + 8 * v49);
            swift_retain();
          }
          if (*(void *)(v248 + 16))
          {
            sub_1B62C1A30((uint64_t)v239);
            if (v51)
            {
LABEL_35:
              swift_release();
              goto LABEL_27;
            }
          }
          if (v247[2])
          {
            sub_1B62C1A30((uint64_t)v239);
            if (v52) {
              goto LABEL_35;
            }
            unint64_t v235 = v49;
          }
          else
          {
            unint64_t v235 = v49;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v54 = (uint64_t)v247;
          *(void *)&long long v241 = v247;
          long long v247 = (void *)0x8000000000000000;
          uint64_t v55 = v239;
          unint64_t v56 = sub_1B62C1A30((uint64_t)v239);
          char v58 = v57;
          uint64_t v59 = *(void *)(v54 + 16) + ((v57 & 1) == 0);
          if (*(void *)(v54 + 24) >= v59)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1B6ACC5B8();
            }
          }
          else
          {
            sub_1B6AB6D08(v59, isUniquelyReferenced_nonNull_native);
            unint64_t v60 = sub_1B62C1A30((uint64_t)v55);
            if ((v58 & 1) != (v61 & 1)) {
              goto LABEL_186;
            }
            unint64_t v56 = v60;
          }
          unint64_t v62 = MEMORY[0x1E4FBC860];
          uint64_t v63 = v237;
          uint64_t v64 = (void *)v241;
          if (v58)
          {
            *(unsigned char *)(*(void *)(v241 + 56) + v56) = 1;
            char v65 = v239;
          }
          else
          {
            *(void *)(v241 + 8 * (v56 >> 6) + 64) |= 1 << v56;
            char v65 = v239;
            *(void *)(v64[6] + 8 * v56) = v239;
            *(unsigned char *)(v64[7] + v56) = 1;
            ++v64[2];
          }
          long long v247 = v64;
          swift_bridgeObjectRelease();
          info = (*(__objc2_class **)((char *)v65 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw))->isa[3].info;
          uint64_t v67 = swift_retain();
          ((void (*)(void *__return_ptr, uint64_t))info)(v250, v67);
          uint64_t v256 = v250[1];
          uint64_t v257 = v250[0];
          sub_1B62D8C3C((uint64_t)&v256);
          uint64_t v255 = v250[2];
          sub_1B62D8C3C((uint64_t)&v255);
          uint64_t v254 = v250[3];
          sub_1B62D8C3C((uint64_t)&v254);
          uint64_t v253 = v250[4];
          sub_1B62D8C3C((uint64_t)&v253);
          uint64_t v252 = v250[5];
          sub_1B62D8C3C((uint64_t)&v252);
          unint64_t v68 = *(void *)(v257 + 16);
          sub_1B62D8C3C((uint64_t)&v257);
          uint64_t v236 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
          unint64_t cache = (unint64_t)(*(__objc2_class **)((char *)v65 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs))->cache;
          if (cache <= v68) {
            unint64_t cache = v68;
          }
          if (!cache)
          {
            unint64_t v74 = v62;
            uint64_t v83 = *(void *)(v62 + 16);
            if (!v83) {
              goto LABEL_66;
            }
LABEL_61:
            uint64_t v84 = 32;
            while (1)
            {
              if (*(void *)(v74 + v84))
              {
                uint64_t v85 = swift_retain();
                sub_1B68AD6B0(v85, 1, 0x1000000000000000uLL, 0, v62, (uint64_t)sub_1B6CC6E5C, 0, (uint64_t *)&v247, (uint64_t)&v248, (uint64_t)&v246);
                if (v63) {
                  goto LABEL_184;
                }
                swift_release();
              }
              v84 += 16;
              if (!--v83) {
                goto LABEL_66;
              }
            }
          }
          *(void *)&long long v241 = v62;
          unint64_t v238 = cache;
          swift_retain();
          sub_1B6C3C5C4(0, v238, 0);
          int64_t v70 = v238;
          uint64_t v71 = v65;
          uint64_t v72 = 0;
          unint64_t v73 = 0;
          unint64_t v74 = v241;
          uint64_t v75 = v236;
          while (1)
          {
            uint64_t v76 = *(uint64_t *)((char *)v71 + v75);
            if (v73 >= *(void *)(v76 + 16)) {
              break;
            }
            uint64_t v77 = v76 + v72;
            uint64_t v78 = *(void *)(v77 + 32);
            if (!v78) {
              goto LABEL_54;
            }
            uint64_t v79 = *(void *)(v77 + 40);
            swift_retain();
            int64_t v70 = v238;
LABEL_55:
            *(void *)&long long v241 = v74;
            unint64_t v81 = *(void *)(v74 + 16);
            unint64_t v80 = *(void *)(v74 + 24);
            if (v81 >= v80 >> 1)
            {
              sub_1B6C3C5C4(v80 > 1, v81 + 1, 1);
              int64_t v70 = v238;
              uint64_t v75 = v236;
              unint64_t v74 = v241;
            }
            ++v73;
            *(void *)(v74 + 16) = v81 + 1;
            unint64_t v82 = v74 + 16 * v81;
            *(void *)(v82 + 32) = v78;
            *(void *)(v82 + 40) = v79;
            v72 += 16;
            if (v70 == v73)
            {
              swift_release();
              unint64_t v62 = MEMORY[0x1E4FBC860];
              uint64_t v63 = v237;
              uint64_t v83 = *(void *)(v74 + 16);
              if (v83) {
                goto LABEL_61;
              }
LABEL_66:
              swift_bridgeObjectRelease();
              sub_1B68D4EA0(0);
              uint64_t v86 = v239;
              if (!sub_1B6818134(v239)) {
                goto LABEL_71;
              }
              uint64_t v87 = (char *)v86 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
              int v88 = *v227;
              uint64_t v89 = v232;
              uint64_t v90 = v234;
              (*v227)(v232, v87, v234);
              v88(v233, v89, v90);
              unint64_t v91 = sub_1B68C1014(0, 1, 1, v62);
              unint64_t v93 = *(void *)(v91 + 16);
              unint64_t v92 = *(void *)(v91 + 24);
              if (v93 >= v92 >> 1) {
                unint64_t v91 = sub_1B68C1014(v92 > 1, v93 + 1, 1, v91);
              }
              *(void *)(v91 + 16) = v93 + 1;
              uint64_t v94 = v228;
              unint64_t v95 = v91
                  + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))
                  + *(void *)(v94 + 72) * v93;
              uint64_t v96 = v234;
              (*(void (**)(unint64_t, char *, uint64_t))(v228 + 32))(v95, v233, v234);
              (*(void (**)(char *, uint64_t))(v94 + 8))(v232, v96);
              unint64_t v62 = MEMORY[0x1E4FBC860];
              *(void *)&long long v241 = sub_1B68C967C(MEMORY[0x1E4FBC860]);
              *((void *)&v241 + 1) = v97;
              sub_1B68B96F0((uint64_t)sub_1B6CC6E5C, 0, 1, 0x1000000000000000uLL, 0, v91, (uint64_t)&v241);
              if (v63) {
                goto LABEL_190;
              }
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_71:
              type metadata accessor for Node();
              type metadata accessor for AuthoringNode();
              if (swift_dynamicCastMetatype())
              {
                uint64_t v98 = v239;
                uint64_t v99 = v236;
                swift_retain();
                uint64_t v100 = swift_bridgeObjectRetain();
                uint64_t v101 = sub_1B68AA7BC(v100, (uint64_t *)&v247, (uint64_t)&v248);
                swift_bridgeObjectRelease();
                *(__objc2_class **)((char *)v98 + v99) = (__objc2_class *)v101;
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v98 = v239;
              }
              uint64_t v102 = swift_allocObject();
              *(void *)(v102 + 16) = sub_1B6CC6E5C;
              *(void *)(v102 + 24) = 0;
              uint64_t v103 = swift_allocObject();
              *(unsigned char *)(v103 + 16) = 1;
              *(void *)(v103 + 24) = 0x1000000000000000;
              *(unsigned char *)(v103 + 32) = 0;
              uint64_t v104 = v240;
              *(void *)(v103 + 40) = &v248;
              *(void *)(v103 + 48) = v104;
              *(void *)(v103 + 56) = v62;
              *(void *)(v103 + 64) = sub_1B6CC6E5C;
              *(void *)(v103 + 72) = 0;
              *(void *)(v103 + 80) = &v247;
              *(void *)(v103 + 88) = &v246;
              uint64_t v105 = swift_allocObject();
              *(void *)(v105 + 16) = sub_1B6CC6EFC;
              *(void *)(v105 + 24) = v103;
              *(void *)&long long v241 = v104;
              *((void *)&v241 + 1) = v98;
              unint64_t v242 = v62;
              uint64_t v243 = sub_1B6CC8614;
              uint64_t v244 = v105;
              uint64_t v245 = &v246;
              swift_retain();
              swift_retain();
              swift_retain();
              sub_1B6CC85FC(&v241);
              swift_release();
              swift_release();
              swift_release_n();
              swift_release();
              uint64_t v237 = v63;
              if (v63) {
                goto LABEL_187;
              }
              char v106 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v107 = v248;
              *(void *)&long long v241 = v248;
              uint64_t v248 = 0x8000000000000000;
              unint64_t v109 = sub_1B62C1A30((uint64_t)v98);
              char v110 = v108;
              uint64_t v111 = *(void *)(v107 + 16) + ((v108 & 1) == 0);
              if (*(void *)(v107 + 24) < v111)
              {
                sub_1B6AB6A84(v111, v106);
                unint64_t v112 = sub_1B62C1A30((uint64_t)v98);
                if ((v110 & 1) == (v113 & 1))
                {
                  unint64_t v109 = v112;
                  if ((v110 & 1) == 0) {
                    goto LABEL_78;
                  }
LABEL_85:
                  uint64_t v248 = v241;
                  swift_bridgeObjectRelease();
                  goto LABEL_86;
                }
LABEL_186:
                sub_1B6E33838();
                __break(1u);
LABEL_187:
                swift_release_n();
                swift_bridgeObjectRelease_n();
LABEL_185:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                __break(1u);
              }
              if (v106)
              {
                if (v108) {
                  goto LABEL_85;
                }
              }
              else
              {
                sub_1B6ACC424();
                if (v110) {
                  goto LABEL_85;
                }
              }
LABEL_78:
              uint64_t v114 = v241;
              *(void *)(v241 + 8 * (v109 >> 6) + 64) |= 1 << v109;
              *(void *)(*(void *)(v114 + 48) + 8 * v109) = v98;
              ++*(void *)(v114 + 16);
              uint64_t v248 = v114;
              swift_bridgeObjectRelease();
              uint64_t v115 = v249;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v115 = sub_1B68C1000(0, *((void *)v115 + 2) + 1, 1, v115);
              }
              unint64_t v117 = *((void *)v115 + 2);
              unint64_t v116 = *((void *)v115 + 3);
              if (v117 >= v116 >> 1) {
                uint64_t v115 = sub_1B68C1000(v116 > 1, v117 + 1, 1, v115);
              }
              *((void *)v115 + 2) = v117 + 1;
              uint64_t v98 = v239;
              *(void *)&v115[8 * v117 + 32] = v239;
              uint64_t v249 = v115;
LABEL_86:
              char v118 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v119 = (uint64_t)v247;
              *(void *)&long long v241 = v247;
              long long v247 = (void *)0x8000000000000000;
              unint64_t v120 = sub_1B62C1A30((uint64_t)v98);
              char v122 = v121;
              uint64_t v123 = *(void *)(v119 + 16) + ((v121 & 1) == 0);
              if (*(void *)(v119 + 24) >= v123)
              {
                if ((v118 & 1) == 0) {
                  sub_1B6ACC5B8();
                }
              }
              else
              {
                sub_1B6AB6D08(v123, v118);
                unint64_t v124 = sub_1B62C1A30((uint64_t)v98);
                if ((v122 & 1) != (v125 & 1)) {
                  goto LABEL_186;
                }
                unint64_t v120 = v124;
              }
              uint64_t v26 = MEMORY[0x1E4FBC860];
              uint64_t v126 = (void *)v241;
              if (v122)
              {
                *(unsigned char *)(*(void *)(v241 + 56) + v120) = 0;
              }
              else
              {
                *(void *)(v241 + 8 * (v120 >> 6) + 64) |= 1 << v120;
                *(void *)(v126[6] + 8 * v120) = v98;
                *(unsigned char *)(v126[7] + v120) = 0;
                ++v126[2];
              }
              long long v247 = v126;
              swift_release_n();
              swift_bridgeObjectRelease();
              uint64_t v48 = v230;
              unint64_t v47 = v231;
              unint64_t v49 = v235;
              unint64_t v50 = v229;
LABEL_27:
              if (++v49 == v48) {
                goto LABEL_96;
              }
              goto LABEL_28;
            }
          }
          uint64_t v78 = 0;
LABEL_54:
          uint64_t v79 = 0;
          goto LABEL_55;
        }
        goto LABEL_16;
      }
      if (v28 != v219) {
        break;
      }
LABEL_16:
      uint64_t v41 = v237;
      sub_1B6345178(v215, (unsigned __int16 **)v269, (uint64_t)v288);
      uint64_t v237 = v41;
      uint64_t v42 = v216;
      sub_1B634507C(v216);
      ecs_stack_allocator_pop_snapshot(v213);
      if (v214)
      {
        os_unfair_lock_unlock(*((os_unfair_lock_t *)v42 + 43));
        os_unfair_lock_unlock(*((os_unfair_lock_t *)v42 + 47));
      }
      swift_release();
      uint64_t v25 = v212 + 1;
      if (v212 + 1 == v208)
      {
        sub_1B62CA064((uint64_t)v264);
        sub_1B632F220(v279, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        goto LABEL_182;
      }
    }
    while (1)
    {
      unint64_t v224 = v28;
      uint64_t v130 = *(void *)(v218 + 40 * v28 + 32);
      uint64_t v248 = sub_1B68C967C(v26);
      uint64_t v249 = v131;
      uint64_t v239 = (__objc2_class **)v130;
      unint64_t v132 = *(void *)(v130 + 24);
      uint64_t v220 = v130 + 24;
      unint64_t v246 = v26;
      long long v247 = (void *)MEMORY[0x1E4FBC868];
      if (v132 >> 62) {
        break;
      }
      uint64_t v133 = *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v133) {
        goto LABEL_104;
      }
LABEL_176:
      swift_bridgeObjectRelease_n();
      unint64_t v206 = v246;
      if (v246 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v128 = sub_1B6E32C18();
        swift_bridgeObjectRelease();
        unint64_t v129 = v206;
        if (!v128) {
          goto LABEL_178;
        }
      }
      else
      {
        unint64_t v129 = v246;
        if (!*(void *)((v246 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_178:
          swift_bridgeObjectRelease();
          goto LABEL_101;
        }
      }
      sub_1B66415C8(v129);
LABEL_101:
      unint64_t v28 = v224 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28 == v219) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v133 = sub_1B6E32C18();
    if (!v133) {
      goto LABEL_176;
    }
LABEL_104:
    uint64_t v134 = 0;
    unint64_t v135 = v132 & 0xC000000000000001;
    unint64_t v229 = v132 + 32;
    unint64_t v230 = v132 & 0xC000000000000001;
    unint64_t v235 = v132;
    uint64_t v231 = v133;
    while (1)
    {
      if (v135)
      {
        char v136 = (__objc2_class **)MEMORY[0x1BA9B4580](v134, v132);
      }
      else
      {
        char v136 = *(__objc2_class ***)(v229 + 8 * v134);
        swift_retain();
      }
      if (!*(void *)(v248 + 16) || (sub_1B62C1A30((uint64_t)v136), (v137 & 1) == 0))
      {
        if (!v247[2])
        {
          uint64_t v236 = v134;
LABEL_116:
          char v139 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v140 = (uint64_t)v247;
          *(void *)&long long v241 = v247;
          long long v247 = (void *)0x8000000000000000;
          unint64_t v141 = sub_1B62C1A30((uint64_t)v136);
          char v143 = v142;
          uint64_t v144 = *(void *)(v140 + 16) + ((v142 & 1) == 0);
          if (*(void *)(v140 + 24) >= v144)
          {
            if ((v139 & 1) == 0) {
              sub_1B6ACC5B8();
            }
          }
          else
          {
            sub_1B6AB6D08(v144, v139);
            unint64_t v145 = sub_1B62C1A30((uint64_t)v136);
            if ((v143 & 1) != (v146 & 1)) {
              goto LABEL_186;
            }
            unint64_t v141 = v145;
          }
          unint64_t v147 = MEMORY[0x1E4FBC860];
          uint64_t v148 = v237;
          int v149 = (void *)v241;
          if (v143)
          {
            *(unsigned char *)(*(void *)(v241 + 56) + v141) = 1;
          }
          else
          {
            *(void *)(v241 + 8 * (v141 >> 6) + 64) |= 1 << v141;
            *(void *)(v149[6] + 8 * v141) = v136;
            *(unsigned char *)(v149[7] + v141) = 1;
            ++v149[2];
          }
          long long v247 = v149;
          swift_bridgeObjectRelease();
          uint64_t v150 = (*(__objc2_class **)((char *)v136 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw))->isa[3].info;
          uint64_t v151 = swift_retain();
          ((void (*)(void *__return_ptr, uint64_t))v150)(v251, v151);
          uint64_t v263 = v251[0];
          uint64_t v262 = v251[1];
          sub_1B62D8C3C((uint64_t)&v262);
          uint64_t v261 = v251[2];
          sub_1B62D8C3C((uint64_t)&v261);
          uint64_t v260 = v251[3];
          sub_1B62D8C3C((uint64_t)&v260);
          uint64_t v259 = v251[4];
          sub_1B62D8C3C((uint64_t)&v259);
          uint64_t v258 = v251[5];
          sub_1B62D8C3C((uint64_t)&v258);
          uint64_t v152 = *(void **)(v263 + 16);
          sub_1B62D8C3C((uint64_t)&v263);
          unint64_t v238 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
          if ((*(__objc2_class **)((char *)v136 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs))->cache <= v152) {
            int64_t v153 = (int64_t)v152;
          }
          else {
            int64_t v153 = (int64_t)(*(__objc2_class **)((char *)v136 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs))->cache;
          }
          if (v153)
          {
            *(void *)&long long v241 = v147;
            uint64_t v240 = v136;
            swift_retain();
            sub_1B6C3C5C4(0, v153, 0);
            uint64_t v154 = 0;
            unint64_t v155 = 0;
            unint64_t v156 = v241;
            int64_t v157 = v238;
            while (1)
            {
              uint64_t v158 = *(uint64_t *)((char *)v240 + v157);
              if (v155 >= *(void *)(v158 + 16)) {
                break;
              }
              uint64_t v159 = v158 + v154;
              uint64_t v160 = *(void *)(v159 + 32);
              if (!v160) {
                goto LABEL_133;
              }
              uint64_t v161 = *(void *)(v159 + 40);
              swift_retain();
LABEL_134:
              *(void *)&long long v241 = v156;
              unint64_t v163 = *(void *)(v156 + 16);
              unint64_t v162 = *(void *)(v156 + 24);
              if (v163 >= v162 >> 1)
              {
                sub_1B6C3C5C4(v162 > 1, v163 + 1, 1);
                int64_t v157 = v238;
                unint64_t v156 = v241;
              }
              ++v155;
              *(void *)(v156 + 16) = v163 + 1;
              unint64_t v164 = v156 + 16 * v163;
              *(void *)(v164 + 32) = v160;
              *(void *)(v164 + 40) = v161;
              v154 += 16;
              if (v153 == v155)
              {
                char v136 = v240;
                swift_release();
                unint64_t v147 = MEMORY[0x1E4FBC860];
                uint64_t v148 = v237;
                uint64_t v165 = *(void *)(v156 + 16);
                if (!v165) {
                  goto LABEL_145;
                }
                goto LABEL_140;
              }
            }
            uint64_t v160 = 0;
LABEL_133:
            uint64_t v161 = 0;
            goto LABEL_134;
          }
          unint64_t v156 = v147;
          uint64_t v165 = *(void *)(v147 + 16);
          if (!v165) {
            goto LABEL_145;
          }
LABEL_140:
          uint64_t v166 = 32;
          do
          {
            if (*(void *)(v156 + v166))
            {
              uint64_t v167 = swift_retain();
              sub_1B68AD6B0(v167, 1, 0x1000000000000000uLL, 0, v147, (uint64_t)sub_1B6CC6E5C, 0, (uint64_t *)&v247, (uint64_t)&v248, (uint64_t)&v246);
              if (v148)
              {
LABEL_184:
                swift_bridgeObjectRelease();
                swift_release();
                sub_1B68D4EA0(0);
                swift_bridgeObjectRelease_n();
                swift_release_n();
                goto LABEL_185;
              }
              swift_release();
            }
            v166 += 16;
            --v165;
          }
          while (v165);
LABEL_145:
          swift_bridgeObjectRelease();
          sub_1B68D4EA0(0);
          if (sub_1B6818134(v136))
          {
            uint64_t v168 = *v227;
            uint64_t v169 = v222;
            uint64_t v170 = v234;
            (*v227)(v222, (char *)v136 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v234);
            v168(v223, v169, v170);
            unint64_t v171 = sub_1B68C1014(0, 1, 1, v147);
            unint64_t v173 = *(void *)(v171 + 16);
            unint64_t v172 = *(void *)(v171 + 24);
            if (v173 >= v172 >> 1) {
              unint64_t v171 = sub_1B68C1014(v172 > 1, v173 + 1, 1, v171);
            }
            *(void *)(v171 + 16) = v173 + 1;
            uint64_t v174 = v228;
            unint64_t v175 = v171
                 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80))
                 + *(void *)(v174 + 72) * v173;
            uint64_t v176 = v234;
            (*(void (**)(unint64_t, char *, uint64_t))(v228 + 32))(v175, v223, v234);
            (*(void (**)(char *, uint64_t))(v174 + 8))(v222, v176);
            unint64_t v147 = MEMORY[0x1E4FBC860];
            *(void *)&long long v241 = sub_1B68C967C(MEMORY[0x1E4FBC860]);
            *((void *)&v241 + 1) = v177;
            sub_1B68B96F0((uint64_t)sub_1B6CC6E5C, 0, 1, 0x1000000000000000uLL, 0, v171, (uint64_t)&v241);
            if (v148)
            {
LABEL_190:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_185;
            }
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          type metadata accessor for Node();
          type metadata accessor for AuthoringNode();
          if (swift_dynamicCastMetatype())
          {
            int64_t v178 = v238;
            swift_retain();
            uint64_t v179 = swift_bridgeObjectRetain();
            uint64_t v180 = sub_1B68AA7BC(v179, (uint64_t *)&v247, (uint64_t)&v248);
            swift_bridgeObjectRelease();
            *(__objc2_class **)((char *)v136 + v178) = (__objc2_class *)v180;
            swift_release();
            swift_bridgeObjectRelease();
          }
          uint64_t v181 = swift_allocObject();
          *(void *)(v181 + 16) = sub_1B6CC6E5C;
          *(void *)(v181 + 24) = 0;
          uint64_t v182 = swift_allocObject();
          *(unsigned char *)(v182 + 16) = 1;
          *(void *)(v182 + 24) = 0x1000000000000000;
          *(unsigned char *)(v182 + 32) = 0;
          char v183 = v239;
          *(void *)(v182 + 40) = &v248;
          *(void *)(v182 + 48) = v183;
          *(void *)(v182 + 56) = v147;
          *(void *)(v182 + 64) = sub_1B6CC6E5C;
          *(void *)(v182 + 72) = 0;
          *(void *)(v182 + 80) = &v247;
          *(void *)(v182 + 88) = &v246;
          uint64_t v184 = swift_allocObject();
          *(void *)(v184 + 16) = sub_1B6CC6EFC;
          *(void *)(v184 + 24) = v182;
          *(void *)&long long v241 = v183;
          *((void *)&v241 + 1) = v136;
          unint64_t v242 = v147;
          uint64_t v243 = sub_1B6CC6F00;
          uint64_t v244 = v184;
          uint64_t v245 = &v246;
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1B6CC6EB0(&v241);
          swift_release();
          swift_release();
          swift_release_n();
          swift_release();
          uint64_t v237 = v148;
          if (v148) {
            goto LABEL_187;
          }
          char v185 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v186 = v248;
          *(void *)&long long v241 = v248;
          uint64_t v248 = 0x8000000000000000;
          unint64_t v188 = sub_1B62C1A30((uint64_t)v136);
          char v189 = v187;
          uint64_t v190 = *(void *)(v186 + 16) + ((v187 & 1) == 0);
          if (*(void *)(v186 + 24) >= v190)
          {
            if (v185)
            {
              if ((v187 & 1) == 0) {
                goto LABEL_156;
              }
            }
            else
            {
              sub_1B6ACC424();
              if ((v189 & 1) == 0) {
                goto LABEL_156;
              }
            }
          }
          else
          {
            sub_1B6AB6A84(v190, v185);
            unint64_t v191 = sub_1B62C1A30((uint64_t)v136);
            if ((v189 & 1) != (v192 & 1)) {
              goto LABEL_186;
            }
            unint64_t v188 = v191;
            if ((v189 & 1) == 0)
            {
LABEL_156:
              uint64_t v193 = v241;
              *(void *)(v241 + 8 * (v188 >> 6) + 64) |= 1 << v188;
              *(void *)(*(void *)(v193 + 48) + 8 * v188) = v136;
              ++*(void *)(v193 + 16);
              uint64_t v248 = v193;
              swift_bridgeObjectRelease();
              uint64_t v194 = v249;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v194 = sub_1B68C1000(0, *((void *)v194 + 2) + 1, 1, v194);
              }
              unint64_t v196 = *((void *)v194 + 2);
              unint64_t v195 = *((void *)v194 + 3);
              if (v196 >= v195 >> 1) {
                uint64_t v194 = sub_1B68C1000(v195 > 1, v196 + 1, 1, v194);
              }
              *((void *)v194 + 2) = v196 + 1;
              *(void *)&v194[8 * v196 + 32] = v136;
              uint64_t v249 = v194;
              goto LABEL_164;
            }
          }
          uint64_t v248 = v241;
          swift_bridgeObjectRelease();
LABEL_164:
          char v197 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v198 = (uint64_t)v247;
          *(void *)&long long v241 = v247;
          long long v247 = (void *)0x8000000000000000;
          unint64_t v199 = sub_1B62C1A30((uint64_t)v136);
          char v201 = v200;
          uint64_t v202 = *(void *)(v198 + 16) + ((v200 & 1) == 0);
          if (*(void *)(v198 + 24) >= v202)
          {
            if ((v197 & 1) == 0) {
              sub_1B6ACC5B8();
            }
          }
          else
          {
            sub_1B6AB6D08(v202, v197);
            unint64_t v203 = sub_1B62C1A30((uint64_t)v136);
            if ((v201 & 1) != (v204 & 1)) {
              goto LABEL_186;
            }
            unint64_t v199 = v203;
          }
          uint64_t v26 = MEMORY[0x1E4FBC860];
          uint64_t v205 = (void *)v241;
          if (v201)
          {
            *(unsigned char *)(*(void *)(v241 + 56) + v199) = 0;
          }
          else
          {
            *(void *)(v241 + 8 * (v199 >> 6) + 64) |= 1 << v199;
            *(void *)(v205[6] + 8 * v199) = v136;
            *(unsigned char *)(v205[7] + v199) = 0;
            ++v205[2];
          }
          long long v247 = v205;
          swift_release_n();
          swift_bridgeObjectRelease();
          unint64_t v132 = v235;
          uint64_t v134 = v236;
          unint64_t v135 = v230;
          uint64_t v133 = v231;
          goto LABEL_106;
        }
        sub_1B62C1A30((uint64_t)v136);
        if ((v138 & 1) == 0)
        {
          uint64_t v236 = v134;
          goto LABEL_116;
        }
      }
      swift_release();
LABEL_106:
      if (++v134 == v133) {
        goto LABEL_176;
      }
    }
  }
}

void sub_1B6CC4AD8(uint64_t a1)
{
  sub_1B63BDF50(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = *(void *)(a1 + 8);
  if (**(__objc2_class ***)(v7 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) == _TtC3VFX21TextureDescriptorNode)
  {
    uint64_t v8 = 0;
    char v20 = *(void **)(a1 + 40);
    uint64_t v9 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
    uint64_t v22 = v1;
    uint64_t v23 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v21 = (char *)&v20 - v5;
    do
    {
      uint64_t v10 = *(void *)((char *)&unk_1F0F9E120 + v8 + 32);
      if (*(void *)(*(void *)(v7 + v9) + 16 * v10 + 32))
      {
        type metadata accessor for ConstantNode(0);
        swift_retain();
        uint64_t v11 = swift_dynamicCastClass();
        if (v11)
        {
          sub_1B62CAAD8(v11 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)v24);
          swift_retain();
          if (swift_dynamicCast() && !v25)
          {
            type metadata accessor for ImplicitNilNode(0);
            uint64_t v12 = (void *)swift_allocObject();
            v12[4] = 0;
            v12[2] = MEMORY[0x1E4FBC860];
            v12[3] = 0;
            sub_1B6E31108();
            uint64_t v13 = sub_1B6E31118();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
            type metadata accessor for AuthoringNode();
            swift_allocObject();
            uint64_t v14 = sub_1B6CE3580((uint64_t)v12, MEMORY[0x1E4FBC860], (uint64_t)v6, 0, 0xF000000000000000);
            swift_release();
            uint64_t v15 = swift_retain();
            id v16 = v20;
            MEMORY[0x1BA9B3870](v15);
            if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B6E31C78();
            }
            sub_1B6E31CC8();
            sub_1B6E31C48();
            id v17 = *(void **)(v7 + v9);
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v7 + v9) = v17;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              id v17 = sub_1B6C16864(v17);
              *(void *)(v7 + v9) = v17;
            }
            int v19 = &v17[2 * v10];
            v19[4] = v14;
            v19[5] = 0;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v6 = v21;
            goto LABEL_6;
          }
          swift_release();
        }
        swift_release();
      }
LABEL_6:
      v8 += 8;
    }
    while (v8 != 32);
  }
}

unint64_t sub_1B6CC4E48(uint64_t a1, uint64_t a2, float32x2_t *a3)
{
  float v3 = *(float *)a2;
  if (*(unsigned char *)(a2 + 4) == 1)
  {
    if (v3 == 0.0) {
      return result;
    }
    *(float32x2_t *)&long long v4 = vadd_f32(*a3, *a3);
    *((float *)&v4 + 2) = a3[1].f32[0] + a3[1].f32[0];
    HIDWORD(v4) = 0;
    *(_OWORD *)a3->f32 = v4;
  }
  else
  {
    *(float32x2_t *)&long long v5 = vadd_f32(*a3, *a3);
    *((float *)&v5 + 2) = a3[1].f32[0] + a3[1].f32[0];
    HIDWORD(v5) = 0;
    *(_OWORD *)a3->f32 = v5;
    *(float *)a2 = v3 * 0.5;
    *(unsigned char *)(a2 + 4) = 0;
  }
  return sub_1B6CF028C(0);
}

void *sub_1B6CC4EDC(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t v292 = *MEMORY[0x1E4F143B8];
  sub_1B63A93E0(3, (uint64_t)v237);
  v262[0] = v237[0];
  v262[1] = v237[1];
  uint64_t v263 = v238;
  uint64_t v191 = a1;
  sub_1B62C9DA8(a1, (uint64_t)v262, 0x200000000, v264);
  sub_1B62D8068((uint64_t)v264, (uint64_t)v282, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v282[0])
  {
    long long v249 = v282[0];
    long long v250 = v282[1];
    uint64_t v213 = v284;
    uint64_t v251 = v283;
    uint64_t v3 = v285;
    uint64_t v4 = v286;
    long long v5 = v287;
    uint64_t v6 = v288;
    sub_1B62CA064((uint64_t)v237);
    if (v6 > 0 && v3)
    {
      uint64_t v7 = v5[4];
      int v8 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t inited = type metadata accessor for ParticleInitScript(0);
      v252[0] = v249;
      v252[1] = v250;
      uint64_t v253 = v251;
      uint64_t v193 = v5 + 8;
      uint64_t v196 = (uint64_t)(v5 + 6);
      uint64_t v199 = inited;
      uint64_t v192 = inited - 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v10 = 0;
      uint64_t v205 = v7;
      uint64_t v208 = v5;
      int v202 = v8;
      while (1)
      {
        uint64_t v222 = v10;
        uint64_t v11 = (unsigned int *)(v213 + 48 * v10);
        uint64_t v12 = *v11;
        uint64_t v13 = (uint64_t *)*((void *)v11 + 2);
        uint64_t v14 = *((void *)v11 + 3);
        uint64_t v15 = *((void *)v11 + 5);
        uint64_t v228 = *((void *)v11 + 4);
        uint64_t v216 = v11[1];
        if (v8)
        {
          id v16 = *(os_unfair_lock_s **)(v15 + 376);
          swift_retain();
          os_unfair_lock_lock(v16);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
        }
        else
        {
          swift_retain();
        }
        uint64_t v225 = v2;
        ecs_stack_allocator_push_snapshot(v7);
        sub_1B62D8068(v196, (uint64_t)v291, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v17 = v5[4];
        uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v5[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
        v5[7] = v18;
        v193[1] = 0;
        _OWORD v193[2] = 0;
        void *v193 = 0;
        swift_release();
        uint64_t v19 = v228;
        uint64_t v219 = v15;
        uint64_t v232 = sub_1B62C9024(v199, (uint64_t)&off_1F0F796D0, v13, v14, v228, (uint64_t)v5);
        if (v13)
        {
          if (v228)
          {
            uint64_t v20 = 0;
            uint64_t v21 = *(void *)(*(void *)v192 + 72);
            while (1)
            {
              uint64_t v22 = v232 + v21 * v20;
              uint64_t v24 = *(void *)(v22 + 8);
              unint64_t v23 = *(void *)(v22 + 16);
              if (*(unsigned char *)v22)
              {
                if (*(unsigned char *)v22 != 1) {
                  break;
                }
              }
              char v25 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if (v25)
              {
LABEL_18:
                *(void *)&v275[0] = v24;
                *((void *)&v275[0] + 1) = v23;
                *(void *)&v268[0] = 0x676E69646E69422ELL;
                *((void *)&v268[0] + 1) = 0xEA00000000002E73;
                sub_1B633AF88();
                if ((sub_1B6E32678() & 1) == 0) {
                  goto LABEL_12;
                }
                id v26 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
                uint64_t v27 = (void *)sub_1B6E31768();
                *(void *)&v275[0] = 0;
                id v28 = objc_msgSend(v26, sel_initWithPattern_options_error_, v27, 0, v275);

                uint64_t v29 = *(void **)&v275[0];
                if (!v28) {
                  goto LABEL_142;
                }
                uint64_t v30 = HIBYTE(v23) & 0xF;
                if ((v23 & 0x2000000000000000) == 0) {
                  uint64_t v30 = v24;
                }
                uint64_t v31 = 7;
                if (((v23 >> 60) & ((v24 & 0x800000000000000) == 0)) != 0) {
                  uint64_t v31 = 11;
                }
                *(void *)&v275[0] = 15;
                *((void *)&v275[0] + 1) = v31 | (v30 << 16);
                *(void *)&v268[0] = v24;
                *((void *)&v268[0] + 1) = v23;
                sub_1B6CC85A4(0, (unint64_t *)&qword_1E9DD66F8, MEMORY[0x1E4FBB128], MEMORY[0x1E4FBB138], MEMORY[0x1E4FBB6A0]);
                sub_1B6B979D4();
                id v32 = v29;
                swift_bridgeObjectRetain();
                uint64_t v33 = sub_1B6E32388();
                uint64_t v35 = v34;
                uint64_t v36 = (void *)sub_1B6E31768();
                uint64_t v37 = (void *)sub_1B6E31768();
                id v38 = objc_msgSend(v28, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v36, 0, v33, v35, v37);

                uint64_t v39 = sub_1B6E31798();
                uint64_t v41 = v40;

                *(void *)(v22 + 8) = v39;
                *(void *)(v22 + 16) = v41;
                swift_bridgeObjectRelease();
                ++v20;
                uint64_t v19 = v228;
                if (v20 == v228) {
                  goto LABEL_42;
                }
              }
              else
              {
LABEL_12:
                *(void *)(v22 + 8) = v24;
                *(void *)(v22 + 16) = v23;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                if (++v20 == v19) {
                  goto LABEL_42;
                }
              }
            }
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        else if (v12 != v216)
        {
          uint64_t v42 = *(void *)(*(void *)v192 + 72);
          uint64_t v43 = ~v12 + v216;
          unint64_t v44 = (unint64_t *)(v232 + v42 * v12 + 16);
          while (2)
          {
            uint64_t v46 = *(v44 - 1);
            unint64_t v45 = *v44;
            if (*((unsigned char *)v44 - 16) && *((unsigned char *)v44 - 16) != 1)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v47 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v47 & 1) == 0) {
                goto LABEL_28;
              }
            }
            *(void *)&v275[0] = v46;
            *((void *)&v275[0] + 1) = v45;
            *(void *)&v268[0] = 0x676E69646E69422ELL;
            *((void *)&v268[0] + 1) = 0xEA00000000002E73;
            sub_1B633AF88();
            if (sub_1B6E32678())
            {
              id v48 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
              unint64_t v49 = (void *)sub_1B6E31768();
              *(void *)&v275[0] = 0;
              id v50 = objc_msgSend(v48, sel_initWithPattern_options_error_, v49, 0, v275);

              uint64_t v29 = *(void **)&v275[0];
              if (!v50)
              {
LABEL_142:
                id v189 = v29;
                sub_1B6E30D78();

                swift_willThrow();
                goto LABEL_144;
              }
              uint64_t v51 = HIBYTE(v45) & 0xF;
              if ((v45 & 0x2000000000000000) == 0) {
                uint64_t v51 = v46;
              }
              uint64_t v52 = 7;
              if (((v45 >> 60) & ((v46 & 0x800000000000000) == 0)) != 0) {
                uint64_t v52 = 11;
              }
              *(void *)&v275[0] = 15;
              *((void *)&v275[0] + 1) = v52 | (v51 << 16);
              *(void *)&v268[0] = v46;
              *((void *)&v268[0] + 1) = v45;
              sub_1B6CC85A4(0, (unint64_t *)&qword_1E9DD66F8, MEMORY[0x1E4FBB128], MEMORY[0x1E4FBB138], MEMORY[0x1E4FBB6A0]);
              sub_1B6B979D4();
              id v53 = v29;
              swift_bridgeObjectRetain();
              uint64_t v54 = sub_1B6E32388();
              uint64_t v56 = v55;
              char v57 = (void *)sub_1B6E31768();
              char v58 = (void *)sub_1B6E31768();
              id v59 = objc_msgSend(v50, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v57, 0, v54, v56, v58);

              uint64_t v60 = sub_1B6E31798();
              unint64_t v62 = v61;

              *(v44 - 1) = v60;
              *unint64_t v44 = v62;
              swift_bridgeObjectRelease();
              if (!v43) {
                break;
              }
            }
            else
            {
LABEL_28:
              *(v44 - 1) = v46;
              *unint64_t v44 = v45;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (!v43) {
                break;
              }
            }
            --v43;
            unint64_t v44 = (unint64_t *)((char *)v44 + v42);
            continue;
          }
        }
LABEL_42:
        long long v5 = v208;
        uint64_t v2 = v225;
        sub_1B6345178(v208, (unsigned __int16 **)v252, (uint64_t)v291);
        sub_1B634507C((char *)v219);
        uint64_t v7 = v205;
        ecs_stack_allocator_pop_snapshot(v205);
        int v8 = v202;
        if (v202)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v219 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v219 + 376));
        }
        swift_release();
        uint64_t v10 = v222 + 1;
        if (v222 + 1 == v3)
        {
          sub_1B632F220(v264, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          break;
        }
      }
    }
    sub_1B632F220(v264, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v237);
  }
  sub_1B63A84C0(3, (uint64_t)v239);
  v260[0] = v239[0];
  v260[1] = v239[1];
  uint64_t v261 = v240;
  sub_1B62C9DA8(v191, (uint64_t)v260, 0x200000000, v265);
  sub_1B62D8068((uint64_t)v265, (uint64_t)v275, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v275[0])
  {
    long long v246 = v275[0];
    long long v247 = v275[1];
    uint64_t v217 = v277;
    uint64_t v248 = v276;
    uint64_t v63 = v278;
    uint64_t v64 = v279;
    char v65 = v280;
    uint64_t v66 = v281;
    sub_1B62CA064((uint64_t)v239);
    if (v66 > 0 && v63)
    {
      uint64_t v67 = v65[4];
      int v68 = *(unsigned __int8 *)(v64 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
      v254[0] = v246;
      v254[1] = v247;
      uint64_t v255 = v248;
      char v197 = v65 + 8;
      uint64_t v200 = (uint64_t)(v65 + 6);
      uint64_t v203 = updated;
      uint64_t v194 = updated - 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v70 = 0;
      uint64_t v209 = v67;
      uint64_t v211 = v65;
      uint64_t v214 = v63;
      int v206 = v68;
      while (1)
      {
        uint64_t v223 = v70;
        uint64_t v71 = (unsigned int *)(v217 + 48 * v70);
        uint64_t v72 = *v71;
        unint64_t v74 = (uint64_t *)*((void *)v71 + 2);
        uint64_t v73 = *((void *)v71 + 3);
        uint64_t v75 = *((void *)v71 + 5);
        uint64_t v229 = v71[1];
        uint64_t v233 = *((void *)v71 + 4);
        if (v68)
        {
          uint64_t v76 = *(os_unfair_lock_s **)(v75 + 376);
          swift_retain();
          os_unfair_lock_lock(v76);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v75 + 344));
        }
        else
        {
          swift_retain();
        }
        uint64_t v226 = v2;
        ecs_stack_allocator_push_snapshot(v67);
        sub_1B62D8068(v200, (uint64_t)v290, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v77 = v65[4];
        uint64_t v78 = *(void *)(*(void *)(*(void *)(*(void *)(v75 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v65[6] = ecs_stack_allocator_allocate(v77, 48 * v78, 8);
        v65[7] = v78;
        v197[1] = 0;
        v197[2] = 0;
        *char v197 = 0;
        swift_release();
        uint64_t v79 = v233;
        uint64_t v220 = v75;
        uint64_t v80 = sub_1B62C9024(v203, (uint64_t)&off_1F0F82FB8, v74, v73, v233, (uint64_t)v65);
        uint64_t v81 = v80;
        if (v74)
        {
          if (v233)
          {
            uint64_t v82 = 0;
            uint64_t v83 = *(void *)(*(void *)v194 + 72);
            uint64_t v230 = v83;
            while (1)
            {
              uint64_t v84 = v81 + v83 * v82;
              uint64_t v85 = *(void *)v84;
              unint64_t v86 = *(void *)(v84 + 8);
              if (*(unsigned char *)(v84 + 24))
              {
                if (*(unsigned char *)(v84 + 24) != 1) {
                  break;
                }
              }
              char v87 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if (v87)
              {
LABEL_65:
                *(void *)&v268[0] = v85;
                *((void *)&v268[0] + 1) = v86;
                uint64_t v266 = 0x676E69646E69422ELL;
                unint64_t v267 = 0xEA00000000002E73;
                sub_1B633AF88();
                if ((sub_1B6E32678() & 1) == 0) {
                  goto LABEL_59;
                }
                uint64_t v88 = v81;
                id v89 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
                uint64_t v90 = (void *)sub_1B6E31768();
                *(void *)&v268[0] = 0;
                id v91 = objc_msgSend(v89, sel_initWithPattern_options_error_, v90, 0, v268);

                uint64_t v29 = *(void **)&v268[0];
                if (!v91) {
                  goto LABEL_142;
                }
                uint64_t v92 = HIBYTE(v86) & 0xF;
                if ((v86 & 0x2000000000000000) == 0) {
                  uint64_t v92 = v85;
                }
                uint64_t v93 = 7;
                if (((v86 >> 60) & ((v85 & 0x800000000000000) == 0)) != 0) {
                  uint64_t v93 = 11;
                }
                *(void *)&v268[0] = 15;
                *((void *)&v268[0] + 1) = v93 | (v92 << 16);
                uint64_t v266 = v85;
                unint64_t v267 = v86;
                sub_1B6CC85A4(0, (unint64_t *)&qword_1E9DD66F8, MEMORY[0x1E4FBB128], MEMORY[0x1E4FBB138], MEMORY[0x1E4FBB6A0]);
                sub_1B6B979D4();
                id v94 = v29;
                swift_bridgeObjectRetain();
                uint64_t v95 = sub_1B6E32388();
                uint64_t v97 = v96;
                uint64_t v98 = (void *)sub_1B6E31768();
                uint64_t v99 = (void *)sub_1B6E31768();
                id v100 = objc_msgSend(v91, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v98, 0, v95, v97, v99);

                uint64_t v101 = sub_1B6E31798();
                uint64_t v103 = v102;

                *(void *)uint64_t v84 = v101;
                *(void *)(v84 + 8) = v103;
                swift_bridgeObjectRelease();
                ++v82;
                uint64_t v79 = v233;
                uint64_t v81 = v88;
                uint64_t v83 = v230;
                if (v82 == v233) {
                  goto LABEL_89;
                }
              }
              else
              {
LABEL_59:
                *(void *)uint64_t v84 = v85;
                *(void *)(v84 + 8) = v86;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                if (++v82 == v79) {
                  goto LABEL_89;
                }
              }
            }
            swift_bridgeObjectRelease();
            goto LABEL_65;
          }
        }
        else if (v72 != v229)
        {
          uint64_t v104 = *(void *)(*(void *)v194 + 72);
          uint64_t v105 = ~v72 + v229;
          uint64_t v106 = v80 + v104 * v72;
          while (2)
          {
            uint64_t v108 = *(void *)v106;
            unint64_t v107 = *(void *)(v106 + 8);
            if (*(unsigned char *)(v106 + 24) && *(unsigned char *)(v106 + 24) != 1)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v109 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v109 & 1) == 0) {
                goto LABEL_75;
              }
            }
            *(void *)&v268[0] = v108;
            *((void *)&v268[0] + 1) = v107;
            uint64_t v266 = 0x676E69646E69422ELL;
            unint64_t v267 = 0xEA00000000002E73;
            sub_1B633AF88();
            if (sub_1B6E32678())
            {
              id v110 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
              uint64_t v111 = (void *)sub_1B6E31768();
              *(void *)&v268[0] = 0;
              id v112 = objc_msgSend(v110, sel_initWithPattern_options_error_, v111, 0, v268);

              uint64_t v29 = *(void **)&v268[0];
              if (!v112) {
                goto LABEL_142;
              }
              uint64_t v113 = HIBYTE(v107) & 0xF;
              if ((v107 & 0x2000000000000000) == 0) {
                uint64_t v113 = v108;
              }
              uint64_t v114 = 7;
              if (((v107 >> 60) & ((v108 & 0x800000000000000) == 0)) != 0) {
                uint64_t v114 = 11;
              }
              *(void *)&v268[0] = 15;
              *((void *)&v268[0] + 1) = v114 | (v113 << 16);
              uint64_t v266 = v108;
              unint64_t v267 = v107;
              sub_1B6CC85A4(0, (unint64_t *)&qword_1E9DD66F8, MEMORY[0x1E4FBB128], MEMORY[0x1E4FBB138], MEMORY[0x1E4FBB6A0]);
              sub_1B6B979D4();
              id v115 = v29;
              swift_bridgeObjectRetain();
              uint64_t v116 = sub_1B6E32388();
              uint64_t v118 = v117;
              uint64_t v119 = (void *)sub_1B6E31768();
              unint64_t v120 = (void *)sub_1B6E31768();
              id v121 = objc_msgSend(v112, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v119, 0, v116, v118, v120);

              uint64_t v122 = sub_1B6E31798();
              uint64_t v124 = v123;

              *(void *)uint64_t v106 = v122;
              *(void *)(v106 + 8) = v124;
              swift_bridgeObjectRelease();
              if (!v105) {
                break;
              }
            }
            else
            {
LABEL_75:
              *(void *)uint64_t v106 = v108;
              *(void *)(v106 + 8) = v107;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (!v105) {
                break;
              }
            }
            --v105;
            v106 += v104;
            continue;
          }
        }
LABEL_89:
        char v65 = v211;
        uint64_t v2 = v226;
        sub_1B6345178(v211, (unsigned __int16 **)v254, (uint64_t)v290);
        sub_1B634507C((char *)v220);
        uint64_t v67 = v209;
        ecs_stack_allocator_pop_snapshot(v209);
        int v68 = v206;
        if (v206)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v220 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v220 + 376));
        }
        swift_release();
        uint64_t v70 = v223 + 1;
        if (v223 + 1 == v214)
        {
          sub_1B632F220(v265, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          break;
        }
      }
    }
    sub_1B632F220(v265, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v239);
  }
  sub_1B63AB6F0(3, (uint64_t)v241);
  v258[0] = v241[0];
  v258[1] = v241[1];
  uint64_t v259 = v242;
  sub_1B62C9DA8(v191, (uint64_t)v258, 0x200000000, &v266);
  sub_1B62D8068((uint64_t)&v266, (uint64_t)v268, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v268[0]) {
    return (void *)sub_1B62CA064((uint64_t)v241);
  }
  long long v243 = v268[0];
  long long v244 = v268[1];
  uint64_t v218 = v270;
  uint64_t v245 = v269;
  uint64_t v125 = v271;
  uint64_t v126 = v272;
  unint64_t v127 = v273;
  uint64_t v128 = v274;
  sub_1B62CA064((uint64_t)v241);
  if (v128 <= 0 || !v125) {
    return sub_1B632F220(&v266, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v129 = v127[4];
  int v130 = *(unsigned __int8 *)(v126 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v131 = type metadata accessor for EmitterScript(0);
  v256[0] = v243;
  v256[1] = v244;
  uint64_t v257 = v245;
  uint64_t v198 = v127 + 8;
  uint64_t v201 = (uint64_t)(v127 + 6);
  uint64_t v204 = v131;
  uint64_t v195 = v131 - 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v132 = 0;
  uint64_t v212 = v127;
  uint64_t v215 = v125;
  uint64_t v210 = v129;
  int v207 = v130;
  while (1)
  {
    uint64_t v224 = v132;
    uint64_t v133 = (unsigned int *)(v218 + 48 * v132);
    uint64_t v134 = *v133;
    uint64_t v135 = v133[1];
    char v137 = (uint64_t *)*((void *)v133 + 2);
    uint64_t v136 = *((void *)v133 + 3);
    uint64_t v138 = *((void *)v133 + 5);
    uint64_t v234 = *((void *)v133 + 4);
    if (v130)
    {
      char v139 = *(os_unfair_lock_s **)(v138 + 376);
      swift_retain();
      os_unfair_lock_lock(v139);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v138 + 344));
    }
    else
    {
      swift_retain();
    }
    uint64_t v227 = v2;
    ecs_stack_allocator_push_snapshot(v129);
    sub_1B62D8068(v201, (uint64_t)v289, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v140 = v127[4];
    uint64_t v141 = *(void *)(*(void *)(*(void *)(*(void *)(v138 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v127[6] = ecs_stack_allocator_allocate(v140, 48 * v141, 8);
    v127[7] = v141;
    v198[1] = 0;
    _OWORD v198[2] = 0;
    *uint64_t v198 = 0;
    swift_release();
    uint64_t v221 = v138;
    uint64_t v142 = sub_1B62C9024(v204, (uint64_t)&off_1F0F5EBD0, v137, v136, v234, (uint64_t)v127);
    uint64_t v143 = v142;
    if (!v137) {
      break;
    }
    if (v234)
    {
      uint64_t v144 = v234;
      uint64_t v145 = 0;
      uint64_t v146 = *(void *)(*(void *)v195 + 72);
      uint64_t v231 = v146;
      while (1)
      {
        uint64_t v147 = v143 + v146 * v145;
        uint64_t v149 = *(void *)(v147 + 8);
        unint64_t v148 = *(void *)(v147 + 16);
        if (*(unsigned char *)v147)
        {
          if (*(unsigned char *)v147 != 1) {
            break;
          }
        }
        char v150 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v150)
        {
LABEL_112:
          uint64_t v235 = v149;
          uint64_t v236 = v148;
          sub_1B633AF88();
          if ((sub_1B6E32678() & 1) == 0) {
            goto LABEL_106;
          }
          id v151 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
          uint64_t v152 = (void *)sub_1B6E31768();
          uint64_t v235 = 0;
          id v153 = objc_msgSend(v151, sel_initWithPattern_options_error_, v152, 0, &v235);

          uint64_t v154 = (void *)v235;
          if (!v153) {
            goto LABEL_143;
          }
          uint64_t v155 = HIBYTE(v148) & 0xF;
          if ((v148 & 0x2000000000000000) == 0) {
            uint64_t v155 = v149;
          }
          uint64_t v156 = 7;
          if (((v148 >> 60) & ((v149 & 0x800000000000000) == 0)) != 0) {
            uint64_t v156 = 11;
          }
          uint64_t v235 = 15;
          uint64_t v236 = v156 | (v155 << 16);
          sub_1B6CC85A4(0, (unint64_t *)&qword_1E9DD66F8, MEMORY[0x1E4FBB128], MEMORY[0x1E4FBB138], MEMORY[0x1E4FBB6A0]);
          sub_1B6B979D4();
          id v157 = v154;
          swift_bridgeObjectRetain();
          uint64_t v158 = sub_1B6E32388();
          uint64_t v160 = v159;
          uint64_t v161 = (void *)sub_1B6E31768();
          unint64_t v162 = (void *)sub_1B6E31768();
          id v163 = objc_msgSend(v153, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v161, 0, v158, v160, v162);

          uint64_t v164 = sub_1B6E31798();
          uint64_t v166 = v165;

          *(void *)(v147 + 8) = v164;
          *(void *)(v147 + 16) = v166;
          swift_bridgeObjectRelease();
          ++v145;
          uint64_t v144 = v234;
          uint64_t v146 = v231;
          if (v145 == v234) {
            goto LABEL_136;
          }
        }
        else
        {
LABEL_106:
          *(void *)(v147 + 8) = v149;
          *(void *)(v147 + 16) = v148;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (++v145 == v144) {
            goto LABEL_136;
          }
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_112;
    }
LABEL_136:
    unint64_t v127 = v212;
    uint64_t v2 = v227;
    sub_1B6345178(v212, (unsigned __int16 **)v256, (uint64_t)v289);
    sub_1B634507C((char *)v221);
    uint64_t v129 = v210;
    ecs_stack_allocator_pop_snapshot(v210);
    int v130 = v207;
    if (v207)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v221 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v221 + 376));
    }
    swift_release();
    uint64_t v132 = v224 + 1;
    if (v224 + 1 == v215)
    {
      sub_1B632F220(&v266, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      return sub_1B632F220(&v266, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  if (v134 == v135) {
    goto LABEL_136;
  }
  uint64_t v167 = *(void *)(*(void *)v195 + 72);
  uint64_t v168 = ~v134 + v135;
  uint64_t v169 = (unint64_t *)(v142 + v167 * v134 + 16);
  while (2)
  {
    uint64_t v171 = *(v169 - 1);
    unint64_t v170 = *v169;
    if (*((unsigned char *)v169 - 16) && *((unsigned char *)v169 - 16) != 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v172 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v172 & 1) == 0) {
        goto LABEL_122;
      }
    }
    uint64_t v235 = v171;
    uint64_t v236 = v170;
    sub_1B633AF88();
    if ((sub_1B6E32678() & 1) == 0)
    {
LABEL_122:
      *(v169 - 1) = v171;
      *uint64_t v169 = v170;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (!v168) {
        goto LABEL_136;
      }
LABEL_123:
      --v168;
      uint64_t v169 = (unint64_t *)((char *)v169 + v167);
      continue;
    }
    break;
  }
  id v173 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  uint64_t v174 = (void *)sub_1B6E31768();
  uint64_t v235 = 0;
  id v175 = objc_msgSend(v173, sel_initWithPattern_options_error_, v174, 0, &v235);

  uint64_t v154 = (void *)v235;
  if (v175)
  {
    uint64_t v176 = HIBYTE(v170) & 0xF;
    if ((v170 & 0x2000000000000000) == 0) {
      uint64_t v176 = v171;
    }
    uint64_t v177 = 7;
    if (((v170 >> 60) & ((v171 & 0x800000000000000) == 0)) != 0) {
      uint64_t v177 = 11;
    }
    uint64_t v235 = 15;
    uint64_t v236 = v177 | (v176 << 16);
    sub_1B6CC85A4(0, (unint64_t *)&qword_1E9DD66F8, MEMORY[0x1E4FBB128], MEMORY[0x1E4FBB138], MEMORY[0x1E4FBB6A0]);
    sub_1B6B979D4();
    id v178 = v154;
    swift_bridgeObjectRetain();
    uint64_t v179 = sub_1B6E32388();
    uint64_t v181 = v180;
    uint64_t v182 = (void *)sub_1B6E31768();
    char v183 = (void *)sub_1B6E31768();
    id v184 = objc_msgSend(v175, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v182, 0, v179, v181, v183);

    uint64_t v185 = sub_1B6E31798();
    unint64_t v187 = v186;

    *(v169 - 1) = v185;
    *uint64_t v169 = v187;
    swift_bridgeObjectRelease();
    if (!v168) {
      goto LABEL_136;
    }
    goto LABEL_123;
  }
LABEL_143:
  id v190 = v154;
  sub_1B6E30D78();

  swift_willThrow();
LABEL_144:
  unint64_t result = (void *)swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B6CC6918(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1B6CC7454(v3, v1, v2);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBB390];
    v9[0] = 1;
    uint64_t v7 = aUserdata[0];
    uint64_t v8 = aUserdata[1];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6A3C3B0(v7, v8, (uint64_t)v9);
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
    return swift_release_n();
  }
  return result;
}

ValueMetadata *sub_1B6CC6A34(ValueMetadata *result, uint64_t a2, unsigned char *a3, unsigned char *a4)
{
  if (result != &type metadata for Parent)
  {
    uint64_t v5 = result;
    *a3 = (*a3 | (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 48))()) & 1;
    uint64_t v6 = swift_conformsToProtocol2();
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    if (v6) {
      uint64_t result = v5;
    }
    else {
      uint64_t result = 0;
    }
    if (result)
    {
      uint64_t result = (ValueMetadata *)(*(uint64_t (**)(void))(v7 + 64))();
      if ((~result & 0x2F00000) == 0) {
        *a4 = 1;
      }
    }
  }
  return result;
}

void sub_1B6CC6AFC(double a1, float32x4_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1B6D7CA24(0x100000000uLL, **(void **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues), (__n128)0, (__n128)xmmword_1B6E4F370, 1.0);
  _ZF = v5 == -1 && HIDWORD(v5) == 0;
  int v7 = _ZF;
  if (!_ZF)
  {
    uint64_t v8 = swift_retain();
    MEMORY[0x1F4188790](v8, v9);
    swift_bridgeObjectRetain();
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B663C1B0);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v10 = swift_retain();
    MEMORY[0x1F4188790](v10, v11);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6CC8528);
    swift_release();
  }
  v12.i64[0] = 0x3F0000003F000000;
  v12.i64[1] = 0x3F0000003F000000;
  simd_float4 v13 = (simd_float4)vmulq_f32(a2, v12);
  v13.i32[3] = 0;
  simd_float4 v29 = v13;
  simd_float4 v31 = _simd_cos_f4(v13);
  _Q0 = _simd_sin_f4(v29);
  _Q7 = v31;
  _S4 = vmuls_lane_f32(v31.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  if (!v7)
  {
    uint64_t v23 = swift_retain();
    MEMORY[0x1F4188790](v23, v24);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6CC8548);
    swift_release();
    uint64_t v25 = swift_retain();
    MEMORY[0x1F4188790](v25, v26);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6CC8568);
    swift_release();
    uint64_t v27 = swift_retain();
    MEMORY[0x1F4188790](v27, v28);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6CC8584);
    swift_release();
  }
}

void sub_1B6CC6E5C(_OWORD *a1)
{
  long long v1 = a1[1];
  v2[0] = *a1;
  v2[1] = v1;
  v2[2] = a1[2];
  sub_1B6CC4AD8((uint64_t)v2);
}

uint64_t sub_1B6CC6E90()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC6EA0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC6EB0(_OWORD *a1)
{
  return sub_1B68C904C(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

unint64_t sub_1B6CC6ED0(unint64_t result)
{
  int v1 = (result >> 59) & 2 | (result >> 2) & 1;
  if (v1)
  {
    if (v1 != 1) {
      return result;
    }
    result &= 0xEFFFFFFFFFFFFFFBLL;
  }
  return sub_1B6645740(result);
}

uint64_t sub_1B6CC6F00(uint64_t *a1)
{
  return sub_1B68C90D8(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1B6CC6F08()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC6F1C()
{
  sub_1B6CC6ED0(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1B6CC6F5C(uint64_t *a1)
{
  return sub_1B68C9090(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_1B6CC6FA0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC6FD8(uint64_t a1, uint64_t a2)
{
  sub_1B6CC70E0(0, &qword_1EB97E0E8, &qword_1EB97E0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6CC705C(uint64_t a1, uint64_t a2)
{
  sub_1B6CC70E0(0, qword_1EB97E108, &qword_1EB97E100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B6CC70E0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B6CC71C0(255, a3);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B6CC713C(uint64_t a1, uint64_t a2)
{
  sub_1B6CC70E0(0, &qword_1EB97E0F8, &qword_1EB97E0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B6CC71C0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t Result2 = type metadata accessor for QueryResult2();
    if (!v4) {
      atomic_store(Result2, a2);
    }
  }
}

uint64_t sub_1B6CC7228(uint64_t a1, uint64_t a2)
{
  sub_1B6CC72AC(0, &qword_1EB97E038, &qword_1EB97E030, (uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1F0F818E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B6CC72AC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1B6CC85A4(255, a3, a4, a5, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for QueryResult1);
    unint64_t v6 = sub_1B6E324B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B6CC731C(uint64_t a1, uint64_t a2)
{
  sub_1B6CC72AC(0, qword_1EB97E048, &qword_1EB97E040, (uint64_t)&type metadata for ParticleFluidSolver2DEmitter, (uint64_t)&off_1F0F99250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6CC73A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6CC73CC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC73DC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC73EC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC73FC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CC740C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6CC7454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  uint64_t v32 = v9;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  while (1)
  {
    do
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        uint64_t v13 = v10 + 1;
        if (v10 + 1 >= v8) {
          goto LABEL_30;
        }
        unint64_t v14 = *(void *)(v30 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v10 + 2;
          if (v10 + 2 >= v8) {
            goto LABEL_30;
          }
          unint64_t v14 = *(void *)(v30 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v10 + 3;
            if (v10 + 3 >= v8) {
              goto LABEL_30;
            }
            unint64_t v14 = *(void *)(v30 + 8 * v13);
            if (!v14)
            {
              uint64_t v13 = v10 + 4;
              if (v10 + 4 >= v8) {
                goto LABEL_30;
              }
              unint64_t v14 = *(void *)(v30 + 8 * v13);
              if (!v14)
              {
                uint64_t v13 = v10 + 5;
                if (v10 + 5 >= v8) {
                  goto LABEL_30;
                }
                unint64_t v14 = *(void *)(v30 + 8 * v13);
                if (!v14)
                {
                  while (v8 - 6 != v10)
                  {
                    unint64_t v14 = *(void *)(v9 + 8 * v10++ + 112);
                    if (v14)
                    {
                      uint64_t v13 = v10 + 5;
                      goto LABEL_19;
                    }
                  }
LABEL_30:
                  swift_release();
                  return 0;
                }
              }
            }
          }
        }
LABEL_19:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
        uint64_t v10 = v13;
      }
      uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * v12);
      id v16 = *(void **)(v15 + 80);
    }
    while (!v16[2]);
    unint64_t v35 = v7;
    uint64_t v36 = v10;
    uint64_t v31 = *(void *)(*(void *)(v9 + 48) + 16 * v12);
    uint64_t v17 = v16[4];
    uint64_t v18 = v16[5];
    uint64_t v19 = *(void **)(v15 + 88);
    uint64_t v20 = v19[4];
    unint64_t v21 = v19[5];
    uint64_t v22 = v19[7];
    uint64_t v37 = v19[8];
    uint64_t v38 = v19[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B629C9E8(v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v24 = 6245961;
    unint64_t v23 = 0xE300000000000000;
    _s12ParameterOutCMa();
    uint64_t inited = (void *)swift_initStackObject();
    swift_weakInit();
    swift_weakAssign();
    swift_bridgeObjectRelease();
    inited[3] = v17;
    inited[4] = v18;
    inited[5] = 6245961;
    inited[6] = 0xE300000000000000;
    inited[7] = v20;
    inited[8] = v21;
    inited[9] = v38;
    inited[10] = v22;
    inited[11] = v37;
    sub_1B633AF88();
    swift_bridgeObjectRetain();
    uint64_t v26 = (void *)sub_1B6E32688();
    swift_bridgeObjectRelease();
    if (v26[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_1B6C167C4(v26);
      }
      --v26[2];
      swift_bridgeObjectRelease();
      sub_1B62D89FC(0, (unint64_t *)&qword_1E9DD26F0, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBB320]);
      sub_1B6CC848C();
      sub_1B6655408();
      sub_1B6E31AD8();
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_1B6E31A68();
      unint64_t v23 = v27;
    }
    swift_release();
    if (v24 == v33 && v23 == v34)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v31;
    }
    char v28 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v28) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v9 = v32;
    unint64_t v7 = v35;
    uint64_t v10 = v36;
  }
  swift_release();
  return v31;
}

uint64_t sub_1B6CC78E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(void *)(*(void *)(a3 + 264) + 16))
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B62B2CE0(v4, a2);
    if (v5)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        unint64_t v7 = (void *)Strong;
        if (*(__objc2_class **)Strong == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
        {
          uint64_t v8 = *(void *)(Strong + 136);
          BOOL v9 = *(void *)(v8 + 336) == 0x726F6C6F43 && *(void *)(v8 + 344) == 0xE500000000000000;
          if (v9 || (sub_1B6E334B8() & 1) != 0)
          {
            uint64_t v23 = MEMORY[0x1E4FBB1A0];
            *(void *)&long long v22 = 0;
            *((void *)&v22 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6A3C61C(1701667182, 0xE400000000000000, (uint64_t)&v22, v21);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
            sub_1B62B57A8(v21, &v22);
            swift_dynamicCast();
            swift_release();
            if (v19 == 0x657461756C617645 && v20 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v10 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v10 & 1) == 0) {
                goto LABEL_28;
              }
            }
            uint64_t v11 = v7[6];
            uint64_t v12 = v7[11];
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v13 = sub_1B6BDC7CC(v11, v12);
            uint64_t v15 = v14;
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13 == 0xD00000000000001BLL && v15 == 0x80000001B6F50840)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v16 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v16 & 1) == 0) {
                goto LABEL_28;
              }
            }
            swift_retain();
            uint64_t v17 = (void *)sub_1B690ECC4(0x726F6C6F43, 0xE500000000000000, 0x657461756C617645, 0xE800000000000000, 0xD000000000000022, 0x80000001B6F50860);
            swift_release();
            if (v17)
            {
              sub_1B6A0FDA8((uint64_t)v7, v17, 0);
              swift_release();
              if (v7[2])
              {
                swift_retain();
                uint64_t v18 = swift_bridgeObjectRetain();
                sub_1B6BD1234(v18);
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_release();
                swift_release();
              }
              return swift_release();
            }
LABEL_28:
            swift_release();
            return swift_release();
          }
        }
        swift_release();
      }
      return swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6CC7CE4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(void *)(*(void *)(a3 + 264) + 16))
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B62B2CE0(v4, a2);
    if (v5)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        unint64_t v7 = (void *)Strong;
        if (*(__objc2_class **)Strong == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
        {
          uint64_t v8 = *(void *)(Strong + 136);
          BOOL v9 = *(void *)(v8 + 336) == 1752457549 && *(void *)(v8 + 344) == 0xE400000000000000;
          if (v9 || (sub_1B6E334B8() & 1) != 0)
          {
            uint64_t v23 = MEMORY[0x1E4FBB1A0];
            *(void *)&long long v22 = 0;
            *((void *)&v22 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6A3C61C(1701667182, 0xE400000000000000, (uint64_t)&v22, v21);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
            sub_1B62B57A8(v21, &v22);
            swift_dynamicCast();
            swift_release();
            if (v19 == 0x657461756C617645 && v20 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v10 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v10 & 1) == 0) {
                goto LABEL_28;
              }
            }
            uint64_t v11 = v7[6];
            uint64_t v12 = v7[11];
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v13 = sub_1B6BDC7CC(v11, v12);
            uint64_t v15 = v14;
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13 == 0xD000000000000017 && v15 == 0x80000001B6F50890)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v16 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              if ((v16 & 1) == 0) {
                goto LABEL_28;
              }
            }
            swift_retain();
            uint64_t v17 = (void *)sub_1B690ECC4(1752457549, 0xE400000000000000, 0x657461756C617645, 0xE800000000000000, 0xD00000000000001DLL, 0x80000001B6F508B0);
            swift_release();
            if (v17)
            {
              sub_1B6A0FDA8((uint64_t)v7, v17, 0);
              swift_release();
              if (v7[2])
              {
                swift_retain();
                uint64_t v18 = swift_bridgeObjectRetain();
                sub_1B6BD1234(v18);
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_release();
                swift_release();
              }
              return swift_release();
            }
LABEL_28:
            swift_release();
            return swift_release();
          }
        }
        swift_release();
      }
      return swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6CC80DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v23 = a3 + 104;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      if (!*(void *)(a4 + 16)) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
    uint64_t v13 = v6 + 1;
    if (v6 + 1 >= v25) {
      return sub_1B685E498(a1, a2, v24, a3);
    }
    unint64_t v14 = *(void *)(v7 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v6 + 2;
      if (v6 + 2 >= v25) {
        return sub_1B685E498(a1, a2, v24, a3);
      }
      unint64_t v14 = *(void *)(v7 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v6 + 3;
        if (v6 + 3 >= v25) {
          return sub_1B685E498(a1, a2, v24, a3);
        }
        unint64_t v14 = *(void *)(v7 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v6 + 4;
          if (v6 + 4 >= v25) {
            return sub_1B685E498(a1, a2, v24, a3);
          }
          unint64_t v14 = *(void *)(v7 + 8 * v13);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v6 = v13;
    if (!*(void *)(a4 + 16)) {
      goto LABEL_4;
    }
LABEL_20:
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v12);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B62B2CE0(v16, v17);
    char v19 = v18;
    swift_bridgeObjectRelease();
    swift_release();
    if ((v19 & 1) == 0)
    {
LABEL_4:
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      ++v24;
    }
  }
  while (v25 - 5 != v6)
  {
    unint64_t v14 = *(void *)(v23 + 8 * v6++);
    if (v14)
    {
      uint64_t v13 = v6 + 4;
      goto LABEL_19;
    }
  }
  return sub_1B685E498(a1, a2, v24, a3);
}

uint64_t sub_1B6CC82D0(uint64_t a1, uint64_t a2)
{
  v14[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, v10);
    bzero((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1B6CC80DC((void *)((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1B6CC80DC((unint64_t *)v12, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B84C0](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

unint64_t sub_1B6CC848C()
{
  unint64_t result = qword_1E9DD26F8;
  if (!qword_1E9DD26F8)
  {
    sub_1B62D89FC(255, (unint64_t *)&qword_1E9DD26F0, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD26F8);
  }
  return result;
}

uint64_t sub_1B6CC8508()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B6CC8518()
{
  return MEMORY[0x1F4186498](v0, 160, 15);
}

unint64_t sub_1B6CC8528(uint64_t a1)
{
  return sub_1B69FFED4(a1, *(__n128 **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1B6CC8548(uint64_t a1)
{
  return sub_1B69FFEA0(a1, *(__n128 **)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_1B6CC8568(void *a1)
{
  return sub_1B6B71F2C(a1, *(void *)(v1 + 24));
}

void *sub_1B6CC8584(void *a1)
{
  return sub_1B6B6D5A0(a1, *(__n128 **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B6CC85A4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B6CC85FC(_OWORD *a1)
{
  return sub_1B6CC6EB0(a1);
}

id sub_1B6CC8618(uint64_t a1)
{
  return objc_msgSend(v1, sel_drawPrimitives_vertexStart_vertexCount_instanceCount_, 4, 0, 4, a1);
}

id sub_1B6CC8638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(v10, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_baseVertex_baseInstance_, a1, a2, a3, a4, a5, a7);
}

uint64_t sub_1B6CC866C(float32x2_t *a1, uint64_t a2)
{
  long long v16 = xmmword_1B6E50D20;
  objc_msgSend(v2, sel_setVertexAmplificationCount_viewMappings_, 2, &v16);
  if (a2)
  {
    char v5 = sub_1B68C5868(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v6 = *((void *)v5 + 2);
    uint64_t v7 = 48 * v6;
    size_t v8 = a1 + 1;
    do
    {
      float32x2_t v9 = v8[-1];
      float32x2_t v10 = *v8;
      float32x2_t v11 = v8[1];
      unint64_t v12 = *((void *)v5 + 3);
      unint64_t v13 = v6 + 1;
      if (v6 >= v12 >> 1) {
        char v5 = sub_1B68C5868(v12 > 1, v6 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v13;
      unint64_t v14 = (float64x2_t *)&v5[v7];
      void v14[2] = vcvtq_f64_f32(v9);
      v14[3] = vcvtq_f64_f32(v10);
      v14[4] = vcvtq_f64_f32(v11);
      v7 += 48;
      v8 += 3;
      unint64_t v6 = v13;
      --a2;
    }
    while (a2);
  }
  sub_1B6E32318();
  return swift_bridgeObjectRelease();
}

id sub_1B6CC87A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(v4, sel_setVertexBuffer_offset_atIndex_, a1, a4 + a2);
}

id sub_1B6CC87B8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(v2, sel_drawPrimitives_vertexStart_vertexCount_instanceCount_, 1, 0, 2 * a1, a2);
}

id sub_1B6CC87D8(float a1)
{
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_rg_setLineWidth_))
  {
    uint64_t v3 = (void *)sub_1B6E31E78();
    objc_msgSend((id)swift_unknownObjectRetain(), sel_performSelector_withObject_, sel_rg_setLineWidth_, v3);

    return v1;
  }
  else
  {
    id result = (id)swift_dynamicCastObjCProtocolConditional();
    if (result)
    {
      *(float *)&double v5 = a1;
      return objc_msgSend(result, sel_setLineWidth_, v5);
    }
  }
  return result;
}

id sub_1B6CC8898(int8x16_t a1, float32x2_t a2)
{
  v4[0] = vcvtq_f64_f32(vmul_f32(*(float32x2_t *)a1.i8, a2));
  v4[1] = vcvtq_f64_f32(vmul_f32((float32x2_t)*(_OWORD *)&vextq_s8(a1, a1, 8uLL), a2));
  v4[2] = xmmword_1B6E500C0;
  return objc_msgSend(v2, sel_setViewport_, v4);
}

objc_class *sub_1B6CC8AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  float32x2_t v9 = v8;
  id result = (objc_class *)swift_getObjectType();
  if (a2)
  {
    if (a6 != 1 || a8)
    {
      if (a7 > 0 || a8)
      {
        v20.receiver = v9;
        v20.super_class = result;
        return (objc_class *)objc_msgSendSuper2(&v20, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_baseVertex_baseInstance_, a1, a2, a3, a4, a5, a6, a7, a8);
      }
      else
      {
        v21.receiver = v9;
        v21.super_class = result;
        return (objc_class *)objc_msgSendSuper2(&v21, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, a1, a2, a3, a4, a5, a6);
      }
    }
    else
    {
      v19.receiver = v9;
      v19.super_class = result;
      return (objc_class *)objc_msgSendSuper2(&v19, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_, a1, a2, a3, a4, a5);
    }
  }
  return result;
}

id sub_1B6CC9088()
{
  *(void *)&v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_scene] = 0;
  *(void *)&v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_effect] = 0;
  *(void *)&v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_texture] = 0;
  *(void *)&v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_depthTexture] = 0;
  *(void *)&v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_backgroundColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_pointOfView] = 0;
  v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_performMetalCaptureDuringSnapshot] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_postRenderCallback];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = v0;
  id v3 = MTLCreateSystemDefaultDevice();
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_newCommandQueue);
    *((void *)&v8 + 1) = 0;
    LODWORD(v8) = 0;
    BYTE4(v8) = 0;
    char v9 = 1;
    uint64_t v10 = 0;
    char v11 = 1;
    uint64_t v12 = 0;
    __int16 v13 = 257;
    uint64_t v14 = 260;
    char v15 = 0;
    uint64_t v16 = 0;
    type metadata accessor for Renderer();
    swift_allocObject();
    uint64_t v5 = sub_1B6390860(0, v4, &v8);
    swift_unknownObjectRelease();
    *(void *)&v2[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_renderer] = v5;

    v7.receiver = v2;
    v7.super_class = (Class)type metadata accessor for VFXRendererLegacy();
    return objc_msgSendSuper2(&v7, sel_init);
  }
  else
  {
    id result = (id)sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6CC9244()
{
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_scene];
  if (v1)
  {
    uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
    id v3 = v1;
    id v4 = v0;
    char v5 = sub_1B69E41EC(v2, v3, v4);
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v6 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v8 = 0;
    swift_retain();
    sub_1B6B33E34(v6, &v8, 0xD000000000000026, 0x80000001B6F50C50);
    swift_release();
    swift_release();
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1B6CC93C4(void *a1)
{
  uint64_t v2 = *(char **)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_scene];
  if (!v2)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v17 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v32[0] = 0;
    swift_retain();
    sub_1B6B33E34(v17, v32, 0xD000000000000023, 0x80000001B6F50BF0);
    swift_release();
    return swift_release();
  }
  if (!*(void *)(*(void *)&v2[OBJC_IVAR____TtC3VFX8VFXScene_entityManager]
                  + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  id v3 = v1;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_texture];
  if (!v4)
  {
    uint64_t v18 = qword_1EB9852D0;
    objc_super v19 = v2;
    if (v18 != -1) {
      swift_once();
    }
    swift_retain();
    int v20 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v32[0] = 0;
    swift_retain();
    sub_1B6B33E34(v20, v32, 0xD000000000000024, 0x80000001B6F50C20);

    swift_release();
    return swift_release();
  }
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_depthTexture];
  type metadata accessor for MTLTextureRenderOutput();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain_n();
  objc_super v7 = v2;
  uint64_t v8 = sub_1B67FF1A8(v4, v6);
  uint64_t v9 = v8;
  *(unsigned char *)(v8 + 136) = 0;
  uint64_t v10 = *(void **)&v3[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_backgroundColor];
  if (v10)
  {
    *(void *)(v8 + 32) = 2;
    id v11 = v10;
    v32[0] = 0;
    v32[1] = 0;
    uint64_t v12 = (CGColor *)objc_msgSend(v11, sel_CGColor);
    sub_1B684C4EC(v12);

    *(double *)(v9 + 40) = nullsub_1(v13);
    *(void *)(v9 + 48) = v14;
    *(void *)(v9 + 56) = v15;
    *(void *)(v9 + 64) = v16;
  }
  else
  {
    *(void *)(v8 + 32) = 1;
  }
  uint64_t v22 = *(void *)&v3[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_pointOfView];
  if (v22) {
    *(void *)(v9 + 80) = *(void *)(v22 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  }
  uint64_t v23 = *(void *)&v3[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_effect];
  if (v23)
  {
    v23 += OBJC_IVAR____TtC3VFX9VFXEffect_effectID;
    if ((*(unsigned char *)(v23 + 4) & 1) == 0)
    {
      LODWORD(v23) = *(_DWORD *)v23;
      BOOL v25 = v23 == dword_1E9E49870;
      if (v23 == dword_1E9E49870) {
        LODWORD(v23) = 0;
      }
      char v24 = 2 * v25;
      goto LABEL_27;
    }
    LODWORD(v23) = 0;
  }
  char v24 = 2;
LABEL_27:
  *(_DWORD *)(v9 + 72) = v23;
  *(unsigned char *)(v9 + 76) = v24;
  uint64_t v26 = *(void *)&v3[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_postRenderCallback];
  if (v26) {
    uint64_t v27 = *(void *)&v3[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_postRenderCallback + 8];
  }
  else {
    uint64_t v27 = 0;
  }
  uint64_t v28 = *(void *)(v9 + 112);
  *(void *)(v9 + 112) = v26;
  *(void *)(v9 + 120) = v27;
  sub_1B62C6A60(v26);
  sub_1B62C6A50(v28);
  simd_float4 v29 = v7;
  uint64_t v30 = v3;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v31 = swift_retain();
  sub_1B69DCF48(v31, v29, v30, v9, a1);

  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6CC9870(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v5)
  {
    char v39 = *(unsigned char *)(v5 + 536);
    uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX17VFXRendererLegacy_renderer);
    char v7 = *(unsigned char *)(v6 + 537);
    char v8 = *(unsigned char *)(v6 + 538);
    char v9 = *(unsigned char *)(v6 + 539);
    char v10 = *(unsigned char *)(v6 + 540);
    uint64_t v11 = *(void *)(v6 + 544);
    char v12 = *(unsigned char *)(v6 + 552);
    uint64_t v13 = *(void *)(v6 + 560);
    char v14 = *(unsigned char *)(v6 + 568);
    uint64_t v15 = *(void *)(v6 + 576);
    char v17 = *(unsigned char *)(v6 + 584);
    char v19 = *(unsigned char *)(v6 + 585);
    uint64_t v20 = *(void *)(v6 + 592);
    char v21 = *(unsigned char *)(v6 + 600);
    uint64_t v22 = *(void *)(v6 + 608);
    *(unsigned char *)(v5 + 536) = *(unsigned char *)(v6 + 536);
    char v23 = *(unsigned char *)(v5 + 537);
    *(unsigned char *)(v5 + 537) = v7;
    char v37 = *(unsigned char *)(v5 + 538);
    char v38 = v23;
    *(unsigned char *)(v5 + 538) = v8;
    char v24 = *(unsigned char *)(v5 + 539);
    *(unsigned char *)(v5 + 539) = v9;
    char v36 = *(unsigned char *)(v5 + 540);
    *(unsigned char *)(v5 + 540) = v10;
    uint64_t v35 = *(void *)(v5 + 544);
    *(void *)(v5 + 544) = v11;
    char v34 = *(unsigned char *)(v5 + 552);
    *(unsigned char *)(v5 + 552) = v12;
    uint64_t v33 = *(void *)(v5 + 560);
    *(void *)(v5 + 560) = v13;
    char v32 = *(unsigned char *)(v5 + 568);
    *(unsigned char *)(v5 + 568) = v14;
    uint64_t v31 = *(void *)(v5 + 576);
    *(void *)(v5 + 576) = v15;
    char v25 = *(unsigned char *)(v5 + 584);
    *(unsigned char *)(v5 + 584) = v17;
    char v29 = *(unsigned char *)(v5 + 585);
    char v30 = v25;
    *(unsigned char *)(v5 + 585) = v19;
    uint64_t v28 = *(void *)(v5 + 592);
    *(void *)(v5 + 592) = v20;
    char v27 = *(unsigned char *)(v5 + 600);
    *(unsigned char *)(v5 + 600) = v21;
    uint64_t v26 = *(void *)(v5 + 608);
    *(void *)(v5 + 608) = v22;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B6382348();
    sub_1B68831E4();
    sub_1B6CCB23C(a3, a4, 1, 0, v4);
    *(unsigned char *)(v5 + 536) = v39;
    *(unsigned char *)(v5 + 537) = v38;
    *(unsigned char *)(v5 + 538) = v37;
    *(unsigned char *)(v5 + 539) = v24;
    *(unsigned char *)(v5 + 540) = v36;
    *(void *)(v5 + 544) = v35;
    *(unsigned char *)(v5 + 552) = v34;
    *(void *)(v5 + 560) = v33;
    *(unsigned char *)(v5 + 568) = v32;
    *(void *)(v5 + 576) = v31;
    *(unsigned char *)(v5 + 584) = v30;
    *(unsigned char *)(v5 + 585) = v29;
    *(void *)(v5 + 592) = v28;
    *(unsigned char *)(v5 + 600) = v27;
    *(void *)(v5 + 608) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B6382348();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6CC9C3C(double a1, double a2, double a3)
{
  uint64_t v5 = v3;
  _OWORD v54[2] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B63BE100();
  MEMORY[0x1F4188790](v9 - 8, v10);
  char v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = 0;
  uint64_t v13 = sub_1B6E30F48();
  uint64_t v48 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = *(void **)&v5[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_scene];
  if (!v17)
  {
    sub_1B6E32BE8();
    __break(1u);
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v13);
    __break(1u);
LABEL_14:
    unint64_t v44 = v16;
    sub_1B6E30D78();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  uint64_t v18 = *(void *)&v5[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_renderer];
  char v19 = *(void **)(v18 + 16);
  uint64_t v20 = *(void **)(v18 + 312);
  char v21 = self;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v50 = v17;
  id v22 = objc_msgSend(v21, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 115, (uint64_t)a1, (uint64_t)a2, 0);
  objc_msgSend(v22, sel_setStorageMode_, 2);
  objc_msgSend(v22, sel_setUsage_, 5);
  id v53 = v19;
  id v51 = objc_msgSend(v19, sel_newTextureWithDescriptor_, v22);
  uint64_t v49 = OBJC_IVAR____TtC3VFX17VFXRendererLegacy_performMetalCaptureDuringSnapshot;
  if (v5[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_performMetalCaptureDuringSnapshot] != 1)
  {
    uint64_t v35 = v20;
    id v36 = v51;
    goto LABEL_9;
  }
  id v46 = v22;
  id v45 = objc_msgSend(self, sel_sharedCaptureManager);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F351D8]), sel_init);
  char v47 = v20;
  objc_msgSend(v23, sel_setCaptureObject_, v20);
  sub_1B6E30E48();
  char v24 = (void *)sub_1B6E30E78();
  uint64_t v4 = v48;
  char v25 = *(void (**)(char *, uint64_t))(v48 + 8);
  v25(v16, v13);
  objc_msgSend(v23, sel_setOutputURL_, v24);

  id v26 = objc_msgSend(self, sel_defaultManager);
  id v27 = objc_msgSend(v23, sel_outputURL);
  if (!v27) {
    goto LABEL_13;
  }
  uint64_t v28 = v27;
  sub_1B6E30EE8();

  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v16, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v13);
  char v29 = (void *)sub_1B6E30E78();
  v25(v12, v13);
  v54[0] = 0;
  LOBYTE(v28) = objc_msgSend(v26, sel_removeItemAtURL_error_, v29, v54);

  id v30 = v54[0];
  if ((v28 & 1) == 0)
  {
    uint64_t v31 = v30;
    char v32 = (void *)sub_1B6E30D78();

    swift_willThrow();
  }
  objc_msgSend(v23, sel_setDestination_, 2);
  v54[0] = 0;
  id v33 = v45;
  unsigned int v34 = objc_msgSend(v45, sel_startCaptureWithDescriptor_error_, v23, v54);
  uint64_t v16 = (char *)v54[0];
  id v22 = v46;
  uint64_t v35 = v47;
  id v36 = v51;
  if (!v34) {
    goto LABEL_14;
  }
  id v37 = v54[0];

LABEL_9:
  id v38 = objc_msgSend(v35, sel_commandBuffer);
  *(void *)&v5[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_texture] = v36;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v39 = v50;
  uint64_t v40 = v5;
  swift_unknownObjectRetain();
  uint64_t v41 = swift_retain();
  sub_1B69DD3FC(v41, v39, v40, v38, a3);
  swift_release();
  objc_msgSend(v38, sel_commit);
  if (v5[v49] == 1)
  {
    id v42 = objc_msgSend(self, sel_sharedCaptureManager);
    objc_msgSend(v42, sel_stopCapture);
  }
  objc_msgSend(v38, sel_waitUntilCompleted);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return (uint64_t)v36;
}

uint64_t sub_1B6CCA278(uint64_t result, uint64_t a2, void *a3, double a4)
{
  uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v5)
  {
    uint64_t v9 = (void *)result;
    char v44 = *(unsigned char *)(v5 + 536);
    char v42 = *(unsigned char *)(v5 + 538);
    char v43 = *(unsigned char *)(v5 + 537);
    uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC3VFX17VFXRendererLegacy_renderer);
    char v11 = *(unsigned char *)(v10 + 537);
    char v12 = *(unsigned char *)(v10 + 538);
    char v13 = *(unsigned char *)(v10 + 539);
    char v14 = *(unsigned char *)(v10 + 540);
    uint64_t v15 = *(void *)(v10 + 544);
    char v16 = *(unsigned char *)(v10 + 552);
    uint64_t v17 = *(void *)(v10 + 560);
    char v18 = *(unsigned char *)(v10 + 568);
    uint64_t v19 = *(void *)(v10 + 576);
    char v20 = *(unsigned char *)(v10 + 584);
    char v21 = *(unsigned char *)(v10 + 585);
    uint64_t v22 = *(void *)(v10 + 592);
    char v23 = *(unsigned char *)(v10 + 600);
    uint64_t v24 = *(void *)(v10 + 608);
    *(unsigned char *)(v5 + 536) = *(unsigned char *)(v10 + 536);
    char v25 = *(unsigned char *)(v5 + 539);
    *(unsigned char *)(v5 + 537) = v11;
    char v40 = *(unsigned char *)(v5 + 540);
    char v41 = v25;
    *(unsigned char *)(v5 + 538) = v12;
    uint64_t v26 = *(void *)(v5 + 544);
    *(unsigned char *)(v5 + 539) = v13;
    uint64_t v39 = v26;
    *(unsigned char *)(v5 + 540) = v14;
    LOBYTE(v26) = *(unsigned char *)(v5 + 552);
    *(void *)(v5 + 544) = v15;
    uint64_t v36 = *(void *)(v5 + 560);
    *(unsigned char *)(v5 + 552) = v16;
    *(void *)(v5 + 560) = v17;
    char v34 = *(unsigned char *)(v5 + 568);
    *(unsigned char *)(v5 + 568) = v18;
    char v35 = *(unsigned char *)(v5 + 584);
    *(unsigned char *)(v5 + 584) = v20;
    char v37 = v26;
    char v38 = *(unsigned char *)(v5 + 600);
    *(unsigned char *)(v5 + 600) = v23;
    uint64_t v27 = *(void *)(v5 + 576);
    *(void *)(v5 + 576) = v19;
    char v33 = *(unsigned char *)(v5 + 585);
    *(unsigned char *)(v5 + 585) = v21;
    uint64_t v32 = *(void *)(v5 + 592);
    *(void *)(v5 + 592) = v22;
    uint64_t v28 = *(void *)(v5 + 608);
    *(void *)(v5 + 608) = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B6382348();
    sub_1B68831E4();
    sub_1B69D6BB8(v4, v9, a4);
    sub_1B6CC93C4(a3);
    char v29 = *(void **)(a2 + OBJC_IVAR____TtC3VFX17VFXRendererLegacy_scene);
    if (v29)
    {
      id v30 = v29;
      uint64_t v31 = swift_retain();
      sub_1B69DD1E4(v31, v30);
      swift_release();
    }
    *(unsigned char *)(v5 + 536) = v44;
    *(unsigned char *)(v5 + 537) = v43;
    *(unsigned char *)(v5 + 538) = v42;
    *(unsigned char *)(v5 + 539) = v41;
    *(unsigned char *)(v5 + 540) = v40;
    *(void *)(v5 + 544) = v39;
    *(unsigned char *)(v5 + 552) = v37;
    *(void *)(v5 + 560) = v36;
    *(unsigned char *)(v5 + 568) = v34;
    *(void *)(v5 + 576) = v27;
    *(unsigned char *)(v5 + 584) = v35;
    *(unsigned char *)(v5 + 585) = v33;
    *(void *)(v5 + 592) = v32;
    *(unsigned char *)(v5 + 600) = v38;
    *(void *)(v5 + 608) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B6382348();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void __swiftcall MTLTexture.toImage()(UIImage_optional *__return_ptr retstr)
{
  if (objc_msgSend(v1, sel_storageMode) == (id)2)
  {
    sub_1B6BBDC04();
    swift_getObjectType();
    MTLTexture.toImage()(v2);
    swift_unknownObjectRelease();
    return;
  }
  if (qword_1EB97D488 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EB997928;
  id v4 = objc_msgSend(v1, sel_pixelFormat);
  uint32_t v5 = 16385;
  size_t v6 = 8;
  switch((unint64_t)v4)
  {
    case 'F':
    case 'G':
    case 'P':
      break;
    case 'Q':
      uint32_t v5 = 8194;
      size_t v6 = 8;
      break;
    case 's':
      if (qword_1EB97DA30 != -1) {
        swift_once();
      }
      id v7 = (id)qword_1EB997920;

      uint32_t v5 = 4353;
      size_t v6 = 16;
      id v3 = v7;
      break;
    default:
      sub_1B6E328C8();
      uint64_t v18 = _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)v4);
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      v21[0] = v18;
      v21[1] = v20;
      sub_1B6E31948();
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B6CCAB3CLL);
  }
  size_t v8 = (uint64_t)(4 * v6 * (void)objc_msgSend(v1, sel_width)) >> 3;
  uint64_t v9 = malloc(v8 * (void)objc_msgSend(v1, sel_height));
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1B6801D20((uint64_t)objc_msgSend(v1, sel_width), (uint64_t)objc_msgSend(v1, sel_height), v21);
    objc_msgSend(v1, sel_getBytes_bytesPerRow_fromRegion_mipmapLevel_, v10, v8, v21, 0);
    char v11 = CGBitmapContextCreate(v10, (size_t)objc_msgSend(v1, sel_width), (size_t)objc_msgSend(v1, sel_height), v6, v8, (CGColorSpaceRef)v3, v5);
    if (v11)
    {
      char v12 = v11;
      CGImageRef Image = CGBitmapContextCreateImage(v11);
      if (Image)
      {
        CGImageRef v14 = Image;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_, Image);

        free(v10);
        return;
      }
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v17 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v21[0] = 0;
      swift_retain();
      sub_1B6B33E34(v17, v21, 0xD000000000000028, 0x80000001B6F50A70);
      swift_release();
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v16 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v21[0] = 0;
      swift_retain();
      sub_1B6B33E34(v16, v21, 0xD00000000000001DLL, 0x80000001B6F50A50);
      swift_release();
    }
    swift_release();
    free(v10);
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v15 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v21[0] = 0;
    swift_retain();
    sub_1B6B33E34(v15, v21, 0xD00000000000001FLL, 0x80000001B6F50A30);
    swift_release();

    swift_release();
  }
}

id sub_1B6CCADF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VFXRendererLegacy();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VFXRendererLegacy()
{
  return self;
}

uint64_t *sub_1B6CCAF00(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  size_t v8 = (char *)a4 + 537;
  uint64_t v9 = sub_1B6E31468();
  uint64_t v28 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9, v10);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a3, sel_label, v11);
  if (v14)
  {
  }
  else
  {
    v42[0] = 0;
    v42[1] = 0xE000000000000000;
    sub_1B6E31948();
    uint64_t v29 = a2;
    id v30 = &off_1F0F8C668;
    sub_1B6CCB974();
    sub_1B6E32B18();
    int v15 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setLabel_, v15);
  }
  sub_1B637AE10(a3);
  a4[46] = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if ((*v8 & 1) == 0 && v8[2] != 1 && (v8[3] & 1) == 0)
  {
    sub_1B6E31458();
    sub_1B6E322E8();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v9);
  }
  a4[51] = objc_msgSend(*(id *)(a2 + 16), sel_pixelFormat);
  a4[59] = a4[74];
  *(unsigned char *)(a4[36] + 136) = 1;
  uint64_t v16 = sub_1B637BA68();
  char v18 = v17;
  swift_unknownObjectRetain();
  CFTimeInterval v19 = CACurrentMediaTime();
  uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler);
  type metadata accessor for WireframeLayerSystem();
  char v21 = *(os_unfair_lock_s **)(v20 + 56);
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v21);
  uint64_t v22 = sub_1B637B2D4();
  if (v23) {
    char v24 = 0;
  }
  else {
    char v24 = *(unsigned char *)(*(void *)(v20 + 96) + 96 * v22 + 105);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 56));
  swift_release();
  if (v18) {
    uint64_t v25 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v25 = v16;
  }
  sub_1B637B6F0((void *)v25, (uint64_t)v43);
  uint64_t v29 = a2;
  id v30 = &off_1F0F8C668;
  CFTimeInterval v31 = v19;
  uint64_t v32 = a3;
  char v33 = v24;
  long long v34 = v43[0];
  long long v35 = v43[1];
  long long v36 = v43[2];
  long long v37 = v43[3];
  long long v38 = v43[4];
  long long v39 = v43[5];
  uint64_t v40 = 0;
  char v41 = 0;
  nullsub_1(&v29);
  sub_1B6388B3C((uint64_t)(a4 + 78), (uint64_t)v42);
  sub_1B6388B3C((uint64_t)&v29, (uint64_t)(a4 + 78));
  return sub_1B637B268(v42);
}

void sub_1B6CCB23C(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v76 = a2;
  uint64_t v9 = sub_1B6E312D8();
  uint64_t v75 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v10);
  unint64_t v74 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B6E31288();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  MEMORY[0x1F4188790](v15, v16);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v22 = (char *)&v64 - v21;
  char v23 = *(void **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v23)
  {
    uint64_t v68 = a4;
    int v69 = a3;
    uint64_t v77 = a1;
    uint64_t v72 = v19;
    uint64_t v73 = v20;
    uint64_t v65 = v9;
    uint64_t v24 = qword_1EB97FF40;
    swift_retain();
    if (v24 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1B6E312C8();
    uint64_t v26 = sub_1B6385660(v25, (uint64_t)qword_1EB997E68);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v27(v22, a5 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v12);
    uint64_t v70 = v26;
    uint64_t v28 = sub_1B6E312A8();
    os_signpost_type_t v29 = sub_1B6E322B8();
    char v30 = sub_1B6E323F8();
    uint64_t v78 = v23;
    if (v30)
    {
      CFTimeInterval v31 = v73;
      v27(v73, (uint64_t)v22, v12);
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      os_signpost_id_t v33 = sub_1B6E31278();
      os_signpost_type_t v34 = v29;
      long long v35 = v31;
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v28, v34, v33, "render", "", v32, 2u);
      long long v36 = v32;
      char v23 = v78;
      MEMORY[0x1BA9B84C0](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v12);
    }
    else
    {

      long long v35 = v73;
    }
    uint64_t v66 = (void (*)(uint64_t, uint64_t, uint64_t))v27;
    uint64_t v67 = v13 + 16;
    v27(v35, (uint64_t)v22, v12);
    sub_1B6E31308();
    swift_allocObject();
    sub_1B6E312F8();
    long long v37 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    uint64_t v38 = v12;
    uint64_t v73 = (char *)(v13 + 8);
    uint64_t v71 = v37;
    v37((uint64_t)v22, v12);
    uint64_t v39 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
    int v40 = *(unsigned __int8 *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
    *(unsigned char *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 2;
    if (v40 != 2)
    {
      char v41 = *(void (**)(uint64_t))(a5 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
      if (v41)
      {
        swift_retain();
        v41(a5);
        sub_1B62C6A50((uint64_t)v41);
      }
    }
    char v42 = v76;
    uint64_t v43 = v77;
    sub_1B6CCAF00(a5, v77, v76, v23);
    uint64_t v44 = *(void *)(*(void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 24);
    swift_retain();
    if (v44)
    {
      id v46 = (uint64_t *)thread_worker_index(&thread_worker_index, v45);
      uint64_t v47 = *v46;
      uint64_t *v46 = 0;
      swift_retain();
      sub_1B62F38EC(4);
      uint64_t *v46 = v47;
      uint64_t v43 = v77;
      swift_release();
      swift_release();
    }
    sub_1B637B33C(v68);
    if (v69) {
      sub_1B637A478(v42);
    }
    uint64_t v48 = *(void *)(v43 + 96);
    if (v48)
    {
      uint64_t v49 = *(void *)(v43 + 104);
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v48;
      *(void *)(v50 + 24) = v49;
      aBlock[4] = sub_1B6CCB96C;
      aBlock[5] = v50;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1B638F0B8;
      aBlock[3] = &unk_1F0FBA338;
      id v51 = _Block_copy(aBlock);
      swift_retain_n();
      swift_release();
      objc_msgSend(v42, sel_addCompletedHandler_, v51);
      _Block_release(v51);
      sub_1B62C6A50(v48);
    }
    int v52 = *(unsigned __int8 *)(a5 + v39);
    *(unsigned char *)(a5 + v39) = 4;
    if (v52 != 4)
    {
      id v53 = *(void (**)(uint64_t))(a5 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
      if (v53)
      {
        swift_retain();
        v53(a5);
        sub_1B62C6A50((uint64_t)v53);
      }
    }
    uint64_t v54 = sub_1B6E312A8();
    uint64_t v55 = v72;
    sub_1B6E312E8();
    os_signpost_type_t v56 = sub_1B6E322A8();
    if (sub_1B6E323F8())
    {
      swift_retain();
      char v57 = v74;
      sub_1B6E31318();
      swift_release();
      uint64_t v58 = v75;
      uint64_t v59 = v65;
      if ((*(unsigned int (**)(char *, uint64_t))(v75 + 88))(v57, v65) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v60 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
        uint64_t v60 = "";
      }
      v66((uint64_t)v35, v55, v38);
      unint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v61 = 0;
      os_signpost_id_t v62 = sub_1B6E31278();
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v54, v56, v62, "render", v60, v61, 2u);
      MEMORY[0x1BA9B84C0](v61, -1, -1);

      uint64_t v63 = v71;
      v71(v55, v38);
      v63((uint64_t)v35, v38);
    }
    else
    {

      v71(v55, v38);
    }
    swift_release();
    swift_release();
  }
}

uint64_t sub_1B6CCB934()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CCB96C(uint64_t a1)
{
  return sub_1B6A9A538(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

unint64_t sub_1B6CCB974()
{
  unint64_t result = qword_1EB97E288;
  if (!qword_1EB97E288)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB97E288);
  }
  return result;
}

uint64_t sub_1B6CCB9C8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6CCBA00(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC3VFX17VFXRendererLegacy_depthTexture;
  *(void *)(v1 + OBJC_IVAR____TtC3VFX17VFXRendererLegacy_depthTexture) = a1;
  swift_unknownObjectRetain();
  uint64_t result = swift_unknownObjectRelease();
  if (*(void *)(v1 + v2))
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX17VFXRendererLegacy_renderer);
    *(void *)(v4 + 592) = objc_msgSend((id)swift_unknownObjectRetain(), sel_pixelFormat);
    sub_1B6382348();
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1B6CCBA94(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_scene] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_effect] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_texture] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_depthTexture] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_backgroundColor] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_pointOfView] = 0;
  v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_performMetalCaptureDuringSnapshot] = 0;
  id v3 = &v1[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_postRenderCallback];
  void *v3 = 0;
  v3[1] = 0;
  *((void *)&v7 + 1) = 0;
  LODWORD(v7) = 0;
  BYTE4(v7) = 0;
  char v8 = 1;
  uint64_t v9 = 0;
  char v10 = 1;
  uint64_t v11 = 0;
  __int16 v12 = 257;
  uint64_t v13 = 260;
  char v14 = 0;
  uint64_t v15 = 0;
  type metadata accessor for Renderer();
  swift_allocObject();
  uint64_t v4 = v1;
  swift_unknownObjectRetain();
  *(void *)&v4[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_renderer] = sub_1B6390860(0, a1, &v7);

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for VFXRendererLegacy();
  return objc_msgSendSuper2(&v6, sel_init);
}

ValueMetadata *type metadata accessor for RERendererConfiguration()
{
  return &type metadata for RERendererConfiguration;
}

uint64_t sub_1B6CCBBDC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B6C3D74C(0, v1, 0);
    uint64_t v2 = v18;
    unint64_t v4 = sub_1B6860A50(a1);
    uint64_t v5 = 0;
    int64_t v6 = *(void *)(v18 + 16);
    uint64_t v17 = a1 + 64;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8 * v4);
      unint64_t v8 = v6;
      uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8 * v4);
      unint64_t v10 = *(void *)(v18 + 24);
      ++v6;
      swift_retain();
      if (v8 >= v10 >> 1) {
        sub_1B6C3D74C(v10 > 1, v6, 1);
      }
      *(void *)(v18 + 16) = v6;
      uint64_t v11 = v18 + 16 * v8;
      *(void *)(v11 + 32) = v9;
      *(void *)(v11 + 40) = v7;
      unint64_t v12 = v4 >> 6;
      if ((*(void *)(v17 + 8 * (v4 >> 6)) & (-2 << v4)) != 0)
      {
        unint64_t v4 = __clz(__rbit64(*(void *)(v17 + 8 * (v4 >> 6)) & (-2 << v4))) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
        unint64_t v13 = v12 + 1;
        unint64_t v14 = (v4 + 63) >> 6;
        if (v12 + 1 < v14)
        {
          unint64_t v15 = *(void *)(v17 + 8 * v13);
          if (!v15)
          {
            unint64_t v13 = v12 + 2;
            if (v12 + 2 >= v14) {
              goto LABEL_4;
            }
            unint64_t v15 = *(void *)(v17 + 8 * v13);
            if (!v15)
            {
              while (v14 - 3 != v12)
              {
                unint64_t v15 = *(void *)(a1 + 88 + 8 * v12++);
                if (v15)
                {
                  unint64_t v13 = v12 + 2;
                  goto LABEL_10;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_10:
          unint64_t v4 = __clz(__rbit64(v15)) + (v13 << 6);
        }
      }
LABEL_4:
      ++v5;
    }
    while (v5 != v1);
  }
  return v2;
}

uint64_t sub_1B6CCBD8C(char a1)
{
  if (a1)
  {
    sub_1B6E31948();
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  sub_1B6E31948();
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  sub_1B6E31948();
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  sub_1B6E31948();
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  sub_1B6E31948();
  if ((a1 & 0x20) == 0)
  {
LABEL_7:
    if ((a1 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_17:
    sub_1B6E31948();
    if ((a1 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_16:
  sub_1B6E31948();
  if ((a1 & 0x40) != 0) {
    goto LABEL_17;
  }
LABEL_8:
  if (a1 < 0) {
LABEL_9:
  }
    sub_1B6E31948();
LABEL_10:
  uint64_t v2 = sub_1B6D48258();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1BA9B34C0](v2, v4, v6, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B6CCBF50()
{
  return sub_1B6CCBD8C(*v0);
}

uint64_t sub_1B6CCBF58@<X0>(uint64_t a1@<X8>)
{
  sub_1B6CCC114(v3);
  return sub_1B62CA210((uint64_t)v3, a1, &qword_1EB97EB68);
}

ValueMetadata *type metadata accessor for RenderPipelineFactory.Flags()
{
  return &type metadata for RenderPipelineFactory.Flags;
}

unint64_t sub_1B6CCBFB8()
{
  unint64_t result = qword_1E9DD82E8;
  if (!qword_1E9DD82E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD82E8);
  }
  return result;
}

unint64_t sub_1B6CCC010()
{
  unint64_t result = qword_1E9DD82F0;
  if (!qword_1E9DD82F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD82F0);
  }
  return result;
}

unint64_t sub_1B6CCC068()
{
  unint64_t result = qword_1E9DD82F8;
  if (!qword_1E9DD82F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD82F8);
  }
  return result;
}

unint64_t sub_1B6CCC0C0()
{
  unint64_t result = qword_1E9DD8300;
  if (!qword_1E9DD8300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8300);
  }
  return result;
}

double sub_1B6CCC114(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_1B6E4F270;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  return result;
}

void *sub_1B6CCC13C@<X0>(void *a1@<X8>)
{
  double result = sub_1B6303CBC(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t sub_1B6CCC16C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 208, 7);
}

void sub_1B6CCC1AC()
{
  if (!qword_1EB980608)
  {
    sub_1B62F3064(255, (unint64_t *)&unk_1EB97D850);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB980608);
    }
  }
}

uint64_t type metadata accessor for ParticleSizeOverVelocity.System()
{
  return self;
}

uint64_t sub_1B6CCC24C(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6CCE6E4(0, &qword_1E9DD8318, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CCE690();
  sub_1B6E33A88();
  uint64_t v13 = *v3;
  HIBYTE(v12) = 0;
  sub_1B67FEC7C();
  sub_1B6E32FA8();
  if (!v2)
  {
    LOBYTE(v13) = *((unsigned char *)v3 + 8);
    HIBYTE(v12) = 1;
    sub_1B66C60C4();
    sub_1B6E32FA8();
    uint64_t v13 = *(uint64_t *)((char *)v3 + 12);
    HIBYTE(v12) = 2;
    sub_1B62AA858();
    sub_1B62AA5EC(qword_1E9DD02C8);
    sub_1B6E32FA8();
    uint64_t v13 = *(uint64_t *)((char *)v3 + 20);
    HIBYTE(v12) = 3;
    sub_1B6E32FA8();
    uint64_t v13 = *(uint64_t *)((char *)v3 + 28);
    HIBYTE(v12) = 4;
    sub_1B6E32FA8();
    uint64_t v13 = *(uint64_t *)((char *)v3 + 36);
    HIBYTE(v12) = 5;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

const char *sub_1B6CCC50C()
{
  return "ParticleSizeOverVelocity";
}

uint64_t sub_1B6CCC520(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB7EC8(*a1, *a2);
}

uint64_t sub_1B6CCC52C()
{
  uint64_t result = 0x7469736F706D6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701080941;
      break;
    case 2:
      uint64_t result = 0x797469636F6C6576;
      break;
    case 3:
      uint64_t result = 0x65676E615278;
      break;
    case 4:
      uint64_t result = 0x65676E615279;
      break;
    case 5:
      uint64_t result = 0x65676E61527ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6CCC5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6CCC73C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6CCC620(uint64_t a1)
{
  unint64_t v2 = sub_1B6CCE690();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CCC65C(uint64_t a1)
{
  unint64_t v2 = sub_1B6CCE690();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6CCC698@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6CCE34C(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = *(_OWORD *)v7;
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)&v7[12];
    *(_OWORD *)((char *)a2 + 28) = *(_OWORD *)&v7[12];
  }
  return result;
}

uint64_t sub_1B6CCC6E0(void *a1)
{
  return sub_1B6CCC24C(a1);
}

uint64_t sub_1B6CCC6F8()
{
  return type metadata accessor for ParticleSizeOverVelocity.System();
}

double sub_1B6CCC718@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 1065353216;
  *(unsigned char *)(a1 + 8) = 0;
  double result = 0.0078125;
  *(_OWORD *)(a1 + 12) = xmmword_1B6E4F3A0;
  *(_OWORD *)(a1 + 28) = xmmword_1B6E4F3A0;
  return result;
}

uint64_t sub_1B6CCC73C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7469736F706D6F63 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469636F6C6576 && a2 == 0xED000065676E6152 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E615278 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676E615279 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65676E61527ALL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1B6CCC9B4(uint64_t *a1)
{
  uint64_t v336 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  swift_retain();
  sub_1B6960094(v2, &v324);
  swift_release();
  v208.i64[0] = v3;
  if (v324.n128_u8[8] == 3)
  {
    __int32 v4 = 0;
    unsigned __int8 v246 = 0;
    float32x2_t v254 = 0;
    float v5 = 0.0;
    int32x2_t v250 = (int32x2_t)COERCE_UNSIGNED_INT(1.0);
    float v241 = 1.0;
    float v6 = 1.0;
    float v7 = 1.0;
    float v8 = 0.0;
    float v9 = 1.0;
  }
  else
  {
    __int32 v4 = v324.n128_u8[0];
    unsigned __int8 v246 = v324.n128_u8[8];
    float v5 = v324.n128_f32[3];
    int32x2_t v10 = vshrn_n_s64(v325, 0x20uLL);
    float32x2_t v254 = (float32x2_t)v10;
    float v241 = *(float *)v325.i32;
    float v6 = *(float *)&v325.i32[2];
    v10.i32[0] = v324.n128_i32[1];
    int32x2_t v250 = v10;
    float v7 = *(float *)&v326;
    float v9 = *(float *)&v327;
    float v8 = *((float *)&v326 + 1);
  }
  long long v11 = *(_OWORD *)(a1 + 13);
  long long v292 = *(_OWORD *)(a1 + 11);
  long long v293 = v11;
  uint64_t v294 = a1[15];
  sub_1B663EED8((uint64_t)&v255);
  uint64_t v12 = v255;
  int v235 = v256;
  char v230 = v257;
  uint64_t v225 = v258;
  char v13 = v259;
  uint64_t v14 = v260;
  swift_retain();
  sub_1B663F0F8((uint64_t)&v261);
  uint64_t v15 = v261;
  int v220 = v262;
  char v216 = v263;
  uint64_t v214 = v264;
  char v16 = v265;
  uint64_t v17 = v266;
  swift_retain();
  sub_1B663EED8((uint64_t)v267);
  sub_1B636E080();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B6E77050;
  *(void *)(v18 + 32) = &type metadata for Scale1;
  *(void *)(v18 + 40) = &off_1F0FA0E48;
  sub_1B62AD184(v268);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v267);
  v206.i32[0] = v4;
  if (v4)
  {
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1B6E77050;
    *(void *)(v19 + 32) = &type metadata for TransientOriginScale;
    *(void *)(v19 + 40) = &off_1F0F843D8;
    sub_1B63B9C40(v19, 1, (uint64_t)&v269);
    sub_1B62CA064((uint64_t)&v255);
    swift_setDeallocating();
    swift_deallocClassInstance();
    sub_1B62CA064((uint64_t)&v255);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B6E77050;
    *(void *)(v20 + 32) = &type metadata for TransientOriginScale;
    *(void *)(v20 + 40) = &off_1F0F843D8;
    sub_1B63B9C40(v20, 1, (uint64_t)&v275);
    sub_1B62CA064((uint64_t)&v261);
    swift_setDeallocating();
    swift_deallocClassInstance();
    sub_1B62CA064((uint64_t)&v261);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1B6E77050;
    *(void *)(v21 + 32) = &type metadata for TransientOriginScale;
    *(void *)(v21 + 40) = &off_1F0F843D8;
    swift_retain();
    uint64_t v22 = v281;
    sub_1B63B9C40(v21, 1, (uint64_t)v281);
    swift_setDeallocating();
    swift_deallocClassInstance();
    sub_1B62CA064((uint64_t)v268);
    sub_1B62CA064((uint64_t)v268);
    uint64_t v15 = v275;
    int v23 = v276;
    char v24 = v277;
    uint64_t v25 = v278;
    char v16 = v279;
    uint64_t v17 = v280;
    uint64_t v12 = v269;
    int v26 = v270;
    char v27 = v271;
    uint64_t v28 = v272;
    char v13 = v273;
    uint64_t v14 = v274;
  }
  else
  {
    sub_1B62CA064((uint64_t)&v261);
    sub_1B62CA064((uint64_t)&v255);
    uint64_t v22 = v268;
    int v23 = v220;
    char v24 = v216;
    int v26 = v235;
    uint64_t v25 = v214;
    char v27 = v230;
    uint64_t v28 = v225;
  }
  int v29 = *((_DWORD *)v22 + 2);
  char v30 = v22[12];
  uint64_t v31 = *((void *)v22 + 2);
  char v32 = v22[24];
  uint64_t v33 = *((void *)v22 + 4);
  uint64_t v34 = *(void *)v22;
  uint64_t v307 = v12;
  int v308 = v26;
  char v309 = v27;
  uint64_t v310 = v28;
  char v311 = v13;
  uint64_t v312 = v14;
  uint64_t v301 = v15;
  int v302 = v23;
  char v303 = v24;
  uint64_t v304 = v25;
  char v305 = v16;
  uint64_t v306 = v17;
  uint64_t v295 = v34;
  int v296 = v29;
  char v297 = v30;
  float v35 = 0.0;
  uint64_t v298 = v31;
  char v299 = v32;
  uint64_t v300 = v33;
  if (v241 != v5)
  {
    float v35 = 1.0 / (float)(v241 - v5);
    float v5 = -(float)(v5 * v35);
  }
  float v251 = v6 - v254.f32[0];
  if (!v246)
  {
    uint64_t v82 = swift_retain();
    sub_1B62C9DA8(v82, (uint64_t)&v301, 0x200000000, &v313);
    sub_1B62CA210((uint64_t)&v313, (uint64_t)&v324, (unint64_t *)&qword_1EB97DC50);
    if (v324.n128_u64[0])
    {
      __n128 v285 = v324;
      int64x2_t v286 = v325;
      uint64_t v222 = v327;
      uint64_t v287 = v326;
      uint64_t v83 = v328;
      uint64_t v84 = v329;
      uint64_t v85 = v330;
      uint64_t v86 = v331;
      swift_release();
      if (v86 > 0 && v83)
      {
        uint64_t v243 = v85[4];
        int v237 = *(unsigned __int8 *)(v84 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v288[0] = v285;
        v288[1] = v286;
        uint64_t v289 = v287;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v87 = 0;
        uint64_t v88 = 0;
        uint64_t v218 = v83;
        do
        {
          uint64_t v248 = v88;
          id v89 = (unsigned int *)(v222 + 48 * v87);
          uint64_t v90 = (uint64_t *)*((void *)v89 + 2);
          uint64_t v91 = *((void *)v89 + 3);
          uint64_t v92 = *((void *)v89 + 4);
          uint64_t v93 = *((void *)v89 + 5);
          uint64_t v227 = v89[1];
          uint64_t v232 = *v89;
          if (v237)
          {
            id v94 = *(os_unfair_lock_s **)(v93 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v94);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v93 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v243);
          sub_1B62CA210((uint64_t)(v85 + 6), (uint64_t)&v333, &qword_1EB97DE20);
          uint64_t v95 = v85[4];
          uint64_t v96 = *(void *)(*(void *)(*(void *)(*(void *)(v93 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v85[6] = ecs_stack_allocator_allocate(v95, 48 * v96, 8);
          v85[7] = v96;
          v85[9] = 0;
          v85[10] = 0;
          v85[8] = 0;
          swift_release();
          uint64_t v97 = (float *)sub_1B62C9024((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, v90, v91, v92, (uint64_t)v85);
          uint64_t v98 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v90, v91, v92, (uint64_t)v85);
          if (v90)
          {
            for (uint64_t i = v218; v92; --v92)
            {
              int8x16_t v101 = (int8x16_t)vmulq_f32(*v98, *v98);
              float v102 = v254.f32[0]
                   + (float)(fminf(fmaxf(v5+ (float)(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v101.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v101, v101, 8uLL))))* v35), 0.0), 1.0)* v251);
              switch(v206.i32[0])
              {
                case 1:
                  float v100 = (float)(*(float *)v250.i32 * v102) + *v97;
                  break;
                case 2:
                  float v100 = (float)(*(float *)v250.i32 * v102) * *v97;
                  break;
                case 3:
                  float v100 = *v97 + (float)((float)(v102 - *v97) * *(float *)v250.i32);
                  break;
                default:
                  float v100 = *(float *)v250.i32 * v102;
                  break;
              }
              *v97++ = v100;
              ++v98;
            }
          }
          else
          {
            uint64_t i = v218;
            if (v232 != v227)
            {
              uint64_t v103 = v227 - v232;
              uint64_t v104 = &v98[v232];
              uint64_t v105 = &v97[v232];
              do
              {
                int8x16_t v107 = (int8x16_t)vmulq_f32(*v104, *v104);
                float v108 = v254.f32[0]
                     + (float)(fminf(fmaxf(v5+ (float)(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v107.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v107, v107, 8uLL))))* v35), 0.0), 1.0)* v251);
                switch(v206.i32[0])
                {
                  case 1:
                    float v106 = (float)(*(float *)v250.i32 * v108) + *v105;
                    break;
                  case 2:
                    float v106 = (float)(*(float *)v250.i32 * v108) * *v105;
                    break;
                  case 3:
                    float v106 = *v105 + (float)((float)(v108 - *v105) * *(float *)v250.i32);
                    break;
                  default:
                    float v106 = *(float *)v250.i32 * v108;
                    break;
                }
                *v105++ = v106;
                ++v104;
                --v103;
              }
              while (v103);
            }
          }
          uint64_t v88 = v248;
          sub_1B6345178(v85, (unsigned __int16 **)v288, (uint64_t)&v333);
          sub_1B634507C((char *)v93);
          ecs_stack_allocator_pop_snapshot(v243);
          if (v237)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 376));
          }
          swift_release();
          ++v87;
        }
        while (v87 != i);
        sub_1B632F170((uint64_t *)&v313);
        sub_1B632F170((uint64_t *)&v313);
        unsigned int v159 = v206.i32[0];
        goto LABEL_105;
      }
      sub_1B632F170((uint64_t *)&v313);
    }
    else
    {
      swift_release();
    }
    unsigned int v159 = v206.i32[0];
LABEL_105:
    swift_retain();
    uint64_t v160 = swift_retain();
    sub_1B62C9DA8(v160, (uint64_t)&v295, 0x200000000, v316);
    sub_1B62CA210((uint64_t)v316, (uint64_t)v317, (unint64_t *)&qword_1EB97DC50);
    if (!*(void *)&v317[0])
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_release_n();
    }
    long long v282 = v317[0];
    long long v283 = v317[1];
    uint64_t v229 = v319;
    uint64_t v284 = v318;
    uint64_t v161 = v320;
    uint64_t v162 = v321;
    id v163 = v322;
    uint64_t v164 = v323;
    swift_release();
    swift_release();
    if (v164 <= 0)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      swift_release();
      sub_1B632F170(v316);
      sub_1B632F170(v316);
      return swift_release();
    }
    if (!v161)
    {
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_140:
      swift_release();
      swift_release();
      sub_1B632F170(v316);
      uint64_t v158 = v316;
      goto LABEL_141;
    }
    uint64_t v245 = v163[4];
    char v165 = *(unsigned char *)(v162 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v290[0] = v282;
    v290[1] = v283;
    uint64_t v291 = v284;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v166 = 0;
    uint64_t v167 = v159;
    uint64_t v224 = v161;
    char v219 = v165;
    while (1)
    {
      uint64_t v168 = (unsigned int *)(v229 + 48 * v166);
      uint64_t v240 = *v168;
      uint64_t v234 = v168[1];
      unint64_t v170 = (uint64_t *)*((void *)v168 + 2);
      uint64_t v169 = *((void *)v168 + 3);
      uint64_t v172 = *((void *)v168 + 4);
      uint64_t v171 = *((void *)v168 + 5);
      if (v165)
      {
        id v173 = *(os_unfair_lock_s **)(v171 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v173);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v171 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v245);
      sub_1B62CA210((uint64_t)(v163 + 6), (uint64_t)v332, &qword_1EB97DE20);
      uint64_t v174 = v163[4];
      uint64_t v175 = *(void *)(*(void *)(*(void *)(*(void *)(v171 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v163[6] = ecs_stack_allocator_allocate(v174, 48 * v175, 8);
      v163[7] = v175;
      v163[9] = 0;
      v163[10] = 0;
      v163[8] = 0;
      swift_release();
      uint64_t v176 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v170, v169, v172, (uint64_t)v163);
      uint64_t v177 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v170, v169, v172, (uint64_t)v163);
      if (v170)
      {
        if (v172)
        {
          float32x4_t v179 = v208;
          float32x4_t v178 = v210;
          do
          {
            int8x16_t v183 = (int8x16_t)vmulq_f32(*v177, *v177);
            int32x2_t v184 = (int32x2_t)vadd_f32(*(float32x2_t *)v183.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v183, v183, 8uLL));
            *(float *)v184.i32 = v254.f32[0]
                               + (float)(fminf(fmaxf(v5 + (float)(sqrtf(vaddv_f32((float32x2_t)v184)) * v35), 0.0), 1.0)
                                       * v251);
            switch(v167)
            {
              case 1:
                *(float *)v184.i32 = *(float *)v250.i32 * *(float *)v184.i32;
                float32x4_t v182 = vaddq_f32((float32x4_t)vdupq_lane_s32(v184, 0), *v176);
                v182.i32[3] = v179.i32[3];
                float32x4_t v179 = v182;
                break;
              case 2:
                float32x4_t v182 = vmulq_n_f32(*v176, *(float *)v250.i32 * *(float *)v184.i32);
                v182.i32[3] = v178.i32[3];
                float32x4_t v178 = v182;
                break;
              case 3:
                float v180 = v176->f32[2];
                float v181 = *(float *)v250.i32 * (float)(*(float *)v184.i32 - v180);
                *(float32x2_t *)v182.f32 = vadd_f32(*(float32x2_t *)v176->f32, vmul_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(v184, 0), *(float32x2_t *)v176->f32), *(float *)v250.i32));
                v182.f32[2] = v180 + v181;
                goto LABEL_117;
              default:
                *(float *)v184.i32 = *(float *)v250.i32 * *(float *)v184.i32;
                float32x4_t v182 = (float32x4_t)vdupq_lane_s32(v184, 0);
LABEL_117:
                v182.i32[3] = 0;
                break;
            }
            *v176++ = v182;
            ++v177;
            --v172;
          }
          while (v172);
          float32x4_t v208 = v179;
          float32x4_t v210 = v178;
        }
      }
      else
      {
        float32x4_t v186 = v206;
        float32x4_t v185 = v207;
        if (v240 != v234)
        {
          uint64_t v188 = v234 - v240;
          id v189 = &v177[v240];
          id v190 = &v176[v240];
          uint64_t v187 = v224;
          do
          {
            int8x16_t v194 = (int8x16_t)vmulq_f32(*v189, *v189);
            int32x2_t v195 = (int32x2_t)vadd_f32(*(float32x2_t *)v194.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v194, v194, 8uLL));
            *(float *)v195.i32 = v254.f32[0]
                               + (float)(fminf(fmaxf(v5 + (float)(sqrtf(vaddv_f32((float32x2_t)v195)) * v35), 0.0), 1.0)
                                       * v251);
            switch(v167)
            {
              case 1:
                *(float *)v195.i32 = *(float *)v250.i32 * *(float *)v195.i32;
                float32x4_t v193 = vaddq_f32((float32x4_t)vdupq_lane_s32(v195, 0), *v190);
                v193.i32[3] = v186.i32[3];
                float32x4_t v186 = v193;
                break;
              case 2:
                float32x4_t v193 = vmulq_n_f32(*v190, *(float *)v250.i32 * *(float *)v195.i32);
                v193.i32[3] = v185.i32[3];
                float32x4_t v185 = v193;
                break;
              case 3:
                float v191 = v190->f32[2];
                float v192 = *(float *)v250.i32 * (float)(*(float *)v195.i32 - v191);
                *(float32x2_t *)v193.f32 = vadd_f32(*(float32x2_t *)v190->f32, vmul_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(v195, 0), *(float32x2_t *)v190->f32), *(float *)v250.i32));
                v193.f32[2] = v191 + v192;
                goto LABEL_130;
              default:
                *(float *)v195.i32 = *(float *)v250.i32 * *(float *)v195.i32;
                float32x4_t v193 = (float32x4_t)vdupq_lane_s32(v195, 0);
LABEL_130:
                v193.i32[3] = 0;
                break;
            }
            *v190++ = v193;
            ++v189;
            --v188;
          }
          while (v188);
          float32x4_t v206 = v186;
          float32x4_t v207 = v185;
          goto LABEL_126;
        }
      }
      uint64_t v187 = v224;
LABEL_126:
      sub_1B6345178(v163, (unsigned __int16 **)v290, (uint64_t)v332);
      sub_1B634507C((char *)v171);
      ecs_stack_allocator_pop_snapshot(v245);
      char v165 = v219;
      if (v219)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 376));
      }
      swift_release();
      if (++v166 == v187) {
        goto LABEL_140;
      }
    }
  }
  if (v246 == 1)
  {
    uint64_t v36 = swift_retain();
    sub_1B62C9DA8(v36, (uint64_t)&v307, 0x200000000, v317);
    sub_1B62CA210((uint64_t)v317, (uint64_t)&v324, (unint64_t *)&qword_1EB97DC50);
    if (v324.n128_u64[0])
    {
      __n128 v333 = v324;
      int64x2_t v334 = v325;
      uint64_t v221 = v327;
      uint64_t v335 = v326;
      uint64_t v37 = v328;
      uint64_t v38 = v329;
      long long v247 = v330;
      uint64_t v39 = v331;
      swift_release();
      if (v39 > 0 && v37)
      {
        uint64_t v40 = v247[4];
        char v242 = *(unsigned char *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        __n128 v313 = v333;
        int64x2_t v314 = v334;
        uint64_t v315 = v335;
        float32x2_t v212 = (float32x2_t)vdupq_lane_s32(v250, 0).u64[0];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        v43.f32[0] = v6 - v254.f32[0];
        v43.f32[1] = v7 - v254.f32[1];
        float32x2_t v252 = v43;
        uint64_t v44 = v206.u32[0];
        uint64_t v215 = v40;
        uint64_t v217 = v37;
        while (1)
        {
          double v45 = (unsigned int *)(v221 + 48 * v41);
          id v46 = (uint64_t *)*((void *)v45 + 2);
          uint64_t v47 = *((void *)v45 + 3);
          uint64_t v49 = *((void *)v45 + 4);
          uint64_t v48 = *((void *)v45 + 5);
          uint64_t v231 = *v45;
          uint64_t v236 = v41;
          uint64_t v226 = v45[1];
          uint64_t v50 = v42;
          if (v242)
          {
            id v51 = *(os_unfair_lock_s **)(v48 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v51);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v48 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v40);
          sub_1B62CA210((uint64_t)(v247 + 6), (uint64_t)v316, &qword_1EB97DE20);
          uint64_t v52 = v247[4];
          uint64_t v53 = *(void *)(*(void *)(*(void *)(*(void *)(v48 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v247[6] = ecs_stack_allocator_allocate(v52, 48 * v53, 8);
          v247[7] = v53;
          v247[9] = 0;
          v247[10] = 0;
          v247[8] = 0;
          swift_release();
          uint64_t v54 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v46, v47, v49, (uint64_t)v247);
          uint64_t v55 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v46, v47, v49, (uint64_t)v247);
          if (v46)
          {
            if (v49)
            {
              float32x4_t v57 = v205;
              float32x4_t v56 = v206;
              float32x4_t v59 = v203;
              float32x4_t v58 = v204;
              float32x4_t v60 = v202;
              do
              {
                int8x16_t v62 = (int8x16_t)vmulq_f32(*v55, *v55);
                float32x2_t v63 = vadd_f32(v254, vmul_n_f32(v252, fminf(fmaxf(v5+ (float)(v35* sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v62.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL))))), 0.0), 1.0)));
                *(float32x2_t *)v64.f32 = v63;
                v64.i64[1] = 1065353216;
                switch(v44)
                {
                  case 1:
                    float32x4_t v65 = vmulq_n_f32(v64, *(float *)v250.i32);
                    float32x4_t v61 = vaddq_f32(v65, *v54);
                    v65.i32[3] = v58.i32[3];
                    v61.i32[3] = v59.i32[3];
                    float32x4_t v58 = v65;
                    float32x4_t v59 = v61;
                    break;
                  case 2:
                    float32x4_t v66 = vmulq_n_f32(v64, *(float *)v250.i32);
                    float32x4_t v61 = vmulq_f32(v66, *v54);
                    v66.i32[3] = v56.i32[3];
                    v61.i32[3] = v57.i32[3];
                    float32x4_t v56 = v66;
                    float32x4_t v57 = v61;
                    break;
                  case 3:
                    *(float32x2_t *)v61.f32 = vadd_f32(*(float32x2_t *)v54->f32, vmul_f32(v212, vsub_f32(v63, *(float32x2_t *)v54->f32)));
                    v61.f32[2] = v54->f32[2] + (float)(*(float *)v250.i32 * (float)(1.0 - v54->f32[2]));
                    v61.i32[3] = 0;
                    break;
                  default:
                    float32x4_t v61 = vmulq_n_f32(v64, *(float *)v250.i32);
                    v61.i32[3] = v60.i32[3];
                    float32x4_t v60 = v61;
                    break;
                }
                *v54++ = v61;
                ++v55;
                --v49;
              }
              while (v49);
              float32x4_t v202 = v60;
              float32x4_t v203 = v59;
              float32x4_t v204 = v58;
              float32x4_t v205 = v57;
              float32x4_t v206 = v56;
            }
          }
          else
          {
            float32x4_t v68 = v200;
            float32x4_t v67 = v201;
            float32x4_t v70 = v198;
            float32x4_t v69 = v199;
            float32x4_t v71 = v197;
            if (v231 != v226)
            {
              uint64_t v73 = v226 - v231;
              unint64_t v74 = &v55[v231];
              uint64_t v75 = &v54[v231];
              uint64_t v40 = v215;
              uint64_t v72 = v217;
              do
              {
                int8x16_t v77 = (int8x16_t)vmulq_f32(*v74, *v74);
                float32x2_t v78 = vadd_f32(v254, vmul_n_f32(v252, fminf(fmaxf(v5+ (float)(v35* sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v77.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL))))), 0.0), 1.0)));
                *(float32x2_t *)v79.f32 = v78;
                v79.i64[1] = 1065353216;
                switch(v44)
                {
                  case 1:
                    float32x4_t v80 = vmulq_n_f32(v79, *(float *)v250.i32);
                    float32x4_t v76 = vaddq_f32(v80, *v75);
                    v80.i32[3] = v69.i32[3];
                    v76.i32[3] = v70.i32[3];
                    float32x4_t v69 = v80;
                    float32x4_t v70 = v76;
                    break;
                  case 2:
                    float32x4_t v81 = vmulq_n_f32(v79, *(float *)v250.i32);
                    float32x4_t v76 = vmulq_f32(v81, *v75);
                    v81.i32[3] = v67.i32[3];
                    v76.i32[3] = v68.i32[3];
                    float32x4_t v67 = v81;
                    float32x4_t v68 = v76;
                    break;
                  case 3:
                    *(float32x2_t *)v76.f32 = vadd_f32(*(float32x2_t *)v75->f32, vmul_f32(v212, vsub_f32(v78, *(float32x2_t *)v75->f32)));
                    v76.f32[2] = v75->f32[2] + (float)(*(float *)v250.i32 * (float)(1.0 - v75->f32[2]));
                    v76.i32[3] = 0;
                    break;
                  default:
                    float32x4_t v76 = vmulq_n_f32(v79, *(float *)v250.i32);
                    v76.i32[3] = v71.i32[3];
                    float32x4_t v71 = v76;
                    break;
                }
                *v75++ = v76;
                ++v74;
                --v73;
              }
              while (v73);
              float32x4_t v197 = v71;
              float32x4_t v198 = v70;
              float32x4_t v199 = v69;
              float32x4_t v200 = v68;
              float32x4_t v201 = v67;
              goto LABEL_31;
            }
          }
          uint64_t v40 = v215;
          uint64_t v72 = v217;
LABEL_31:
          uint64_t v42 = v50;
          sub_1B6345178(v247, (unsigned __int16 **)&v313, (uint64_t)v316);
          sub_1B634507C((char *)v48);
          ecs_stack_allocator_pop_snapshot(v40);
          if (v242)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 376));
          }
          swift_release();
          uint64_t v41 = v236 + 1;
          if (v236 + 1 == v72) {
            goto LABEL_99;
          }
        }
      }
      goto LABEL_98;
    }
    goto LABEL_100;
  }
  uint64_t v109 = swift_retain();
  sub_1B62C9DA8(v109, (uint64_t)&v307, 0x200000000, v317);
  sub_1B62CA210((uint64_t)v317, (uint64_t)&v324, (unint64_t *)&qword_1EB97DC50);
  if (v324.n128_u64[0])
  {
    __n128 v333 = v324;
    int64x2_t v334 = v325;
    uint64_t v223 = v327;
    uint64_t v335 = v326;
    uint64_t v110 = v328;
    uint64_t v111 = v329;
    long long v249 = v330;
    uint64_t v112 = v331;
    swift_release();
    if (v112 <= 0 || !v110)
    {
LABEL_98:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_99:
      swift_release();
      swift_release();
      sub_1B632F170((uint64_t *)v317);
      uint64_t v158 = (uint64_t *)v317;
LABEL_141:
      sub_1B632F170(v158);
      return swift_release();
    }
    *(float *)&unsigned int v238 = v7 - v254.f32[1];
    float v113 = v9 - v8;
    uint64_t v244 = v249[4];
    char v114 = *(unsigned char *)(v111 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    __n128 v313 = v333;
    int64x2_t v314 = v334;
    uint64_t v315 = v335;
    float32x2_t v213 = (float32x2_t)vdupq_lane_s32(v250, 0).u64[0];
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v115 = 0;
    uint64_t v116 = 0;
    float32x2_t v253 = (float32x2_t)__PAIR64__(v238, LODWORD(v251));
    uint64_t v117 = v206.u32[0];
    char v209 = v114;
    uint64_t v211 = v110;
    while (1)
    {
      uint64_t v118 = (unsigned int *)(v223 + 48 * v115);
      unint64_t v120 = (uint64_t *)*((void *)v118 + 2);
      uint64_t v119 = *((void *)v118 + 3);
      uint64_t v121 = *((void *)v118 + 4);
      uint64_t v122 = *((void *)v118 + 5);
      uint64_t v233 = *v118;
      uint64_t v239 = v116;
      uint64_t v228 = v118[1];
      if (v114)
      {
        uint64_t v123 = *(os_unfair_lock_s **)(v122 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v123);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v122 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v244);
      sub_1B62CA210((uint64_t)(v249 + 6), (uint64_t)v316, &qword_1EB97DE20);
      uint64_t v124 = v249[4];
      uint64_t v125 = *(void *)(*(void *)(*(void *)(*(void *)(v122 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v249[6] = ecs_stack_allocator_allocate(v124, 48 * v125, 8);
      v249[7] = v125;
      v249[9] = 0;
      v249[10] = 0;
      v249[8] = 0;
      swift_release();
      uint64_t v126 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v120, v119, v121, (uint64_t)v249);
      unint64_t v127 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v120, v119, v121, (uint64_t)v249);
      if (v120)
      {
        float32x4_t v129 = v206;
        float32x4_t v128 = v207;
        float32x4_t v130 = v205;
        if (v121)
        {
          uint64_t v131 = v211;
          uint64_t v116 = v239;
          float32x4_t v133 = v203;
          float32x4_t v132 = v204;
          do
          {
            int8x16_t v135 = (int8x16_t)vmulq_f32(*v127, *v127);
            float v136 = fminf(fmaxf(v5+ (float)(v35* sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v135.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL))))), 0.0), 1.0);
            float32x2_t v137 = vadd_f32(v254, vmul_n_f32(v253, v136));
            float v138 = v8 + (float)(v113 * v136);
            *(float32x2_t *)v139.f32 = v137;
            v139.i64[1] = LODWORD(v138);
            switch(v117)
            {
              case 1:
                float32x4_t v140 = vmulq_n_f32(v139, *(float *)v250.i32);
                float32x4_t v134 = vaddq_f32(v140, *v126);
                v140.i32[3] = v128.i32[3];
                v134.i32[3] = v129.i32[3];
                float32x4_t v128 = v140;
                float32x4_t v129 = v134;
                break;
              case 2:
                float32x4_t v141 = vmulq_n_f32(v139, *(float *)v250.i32);
                float32x4_t v134 = vmulq_f32(v141, *v126);
                v141.i32[3] = v132.i32[3];
                v134.i32[3] = v133.i32[3];
                float32x4_t v132 = v141;
                float32x4_t v133 = v134;
                break;
              case 3:
                *(float32x2_t *)v134.f32 = vadd_f32(*(float32x2_t *)v126->f32, vmul_f32(v213, vsub_f32(v137, *(float32x2_t *)v126->f32)));
                v134.f32[2] = v126->f32[2] + (float)(*(float *)v250.i32 * (float)(v138 - v126->f32[2]));
                v134.i32[3] = 0;
                break;
              default:
                float32x4_t v134 = vmulq_n_f32(v139, *(float *)v250.i32);
                v134.i32[3] = v130.i32[3];
                float32x4_t v130 = v134;
                break;
            }
            *v126++ = v134;
            ++v127;
            --v121;
          }
          while (v121);
          float32x4_t v205 = v130;
          float32x4_t v206 = v129;
          float32x4_t v207 = v128;
          float32x4_t v203 = v133;
          float32x4_t v204 = v132;
          char v114 = v209;
          goto LABEL_96;
        }
      }
      else
      {
        float32x4_t v142 = v202;
        float32x4_t v143 = v201;
        if (v233 != v228)
        {
          uint64_t v144 = v228 - v233;
          uint64_t v145 = &v127[v233];
          uint64_t v146 = &v126[v233];
          uint64_t v131 = v211;
          char v114 = v209;
          uint64_t v116 = v239;
          float32x4_t v148 = v199;
          float32x4_t v147 = v200;
          float32x4_t v149 = v198;
          do
          {
            int8x16_t v151 = (int8x16_t)vmulq_f32(*v145, *v145);
            float v152 = fminf(fmaxf(v5+ (float)(v35* sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v151.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v151, v151, 8uLL))))), 0.0), 1.0);
            float32x2_t v153 = vadd_f32(v254, vmul_n_f32(v253, v152));
            float v154 = v8 + (float)(v113 * v152);
            *(float32x2_t *)v155.f32 = v153;
            v155.i64[1] = LODWORD(v154);
            switch(v117)
            {
              case 1:
                float32x4_t v156 = vmulq_n_f32(v155, *(float *)v250.i32);
                float32x4_t v150 = vaddq_f32(v156, *v146);
                v156.i32[3] = v147.i32[3];
                v150.i32[3] = v142.i32[3];
                float32x4_t v142 = v150;
                float32x4_t v147 = v156;
                break;
              case 2:
                float32x4_t v157 = vmulq_n_f32(v155, *(float *)v250.i32);
                float32x4_t v150 = vmulq_f32(v157, *v146);
                v157.i32[3] = v149.i32[3];
                v150.i32[3] = v148.i32[3];
                float32x4_t v148 = v150;
                float32x4_t v149 = v157;
                break;
              case 3:
                *(float32x2_t *)v150.f32 = vadd_f32(*(float32x2_t *)v146->f32, vmul_f32(v213, vsub_f32(v153, *(float32x2_t *)v146->f32)));
                v150.f32[2] = v146->f32[2] + (float)(*(float *)v250.i32 * (float)(v154 - v146->f32[2]));
                v150.i32[3] = 0;
                break;
              default:
                float32x4_t v150 = vmulq_n_f32(v155, *(float *)v250.i32);
                v150.i32[3] = v143.i32[3];
                float32x4_t v143 = v150;
                break;
            }
            *v146++ = v150;
            ++v145;
            --v144;
          }
          while (v144);
          float32x4_t v198 = v149;
          float32x4_t v199 = v148;
          float32x4_t v200 = v147;
          float32x4_t v201 = v143;
          float32x4_t v202 = v142;
          goto LABEL_96;
        }
      }
      uint64_t v131 = v211;
      char v114 = v209;
      uint64_t v116 = v239;
LABEL_96:
      sub_1B6345178(v249, (unsigned __int16 **)&v313, (uint64_t)v316);
      sub_1B634507C((char *)v122);
      ecs_stack_allocator_pop_snapshot(v244);
      if (v114)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v122 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v122 + 376));
      }
      swift_release();
      if (++v115 == v131) {
        goto LABEL_99;
      }
    }
  }
LABEL_100:
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t getEnumTagSinglePayload for ParticleSizeOverVelocity(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 44)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSizeOverVelocity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)double result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 44) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSizeOverVelocity()
{
  return &type metadata for ParticleSizeOverVelocity;
}

uint64_t sub_1B6CCE34C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6CCE6E4(0, &qword_1E9DD8308, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  int32x2_t v10 = (char *)&v18 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CCE690();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v21 = 0;
  sub_1B63BD348();
  sub_1B6E32DF8();
  int v11 = v22;
  int v12 = HIDWORD(v22);
  char v21 = 1;
  sub_1B66C6070();
  sub_1B6E32DF8();
  int v19 = v22;
  int v20 = v11;
  sub_1B62AA858();
  char v21 = 2;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v13 = v22;
  char v21 = 3;
  sub_1B6E32DF8();
  uint64_t v14 = v22;
  char v21 = 4;
  sub_1B6E32DF8();
  uint64_t v15 = v22;
  char v21 = 5;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v16 = v22;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(unsigned char *)a2 = v20;
  *(_DWORD *)(a2 + 4) = v12;
  *(unsigned char *)(a2 + 8) = v19;
  *(void *)(a2 + 12) = v13;
  *(void *)(a2 + 20) = v14;
  *(void *)(a2 + 28) = v15;
  *(void *)(a2 + 36) = v16;
  return result;
}

unint64_t sub_1B6CCE690()
{
  unint64_t result = qword_1E9DD8310;
  if (!qword_1E9DD8310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8310);
  }
  return result;
}

void sub_1B6CCE6E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6CCE690();
    unint64_t v7 = a3(a1, &type metadata for ParticleSizeOverVelocity.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleSizeOverVelocity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CCE814);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSizeOverVelocity.CodingKeys()
{
  return &type metadata for ParticleSizeOverVelocity.CodingKeys;
}

unint64_t sub_1B6CCE850()
{
  unint64_t result = qword_1E9DD8320;
  if (!qword_1E9DD8320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8320);
  }
  return result;
}

unint64_t sub_1B6CCE8A8()
{
  unint64_t result = qword_1E9DD8328;
  if (!qword_1E9DD8328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8328);
  }
  return result;
}

unint64_t sub_1B6CCE900()
{
  unint64_t result = qword_1E9DD8330;
  if (!qword_1E9DD8330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8330);
  }
  return result;
}

uint64_t sub_1B6CCE954()
{
  swift_weakDestroy();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeapTextureAllocator()
{
  return self;
}

uint64_t sub_1B6CCE9C0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(a2 + 24);
  uint64_t v3 = *(unsigned int *)(a2 + 28);
  if (v2 != -1 || v3 != 0)
  {
    uint64_t v5 = result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
    {
      sub_1B6A952D0(v2 | (v3 << 32));
      swift_unknownObjectRelease();
    }
    swift_unownedRetainStrong();
    sub_1B62E364C((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA130, v2 | (v3 << 32));
    swift_release();
    unint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = swift_unknownObjectRelease();
    }
    if (*(unsigned char *)(v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v6[0] = v2;
      v6[1] = v3;
      char v7 = 1;
      char v8 = 6;
      sub_1B6A62610((uint64_t)v6);
      swift_release();
      return sub_1B67421B0((uint64_t)v6);
    }
  }
  return result;
}

uint64_t sub_1B6CCEADC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v6 = *(unsigned int *)(a2 + 24);
    uint64_t v7 = *(unsigned int *)(a2 + 28);
    if (v6 != -1 || v7 != 0)
    {
      uint64_t v9 = result;
      uint64_t v10 = *a1;
      swift_unownedRetainStrong();
      swift_release();
      swift_unownedRetainStrong();
      sub_1B62E280C(v4, v9, v6 | (v7 << 32), 0);
      swift_release();
      uint64_t result = swift_unknownObjectUnownedLoadStrong();
      if (result)
      {
        uint64_t v11 = result;
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v4, v9))
        {
          uint64_t v12 = v11 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
          uint64_t v13 = type metadata accessor for ScriptingConfiguration();
          ++*(void *)(v12 + *(int *)(v13 + 36));
        }
        uint64_t result = swift_unknownObjectRelease();
      }
      if (*((unsigned char *)a1 + 24) == 1)
      {
        swift_unownedRetainStrong();
        v14[0] = v6;
        v14[1] = v7;
        uint64_t v15 = v10;
        uint64_t v16 = v4;
        uint64_t v17 = v9;
        char v18 = 13;
        sub_1B6A62610((uint64_t)v14);
        swift_release();
        return sub_1B67421B0((uint64_t)v14);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6CCEC50(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  return sub_1B6CCECA8(a1, a2, a3, a4, a5, a6, type metadata accessor for ParticleInitScript, type metadata accessor for ParticleInitScript);
}

uint64_t sub_1B6CCEC7C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  return sub_1B6CCECA8(a1, a2, a3, a4, a5, a6, type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript);
}

uint64_t sub_1B6CCECA8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  int v15 = a3;
  uint64_t v55 = a7(0);
  MEMORY[0x1F4188790](v55, v16);
  uint64_t v54 = (char *)&v50 - v17;
  if (v15 == 5) {
    uint64_t v18 = sub_1B685E064(a4, a5);
  }
  else {
    uint64_t v18 = sub_1B6C2C804(a3, a4, a5);
  }
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    id v51 = a6;
    uint64_t v52 = a2;
    uint64_t v53 = a8;
    uint64_t v50 = 0;
    for (uint64_t i = (void *)(v18 + 40); ; i += 2)
    {
      int v21 = *((_DWORD *)i - 2);
      int v22 = *((_DWORD *)i - 1);
      uint64_t v23 = *i;
      swift_retain();
      if ((v21 != -1 || v22 != 0)
        && (v21 & 0x80000000) == 0
        && *(void *)(v23 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v21)
      {
        uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        if (v22 == -1 || *(_DWORD *)(v25 + 12 * v21 + 8) == v22)
        {
          uint64_t v26 = *(void *)(*(void *)(*(void *)(v23 + 80) + 8 * *(__int16 *)(v25 + 12 * v21 + 6) + 32) + 16);
          uint64_t v27 = *(void *)(v26 + 128);
          if (*(void *)(v27 + 16))
          {
            unint64_t v28 = sub_1B62C1A30(a1);
            if (v29)
            {
              uint64_t v30 = *(void *)(*(void *)(v26 + 24) + 16 * *(void *)(*(void *)(v27 + 56) + 8 * v28) + 32);
              swift_release();
              if (v30 != a1) {
                goto LABEL_15;
              }
              uint64_t v31 = *(void *)(v52 + 8);
              type metadata accessor for VFXAttribute();
              uint64_t v32 = swift_allocObject();
              *(void *)(v32 + 16) = v23;
              swift_retain();
              swift_unownedRetain();
              swift_release();
              *(_DWORD *)(v32 + 24) = v21;
              *(_DWORD *)(v32 + 28) = v22;
              *(void *)(v32 + 32) = a1;
              *(void *)(v32 + 40) = v31;
              uint64_t v33 = swift_conformsToProtocol2();
              if (v33) {
                uint64_t v34 = v33;
              }
              else {
                uint64_t v34 = 0;
              }
              if (v33) {
                uint64_t v35 = a1;
              }
              else {
                uint64_t v35 = 0;
              }
              uint64_t v36 = *(void *)(v32 + 16);
              swift_unownedRetainStrong();
              unsigned int v37 = *(_DWORD *)(v32 + 28);
              uint64_t v38 = *(int *)(v32 + 24);
              if (__PAIR64__(v37, v38) == 0xFFFFFFFF
                || (v38 & 0x80000000) != 0
                || *(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v38
                || (uint64_t v45 = *(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v37 != -1)
                && *(_DWORD *)(v45 + 12 * (int)v38 + 8) != v37)
              {
                uint64_t v61 = 0;
                long long v59 = 0u;
                long long v60 = 0u;
              }
              else
              {
                id v46 = (unsigned int *)(v45 + 12 * (int)v38);
                uint64_t v47 = v35;
                uint64_t v48 = v50;
                sub_1B6BFCAD8(*(void *)(*(void *)(v36 + 136) + 8 * (int)*v46 + 32), v47, v34, *v46 | ((unint64_t)*((unsigned __int16 *)v46 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v46 + 2) << 32), v36, (uint64_t)&v59);
                uint64_t v50 = v48;
              }
              swift_release();
              uint64_t v39 = *((void *)&v60 + 1);
              if (!*((void *)&v60 + 1))
              {
                uint64_t result = sub_1B62C5F0C((uint64_t)&v59, (uint64_t (*)(void))sub_1B66625A8);
                __break(1u);
                return result;
              }
              uint64_t v40 = v61;
              uint64_t v41 = sub_1B62C14BC(&v59, *((uint64_t *)&v60 + 1));
              uint64_t v57 = v39;
              uint64_t v58 = *(void *)(v40 + 8);
              uint64_t v42 = sub_1B62C12C4((uint64_t *)&v56);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v42, v41, v39);
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v59);
              sub_1B62C15C4(&v56, (uint64_t)&v59);
              sub_1B62C5560(0, (unint64_t *)&qword_1EB97FFF0);
              uint64_t v43 = (uint64_t)v54;
              swift_dynamicCast();
              char v44 = *(unsigned char *)(v43 + 40);
              sub_1B62C5F0C(v43, v53);
              if (v44) {
                *id v51 = v32;
              }
            }
          }
        }
      }
      swift_release();
LABEL_15:
      if (!--v19) {
        return swift_bridgeObjectRelease();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CCF0C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, unsigned char *a8, unint64_t a9, uint64_t a10)
{
  if (a3 == 5) {
    uint64_t v15 = sub_1B685E064(a4, a5);
  }
  else {
    uint64_t v15 = sub_1B6C2C804(a3, a4, a5);
  }
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v32 = a8;
    uint64_t v33 = a1;
    uint64_t v17 = (void *)(v15 + 40);
    char v31 = a7 & 1;
    while (1)
    {
      int v18 = *((_DWORD *)v17 - 2);
      int v19 = *((_DWORD *)v17 - 1);
      uint64_t v20 = *v17;
      swift_retain();
      if (v18 == -1 && v19 == 0) {
        goto LABEL_18;
      }
      if (v18 < 0) {
        goto LABEL_18;
      }
      if (*(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v18) {
        goto LABEL_18;
      }
      uint64_t v22 = *(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v19 != -1 && *(_DWORD *)(v22 + 12 * v18 + 8) != v19) {
        goto LABEL_18;
      }
      uint64_t v23 = *(void *)(*(void *)(*(void *)(v20 + 80) + 8 * *(__int16 *)(v22 + 12 * v18 + 6) + 32) + 16);
      uint64_t v24 = *(void *)(v23 + 128);
      if (!*(void *)(v24 + 16)) {
        goto LABEL_18;
      }
      unint64_t v25 = sub_1B62C1A30(v33);
      if ((v26 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v27 = *(void *)(*(void *)(v23 + 24) + 16 * *(void *)(*(void *)(v24 + 56) + 8 * v25) + 32);
      swift_release();
      if (v27 == v33) {
        break;
      }
LABEL_19:
      v17 += 2;
      if (!--v16) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v28 = *(void *)(a2 + 8);
    type metadata accessor for VFXAttribute();
    swift_retain();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v20;
    swift_unownedRetain();
    swift_release();
    *(_DWORD *)(inited + 24) = v18;
    *(_DWORD *)(inited + 28) = v19;
    *(void *)(inited + 32) = v33;
    *(void *)(inited + 40) = v28;
    sub_1B6873910(inited, a6, v31, v32, a9, a10);
LABEL_18:
    swift_release();
    goto LABEL_19;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CCF2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v5 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v59 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v6);
  char v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v45 - v11;
  sub_1B6C0A0CC();
  uint64_t v13 = sub_1B6E32C28();
  uint64_t v14 = 0;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 64);
  uint64_t v50 = &v70;
  uint64_t v48 = v75;
  uint64_t v62 = v13;
  uint64_t v57 = v13 + 64;
  int64_t v53 = (unint64_t)(v15 + 63) >> 6;
  int64_t v47 = v53 - 5;
  uint64_t v52 = a1 + 64;
  uint64_t v46 = a1 + 104;
  uint64_t v51 = a1;
  uint64_t v49 = a3;
  uint64_t v54 = v5;
  uint64_t v58 = v12;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      uint64_t v76 = v14;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_19;
    }
    uint64_t v22 = v14 + 1;
    if (v14 + 1 >= v53) {
      return v62;
    }
    unint64_t v23 = *(void *)(v52 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v14 + 2;
      if (v14 + 2 >= v53) {
        return v62;
      }
      unint64_t v23 = *(void *)(v52 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v14 + 3;
        if (v14 + 3 >= v53) {
          return v62;
        }
        unint64_t v23 = *(void *)(v52 + 8 * v22);
        if (!v23)
        {
          uint64_t v22 = v14 + 4;
          if (v14 + 4 >= v53) {
            return v62;
          }
          unint64_t v23 = *(void *)(v52 + 8 * v22);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v76 = v22;
LABEL_19:
    uint64_t v24 = *(void *)(a1 + 48);
    uint64_t v25 = *(void *)(a1 + 56);
    uint64_t v68 = 8 * v21;
    char v26 = (int *)(v24 + 8 * v21);
    int v27 = *v26;
    LODWORD(v26) = *((unsigned __int8 *)v26 + 4);
    int v65 = v27;
    int v66 = (int)v26;
    unint64_t v67 = *(void *)(v59 + 72) * v21;
    sub_1B6CA5F84(v25 + v67, (uint64_t)v12);
    sub_1B6CA5F84((uint64_t)v12, (uint64_t)v8);
    uint64_t v28 = *(int *)(v5 + 44);
    uint64_t v29 = *(void *)&v8[v28];
    if (v29)
    {
      uint64_t v30 = v55;
      unint64_t v31 = *(void *)(v55 + 16);
      swift_unownedRetainStrong();
      uint64_t v64 = *(unsigned int *)(v30 + 24);
      uint64_t v63 = *(unsigned int *)(v30 + 28);
      swift_retain();
      swift_release();
      uint64_t v32 = *(void *)(v29 + 32);
      uint64_t v33 = swift_conformsToProtocol2();
      if (v33) {
        uint64_t v34 = v33;
      }
      else {
        uint64_t v34 = 0;
      }
      if (v33) {
        uint64_t v35 = v32;
      }
      else {
        uint64_t v35 = 0;
      }
      uint64_t v60 = v35;
      uint64_t v61 = v34;
      if (v35)
      {
        uint64_t v36 = *(void *)(v31 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v36)
        {
          int v37 = *(unsigned __int8 *)(v36 + 80);
          MEMORY[0x1BA9B8670](v36 + 48);
          uint64_t v36 = *(void *)(v36 + 56);
        }
        else
        {
          int v37 = 0;
        }
        uint64_t v71 = 0;
        swift_unknownObjectUnownedInit();
        unint64_t v69 = v31;
        uint64_t v71 = v36;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        int v56 = v37;
        LOBYTE(v72) = v37;
        sub_1B636C4E0((uint64_t)&v69, (uint64_t)&v74);
        if (v64 != -1 || v63)
        {
          uint64_t v38 = v74;
          swift_unownedRetainStrong();
          swift_release();
          swift_unownedRetainStrong();
          sub_1B62E280C(v60, v61, v64 | (v63 << 32), 0);
          swift_release();
          uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
          if (Strong)
          {
            uint64_t v40 = Strong;
            if ((*(uint64_t (**)(void))(v61 + 24))())
            {
              uint64_t v41 = v40 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
              uint64_t v42 = type metadata accessor for ScriptingConfiguration();
              ++*(void *)(v41 + *(int *)(v42 + 36));
            }
            swift_unknownObjectRelease();
          }
          if (v75[16] == 1)
          {
            swift_unownedRetainStrong();
            unint64_t v69 = __PAIR64__(v63, v64);
            uint64_t v70 = v38;
            uint64_t v71 = v60;
            uint64_t v72 = v61;
            char v73 = 13;
            sub_1B6A62610((uint64_t)&v69);
            swift_release();
            sub_1B67421B0((uint64_t)&v69);
          }
        }
        sub_1B636C450((uint64_t)&v74);
        if (v56) {
          sub_1B6A667F0(1);
        }
        swift_release();
        a1 = v51;
      }
      swift_release();
      swift_release();
      *(void *)&v8[v28] = 0;
      uint64_t v5 = v54;
    }
    uint64_t v43 = &v8[*(int *)(v5 + 48)];
    if ((v43[8] & 1) == 0)
    {
      sub_1B69DE144(*(void *)v43);
      *(void *)uint64_t v43 = 0;
      v43[8] = 1;
    }
    uint64_t v12 = v58;
    sub_1B62C5F0C((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(void *)(v57 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v18 = v62;
    uint64_t v19 = *(void *)(v62 + 48) + v68;
    *(_DWORD *)uint64_t v19 = v65;
    *(unsigned char *)(v19 + 4) = v66;
    sub_1B6CD0008((uint64_t)v8, *(void *)(v18 + 56) + v67);
    ++*(void *)(v18 + 16);
    uint64_t v14 = v76;
  }
  while (v47 != v14)
  {
    unint64_t v23 = *(void *)(v46 + 8 * v14++);
    if (v23)
    {
      uint64_t v22 = v14 + 4;
      goto LABEL_18;
    }
  }
  return v62;
}

uint64_t sub_1B6CCF8F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 == 5) {
    uint64_t v8 = sub_1B685E064(a4, a5);
  }
  else {
    uint64_t v8 = sub_1B6C2C804(a3, a4, a5);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v29 = a1;
    uint64_t v10 = (uint64_t *)(v8 + 40);
    do
    {
      uint64_t v12 = *((unsigned int *)v10 - 2);
      uint64_t v11 = *((unsigned int *)v10 - 1);
      uint64_t v13 = *v10;
      swift_retain();
      BOOL v14 = v12 == -1 && v11 == 0;
      if (!v14
        && (v12 & 0x80000000) == 0
        && *(void *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v12
        && ((uint64_t v15 = *(void *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v11 == -1)
         || *(_DWORD *)(v15 + 12 * (int)v12 + 8) == v11)
        && (uint64_t v16 = *(void *)(*(void *)(*(void *)(v13 + 80) + 8 * *(__int16 *)(v15 + 12 * (int)v12 + 6) + 32)
                            + 16),
            uint64_t v17 = *(void *)(v16 + 128),
            *(void *)(v17 + 16))
        && (unint64_t v18 = sub_1B62C1A30(v29), (v19 & 1) != 0))
      {
        uint64_t v20 = *(void *)(*(void *)(v16 + 24) + 16 * *(void *)(*(void *)(v17 + 56) + 8 * v18) + 32);
        swift_release();
        if (v20 == v29)
        {
          uint64_t v27 = *(void *)(a2 + 8);
          type metadata accessor for VFXAttribute();
          swift_retain();
          uint64_t inited = swift_initStackObject();
          *(void *)(inited + 16) = v13;
          swift_unownedRetain();
          swift_release();
          *(_DWORD *)(inited + 24) = v12;
          *(_DWORD *)(inited + 28) = v11;
          *(void *)(inited + 32) = v29;
          *(void *)(inited + 40) = v27;
          sub_1B695E090(v12 | (v11 << 32), (uint64_t)&v31);
          uint64_t v23 = v32;
          uint64_t v22 = v33;
          int v24 = v34 | (v35 << 16);
          LODWORD(v27) = v31;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v25 = sub_1B6CCF2EC(v22, inited, a6);
          swift_release();
          swift_release();
          swift_retain();
          swift_bridgeObjectRelease_n();
          unsigned int v28 = v28 & 0xFF000000 | v24 & 1 | v24 & 0x100 | v24 & 0x10000;
          sub_1B68504C0(v27, v23, v25, v28, *(void *)(inited + 24));
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_release();
      }
      v10 += 2;
      --v9;
    }
    while (v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6CCFBE0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 == 5) {
    uint64_t v11 = sub_1B685E064(a4, a5);
  }
  else {
    uint64_t v11 = sub_1B6C2C804(a3, a4, a5);
  }
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v29 = a1;
    uint64_t v27 = a2;
    uint64_t v28 = a6;
    for (uint64_t i = (void *)(v11 + 40); ; i += 2)
    {
      int v14 = *((_DWORD *)i - 2);
      int v15 = *((_DWORD *)i - 1);
      uint64_t v16 = *i;
      swift_retain();
      if (v14 == -1 && v15 == 0) {
        goto LABEL_18;
      }
      if (v14 < 0) {
        goto LABEL_18;
      }
      if (*(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v14) {
        goto LABEL_18;
      }
      uint64_t v18 = *(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v15 != -1 && *(_DWORD *)(v18 + 12 * v14 + 8) != v15) {
        goto LABEL_18;
      }
      uint64_t v19 = *(void *)(*(void *)(*(void *)(v16 + 80) + 8 * *(__int16 *)(v18 + 12 * v14 + 6) + 32) + 16);
      uint64_t v20 = *(void *)(v19 + 128);
      if (!*(void *)(v20 + 16)) {
        goto LABEL_18;
      }
      unint64_t v21 = sub_1B62C1A30(v29);
      if ((v22 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v23 = *(void *)(*(void *)(v19 + 24) + 16 * *(void *)(*(void *)(v20 + 56) + 8 * v21) + 32);
      swift_release();
      if (v23 == v29) {
        break;
      }
LABEL_19:
      if (!--v12) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v24 = *(void *)(v27 + 8);
    type metadata accessor for VFXAttribute();
    swift_retain();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v16;
    swift_unownedRetain();
    swift_release();
    *(_DWORD *)(inited + 24) = v14;
    *(_DWORD *)(inited + 28) = v15;
    *(void *)(inited + 32) = v29;
    *(void *)(inited + 40) = v24;
    sub_1B6CA00E8(inited, v28, a7);
LABEL_18:
    swift_release();
    goto LABEL_19;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CCFDF0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t *a8)
{
  if (a3 == 5) {
    uint64_t v13 = sub_1B685E064(a4, a5);
  }
  else {
    uint64_t v13 = sub_1B6C2C804(a3, a4, a5);
  }
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v31 = a1;
    uint64_t v29 = a2;
    uint64_t v30 = a7;
    for (uint64_t i = (void *)(v13 + 40); ; i += 2)
    {
      int v16 = *((_DWORD *)i - 2);
      int v17 = *((_DWORD *)i - 1);
      uint64_t v18 = *i;
      swift_retain();
      if (v16 == -1 && v17 == 0) {
        goto LABEL_18;
      }
      if (v16 < 0) {
        goto LABEL_18;
      }
      if (*(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v16) {
        goto LABEL_18;
      }
      uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v17 != -1 && *(_DWORD *)(v20 + 12 * v16 + 8) != v17) {
        goto LABEL_18;
      }
      uint64_t v21 = *(void *)(*(void *)(*(void *)(v18 + 80) + 8 * *(__int16 *)(v20 + 12 * v16 + 6) + 32) + 16);
      uint64_t v22 = *(void *)(v21 + 128);
      if (!*(void *)(v22 + 16)) {
        goto LABEL_18;
      }
      unint64_t v23 = sub_1B62C1A30(v31);
      if ((v24 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v25 = *(void *)(*(void *)(v21 + 24) + 16 * *(void *)(*(void *)(v22 + 56) + 8 * v23) + 32);
      swift_release();
      if (v25 == v31) {
        break;
      }
LABEL_19:
      if (!--v14) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v26 = *(void *)(v29 + 8);
    type metadata accessor for VFXAttribute();
    swift_retain();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v18;
    swift_unownedRetain();
    swift_release();
    *(_DWORD *)(inited + 24) = v16;
    *(_DWORD *)(inited + 28) = v17;
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 40) = v26;
    sub_1B6CA0568(inited, a6, v30, a8);
LABEL_18:
    swift_release();
    goto LABEL_19;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CD0008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6CD006C()
{
  if (*(uint64_t *)(v0 + 96) > 1) {
    return 5;
  }
  if (*(void *)(v0 + 88)) {
    return 5;
  }
  return *(unsigned __int8 *)(v0 + 20);
}

void sub_1B6CD0098(void *a1@<X8>)
{
  *a1 = &unk_1F0F958D0;
}

uint64_t sub_1B6CD00A8()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6CD0108()
{
  return sub_1B6E31B28();
}

double sub_1B6CD0158()
{
  sub_1B6745BC4();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77D10;
  __asm { FMOV            V1.2S, #1.0 }
  *(void *)(v0 + 32) = 0xBF80000000000000;
  *(void *)(v0 + 40) = _D1;
  double result = 0.00781250557;
  *(void *)(v0 + 48) = 0x3F800000BF800000;
  qword_1E9E49800 = v0;
  return result;
}

double sub_1B6CD01B0()
{
  sub_1B6745BC4();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E85730;
  __asm { FMOV            V0.2S, #-1.0 }
  *(void *)(v0 + 32) = _D0;
  *(void *)(v0 + 40) = 0xBF8000003F800000;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v0 + 48) = result;
  *(void *)(v0 + 56) = 0x3F800000BF800000;
  qword_1E9E49808 = v0;
  return result;
}

char *sub_1B6CD020C()
{
  double result = sub_1B6CD022C();
  qword_1E9E49810 = (uint64_t)result;
  return result;
}

char *sub_1B6CD022C()
{
  uint64_t v0 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
  for (uint64_t i = 0; i != 5; ++i)
  {
    __float2 v4 = __sincosf_stret((float)((float)i * 1.2566) + 3.1416);
    *(float *)&uint64_t v3 = v4.__cosval;
    float sinval = v4.__sinval;
    unint64_t v5 = *((void *)v0 + 2);
    unint64_t v6 = *((void *)v0 + 3);
    int64_t v7 = v6 >> 1;
    unint64_t v8 = v5 + 1;
    if (v6 >> 1 <= v5)
    {
      uint64_t v13 = sub_1B68C1F74(v6 > 1, v5 + 1, 1, v0);
      float sinval = v4.__sinval;
      *(float *)&uint64_t v3 = v4.__cosval;
      uint64_t v0 = v13;
      unint64_t v6 = *((void *)v13 + 3);
      int64_t v7 = v6 >> 1;
    }
    *((float *)&v3 + 1) = sinval;
    *((void *)v0 + 2) = v8;
    *(void *)&v0[8 * v5 + 32] = v3;
    __float2 v11 = __sincosf_stret((float)((float)((float)i * 1.2566) + 3.1416) + 0.62832);
    v10.f32[0] = v11.__cosval;
    float v9 = v11.__sinval;
    uint64_t v12 = v5 + 2;
    if (v7 < v12)
    {
      uint64_t v14 = sub_1B68C1F74(v6 > 1, v12, 1, v0);
      float v9 = v11.__sinval;
      v10.i32[0] = LODWORD(v11.__cosval);
      uint64_t v0 = v14;
    }
    v10.f32[1] = v9;
    *((void *)v0 + 2) = v12;
    *(float32x2_t *)&v0[8 * v8 + 32] = vmul_f32(v10, (float32x2_t)0x3F0000003F000000);
  }
  return v0;
}

char *sub_1B6CD038C()
{
  double result = sub_1B6CD03AC();
  qword_1E9E49818 = (uint64_t)result;
  return result;
}

char *sub_1B6CD03AC()
{
  uint64_t v0 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
  uint64_t v1 = 0;
  unint64_t v2 = *((void *)v0 + 2);
  do
  {
    unint64_t v3 = *((void *)v0 + 3);
    if (v2 >= v3 >> 1) {
      uint64_t v0 = sub_1B68C1F74(v3 > 1, v2 + 1, 1, v0);
    }
    __float2 v4 = __sincosf_stret((float)((float)((float)v1 * -3.1416) + (float)((float)v1 * -3.1416)) * 0.0625);
    *((void *)v0 + 2) = v2 + 1;
    *(void *)&v0[8 * v2++ + 32] = __PAIR64__(LODWORD(v4.__sinval), LODWORD(v4.__cosval));
    ++v1;
  }
  while (v1 != 16);
  return v0;
}

uint64_t sub_1B6CD0488(char a1)
{
  uint64_t result = 1;
  switch(a1)
  {
    case 1:
      if (qword_1E9DCC6F8 != -1) {
        swift_once();
      }
      unint64_t v3 = &qword_1E9E49800;
      goto LABEL_14;
    case 2:
      if (qword_1E9DCC700 != -1) {
        swift_once();
      }
      unint64_t v3 = &qword_1E9E49808;
      goto LABEL_14;
    case 3:
      if (qword_1E9DCC708 != -1) {
        swift_once();
      }
      unint64_t v3 = &qword_1E9E49810;
      goto LABEL_14;
    case 4:
      if (qword_1E9DCC710 != -1) {
        swift_once();
      }
      unint64_t v3 = &qword_1E9E49818;
LABEL_14:
      uint64_t result = *(void *)(*v3 + 16);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B6CD05D0(void *a1@<X8>)
{
  *a1 = &unk_1F0F89B98;
}

uint64_t sub_1B6CD05E0()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6CD0640()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B6CD0690()
{
  switch(*(unsigned char *)(v0 + 64))
  {
    case 1:
      if (qword_1E9DCC6F8 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_1E9E49800;
      goto LABEL_14;
    case 2:
      if (qword_1E9DCC700 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_1E9E49808;
      goto LABEL_14;
    case 3:
      if (qword_1E9DCC708 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_1E9E49810;
      goto LABEL_14;
    case 4:
      if (qword_1E9DCC710 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_1E9E49818;
LABEL_14:
      if (*(void *)(v1 + 16) <= 1uLL) {
        goto LABEL_16;
      }
      uint64_t v2 = 6;
      break;
    default:
LABEL_16:
      uint64_t v2 = 4;
      break;
  }
  return v2 + 2 * *(void *)(v0 + 56);
}

uint64_t sub_1B6CD07E8@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = 0xD000000000000014;
  unint64_t v7 = 0x80000001B6F50FC0;
  if (*(uint64_t *)(a2 + 96) <= 1 && !*(void *)(a2 + 88))
  {
    unint64_t v6 = 0xD000000000000020;
    unint64_t v7 = 0x80000001B6F51020;
    if (!*(void *)(a2 + 56) && !*(unsigned char *)(a2 + 64))
    {
      unint64_t v6 = 0xD000000000000019;
      unint64_t v7 = 0x80000001B6F51050;
    }
  }
  sub_1B6CD26D4(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E76B30;
  int v9 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned char *)(a2 + 64))
  {
    BOOL v10 = 0;
    *(_OWORD *)(v8 + 32) = xmmword_1B6E96370;
    *(unsigned char *)(v8 + 48) = 0;
    *(void *)(v8 + 64) = 0;
    *(_OWORD *)(v8 + 72) = 0u;
    *(_OWORD *)(v8 + 88) = 0u;
    *(_OWORD *)(v8 + 104) = 0u;
    *(void *)(v8 + 120) = 0;
    *(unsigned char *)(v8 + 128) = 13;
  }
  else
  {
    BOOL v11 = *(_DWORD *)(a2 + 68) != -1 || *(_DWORD *)(a2 + 72) != 0;
    BOOL v10 = 0;
    *(_OWORD *)(v8 + 32) = xmmword_1B6E96370;
    *(unsigned char *)(v8 + 48) = 0;
    *(void *)(v8 + 64) = v11;
    *(_OWORD *)(v8 + 72) = 0u;
    *(_OWORD *)(v8 + 88) = 0u;
    *(_OWORD *)(v8 + 104) = 0u;
    *(void *)(v8 + 120) = 0;
    *(unsigned char *)(v8 + 128) = 13;
    if (!v9) {
      BOOL v10 = *(_DWORD *)(a2 + 76) != -1 || *(_DWORD *)(a2 + 80) != 0;
    }
  }
  *(_OWORD *)(v8 + 144) = xmmword_1B6E96380;
  *(unsigned char *)(v8 + 160) = 0;
  *(void *)(v8 + 176) = v10;
  *(_OWORD *)(v8 + 184) = 0u;
  *(_OWORD *)(v8 + 200) = 0u;
  if ((a1 & 0x4800) == 0x4000) {
    unint64_t v12 = 0xD00000000000001DLL;
  }
  else {
    unint64_t v12 = 0xD000000000000014;
  }
  *(_OWORD *)(v8 + 216) = 0uLL;
  *(void *)(v8 + 232) = 0;
  *(unsigned char *)(v8 + 240) = 13;
  unint64_t v13 = 0x80000001B6F50FE0;
  if ((a1 & 0x4800) == 0x4000) {
    unint64_t v13 = 0x80000001B6F51000;
  }
  v15[0] = v6;
  v15[1] = v7;
  _OWORD v15[2] = 0;
  v15[3] = 0;
  v15[4] = v8;
  v15[5] = v12;
  v15[6] = v13;
  v15[7] = 0;
  v15[8] = 0;
  v15[9] = v8;
  long long v20 = 0uLL;
  long long v21 = 0uLL;
  long long v18 = 0uLL;
  long long v19 = 0uLL;
  long long v16 = 0uLL;
  long long v17 = 0uLL;
  nullsub_1(v15);
  swift_bridgeObjectRetain();
  return sub_1B6311F40((uint64_t)v15, a3, &qword_1EB97EB68, (uint64_t)&type metadata for RenderFunctions);
}

uint64_t sub_1B6CD0A58(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = (void *)result;
  uint64_t v6 = *(void *)(v2 + 96);
  if (v6 < 2)
  {
    uint64_t v7 = *(void *)(v2 + 88);
    *(void *)(result + 16) = 4;
    if (!v7)
    {
      uint64_t v13 = sub_1B6CD0488(*(unsigned char *)(v2 + 64));
      uint64_t result = sub_1B6CD0690();
      *(void *)(a2 + 32) = result * v13;
      goto LABEL_17;
    }
    *(_OWORD *)(a2 + 16) = xmmword_1B6E50D30;
    if (v7 < 2)
    {
      *(void *)(a2 + 40) = 2;
      goto LABEL_17;
    }
  }
  else
  {
    *(void *)(result + 16) = 4;
    *(_OWORD *)(a2 + 16) = xmmword_1B6E50D30;
    uint64_t v7 = *(void *)(v2 + 88);
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v7 <= 0) {
    uint64_t v7 = (v6 + v8 - 1) / v6;
  }
  if (v7 >= (v6 + v8 - 1) / v6) {
    int64_t v9 = (v6 + v8 - 1) / v6;
  }
  else {
    int64_t v9 = v7;
  }
  uint64_t result = sub_1B6800EF0(v8, v6, v9);
  if (result)
  {
    uint64_t v11 = v10;
    v5[4] = result;
    v5[5] = 0;
    v5[6] = v10 * v8;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    if (v9 < 1) {
      uint64_t v12 = 2 * v8;
    }
    else {
      uint64_t v12 = 2 * ((v8 + v9 - 1) / v9 + v8) - 2;
    }
    v5[8] = v12;
    uint64_t result = swift_unknownObjectRelease();
    v5[7] = v11 != 2;
LABEL_17:
    switch(*(unsigned char *)(v3 + 64))
    {
      case 1:
        if (qword_1E9DCC6F8 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1E9E49800;
        goto LABEL_30;
      case 2:
        if (qword_1E9DCC700 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1E9E49808;
        goto LABEL_30;
      case 3:
        if (qword_1E9DCC708 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1E9E49810;
        goto LABEL_30;
      case 4:
        if (qword_1E9DCC710 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1E9E49818;
LABEL_30:
        uint64_t v15 = *v14;
        swift_bridgeObjectRetain();
        uint64_t v16 = v15 + 32 + 8 * *(void *)(v15 + 16);
        swift_retain();
        long long v17 = sub_1B6967450(0, (const void *)(v15 + 32), v16);
        uint64_t v19 = v18;
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        swift_release();
        v22[0] = v17;
        v22[1] = v19;
        _OWORD v22[2] = v21;
        v22[3] = 0;
        char v23 = 0;
        swift_unknownObjectRetain();
        sub_1B62E9144((uint64_t)v22, 8, 0);
        uint64_t result = swift_unknownObjectRelease_n();
        break;
      default:
        return result;
    }
  }
  return result;
}

void *sub_1B6CD0D60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *a3;
  uint64_t v9 = a3[4];
  swift_retain();
  uint64_t v10 = sub_1B6BFAAF8(v9, v8);
  swift_release();
  uint64_t v11 = (void *)a3[1];
  swift_retain();
  sub_1B62E9D50(v11, (uint64_t)v32);
  swift_release();
  sub_1B6311F40((uint64_t)v32, (uint64_t)v33, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
  if (v34)
  {
    long long v31 = xmmword_1B6E4F370;
    long long v30 = xmmword_1B6E4F2E0;
    long long v29 = xmmword_1B6E4F320;
    long long v28 = xmmword_1B6E4F300;
  }
  else
  {
    long long v28 = v33[0];
    long long v29 = v33[1];
    long long v30 = v33[2];
    long long v31 = v33[3];
  }
  unsigned int v12 = *(_DWORD *)(v4 + 24);
  if (v12 - 11 > 0xF4)
  {
    float v16 = *(float *)(v4 + 16);
    float v15 = -1.0;
    if (v16 >= 0.0)
    {
      if (v16 > -1.0) {
        float v15 = *(float *)(v4 + 16);
      }
      else {
        float v15 = -1.0;
      }
    }
  }
  else
  {
    float v13 = *(float *)(v4 + 16);
    if (v13 > (float)(1.0 / (float)v12)) {
      float v14 = *(float *)(v4 + 16);
    }
    else {
      float v14 = 1.0 / (float)v12;
    }
    if (v13 >= 0.0) {
      float v15 = v14;
    }
    else {
      float v15 = 1.0 / (float)v12;
    }
  }
  int v17 = *(_DWORD *)(v4 + 32);
  float v18 = (float)(uint64_t)-*(void *)(v4 + 96);
  float v19 = 1.0 / (float)(*(void *)(v4 + 56) + 1);
  *(void *)&long long v20 = *(void *)(v4 + 40);
  *((float *)&v20 + 1) = -*((float *)&v20 + 1);
  DWORD2(v20) = *(void *)(v4 + 48);
  *((float *)&v20 + 3) = COERCE_FLOAT(HIDWORD(*(void *)(v4 + 48))) + 1.0;
  long long v27 = v20;
  __int16 v21 = sub_1B6CD0690();
  char v22 = sub_1B6CD0488(*(unsigned char *)(v4 + 64));
  char v23 = *(unsigned char *)(v4 + 36);
  char v24 = *(unsigned char *)(v4 + 39);
  v35[0] = v28;
  v35[1] = v29;
  _OWORD v35[2] = v30;
  v35[3] = v31;
  float v36 = v15;
  int v37 = v17;
  float v38 = v18;
  float v39 = v19;
  long long v40 = v27;
  __int16 v41 = v21;
  char v42 = v22;
  char v43 = v23;
  char v44 = v24;
  uint64_t v45 = v10;
  sub_1B62F6B80((uint64_t)a3);
  uint64_t v25 = sub_1B696C184(v35, a1, a2, (uint64_t)a3, v4, v4);
  sub_1B62F648C((uint64_t)a3);
  return v25;
}

uint64_t sub_1B6CD0FC0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*(unsigned char *)(a3 + 64))
  {
    uint64_t v5 = *(unsigned int *)(a3 + 68);
    uint64_t v6 = *(unsigned int *)(a3 + 72);
    if (v5 != -1 || v6 != 0)
    {
      swift_getObjectType();
      swift_retain();
      uint64_t v8 = sub_1B62EBE70(v5 | (v6 << 32), &v15);
      swift_release();
      sub_1B62EC1A8(v8, 240, a2);
      uint64_t result = swift_unknownObjectRelease();
    }
    uint64_t v10 = *(unsigned int *)(a3 + 76);
    uint64_t v11 = *(unsigned int *)(a3 + 80);
    if (v10 != -1 || v11 != 0)
    {
      swift_getObjectType();
      swift_retain();
      uint64_t v13 = sub_1B62EBE70(v10 | (v11 << 32), &v14);
      swift_release();
      sub_1B62EC1A8(v13, 241, a2);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6CD10FC()
{
  return *(unsigned __int8 *)(v0 + 37);
}

uint64_t sub_1B6CD1104(uint64_t result)
{
  *(unsigned char *)(v1 + 37) = result;
  return result;
}

uint64_t sub_1B6CD110C()
{
  return *(unsigned __int8 *)(v0 + 38);
}

uint64_t sub_1B6CD1114(uint64_t result)
{
  *(unsigned char *)(v1 + 38) = result;
  return result;
}

unsigned char *(*sub_1B6CD111C(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  char v2 = *(unsigned char *)(v1 + 20);
  if (*(void *)(v1 + 88)) {
    char v2 = 5;
  }
  if (*(uint64_t *)(v1 + 96) > 1) {
    char v2 = 5;
  }
  *(unsigned char *)(a1 + 8) = v2;
  return sub_1B6CD1160;
}

unsigned char *sub_1B6CD1160(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 20) = result[8];
  return result;
}

uint64_t sub_1B6CD1170()
{
  return sub_1B6CD1AD0();
}

uint64_t sub_1B6CD11BC()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 20);
  if (*(void *)(v0 + 88)) {
    unsigned int v1 = 5;
  }
  if (*(uint64_t *)(v0 + 96) <= 1) {
    return v1;
  }
  else {
    return 5;
  }
}

uint64_t sub_1B6CD11DC()
{
  unsigned int v1 = v0;
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v2 = sub_1B62FFCAC(4);
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = v1[5];
  v3[5] = v1[4];
  v3[6] = v4;
  *(_OWORD *)((char *)v3 + 105) = *(_OWORD *)((char *)v1 + 89);
  long long v5 = v1[1];
  v3[1] = *v1;
  v3[2] = v5;
  long long v6 = v1[3];
  v3[3] = v1[2];
  v3[4] = v6;
  *(void *)(v2 + 88) = sub_1B6CD26CC;
  *(void *)(v2 + 96) = v3;
  swift_release();
  return v2;
}

void *sub_1B6CD127C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B6CD0D60(a1, a2, a3);
}

uint64_t sub_1B6CD12CC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = 0xFFFFFFFFLL;
  long long v5 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(a2 + 8);
  v5((char *)&v7, 0, ObjectType, a2);
  v5((char *)v2, 0, ObjectType, a2);
  v5((char *)v2 + 68, 0, ObjectType, a2);
  return v5((char *)v2 + 76, 0, ObjectType, a2);
}

double sub_1B6CD1394@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 8) = 1;
  *(unsigned char *)(a1 + 12) = 1;
  *(_DWORD *)(a1 + 16) = -1082130432;
  *(unsigned char *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 256;
  *(_WORD *)(a1 + 28) = 256;
  *(_DWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 36) = 33619968;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(a1 + 40) = _D0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)&long long v6 = 0xFFFFFFFFLL;
  *((void *)&v6 + 1) = 0xFFFFFFFFLL;
  *(_OWORD *)(a1 + 68) = v6;
  double result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1B6E4F270;
  *(unsigned char *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_1B6CD1408(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62A7E88(0, (unint64_t *)&unk_1E9DD01B0, (uint64_t (*)(void))sub_1B62A8444, (uint64_t)&type metadata for ParticleDefaultRendererableCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  uint64_t result = sub_1B67C6ED8(a1, (uint64_t)&v12 - v9);
  if (!v2)
  {
    LOBYTE(v12) = 27;
    sub_1B6E32F88();
    LOBYTE(v12) = 28;
    sub_1B6E32F88();
    LOBYTE(v12) = 29;
    sub_1B6E32F88();
    LOBYTE(v12) = *(unsigned char *)(v3 + 64);
    char v13 = 30;
    sub_1B66C5B48();
    sub_1B6E32FA8();
    uint64_t v12 = *(void *)(v3 + 68);
    char v13 = 34;
    sub_1B6657A10();
    sub_1B6E32FA8();
    uint64_t v12 = *(void *)(v3 + 76);
    char v13 = 35;
    sub_1B6E32FA8();
    LOBYTE(v12) = *(unsigned char *)(v3 + 39);
    char v13 = 31;
    sub_1B66C5A74();
    sub_1B6E32FA8();
    uint64_t v12 = *(void *)(v3 + 40);
    char v13 = 11;
    sub_1B62A7E88(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    sub_1B6CD2200((unint64_t *)&qword_1EB97D1B8);
    sub_1B6E32FA8();
    uint64_t v12 = *(void *)(v3 + 48);
    char v13 = 12;
    sub_1B6E32FA8();
    LOBYTE(v12) = 32;
    sub_1B6E32F58();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

__n128 sub_1B6CD17A8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6CD1BDC(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v8[0];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 89) = *(_OWORD *)((char *)v8 + 9);
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1B6CD17FC(void *a1)
{
  return sub_1B6CD1408(a1);
}

uint64_t sub_1B6CD1848(long long *a1, _OWORD *a2)
{
  long long v2 = a1[5];
  long long v23 = a1[4];
  *(_OWORD *)char v24 = v2;
  *(_OWORD *)&v24[9] = *(long long *)((char *)a1 + 89);
  long long v3 = a1[1];
  long long v19 = *a1;
  long long v20 = v3;
  long long v4 = a1[3];
  long long v21 = a1[2];
  long long v22 = v4;
  long long v5 = a2[1];
  v14[0] = *a2;
  v14[1] = v5;
  long long v6 = a2[2];
  long long v7 = a2[3];
  *(_OWORD *)&v18[9] = *(_OWORD *)((char *)a2 + 89);
  long long v8 = a2[5];
  long long v17 = a2[4];
  *(_OWORD *)float v18 = v8;
  long long v15 = v6;
  long long v16 = v7;
  if (sub_1B6BFB038((uint64_t)v14)) {
    return 1;
  }
  if (*(uint64_t *)&v24[16] < 2)
  {
    uint64_t v9 = *(void *)&v18[16];
    if (*(uint64_t *)&v18[16] < 2)
    {
      if ((*(void *)&v24[8] != 0) == (*(void *)&v18[8] == 0)) {
        return 1;
      }
    }
    else if (!*(void *)&v24[8])
    {
      return 1;
    }
    if (!*((void *)&v22 + 1)) {
      goto LABEL_15;
    }
    if (*((void *)&v16 + 1) && *(uint64_t *)&v18[16] < 2)
    {
      if ((*(void *)&v24[8] == 0) != (*(void *)&v18[8] != 0)) {
        goto LABEL_18;
      }
    }
    else if (*(void *)&v24[8])
    {
      goto LABEL_18;
    }
    return 1;
  }
  uint64_t v9 = *(void *)&v18[16];
  if (*(uint64_t *)&v18[16] <= 1 && !*(void *)&v18[8]) {
    return 1;
  }
LABEL_15:
  if (*((void *)&v16 + 1) && v9 <= 1 && !*(void *)&v18[8]) {
    return 1;
  }
LABEL_18:
  if (((_BYTE)v23 != 0) != ((_BYTE)v17 != 0)
    || (BYTE7(v21) != 1) == (BYTE7(v15) == 1)
    || ((v24[24] ^ v18[24]) & 1) != 0)
  {
    return 1;
  }
  if (!(_BYTE)v23)
  {
    if (*(void *)((char *)&v23 + 4) == 0xFFFFFFFFLL)
    {
      if ((_BYTE)v17)
      {
        int v10 = 0;
        BOOL v11 = HIDWORD(v23) != -1 || *(_DWORD *)v24 != 0;
        return v10 ^ v11;
      }
      uint64_t result = 1;
      if (*(void *)((char *)&v17 + 4) != 0xFFFFFFFFLL) {
        return result;
      }
    }
    else if ((_BYTE)v17 || *(void *)((char *)&v17 + 4) == 0xFFFFFFFFLL)
    {
      return 1;
    }
    if (HIDWORD(v23) == -1)
    {
      if (!*(_DWORD *)v24)
      {
        if (HIDWORD(v17) != -1) {
          goto LABEL_33;
        }
        goto LABEL_50;
      }
      if (HIDWORD(v17) != -1)
      {
LABEL_44:
        int v10 = 1;
        BOOL v11 = 1;
        return v10 ^ v11;
      }
    }
    else if (HIDWORD(v17) != -1)
    {
      goto LABEL_44;
    }
    int v10 = *(_DWORD *)v18;
    BOOL v11 = 1;
    if (!*(_DWORD *)v18) {
      return v10 ^ v11;
    }
    goto LABEL_51;
  }
  if ((_BYTE)v17)
  {
    int v10 = 0;
    BOOL v11 = 0;
    return v10 ^ v11;
  }
  uint64_t result = 1;
  if (*(void *)((char *)&v17 + 4) == 0xFFFFFFFFLL)
  {
    if (HIDWORD(v17) != -1)
    {
LABEL_33:
      BOOL v11 = 0;
      goto LABEL_51;
    }
LABEL_50:
    BOOL v11 = 0;
    int v10 = 0;
    if (!*(_DWORD *)v18) {
      return v10 ^ v11;
    }
LABEL_51:
    int v10 = 1;
    return v10 ^ v11;
  }
  return result;
}

uint64_t sub_1B6CD1AD0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (*(unsigned char *)(v0 + 39) == 1)
  {
    if (v1 > 1 || *(void *)(v0 + 88))
    {
      sub_1B62D2B64();
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
      *(void *)(result + 32) = &type metadata for ParticleID;
      *(void *)(result + 40) = &off_1F0F532A8;
      *(void *)(result + 48) = &type metadata for ParticleRibbonLength;
      *(void *)(result + 56) = &off_1F0F81FC0;
      return result;
    }
    sub_1B62D2B64();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B6E77050;
    long long v3 = &type metadata for ParticleRibbonLength;
    long long v4 = &off_1F0F81FC0;
    goto LABEL_9;
  }
  if (v1 > 1 || *(void *)(v0 + 88))
  {
    sub_1B62D2B64();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B6E77050;
    long long v3 = &type metadata for ParticleID;
    long long v4 = &off_1F0F532A8;
LABEL_9:
    *(void *)(result + 32) = v3;
    *(void *)(result + 40) = v4;
    return result;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B6CD1BDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62A7E88(0, &qword_1EB980A78, (uint64_t (*)(void))sub_1B62A8444, (uint64_t)&type metadata for ParticleDefaultRendererableCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  int v10 = (char *)&v51 - v9;
  uint64_t v54 = 0xFFFFFFFFLL;
  int v55 = 1;
  char v56 = 1;
  int v57 = -1082130432;
  char v58 = 0;
  int v59 = 256;
  __int16 v60 = 256;
  int v61 = 0;
  int v62 = 33619968;
  __asm { FMOV            V8.2S, #1.0 }
  int8x8_t v63 = _D8;
  int8x8_t v64 = 0;
  uint64_t v65 = 0;
  __int8 v66 = 0;
  *(void *)&long long v16 = 0xFFFFFFFFLL;
  *((void *)&v16 + 1) = 0xFFFFFFFFLL;
  long long v67 = v16;
  long long v68 = xmmword_1B6E4F270;
  char v69 = 0;
  sub_1B67C8038(a1);
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  v51.i8[0] = 27;
  uint64_t v18 = sub_1B6E32D68();
  if (v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = v18;
  }
  *(void *)&long long v68 = v20;
  v51.i8[0] = 28;
  uint64_t v21 = sub_1B6E32D68();
  if (v22) {
    uint64_t v23 = 1;
  }
  else {
    uint64_t v23 = v21;
  }
  *((void *)&v68 + 1) = v23;
  v51.i8[0] = 29;
  uint64_t v24 = sub_1B6E32D68();
  if (v25) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = v24;
  }
  uint64_t v65 = v26;
  char v53 = 30;
  sub_1B66C5AF4();
  sub_1B6E32D78();
  __int8 v27 = v51.i8[0];
  if (v51.u8[0] == 5) {
    __int8 v27 = 0;
  }
  __int8 v66 = v27;
  char v53 = 34;
  sub_1B62B1EA8();
  sub_1B6E32D78();
  __int32 v28 = v51.i32[1];
  if (v52) {
    __int32 v29 = -1;
  }
  else {
    __int32 v29 = v51.i32[0];
  }
  if (v52) {
    __int32 v28 = 0;
  }
  *(void *)&long long v67 = __PAIR64__(v28, v29);
  char v53 = 35;
  sub_1B6E32D78();
  __int32 v30 = v51.i32[1];
  if (v52) {
    __int32 v31 = -1;
  }
  else {
    __int32 v31 = v51.i32[0];
  }
  if (v52) {
    __int32 v30 = 0;
  }
  *((void *)&v67 + 1) = __PAIR64__(v30, v31);
  char v53 = 31;
  sub_1B66C5A20();
  sub_1B6E32D78();
  __int8 v32 = v51.i8[0];
  if (v51.u8[0] == 3) {
    __int8 v32 = 2;
  }
  HIBYTE(v62) = v32;
  sub_1B62A7E88(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  char v53 = 11;
  sub_1B6CD2200((unint64_t *)&qword_1EB97D1D0);
  sub_1B6E32D78();
  if (v52) {
    unsigned int v33 = -1;
  }
  else {
    unsigned int v33 = 0;
  }
  int8x8_t v63 = vbsl_s8((int8x8_t)vdup_n_s32(v33), _D8, v51);
  char v53 = 12;
  sub_1B6E32D78();
  if (v52) {
    unsigned int v34 = -1;
  }
  else {
    unsigned int v34 = 0;
  }
  int8x8_t v64 = vbic_s8(v51, (int8x8_t)vdup_n_s32(v34));
  v51.i8[0] = 32;
  char v35 = sub_1B6E32D38();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  int v36 = v55;
  char v37 = v56;
  int v38 = v57;
  char v39 = v58;
  int v40 = v59;
  char v41 = v60;
  char v42 = HIBYTE(v60);
  int v43 = v61;
  char v44 = v62;
  char v45 = BYTE1(v62);
  char v46 = BYTE2(v62);
  char v47 = HIBYTE(v62);
  int8x8_t v48 = v63;
  int8x8_t v49 = v64;
  uint64_t result = v65;
  __int8 v50 = v66;
  *(void *)a2 = v54;
  *(_DWORD *)(a2 + 8) = v36;
  *(unsigned char *)(a2 + 12) = v37;
  *(_DWORD *)(a2 + 16) = v38;
  *(unsigned char *)(a2 + 20) = v39;
  *(_DWORD *)(a2 + 24) = v40;
  *(unsigned char *)(a2 + 28) = v41;
  *(unsigned char *)(a2 + 29) = v42;
  *(_DWORD *)(a2 + 32) = v43;
  *(unsigned char *)(a2 + 36) = v44;
  *(unsigned char *)(a2 + 37) = v45;
  *(unsigned char *)(a2 + 38) = v46;
  *(unsigned char *)(a2 + 39) = v47;
  *(int8x8_t *)(a2 + 40) = v48;
  *(int8x8_t *)(a2 + 48) = v49;
  *(void *)(a2 + 56) = result;
  *(unsigned char *)(a2 + 64) = v50;
  *(_OWORD *)(a2 + 68) = v67;
  *(_OWORD *)(a2 + 88) = v68;
  *(unsigned char *)(a2 + 104) = v35 & 1;
  return result;
}

unint64_t sub_1B6CD2158()
{
  unint64_t result = qword_1E9DD8338;
  if (!qword_1E9DD8338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8338);
  }
  return result;
}

unint64_t sub_1B6CD21AC()
{
  unint64_t result = qword_1E9DD8340;
  if (!qword_1E9DD8340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8340);
  }
  return result;
}

uint64_t sub_1B6CD2200(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62A7E88(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticleRibbonProfile(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CD2348);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleRibbonProfile()
{
  return &type metadata for ParticleRibbonProfile;
}

unsigned char *storeEnumTagSinglePayload for ParticleRibbonTextureMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CD244CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleRibbonTextureMode()
{
  return &type metadata for ParticleRibbonTextureMode;
}

uint64_t getEnumTagSinglePayload for ParticleRibbonRenderer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 105)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 29);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleRibbonRenderer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 29) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleRibbonRenderer()
{
  return &type metadata for ParticleRibbonRenderer;
}

uint64_t sub_1B6CD2548()
{
  return sub_1B6CD2578(&qword_1E9DD8348, &qword_1E9DD8350, (uint64_t)&type metadata for ParticleRibbonTextureMode);
}

uint64_t sub_1B6CD2578(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6CD26D4(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6CD25E0()
{
  unint64_t result = qword_1E9DD8358;
  if (!qword_1E9DD8358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8358);
  }
  return result;
}

uint64_t sub_1B6CD2634()
{
  return sub_1B6CD2578(&qword_1E9DD8360, &qword_1E9DD8368, (uint64_t)&type metadata for ParticleRibbonProfile);
}

unint64_t sub_1B6CD2668()
{
  unint64_t result = qword_1E9DD8370;
  if (!qword_1E9DD8370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8370);
  }
  return result;
}

uint64_t sub_1B6CD26BC()
{
  return MEMORY[0x1F4186498](v0, 121, 7);
}

uint64_t sub_1B6CD26CC@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1B6CD07E8(a1, v2 + 16, a2);
}

void sub_1B6CD26D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6CD2720(uint64_t a1, void *a2, void *a3, unint64_t a4)
{
  uint64_t v5 = (a4 >> 38) & 3;
  if (!v5)
  {
    sub_1B6E33928();
    sub_1B6E33938();
    return;
  }
  uint64_t v7 = a4 & 0xFFFFFFFFFFLL;
  if (v5 != 1)
  {
    sub_1B6E33928();
    return;
  }
  sub_1B6E33928();
  sub_1B6E31798();
  id v10 = a3;
  id v8 = a2;
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  if (!a3)
  {
    sub_1B6E33938();
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_5;
    }
LABEL_9:
    sub_1B6E33938();
    goto LABEL_10;
  }
  sub_1B6E33938();
  id v9 = v10;
  sub_1B6E32368();

  if ((v7 & 0x100000000) != 0) {
    goto LABEL_9;
  }
LABEL_5:
  sub_1B6E33938();
  sub_1B6E33958();
LABEL_10:
}

uint64_t sub_1B6CD2898()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  unint64_t v3 = *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
  sub_1B6E33918();
  sub_1B6CD2720((uint64_t)v5, v1, v2, v3);
  return sub_1B6E33988();
}

void sub_1B6CD28FC(uint64_t a1)
{
  sub_1B6CD2720(a1, *(void **)v1, *(void **)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32));
}

uint64_t sub_1B6CD2910()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  unint64_t v3 = *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
  sub_1B6E33918();
  sub_1B6CD2720((uint64_t)v5, v1, v2, v3);
  return sub_1B6E33988();
}

uint64_t sub_1B6CD2970(uint64_t a1, uint64_t a2)
{
  return sub_1B6CD4818(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32));
}

uint64_t sub_1B6CD299C(uint64_t a1)
{
  uint64_t v29 = *v1;
  uint64_t v30 = a1;
  char v32 = 0;
  unint64_t v2 = sub_1B6B65B6C();
  unint64_t v3 = v2;
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    char v19 = 1;
    return v19 & 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v5 = 0;
  unint64_t v28 = v3 & 0xC000000000000001;
  uint64_t v27 = MEMORY[0x1E4FBC838] + 8;
  long long v26 = xmmword_1B6E78130;
  unint64_t v6 = v3;
  do
  {
    if (v28)
    {
      uint64_t v7 = MEMORY[0x1BA9B4580](v5, v3);
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      swift_retain();
    }
    type metadata accessor for OnParticleStageNode(0);
    uint64_t v8 = swift_dynamicCastClass();
    if (v8 || (type metadata accessor for _OnNode(0), swift_dynamicCastClass()))
    {
      BOOL v9 = 1;
    }
    else
    {
      type metadata accessor for DoNode(0);
      if (swift_dynamicCastClass())
      {
        type metadata accessor for OnTriggerNode(0);
        BOOL v9 = swift_dynamicCastClass() != 0;
      }
      else
      {
        BOOL v9 = 0;
      }
    }
    sub_1B68805E0(0, (unint64_t *)&qword_1EB980DF0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v26;
    *(void *)(v10 + 32) = v7;
    v31[0] = v10;
    sub_1B6E31C48();
    uint64_t v11 = v31[0];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    MEMORY[0x1F4188790](v12, v13);
    BOOL v22 = v8 != 0;
    uint64_t v23 = &v32;
    uint64_t v24 = v30;
    BOOL v25 = v9;
    MEMORY[0x1F4188790](v14, v15);
    uint64_t v21[2] = sub_1B6CD4B0C;
    v21[3] = v16;
    swift_retain();
    unint64_t v17 = MEMORY[0x1E4FBC860];
    v31[0] = sub_1B68C967C(MEMORY[0x1E4FBC860]);
    v31[1] = v18;
    sub_1B68B9930((uint64_t)sub_1B683EDD4, (uint64_t)v21, 1, 0x1000000000000000uLL, 0, v17, v31);
    ++v5;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v3 = v6;
  }
  while (v4 != v5);
  swift_bridgeObjectRelease();
  char v19 = v32 ^ 1;
  return v19 & 1;
}

void sub_1B6CD2CC0(uint64_t a1, char a2, unsigned char *a3, uint64_t a4, char a5)
{
  uint64_t v66 = a4;
  uint64_t v10 = sub_1B6E31118();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(__objc2_class ***)(a1 + 8);
  if ((a2 & 1) == 0)
  {
    type metadata accessor for _ParticleValueNode(0);
    if (swift_dynamicCastClass())
    {
      v63[1] = v5;
      int8x8_t v64 = a3;
      *a3 = 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, (uint64_t)v15 + OBJC_IVAR____TtC3VFX4Node_authoringID, v10);
      uint64_t v16 = (int *)type metadata accessor for GraphError();
      sub_1B683DB30();
      uint64_t v17 = swift_allocError();
      uint64_t v18 = v14;
      char v19 = (void *)v17;
      uint64_t v21 = v20;
      *uint64_t v20 = 0;
      BOOL v22 = (char *)v20 + v16[5];
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      uint64_t v65 = v18;
      v23(v22, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
      uint64_t v24 = (char *)v21 + v16[6];
      *(void *)uint64_t v24 = 1;
      v24[8] = -96;
      BOOL v25 = (void *)((char *)v21 + v16[7]);
      *BOOL v25 = 0xD00000000000003ALL;
      v25[1] = 0x80000001B6F511C0;
      uint64_t v26 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
      uint64_t v27 = v66;
      unint64_t v28 = *(void **)(v66 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
      id v29 = v19;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v27 + v26) = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v28 = sub_1B68C1084(0, v28[2] + 1, 1, v28);
        *(void *)(v66 + v26) = v28;
      }
      unint64_t v32 = v28[2];
      unint64_t v31 = v28[3];
      if (v32 >= v31 >> 1)
      {
        unint64_t v28 = sub_1B68C1084(v31 > 1, v32 + 1, 1, v28);
        *(void *)(v66 + v26) = v28;
      }
      a3 = v64;
      _OWORD v28[2] = v32 + 1;
      v28[v32 + 4] = v19;

      uint64_t v14 = v65;
    }
  }
  if ((a5 & 1) == 0 && (sub_1B6C0BFD0() & 1) != 0 && *v15 != _TtC3VFX24InspectorSetECSValueNode)
  {
    type metadata accessor for InspectorSetWorldValueNode(0);
    if (!swift_dynamicCastClass())
    {
      type metadata accessor for OnTriggerNode(0);
      if (!swift_dynamicCastClass())
      {
        int8x8_t v64 = a3;
        *a3 = 1;
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, (uint64_t)v15 + OBJC_IVAR____TtC3VFX4Node_authoringID, v10);
        unsigned int v33 = (int *)type metadata accessor for GraphError();
        sub_1B683DB30();
        unsigned int v34 = (void *)swift_allocError();
        int v36 = v35;
        *char v35 = 0;
        char v37 = v14;
        int v38 = (char *)v36 + v33[5];
        char v39 = *(void (**)(char *))(v11 + 32);
        uint64_t v65 = v37;
        v39(v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v38, 0, 1, v10);
        int v40 = (char *)v36 + v33[6];
        *(void *)int v40 = 1;
        v40[8] = -96;
        char v41 = (void *)((char *)v36 + v33[7]);
        *char v41 = 0xD00000000000002ALL;
        v41[1] = 0x80000001B6F51190;
        uint64_t v42 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
        uint64_t v43 = v66;
        char v44 = *(void **)(v66 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
        id v45 = v34;
        char v46 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v43 + v42) = v44;
        if ((v46 & 1) == 0)
        {
          char v44 = sub_1B68C1084(0, v44[2] + 1, 1, v44);
          *(void *)(v66 + v42) = v44;
        }
        unint64_t v48 = v44[2];
        unint64_t v47 = v44[3];
        if (v48 >= v47 >> 1)
        {
          char v44 = sub_1B68C1084(v47 > 1, v48 + 1, 1, v44);
          *(void *)(v66 + v42) = v44;
        }
        a3 = v64;
        _OWORD v44[2] = v48 + 1;
        v44[v48 + 4] = v34;

        uint64_t v14 = v65;
      }
    }
  }
  if (swift_conformsToProtocol2()) {
    int8x8_t v49 = v15;
  }
  else {
    int8x8_t v49 = 0;
  }
  if (!v49)
  {
    *a3 = 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, (uint64_t)v15 + OBJC_IVAR____TtC3VFX4Node_authoringID, v10);
    __int8 v50 = (int *)type metadata accessor for GraphError();
    sub_1B683DB30();
    int8x8_t v51 = (void *)swift_allocError();
    char v53 = v52;
    void *v52 = 0;
    uint64_t v54 = (char *)v52 + v50[5];
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v14, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0, 1, v10);
    int v55 = (char *)v53 + v50[6];
    *(void *)int v55 = 1;
    v55[8] = -96;
    *(_OWORD *)((char *)v53 + v50[7]) = xmmword_1B6EBFBD0;
    uint64_t v56 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
    uint64_t v57 = v66;
    char v58 = *(void **)(v66 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
    id v59 = v51;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v57 + v56) = v58;
    if ((v60 & 1) == 0)
    {
      char v58 = sub_1B68C1084(0, v58[2] + 1, 1, v58);
      *(void *)(v66 + v56) = v58;
    }
    unint64_t v62 = v58[2];
    unint64_t v61 = v58[3];
    if (v62 >= v61 >> 1)
    {
      char v58 = sub_1B68C1084(v61 > 1, v62 + 1, 1, v58);
      *(void *)(v66 + v56) = v58;
    }
    _OWORD v58[2] = v62 + 1;
    v58[v62 + 4] = v51;
  }
}

void *sub_1B6CD3320(uint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  v3[6] = 0;
  unint64_t v6 = MEMORY[0x1E4FBC860];
  v3[7] = sub_1B67F4B64(MEMORY[0x1E4FBC860]);
  v3[8] = sub_1B67F4C40(v6);
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000008;
  uint64_t v8 = v7 | 0x6000000000000000;
  unsigned int v33 = sub_1B67F4C6C(v6);
  uint64_t v29 = v8;
  uint64_t v30 = &v33;
  uint64_t v26 = sub_1B6CD4B00;
  uint64_t v27 = &v28;
  swift_retain();
  id v9 = a2;
  uint64_t v31 = sub_1B68C967C(v6);
  uint64_t v32 = v10;
  sub_1B68B9930((uint64_t)sub_1B687E200, (uint64_t)v25, 1, 0x1000000000000000uLL, 0, v6, &v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1B68086AC(v11);
  swift_release();
  swift_bridgeObjectRelease_n();
  v3[4] = v12;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x8000000000000008;
  uint64_t v14 = v13 | 0x6000000000000004;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  unsigned int v33 = sub_1B67F4C6C(MEMORY[0x1E4FBC860]);
  MEMORY[0x1F4188790](v33, v16);
  v24[6] = v14;
  v24[7] = &v33;
  MEMORY[0x1F4188790](v17, v18);
  _OWORD v24[2] = sub_1B6CD4E1C;
  v24[3] = v19;
  uint64_t v31 = sub_1B68C967C(v15);
  uint64_t v32 = v20;
  sub_1B68B9930((uint64_t)sub_1B687EAA4, (uint64_t)v24, 1, 0x1000000000000000uLL, 0, v15, &v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1B68086AC(v21);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease_n();
  v3[5] = v22;
  return v3;
}

uint64_t sub_1B6CD35BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 56);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1B62C1A30(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = sub_1B6CD3698(a1);
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *(void *)(v2 + 56);
    *(void *)(v2 + 56) = 0x8000000000000000;
    sub_1B67E3F98(v7, v9, a1, isUniquelyReferenced_nonNull_native);
    *(void *)(v2 + 56) = v12;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1B6CD3698(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v27 = MEMORY[0x1E4FBC870];
  uint64_t v3 = *(void *)(v1 + 32);
  if (*(void *)(v3 + 16))
  {
    unint64_t v4 = sub_1B62C1A30(a1);
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
      swift_bridgeObjectRetain();
      uint64_t v7 = *(void *)(v6 + 16);
      if (!v7) {
        goto LABEL_4;
      }
LABEL_7:
      uint64_t v9 = (uint64_t *)(v6 + 48);
      do
      {
        uint64_t v10 = *v9;
        v9 += 3;
        uint64_t v11 = swift_retain();
        sub_1B6CD35BC(v11);
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)(v13 + 8 * v10 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B6817A68(v14);
        swift_release();
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      uint64_t v8 = v27;
      if (*(void *)(v27 + 16)) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
  }
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v7) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1E4FBC870];
  if (!*(void *)(MEMORY[0x1E4FBC870] + 16))
  {
LABEL_10:
    sub_1B68805E0(0, &qword_1EB980D48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
    uint64_t v16 = *(void *)(v2 + 48);
    *(void *)(v2 + 48) = v16 + 1;
    *(void *)(inited + 32) = v16;
    uint64_t v17 = sub_1B6B0707C(inited);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    uint64_t v8 = v17;
  }
LABEL_11:
  if (sub_1B6C0C1E8()) {
    goto LABEL_12;
  }
  if (sub_1B6C0C40C()) {
    return v8;
  }
  type metadata accessor for IfNode(0);
  if (swift_dynamicCastClass())
  {
    uint64_t v19 = *(void *)(v2 + 48);
    *(void *)(v2 + 48) = v19 + 1;
    uint64_t v26 = v8;
    swift_bridgeObjectRetain();
    sub_1B637E330(&v25, v19);
    uint64_t v20 = v26;
    uint64_t v21 = *(void *)(v2 + 48);
    *(void *)(v2 + 48) = v21 + 1;
    uint64_t v26 = v8;
    swift_bridgeObjectRetain();
    sub_1B637E330(&v25, v21);
    uint64_t v22 = v26;
    sub_1B6CD4AA8();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1B6E76B30;
    *(void *)(v23 + 32) = v20;
    *(void *)(v23 + 40) = v22;
    return v8;
  }
  if (sub_1B6C0BFD0())
  {
LABEL_12:
    sub_1B6CD4AA8();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1B6E77050;
    *(void *)(v18 + 32) = v8;
    swift_bridgeObjectRetain();
    return v8;
  }
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B682A98C();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6CD399C(uint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = *(void *)(v1 + 64);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1B62C1A30(a1), (v8 & 1) != 0))
  {
    uint64_t v3 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = sub_1B6CD3A68(a1);
    if (!v2)
    {
      uint64_t v3 = v9;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = *(void *)(v4 + 64);
      *(void *)(v4 + 64) = 0x8000000000000000;
      sub_1B67E40C4(v3, a1, isUniquelyReferenced_nonNull_native);
      *(void *)(v4 + 64) = v12;
      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

uint64_t sub_1B6CD3A68(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 56);
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1B62C1A30(a1), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC870];
  }
  uint64_t v46 = v13;
  if (*(void *)(*(void *)(v3 + 40) + 16) && (sub_1B62C1A30(a1), (v14 & 1) != 0))
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = *(void *)(v15 + 16);
    if (!v16)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v16 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v16) {
      goto LABEL_8;
    }
  }
  uint64_t v43 = v5;
  char v44 = v9;
  uint64_t v42 = v6;
  uint64_t v45 = v15;
  uint64_t v17 = (uint64_t *)(v15 + 48);
  while (1)
  {
    uint64_t v13 = *(v17 - 2);
    uint64_t v18 = *v17;
    uint64_t v19 = swift_retain();
    uint64_t v20 = sub_1B6CD399C(v19);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v13;
    }
    uint64_t v21 = v20;
    if (*(void *)(v46 + 16))
    {
      uint64_t v22 = swift_bridgeObjectRetain();
      char v23 = sub_1B6CD45A8(v22, v21);
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        break;
      }
    }
    v17 += 3;
    sub_1B6817A68(v21);
    swift_release();
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      return v46;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = v42;
  uint64_t v24 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v44, v13 + OBJC_IVAR____TtC3VFX4Node_authoringID, v43);
  uint64_t v26 = (int *)type metadata accessor for GraphError();
  sub_1B683DB30();
  uint64_t v27 = (void *)swift_allocError();
  uint64_t v29 = v28;
  void *v28 = 0;
  uint64_t v30 = (char *)v28 + v26[5];
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v44, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v30, 0, 1, v24);
  uint64_t v31 = (char *)v29 + v26[6];
  *(void *)uint64_t v31 = v18;
  v31[8] = 64;
  uint64_t v32 = (void *)((char *)v29 + v26[7]);
  *uint64_t v32 = 0xD000000000000038;
  v32[1] = 0x80000001B6F51110;
  uint64_t v33 = *(void *)(v3 + 24);
  uint64_t v34 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
  char v35 = *(void **)(v33 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
  swift_retain();
  id v36 = v27;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v33 + v34) = v35;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v35 = sub_1B68C1084(0, v35[2] + 1, 1, v35);
    *(void *)(v33 + v34) = v35;
  }
  unint64_t v39 = v35[2];
  unint64_t v38 = v35[3];
  if (v39 >= v38 >> 1)
  {
    char v35 = sub_1B68C1084(v38 > 1, v39 + 1, 1, v35);
    *(void *)(v33 + v34) = v35;
  }
  _OWORD v35[2] = v39 + 1;
  v35[v39 + 4] = v27;
  swift_willThrow();
  id v40 = v27;
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();

  return v13;
}

uint64_t sub_1B6CD3E20()
{
  void (*v10)(uint64_t *__return_ptr, unint64_t);
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  void *v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  void *v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52[16];
  void (*v53)(uint64_t);
  char *v54;
  char v55;
  void *v56;
  void *v57;
  void v58[6];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void v76[2];

  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  unint64_t v3 = MEMORY[0x1E4FBC860];
  v58[0] = MEMORY[0x1E4FBC860];
  type metadata accessor for Graph();
  *(void *)(swift_allocObject() + 16) = v2;
  uint64_t v56 = v58;
  char v53 = sub_1B6CD47FC;
  uint64_t v54 = &v55;
  swift_bridgeObjectRetain_n();
  id v59 = sub_1B68C967C(v3);
  char v60 = v4;
  sub_1B68B9930((uint64_t)sub_1B678FEB4, (uint64_t)v52, 1, 0x1000000000000000uLL, 0, v3, &v59);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v58[0];
  if (v58[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B6E32C18();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v58[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 0;
      __int8 v50 = v6;
      int8x8_t v51 = v5 & 0xC000000000000001;
      int8x8_t v49 = v5;
      while (1)
      {
        if (v51)
        {
          uint64_t v9 = MEMORY[0x1BA9B4580](v7, v5);
        }
        else
        {
          uint64_t v9 = *(void *)(v5 + 8 * v7 + 32);
          swift_retain();
        }
        uint64_t v10 = *(void (**)(uint64_t *__return_ptr, unint64_t))(*(void *)v9 + 152);
        ((void (*)(void *__return_ptr))v10)(v58);
        uint64_t v75 = v58[1];
        v76[0] = v58[0];
        sub_1B62D8C3C((uint64_t)&v75);
        uint64_t v74 = v58[2];
        sub_1B62D8C3C((uint64_t)&v74);
        char v73 = v58[3];
        sub_1B62D8C3C((uint64_t)&v73);
        uint64_t v72 = v58[4];
        sub_1B62D8C3C((uint64_t)&v72);
        uint64_t v71 = v58[5];
        sub_1B62D8C3C((uint64_t)&v71);
        if (*(void *)(v76[0] + 16))
        {
          unint64_t v11 = *(void *)(v76[0] + 32);
          sub_1B66456F8(v11);
          sub_1B62D8C3C((uint64_t)v76);
          char v12 = swift_allocObject();
          *(void *)(v12 + 16) = 0x8000000000000008;
          uint64_t v13 = v12 | 0x6000000000000000;
          sub_1B66456F8(v11);
          LOBYTE(v13) = sub_1B697351C(v11, v13);
          swift_release();
          sub_1B6645740(v11);
          char v14 = sub_1B6645740(v11);
          if (v13) {
            goto LABEL_16;
          }
        }
        else
        {
          char v14 = sub_1B62D8C3C((uint64_t)v76);
        }
        v10(&v59, v14);
        char v69 = v59;
        uint64_t v70 = v60;
        sub_1B62D8C3C((uint64_t)&v69);
        long long v68 = v61;
        sub_1B62D8C3C((uint64_t)&v68);
        long long v67 = v62;
        sub_1B62D8C3C((uint64_t)&v67);
        uint64_t v66 = v63;
        sub_1B62D8C3C((uint64_t)&v66);
        uint64_t v65 = v64;
        sub_1B62D8C3C((uint64_t)&v65);
        if (!*(void *)(v70 + 16))
        {
          sub_1B62D8C3C((uint64_t)&v70);
          goto LABEL_5;
        }
        uint64_t v15 = *(void *)(v70 + 32);
        sub_1B66456F8(v15);
        sub_1B62D8C3C((uint64_t)&v70);
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = 0x8000000000000008;
        uint64_t v17 = v16 | 0x6000000000000000;
        sub_1B66456F8(v15);
        LOBYTE(v17) = sub_1B697351C(v15, v17);
        swift_release();
        sub_1B6645740(v15);
        sub_1B6645740(v15);
        if ((v17 & 1) == 0) {
          goto LABEL_5;
        }
LABEL_16:
        if (!*(void *)(*(void *)(v1 + 56) + 16) || (sub_1B62C1A30(v9), (v18 & 1) == 0))
        {
          uint64_t v19 = sub_1B6CD3698(v9);
          uint64_t v21 = v20;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v57 = *(void **)(v1 + 56);
          char v23 = v57;
          *(void *)(v1 + 56) = 0x8000000000000000;
          uint64_t v25 = sub_1B62C1A30(v9);
          uint64_t v26 = v24;
          uint64_t v27 = v23[2] + ((v24 & 1) == 0);
          if (v23[3] >= v27)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v30 = v57;
              if ((v24 & 1) == 0) {
                goto LABEL_26;
              }
            }
            else
            {
              sub_1B6ACC5F4();
              uint64_t v30 = v57;
              if ((v26 & 1) == 0) {
                goto LABEL_26;
              }
            }
          }
          else
          {
            sub_1B6AB6FB0(v27, isUniquelyReferenced_nonNull_native);
            char v28 = sub_1B62C1A30(v9);
            if ((v26 & 1) != (v29 & 1))
            {
LABEL_51:
              sub_1B6E33838();
              __break(1u);
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              __break(1u);
              return result;
            }
            uint64_t v25 = v28;
            uint64_t v30 = v57;
            if ((v26 & 1) == 0)
            {
LABEL_26:
              v30[(v25 >> 6) + 8] |= 1 << v25;
              *(void *)(v30[6] + 8 * v25) = v9;
              uint64_t v32 = (uint64_t *)(v30[7] + 16 * v25);
              *uint64_t v32 = v19;
              v32[1] = v21;
              ++v30[2];
              goto LABEL_27;
            }
          }
          uint64_t v31 = (uint64_t *)(v30[7] + 16 * v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *uint64_t v31 = v19;
          v31[1] = v21;
LABEL_27:
          uint64_t v8 = v50;
          *(void *)(v1 + 56) = v30;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = v49;
          goto LABEL_6;
        }
LABEL_5:
        swift_release();
        uint64_t v8 = v50;
LABEL_6:
        if (v8 == ++v7)
        {
          swift_bridgeObjectRelease();
          uint64_t v33 = 0;
          while (1)
          {
            if (v51)
            {
              char v35 = MEMORY[0x1BA9B4580](v33, v49);
            }
            else
            {
              char v35 = *(void *)(v49 + 8 * v33 + 32);
              swift_retain();
            }
            if (*(void *)(*(void *)(v1 + 64) + 16))
            {
              sub_1B62C1A30(v35);
              if (v36)
              {
                swift_release();
                goto LABEL_31;
              }
            }
            char v37 = sub_1B6CD3A68(v35);
            swift_bridgeObjectRetain();
            unint64_t v38 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v57 = *(void **)(v1 + 64);
            unint64_t v39 = v57;
            *(void *)(v1 + 64) = 0x8000000000000000;
            char v41 = sub_1B62C1A30(v35);
            uint64_t v42 = v40;
            uint64_t v43 = v39[2] + ((v40 & 1) == 0);
            if (v39[3] >= v43)
            {
              if (v38)
              {
                uint64_t v46 = v57;
                if (v40) {
                  goto LABEL_44;
                }
              }
              else
              {
                sub_1B6ACC7CC();
                uint64_t v46 = v57;
                if (v42) {
                  goto LABEL_44;
                }
              }
            }
            else
            {
              sub_1B6AB7260(v43, v38);
              char v44 = sub_1B62C1A30(v35);
              if ((v42 & 1) != (v45 & 1)) {
                goto LABEL_51;
              }
              char v41 = v44;
              uint64_t v46 = v57;
              if (v42)
              {
LABEL_44:
                unint64_t v47 = v46[7];
                swift_bridgeObjectRelease();
                *(void *)(v47 + 8 * v41) = v37;
                goto LABEL_30;
              }
            }
            v46[(v41 >> 6) + 8] |= 1 << v41;
            uint64_t v34 = 8 * v41;
            *(void *)(v46[6] + v34) = v35;
            *(void *)(v46[7] + v34) = v37;
            ++v46[2];
LABEL_30:
            uint64_t v8 = v50;
            *(void *)(v1 + 64) = v46;
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_31:
            if (v8 == ++v33)
            {
              swift_bridgeObjectRelease();
              return 1;
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_1B6CD4514()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScopeChecker()
{
  return self;
}

ValueMetadata *type metadata accessor for ScopeChecker.CFGScopeInfo()
{
  return &type metadata for ScopeChecker.CFGScopeInfo;
}

uint64_t sub_1B6CD45A8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  uint64_t v10 = a1 + 56;
  int64_t v24 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = a2 + 96;
LABEL_6:
  while (1)
  {
    uint64_t v11 = v5;
    if (!v9) {
      break;
    }
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v5 << 6);
    if (!v2) {
      goto LABEL_27;
    }
LABEL_21:
    uint64_t v16 = *(void *)(*(void *)(a2 + 48) + 8 * v13);
    uint64_t v17 = sub_1B6E33908();
    uint64_t v18 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_27;
    }
    uint64_t v20 = *(void *)(a1 + 48);
    if (*(void *)(v20 + 8 * v19) != v16)
    {
      uint64_t v21 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v21;
        if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        if (*(void *)(v20 + 8 * v19) == v16) {
          goto LABEL_6;
        }
      }
LABEL_27:
      swift_bridgeObjectRetain();
      sub_1B62BB588();
      return 0;
    }
  }
  ++v5;
  if (v11 + 1 >= v24) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  if (v14) {
    goto LABEL_20;
  }
  uint64_t v5 = v11 + 2;
  if (v11 + 2 >= v24) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  if (v14) {
    goto LABEL_20;
  }
  uint64_t v5 = v11 + 3;
  if (v11 + 3 >= v24) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  if (v14) {
    goto LABEL_20;
  }
  uint64_t v5 = v11 + 4;
  if (v11 + 4 >= v24) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  uint64_t v15 = v11;
  if (v14)
  {
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v13 = __clz(__rbit64(v14)) + (v5 << 6);
    if (!v2) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  while (v24 - 5 != v15)
  {
    unint64_t v14 = *(void *)(v23 + 8 * v15++);
    if (v14)
    {
      uint64_t v5 = v15 + 4;
      goto LABEL_20;
    }
  }
LABEL_30:
  swift_bridgeObjectRetain();
  sub_1B62BB588();
  return 1;
}

void sub_1B6CD47FC(uint64_t a1)
{
  sub_1B68C9158(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B6CD4818(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v8 = a6 & 0xFFFFFFFFFFLL;
  uint64_t v9 = (a3 >> 38) & 3;
  if (!v9)
  {
    if (!(v8 >> 38)) {
      return a1 == a4;
    }
    return 0;
  }
  int v11 = a3;
  if (v9 != 1)
  {
    if (a2 | a1 || (a3 & 0xFFFFFFFFFFLL) != 0x8000000000)
    {
      if ((a6 & 0xC000000000) != 0x8000000000 || a4 != 1 || a5) {
        return 0;
      }
    }
    else if ((a6 & 0xC000000000) != 0x8000000000 || a5 | a4)
    {
      return 0;
    }
    return v8 == 0x8000000000;
  }
  if ((a6 & 0xC000000000) != 0x4000000000) {
    return 0;
  }
  int v13 = a6;
  uint64_t v31 = a3 & 0xFFFFFFFFFFLL;
  uint64_t v14 = sub_1B6E31798();
  uint64_t v16 = v15;
  if (v14 == sub_1B6E31798() && v16 == v17)
  {
    id v18 = (id)a5;
    id v19 = (id)a1;
    id v20 = (id)a4;
    id v21 = (id)a2;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = sub_1B6E334B8();
    id v30 = (id)a5;
    id v29 = (id)a1;
    id v28 = (id)a4;
    id v27 = (id)a2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {

      return 0;
    }
  }
  if (!a2)
  {

    if (a5)
    {

      return 0;
    }
    goto LABEL_27;
  }
  if (!a5)
  {

    return 0;
  }
  sub_1B674F610();
  id v24 = (id)a2;
  id v25 = (id)a5;
  char v26 = sub_1B6E32358();

  if (v26)
  {
LABEL_27:
    if ((v31 & 0x100000000) == 0) {
      return (v8 & 0x100000000) == 0 && v11 == v13;
    }
    if ((v8 & 0x100000000) != 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B6CD4A70()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1B6CD4AA8()
{
  if (!qword_1E9DD8378)
  {
    sub_1B6AD94C8();
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD8378);
    }
  }
}

uint64_t sub_1B6CD4B00(void **a1)
{
  return sub_1B6C48F80(*a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

void sub_1B6CD4B0C(uint64_t a1)
{
  sub_1B6CD2CC0(a1, *(unsigned char *)(v1 + 16), *(unsigned char **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

void destroy for GraphScheduling(uint64_t a1)
{
}

uint64_t _s3VFX15GraphSchedulingOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 20);
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  sub_1B6650588(*(id *)a2, v4, v6 | (v5 << 32));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 20) = v5;
  *(_DWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t assignWithCopy for GraphScheduling(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 20);
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  sub_1B6650588(*(id *)a2, v4, v6 | (v5 << 32));
  uint64_t v7 = *(void **)a1;
  unint64_t v8 = *(void **)(a1 + 8);
  unint64_t v9 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 20) = v5;
  sub_1B66505D0(v7, v8, v9);
  return a1;
}

__n128 initializeWithTake for GraphScheduling(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GraphScheduling(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 20);
  int v4 = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  unint64_t v7 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 20) = v3;
  sub_1B66505D0(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphScheduling(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 20) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 20) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GraphScheduling(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 21) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(_DWORD *)(result + 16) = 0;
      *(unsigned char *)(result + 20) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1B6CD4D3C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 20) >> 6;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1B6CD4D58(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 16);
  uint64_t result = a1 + 16;
  unint64_t v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)uint64_t result = v2;
  *(unsigned char *)(result + 4) = BYTE4(v3) & 0x3F;
  return result;
}

uint64_t sub_1B6CD4D74(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    unsigned int v2 = *(_DWORD *)(result + 16);
    result += 16;
    unint64_t v3 = (v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32)) & 0x1FFFFFFFFLL | (a2 << 38);
    *(_DWORD *)uint64_t result = v2;
    *(unsigned char *)(result + 4) = BYTE4(v3);
  }
  else
  {
    *(void *)uint64_t result = (a2 - 2);
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(unsigned char *)(result + 20) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphScheduling()
{
  return &type metadata for GraphScheduling;
}

unint64_t sub_1B6CD4DC8()
{
  unint64_t result = qword_1E9DD8380;
  if (!qword_1E9DD8380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8380);
  }
  return result;
}

uint64_t sub_1B6CD4E20()
{
  return sub_1B6CD4F4C();
}

uint64_t sub_1B6CD4E64(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 20) == *(unsigned __int8 *)(a2 + 20)) {
    return (*(unsigned char *)(a1 + 12) != 0) ^ (*(unsigned char *)(a2 + 12) != 0);
  }
  else {
    return 1;
  }
}

uint64_t sub_1B6CD4E94()
{
  return sub_1B6CD50F0();
}

uint64_t sub_1B6CD4EE0(unsigned char *a1, unsigned char *a2)
{
  if (a1[8] == a2[8]) {
    return (*a1 != 0) ^ (*a2 != 0);
  }
  else {
    return 1;
  }
}

uint64_t sub_1B6CD4F10()
{
  return sub_1B6CD50F0();
}

uint64_t sub_1B6CD4F4C()
{
  if (*(unsigned char *)(v0 + 20))
  {
    if (*(unsigned char *)(v0 + 20) == 1)
    {
      int v1 = *(unsigned __int8 *)(v0 + 12);
      sub_1B62D2B64();
      if (v1)
      {
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
        *(void *)(result + 32) = &type metadata for TransientOriginScale;
        *(void *)(result + 40) = &off_1F0F843A8;
        unint64_t v3 = &type metadata for Scale2;
        int v4 = &off_1F0FA0F38;
LABEL_9:
        *(void *)(result + 48) = v3;
        *(void *)(result + 56) = v4;
        return result;
      }
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1B6E77050;
      unint64_t v7 = &type metadata for Scale2;
      unint64_t v8 = &off_1F0FA0F38;
    }
    else
    {
      int v6 = *(unsigned __int8 *)(v0 + 12);
      sub_1B62D2B64();
      if (v6)
      {
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
        *(void *)(result + 32) = &type metadata for TransientOriginScale;
        *(void *)(result + 40) = &off_1F0F843A8;
        unint64_t v3 = &type metadata for Scale3;
        int v4 = &off_1F0FA10A0;
        goto LABEL_9;
      }
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1B6E77050;
      unint64_t v7 = &type metadata for Scale3;
      unint64_t v8 = &off_1F0FA10A0;
    }
  }
  else
  {
    int v5 = *(unsigned __int8 *)(v0 + 12);
    sub_1B62D2B64();
    if (v5)
    {
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
      *(void *)(result + 32) = &type metadata for TransientOriginScale;
      *(void *)(result + 40) = &off_1F0F843A8;
      unint64_t v3 = &type metadata for Scale1;
      int v4 = &off_1F0FA0DD0;
      goto LABEL_9;
    }
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B6E77050;
    unint64_t v7 = &type metadata for Scale1;
    unint64_t v8 = &off_1F0FA0DD0;
  }
  *(void *)(result + 32) = v7;
  *(void *)(result + 40) = v8;
  return result;
}

uint64_t sub_1B6CD50F0()
{
  if (v0[8])
  {
    if (v0[8] == 1)
    {
      int v1 = *v0;
      sub_1B62D2B64();
      if (v1)
      {
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
        *(void *)(result + 32) = &type metadata for TransientOriginScale;
        *(void *)(result + 40) = &off_1F0F843A8;
        unint64_t v3 = &type metadata for Scale2;
        int v4 = &off_1F0FA0F38;
LABEL_9:
        *(void *)(result + 48) = v3;
        *(void *)(result + 56) = v4;
        return result;
      }
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1B6E77050;
      unint64_t v7 = &type metadata for Scale2;
      unint64_t v8 = &off_1F0FA0F38;
    }
    else
    {
      int v6 = *v0;
      sub_1B62D2B64();
      if (v6)
      {
        uint64_t result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
        *(void *)(result + 32) = &type metadata for TransientOriginScale;
        *(void *)(result + 40) = &off_1F0F843A8;
        unint64_t v3 = &type metadata for Scale3;
        int v4 = &off_1F0FA10A0;
        goto LABEL_9;
      }
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1B6E77050;
      unint64_t v7 = &type metadata for Scale3;
      unint64_t v8 = &off_1F0FA10A0;
    }
  }
  else
  {
    int v5 = *v0;
    sub_1B62D2B64();
    if (v5)
    {
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1B6E76B30;
      *(void *)(result + 32) = &type metadata for TransientOriginScale;
      *(void *)(result + 40) = &off_1F0F843A8;
      unint64_t v3 = &type metadata for Scale1;
      int v4 = &off_1F0FA0DD0;
      goto LABEL_9;
    }
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B6E77050;
    unint64_t v7 = &type metadata for Scale1;
    unint64_t v8 = &off_1F0FA0DD0;
  }
  *(void *)(result + 32) = v7;
  *(void *)(result + 40) = v8;
  return result;
}

uint64_t sub_1B6CD5294(uint64_t result, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a2 + 40);
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(v2 + 96);
  int v6 = (void *)(v3 + 56);
  while ((ValueMetadata *)*(v6 - 3) != &type metadata for Depth)
  {
    v6 += 5;
    if (!--v4) {
      goto LABEL_7;
    }
  }
  if (*(void *)(v5 + *v6) != result)
  {
LABEL_7:
    v9[3] = &type metadata for Depth;
    v9[4] = &off_1F0F9EF28;
    v9[0] = result;
    char v10 = 2;
    MEMORY[0x1F4188790](result, a2);
    sub_1B63932BC(v8, v7, (uint64_t (*)(uint64_t))sub_1B6393454);
    return sub_1B6391400((uint64_t)v9);
  }
  return result;
}

uint64_t sub_1B6CD53AC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(v4 + 112);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = result;
    uint64_t result = a4 & 1;
    uint64_t v8 = *(void *)(v4 + 96);
    for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Depth; i += 5)
    {
      if (!--v6) {
        return result;
      }
    }
    if (*(void *)(v8 + *i) == v7)
    {
      v12[3] = &type metadata for Depth;
      v12[4] = &off_1F0F9EF28;
      v12[0] = v7;
      char v13 = 3;
      MEMORY[0x1F4188790](result, a2);
      sub_1B63932BC(v10, v11, (uint64_t (*)(uint64_t))sub_1B6393454);
      return sub_1B6391400((uint64_t)v12);
    }
  }
  return result;
}

uint64_t sub_1B6CD54C4(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 != -1 && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != v3) {
      return 0;
    }
    uint64_t v6 = *(void *)(*(void *)(v1 + 80) + 8 * *(__int16 *)(v5 + 12 * (int)a1 + 6) + 32);
    uint64_t v7 = *(void *)(v6 + 112);
    uint64_t v8 = *(void *)(v7 + 16);
    if (!v8) {
      return 0;
    }
    uint64_t v9 = *(void *)(v6 + 96);
    for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Depth; i += 5)
    {
      if (!--v8) {
        return 0;
      }
    }
    if (v9) {
      return *(void *)(v9 + *i);
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SimplifiedHierarchySystem()
{
  return self;
}

uint64_t type metadata accessor for LastFrameWorldTransformSystem()
{
  return self;
}

uint64_t *sub_1B6CD5634(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  v24[0] = *(_OWORD *)(v1 + 16);
  v24[1] = v2;
  uint64_t v25 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v24, 0x200000000, v20);
  uint64_t result = (uint64_t *)sub_1B62D7910((uint64_t)v20, (uint64_t)v21, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v21[0])
  {
    if (v23 >= 1)
    {
      uint64_t v4 = v22;
      if (v22)
      {
        uint64_t v5 = v21[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 48 * v4;
        uint64_t v7 = (uint64_t *)(v5 + 40);
        do
        {
          uint64_t v12 = *v7;
          char v13 = *(os_unfair_lock_s **)(*v7 + 376);
          swift_retain();
          os_unfair_lock_lock(v13);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          int v14 = *(_DWORD *)(v12 + 24);
          swift_retain();
          uint64_t v19 = 0;
          memset(v18, 0, sizeof(v18));
          uint64_t v17 = 0;
          memset(v16, 0, sizeof(v16));
          int v15 = sub_1B637F628(v14, (uint64_t)&type metadata for Fixed, (uint64_t)&off_1F0F9F020, 0, 0, (uint64_t)v18, (uint64_t)v16);
          swift_release();
          sub_1B62E2EA0((uint64_t)v16, (uint64_t (*)(void))sub_1B63864B4);
          sub_1B62E2EA0((uint64_t)v18, (uint64_t (*)(void))sub_1B63864B4);
          if (sub_1B63B4340(v15))
          {
            sub_1B66603E4(v15);
          }
          else
          {
            uint64_t v8 = *(void *)(v12 + 232);
            uint64_t v9 = *(void *)(v12 + 240);
            char v10 = *(unsigned char *)(v12 + 120);
            uint64_t v11 = *(unsigned int *)(v12 + 28);
            LOBYTE(v18[0]) = *(unsigned char *)(v12 + 32);
            sub_1B628EEF4(v8, v9, v15, v10, v11 | ((unint64_t)LOBYTE(v18[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          swift_release();
          v7 += 6;
          v6 -= 48;
        }
        while (v6);
        sub_1B632F170(v20);
      }
    }
    return sub_1B632F170(v20);
  }
  return result;
}

uint64_t sub_1B6CD585C(char *__src, char *a2, char *a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - a2;
  uint64_t v11 = (a3 - a2) / 48;
  int8x8_t v49 = __src;
  unint64_t v48 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -47) {
      goto LABEL_62;
    }
    if (__dst != a2 || &a2[48 * v11] <= __dst) {
      memmove(__dst, a2, 48 * v11);
    }
    id v28 = &v4[48 * v11];
    unint64_t v47 = v28;
    int8x8_t v49 = v6;
    if (v7 >= v6 || v10 < 48)
    {
LABEL_61:
      sub_1B6D66EA8((void **)&v49, &v48, &v47);
      return 1;
    }
    while (1)
    {
      uint64_t v29 = *(void *)(*((void *)v28 - 1) + 40);
      uint64_t v30 = *(void *)(v29 + 112);
      uint64_t v31 = *(void *)(v30 + 16);
      if (v31)
      {
        uint64_t v32 = *(void *)(v29 + 96);
        uint64_t v33 = (void *)(v30 + 56);
        while ((ValueMetadata *)*(v33 - 3) != &type metadata for Depth)
        {
          v33 += 5;
          if (!--v31) {
            goto LABEL_42;
          }
        }
        uint64_t v34 = *(void *)(v32 + *v33);
      }
      else
      {
LABEL_42:
        uint64_t v34 = 0;
      }
      char v35 = v5 - 48;
      uint64_t v36 = *(void *)(*((void *)v6 - 1) + 40);
      uint64_t v37 = *(void *)(v36 + 112);
      uint64_t v38 = *(void *)(v37 + 16);
      if (v38)
      {
        uint64_t v39 = *(void *)(v36 + 96);
        id v40 = (void *)(v37 + 56);
        while ((ValueMetadata *)*(v40 - 3) != &type metadata for Depth)
        {
          v40 += 5;
          if (!--v38) {
            goto LABEL_48;
          }
        }
        if (v34 >= *(void *)(v39 + *v40))
        {
LABEL_49:
          unint64_t v47 = v28 - 48;
          if (v5 < v28 || v35 >= v28 || v5 != v28)
          {
            long long v41 = *((_OWORD *)v28 - 3);
            long long v42 = *((_OWORD *)v28 - 1);
            *((_OWORD *)v5 - 2) = *((_OWORD *)v28 - 2);
            *((_OWORD *)v5 - 1) = v42;
            *(_OWORD *)char v35 = v41;
          }
          uint64_t v43 = v6;
          v28 -= 48;
          if (v6 <= v7) {
            goto LABEL_61;
          }
          goto LABEL_60;
        }
      }
      else
      {
LABEL_48:
        if ((v34 & 0x8000000000000000) == 0) {
          goto LABEL_49;
        }
      }
      uint64_t v43 = v6 - 48;
      if (v5 != v6 || v35 >= v6)
      {
        long long v44 = *(_OWORD *)v43;
        long long v45 = *((_OWORD *)v6 - 1);
        *((_OWORD *)v5 - 2) = *((_OWORD *)v6 - 2);
        *((_OWORD *)v5 - 1) = v45;
        *(_OWORD *)char v35 = v44;
      }
      int8x8_t v49 = v6 - 48;
      if (v43 <= v7) {
        goto LABEL_61;
      }
LABEL_60:
      uint64_t v6 = v43;
      v5 -= 48;
      if (v28 <= v4) {
        goto LABEL_61;
      }
    }
  }
  if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    uint64_t v12 = &v4[48 * v9];
    unint64_t v47 = v12;
    if (v6 < v5 && v8 >= 48)
    {
      char v13 = v4;
      while (1)
      {
        uint64_t v14 = *(void *)(*((void *)v6 + 5) + 40);
        uint64_t v15 = *(void *)(v14 + 112);
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16)
        {
          uint64_t v17 = *(void *)(v14 + 96);
          id v18 = (void *)(v15 + 56);
          while ((ValueMetadata *)*(v18 - 3) != &type metadata for Depth)
          {
            v18 += 5;
            if (!--v16) {
              goto LABEL_15;
            }
          }
          uint64_t v16 = *(void *)(v17 + *v18);
        }
LABEL_15:
        uint64_t v19 = *(void *)(*((void *)v13 + 5) + 40);
        uint64_t v20 = *(void *)(v19 + 112);
        uint64_t v21 = *(void *)(v20 + 16);
        if (v21)
        {
          uint64_t v22 = *(void *)(v19 + 96);
          uint64_t v23 = (void *)(v20 + 56);
          while ((ValueMetadata *)*(v23 - 3) != &type metadata for Depth)
          {
            v23 += 5;
            if (!--v21) {
              goto LABEL_19;
            }
          }
          if (v16 < *(void *)(v22 + *v23))
          {
LABEL_24:
            uint64_t v25 = v6 + 48;
            id v24 = v6;
            if (v7 == v6 && v7 < v25) {
              goto LABEL_29;
            }
            goto LABEL_28;
          }
        }
        else
        {
LABEL_19:
          if (v16 < 0) {
            goto LABEL_24;
          }
        }
        uint64_t v4 = v13 + 48;
        id v24 = v13;
        uint64_t v25 = v6;
        if (v7 == v13)
        {
          v13 += 48;
          if (v7 < v4) {
            goto LABEL_29;
          }
        }
        else
        {
          v13 += 48;
        }
LABEL_28:
        long long v26 = *(_OWORD *)v24;
        long long v27 = *((_OWORD *)v24 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v24 + 1);
        *((_OWORD *)v7 + 2) = v27;
        *(_OWORD *)uint64_t v7 = v26;
LABEL_29:
        v7 += 48;
        if (v13 < v12)
        {
          uint64_t v6 = v25;
          if (v25 < v5) {
            continue;
          }
        }
        unint64_t v48 = v4;
        int8x8_t v49 = v7;
        goto LABEL_61;
      }
    }
    goto LABEL_61;
  }
LABEL_62:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

char *sub_1B6CD5C1C(uint64_t a1, char *a2, uint64_t a3)
{
  return sub_1B6CD5C74(a1, a2, a3, (void (*)(void, char *, uint64_t, void, uint64_t))sub_1B6CD53AC);
}

char *sub_1B6CD5C48(uint64_t a1, char *a2, uint64_t a3)
{
  return sub_1B6CD5C74(a1, a2, a3, (void (*)(void, char *, uint64_t, void, uint64_t))sub_1B6CD5294);
}

char *sub_1B6CD5C74(uint64_t a1, char *a2, uint64_t a3, void (*a4)(void, char *, uint64_t, void, uint64_t))
{
  a4(**(void **)(v4 + 16), a2, a3, 0, a1);
  return sub_1B634507C(a2);
}

BOOL sub_1B6CD5CD0(uint64_t a1, uint64_t a2, float32x2_t *a3, char a4, uint64_t a5, uint64_t a6, float32x2_t *a7, char a8)
{
  if ((sub_1B6E31D48() & 1) != 0 && sub_1B634027C(a2, a6))
  {
    if (a3)
    {
      if (a7 && (sub_1B69196E0(a3, a7) & 1) != 0) {
        return a4 == a8;
      }
    }
    else if (!a7)
    {
      return a4 == a8;
    }
  }
  return 0;
}

void sub_1B6CD5D6C(uint64_t a1, uint64_t a2, char a3, float a4, double a5, double a6, __n128 a7)
{
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    uint64_t v8 = 0;
    float v9 = fminf(fmaxf(a4, 0.0), 1.0);
    uint64_t v10 = a2 + 32;
    unint64_t v11 = *(void *)(a2 + 16);
    do
    {
      unint64_t v12 = v11 >> 1;
      unint64_t v13 = v8 + (v11 >> 1);
      v11 += ~(v11 >> 1);
      if (v9 >= *(float *)(v10 + 4 * v13)) {
        uint64_t v8 = v13 + 1;
      }
      else {
        unint64_t v11 = v12;
      }
    }
    while ((uint64_t)v11 > 0);
    if (v8 < v7 && v8)
    {
      uint64_t v14 = v8 - 1;
      if (v8 <= 0) {
        uint64_t v14 = 0;
      }
      if (a3)
      {
        a7.n128_f32[0] = (float)(v9 - *(float *)(v10 + 4 * v14))
                       / (float)(*(float *)(v10 + 4 * v8) - *(float *)(v10 + 4 * v14));
        __n128 v77 = a7;
        uint64_t v15 = a1 + 32;
        if (a3 == 1)
        {
          simd_float4 v16 = *(simd_float4 *)(v15 + 16 * v14);
          float32x4_t v74 = (float32x4_t)v16;
          v16.i32[3] = 0;
          simd_float4 v17 = _simd_pow_f4(v16, (simd_float4)xmmword_1B6EBFE20);
          float32x4_t v70 = (float32x4_t)vdupq_n_s32(0x3F870A3Du);
          float32x4_t v72 = (float32x4_t)vdupq_n_s32(0xBD6147AE);
          float32x4_t v76 = (float32x4_t)vdupq_n_s32(0x414EB852u);
          float32x4_t v68 = (float32x4_t)vdupq_n_s32(0x3B4D2E1Cu);
          int32x4_t v18 = vcgeq_f32(v68, v74);
          v18.i32[3] = 0;
          float32x4_t v66 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v18), (int8x16_t)vmulq_f32(v74, v76), (int8x16_t)vmlaq_f32(v72, v70, (float32x4_t)v17));
          simd_float4 v19 = *(simd_float4 *)(v15 + 16 * v8);
          float32x4_t v64 = (float32x4_t)v19;
          v19.i32[3] = 0;
          simd_float4 v20 = _simd_pow_f4(v19, (simd_float4)xmmword_1B6EBFE20);
          int32x4_t v21 = vcgeq_f32(v68, v64);
          v21.i32[3] = 0;
          float32x4_t v22 = vsubq_f32((float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v21), (int8x16_t)vmulq_f32(v64, v76), (int8x16_t)vmlaq_f32(v72, v70, (float32x4_t)v20)), v66);
          v23.i32[3] = v77.n128_i32[3];
          *(float32x2_t *)v23.f32 = vadd_f32(*(float32x2_t *)v66.f32, vmul_n_f32(*(float32x2_t *)v22.f32, v77.n128_f32[0]));
          v23.f32[2] = v66.f32[2] + vmuls_lane_f32(v77.n128_f32[0], v22, 2);
          simd_float4 v24 = (simd_float4)vdivq_f32(vaddq_f32(v23, (float32x4_t)vdupq_n_s32(0x3D6147AEu)), v70);
          v24.i32[3] = 0;
          _simd_pow_f4(v24, (simd_float4)xmmword_1B6E72D40);
        }
        else
        {
          simd_float4 v25 = (simd_float4)vmulq_laneq_f32(*(float32x4_t *)(v15 + 16 * v14), *(float32x4_t *)(v15 + 16 * v14), 3);
          float32x4_t v69 = (float32x4_t)v25;
          v25.i32[3] = 0;
          simd_float4 v26 = _simd_pow_f4(v25, (simd_float4)xmmword_1B6EBFE20);
          float32x4_t v27 = (float32x4_t)vdupq_n_s32(0x3F870A3Du);
          float32x4_t v75 = (float32x4_t)vdupq_n_s32(0xBD6147AE);
          int8x16_t v28 = (int8x16_t)vmlaq_f32(v75, v27, (float32x4_t)v26);
          float32x4_t v71 = (float32x4_t)vdupq_n_s32(0x414EB852u);
          float32x4_t v73 = v27;
          float32x4_t v67 = (float32x4_t)vdupq_n_s32(0x3B4D2E1Cu);
          int32x4_t v29 = vcgeq_f32(v67, v69);
          v29.i32[3] = 0;
          int8x16_t v30 = vbslq_s8((int8x16_t)vcltzq_s32(v29), (int8x16_t)vmulq_f32(v69, v71), v28);
          float v31 = fmaxf(fmaxf(*(float *)v30.i32, *(float *)&v30.i32[2]), *(float *)&v30.i32[1]);
          float v32 = v31 - fminf(fminf(*(float *)v30.i32, *(float *)&v30.i32[2]), *(float *)&v30.i32[1]);
          float v33 = 0.0;
          float v34 = 0.0;
          if (v32 != 0.0)
          {
            float v35 = (float)((float)(*(float *)v30.i32 - *(float *)&v30.i32[1]) / v32) + 4.0;
            if (*(float *)&v30.i32[1] == v31) {
              float v35 = (float)((float)(*(float *)&v30.i32[2] - *(float *)v30.i32) / v32) + 2.0;
            }
            if (*(float *)v30.i32 == v31) {
              float v36 = (float)(*(float *)&v30.i32[1] - *(float *)&v30.i32[2]) / v32;
            }
            else {
              float v36 = v35;
            }
            if (v36 >= 0.0) {
              float v34 = v36 * 0.16667;
            }
            else {
              float v34 = (float)(v36 * 0.16667) + 1.0;
            }
          }
          float v37 = v32 / v31;
          if (v31 == 0.0) {
            float v38 = 0.0;
          }
          else {
            float v38 = v37;
          }
          simd_float4 v39 = (simd_float4)vmulq_laneq_f32(*(float32x4_t *)(v15 + 16 * v8), *(float32x4_t *)(v15 + 16 * v8), 3);
          float32x4_t v65 = (float32x4_t)v39;
          v39.i32[3] = 0;
          simd_float4 v40 = _simd_pow_f4(v39, (simd_float4)xmmword_1B6EBFE20);
          int32x4_t v41 = vcgeq_f32(v67, v65);
          v41.i32[3] = 0;
          int8x16_t v42 = vbslq_s8((int8x16_t)vcltzq_s32(v41), (int8x16_t)vmulq_f32(v65, v71), (int8x16_t)vmlaq_f32(v75, v73, (float32x4_t)v40));
          float v43 = fmaxf(fmaxf(*(float *)v42.i32, *(float *)&v42.i32[2]), *(float *)&v42.i32[1]);
          float v44 = v43 - fminf(fminf(*(float *)v42.i32, *(float *)&v42.i32[2]), *(float *)&v42.i32[1]);
          if (v44 != 0.0)
          {
            float v45 = (float)((float)(*(float *)v42.i32 - *(float *)&v42.i32[1]) / v44) + 4.0;
            if (*(float *)&v42.i32[1] == v43) {
              float v45 = (float)((float)(*(float *)&v42.i32[2] - *(float *)v42.i32) / v44) + 2.0;
            }
            if (*(float *)v42.i32 == v43) {
              float v46 = (float)(*(float *)&v42.i32[1] - *(float *)&v42.i32[2]) / v44;
            }
            else {
              float v46 = v45;
            }
            if (v46 >= 0.0) {
              float v33 = v46 * 0.16667;
            }
            else {
              float v33 = (float)(v46 * 0.16667) + 1.0;
            }
          }
          float v47 = v44 / v43;
          float v48 = 0.0;
          if (v43 == 0.0) {
            float v47 = 0.0;
          }
          float v49 = v38 + (float)(v77.n128_f32[0] * (float)(v47 - v38));
          float v50 = v34 + 1.0;
          float v51 = v33 + 1.0;
          if (v33 <= v34) {
            float v50 = v34;
          }
          else {
            float v51 = v33;
          }
          float v52 = v51 - v34;
          float v53 = v50 - v33;
          if (v52 > v53) {
            float v54 = -v53;
          }
          else {
            float v54 = v52;
          }
          float v55 = v34 + (float)(v77.n128_f32[0] * v54);
          if (v55 < 0.0) {
            float v55 = v55 + 1.0;
          }
          if (v55 > 1.0) {
            float v55 = v55 + -1.0;
          }
          v56.i64[0] = __PAIR64__(LODWORD(v49), LODWORD(v55));
          v56.i64[1] = COERCE_UNSIGNED_INT(v31 + (float)(v77.n128_f32[0] * (float)(v43 - v31)));
          float32x4_t v57 = vmaxnmq_f32(v56, (float32x4_t)0);
          v57.i32[3] = 0;
          float32x4_t v58 = vminnmq_f32(v57, (float32x4_t)xmmword_1B6E4F540);
          if (v58.f32[1] == 0.0)
          {
            float32x4_t v59 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v58, 2);
          }
          else
          {
            if (v58.f32[0] != 1.0) {
              float v48 = 6.0 * v58.f32[0];
            }
            int v61 = (int)v48;
            float v62 = v48 - (float)(int)v48;
            float32x4_t v59 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v58, 2);
            v59.i32[1] = vmuls_lane_f32(1.0 - v58.f32[1], v58, 2);
            v59.i32[2] = vmuls_lane_f32(1.0 - (float)(v58.f32[1] * v62), v58, 2);
            int32x4_t v63 = (int32x4_t)v59;
            v63.i32[3] = vmuls_lane_f32(1.0 - (float)(v58.f32[1] * (float)(1.0 - v62)), v58, 2);
            switch(v61)
            {
              case 0:
                float32x4_t v59 = (float32x4_t)vzip1q_s32(v63, (int32x4_t)vextq_s8((int8x16_t)v63, (int8x16_t)v63, 0xCuLL));
                break;
              case 1:
                float32x4_t v59 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v59, (int32x4_t)v59), (int8x16_t)v59, 0xCuLL);
                break;
              case 2:
                float32x4_t v59 = (float32x4_t)vrev64q_s32(v63);
                break;
              case 3:
                float32x4_t v59 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v59, (int8x16_t)v59, 0xCuLL), (int8x16_t)v59, 8uLL);
                break;
              case 4:
                float32x4_t v59 = (float32x4_t)vextq_s8((int8x16_t)v63, (int8x16_t)vrev64q_s32(v63), 0xCuLL);
                break;
              default:
                break;
            }
          }
          simd_float4 v60 = (simd_float4)vdivq_f32(vaddq_f32(v59, (float32x4_t)vdupq_n_s32(0x3D6147AEu)), (float32x4_t)vdupq_n_s32(0x3F870A3Du));
          v60.i32[3] = 0;
          _simd_pow_f4(v60, (simd_float4)xmmword_1B6E72D40);
        }
      }
    }
  }
}

uint64_t sub_1B6CD63A8()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_values);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_1B6E31C28();

    int64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      float32x4_t v27 = v1;
      uint64_t v31 = v3;
      sub_1B6C3D7CC(0, v6, 0);
      uint64_t v26 = v5;
      uint64_t v7 = v5 + 32;
      do
      {
        sub_1B62CAAD8(v7, (uint64_t)v30);
        sub_1B62CAAD8((uint64_t)v30, (uint64_t)v29);
        sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
        if (swift_dynamicCast())
        {
          objc_msgSend(v28, sel_floatValue);
          int v9 = v8;
        }
        else
        {
          int v9 = 0;
        }
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v30);
        uint64_t v3 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B6C3D7CC(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v31;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1B6C3D7CC(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v31;
        }
        *(void *)(v3 + 16) = v11 + 1;
        *(_DWORD *)(v3 + 4 * v11 + 32) = v9;
        v7 += 32;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      uint64_t v1 = v27;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  id v12 = objc_msgSend(v1, sel_keyTimes, v26);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v14 = v12;
    sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
    unint64_t v15 = sub_1B6E31C28();

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_17:
        v30[0] = v13;
        sub_1B6C3D7CC(0, v16 & ~(v16 >> 63), 0);
        uint64_t v17 = 0;
        uint64_t v18 = v30[0];
        do
        {
          if ((v15 & 0xC000000000000001) != 0) {
            id v19 = (id)MEMORY[0x1BA9B4580](v17, v15);
          }
          else {
            id v19 = *(id *)(v15 + 8 * v17 + 32);
          }
          simd_float4 v20 = v19;
          objc_msgSend(v19, sel_floatValue);
          int v22 = v21;

          v30[0] = v18;
          unint64_t v24 = *(void *)(v18 + 16);
          unint64_t v23 = *(void *)(v18 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1B6C3D7CC(v23 > 1, v24 + 1, 1);
            uint64_t v18 = v30[0];
          }
          ++v17;
          *(void *)(v18 + 16) = v24 + 1;
          *(_DWORD *)(v18 + 4 * v24 + 32) = v22;
        }
        while (v16 != v17);
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16) {
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1B6CD66D0()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_values);
  if (!v2
    || (v3 = v2, uint64_t v4 = sub_1B6E31C28(), v3, v5 = sub_1B6B62D74(v4), swift_bridgeObjectRelease(), !v5))
  {
    id v6 = objc_msgSend(v1, sel_values);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_1B6E31C28();

      int64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v35 = v5;
        sub_1B6C3D70C(0, v9, 0);
        uint64_t v10 = v8 + 32;
        while (1)
        {
          sub_1B62CAAD8(v10, (uint64_t)v34);
          sub_1B62CAAD8((uint64_t)v34, (uint64_t)v33);
          type metadata accessor for CGColor(0);
          swift_dynamicCast();
          uint64_t v11 = sub_1B6E320F8();
          if (!v11) {
            goto LABEL_10;
          }
          if (*(void *)(v11 + 16) != 4) {
            break;
          }
          float64x2_t v29 = *(float64x2_t *)(v11 + 32);
          float64x2_t v30 = *(float64x2_t *)(v11 + 48);

          swift_bridgeObjectRelease();
          float32x4_t v12 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v29), v30);
LABEL_11:
          float32x4_t v31 = v12;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v34);
          uint64_t v5 = v35;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B6C3D70C(0, *(void *)(v5 + 16) + 1, 1);
            uint64_t v5 = v35;
          }
          unint64_t v14 = *(void *)(v5 + 16);
          unint64_t v13 = *(void *)(v5 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1B6C3D70C(v13 > 1, v14 + 1, 1);
            uint64_t v5 = v35;
          }
          *(void *)(v5 + 16) = v14 + 1;
          *(float32x4_t *)(v5 + 16 * v14 + 32) = v31;
          v10 += 32;
          if (!--v9) {
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
LABEL_10:

        float32x4_t v12 = 0uLL;
        goto LABEL_11;
      }
LABEL_16:
      swift_bridgeObjectRelease();
    }
  }
  id v15 = objc_msgSend(v1, sel_keyTimes, *(_OWORD *)&v29);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v17 = v15;
    sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
    unint64_t v18 = sub_1B6E31C28();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v19)
      {
LABEL_20:
        v34[0] = v16;
        sub_1B6C3D7CC(0, v19 & ~(v19 >> 63), 0);
        uint64_t v20 = 0;
        uint64_t v21 = v34[0];
        do
        {
          if ((v18 & 0xC000000000000001) != 0) {
            id v22 = (id)MEMORY[0x1BA9B4580](v20, v18);
          }
          else {
            id v22 = *(id *)(v18 + 8 * v20 + 32);
          }
          unint64_t v23 = v22;
          objc_msgSend(v22, sel_floatValue);
          int v25 = v24;

          v34[0] = v21;
          unint64_t v27 = *(void *)(v21 + 16);
          unint64_t v26 = *(void *)(v21 + 24);
          if (v27 >= v26 >> 1)
          {
            sub_1B6C3D7CC(v26 > 1, v27 + 1, 1);
            uint64_t v21 = v34[0];
          }
          ++v20;
          *(void *)(v21 + 16) = v27 + 1;
          *(_DWORD *)(v21 + 4 * v27 + 32) = v25;
        }
        while (v19 != v20);
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v5;
}

void *sub_1B6CD6A3C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    *(void *)&long long v25 = MEMORY[0x1E4FBC860];
    id v8 = v4;
    swift_bridgeObjectRetain();
    sub_1B6E32A48();
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = v9 + 1;
      int v11 = *(_DWORD *)(a2 + 4 * v9 + 32);
      id v12 = objc_allocWithZone(NSNumber);
      LODWORD(v13) = v11;
      objc_msgSend(v12, sel_initWithFloat_, v13);
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
      uint64_t v9 = v10;
    }
    while (v6 != v10);
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  else
  {
    id v14 = v4;
  }
  sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
  id v15 = (void *)sub_1B6E31C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setKeyTimes_, v15);

  int64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v27 = v7;
    swift_bridgeObjectRetain();
    sub_1B6C3D918(0, v16, 0);
    uint64_t v17 = v7;
    unint64_t v18 = (float *)(a1 + 44);
    do
    {
      CGColorRef GenericRGB = CGColorCreateGenericRGB(*(v18 - 3), *(v18 - 2), *(v18 - 1), *v18);
      type metadata accessor for CGColor(0);
      uint64_t v26 = v20;
      uint64_t v27 = v17;
      *(void *)&long long v25 = GenericRGB;
      unint64_t v22 = *(void *)(v17 + 16);
      unint64_t v21 = *(void *)(v17 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1B6C3D918(v21 > 1, v22 + 1, 1);
        uint64_t v17 = v27;
      }
      *(void *)(v17 + 16) = v22 + 1;
      sub_1B62B57A8(&v25, (_OWORD *)(v17 + 32 * v22 + 32));
      v18 += 4;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v23 = (void *)sub_1B6E31C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setValues_, v23);

  return v5;
}

void *sub_1B6CD6CD8(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    id v7 = v4;
    swift_bridgeObjectRetain();
    sub_1B6E32A48();
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = v8 + 1;
      int v10 = *(_DWORD *)(a2 + 4 * v8 + 32);
      id v11 = objc_allocWithZone(NSNumber);
      LODWORD(v12) = v10;
      objc_msgSend(v11, sel_initWithFloat_, v12);
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
      uint64_t v8 = v9;
    }
    while (v6 != v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = v4;
  }
  sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
  id v14 = (void *)sub_1B6E31C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setKeyTimes_, v14);

  sub_1B68AD58C(a1);
  id v15 = (void *)sub_1B6E31C18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setValues_, v15);

  return v5;
}

uint64_t sub_1B6CD6EB4()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B6CD6F04(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v16 = a4;
  uint64_t v17 = a3;
  sub_1B6395F3C(0, &qword_1E9DD83B8, (uint64_t (*)(void))sub_1B639DD40, (uint64_t)&type metadata for ColorRamp.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  double v12 = (char *)&v15 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B639DD40();
  sub_1B6E33A88();
  uint64_t v19 = a2;
  char v18 = 0;
  sub_1B63996E0();
  sub_1B6399648(&qword_1E9DD83C0, (unint64_t *)&qword_1EB97D1F8);
  sub_1B6E32FA8();
  if (!v4)
  {
    char v13 = v16;
    uint64_t v19 = v17;
    char v18 = 1;
    sub_1B6399A70(0, (unint64_t *)&qword_1EB980320);
    sub_1B6399878((unint64_t *)&qword_1E9DCDD98);
    sub_1B6E32FA8();
    LOBYTE(v19) = v13;
    char v18 = 2;
    sub_1B6CDA5E0();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B6CD718C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BBA804(*a1, *a2);
}

uint64_t sub_1B6CD7198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6CDA084(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6CD71C0(uint64_t a1)
{
  unint64_t v2 = sub_1B639DD40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CD71FC(uint64_t a1)
{
  unint64_t v2 = sub_1B639DD40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CD7238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1B6397618(a1);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1B639EA20(v3);
  uint64_t v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = 1;
  return result;
}

uint64_t sub_1B6CD7298()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1B6E33918();
  sub_1B6CE1F00((uint64_t)v4, v1);
  sub_1B6CE1EA8((uint64_t)v4, v2);
  sub_1B6E33938();
  return sub_1B6E33988();
}

uint64_t sub_1B6CD7304(uint64_t a1)
{
  uint64_t v2 = v1[1];
  sub_1B6CE1F00(a1, *v1);
  uint64_t v3 = *(void *)(v2 + 16);
  sub_1B6E33928();
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    do
    {
      v4 += 4;
      sub_1B6E33958();
      --v3;
    }
    while (v3);
  }
  return sub_1B6E33938();
}

uint64_t sub_1B6CD7370()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1B6E33918();
  sub_1B6CE1F00((uint64_t)v4, v1);
  sub_1B6CE1EA8((uint64_t)v4, v2);
  sub_1B6E33938();
  return sub_1B6E33988();
}

uint64_t sub_1B6CD73D8(void *a1)
{
  return sub_1B6CD6F04(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1B6CD73F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (sub_1B6918BC4(*(void *)a1, *(void *)a2)) {
    return sub_1B634027C(v2, v4) & (v3 == v5);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B6CD745C()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6CD74BC()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B6CD750C(void *a1, __int16 a2, double a3, double a4)
{
  char v5 = HIBYTE(a2);
  sub_1B6395F3C(0, &qword_1E9DD8410, (uint64_t (*)(void))sub_1B6CDAA7C, (uint64_t)&type metadata for CurveTangents.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  id v14 = (char *)&v17 - v13;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CDAA7C();
  sub_1B6E33A88();
  double v19 = a3;
  char v18 = 0;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  sub_1B6395F3C(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B6CD9518((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v15);
  sub_1B6E32FA8();
  if (!v4)
  {
    double v19 = a4;
    char v18 = 1;
    sub_1B6E32FA8();
    LOBYTE(v19) = 2;
    sub_1B6E32F58();
    LOBYTE(v19) = v5;
    char v18 = 3;
    sub_1B6CDAB24();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6CD77B0(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAEF6C(*a1, *a2);
}

uint64_t sub_1B6CD77BC()
{
  uint64_t result = 0x49746E65676E6174;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4F746E65676E6174;
      break;
    case 2:
      uint64_t result = 0x73746E65676E6174;
      break;
    case 3:
      uint64_t result = 0x6C6F707265746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6CD786C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6CD9E68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6CD7894(uint64_t a1)
{
  unint64_t v2 = sub_1B6CDAA7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CD78D0(uint64_t a1)
{
  unint64_t v2 = sub_1B6CDAA7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CD790C(float32x2_t *a1, float32x2_t *a2)
{
  return sub_1B6CD9B20(a1[2].u8[0] | (unsigned __int16)(a1[2].u8[1] << 8), a2[2].u8[0] | (a2[2].u8[1] << 8), *a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1B6CD7930()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CD79B4()
{
  return sub_1B6E33938();
}

uint64_t sub_1B6CD7A14()
{
  return sub_1B6E33988();
}

void sub_1B6CD7A94(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = sub_1B6CDA2F4(a1);
  if (!v2)
  {
    *(double *)a2 = v5;
    *(void *)(a2 + 8) = v6;
    *(unsigned char *)(a2 + 16) = v4 & 1;
    *(unsigned char *)(a2 + 17) = HIBYTE(v4);
  }
}

uint64_t sub_1B6CD7AD0(void *a1)
{
  return sub_1B6CD750C(a1, *(unsigned __int8 *)(v1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 17) << 8), *(double *)v1, *(double *)(v1 + 8));
}

uint64_t sub_1B6CD7AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4) {
    sub_1B6CE1FA4(a1, a4);
  }
  return sub_1B6E33938();
}

uint64_t sub_1B6CD7BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B6E33918();
  sub_1B6CD7AF8((uint64_t)v7, a1, a2, a3);
  return sub_1B6E33988();
}

uint64_t sub_1B6CD7C24()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6CD7C74(char a1)
{
  if (!a1) {
    return 0x73656D6974;
  }
  if (a1 == 1) {
    return 0x7365756C6176;
  }
  return 0x73746E65676E6174;
}

uint64_t sub_1B6CD7CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1B6CDA1BC(a1);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_1B6CD7D28()
{
  return sub_1B6CD7BA4(*v0, v0[1], v0[2]);
}

uint64_t sub_1B6CD7D40(uint64_t a1)
{
  return sub_1B6CD7AF8(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1B6CD7D58()
{
  sub_1B6E33918();
  sub_1B6CD7AF8((uint64_t)v2, *v0, v0[1], v0[2]);
  return sub_1B6E33988();
}

BOOL sub_1B6CD7DA8(uint64_t a1, uint64_t a2)
{
  return sub_1B6CD5CD0(*(void *)a1, *(void *)(a1 + 8), *(float32x2_t **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(float32x2_t **)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1B6CD7DF8()
{
  swift_getWitnessTable();

  return sub_1B6B37010();
}

uint64_t sub_1B6CD7E64(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1B6CD7ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B6CD7F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B6CD7FB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6CD7C24();
  *a1 = result;
  return result;
}

uint64_t sub_1B6CD7FE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B6CD7C74(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B6CD8018()
{
  return sub_1B6CD7C74(*v0);
}

uint64_t sub_1B6CD8024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1B6CD7C70(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1B6CD8054(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B6CD80A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B6CD80FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a7;
  uint64_t v18 = a2;
  uint64_t v19 = a4;
  uint64_t v20 = a6;
  type metadata accessor for Curve.CodingKeys();
  swift_getWitnessTable();
  uint64_t v9 = sub_1B6E33038();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v17 - v12;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A88();
  uint64_t v25 = a3;
  char v24 = 0;
  sub_1B6399A70(0, (unint64_t *)&qword_1EB980320);
  sub_1B6399878((unint64_t *)&qword_1E9DCDD98);
  uint64_t v14 = v22;
  sub_1B6E32FA8();
  if (!v14)
  {
    uint64_t v15 = v19;
    uint64_t v25 = v18;
    char v24 = 1;
    sub_1B6E31D18();
    uint64_t v23 = *(void *)(v21 + 16);
    swift_getWitnessTable();
    sub_1B6E32FA8();
    if (v15)
    {
      uint64_t v25 = v15;
      char v24 = 2;
      sub_1B6399A70(0, &qword_1EB9801E0);
      sub_1B6CD9CA8(&qword_1E9DD83A0, (void (*)(void))sub_1B6CD9D78);
      sub_1B6E32FA8();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B6CD83BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Curve.CodingKeys();
  swift_getWitnessTable();
  uint64_t v16 = sub_1B6E32EA8();
  uint64_t v6 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v7);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v17 = a1;
  uint64_t v9 = (void *)a1;
  uint64_t v11 = (char *)&v16 - v10;
  sub_1B62C14BC(v9, v8);
  sub_1B6E33A48();
  if (v3)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v17);
  }
  else
  {
    uint64_t v12 = v6;
    sub_1B6399A70(0, (unint64_t *)&qword_1EB980320);
    char v19 = 0;
    sub_1B6399878((unint64_t *)&qword_1EB980328);
    uint64_t v13 = v16;
    sub_1B6E32DF8();
    sub_1B6E31D18();
    char v19 = 1;
    uint64_t v18 = *(void *)(a3 + 8);
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1B6E32DF8();
    uint64_t v6 = v20;
    sub_1B6CD9BA0();
    char v19 = 2;
    sub_1B6CD9C08();
    swift_bridgeObjectRetain();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v13);
    uint64_t v15 = v20;
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B674C83C(v15);
  }
  return v6;
}

uint64_t sub_1B6CD8740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1B6CD83BC(a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
  if (!v3)
  {
    *(void *)a3 = result;
    *(void *)(a3 + 8) = v6;
    *(void *)(a3 + 16) = v7;
    *(unsigned char *)(a3 + 24) = v8;
  }
  return result;
}

uint64_t sub_1B6CD877C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6CD80FC(a1, *v5, v5[1], v5[2], a5, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

void sub_1B6CD87AC(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC3VFX11CurveObject_curve;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX11CurveObject_curve);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = 4 * *(void *)(v4 + 16);
  uint64_t v7 = (void *)sub_1B6E31768();
  objc_msgSend(a1, sel_encodeBytes_length_forKey_, v5, v6, v7);

  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = 4 * *(void *)(v8 + 16);
  uint64_t v11 = (void *)sub_1B6E31768();
  objc_msgSend(a1, sel_encodeBytes_length_forKey_, v9, v10, v11);

  uint64_t v12 = *(void *)(v3 + 16);
  if (v12)
  {
    uint64_t v13 = v12 + 32;
    uint64_t v14 = 18 * *(void *)(v12 + 16);
    id v15 = (id)sub_1B6E31768();
    objc_msgSend(a1, sel_encodeBytes_length_forKey_, v13, v14, v15);
  }
}

id sub_1B6CD895C(void *a1)
{
  v25[1] = *MEMORY[0x1E4F143B8];
  v25[0] = 0;
  uint64_t v3 = v1;
  uint64_t v4 = (void *)sub_1B6E31768();
  id v5 = a1;
  uint64_t v6 = (char *)objc_msgSend(v5, sel_decodeBytesForKey_returnedLength_, v4, v25);

  if (!v6)
  {

    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v16 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v24 = 0;
    swift_retain();
    uint64_t v17 = 0x80000001B6F514A0;
    int v18 = v16;
    uint64_t v19 = 0xD00000000000001CLL;
    goto LABEL_15;
  }
  uint64_t v7 = (void *)sub_1B6E31768();
  id v5 = v5;
  uint64_t v8 = (char *)objc_msgSend(v5, sel_decodeBytesForKey_returnedLength_, v7, v25);

  if (!v8)
  {

    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v20 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v24 = 0;
    swift_retain();
    uint64_t v19 = 0xD00000000000001DLL;
    uint64_t v17 = 0x80000001B6F514C0;
    int v18 = v20;
LABEL_15:
    sub_1B6B33E34(v18, &v24, v19, v17);
    swift_release();

    swift_release();
    type metadata accessor for CurveObject();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v9 = v25[0] / 4;
  uint64_t v10 = sub_1B629AA38(v8, v25[0] / 4);
  uint64_t v11 = sub_1B629AA38(v6, v9);
  uint64_t v12 = &v3[OBJC_IVAR____TtC3VFX11CurveObject_curve];
  *(void *)uint64_t v12 = v10;
  *((void *)v12 + 1) = v11;
  *((void *)v12 + 2) = 0;
  v12[24] = 1;
  uint64_t v13 = (void *)sub_1B6E31768();
  id v14 = v5;
  id v15 = (char *)objc_msgSend(v14, sel_decodeBytesForKey_returnedLength_, v13, v25);

  if (v15)
  {
    *((void *)v12 + 2) = sub_1B69FFA40(v15, v25[0] / 18);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  v23.receiver = v3;
  v23.super_class = (Class)type metadata accessor for CurveObject();
  id v21 = objc_msgSendSuper2(&v23, sel_init);

  return v21;
}

id sub_1B6CD8D40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CurveObject();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1B6CD8DC4(int64_t *a1)
{
  id v3 = objc_msgSend(v1, sel_init);
  int64_t v4 = *a1;
  id v5 = v3;
  uint64_t v6 = sub_1B6CDA1E4(a1 + 1, v4);
  unint64_t v8 = v7;
  sub_1B63989B8(0, &qword_1E9DD83D0);
  sub_1B63989B8(0, (unint64_t *)&qword_1EB9805E0);
  id v9 = (id)sub_1B6E321C8();
  if (!v9) {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BD8]), sel_init);
  }
  id v10 = objc_msgSend(v9, sel_values);
  objc_msgSend(v5, sel_setValues_, v10);

  id v11 = objc_msgSend(v9, sel_keyTimes);
  objc_msgSend(v5, sel_setKeyTimes_, v11);

  objc_msgSend(v9, sel_duration);
  objc_msgSend(v5, sel_setDuration_);

  sub_1B62C2360(v6, v8);
  return v5;
}

id sub_1B6CD8F44(uint64_t a1, uint64_t a2, int64_t *a3)
{
  return sub_1B6CD8DC4(a3);
}

id sub_1B6CD8F6C(void *a1)
{
  id v1 = a1;
  id v2 = sub_1B6CD8FD8();
  unint64_t v4 = v3;

  id v5 = (void *)sub_1B6E30FC8();
  sub_1B62C2360((uint64_t)v2, v4);

  return v5;
}

id sub_1B6CD8FD8()
{
  v10[2] = *(id *)MEMORY[0x1E4F143B8];
  v10[0] = 0;
  id v1 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 0, v10);
  id v2 = v10[0];
  if (!v1)
  {
    id v9 = v2;
    sub_1B6E30D78();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x1B6CD9128);
  }
  uint64_t v3 = sub_1B6E30FD8();
  unint64_t v5 = v4;

  size_t v6 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      size_t v6 = (uint64_t)(0xFFFFFFFF00000001 * v3) >> 32;
      break;
    case 2uLL:
      size_t v6 = *(void *)(v3 + 24) - *(void *)(v3 + 16);
      break;
    case 3uLL:
      break;
    default:
      size_t v6 = BYTE6(v5);
      break;
  }
  v10[0] = (id)sub_1B6CD9DCC(v6 + 8);
  v10[1] = v7;
  sub_1B6CD97CC((uint64_t *)v10, v6, v3, v5);
  return v10[0];
}

uint64_t sub_1B6CD9138(void *a1, int a2, size_t __n, uint64_t a4, unint64_t a5)
{
  *a1 = __n;
  unint64_t v5 = a1 + 1;
  switch(a5 >> 62)
  {
    case 1uLL:
      sub_1B62FFBB0(a4, a5);
      uint64_t v12 = (char *)sub_1B6E30B98();
      if (v12) {
        uint64_t v12 = &v12[(int)a4 - sub_1B6E30BC8()];
      }
      sub_1B6E30BB8();
      if ((__n & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      memmove(v5, v12, __n);
      uint64_t result = sub_1B62C2360(a4, a5);
      break;
    case 2uLL:
      uint64_t v9 = *(void *)(a4 + 16);
      swift_retain();
      swift_retain();
      id v10 = (char *)sub_1B6E30B98();
      if (v10) {
        v10 += v9 - sub_1B6E30BC8();
      }
      sub_1B6E30BB8();
      if ((__n & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      memmove(v5, v10, __n);
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      memset(__src, 0, 14);
      if ((__n & 0x8000000000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    default:
      __src[0] = a4;
      LOWORD(__src[1]) = a5;
      BYTE2(__src[1]) = BYTE2(a5);
      BYTE3(__src[1]) = BYTE3(a5);
      BYTE4(__src[1]) = BYTE4(a5);
      BYTE5(__src[1]) = BYTE5(a5);
      if ((__n & 0x8000000000000000) != 0)
      {
LABEL_15:
        sub_1B6E32C88();
        __break(1u);
        JUMPOUT(0x1B6CD9334);
      }
LABEL_9:
      uint64_t result = (uint64_t)memcpy(a1 + 1, __src, __n);
      break;
  }
  return result;
}

uint64_t sub_1B6CD9344(void *a1)
{
  id v1 = a1;
  uint64_t v2 = CAKeyframeAnimation.serializedVFXBindingSize.getter();

  return v2;
}

uint64_t CAKeyframeAnimation.serializedVFXBindingSize.getter()
{
  id v1 = objc_msgSend(v0, sel_serializedVFXBindingData);
  uint64_t v2 = sub_1B6E30FD8();
  unint64_t v4 = v3;

  switch(v4 >> 62)
  {
    case 1uLL:
      sub_1B62C2360(v2, v4);
      uint64_t result = (uint64_t)(0xFFFFFFFF00000001 * v2) >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v2 + 24);
      sub_1B62C2360(v2, v4);
      uint64_t result = v6 - v7;
      break;
    case 3uLL:
      sub_1B62C2360(v2, v4);
      uint64_t result = 0;
      break;
    default:
      sub_1B62C2360(v2, v4);
      uint64_t result = BYTE6(v4);
      break;
  }
  return result;
}

uint64_t sub_1B6CD9450(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  a1[1] = sub_1B6CD9518((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
  a1[2] = sub_1B6CD9518((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v2);
  uint64_t result = sub_1B6CD9518((unint64_t *)&unk_1EB97D1C0, &qword_1EB980E90, v2);
  a1[3] = result;
  return result;
}

uint64_t sub_1B6CD9518(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6395F3C(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6CD957C(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  a1[1] = sub_1B6CD9518((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  a1[2] = sub_1B6CD9518((unint64_t *)&qword_1EB97D1D8, (unint64_t *)&qword_1EB980EB0, v2);
  uint64_t result = sub_1B6CD9518((unint64_t *)&unk_1EB97D1E0, (unint64_t *)&qword_1EB980EB0, v2);
  a1[3] = result;
  return result;
}

uint64_t sub_1B6CD9644(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
  a1[1] = sub_1B6CD9518((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
  a1[2] = sub_1B6CD9518((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v2);
  uint64_t result = sub_1B6CD9518((unint64_t *)&unk_1EB97D200, (unint64_t *)&qword_1EB980EF0, v2);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for CurveObject()
{
  return self;
}

uint64_t type metadata accessor for Curve()
{
  return sub_1B62C36EC();
}

ValueMetadata *type metadata accessor for ColorRamp()
{
  return &type metadata for ColorRamp;
}

unint64_t sub_1B6CD975C()
{
  unint64_t result = qword_1E9DD8398;
  if (!qword_1E9DD8398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8398);
  }
  return result;
}

uint64_t sub_1B6CD97B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6CD97CC(uint64_t *a1, size_t __n, uint64_t a3, unint64_t a4)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v24 = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1B6E77700;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v25 = (v5 >> 32) - (int)v5;
        uint64_t v26 = v24;
      }
      else
      {
        if (sub_1B6E30B98()) {
          sub_1B6E30BC8();
        }
        uint64_t v25 = (v5 >> 32) - (int)v5;
        sub_1B6E30BD8();
        swift_allocObject();
        uint64_t v26 = sub_1B6E30B78();
        swift_release();
      }
      uint64_t v27 = sub_1B6E30B98();
      uint64_t v28 = sub_1B6E30BC8();
      uint64_t v29 = sub_1B6E30BB8();
      if (v29 >= v25) {
        int v30 = v25;
      }
      else {
        int v30 = v29;
      }
      sub_1B6CD9138((void *)(v27 + (int)v5 - v28), v27 + v5 - v28 + v30, __n, a3, a4);
      uint64_t result = sub_1B62C2360(a3, a4);
      *a1 = v5;
      a1[1] = v26 | 0x4000000000000000;
      break;
    case 2uLL:
      *(void *)&long long v32 = *a1;
      *((void *)&v32 + 1) = v4 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1B6E30F58();
      uint64_t v16 = *((void *)&v32 + 1);
      uint64_t v17 = *(void *)(v32 + 16);
      uint64_t v18 = *(void *)(v32 + 24);
      uint64_t v19 = sub_1B6E30B98();
      uint64_t v20 = sub_1B6E30BC8();
      uint64_t v21 = v18 - v17;
      uint64_t v22 = sub_1B6E30BB8();
      if (v22 >= v21) {
        int v23 = v21;
      }
      else {
        int v23 = v22;
      }
      sub_1B6CD9138((void *)(v19 + v17 - v20), v19 + v17 - v20 + v23, __n, a3, a4);
      uint64_t result = sub_1B62C2360(a3, a4);
      *a1 = v32;
      a1[1] = v16 | 0x8000000000000000;
      break;
    case 3uLL:
      *(void *)((char *)&v32 + 7) = 0;
      *(void *)&long long v32 = 0;
      sub_1B6CD9138(&v32, (int)&v32, __n, a3, a4);
      uint64_t result = sub_1B62C2360(a3, a4);
      break;
    default:
      *(void *)&long long v32 = *a1;
      WORD4(v32) = v4;
      BYTE10(v32) = BYTE2(v4);
      BYTE11(v32) = BYTE3(v4);
      BYTE12(v32) = BYTE4(v4);
      BYTE13(v32) = BYTE5(v4);
      BYTE14(v32) = BYTE6(v4);
      sub_1B6CD9138(&v32, (int)&v32 + BYTE6(v4), __n, a3, a4);
      uint64_t v10 = v32;
      uint64_t v11 = DWORD2(v32);
      uint64_t v12 = BYTE12(v32);
      uint64_t v13 = BYTE13(v32);
      uint64_t v14 = BYTE14(v32);
      uint64_t result = sub_1B62C2360(a3, a4);
      *a1 = v10;
      a1[1] = v11 | (v12 << 32) | (v13 << 40) | (v14 << 48);
      break;
  }
  return result;
}

uint64_t sub_1B6CD9B20(__int16 a1, int a2, float32x2_t a3, float32x2_t a4, float32x2_t a5, float32x2_t a6)
{
  uint64_t result = 0;
  if (vceq_f32(a3, a5).u8[0])
  {
    int32x2_t v8 = vceq_f32((float32x2_t)__PAIR64__(a3.u32[1], a4.u32[0]), (float32x2_t)__PAIR64__(a5.u32[1], a6.u32[0]));
    if (v8.i8[4] & 1) != 0 && (v8.i8[0]) {
      return vceq_f32(a4, a6).u32[1] & (((a1 & 1) == 0) ^ a2) & (HIBYTE(a1) == (unsigned __int16)(a2 & 0xFF00) >> 8);
    }
  }
  return result;
}

uint64_t type metadata accessor for Curve.CodingKeys()
{
  return sub_1B62C36EC();
}

void sub_1B6CD9BA0()
{
  if (!qword_1EB9801F0)
  {
    sub_1B6399A70(255, &qword_1EB9801E0);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9801F0);
    }
  }
}

unint64_t sub_1B6CD9C08()
{
  unint64_t result = qword_1EB980200;
  if (!qword_1EB980200)
  {
    sub_1B6CD9BA0();
    sub_1B6CD9CA8(&qword_1EB9801E8, (void (*)(void))sub_1B6CD9D24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980200);
  }
  return result;
}

uint64_t sub_1B6CD9CA8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6399A70(255, &qword_1EB9801E0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6CD9D24()
{
  unint64_t result = qword_1EB97E3C0;
  if (!qword_1EB97E3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E3C0);
  }
  return result;
}

unint64_t sub_1B6CD9D78()
{
  unint64_t result = qword_1E9DD83A8;
  if (!qword_1E9DD83A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD83A8);
  }
  return result;
}

uint64_t sub_1B6CD9DCC(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      return 0;
    }
    else
    {
      sub_1B6E30BD8();
      swift_allocObject();
      sub_1B6E30BA8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1B6E30F98();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1B6CD9E68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E65676E6174 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4F746E65676E6174 && a2 == 0xEA00000000007475 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746E65676E6174 && a2 == 0xEE0064656B6E694CLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F707265746E69 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B6CDA084(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656D6974 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B6CDA1BC(uint64_t a1)
{
  return sub_1B6AB3840(a1);
}

uint64_t sub_1B6CDA1E4(void *__src, int64_t __n)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (!__n) {
    return 0;
  }
  if (__n <= 14)
  {
    memset(__dst, 0, sizeof(__dst));
    char v5 = __n;
    memcpy(__dst, __src, __n);
    return *(void *)__dst;
  }
  else
  {
    sub_1B6E30BD8();
    swift_allocObject();
    sub_1B6E30B88();
    if ((unint64_t)__n >= 0x7FFFFFFF)
    {
      sub_1B6E30F98();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = __n;
    }
    else
    {
      return __n << 32;
    }
  }
  return result;
}

double sub_1B6CDA2F4(void *a1)
{
  sub_1B6395F3C(0, &qword_1E9DD83F8, (uint64_t (*)(void))sub_1B6CDAA7C, (uint64_t)&type metadata for CurveTangents.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CDAA7C();
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
    sub_1B6395F3C(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    char v13 = 0;
    sub_1B6CD9518((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v10);
    sub_1B6E32DF8();
    double v2 = v14;
    char v13 = 1;
    sub_1B6E32DF8();
    LOBYTE(v14) = 2;
    sub_1B6E32DA8();
    char v13 = 3;
    sub_1B6CDAAD0();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B6CDA5E0()
{
  unint64_t result = qword_1E9DD83C8;
  if (!qword_1E9DD83C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD83C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorRamp.CodingKeys()
{
  return &type metadata for ColorRamp.CodingKeys;
}

ValueMetadata *type metadata accessor for CurveInterpolationMode()
{
  return &type metadata for CurveInterpolationMode;
}

__n128 initializeBufferWithCopyOfBuffer for CurveTangents(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CurveTangents(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CurveTangents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurveTangents()
{
  return &type metadata for CurveTangents;
}

unsigned char *_s3VFX22CurveInterpolationModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CDA7E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorRamp.InterpolationMode()
{
  return &type metadata for ColorRamp.InterpolationMode;
}

unint64_t sub_1B6CDA81C()
{
  unint64_t result = qword_1E9DD83D8;
  if (!qword_1E9DD83D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD83D8);
  }
  return result;
}

unint64_t sub_1B6CDA874()
{
  unint64_t result = qword_1E9DD83E0;
  if (!qword_1E9DD83E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD83E0);
  }
  return result;
}

unint64_t sub_1B6CDA8CC()
{
  unint64_t result = qword_1E9DD83E8;
  if (!qword_1E9DD83E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD83E8);
  }
  return result;
}

uint64_t sub_1B6CDA920()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B6CDA940()
{
  unint64_t result = qword_1E9DD83F0;
  if (!qword_1E9DD83F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD83F0);
  }
  return result;
}

unint64_t sub_1B6CDA998()
{
  unint64_t result = qword_1EB97FFB8;
  if (!qword_1EB97FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FFB8);
  }
  return result;
}

unint64_t sub_1B6CDA9F0()
{
  unint64_t result = qword_1EB97FFB0;
  if (!qword_1EB97FFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FFB0);
  }
  return result;
}

uint64_t sub_1B6CDAA44()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6CDAA60()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B6CDAA7C()
{
  unint64_t result = qword_1E9DD8400;
  if (!qword_1E9DD8400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8400);
  }
  return result;
}

unint64_t sub_1B6CDAAD0()
{
  unint64_t result = qword_1E9DD8408;
  if (!qword_1E9DD8408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8408);
  }
  return result;
}

unint64_t sub_1B6CDAB24()
{
  unint64_t result = qword_1E9DD8418;
  if (!qword_1E9DD8418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8418);
  }
  return result;
}

unint64_t sub_1B6CDAB78()
{
  unint64_t result = qword_1E9DD8428;
  if (!qword_1E9DD8428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8428);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CurveTangents.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CDAC98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurveTangents.CodingKeys()
{
  return &type metadata for CurveTangents.CodingKeys;
}

unint64_t sub_1B6CDACD4()
{
  unint64_t result = qword_1E9DD8430;
  if (!qword_1E9DD8430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8430);
  }
  return result;
}

unint64_t sub_1B6CDAD2C()
{
  unint64_t result = qword_1E9DD8438;
  if (!qword_1E9DD8438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8438);
  }
  return result;
}

unint64_t sub_1B6CDAD84()
{
  unint64_t result = qword_1E9DD8440;
  if (!qword_1E9DD8440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8440);
  }
  return result;
}

void sub_1B6CDADD8()
{
}

uint64_t sub_1B6CDAE24()
{
  return type metadata accessor for MathTransformNode(0);
}

uint64_t type metadata accessor for MathTransformNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8450);
}

uint64_t sub_1B6CDAE4C(char a1)
{
  return (*(uint64_t (**)(void))(*(void *)v1 + 248))(a1 & 1);
}

unint64_t sub_1B6CDAE74()
{
  return 0xD000000000000014;
}

uint64_t sub_1B6CDAE90@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB100((uint64_t)&unk_1F0F93DF8, (uint64_t)&unk_1F0F93DC8, a1, (__n128)xmmword_1B6E8DAE0);
}

unint64_t sub_1B6CDAEAC(char a1)
{
  if (a1) {
    return 0xD00000000000001ELL;
  }
  else {
    return 0xD00000000000001DLL;
  }
}

uint64_t sub_1B6CDAEE4()
{
  return type metadata accessor for QuaternionFromNormalNode(0);
}

uint64_t type metadata accessor for QuaternionFromNormalNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8460);
}

unint64_t sub_1B6CDAF0C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1B6CDAF28@<X0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76B30;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v3 + 16) = v4 | 0x1000000000000000;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000050;
  *(void *)(v2 + 40) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000028;
  *(void *)(v6 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  a1[2] = (uint64_t)&unk_1F0F9BFF8;
  a1[3] = (uint64_t)&unk_1F0F9BFB8;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v8;
  return result;
}

unint64_t sub_1B6CDB064(char a1)
{
  if (a1) {
    return 0xD000000000000027;
  }
  else {
    return 0xD000000000000026;
  }
}

uint64_t sub_1B6CDB0A0()
{
  return type metadata accessor for QuaternionFromFloat3AxisAngleNode(0);
}

uint64_t type metadata accessor for QuaternionFromFloat3AxisAngleNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8470);
}

unint64_t sub_1B6CDB0C8()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1B6CDB0E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB100((uint64_t)&unk_1F0F9C058, (uint64_t)&unk_1F0F9C028, a1, (__n128)xmmword_1B6E8DAD0);
}

uint64_t sub_1B6CDB100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, __n128 a4@<Q0>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = swift_allocObject();
  *(__n128 *)(v9 + 16) = a4;
  *(void *)(v8 + 16) = v9 | 0x1000000000000000;
  *(void *)(v7 + 32) = v8 | 0x6000000000000000;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000028;
  *(void *)(v10 + 32) = result | 0x6000000000000000;
  *a3 = v7;
  a3[1] = v10;
  a3[2] = a1;
  a3[3] = a2;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  a3[4] = MEMORY[0x1E4FBC860];
  a3[5] = v12;
  return result;
}

unint64_t sub_1B6CDB224(char a1)
{
  if (a1) {
    return 0xD000000000000024;
  }
  else {
    return 0xD000000000000023;
  }
}

uint64_t sub_1B6CDB25C()
{
  return type metadata accessor for QuaternionFromFloat4AxisAngleNode(0);
}

uint64_t type metadata accessor for QuaternionFromFloat4AxisAngleNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8480);
}

unint64_t sub_1B6CDB284()
{
  return 0xD000000000000019;
}

uint64_t sub_1B6CDB2A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB100((uint64_t)&unk_1F0F99CA8, (uint64_t)&unk_1F0F99C78, a1, (__n128)xmmword_1B6E8DAE0);
}

unint64_t sub_1B6CDB2BC(char a1)
{
  if (a1) {
    return 0xD000000000000022;
  }
  else {
    return 0xD000000000000021;
  }
}

uint64_t sub_1B6CDB2F4()
{
  return type metadata accessor for QuaternionFromEulerAnglesNode(0);
}

uint64_t type metadata accessor for QuaternionFromEulerAnglesNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8490);
}

unint64_t sub_1B6CDB31C()
{
  return 0xD000000000000017;
}

uint64_t sub_1B6CDB338@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB3E4((uint64_t)&unk_1F0F69B08, (uint64_t)&unk_1F0F69AD8, a1);
}

unint64_t sub_1B6CDB34C(char a1)
{
  if (a1) {
    return 0xD000000000000020;
  }
  else {
    return 0xD000000000000031;
  }
}

uint64_t sub_1B6CDB38C()
{
  return type metadata accessor for QuaternionXNode(0);
}

uint64_t type metadata accessor for QuaternionXNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD84A0);
}

unint64_t sub_1B6CDB3B4()
{
  return 0xD000000000000017;
}

uint64_t sub_1B6CDB3D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB3E4((uint64_t)&unk_1F0F69B68, (uint64_t)&unk_1F0F69B38, a1);
}

uint64_t sub_1B6CDB3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000050;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000028;
  *(void *)(v8 + 32) = result | 0x6000000000000000;
  *a3 = v6;
  a3[1] = v8;
  a3[2] = a1;
  a3[3] = a2;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  a3[4] = MEMORY[0x1E4FBC860];
  a3[5] = v10;
  return result;
}

unint64_t sub_1B6CDB4E4(char a1)
{
  if (a1) {
    return 0xD000000000000020;
  }
  else {
    return 0xD000000000000031;
  }
}

uint64_t sub_1B6CDB524()
{
  return type metadata accessor for QuaternionYNode(0);
}

uint64_t type metadata accessor for QuaternionYNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD84B0);
}

unint64_t sub_1B6CDB54C()
{
  return 0xD000000000000017;
}

uint64_t sub_1B6CDB568@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB3E4((uint64_t)&unk_1F0F69BC8, (uint64_t)&unk_1F0F69B98, a1);
}

unint64_t sub_1B6CDB57C(char a1)
{
  if (a1) {
    return 0xD000000000000020;
  }
  else {
    return 0xD000000000000031;
  }
}

uint64_t sub_1B6CDB5BC()
{
  return type metadata accessor for QuaternionZNode(0);
}

uint64_t type metadata accessor for QuaternionZNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD84C0);
}

unint64_t sub_1B6CDB5E4()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1B6CDB600@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB6C0(3, (uint64_t)&unk_1F0F9C6C8, (uint64_t)&unk_1F0F9C698, a1, (__n128)xmmword_1B6E8DAE0);
}

unint64_t sub_1B6CDB620(char a1)
{
  if (a1) {
    return 0xD000000000000023;
  }
  else {
    return 0xD000000000000022;
  }
}

uint64_t sub_1B6CDB65C()
{
  return type metadata accessor for QuaternionFromRotationMatrix3x3Node(0);
}

uint64_t type metadata accessor for QuaternionFromRotationMatrix3x3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD84D0);
}

unint64_t sub_1B6CDB684()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1B6CDB6A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDB6C0(4, (uint64_t)&unk_1F0F9C728, (uint64_t)&unk_1F0F9C6F8, a1, (__n128)xmmword_1B6E8DAD0);
}

uint64_t sub_1B6CDB6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, __n128 a5@<Q0>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  uint64_t v12 = swift_allocObject();
  *(__n128 *)(v12 + 16) = a5;
  *(void *)(v11 + 24) = v12 | 0x1000000000000000;
  *(void *)(v10 + 16) = v11 | 0x1000000000000000;
  *(void *)(v9 + 32) = v10 | 0x6000000000000000;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000028;
  *(void *)(v13 + 32) = result | 0x6000000000000000;
  *a4 = v9;
  a4[1] = v13;
  a4[2] = a2;
  a4[3] = a3;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  a4[4] = MEMORY[0x1E4FBC860];
  a4[5] = v15;
  return result;
}

unint64_t sub_1B6CDB814(char a1)
{
  if (a1) {
    return 0xD000000000000023;
  }
  else {
    return 0xD000000000000022;
  }
}

uint64_t sub_1B6CDB850()
{
  return type metadata accessor for QuaternionFromRotationMatrix4x4Node(0);
}

uint64_t type metadata accessor for QuaternionFromRotationMatrix4x4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD84E0);
}

uint64_t sub_1B6CDB878()
{
  sub_1B6E328C8();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 3;
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v0 + 24) = v1 | 0x1000000000000000;
  sub_1B69B0F8C(v0 | 0x1000000000000000);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return v2;
}

double sub_1B6CDBA30@<D0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDBAC8(0x8000000000000050, (uint64_t)&unk_1F0F9BB18, (uint64_t)&unk_1F0F9BAE8, a1);
}

unint64_t sub_1B6CDBA4C()
{
  return 0xD000000000000046;
}

uint64_t sub_1B6CDBA68()
{
  return type metadata accessor for RotationMatrixFromEulerAngleNode(0);
}

uint64_t type metadata accessor for RotationMatrixFromEulerAngleNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD84F0);
}

unint64_t sub_1B6CDBA90()
{
  return 0xD00000000000001FLL;
}

double sub_1B6CDBAAC@<D0>(uint64_t *a1@<X8>)
{
  return sub_1B6CDBAC8(0x8000000000000028, (uint64_t)&unk_1F0F9C788, (uint64_t)&unk_1F0F9C758, a1);
}

double sub_1B6CDBAC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v8 + 32) = v9 | 0x6000000000000000;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B6E77050;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 3;
  uint64_t v13 = swift_allocObject();
  *(void *)&double result = 3;
  *(_OWORD *)(v13 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v12 + 24) = v13 | 0x1000000000000000;
  *(void *)(v11 + 16) = v12 | 0x1000000000000000;
  *(void *)(v10 + 32) = v11 | 0x6000000000000000;
  *a4 = v8;
  a4[1] = v10;
  a4[2] = a2;
  a4[3] = a3;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  a4[4] = MEMORY[0x1E4FBC860];
  a4[5] = v15;
  return result;
}

unint64_t sub_1B6CDBC10()
{
  return 0xD000000000000022;
}

uint64_t sub_1B6CDBC2C()
{
  return type metadata accessor for RotationMatrix3x3FromQuaternionNode(0);
}

uint64_t type metadata accessor for RotationMatrix3x3FromQuaternionNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8500);
}

unint64_t sub_1B6CDBC54()
{
  return 0xD00000000000001FLL;
}

double sub_1B6CDBC70@<D0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000028;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 4;
  uint64_t v7 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v7 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v6 + 24) = v7 | 0x1000000000000000;
  *(void *)(v5 + 16) = v6 | 0x1000000000000000;
  *(void *)(v4 + 32) = v5 | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v4;
  a1[2] = (uint64_t)&unk_1F0F9C7E8;
  a1[3] = (uint64_t)&unk_1F0F9C7B8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v9;
  return result;
}

unint64_t sub_1B6CDBDBC()
{
  return 0xD000000000000022;
}

uint64_t sub_1B6CDBDD8()
{
  return type metadata accessor for RotationMatrix4x4FromQuaternionNode(0);
}

uint64_t type metadata accessor for RotationMatrix4x4FromQuaternionNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8510);
}

uint64_t sub_1B6CDBE00()
{
  sub_1B6E328C8();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 4;
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v0 + 24) = v1 | 0x1000000000000000;
  sub_1B69B0F8C(v0 | 0x1000000000000000);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return v2;
}

double sub_1B6CDBFB8@<D0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76B30;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000028;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v4 + 16) = v5 | 0x1000000000000000;
  *(void *)(v2 + 40) = v4 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 4;
  uint64_t v9 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v9 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v8 + 24) = v9 | 0x1000000000000000;
  *(void *)(v7 + 16) = v8 | 0x1000000000000000;
  *(void *)(v6 + 32) = v7 | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  a1[2] = (uint64_t)&unk_1F0F9A9F8;
  a1[3] = (uint64_t)&unk_1F0F9A9B8;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v11;
  return result;
}

unint64_t sub_1B6CDC13C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1B6CDC158()
{
  return type metadata accessor for RotationMatrixAroundCenterNode(0);
}

uint64_t type metadata accessor for RotationMatrixAroundCenterNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8520);
}

uint64_t sub_1B6CDC180()
{
  return sub_1B6CDC5E8(3, (__n128)xmmword_1B6E8DAE0);
}

uint64_t sub_1B6CDC190@<X0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E8F480;
  *(void *)(v3 + 16) = v4 | 0x1000000000000000;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000050;
  *(void *)(v2 + 40) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E8F480;
  *(void *)(v6 + 16) = v7 | 0x1000000000000000;
  *(void *)(v2 + 48) = v6 | 0x6000000000000000;
  sub_1B68805E0(0, &qword_1E9DD1998);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77D10;
  sub_1B6AA2488(0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
  uint64_t v10 = v9;
  uint64_t v30 = v9;
  v29[0] = 0;
  sub_1B62C14BC(v29, v9);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v12 = sub_1B69B1CC4(DynamicType);
  if ((~v12 & 0xF000000000000007) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = v12;
  sub_1B62CAAD8((uint64_t)v29, v8 + 40);
  *(void *)(v8 + 32) = v13;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
  uint64_t v30 = MEMORY[0x1E4FBB470];
  LODWORD(v29[0]) = 0;
  sub_1B62C14BC(v29, MEMORY[0x1E4FBB470]);
  uint64_t v14 = swift_getDynamicType();
  unint64_t v15 = sub_1B69B1CC4(v14);
  if ((~v15 & 0xF000000000000007) == 0) {
    goto LABEL_5;
  }
  unint64_t v16 = v15;
  sub_1B62CAAD8((uint64_t)v29, v8 + 80);
  *(void *)(v8 + 72) = v16;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
  uint64_t v30 = v10;
  __asm { FMOV            V0.2S, #1.0 }
  v29[0] = _D0;
  sub_1B62C14BC(v29, v10);
  uint64_t v22 = swift_getDynamicType();
  unint64_t v23 = sub_1B69B1CC4(v22);
  if ((~v23 & 0xF000000000000007) != 0)
  {
    unint64_t v24 = v23;
    sub_1B62CAAD8((uint64_t)v29, v8 + 120);
    *(void *)(v8 + 112) = v24;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1B6E77050;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = 3;
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B6E8DAE0;
    *(void *)(v27 + 24) = result | 0x1000000000000000;
    *(void *)(v26 + 16) = v27 | 0x1000000000000000;
    *(void *)(v25 + 32) = v26 | 0x6000000000000000;
    *a1 = v2;
    a1[1] = v25;
    a1[2] = (uint64_t)&unk_1F0F8B248;
    a1[3] = (uint64_t)&unk_1F0F8B1F8;
    a1[4] = MEMORY[0x1E4FBC860];
    a1[5] = v8;
  }
  else
  {
LABEL_5:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B6CDC594()
{
  return 0xD000000000000033;
}

uint64_t sub_1B6CDC5B0()
{
  return type metadata accessor for TRSFloat3x3MatrixNode(0);
}

uint64_t type metadata accessor for TRSFloat3x3MatrixNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8530);
}

uint64_t sub_1B6CDC5D8()
{
  return sub_1B6CDC5E8(4, (__n128)xmmword_1B6E8DAD0);
}

uint64_t sub_1B6CDC5E8(uint64_t a1, __n128 a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(__n128 *)(v4 + 16) = a2;
  *(void *)(v3 + 24) = v4 | 0x1000000000000000;
  sub_1B69B0F8C(v3 | 0x1000000000000000);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 5460564;
}

uint64_t sub_1B6CDC798@<X0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v3 + 16) = v4 | 0x1000000000000000;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000028;
  *(void *)(v2 + 40) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v6 + 16) = v7 | 0x1000000000000000;
  *(void *)(v2 + 48) = v6 | 0x6000000000000000;
  sub_1B68805E0(0, &qword_1E9DD1998);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77D10;
  sub_1B6AA2488(0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  uint64_t v10 = v9;
  uint64_t v29 = v9;
  uint64_t v11 = swift_allocObject();
  v28[0] = v11;
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  sub_1B62C14BC(v28, v10);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v13 = sub_1B69B1CC4(DynamicType);
  if ((~v13 & 0xF000000000000007) == 0) {
    goto LABEL_5;
  }
  unint64_t v14 = v13;
  sub_1B62CAAD8((uint64_t)v28, v8 + 40);
  *(void *)(v8 + 32) = v14;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
  type metadata accessor for simd_quatf(0);
  uint64_t v16 = v15;
  uint64_t v29 = v15;
  uint64_t v17 = swift_allocObject();
  v28[0] = v17;
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_1B62C14BC(v28, v16);
  uint64_t v18 = swift_getDynamicType();
  unint64_t v19 = sub_1B69B1CC4(v18);
  if ((~v19 & 0xF000000000000007) == 0) {
    goto LABEL_5;
  }
  unint64_t v20 = v19;
  sub_1B62CAAD8((uint64_t)v28, v8 + 80);
  *(void *)(v8 + 72) = v20;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
  uint64_t v29 = v10;
  v28[0] = swift_allocObject();
  *(_OWORD *)(v28[0] + 16) = xmmword_1B6E4F540;
  sub_1B62C14BC(v28, v10);
  uint64_t v21 = swift_getDynamicType();
  unint64_t v22 = sub_1B69B1CC4(v21);
  if ((~v22 & 0xF000000000000007) != 0)
  {
    unint64_t v23 = v22;
    sub_1B62CAAD8((uint64_t)v28, v8 + 120);
    *(void *)(v8 + 112) = v23;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 4;
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B6E8DAD0;
    *(void *)(v26 + 24) = result | 0x1000000000000000;
    *(void *)(v25 + 16) = v26 | 0x1000000000000000;
    *(void *)(v24 + 32) = v25 | 0x6000000000000000;
    *a1 = v2;
    a1[1] = v24;
    a1[2] = (uint64_t)&unk_1F0F8B2C8;
    a1[3] = (uint64_t)&unk_1F0F8B278;
    a1[4] = MEMORY[0x1E4FBC860];
    a1[5] = v8;
  }
  else
  {
LABEL_5:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B6CDCBEC(char a1)
{
  if (a1) {
    return 0xD000000000000049;
  }
  else {
    return 0xD00000000000004ALL;
  }
}

uint64_t sub_1B6CDCC24()
{
  return type metadata accessor for TRSFloat4x4MatrixNode(0);
}

uint64_t type metadata accessor for TRSFloat4x4MatrixNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD8540);
}

uint64_t sub_1B6CDCC4C()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6CDCC84()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CDCCBC()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

void *sub_1B6CDCCCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1) {
    unint64_t v9 = a2 - (void)a1;
  }
  else {
    unint64_t v9 = 0;
  }
  ecs_stack_allocator_deallocate(a5, (unint64_t)a1, v9);
  uint64_t v10 = ecs_stack_allocator_allocate((uint64_t)a5, a3, a4);
  uint64_t v11 = v10;
  if (v10 != a1) {
    memcpy(v10, a1, v9);
  }
  return v11;
}

void sub_1B6CDCD58(uint64_t a1)
{
  if (a1 <= 1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = a1;
  }
  v1[1] = (char *)v2;
  uint64_t v3 = *v1;
  uint64_t v4 = (char *)aligned_alloc(8uLL, 8 * v2);
  *uint64_t v1 = v4;
  uint64_t v5 = v1[2];
  if (((unint64_t)v5 & 0x8000000000000000) != 0)
  {
    sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    if (v4 != v3 || v4 >= &v3[8 * (void)v5]) {
      memmove(v4, v3, 8 * (void)v5);
    }
    free(v3);
  }
}

uint64_t sub_1B6CDCE1C(uint64_t a1)
{
  uint64_t v2 = 1;
  while (1)
  {
    unint64_t v3 = *(void *)(v1 + 8);
    uint64_t v4 = *(__int16 **)(v1 + 40);
    unint64_t v5 = v3 - 1;
    if ((uint64_t)v3 >= 1)
    {
      unint64_t v6 = v5 & a1;
      __int16 v7 = v4[v5 & a1];
      if ((v7 & 1) == 0)
      {
        uint64_t v2 = 0;
        goto LABEL_63;
      }
      if (v3 > 1)
      {
        if ((v4[(v6 + 1) & v5] & 1) == 0) {
          goto LABEL_63;
        }
        if (v3 >= 3) {
          break;
        }
      }
    }
LABEL_13:
    char v10 = -(uint64_t)__clz(v3);
    if (v3 == -1) {
      uint64_t v11 = 1;
    }
    else {
      uint64_t v11 = 1 << v10;
    }
    *(void *)(v1 + 8) = v11;
    unint64_t v13 = *(char **)(v1 + 24);
    unint64_t v12 = *(void **)(v1 + 32);
    uint64_t v14 = 80 << v10;
    if (v3 == -1) {
      size_t v15 = 80;
    }
    else {
      size_t v15 = v14;
    }
    *(void *)(v1 + 24) = aligned_alloc(8uLL, v15);
    *(void *)(v1 + 32) = aligned_alloc(8uLL, 8 * v11);
    uint64_t v16 = aligned_alloc(8uLL, 2 * v11);
    bzero(v16, 2 * v11);
    *(void *)(v1 + 40) = v16;
    *(void *)(v1 + 16) = 0;
    uint64_t v17 = v4;
    uint64_t v18 = v12;
    for (uint64_t i = v13; v3; --v3)
    {
      __int16 v20 = *v17++;
      if (v20)
      {
        uint64_t v21 = (char *)(*(void *)(v1 + 24) + 80 * sub_1B6CDCE1C(*v18));
        if (i != v21 || v21 >= i + 80) {
          memmove(v21, i, 0x50uLL);
        }
      }
      i += 80;
      ++v18;
    }
    free(v13);
    free(v12);
    free(v4);
  }
  if (v4[(v6 + 2) & v5])
  {
    uint64_t v8 = 3;
    while (v3 != v8)
    {
      __int16 v9 = v4[(v6 + v8++) & v5];
      if ((v9 & 1) == 0)
      {
        uint64_t v2 = v8 - 1;
        if ((unint64_t)(v8 - 2) < 0xE) {
          goto LABEL_63;
        }
        unint64_t v23 = v6 - 14;
        while (1)
        {
          unint64_t v24 = v23 + v2;
          unsigned int v25 = (unsigned __int16)v4[(v23 + v2) & v5];
          unsigned int v26 = v25 >> 1;
          unsigned int v27 = __clz(__rbit32((v25 >> 1) | 0x10000));
          uint64_t v28 = v25 >= 2 ? v27 : 15;
          if (v28 >= 0xE) {
            break;
          }
          unint64_t v29 = v24 + v28;
          LOBYTE(v30) = 14;
LABEL_45:
          uint64_t v33 = (v2 + v6) & v5;
          unint64_t v34 = v29 & v5;
          v4[v24 & v5] = (2 * (((1 << (v30 & 0xF)) | v26) ^ (1 << (v28 & 0xF)))) | 1;
          v4[v34] ^= 1u;
          v4[v33] |= 1u;
          uint64_t v35 = *(void *)(v1 + 32);
          *(void *)(v35 + 8 * v33) = *(void *)(v35 + 8 * v34);
          *(void *)(v35 + 8 * v34) = 0;
          uint64_t v36 = *(void *)(v1 + 24);
          float v37 = (char *)(v36 + 80 * v33);
          float v38 = (char *)(v36 + 80 * v34);
          if (v33 != v34 || v37 >= v38 + 80) {
            memmove(v37, v38, 0x50uLL);
          }
          uint64_t v2 = v28 - v6 + v24;
          if (v2 < 15)
          {
            __int16 v7 = v4[v6];
            goto LABEL_63;
          }
        }
        uint64_t v30 = 14;
        while (v30 != -1)
        {
          unsigned int v31 = (unsigned __int16)v4[++v24 & v5];
          unsigned int v26 = v31 >> 1;
          unsigned int v32 = __clz(__rbit32((v31 >> 1) | 0x10000));
          if (v31 >= 2) {
            uint64_t v28 = v32;
          }
          else {
            uint64_t v28 = 15;
          }
          if (--v30 > v28)
          {
            if (v30 != -1)
            {
              unint64_t v29 = v28 + v24;
              goto LABEL_45;
            }
            break;
          }
        }
        int v40 = __clz(v3);
        int v41 = -v40;
        *(void *)(v1 + 8) = 1 << -(char)v40;
        float v43 = *(char **)(v1 + 24);
        int8x16_t v42 = *(void **)(v1 + 32);
        *(void *)(v1 + 24) = aligned_alloc(8uLL, 80 << -(char)v40);
        *(void *)(v1 + 32) = aligned_alloc(8uLL, 8 << v41);
        float v44 = aligned_alloc(8uLL, 2 << v41);
        bzero(v44, 2 << v41);
        uint64_t v45 = 0;
        *(void *)(v1 + 40) = v44;
        *(void *)(v1 + 16) = 0;
        float v46 = v43;
        do
        {
          if (v4[v45])
          {
            float v47 = (char *)(*(void *)(v1 + 24) + 80 * sub_1B6CDCE1C(v42[v45]));
            if (v46 != v47 || v47 >= v46 + 80) {
              memmove(v47, v46, 0x50uLL);
            }
          }
          ++v45;
          v46 += 80;
        }
        while (v3 != v45);
        free(v43);
        free(v42);
        free(v4);
        if (*(unsigned char *)v1 == 1)
        {
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t result = sub_1B6E32BE8();
          __break(1u);
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 1;
          uint64_t result = sub_1B6CDCE1C(a1);
          *(unsigned char *)uint64_t v1 = 0;
        }
        return result;
      }
    }
    goto LABEL_13;
  }
  uint64_t v2 = 2;
LABEL_63:
  v4[v6] = (1 << ((v2 + 1) & 0xF)) | v7;
  uint64_t result = (v2 + v6) & v5;
  v4[result] |= 1u;
  *(void *)(*(void *)(v1 + 32) + 8 * result) = a1;
  ++*(void *)(v1 + 16);
  return result;
}

uint64_t sub_1B6CDD324(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B6CDF7C8(v5, a1, a2);
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(v2 + 8) = v6;
  return result;
}

void sub_1B6CDD3A0(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = 0;
  a1[1] = v1;
}

uint64_t sub_1B6CDD3B0(char *a1, char *a2)
{
  return sub_1B6BBAB48(*a1, *a2);
}

uint64_t sub_1B6CDD3BC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CDD43C()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CDD4A8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CDD524@<X0>(char *a1@<X8>)
{
  return sub_1B6BE07F0(a1);
}

void sub_1B6CDD530(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1752393069;
  if (*v1) {
    uint64_t v2 = 0x6C6169726574616DLL;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000073;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6CDD56C()
{
  if (*v0) {
    return 0x6C6169726574616DLL;
  }
  else {
    return 1752393069;
  }
}

uint64_t sub_1B6CDD5A4@<X0>(char *a1@<X8>)
{
  return sub_1B6BE08CC(a1);
}

uint64_t sub_1B6CDD5B0(uint64_t a1)
{
  unint64_t v2 = sub_1B6CDFF90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CDD5EC(uint64_t a1)
{
  unint64_t v2 = sub_1B6CDFF90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CDD628@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6CDFD10(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B6CDD654(void *a1)
{
  return sub_1B6CDF8CC(a1, *(void *)(v1 + 8));
}

__n128 sub_1B6CDD670@<Q0>(__n128 *a1@<X8>)
{
  result.n128_u64[0] = 0xFFFFFFFFLL;
  result.n128_u64[1] = 0xFFFFFFFFLL;
  *a1 = result;
  return result;
}

uint64_t sub_1B6CDD67C(char *a1, char *a2)
{
  return sub_1B6BAF3CC(*a1, *a2);
}

uint64_t sub_1B6CDD688()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CDD70C()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CDD77C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CDD7FC@<X0>(char *a1@<X8>)
{
  return sub_1B6BE07F0(a1);
}

void sub_1B6CDD808(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x6C65646F6DLL;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x80000001B6F2E650;
  if (!*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6CDD848()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6C65646F6DLL;
  }
}

uint64_t sub_1B6CDD884@<X0>(char *a1@<X8>)
{
  return sub_1B6BE08CC(a1);
}

uint64_t sub_1B6CDD890(uint64_t a1)
{
  unint64_t v2 = sub_1B6CDFFE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CDD8CC(uint64_t a1)
{
  unint64_t v2 = sub_1B6CDFFE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CDD908(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  sub_1B6CE0038(0, &qword_1E9DD8580, (uint64_t (*)(void))sub_1B6CDFFE4, (uint64_t)&type metadata for ModelRenderer.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)&v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CDFFE4();
  sub_1B6E33A88();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v3)
  {
    uint64_t v15 = v13;
    char v14 = 1;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6CDDAD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6CDFAB0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B6CDDB08(void *a1)
{
  return sub_1B6CDD908(a1, *v1, v1[1]);
}

uint64_t sub_1B6CDDB24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransformBucket()
{
  return self;
}

char *sub_1B6CDDB88(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t result = *(char **)(v4 + 16);
  if (v5 == *(void *)(v4 + 24))
  {
    uint64_t v7 = 2 * v5;
    if (v7 <= 1) {
      uint64_t v7 = 1;
    }
    *(void *)(v4 + 24) = v7;
    __n128 v19 = a4;
    __n128 v17 = a2;
    __n128 v18 = a3;
    __n128 v16 = a1;
    uint64_t result = (char *)reallocf(result, v7 << 6);
    a1 = v16;
    a2 = v17;
    a3 = v18;
    a4 = v19;
    *(void *)(v4 + 16) = result;
    uint64_t v5 = *(void *)(v4 + 32);
  }
  uint64_t v8 = (__n128 *)&result[64 * v5];
  *uint64_t v8 = a1;
  v8[1] = a2;
  _OWORD v8[2] = a3;
  v8[3] = a4;
  *(void *)(v4 + 32) = v5 + 1;
  uint64_t v9 = *(void *)(v4 + 56);
  if (v9)
  {
    uint64_t result = *(char **)(v4 + 40);
    if (v9 == *(void *)(v4 + 48))
    {
      uint64_t v10 = 2 * v9;
      if (v10 <= 1) {
        uint64_t v10 = 1;
      }
      *(void *)(v4 + 48) = v10;
      uint64_t result = (char *)reallocf(result, 16 * v10);
      *(void *)(v4 + 40) = result;
      uint64_t v9 = *(void *)(v4 + 56);
    }
    __asm { FMOV            V0.4S, #1.0 }
    *(_OWORD *)&result[16 * v9] = _Q0;
    *(void *)(v4 + 56) = v9 + 1;
  }
  *(unsigned char *)(v4 + 64) = 1;
  return result;
}

__n128 sub_1B6CDDC4C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = *(void *)(v5 + 32);
  uint64_t v8 = v7 - v6;
  if (v7 == v6)
  {
    uint64_t v9 = *(void *)(v5 + 56);
  }
  else
  {
    __asm { FMOV            V0.4S, #1.0 }
    long long v29 = _Q0;
    do
    {
      uint64_t v15 = *(void **)(v5 + 40);
      if (v6 == *(void *)(v5 + 48))
      {
        uint64_t v16 = 2 * v6;
        if (2 * v6 <= 1) {
          uint64_t v16 = 1;
        }
        *(void *)(v5 + 48) = v16;
        uint64_t v15 = reallocf(v15, 16 * v16);
        _Q0 = v29;
        *(void *)(v5 + 40) = v15;
        uint64_t v6 = *(void *)(v5 + 56);
      }
      *((_OWORD *)v15 + v6++) = _Q0;
      *(void *)(v5 + 56) = v6;
      --v8;
    }
    while (v8);
    uint64_t v9 = *(void *)(v5 + 32);
  }
  __n128 v17 = *(char **)(v5 + 16);
  if (v9 == *(void *)(v5 + 24))
  {
    uint64_t v18 = 2 * v9;
    if (v18 <= 1) {
      uint64_t v18 = 1;
    }
    *(void *)(v5 + 24) = v18;
    __n128 v17 = (char *)reallocf(v17, v18 << 6);
    *(void *)(v5 + 16) = v17;
    uint64_t v9 = *(void *)(v5 + 32);
  }
  __n128 v19 = (__n128 *)&v17[64 * v9];
  *__n128 v19 = a1;
  v19[1] = a2;
  _OWORD v19[2] = a3;
  v19[3] = a4;
  *(void *)(v5 + 32) = v9 + 1;
  __int16 v20 = *(__n128 **)(v5 + 40);
  if (v6 == *(void *)(v5 + 48))
  {
    uint64_t v21 = 2 * v6;
    if (2 * v6 <= 1) {
      uint64_t v21 = 1;
    }
    *(void *)(v5 + 48) = v21;
    __int16 v20 = (__n128 *)reallocf(v20, 16 * v21);
    *(void *)(v5 + 40) = v20;
  }
  uint64_t v22 = *(void *)(v5 + 56);
  __n128 result = a5;
  v20[v22] = a5;
  *(void *)(v5 + 56) = v22 + 1;
  *(unsigned char *)(v5 + 64) = 1;
  return result;
}

uint64_t sub_1B6CDDD88()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 16;
  sub_1B6CE010C(v0 + 16, (uint64_t)&v7);
  swift_retain();
  sub_1B635FC14((uint64_t)&v7);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, -*(void *)(v0 + 176));
  swift_release();
  swift_release();
  uint64_t v4 = *(void **)(v0 + 192);
  uint64_t v5 = *(void **)(v1 + 200);
  free(*(void **)(v1 + 184));
  free(v4);
  free(v5);
  sub_1B6CE0194(v2);
  return v1;
}

uint64_t sub_1B6CDDE30()
{
  sub_1B6CDDD88();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RenderBuckets()
{
  return self;
}

char *sub_1B6CDDE88(uint64_t a1, unint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v7 = v6;
  int v8 = a2;
  uint64_t v10 = (int)a2 | (unint64_t)(a1 << 32);
  uint64_t v11 = v6[21] - 1;
  uint64_t v12 = v11 & v10;
  unsigned int v13 = *(unsigned __int16 *)(v6[25] + 2 * (v11 & v10));
  if (v13 >= 2)
  {
    while ((v13 & 2) == 0 || *(void *)(v6[24] + 8 * (v12 & v11)) != v10)
    {
      ++v12;
      BOOL v22 = v13 >= 4;
      v13 >>= 1;
      if (!v22) {
        goto LABEL_2;
      }
    }
    if ((v12 & v11) != 0xFFFFFFFFFFFFFFFFLL) {
      return sub_1B6CDDB88(a3, a4, a5, a6);
    }
  }
LABEL_2:
  unint64_t v14 = HIDWORD(a2);
  uint64_t v15 = sub_1B6CDCE1C(v10);
  uint64_t v16 = v7[23];
  __n128 v17 = (__n128 *)aligned_alloc(0x10uLL, 0x1000uLL);
  uint64_t v18 = aligned_alloc(0x10uLL, 0x400uLL);
  uint64_t v19 = v16 + 80 * v15;
  *(_DWORD *)uint64_t v19 = v8;
  *(_DWORD *)(v19 + 4) = v14;
  *(void *)(v19 + 8) = a1;
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = 64;
  *(void *)(v19 + 40) = v18;
  *(_OWORD *)(v19 + 48) = xmmword_1B6EC0970;
  *(void *)(v19 + 72) = 0;
  *__n128 v17 = a3;
  v17[1] = a4;
  _OWORD v17[2] = a5;
  v17[3] = a6;
  *(void *)(v19 + 32) = 1;
  *(unsigned char *)(v19 + 64) = 1;
  sub_1B6CE010C((uint64_t)(v7 + 2), (uint64_t)v27);
  swift_retain();
  sub_1B635FC14((uint64_t)v27);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  return (char *)swift_release();
}

double sub_1B6CDE01C(uint64_t a1, unint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  int v8 = v7;
  int v9 = a2;
  uint64_t v11 = (int)a2 | (unint64_t)(a1 << 32);
  uint64_t v12 = v7[21] - 1;
  uint64_t v13 = v12 & v11;
  unsigned int v14 = *(unsigned __int16 *)(v7[25] + 2 * (v12 & v11));
  if (v14 < 2) {
    goto LABEL_2;
  }
  while ((v14 & 2) == 0 || *(void *)(v7[24] + 8 * (v13 & v12)) != v11)
  {
    ++v13;
    BOOL v23 = v14 >= 4;
    v14 >>= 1;
    if (!v23) {
      goto LABEL_2;
    }
  }
  if ((v13 & v12) == 0xFFFFFFFFFFFFFFFFLL)
  {
LABEL_2:
    unint64_t v15 = HIDWORD(a2);
    uint64_t v16 = sub_1B6CDCE1C(v11);
    uint64_t v17 = v8[23];
    uint64_t v18 = (__n128 *)aligned_alloc(0x10uLL, 0x1000uLL);
    uint64_t v19 = (__n128 *)aligned_alloc(0x10uLL, 0x400uLL);
    uint64_t v20 = v17 + 80 * v16;
    *(_DWORD *)uint64_t v20 = v9;
    *(_DWORD *)(v20 + 4) = v15;
    *(void *)(v20 + 8) = a1;
    *(void *)(v20 + 16) = v18;
    *(void *)(v20 + 24) = 64;
    *(void *)(v20 + 40) = v19;
    *(void *)(v20 + 48) = 64;
    *(void *)(v20 + 72) = 0;
    *uint64_t v18 = a3;
    v18[1] = a4;
    _OWORD v18[2] = a5;
    v18[3] = a6;
    *(void *)(v20 + 32) = 1;
    *uint64_t v19 = a7;
    *(void *)(v20 + 56) = 1;
    *(unsigned char *)(v20 + 64) = 1;
    sub_1B6CE010C((uint64_t)(v8 + 2), (uint64_t)v29);
    swift_retain();
    sub_1B635FC14((uint64_t)v29);
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, 1);
    swift_release();
    swift_release();
  }
  else
  {
    *(void *)&double result = sub_1B6CDDC4C(a3, a4, a5, a6, a7).n128_u64[0];
  }
  return result;
}

void sub_1B6CDE1B4()
{
  uint64_t v1 = *v0;
  type metadata accessor for RenderBuckets();
  swift_arrayDestroy();

  free(v1);
}

uint64_t sub_1B6CDE200()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB997A18;
  int v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  swift_retain();
  sub_1B677FE44(1, 1, (uint64_t)v2);
  swift_release();
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for FrustumCulled;
  *(void *)(inited + 40) = &off_1F0F5FA08;
  *(void *)(inited + 48) = &type metadata for LODCulled;
  *(void *)(inited + 56) = &off_1F0FA8B40;
  sub_1B62AD184(v3);
  swift_setDeallocating();
  xmmword_1EB997C70 = v3[0];
  *(_OWORD *)&qword_1EB997C80 = v3[1];
  qword_1EB997C90 = v4;
  return sub_1B62CA064((uint64_t)v2);
}

uint64_t sub_1B6CDE364()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB997A18;
  int v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  swift_retain();
  sub_1B677FE44(1, 1, (uint64_t)v2);
  swift_release();
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for LODCulled;
  *(void *)(inited + 40) = &off_1F0FA8B40;
  *(void *)(inited + 48) = &type metadata for WorldAABB;
  *(void *)(inited + 56) = &off_1F0FAABA0;
  sub_1B62AD184(v3);
  swift_setDeallocating();
  xmmword_1EB997C98 = v3[0];
  unk_1EB997CA8 = v3[1];
  qword_1EB997CB8 = v4;
  return sub_1B62CA064((uint64_t)v2);
}

unint64_t sub_1B6CDE4C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[11];
  uint64_t v3 = a1[12];
  uint64_t v4 = a1[13];
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v2, v3, v4, v6);
  uint64_t v8 = sub_1B62C9024((uint64_t)&type metadata for ModelRenderer, (uint64_t)&off_1F0F60288, v2, v3, v4, v6);
  unint64_t result = sub_1B6345398(*(void *)(v5 + 40), (uint64_t)&type metadata for Color, &v29);
  if (v29 == 1)
  {
    swift_retain();
    uint64_t v10 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v2, v3, v4, v6);
    uint64_t v11 = a1[6];
    uint64_t v12 = a1[7];
    uint64_t v13 = v12 - v11;
    if (v12 != v11)
    {
      uint64_t v17 = (__n128 *)(v7 + (v11 << 6) + 32);
      uint64_t v18 = 16 * v11;
      uint64_t v19 = (uint64_t *)(v18 + v8 + 8);
      uint64_t v20 = (__n128 *)(v10 + v18);
      do
      {
        uint64_t v21 = *((unsigned int *)v19 - 2);
        uint64_t v22 = *((unsigned int *)v19 - 1);
        if (v21 != -1 || v22 != 0) {
          sub_1B6CDE01C(*v19, v21 | (v22 << 32), v17[-2], v17[-1], *v17, v17[1], *v20);
        }
        v17 += 4;
        v19 += 2;
        ++v20;
        --v13;
      }
      while (v13);
    }
  }
  else
  {
    uint64_t v15 = a1[6];
    uint64_t v14 = a1[7];
    uint64_t v16 = v14 - v15;
    if (v14 == v15) {
      return result;
    }
    swift_retain();
    unint64_t v24 = (__n128 *)(v7 + (v15 << 6) + 32);
    unsigned int v25 = (uint64_t *)(v8 + 16 * v15 + 8);
    do
    {
      uint64_t v26 = *((unsigned int *)v25 - 2);
      uint64_t v27 = *((unsigned int *)v25 - 1);
      if (v26 != -1 || v27 != 0) {
        sub_1B6CDDE88(*v25, v26 | (v27 << 32), v24[-2], v24[-1], *v24, v24[1]);
      }
      v24 += 4;
      v25 += 2;
      --v16;
    }
    while (v16);
  }

  return swift_release();
}

uint64_t sub_1B6CDE6D8(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  uint64_t v3 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v3)
  {
    uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 + 272) + 24);
    if (v4 == 2) {
      goto LABEL_68;
    }
    if ((v4 & 1) == 0) {
      return result;
    }
    uint64_t v5 = result;
    uint64_t v87 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
    int v6 = *(unsigned char *)(v3 + 536) ? 0 : 0x4000;
    swift_retain();
    swift_retain();
    sub_1B6383B70(v121);
    long long v96 = v121[1];
    long long v98 = v121[0];
    long long v92 = v121[3];
    long long v94 = v121[2];
    long long v89 = v121[4];
    uint64_t v7 = v122;
    swift_release();
    int v138 = v6;
    long long v139 = v98;
    long long v140 = v96;
    long long v141 = v94;
    long long v142 = v92;
    long long v143 = v89;
    uint64_t v144 = v7;
    sub_1B62D80E8(v3 + 624, (uint64_t)v119, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
    sub_1B62D80E8((uint64_t)v119, (uint64_t)v120, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
    if (sub_1B6388C10(v120) == 1)
    {
LABEL_68:
      unint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    uint64_t v8 = v120[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 144);
    swift_unknownObjectRetain();
    uint64_t v11 = v10(ObjectType, v8);
    swift_unknownObjectRelease();
    long long v12 = *(_OWORD *)(v1 + 32);
    v152[0] = *(_OWORD *)(v1 + 16);
    v152[1] = v12;
    uint64_t v153 = *(void *)(v1 + 48);
    sub_1B62C9DA8(v5, (uint64_t)v152, v11 & 0xFFFFFFFFFFLL, v123);
    sub_1B62D80E8((uint64_t)v123, (uint64_t)v124, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!*(void *)&v124[0]) {
      return swift_release();
    }
    long long v131 = v124[0];
    long long v132 = v124[1];
    uint64_t v95 = v126;
    uint64_t v133 = v125;
    uint64_t v97 = v127;
    uint64_t v13 = v128;
    uint64_t v14 = v5;
    uint64_t v15 = v129;
    uint64_t v16 = v130;
    swift_retain();
    uint64_t v17 = sub_1B6C6E96C(v87);
    swift_release();
    uint64_t v18 = sub_1B6E328F8();
    float32x4_t v75 = v17;
    sub_1B6388754(v18, v19, v17);
    swift_bridgeObjectRelease();
    uint64_t v77 = v14;
    uint64_t v20 = *(void *)(v14 + v2);
    if (v20)
    {
      uint64_t v21 = **(void **)(v20 + 496);
      swift_retain();
      if (!v21)
      {
        if (*(void *)(v20 + 376))
        {
          uint64_t v70 = swift_dynamicCastObjCProtocolConditional();
          if (v70)
          {
            float32x4_t v71 = (void *)v70;
            swift_unknownObjectRetain();
            id v72 = objc_msgSend(v71, sel_renderCommandEncoder);
            *(void *)&long long v110 = 0x646F636E45627573;
            *((void *)&v110 + 1) = 0xEB000000005B7265;
            *(void *)&long long v103 = 0;
            sub_1B6E33098();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            float32x4_t v73 = (void *)sub_1B6E31768();
            swift_bridgeObjectRelease();
            objc_msgSend(v72, sel_setLabel_, v73);

            float32x4_t v74 = *(void **)(v20 + 496);
            *float32x4_t v74 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RenderCommandEncoder()), sel_initWithEncoder_, v72);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
          }
        }
      }
      if (**(void **)(v20 + 496))
      {
        uint64_t v22 = swift_getObjectType();
        swift_unknownObjectRetain();
        sub_1B635FB18(v77, v22);
        swift_unknownObjectRelease();
      }
      swift_release();
    }
    uint64_t v86 = v3;
    uint64_t v99 = v15;
    if (*(void *)(v3 + 376))
    {
      float v102 = &unk_1F108FFD8;
      if (swift_dynamicCastObjCProtocolConditional())
      {
        if (v16 > 0)
        {
          if (v97)
          {
            uint64_t v23 = v15[4];
            char v24 = *(unsigned char *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            v134[0] = v131;
            v134[1] = v132;
            uint64_t v135 = v133;
            uint64_t v80 = (uint64_t)(v15 + 6);
            float32x4_t v76 = v15 + 13;
            sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
            uint64_t v25 = 0;
            float32x2_t v78 = v15 + 8;
            char v82 = v24;
            uint64_t v84 = v23;
            do
            {
              uint64_t v26 = (unsigned int *)(v95 + 48 * v25);
              uint64_t v28 = *v26;
              uint64_t v27 = v26[1];
              uint64_t v30 = (uint64_t *)*((void *)v26 + 2);
              uint64_t v29 = *((void *)v26 + 3);
              uint64_t v31 = *((void *)v26 + 5);
              uint64_t v90 = *((void *)v26 + 4);
              if (v24)
              {
                unsigned int v32 = *(os_unfair_lock_s **)(v31 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v32);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v23);
              sub_1B62D80E8(v80, (uint64_t)v136, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v33 = v99[4];
              uint64_t v34 = *(void *)(*(void *)(*(void *)(*(void *)(v31 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v99[6] = ecs_stack_allocator_allocate(v33, 48 * v34, 8);
              v99[7] = v34;
              v78[1] = 0;
              v78[2] = 0;
              void *v78 = 0;
              swift_release();
              uint64_t v35 = sub_1B6388ED8(v99[3]);
              if (v35)
              {
                uint64_t v36 = (void *)v35;
                uint64_t v101 = 0;
                memset(v100, 0, sizeof(v100));
                memset((char *)v105 + 8, 0, 40);
                long long v106 = xmmword_1B6E50D30;
                *(void *)&long long v108 = 0;
                long long v107 = 1uLL;
                *((void *)&v108 + 1) = 1;
                LOBYTE(v105[0]) = 0;
                long long v109 = 0uLL;
                *(void *)&long long v103 = v86;
                *((void *)&v103 + 1) = v77;
                *(void *)&long long v104 = v99;
                *((void *)&v104 + 1) = 1;
                swift_unknownObjectRetain();
                sub_1B635FA4C((uint64_t)v100, (uint64_t)v105 + 8);
                long long v116 = v107;
                long long v117 = v108;
                long long v118 = v109;
                long long v112 = v105[0];
                long long v113 = v105[1];
                long long v114 = v105[2];
                long long v115 = v106;
                long long v110 = v103;
                long long v111 = v104;
                uint64_t v37 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v30, v29, v90, (uint64_t)v99);
                if (v28 != v27)
                {
                  long long v150 = 0u;
                  long long v151 = 0u;
                  long long v148 = 0u;
                  long long v149 = 0u;
                  long long v146 = 0u;
                  long long v147 = 0u;
                  uint64_t v39 = v27 - v28;
                  uint64_t v40 = v37 + 8 * v28;
                  long long v145 = 0u;
                  do
                  {
                    v40 += 8;
                    uint64_t v41 = swift_retain();
                    sub_1B631083C(v41, &v138, (uint64_t *)&v145, v36, (uint64_t)&v110, 0);
                    swift_release();
                    --v39;
                  }
                  while (v39);
                }
                sub_1B635FC14((uint64_t)&v110);
                swift_unknownObjectRelease();
                float v38 = v99;
              }
              else
              {
                float v38 = v99;
              }
              sub_1B6345178(v38, (unsigned __int16 **)v134, (uint64_t)v136);
              if (*(void *)(v38[13] + 16))
              {
                uint64_t v42 = swift_bridgeObjectRetain();
                sub_1B639147C(v42, v31);
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v44 = v38[13];
                if (isUniquelyReferenced_nonNull_native)
                {
                  sub_1B6399BB8(0, *(void *)(v44 + 16));
                }
                else
                {
                  uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
                  if (*(void *)(v44 + 24) >= 2uLL)
                  {
                    sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                    uint64_t v45 = (void *)swift_allocObject();
                    size_t v46 = j__malloc_size(v45);
                    _OWORD v45[2] = 0;
                    v45[3] = 2 * ((uint64_t)(v46 - 32) / 72);
                  }
                  *float32x4_t v76 = v45;
                  swift_bridgeObjectRelease();
                }
                if (*(unsigned __int8 *)(v38[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
                {
                  float v47 = *(char **)(v31 + 232);
                  float v48 = *(char **)(v31 + 256);
                  if (v47 == v48)
                  {
                    float v49 = *(char **)(v31 + 240);
                  }
                  else
                  {
                    sub_1B666018C(v48, v47);
                    float v48 = *(char **)(v31 + 232);
                    float v49 = *(char **)(v31 + 240);
                    if (v49 == v48)
                    {
                      float v49 = 0;
                      float v48 = 0;
                      *(void *)(v31 + 232) = 0;
                      *(void *)(v31 + 240) = 0;
                    }
                  }
                  *(void *)(v31 + 248) = v49;
                  *(void *)(v31 + 256) = v48;
                }
              }
              uint64_t v23 = v84;
              ecs_stack_allocator_pop_snapshot(v84);
              char v24 = v82;
              if (v82)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 376));
              }
              swift_release();
              ++v25;
            }
            while (v25 != v97);
          }
          else
          {
            sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
          }

          sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          goto LABEL_65;
        }
LABEL_57:

LABEL_65:
        sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        return swift_release();
      }
    }
    uint64_t v50 = sub_1B6388ED8(0);
    if (!v50) {
      goto LABEL_57;
    }
    float v52 = (void *)v50;
    uint64_t v53 = *(void *)(*(void *)(v77 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                    + 8 * *(void *)thread_worker_index(&thread_worker_index, v51)
                    + 8);
    *(void *)&long long v147 = 0;
    long long v145 = 0u;
    long long v146 = 0u;
    memset((char *)v105 + 8, 0, 40);
    long long v106 = xmmword_1B6E50D30;
    long long v107 = 1uLL;
    *(void *)&long long v108 = 0;
    *((void *)&v108 + 1) = 1;
    LOBYTE(v105[0]) = 0;
    long long v109 = 0uLL;
    *(void *)&long long v103 = v3;
    *((void *)&v103 + 1) = v77;
    *(void *)&long long v104 = v53;
    *((void *)&v104 + 1) = 1;
    swift_unknownObjectRetain();
    sub_1B635FA4C((uint64_t)&v145, (uint64_t)v105 + 8);
    long long v116 = v107;
    long long v117 = v108;
    long long v118 = v109;
    long long v112 = v105[0];
    long long v113 = v105[1];
    long long v114 = v105[2];
    long long v115 = v106;
    long long v110 = v103;
    long long v111 = v104;
    if (v16 >= 1 && v97)
    {
      uint64_t v54 = v15[4];
      int v55 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v136[0] = v131;
      v136[1] = v132;
      uint64_t v137 = v133;
      uint64_t v81 = (uint64_t)(v15 + 6);
      sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      uint64_t v56 = 0;
      uint64_t v57 = 0;
      float32x4_t v79 = v15 + 8;
      int v83 = v55;
      uint64_t v85 = v54;
      do
      {
        float32x4_t v58 = (unsigned int *)(v95 + 48 * v56);
        uint64_t v59 = *v58;
        uint64_t v60 = v58[1];
        uint64_t v61 = *((void *)v58 + 3);
        uint64_t v62 = *((void *)v58 + 5);
        uint64_t v88 = *((void *)v58 + 4);
        uint64_t v91 = (uint64_t *)*((void *)v58 + 2);
        uint64_t v93 = v57;
        if (v55)
        {
          int32x4_t v63 = *(os_unfair_lock_s **)(v62 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v63);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v62 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v54);
        sub_1B62D80E8(v81, (uint64_t)&v145, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v64 = v99[4];
        uint64_t v65 = *(void *)(*(void *)(*(void *)(*(void *)(v62 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v99[6] = ecs_stack_allocator_allocate(v64, 48 * v65, 8);
        v99[7] = v65;
        v79[1] = 0;
        _OWORD v79[2] = 0;
        *float32x4_t v79 = 0;
        swift_release();
        uint64_t v66 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v91, v61, v88, (uint64_t)v99);
        if (v59 != v60)
        {
          long long v106 = 0u;
          long long v107 = 0u;
          memset(v105, 0, sizeof(v105));
          uint64_t v67 = v60 - v59;
          uint64_t v68 = v66 + 8 * v59;
          long long v103 = 0u;
          long long v104 = 0u;
          do
          {
            v68 += 8;
            uint64_t v69 = swift_retain();
            sub_1B631083C(v69, &v138, (uint64_t *)&v103, v52, (uint64_t)&v110, 0);
            swift_release();
            --v67;
          }
          while (v67);
        }
        uint64_t v57 = v93;
        sub_1B6345178(v99, (unsigned __int16 **)v136, (uint64_t)&v145);
        sub_1B634507C((char *)v62);
        uint64_t v54 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v55 = v83;
        if (v83)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 376));
        }
        swift_release();
        ++v56;
      }
      while (v56 != v97);
    }
    else
    {
      sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
    }

    sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    sub_1B632F1C4(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    swift_release();
    swift_unknownObjectRelease();
    return sub_1B635FC14((uint64_t)&v110);
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshBatch()
{
  return &type metadata for MeshBatch;
}

uint64_t destroy for MeshModel()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s3VFX9MeshModelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MeshModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for MeshModel(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MeshModel()
{
  return &type metadata for MeshModel;
}

ValueMetadata *type metadata accessor for ModelRenderer()
{
  return &type metadata for ModelRenderer;
}

uint64_t sub_1B6CDF53C(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v26 = __dst;
  uint64_t v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 4 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v20 = &v4[v19];
      uint64_t v25 = &v4[v19];
      uint64_t v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v21 = (float *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 4;
          if (*(v6 - 2) >= *(v20 - 2))
          {
            uint64_t v25 = v20 - 4;
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 1);
            }
            uint64_t v23 = v6;
            v20 -= 4;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 4;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v23;
            }
            uint64_t v27 = v6 - 4;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 4;
          int v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_1B6D67100((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14 * 4);
    }
    uint64_t v15 = &v4[v14];
    uint64_t v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v16 = v4;
      while (1)
      {
        if (v16[2] >= v6[2])
        {
          uint64_t v4 = v16 + 4;
          uint64_t v18 = v16;
          uint64_t v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          uint64_t v17 = v6 + 4;
          uint64_t v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          int v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        uint64_t v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6CDF7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1B62E1D20(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = a1 + 36;
    do
    {
      uint64_t v8 = *(void *)(v7 - 4);
      sub_1B6B1BF68(v8, 0, ObjectType, a3);
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1B62E1D20(v10 > 1, v11 + 1, 1);
      }
      v7 += 8;
      *(void *)(v14 + 16) = v11 + 1;
      *(void *)(v14 + 8 * v11 + 32) = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1B6CDF8CC(void *a1, uint64_t a2)
{
  sub_1B6CE0038(0, &qword_1E9DD8568, (uint64_t (*)(void))sub_1B6CDFF90, (uint64_t)&type metadata for MeshModel.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = &v11[-v8];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CDFF90();
  sub_1B6E33A88();
  uint64_t v12 = a2;
  v11[15] = 1;
  sub_1B63176F0(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
  sub_1B62E2058((unint64_t *)&unk_1E9DD8570, (void (*)(void))sub_1B6657A10);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6CDFAB0(void *a1)
{
  sub_1B6CE0038(0, &qword_1EB9808C0, (uint64_t (*)(void))sub_1B6CDFFE4, (uint64_t)&type metadata for ModelRenderer.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6CDFFE4();
  sub_1B6E33A48();
  if (!v1)
  {
    char v14 = 0;
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    uint64_t v9 = v15;
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    sub_1B62C14BC(a1, v11);
    if (sub_1B62B8F14(1099, v11, v12))
    {
      char v14 = 1;
      sub_1B6E32DF8();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1B6CDFD10(void *a1)
{
  sub_1B6CE0038(0, &qword_1E9DD8550, (uint64_t (*)(void))sub_1B6CDFF90, (uint64_t)&type metadata for MeshModel.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v12[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CDFF90();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1B62C14BC(a1, v10);
  if (sub_1B62B8F14(1099, v10, v11))
  {
    sub_1B63176F0(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    v12[15] = 1;
    sub_1B62E2058((unint64_t *)&unk_1EB9802D0, (void (*)(void))sub_1B62B1EA8);
    sub_1B6E32DF8();
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return 0;
}

unint64_t sub_1B6CDFF90()
{
  unint64_t result = qword_1E9DD8558;
  if (!qword_1E9DD8558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8558);
  }
  return result;
}

unint64_t sub_1B6CDFFE4()
{
  unint64_t result = qword_1EB97E5A8;
  if (!qword_1EB97E5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E5A8);
  }
  return result;
}

void sub_1B6CE0038(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B6CE00A0()
{
  if (!qword_1EB9803D0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB9803D0);
    }
  }
}

uint64_t sub_1B6CE010C(uint64_t a1, uint64_t a2)
{
  sub_1B63176F0(0, &qword_1EB97E6D8, (uint64_t)&type metadata for RenderContext, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6CE0194(uint64_t a1)
{
  sub_1B63176F0(0, &qword_1EB97E6D8, (uint64_t)&type metadata for RenderContext, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MeshRenderSystemState()
{
  return &type metadata for MeshRenderSystemState;
}

ValueMetadata *type metadata accessor for ModelRenderer.CodingKeys()
{
  return &type metadata for ModelRenderer.CodingKeys;
}

unsigned char *_s3VFX13ModelRendererV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CE0304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshModel.CodingKeys()
{
  return &type metadata for MeshModel.CodingKeys;
}

unint64_t sub_1B6CE0340()
{
  unint64_t result = qword_1E9DD8588;
  if (!qword_1E9DD8588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8588);
  }
  return result;
}

unint64_t sub_1B6CE0398()
{
  unint64_t result = qword_1E9DD8590;
  if (!qword_1E9DD8590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8590);
  }
  return result;
}

unint64_t sub_1B6CE03F0()
{
  unint64_t result = qword_1EB97E5B8;
  if (!qword_1EB97E5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E5B8);
  }
  return result;
}

unint64_t sub_1B6CE0448()
{
  unint64_t result = qword_1EB97E5B0;
  if (!qword_1EB97E5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E5B0);
  }
  return result;
}

unint64_t sub_1B6CE04A0()
{
  unint64_t result = qword_1E9DD8598;
  if (!qword_1E9DD8598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8598);
  }
  return result;
}

unint64_t sub_1B6CE04F8()
{
  unint64_t result = qword_1E9DD85A0;
  if (!qword_1E9DD85A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD85A0);
  }
  return result;
}

uint64_t sub_1B6CE054C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8))
  {
    long long v6 = *(_OWORD *)(a1 + 48);
    _OWORD v11[2] = *(_OWORD *)(a1 + 32);
    v11[3] = v6;
    v11[4] = *(_OWORD *)(a1 + 64);
    uint64_t v12 = *(void *)(a1 + 80);
    long long v7 = *(_OWORD *)(a1 + 16);
    v11[0] = *(_OWORD *)a1;
    v11[1] = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1B67E3A2C((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v10;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B6CE2154(a1, (unint64_t *)&unk_1EB981180);
    sub_1B67E2E04(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_1B6CE2154((uint64_t)v11, (unint64_t *)&unk_1EB981180);
  }
}

uint64_t sub_1B6CE064C(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  sub_1B62B5820();
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B6E31118();
  uint64_t v11 = *(void *)(v10 - 8);
  double v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 48))(a1, 1, v10, v13) == 1)
  {
    sub_1B6CE288C(a1, (uint64_t (*)(void))sub_1B62B5820);
    sub_1B67E2F30(a2, (uint64_t)v9);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    return sub_1B6CE288C((uint64_t)v9, (uint64_t (*)(void))sub_1B62B5820);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v15, a1, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1B67E3CB4((uint64_t)v15, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v19;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  }
}

unint64_t sub_1B6CE0844(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  sub_1B62CA210(a1, (uint64_t)v22, &qword_1E9DD85C0);
  uint64_t v5 = v22[0];
  uint64_t v6 = v22[1];
  uint64_t v7 = v22[2];
  uint64_t v8 = v22[3];
  uint64_t v10 = v22[4];
  uint64_t v9 = v22[5];
  uint64_t v18 = v22[7];
  uint64_t v19 = v22[6];
  char v17 = v23;
  sub_1B62CA210(a1, (uint64_t)v24, &qword_1E9DD85C0);
  if (v24[64] <= 0xEFu)
  {
    v25[0] = v5;
    v25[1] = v6;
    void v25[2] = v7;
    v25[3] = v8;
    v25[4] = v10;
    v25[5] = v9;
    _OWORD v25[6] = v19;
    v25[7] = v18;
    char v26 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1B67E4FBC((uint64_t)v25, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v21;
  }
  else
  {
    unint64_t result = sub_1B62C1A30(a2);
    if ((v12 & 1) == 0) {
      return result;
    }
    unint64_t v13 = result;
    int v14 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    v25[0] = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!v14)
    {
      sub_1B6ACE194();
      uint64_t v15 = v25[0];
    }
    sub_1B6AC9128(v13, v15);
    uint64_t *v3 = v15;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CE09A8(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1B6CE2154(a1, &qword_1EB985318);
    unint64_t v5 = sub_1B62C1A30(a2);
    char v7 = v6;
    if (v6)
    {
      unint64_t v8 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v2;
      uint64_t v13 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6ACEC40();
        uint64_t v10 = v13;
      }
      sub_1B67F99AC(*(void *)(v10 + 56) + 8 * v8, (uint64_t)&v15);
      sub_1B6AC9488(v8, v10);
      uint64_t *v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
    BOOL v16 = (v7 & 1) == 0;
    return sub_1B6CE2154((uint64_t)&v15, &qword_1EB985318);
  }
  else
  {
    sub_1B67F99AC(a1, (uint64_t)&v15);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67E5590((uint64_t)&v15, a2, v11);
    *uint64_t v2 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6CE0AD8(uint64_t a1, unint64_t a2)
{
  int v3 = v2;
  sub_1B63BE100();
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1B6E30F48();
  uint64_t v11 = *(void *)(v10 - 8);
  double v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 48))(a1, 1, v10, v13) == 1)
  {
    sub_1B6CE288C(a1, (uint64_t (*)(void))sub_1B63BE100);
    unint64_t v16 = sub_1B69FAC48(a2 | ((HIDWORD(a2) & 1) << 32));
    if (v17)
    {
      unint64_t v18 = v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = *v2;
      uint64_t v24 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6ACF72C();
        uint64_t v20 = v24;
      }
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v11 + 32))(v9, *(void *)(v20 + 56) + *(void *)(v11 + 72) * v18, v10);
      sub_1B6AC9640(v18, v20);
      uint64_t *v3 = v20;
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    return sub_1B6CE288C((uint64_t)v9, (uint64_t (*)(void))sub_1B63BE100);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 32))(v15, a1, v10);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67E57D0((uint64_t)v15, a2 | ((HIDWORD(a2) & 1) << 32), v21);
    *uint64_t v2 = v24;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6CE0D58(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1B6CE288C(a1, (uint64_t (*)(void))sub_1B63B9590);
    unint64_t v5 = sub_1B62C1A30(a2);
    char v7 = v6;
    if (v6)
    {
      unint64_t v8 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v2;
      uint64_t v13 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6AD009C();
        uint64_t v10 = v13;
      }
      sub_1B6CE2824(*(void *)(v10 + 56) + 8 * v8, (uint64_t)&v15, (uint64_t (*)(void))sub_1B63B962C);
      sub_1B6AC9A2C(v8, v10);
      uint64_t *v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
    BOOL v16 = (v7 & 1) == 0;
    return sub_1B6CE288C((uint64_t)&v15, (uint64_t (*)(void))sub_1B63B9590);
  }
  else
  {
    sub_1B6CE2824(a1, (uint64_t)&v15, (uint64_t (*)(void))sub_1B63B962C);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67E5BD4((uint64_t)&v15, a2, v11);
    *uint64_t v2 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6CE0EB8(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1B6CE288C(a1, (uint64_t (*)(void))sub_1B6CE27BC);
    unint64_t v5 = sub_1B62C1A30(a2);
    char v7 = v6;
    if (v6)
    {
      unint64_t v8 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v2;
      uint64_t v13 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6AD02BC();
        uint64_t v10 = v13;
      }
      sub_1B6CE2824(*(void *)(v10 + 56) + 8 * v8, (uint64_t)&v15, (uint64_t (*)(void))sub_1B6CE27F0);
      sub_1B6AC9A4C(v8, v10);
      uint64_t *v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
    BOOL v16 = (v7 & 1) == 0;
    return sub_1B6CE288C((uint64_t)&v15, (uint64_t (*)(void))sub_1B6CE27BC);
  }
  else
  {
    sub_1B6CE2824(a1, (uint64_t)&v15, (uint64_t (*)(void))sub_1B6CE27F0);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67E5D08((uint64_t)&v15, a2, v11);
    *uint64_t v2 = v14;
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1B6CE1018(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B6331910(a1, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
  }
  else
  {
    unint64_t result = sub_1B62C1A30(a2);
    if ((v8 & 1) == 0) {
      return result;
    }
    unint64_t v9 = result;
    int v10 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v2;
    uint64_t v13 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!v10)
    {
      sub_1B6AD06C8();
      uint64_t v11 = v13;
    }
    sub_1B628A428(v9, v11);
    uint64_t *v3 = v11;
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CE10FC(uint64_t a1, unint64_t a2)
{
  int v3 = v2;
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v6 - 8, v7);
  unint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v11 = *(void *)(v10 - 8);
  double v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 48))(a1, 1, v10, v13) == 1)
  {
    sub_1B6CE288C(a1, (uint64_t (*)(void))sub_1B63B2040);
    unint64_t v16 = sub_1B69FAA7C(a2 | ((HIDWORD(a2) & 1) << 32));
    if (v17)
    {
      unint64_t v18 = v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = *v2;
      uint64_t v24 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6AD135C();
        uint64_t v20 = v24;
      }
      sub_1B6CE2824(*(void *)(v20 + 56) + *(void *)(v11 + 72) * v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      sub_1B6AC9C7C(v18, v20);
      uint64_t *v3 = v20;
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    return sub_1B6CE288C((uint64_t)v9, (uint64_t (*)(void))sub_1B63B2040);
  }
  else
  {
    sub_1B6CE2824(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67E6800((uint64_t)v15, a2 | ((HIDWORD(a2) & 1) << 32), v21);
    *uint64_t v2 = v24;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6CE1380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    sub_1B6CE2154(a1, &qword_1E9DD85B8);
    unint64_t v9 = sub_1B69FABB0(a2, a3);
    if (v10)
    {
      unint64_t v11 = v9;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *v3;
      uint64_t v15 = *v4;
      *unsigned int v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6AD20FC();
        uint64_t v13 = v15;
      }
      sub_1B67F7F4C(*(void *)(v13 + 56) + 48 * v11, (uint64_t)v16);
      sub_1B6AC9EC4(v11, v13);
      *unsigned int v4 = v13;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = 0;
      memset(v16, 0, sizeof(v16));
      char v18 = -1;
    }
    return sub_1B6CE2154((uint64_t)v16, &qword_1E9DD85B8);
  }
  else
  {
    sub_1B67F7F4C(a1, (uint64_t)v16);
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1B67E6D18((uint64_t)v16, a2, a3, v7);
    uint64_t *v3 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6CE14C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    sub_1B6CE2154(a1, &qword_1E9DD85B0);
    unint64_t v9 = sub_1B69FABB0(a2, a3);
    if (v10)
    {
      unint64_t v11 = v9;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *v3;
      uint64_t v15 = *v4;
      *unsigned int v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6AD26CC();
        uint64_t v13 = v15;
      }
      sub_1B67F7AF0(*(void *)(v13 + 56) + 96 * v11, (uint64_t)v16);
      sub_1B6ACA0C0(v11, v13);
      *unsigned int v4 = v13;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = 0;
      memset(v16, 0, sizeof(v16));
      char v18 = -1;
    }
    return sub_1B6CE2154((uint64_t)v16, &qword_1E9DD85B0);
  }
  else
  {
    sub_1B67F7AF0(a1, (uint64_t)v16);
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1B67E7264((uint64_t)v16, a2, a3, v7);
    uint64_t *v3 = v14;
    return swift_bridgeObjectRelease();
  }
}

void *sub_1B6CE1610(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  sub_1B6E33918();
  sub_1B6CE1EA8((uint64_t)&v40, a1);
  sub_1B6CE1EA8((uint64_t)&v40, a2);
  sub_1B6E33938();
  if (a3) {
    sub_1B6CE1FA4((uint64_t)&v40, a3);
  }
  sub_1B6E33938();
  uint64_t v10 = sub_1B6E33988();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v4 + 16);
  if (*(void *)(v12 + 16))
  {
    unint64_t v13 = sub_1B62C1A30(v10);
    if (v14)
    {
      uint64_t v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
      swift_unknownObjectRetain();
      return v15;
    }
  }
  uint64_t v39 = v11;
  RGTextureDescriptorMakeDefault((uint64_t)&v40);
  char v16 = BYTE2(v41);
  uint64_t v17 = v45;
  uint64_t v18 = v46;
  uint64_t v19 = v47;
  v5.i32[0] = v48;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_14;
  }
  uint64_t v22 = Strong;
  int16x8_t v38 = (int16x8_t)vmovl_u8(v5);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  uint64_t v40 = 0x1000100010080;
  LOWORD(v41) = 257;
  BYTE2(v41) = v16;
  uint64_t v24 = v23;
  long long v42 = 0x37uLL;
  uint64_t v43 = 0;
  uint64_t v44 = 1;
  uint64_t v45 = v17;
  uint64_t v46 = v18;
  uint64_t v47 = v19;
  unsigned __int32 v48 = vmovn_s16(v38).u32[0];
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v40, v23);
  id v25 = objc_msgSend(*(id *)(v22 + 16), sel_newTextureWithDescriptor_, v24);
  if (!v25)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    v38.i64[0] = qword_1EB997FD0;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v40 = 0xD000000000000023;
    unint64_t v41 = 0x80000001B6F379E0;
    id v26 = objc_msgSend(v24, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v27 = v41;
    uint64_t v37 = v40;
    int v28 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v40 = 0;
    swift_retain();
    sub_1B6B33E34(v28, &v40, v37, v27);
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    uint64_t Strong = swift_release();
LABEL_14:
    uint64_t v15 = 0;
    goto LABEL_15;
  }
  uint64_t v15 = v25;
  sub_1B6331FD0((uint64_t)v25);
  objc_msgSend(v15, sel_setLabel_, 0);
  swift_release();

LABEL_15:
  MEMORY[0x1F4188790](Strong, v21);
  uint64_t v29 = *(void *)(a2 + 16);
  if (v29) {
    float v30 = *(float *)(a2 + 4 * v29 + 28);
  }
  else {
    float v30 = 1.0;
  }
  uint64_t v31 = 0;
  float v32 = v30 / 127.0;
  do
  {
    sub_1B631A2E0(a1, a2, a3, a4, v32 * (float)v31);
    v36[v31++] = v33;
  }
  while (v31 != 128);
  if (v15)
  {
    sub_1B6CE206C((uint64_t)&v40);
    objc_msgSend(v15, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v40, 0, v36, 512);
  }
  uint64_t v34 = swift_unknownObjectRetain();
  sub_1B6CE1018(v34, v39);
  return v15;
}

float sub_1B6CE1A28(float a1, float a2, float a3, float a4, float a5)
{
  float v5 = 0.0;
  uint64_t v6 = 20;
  float v7 = 1.0;
  float v8 = 0.5;
  do
  {
    float v9 = (float)(a5 * (float)(v8 * (float)(v8 * v8)))
       + (float)((float)(a4 * (float)((float)(v8 * v8) * (float)((float)(1.0 - v8) * 3.0)))
               + (float)((float)(a2 * (float)((float)(1.0 - v8) * (float)((float)(1.0 - v8) * (float)(1.0 - v8))))
                       + (float)(a3 * (float)(v8 * (float)((float)((float)(1.0 - v8) * (float)(1.0 - v8)) * 3.0)))));
    if (vabds_f32(v9, a1) < 0.00001) {
      break;
    }
    if (v9 < a1) {
      float v5 = v8;
    }
    else {
      float v7 = v8;
    }
    float v8 = (float)(v5 + v7) * 0.5;
    --v6;
  }
  while (v6);
  return v8;
}

uint64_t sub_1B6CE1AC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v17 = a5;
  sub_1B6CE2758(0, &qword_1E9DD85C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  char v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CE2704();
  sub_1B6E33A88();
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  char v21 = v17;
  sub_1B665D590();
  sub_1B681F0D8((unint64_t *)&qword_1E9DD85D0);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6CE1C5C(uint64_t a1)
{
  unint64_t v2 = sub_1B6CE2704();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CE1C98(uint64_t a1)
{
  unint64_t v2 = sub_1B6CE2704();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6CE1CD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1B6CE21B0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1B6CE1D08(void *a1)
{
  return sub_1B6CE1AC0(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

char *sub_1B6CE1D2C@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_1B6D3EC54((uint64_t)&unk_1F0F63768);
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  return result;
}

uint64_t sub_1B6CE1D68(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    MEMORY[0x1F4188790](result, a2);
    uint64_t v3 = *(void **)(v2 + 176);
    swift_retain();
    swift_retain();
    sub_1B636E6CC((uint64_t)&type metadata for CurvesState, (uint64_t)&off_1F0F54AF0, v3, (void (*)(uint64_t))sub_1B6374A20);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6CE1E48()
{
  swift_bridgeObjectRelease();
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for CurveRuntime()
{
  return &type metadata for CurveRuntime;
}

ValueMetadata *type metadata accessor for CurveComponent()
{
  return &type metadata for CurveComponent;
}

uint64_t sub_1B6CE1EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B6E33928();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 4;
      uint64_t result = sub_1B6E33958();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1B6CE1F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B6E33928();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 16;
      sub_1B6E33958();
      sub_1B6E33958();
      sub_1B6E33958();
      uint64_t result = sub_1B6E33958();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1B6CE1FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B6E33928();
  if (v3)
  {
    uint64_t v5 = a2 + 49;
    do
    {
      v5 += 24;
      sub_1B6E33958();
      sub_1B6E33958();
      sub_1B6E33958();
      sub_1B6E33958();
      sub_1B6E33938();
      uint64_t result = sub_1B6E33938();
      --v3;
    }
    while (v3);
  }
  return result;
}

double sub_1B6CE206C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)&double result = 128;
  *(_OWORD *)(a1 + 24) = xmmword_1B6EC0EE0;
  *(void *)(a1 + 40) = 1;
  return result;
}

uint64_t sub_1B6CE208C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B6E33928();
  if (v3)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a2 + 32;
    do
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5);
      uint64_t result = sub_1B6E33928();
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = v7 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
          swift_bridgeObjectRelease();
          v9 += 16;
          --v8;
        }
        while (v8);
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return result;
}

uint64_t sub_1B6CE2154(uint64_t a1, unint64_t *a2)
{
  sub_1B62D82E0(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1B6CE21B0(void *a1)
{
  sub_1B6CE2758(0, &qword_1EB9808E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1B6D3EC54((uint64_t)&unk_1F0F63648);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6CE2704();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B665D590();
    sub_1B681F0D8((unint64_t *)&qword_1EB97FD90);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v9 = v11;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

void sub_1B6CE239C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1B63895B8((uint64_t)v54);
  if (*(uint64_t *)(a2 + 80) >= 1)
  {
    uint64_t v38 = *(void *)(a2 + 56);
    if (v38)
    {
      uint64_t v9 = v54[0];
      uint64_t v8 = v54[1];
      uint64_t v10 = v54[2];
      uint64_t v11 = *(void **)(a2 + 72);
      uint64_t v12 = v11[4];
      int v45 = *(unsigned __int8 *)(*(void *)(a2 + 64) + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      long long v13 = *(_OWORD *)(a2 + 16);
      v52[0] = *(_OWORD *)a2;
      v52[1] = v13;
      uint64_t v14 = *(void *)(a2 + 40);
      uint64_t v53 = *(void *)(a2 + 32);
      uint64_t v37 = v14;
      uint64_t v33 = a2;
      sub_1B62F1F58(a2);
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v36 = v12;
      uint64_t v34 = a1;
      uint64_t v35 = a3;
      while (1)
      {
        uint64_t v43 = v16;
        uint64_t v44 = v15;
        int v17 = (unsigned int *)(v37 + 48 * v15);
        uint64_t v18 = *((void *)v17 + 4);
        uint64_t v19 = *((void *)v17 + 5);
        uint64_t v39 = v17[1];
        uint64_t v40 = *v17;
        uint64_t v41 = *((void *)v17 + 3);
        long long v42 = (uint64_t *)*((void *)v17 + 2);
        if (v45)
        {
          uint64_t v20 = *(os_unfair_lock_s **)(v19 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v20);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v12);
        sub_1B62CA210((uint64_t)(v11 + 6), (uint64_t)v54, &qword_1EB97DE20);
        uint64_t v21 = v11[4];
        uint64_t v22 = *(void *)(*(void *)(*(void *)(*(void *)(v19 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v11[6] = ecs_stack_allocator_allocate(v21, 48 * v22, 8);
        v11[7] = v22;
        v11[9] = 0;
        v11[10] = 0;
        v11[8] = 0;
        swift_release();
        sub_1B62C9024((uint64_t)&type metadata for CurveComponent, (uint64_t)&off_1F0F63678, v42, v41, v18, (uint64_t)v11);
        uint64_t v23 = sub_1B62C9024((uint64_t)&type metadata for CurveRuntime, (uint64_t)&off_1F0F596A8, v42, v41, v18, (uint64_t)v11);
        uint64_t v24 = (int *)v23;
        if (v42)
        {
          if (v18)
          {
            uint64_t v12 = v36;
            do
            {
              uint64_t v25 = *a4;
              if (*a4)
              {
                uint64_t v26 = *v24;
                uint64_t v27 = a4[1] + (v26 << 9);
                uint64_t v49 = v9;
                uint64_t v50 = v8;
                uint64_t v51 = v10;
                uint64_t v46 = 0;
                uint64_t v47 = 0;
                uint64_t v48 = 0;
                objc_msgSend(v34, sel_copyFromBuffer_sourceOffset_sourceBytesPerRow_sourceBytesPerImage_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, v25, v27, 512, 512, &v49, v35, v26, 0, &v46);
              }
              ++v24;
              --v18;
            }
            while (v18);
            goto LABEL_16;
          }
        }
        else if (v40 != v39)
        {
          uint64_t v28 = v39 - v40;
          uint64_t v29 = (int *)(v23 + 4 * v40);
          uint64_t v12 = v36;
          do
          {
            uint64_t v30 = *a4;
            if (*a4)
            {
              uint64_t v31 = *v29;
              uint64_t v32 = a4[1] + (v31 << 9);
              uint64_t v49 = v9;
              uint64_t v50 = v8;
              uint64_t v51 = v10;
              uint64_t v46 = 0;
              uint64_t v47 = 0;
              uint64_t v48 = 0;
              objc_msgSend(v34, sel_copyFromBuffer_sourceOffset_sourceBytesPerRow_sourceBytesPerImage_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, v30, v32, 512, 512, &v49, v35, v31, 0, &v46, v33);
            }
            ++v29;
            --v28;
          }
          while (v28);
          goto LABEL_16;
        }
        uint64_t v12 = v36;
LABEL_16:
        uint64_t v16 = v43;
        sub_1B6345178(v11, (unsigned __int16 **)v52, (uint64_t)v54);
        sub_1B634507C((char *)v19);
        ecs_stack_allocator_pop_snapshot(v12);
        if (v45)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
        }
        swift_release();
        uint64_t v15 = v44 + 1;
        if (v44 + 1 == v38)
        {
          sub_1B62F073C(v33);
          return;
        }
      }
    }
  }
}

unint64_t sub_1B6CE2704()
{
  unint64_t result = qword_1EB97E8A0;
  if (!qword_1EB97E8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E8A0);
  }
  return result;
}

void sub_1B6CE2758(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6CE2704();
    unint64_t v7 = a3(a1, &type metadata for CurveComponent.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1B6CE27BC(uint64_t a1)
{
}

void sub_1B6CE27F0(uint64_t a1)
{
}

uint64_t sub_1B6CE2824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6CE288C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CurveComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6CE2988);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurveComponent.CodingKeys()
{
  return &type metadata for CurveComponent.CodingKeys;
}

ValueMetadata *type metadata accessor for CurvesState()
{
  return &type metadata for CurvesState;
}

unint64_t sub_1B6CE29D4()
{
  unint64_t result = qword_1E9DD85E0;
  if (!qword_1E9DD85E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD85E0);
  }
  return result;
}

unint64_t sub_1B6CE2A2C()
{
  unint64_t result = qword_1EB97E8C8;
  if (!qword_1EB97E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E8C8);
  }
  return result;
}

unint64_t sub_1B6CE2A84()
{
  unint64_t result = qword_1EB97E8B0[0];
  if (!qword_1EB97E8B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB97E8B0);
  }
  return result;
}

uint64_t sub_1B6CE2AD8()
{
  return 60;
}

uint64_t sub_1B6CE2BB4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62B5820();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B682A12C(1);
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, v2 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
  type metadata accessor for AuthoringNode();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1B6CE3580(v13, v14, (uint64_t)v12, 0, 0xF000000000000000);
  swift_release();
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  unint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
  uint64_t v18 = (uint64_t *)(v15 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  uint64_t v19 = *(void *)(v15 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  unint64_t v20 = *(void *)(v15 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
  *uint64_t v18 = v16;
  v18[1] = v17;
  sub_1B6751DC0(v16, v17);
  sub_1B665D488(v19, v20);
  if ((a1 & 1) == 0)
  {
    sub_1B6E31108();
    uint64_t v21 = v15 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 24);
    v22(v15 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v8, v4);
    uint64_t v23 = OBJC_IVAR____TtC3VFX13AuthoringNode_raw;
    v22(*(void *)(v15 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) + OBJC_IVAR____TtC3VFX4Node_authoringID, (char *)v21, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v22(*(void *)(v15 + v23) + OBJC_IVAR____TtC3VFX4Node_authoringID, (char *)v21, v4);
  }
  return v15;
}

uint64_t sub_1B6CE2E3C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B665D488(*(void *)(v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData), *(void *)(v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6CE2F10()
{
  return type metadata accessor for AuthoringNode();
}

uint64_t type metadata accessor for AuthoringNode()
{
  uint64_t result = qword_1E9DD85E8;
  if (!qword_1E9DD85E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B6CE2F64()
{
  uint64_t result = sub_1B6E31118();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthoringNode.Port()
{
  return &type metadata for AuthoringNode.Port;
}

uint64_t sub_1B6CE3028()
{
  return sub_1B6CE2AD8();
}

uint64_t sub_1B6CE304C()
{
  uint64_t v1 = sub_1B6E31118();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1B6E33918();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v1);
  sub_1B6966E04();
  sub_1B6E315B8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  sub_1B6E33928();
  return sub_1B6E33988();
}

uint64_t sub_1B6CE3170()
{
  uint64_t v1 = sub_1B6E31118();
  uint64_t v2 = *(void *)(v1 - 8);
  double v4 = MEMORY[0x1F4188790](v1, v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v6, *v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v1, v4);
  sub_1B6966E04();
  sub_1B6E315B8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  return sub_1B6E33928();
}

uint64_t sub_1B6CE3284()
{
  uint64_t v1 = sub_1B6E31118();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1B6E33918();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v1);
  sub_1B6966E04();
  sub_1B6E315B8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  sub_1B6E33928();
  return sub_1B6E33988();
}

uint64_t sub_1B6CE33B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v18((char *)&v21 - v12, v14 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v4, v11);
  ((void (*)(char *, uint64_t, uint64_t))v18)(v8, v16 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v4);
  LOBYTE(a2) = sub_1B6E310D8();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v13, v4);
  return a2 & (v15 == v17);
}

unint64_t sub_1B6CE352C()
{
  unint64_t result = qword_1E9DD85F8;
  if (!qword_1E9DD85F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD85F8);
  }
  return result;
}

uint64_t sub_1B6CE3580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v19)(void *__return_ptr, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void v37[6];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  uint64_t v6 = v5;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v34 = a3;
  sub_1B62B5820();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = xmmword_1B6E8B000;
  *(void *)(v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) = a1;
  unint64_t v18 = *(void *)(a2 + 16);
  uint64_t v19 = *(void (**)(void *__return_ptr, uint64_t))(*(void *)a1 + 152);
  unint64_t v20 = swift_retain();
  v19(v37, v20);
  uint64_t v21 = v37[0];
  long long v42 = v37[1];
  uint64_t v43 = v37[0];
  sub_1B62D8C3C((uint64_t)&v42);
  uint64_t v41 = v37[2];
  sub_1B62D8C3C((uint64_t)&v41);
  uint64_t v40 = v37[3];
  sub_1B62D8C3C((uint64_t)&v40);
  uint64_t v39 = v37[4];
  sub_1B62D8C3C((uint64_t)&v39);
  uint64_t v38 = v37[5];
  sub_1B62D8C3C((uint64_t)&v38);
  uint64_t v22 = *(void *)(v21 + 16);
  sub_1B62D8C3C((uint64_t)&v43);
  if (v22 <= v18) {
    uint64_t v23 = v18;
  }
  else {
    uint64_t v23 = v22;
  }
  uint64_t v24 = sub_1B68C98A4(0, v23, a2);
  swift_bridgeObjectRelease();
  *(void *)(v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) = v24;
  uint64_t v25 = v34;
  sub_1B678FED0(v34, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1B6E31108();
    sub_1B678FF34(v25);
    sub_1B678FF34((uint64_t)v12);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  }
  else
  {
    sub_1B678FF34(v25);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v26(v17, v12, v13);
  }
  uint64_t v27 = v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
  v26((char *)(v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID), v17, v13);
  uint64_t v28 = (void *)(v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  uint64_t v29 = *(void *)(v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  uint64_t v30 = *(void *)(v6 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
  uint64_t v31 = v36;
  char *v28 = v35;
  v28[1] = v31;
  sub_1B665D488(v29, v30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1 + OBJC_IVAR____TtC3VFX4Node_authoringID, v27, v13);
  return v6;
}

uint64_t sub_1B6CE3870(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B6C3D3B8(0, v1, 0);
    uint64_t v2 = v18;
    unint64_t v4 = sub_1B6860A54(a1);
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 64;
    int64_t v7 = *(void *)(v18 + 16);
    uint64_t v8 = a1 + 88;
    do
    {
      unint64_t v9 = v7;
      uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 24 * v4);
      unint64_t v11 = *(void *)(v18 + 24);
      ++v7;
      if (v9 >= v11 >> 1)
      {
        uint64_t v17 = v8;
        sub_1B6C3D3B8(v11 > 1, v7, 1);
        uint64_t v8 = v17;
      }
      *(void *)(v18 + 16) = v7;
      *(void *)(v18 + 8 * v9 + 32) = v10;
      unint64_t v12 = v4 >> 6;
      if ((*(void *)(v6 + 8 * (v4 >> 6)) & (-2 << v4)) != 0)
      {
        unint64_t v4 = __clz(__rbit64(*(void *)(v6 + 8 * (v4 >> 6)) & (-2 << v4))) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
        unint64_t v13 = v12 + 1;
        unint64_t v14 = (v4 + 63) >> 6;
        if (v12 + 1 < v14)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v13);
          if (!v15)
          {
            unint64_t v13 = v12 + 2;
            if (v12 + 2 >= v14) {
              goto LABEL_4;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v13);
            if (!v15)
            {
              while (v14 - 3 != v12)
              {
                unint64_t v15 = *(void *)(v8 + 8 * v12++);
                if (v15)
                {
                  unint64_t v13 = v12 + 2;
                  goto LABEL_10;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_10:
          unint64_t v4 = __clz(__rbit64(v15)) + (v13 << 6);
        }
      }
LABEL_4:
      ++v5;
    }
    while (v5 != v1);
  }
  return v2;
}

id sub_1B6CE3A18@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isHidden);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1B6CE3A4C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHidden_, *a1);
}

id sub_1B6CE3A60@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_position);
  *a2 = v4;
  return result;
}

id sub_1B6CE3A94(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPosition_, *a1);
}

id sub_1B6CE3AA8@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_eulerAngles);
  *a2 = v4;
  return result;
}

id sub_1B6CE3ADC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEulerAngles_, *a1);
}

id sub_1B6CE3AF0@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_scale);
  *a2 = v4;
  return result;
}

id sub_1B6CE3B24(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScale_, *a1);
}

id sub_1B6CE3B38@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_worldTransform);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_1B6CE3B70(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorldTransform_, *a1, a1[2], a1[4], a1[6]);
}

id sub_1B6CE3B8C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_opacity);
  *a2 = v4;
  return result;
}

id sub_1B6CE3BC0(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setOpacity_, a3);
}

id sub_1B6CE3BD4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_renderingOrder);
  *a2 = result;
  return result;
}

id sub_1B6CE3C08(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRenderingOrder_, *a1);
}

id sub_1B6CE3C1C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_castsShadow);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1B6CE3C50(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCastsShadow_, *a1);
}

id sub_1B6CE3C64@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_categoryBitMask);
  *a2 = result;
  return result;
}

id sub_1B6CE3C98(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCategoryBitMask_, *a1);
}

void sub_1B6CE3CAC(void *a1@<X8>)
{
  *a1 = &unk_1F0F6C380;
}

uint64_t sub_1B6CE3CBC()
{
  type metadata accessor for GraphNodeLibrary();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[2] = sub_1B67F4ED0(MEMORY[0x1E4FBC860]);
  v0[3] = v1;
  v0[4] = sub_1B67F63E0(v1);
  uint64_t result = sub_1B6CE3E40();
  qword_1E9E49840 = (uint64_t)v0;
  return result;
}

uint64_t sub_1B6CE3D18(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *a1;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_1B67E4320((uint64_t)a1, v6, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 16) = v13;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(v2 + 24);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 24) = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B68C6334(0, v8[2] + 1, 1, v8);
    uint64_t v8 = (void *)result;
    *(void *)(v3 + 24) = result;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B68C6334(v10 > 1, v11 + 1, 1, v8);
    uint64_t v8 = (void *)result;
  }
  _OWORD v8[2] = v11 + 1;
  unint64_t v12 = &v8[2 * v11];
  v12[4] = a1;
  void v12[5] = a2;
  *(void *)(v3 + 24) = v8;
  return result;
}

uint64_t sub_1B6CE3E40()
{
  sub_1B6CEADF0();
  sub_1B6CE5ED8();
  sub_1B6CE72E4();
  sub_1B6CE3F8C();
  sub_1B6CE5814(0);
  sub_1B6CE9B94();
  sub_1B6CE7ED4();
  sub_1B6CEA8F0();
  sub_1B6CE9F54();
  type metadata accessor for NoopReturnNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC3VFX14NoopReturnNode_type) = 0x8000000000000050;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 1);
  swift_release();
  type metadata accessor for NoopReturnAnyNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  _OWORD v2[3] = 0;
  v2[4] = 0;
  v2[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 1);
  swift_release();
  type metadata accessor for NoopActionNode(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  _OWORD v3[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v3, 1);
  swift_release();
  sub_1B6CEB0B0();
  sub_1B6CEB508();

  return sub_1B6CEB60C();
}

uint64_t sub_1B6CE3F8C()
{
  unint64_t v0 = MEMORY[0x1BA9B41E0](0x6E6F697469736F70, 0xE800000000000000);
  uint64_t v4 = sub_1B6741EBC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v8 = *(void *)(v4 + 32);
  uint64_t v7 = *(void *)(v4 + 40);
  uint64_t v9 = *(void *)(v4 + 48);
  char v10 = *(unsigned char *)(v4 + 56);
  __int16 v11 = *(_WORD *)(v4 + 58);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  type metadata accessor for SetECSValueNode(0);
  unint64_t v12 = (uint64_t *)swift_allocObject();
  uint64_t v13 = (char *)v12 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
  *(void *)uint64_t v13 = 0xFFFFFFFFLL;
  *((void *)v13 + 1) = v6;
  *((void *)v13 + 2) = v5;
  *((void *)v13 + 3) = v8;
  *((void *)v13 + 4) = v7;
  *((void *)v13 + 5) = v9;
  v13[48] = v10;
  *((_WORD *)v13 + 25) = v11;
  v12[2] = MEMORY[0x1E4FBC860];
  v12[3] = 0;
  v12[4] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v12, 2);
  swift_release();
  type metadata accessor for GetECSValueNode(0);
  unint64_t v14 = (uint64_t *)swift_allocObject();
  unint64_t v15 = (char *)v14 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
  *(void *)unint64_t v15 = 0xFFFFFFFFLL;
  *((void *)v15 + 1) = v6;
  *((void *)v15 + 2) = v5;
  *((void *)v15 + 3) = v8;
  *((void *)v15 + 4) = v7;
  *((void *)v15 + 5) = v9;
  v15[48] = v10;
  *((_WORD *)v15 + 25) = v11;
  _OWORD v14[2] = MEMORY[0x1E4FBC860];
  v14[3] = 0;
  v14[4] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v14, 2);
  swift_release();
  type metadata accessor for InspectorSetECSValueNode(0);
  uint64_t v16 = (uint64_t *)swift_allocObject();
  uint64_t v17 = (char *)v16 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
  *(void *)uint64_t v17 = 0xFFFFFFFFLL;
  uint64_t v138 = v7;
  uint64_t v139 = v6;
  *((void *)v17 + 1) = v6;
  *((void *)v17 + 2) = v5;
  *((void *)v17 + 3) = v8;
  *((void *)v17 + 4) = v7;
  uint64_t v137 = v9;
  *((void *)v17 + 5) = v9;
  __int16 v135 = v11;
  char v136 = v10;
  v17[48] = v10;
  *((_WORD *)v17 + 25) = v11;
  _OWORD v16[2] = MEMORY[0x1E4FBC860];
  v16[3] = 0;
  v16[4] = 0;
  uint64_t v141 = v5;
  swift_bridgeObjectRetain();
  uint64_t v140 = v8;
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v16, 2);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6CEBEA8(0, &qword_1E9DD2050, (uint64_t)&type metadata for ScriptKeyPath, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6EB4810;
  uint64_t v20 = swift_getKeyPath();
  *(void *)(inited + 32) = 0x656C6269736956;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v21 = MEMORY[0x1E4FBB390];
  *(void *)(inited + 48) = v20;
  *(void *)(inited + 56) = v21;
  *(void *)(inited + 64) = 0;
  *(unsigned char *)(inited + 72) = 1;
  *(_WORD *)(inited + 74) = 0;
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = MEMORY[0x1E4FBB470];
  sub_1B6395FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v25 = v24;
  *(void *)(inited + 80) = 0x6E6F697469736F50;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = v22;
  *(void *)(inited + 104) = v24;
  *(void *)(inited + 112) = 0;
  *(unsigned char *)(inited + 120) = 1;
  *(_WORD *)(inited + 122) = 0;
  uint64_t v26 = swift_getKeyPath();
  *(void *)(inited + 128) = 0x72656C7545;
  *(void *)(inited + 136) = 0xE500000000000000;
  *(void *)(inited + 144) = v26;
  *(void *)(inited + 152) = v25;
  *(void *)(inited + 160) = 0;
  *(unsigned char *)(inited + 168) = 1;
  *(_WORD *)(inited + 170) = 0;
  uint64_t v27 = swift_getKeyPath();
  *(void *)(inited + 176) = 0x656C616353;
  *(void *)(inited + 184) = 0xE500000000000000;
  *(void *)(inited + 192) = v27;
  *(void *)(inited + 200) = v25;
  *(void *)(inited + 208) = 0;
  *(unsigned char *)(inited + 216) = 1;
  *(_WORD *)(inited + 218) = 0;
  uint64_t v28 = swift_getKeyPath();
  type metadata accessor for simd_float4x4(0);
  *(void *)(inited + 224) = 0x725420646C726F57;
  *(void *)(inited + 232) = 0xEF6D726F66736E61;
  *(void *)(inited + 240) = v28;
  *(void *)(inited + 248) = v29;
  *(void *)(inited + 256) = 0;
  *(unsigned char *)(inited + 264) = 1;
  *(_WORD *)(inited + 266) = 0;
  uint64_t v30 = swift_getKeyPath();
  *(void *)(inited + 272) = 0x7974696361704FLL;
  *(void *)(inited + 280) = 0xE700000000000000;
  *(void *)(inited + 288) = v30;
  *(void *)(inited + 296) = v23;
  *(void *)(inited + 304) = 0;
  *(unsigned char *)(inited + 312) = 1;
  *(_WORD *)(inited + 314) = 0;
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 320) = 0x726564724FLL;
  *(void *)(inited + 328) = 0xE500000000000000;
  *(void *)(inited + 336) = v31;
  *(void *)(inited + 344) = v32;
  *(void *)(inited + 352) = 0;
  *(unsigned char *)(inited + 360) = 1;
  *(_WORD *)(inited + 362) = 0;
  uint64_t v33 = swift_getKeyPath();
  strcpy((char *)(inited + 368), "Casts Shadow");
  *(unsigned char *)(inited + 381) = 0;
  *(_WORD *)(inited + 382) = -5120;
  *(void *)(inited + 384) = v33;
  *(void *)(inited + 392) = v21;
  *(void *)(inited + 400) = 0;
  *(unsigned char *)(inited + 408) = 1;
  *(_WORD *)(inited + 410) = 0;
  uint64_t v34 = swift_getKeyPath();
  *(void *)(inited + 416) = 0x70756F7247;
  *(void *)(inited + 424) = 0xE500000000000000;
  uint64_t v35 = MEMORY[0x1E4FBC538];
  *(void *)(inited + 432) = v34;
  *(void *)(inited + 440) = v35;
  *(void *)(inited + 448) = 0;
  *(unsigned char *)(inited + 456) = 1;
  *(_WORD *)(inited + 458) = 0;
  uint64_t v36 = *(void *)(inited + 16);
  if (v36)
  {
    sub_1B6E32768();
    uint64_t v142 = KeyPath;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v37 = (unsigned __int16 *)(inited + 74);
    while (1)
    {
      uint64_t v38 = *(void *)(v37 - 21);
      uint64_t v39 = *(void *)(v37 - 17);
      uint64_t v40 = *(void *)(v37 - 13);
      uint64_t v41 = *(void *)(v37 - 9);
      uint64_t v42 = *(void *)(v37 - 5);
      int v43 = *((unsigned __int8 *)v37 - 2);
      int v44 = *v37;
      swift_bridgeObjectRetain();
      uint64_t v45 = swift_retain();
      if (MEMORY[0x1BA9B43C0](v45, v142)) {
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
      v37 += 24;
      if (!--v36)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_7;
      }
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    LODWORD(v36) = v43 | (v44 << 16);
    uint64_t v46 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v38 = 0;
    uint64_t v46 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  swift_release();
  unsigned int v47 = WORD1(v36);
  unsigned int v134 = WORD1(v36);
  type metadata accessor for SetWorldValueNode(0);
  uint64_t v48 = (uint64_t *)swift_allocObject();
  uint64_t v49 = (uint64_t)v48 + OBJC_IVAR____TtC3VFX15_WorldValueNode_target;
  *(_OWORD *)uint64_t v49 = xmmword_1B6E4F270;
  *(void *)(v49 + 16) = 0;
  *(void *)(v49 + 24) = 0;
  sub_1B6BC35C4(v49);
  *(_OWORD *)uint64_t v49 = xmmword_1B6E4F270;
  *(void *)(v49 + 16) = 0;
  *(void *)(v49 + 24) = 0;
  uint64_t v50 = (char *)v48 + OBJC_IVAR____TtC3VFX15_WorldValueNode_scriptKeyPath;
  *(void *)uint64_t v50 = v38;
  *((void *)v50 + 1) = v46;
  *((void *)v50 + 2) = v40;
  *((void *)v50 + 3) = v41;
  *((void *)v50 + 4) = v42;
  char v51 = v36 & 1;
  unsigned char v50[40] = v51;
  *((_WORD *)v50 + 21) = v47;
  v48[4] = 0;
  _OWORD v48[2] = MEMORY[0x1E4FBC860];
  v48[3] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v48, 2);
  swift_release();
  type metadata accessor for GetWorldValueNode(0);
  float v52 = (uint64_t *)swift_allocObject();
  uint64_t v53 = (uint64_t)v52 + OBJC_IVAR____TtC3VFX15_WorldValueNode_target;
  *(_OWORD *)uint64_t v53 = xmmword_1B6E4F270;
  *(void *)(v53 + 16) = 0;
  *(void *)(v53 + 24) = 0;
  sub_1B6BC35C4(v53);
  *(_OWORD *)uint64_t v53 = xmmword_1B6E4F270;
  *(void *)(v53 + 16) = 0;
  *(void *)(v53 + 24) = 0;
  uint64_t v54 = (char *)v52 + OBJC_IVAR____TtC3VFX15_WorldValueNode_scriptKeyPath;
  *(void *)uint64_t v54 = v38;
  *((void *)v54 + 1) = v46;
  *((void *)v54 + 2) = v40;
  *((void *)v54 + 3) = v41;
  *((void *)v54 + 4) = v42;
  v54[40] = v51;
  *((_WORD *)v54 + 21) = v134;
  v52[4] = 0;
  _OWORD v52[2] = MEMORY[0x1E4FBC860];
  v52[3] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v52, 2);
  swift_release();
  type metadata accessor for InspectorSetWorldValueNode(0);
  int v55 = (uint64_t *)swift_allocObject();
  uint64_t v56 = (uint64_t)v55 + OBJC_IVAR____TtC3VFX15_WorldValueNode_target;
  *(_OWORD *)uint64_t v56 = xmmword_1B6E4F270;
  *(void *)(v56 + 16) = 0;
  *(void *)(v56 + 24) = 0;
  sub_1B6BC35C4(v56);
  *(_OWORD *)uint64_t v56 = xmmword_1B6E4F270;
  *(void *)(v56 + 16) = 0;
  *(void *)(v56 + 24) = 0;
  uint64_t v57 = (char *)v55 + OBJC_IVAR____TtC3VFX15_WorldValueNode_scriptKeyPath;
  *(void *)uint64_t v57 = v38;
  *((void *)v57 + 1) = v46;
  *((void *)v57 + 2) = v40;
  *((void *)v57 + 3) = v41;
  *((void *)v57 + 4) = v42;
  unsigned char v57[40] = v51;
  *((_WORD *)v57 + 21) = v134;
  v55[4] = 0;
  uint64_t v58 = MEMORY[0x1E4FBC860];
  _OWORD v55[2] = MEMORY[0x1E4FBC860];
  v55[3] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v55, 2);
  swift_release();
  swift_unknownObjectWeakInit();
  uint64_t v144 = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v145 = 0x3E6C6C756E3CLL;
  unint64_t v146 = 0xE600000000000000;
  sub_1B6649008((uint64_t)v143, (uint64_t)v147);
  type metadata accessor for WorldReferenceNode(0);
  uint64_t v59 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v59 + OBJC_IVAR____TtC3VFX18WorldReferenceNode_kind) = 0;
  sub_1B664D9F0((uint64_t)v147, (uint64_t)v59 + OBJC_IVAR____TtC3VFX18WorldReferenceNode_reference);
  v59[3] = 0;
  v59[4] = 0;
  _OWORD v59[2] = v58;
  sub_1B6E31108();
  sub_1B66490B8((uint64_t)v147);
  sub_1B6CE3D18(v59, 4);
  swift_release();
  uint64_t v144 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v144 = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v145 = 0x3E6C6C756E3CLL;
  unint64_t v146 = 0xE600000000000000;
  sub_1B6649008((uint64_t)v143, (uint64_t)v147);
  uint64_t v60 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v60 + OBJC_IVAR____TtC3VFX18WorldReferenceNode_kind) = 1;
  sub_1B664D9F0((uint64_t)v147, (uint64_t)v60 + OBJC_IVAR____TtC3VFX18WorldReferenceNode_reference);
  v60[3] = 0;
  void v60[4] = 0;
  _OWORD v60[2] = v58;
  sub_1B6E31108();
  sub_1B66490B8((uint64_t)v147);
  sub_1B6CE3D18(v60, 4);
  swift_release();
  uint64_t v144 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v144 = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v145 = 0x3E6C6C756E3CLL;
  unint64_t v146 = 0xE600000000000000;
  sub_1B6649008((uint64_t)v143, (uint64_t)v147);
  type metadata accessor for ImplicitWorldReferenceNode(0);
  uint64_t v61 = (uint64_t *)swift_allocObject();
  sub_1B664D9F0((uint64_t)v147, (uint64_t)v143);
  *((unsigned char *)v61 + OBJC_IVAR____TtC3VFX18WorldReferenceNode_kind) = 0;
  sub_1B664D9F0((uint64_t)v143, (uint64_t)v61 + OBJC_IVAR____TtC3VFX18WorldReferenceNode_reference);
  v61[3] = 0;
  v61[4] = 0;
  v61[2] = v58;
  sub_1B6E31108();
  sub_1B66490B8((uint64_t)v143);
  sub_1B66490B8((uint64_t)v147);
  sub_1B6CE3D18(v61, 2);
  swift_release();
  type metadata accessor for TimeNode(0);
  uint64_t v62 = (uint64_t *)swift_allocObject();
  v62[3] = 0;
  v62[4] = 0;
  _OWORD v62[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v62, 0);
  swift_release();
  type metadata accessor for DeltaTimeNode(0);
  int32x4_t v63 = (uint64_t *)swift_allocObject();
  v63[3] = 0;
  v63[4] = 0;
  void v63[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v63, 0);
  swift_release();
  type metadata accessor for IsFirstFrameNode(0);
  uint64_t v64 = (uint64_t *)swift_allocObject();
  v64[3] = 0;
  v64[4] = 0;
  _OWORD v64[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v64, 0);
  swift_release();
  type metadata accessor for OnUpdateNode(0);
  uint64_t v65 = (uint64_t *)swift_allocObject();
  v65[3] = 0;
  v65[4] = 0;
  v65[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v65, 0);
  swift_release();
  type metadata accessor for OnFirstFrameNode(0);
  uint64_t v66 = (uint64_t *)swift_allocObject();
  v66[3] = 0;
  v66[4] = 0;
  _OWORD v66[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v66, 0);
  swift_release();
  type metadata accessor for OnParticleStageNode(0);
  uint64_t v67 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v67 + OBJC_IVAR____TtC3VFX19OnParticleStageNode_stage) = 3;
  v67[3] = 0;
  v67[4] = 0;
  v67[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v67, 0);
  swift_release();
  uint64_t v68 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v68 + OBJC_IVAR____TtC3VFX19OnParticleStageNode_stage) = 5;
  v68[3] = 0;
  v68[4] = 0;
  _OWORD v68[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v68, 0);
  swift_release();
  type metadata accessor for AlphaPremultipliedNode(0);
  uint64_t v69 = (uint64_t *)swift_allocObject();
  v69[3] = 0;
  v69[4] = 0;
  v69[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v69, 0);
  swift_release();
  type metadata accessor for RGBAToHSBANode(0);
  uint64_t v70 = (uint64_t *)swift_allocObject();
  v70[3] = 0;
  v70[4] = 0;
  v70[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v70, 0);
  swift_release();
  type metadata accessor for RGBToHSBNode(0);
  float32x4_t v71 = (uint64_t *)swift_allocObject();
  v71[3] = 0;
  v71[4] = 0;
  v71[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v71, 0);
  swift_release();
  type metadata accessor for HSBAToRGBANode(0);
  id v72 = (uint64_t *)swift_allocObject();
  v72[2] = v58;
  v72[3] = 0;
  v72[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v72, 0);
  swift_release();
  type metadata accessor for HSBToRGBNode(0);
  float32x4_t v73 = (uint64_t *)swift_allocObject();
  void v73[2] = v58;
  v73[3] = 0;
  v73[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v73, 0);
  swift_release();
  type metadata accessor for sRGBAToLinearNode(0);
  float32x4_t v74 = (uint64_t *)swift_allocObject();
  v74[2] = v58;
  v74[3] = 0;
  v74[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v74, 0);
  swift_release();
  type metadata accessor for sRGBToLinearNode(0);
  float32x4_t v75 = (uint64_t *)swift_allocObject();
  v75[2] = v58;
  v75[3] = 0;
  v75[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v75, 0);
  swift_release();
  type metadata accessor for LinearTosRGBNode(0);
  float32x4_t v76 = (uint64_t *)swift_allocObject();
  v76[2] = v58;
  v76[3] = 0;
  v76[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v76, 0);
  swift_release();
  type metadata accessor for LinearTosRGBANode(0);
  uint64_t v77 = (uint64_t *)swift_allocObject();
  v77[2] = v58;
  void v77[3] = 0;
  v77[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v77, 0);
  swift_release();
  type metadata accessor for EntityAssetNode(0);
  float32x2_t v78 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v78 + OBJC_IVAR____TtC3VFX15EntityAssetNode_kind) = 1;
  *(uint64_t *)((char *)v78 + OBJC_IVAR____TtC3VFX15EntityAssetNode_entity) = 0xFFFFFFFFLL;
  v78[2] = v58;
  v78[3] = 0;
  v78[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v78, 2);
  swift_release();
  type metadata accessor for ImplicitEntityAssetNode(0);
  float32x4_t v79 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v79 + OBJC_IVAR____TtC3VFX15EntityAssetNode_kind) = 1;
  *(uint64_t *)((char *)v79 + OBJC_IVAR____TtC3VFX15EntityAssetNode_entity) = 0xFFFFFFFFLL;
  _OWORD v79[2] = v58;
  v79[3] = 0;
  v79[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v79, 2);
  swift_release();
  type metadata accessor for CurveTextureNode(0);
  swift_allocObject();
  uint64_t v80 = sub_1B69C8FC0();
  sub_1B6CE3D18(v80, 0);
  swift_release();
  type metadata accessor for EvaluateCurveNode(0);
  uint64_t v81 = (uint64_t *)swift_allocObject();
  _OWORD v81[2] = v58;
  v81[3] = 0;
  v81[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v81, 0);
  swift_release();
  type metadata accessor for ColorRampTextureNode(0);
  char v82 = (uint64_t *)swift_allocObject();
  int v83 = (char *)v82 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp;
  sub_1B629CD98();
  uint64_t v84 = (_OWORD *)swift_allocObject();
  __asm { FMOV            V1.4S, #1.0 }
  v84[1] = xmmword_1B6E76B30;
  _OWORD v84[2] = _Q1;
  *(void *)int v83 = v84;
  *((void *)v83 + 1) = &unk_1F0FA83D8;
  v83[16] = 1;
  *(uint64_t *)((char *)v82 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = 0xFFFFFFFFLL;
  v84[3] = xmmword_1B6E4F370;
  v82[3] = 0;
  v82[4] = 0;
  _OWORD v82[2] = v58;
  sub_1B6E31108();
  sub_1B6CE3D18(v82, 0);
  swift_release();
  type metadata accessor for EvaluateColorRampNode(0);
  uint64_t v90 = (uint64_t *)swift_allocObject();
  _OWORD v90[2] = v58;
  v90[3] = 0;
  v90[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v90, 0);
  swift_release();
  type metadata accessor for Random01Node(0);
  uint64_t v91 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v91 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = 0x8000000000000050;
  v91[2] = v58;
  v91[3] = 0;
  v91[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v91, 0);
  swift_release();
  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_1B6E8F480;
  uint64_t v93 = v92 | 0x1000000000000000;
  long long v94 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v94 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v93;
  _OWORD v94[2] = v58;
  v94[3] = 0;
  v94[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v94, 0);
  swift_release();
  uint64_t v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = xmmword_1B6E8DAE0;
  uint64_t v96 = v95 | 0x1000000000000000;
  uint64_t v97 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v97 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v96;
  _OWORD v97[2] = v58;
  v97[3] = 0;
  v97[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v97, 0);
  swift_release();
  uint64_t v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = xmmword_1B6E8DAD0;
  uint64_t v99 = v98 | 0x1000000000000000;
  float v100 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v100 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v99;
  _OWORD v100[2] = v58;
  v100[3] = 0;
  v100[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v100, 0);
  swift_release();
  uint64_t v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = xmmword_1B6E8F480;
  uint64_t v102 = v101 | 0x1000000000000000;
  type metadata accessor for RandomUnitVectorNode(0);
  long long v103 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v103 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v102;
  _OWORD v103[2] = v58;
  v103[3] = 0;
  v103[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v103, 0);
  swift_release();
  uint64_t v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = xmmword_1B6E8DAE0;
  uint64_t v105 = v104 | 0x1000000000000000;
  long long v106 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v106 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v105;
  void v106[2] = v58;
  v106[3] = 0;
  v106[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v106, 0);
  swift_release();
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_1B6E8DAD0;
  uint64_t v108 = v107 | 0x1000000000000000;
  long long v109 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v109 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v108;
  _OWORD v109[2] = v58;
  v109[3] = 0;
  v109[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v109, 0);
  swift_release();
  uint64_t v110 = swift_allocObject();
  *(void *)(v110 + 16) = 0x8000000000000050;
  uint64_t v111 = v110 | 0x2000000000000000;
  type metadata accessor for RandomInRangeNode(0);
  long long v112 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v112 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v111;
  _OWORD v112[2] = v58;
  v112[3] = 0;
  v112[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v112, 0);
  swift_release();
  uint64_t v113 = swift_allocObject();
  *(void *)(v113 + 16) = 0x8000000000000040;
  uint64_t v114 = v113 | 0x2000000000000000;
  long long v115 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v115 + OBJC_IVAR____TtC3VFX15RandomTypedNode_type) = v114;
  _OWORD v115[2] = v58;
  v115[3] = 0;
  v115[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v115, 0);
  swift_release();
  type metadata accessor for RandomPositionInsideSphereNode(0);
  long long v116 = (uint64_t *)swift_allocObject();
  _OWORD v116[2] = v58;
  v116[3] = 0;
  v116[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v116, 0);
  swift_release();
  type metadata accessor for RandomPositionInsideCubeNode(0);
  long long v117 = (uint64_t *)swift_allocObject();
  _OWORD v117[2] = v58;
  v117[3] = 0;
  v117[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v117, 0);
  swift_release();
  type metadata accessor for PerlinNoiseFloatNode(0);
  long long v118 = (uint64_t *)swift_allocObject();
  v118[2] = v58;
  v118[3] = 0;
  v118[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v118, 0);
  swift_release();
  type metadata accessor for PerlinNoiseFloat2Node(0);
  uint64_t v119 = (uint64_t *)swift_allocObject();
  _OWORD v119[2] = v58;
  v119[3] = 0;
  v119[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v119, 0);
  swift_release();
  type metadata accessor for PerlinNoiseFloat3Node(0);
  unint64_t v120 = (uint64_t *)swift_allocObject();
  _OWORD v120[2] = v58;
  v120[3] = 0;
  v120[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v120, 0);
  swift_release();
  type metadata accessor for PerlinNoiseFloat4Node(0);
  uint64_t v121 = (uint64_t *)swift_allocObject();
  v121[2] = v58;
  v121[3] = 0;
  v121[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v121, 0);
  swift_release();
  type metadata accessor for SetParticleValueNode(0);
  uint64_t v122 = (uint64_t *)swift_allocObject();
  uint64_t v123 = (char *)v122 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath;
  *(void *)uint64_t v123 = v139;
  *((void *)v123 + 1) = v141;
  *((void *)v123 + 2) = v140;
  *((void *)v123 + 3) = v138;
  *((void *)v123 + 4) = v137;
  v123[40] = v136;
  *((_WORD *)v123 + 21) = v135;
  v122[4] = 0;
  _OWORD v122[2] = MEMORY[0x1E4FBC860];
  v122[3] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v122, 2);
  swift_release();
  type metadata accessor for GetParticleValueNode(0);
  uint64_t v124 = (uint64_t *)swift_allocObject();
  uint64_t v125 = (char *)v124 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath;
  *(void *)uint64_t v125 = v139;
  *((void *)v125 + 1) = v141;
  *((void *)v125 + 2) = v140;
  *((void *)v125 + 3) = v138;
  *((void *)v125 + 4) = v137;
  v125[40] = v136;
  *((_WORD *)v125 + 21) = v135;
  v124[4] = 0;
  uint64_t v126 = MEMORY[0x1E4FBC860];
  _OWORD v124[2] = MEMORY[0x1E4FBC860];
  v124[3] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6E31108();
  sub_1B6CE3D18(v124, 2);
  swift_release();
  type metadata accessor for SamplerNode(0);
  uint64_t v127 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v127 + OBJC_IVAR____TtC3VFX11SamplerNode_textureType) = 0;
  v127[2] = v126;
  v127[3] = 0;
  v127[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v127, 0);
  swift_release();
  uint64_t v128 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v128 + OBJC_IVAR____TtC3VFX11SamplerNode_textureType) = 1;
  _OWORD v128[2] = v126;
  v128[3] = 0;
  v128[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v128, 0);
  swift_release();
  float32x4_t v129 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v129 + OBJC_IVAR____TtC3VFX11SamplerNode_textureType) = 2;
  v129[2] = v126;
  v129[3] = 0;
  v129[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v129, 0);
  swift_release();
  type metadata accessor for SampleNode(0);
  uint64_t v130 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v130 + OBJC_IVAR____TtC3VFX10SampleNode_textureType) = 0;
  _OWORD v130[2] = v126;
  v130[3] = 0;
  v130[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v130, 0);
  swift_release();
  long long v131 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v131 + OBJC_IVAR____TtC3VFX10SampleNode_textureType) = 1;
  v131[2] = v126;
  v131[3] = 0;
  v131[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v131, 0);
  swift_release();
  long long v132 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v132 + OBJC_IVAR____TtC3VFX10SampleNode_textureType) = 2;
  _OWORD v132[2] = v126;
  v132[3] = 0;
  v132[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v132, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6CE5814(char a1)
{
  uint64_t v2 = v1;
  *((void *)&v54 + 1) = &type metadata for BlendMode;
  unint64_t v4 = sub_1B6CEBA40();
  *(void *)&long long v55 = v4;
  LODWORD(v53) = 0;
  BYTE4(v53) = 1;
  uint64_t v52 = type metadata accessor for EnumConstantNode(0);
  uint64_t v5 = (uint64_t *)swift_allocObject();
  sub_1B62C1550((uint64_t)&v53, (uint64_t)v5 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = v6;
  sub_1B6E31108();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v53);
  sub_1B6CE3D18(v5, 2);
  swift_release();
  *((void *)&v54 + 1) = &type metadata for BlendMode;
  *(void *)&long long v55 = v4;
  LODWORD(v53) = 0;
  BYTE4(v53) = 1;
  type metadata accessor for ImplicitEnumConstantNode(0);
  uint64_t v7 = (uint64_t *)swift_allocObject();
  sub_1B62C1550((uint64_t)&v53, (uint64_t)&v57);
  sub_1B62C1550((uint64_t)&v57, (uint64_t)v7 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = v6;
  sub_1B6E31108();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v57);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v53);
  sub_1B6CE3D18(v7, 2);
  uint64_t result = swift_release();
  if ((a1 & 1) == 0) {
    return result;
  }
  if (!off_1EB97E350) {
    goto LABEL_48;
  }
  swift_retain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B6CE3870(v9);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v15 = *(void *)(v10 + 8 * v12 + 32);
      uint64_t v16 = swift_conformsToProtocol2();
      if (v16) {
        uint64_t v17 = v15;
      }
      else {
        uint64_t v17 = 0;
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = 0;
      }
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1B68C644C(0, *((void *)v13 + 2) + 1, 1, v13);
        }
        unint64_t v20 = *((void *)v13 + 2);
        unint64_t v19 = *((void *)v13 + 3);
        if (v20 >= v19 >> 1) {
          uint64_t v13 = sub_1B68C644C(v19 > 1, v20 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v20 + 1;
        unint64_t v14 = &v13[16 * v20];
        *((void *)v14 + 4) = v17;
        *((void *)v14 + 5) = v18;
      }
      ++v12;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v13 + 2);
  if (!v21) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v22 = &v54;
  uint64_t v23 = v13 + 40;
  v50[1] = MEMORY[0x1E4FBC840] + 8;
  char v51 = &v54;
  while (1)
  {
    uint64_t v24 = (*(uint64_t (**)(void))(*(void *)(*(void *)v23 + 24) + 8))();
    if (*(void *)(v24 + 16))
    {
      sub_1B6CEBA94(v24 + 32, (uint64_t)&v53);
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
      long long v53 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v53 + 1))
    {
      sub_1B6CEBBB8((uint64_t)&v53, &qword_1E9DD8620, (void (*)(uint64_t))sub_1B6CEBAF8);
      long long v57 = 0u;
      long long v58 = 0u;
      uint64_t v59 = 0;
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    sub_1B62B57A8(v22, &v56);
    sub_1B687E9D4();
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v59 = 0;
      long long v57 = 0u;
      long long v58 = 0u;
      goto LABEL_23;
    }
    if (*((void *)&v58 + 1)) {
      break;
    }
LABEL_23:
    sub_1B6CEBBB8((uint64_t)&v57, &qword_1E9DD1890, (void (*)(uint64_t))sub_1B687E9D4);
LABEL_24:
    v23 += 16;
    if (!--v21) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_1B62C15C4(&v57, (uint64_t)&v53);
  sub_1B62C1550((uint64_t)&v53, (uint64_t)&v57);
  uint64_t v25 = *((void *)&v58 + 1);
  uint64_t v26 = v59;
  uint64_t v27 = sub_1B62C550C((uint64_t)&v57, *((uint64_t *)&v58 + 1));
  double v28 = MEMORY[0x1F4188790](v27, v27);
  uint64_t v30 = (char *)v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v31 + 16))(v30, v28);
  uint64_t v32 = sub_1B6C10958((uint64_t)v30, v52, v25, v26);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v57);
  uint64_t v33 = *v32;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v57 = *(void *)(v2 + 16);
  uint64_t v35 = v57;
  *(void *)(v2 + 16) = 0x8000000000000000;
  unint64_t v36 = sub_1B62C1A30(v33);
  char v38 = v37;
  uint64_t v39 = *(void *)(v35 + 16) + ((v37 & 1) == 0);
  if (*(void *)(v35 + 24) >= v39)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1B6ACCBD0();
    }
    goto LABEL_37;
  }
  sub_1B6AB7D08(v39, isUniquelyReferenced_nonNull_native);
  unint64_t v40 = sub_1B62C1A30(v33);
  if ((v38 & 1) == (v41 & 1))
  {
    unint64_t v36 = v40;
LABEL_37:
    uint64_t v42 = (void *)v57;
    uint64_t v43 = 8 * v36;
    if (v38)
    {
      uint64_t v44 = *(void *)(v57 + 56);
      swift_release();
      *(void *)(v44 + v43) = v32;
    }
    else
    {
      *(void *)(v57 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      *(void *)(v42[6] + 8 * v36) = v33;
      *(void *)(v42[7] + 8 * v36) = v32;
      ++v42[2];
    }
    *(void *)(v2 + 16) = v42;
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void **)(v2 + 24);
    swift_retain();
    char v46 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 24) = v45;
    if ((v46 & 1) == 0)
    {
      uint64_t v45 = sub_1B68C6334(0, v45[2] + 1, 1, v45);
      *(void *)(v2 + 24) = v45;
    }
    unint64_t v48 = v45[2];
    unint64_t v47 = v45[3];
    if (v48 >= v47 >> 1) {
      uint64_t v45 = sub_1B68C6334(v47 > 1, v48 + 1, 1, v45);
    }
    _OWORD v45[2] = v48 + 1;
    uint64_t v49 = &v45[2 * v48];
    v49[4] = v32;
    v49[5] = 4;
    *(void *)(v2 + 24) = v45;
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v53);
    uint64_t v22 = v51;
    goto LABEL_24;
  }
  sub_1B6E33838();
  __break(1u);
LABEL_48:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6CE5ED8()
{
  uint64_t v0 = MEMORY[0x1E4FBB470];
  uint64_t v112 = MEMORY[0x1E4FBB470];
  v111[0] = 0;
  sub_1B62CAAD8((uint64_t)v111, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000050;
  type metadata accessor for ImplicitConstantNode(0);
  uint64_t v1 = (uint64_t *)swift_allocObject();
  sub_1B66506CC((uint64_t)&v109, (uint64_t)&v105);
  uint64_t v2 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v105, (uint64_t)v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v1 + v2) = xmmword_1B6E50D30;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v1[2] = MEMORY[0x1E4FBC860];
  v1[3] = 0;
  v1[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v105);
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v111);
  sub_1B6CE3D18(v1, 2);
  swift_release();
  uint64_t v108 = (ValueMetadata *)v0;
  LODWORD(v105) = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000050;
  type metadata accessor for ConstantNode(0);
  unint64_t v4 = (uint64_t *)swift_allocObject();
  uint64_t v5 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v4 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v4 + v5) = xmmword_1B6E50D30;
  v4[2] = v3;
  _OWORD v4[3] = 0;
  v4[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v4, 0);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E8F480;
  uint64_t v7 = v6 | 0x1000000000000000;
  sub_1B6395FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, v0, MEMORY[0x1E4FBC280]);
  uint64_t v108 = v8;
  uint64_t v105 = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v7;
  uint64_t v9 = (uint64_t *)swift_allocObject();
  uint64_t v10 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v9 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v9 + v10) = xmmword_1B6E50D30;
  v9[2] = v3;
  v9[3] = 0;
  v9[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v9, 0);
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E8DAE0;
  uint64_t v12 = v11 | 0x1000000000000000;
  uint64_t v102 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  sub_1B6395FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, v0, MEMORY[0x1E4FBC2A8]);
  uint64_t v108 = v13;
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = 0u;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v12;
  unint64_t v14 = (uint64_t *)swift_allocObject();
  uint64_t v15 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v14 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v14 + v15) = xmmword_1B6E50D30;
  _OWORD v14[2] = v3;
  v14[3] = 0;
  v14[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v14, 0);
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E8DAD0;
  uint64_t v17 = v16 | 0x1000000000000000;
  sub_1B6395FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, v0, MEMORY[0x1E4FBC2F8]);
  uint64_t v104 = (uint64_t)v18;
  uint64_t v108 = v18;
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = 0u;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v17;
  unint64_t v19 = (uint64_t *)swift_allocObject();
  uint64_t v20 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v19 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v19 + v20) = xmmword_1B6E50D30;
  _OWORD v19[2] = v3;
  v19[3] = 0;
  v19[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v19, 0);
  swift_release();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 2;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1B6E8F480;
  *(void *)(v21 + 24) = v22 | 0x1000000000000000;
  type metadata accessor for simd_float2x2(0);
  uint64_t v108 = v23;
  uint64_t v105 = 1065353216;
  unint64_t v106 = 0x3F80000000000000;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v21 | 0x1000000000000000;
  uint64_t v24 = (uint64_t *)swift_allocObject();
  uint64_t v25 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v24 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v24 + v25) = xmmword_1B6E50D30;
  _OWORD v24[2] = v3;
  v24[3] = 0;
  v24[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v24, 0);
  swift_release();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 3;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1B6E8DAE0;
  *(void *)(v26 + 24) = v27 | 0x1000000000000000;
  type metadata accessor for simd_float3x3(0);
  uint64_t v108 = v28;
  uint64_t v29 = (_OWORD *)swift_allocObject();
  uint64_t v105 = (uint64_t)v29;
  v29[1] = xmmword_1B6E4F300;
  _OWORD v29[2] = xmmword_1B6E4F320;
  void v29[3] = xmmword_1B6E4F2E0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v26 | 0x1000000000000000;
  uint64_t v30 = (uint64_t *)swift_allocObject();
  uint64_t v31 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v30 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v30 + v31) = xmmword_1B6E50D30;
  _OWORD v30[2] = v3;
  v30[3] = 0;
  void v30[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v30, 0);
  swift_release();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = 4;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v32 + 24) = v33 | 0x1000000000000000;
  type metadata accessor for simd_float4x4(0);
  uint64_t v108 = v34;
  uint64_t v35 = (_OWORD *)swift_allocObject();
  uint64_t v105 = (uint64_t)v35;
  v35[1] = xmmword_1B6E4F300;
  _OWORD v35[2] = xmmword_1B6E4F320;
  v35[3] = xmmword_1B6E4F2E0;
  _OWORD v35[4] = xmmword_1B6E4F370;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v32 | 0x1000000000000000;
  unint64_t v36 = (uint64_t *)swift_allocObject();
  uint64_t v37 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v36 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v36 + v37) = xmmword_1B6E50D30;
  _OWORD v36[2] = v3;
  v36[3] = 0;
  v36[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v36, 0);
  swift_release();
  uint64_t v108 = (ValueMetadata *)MEMORY[0x1E4FBC150];
  LODWORD(v105) = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000030;
  char v38 = (uint64_t *)swift_allocObject();
  uint64_t v39 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v38 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v38 + v39) = xmmword_1B6E50D30;
  _OWORD v38[2] = v3;
  uint64_t v38[3] = 0;
  v38[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v38, 0);
  swift_release();
  uint64_t v108 = (ValueMetadata *)MEMORY[0x1E4FBC4C0];
  LODWORD(v105) = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000038;
  unint64_t v40 = (uint64_t *)swift_allocObject();
  uint64_t v41 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v40 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v40 + v41) = xmmword_1B6E50D30;
  v40[4] = 0;
  uint64_t v42 = MEMORY[0x1E4FBC860];
  _OWORD v40[2] = MEMORY[0x1E4FBC860];
  v40[3] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v40, 0);
  swift_release();
  uint64_t v108 = (ValueMetadata *)MEMORY[0x1E4FBC1C8];
  uint64_t v105 = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000040;
  uint64_t v43 = (uint64_t *)swift_allocObject();
  uint64_t v44 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v43 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v43 + v44) = xmmword_1B6E50D30;
  v43[3] = 0;
  v43[4] = 0;
  _OWORD v43[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v43, 0);
  swift_release();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1B6E9A690;
  uint64_t v46 = v45 | 0x1000000000000000;
  sub_1B6395FA4(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], v102);
  uint64_t v108 = v47;
  uint64_t v48 = swift_allocObject();
  uint64_t v105 = v48;
  *(void *)(v48 + 16) = 0;
  *(void *)(v48 + 24) = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v46;
  uint64_t v49 = (uint64_t *)swift_allocObject();
  uint64_t v50 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v49 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v49 + v50) = xmmword_1B6E50D30;
  v49[3] = 0;
  v49[4] = 0;
  _OWORD v49[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v49, 0);
  swift_release();
  uint64_t v108 = (ValueMetadata *)MEMORY[0x1E4FBB390];
  LOBYTE(v105) = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000010;
  char v51 = (uint64_t *)swift_allocObject();
  uint64_t v52 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v51 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v51 + v52) = xmmword_1B6E50D30;
  v51[3] = 0;
  v51[4] = 0;
  _OWORD v51[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v51, 0);
  swift_release();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = 0x8000000000000050;
  uint64_t v54 = v53 | 0x2000000000000000;
  long long v55 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FBB6A0];
  sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v108 = v56;
  uint64_t v105 = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v54;
  long long v57 = (uint64_t *)swift_allocObject();
  uint64_t v58 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v57 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v57 + v58) = xmmword_1B6E50D30;
  v57[3] = 0;
  v57[4] = 0;
  _OWORD v57[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v57, 0);
  swift_release();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = 0x8000000000000040;
  uint64_t v60 = v59 | 0x2000000000000000;
  sub_1B67C5BBC(0, (unint64_t *)&unk_1EB980430, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBC1E0], v55);
  uint64_t v108 = v61;
  uint64_t v105 = 0;
  unint64_t v106 = 0;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = v60;
  uint64_t v62 = (uint64_t *)swift_allocObject();
  uint64_t v63 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v62 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v62 + v63) = xmmword_1B6E50D30;
  v62[3] = 0;
  v62[4] = 0;
  _OWORD v62[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v62, 0);
  swift_release();
  type metadata accessor for simd_quatf(0);
  uint64_t v108 = v64;
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = xmmword_1B6E4F370;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000028;
  uint64_t v65 = (uint64_t *)swift_allocObject();
  uint64_t v66 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v65 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v65 + v66) = xmmword_1B6E50D30;
  v65[3] = 0;
  v65[4] = 0;
  v65[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v65, 0);
  swift_release();
  uint64_t v108 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
  uint64_t v105 = 0;
  unint64_t v106 = 0xE000000000000000;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000068;
  uint64_t v67 = (uint64_t *)swift_allocObject();
  uint64_t v68 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v67 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v67 + v68) = xmmword_1B6E50D30;
  v67[3] = 0;
  v67[4] = 0;
  v67[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v67, 0);
  swift_release();
  sub_1B629CD98();
  uint64_t v69 = (_OWORD *)swift_allocObject();
  __asm { FMOV            V1.4S, #1.0 }
  long long v103 = _Q1;
  v69[1] = xmmword_1B6E76B30;
  v69[2] = _Q1;
  v69[3] = xmmword_1B6E4F370;
  uint64_t v108 = &type metadata for ColorRamp;
  uint64_t v105 = (uint64_t)v69;
  unint64_t v106 = (unint64_t)&unk_1F0FA83D8;
  char v107 = 1;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000070;
  float32x4_t v75 = (uint64_t *)swift_allocObject();
  uint64_t v76 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v75 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v75 + v76) = xmmword_1B6E50D30;
  v75[3] = 0;
  v75[4] = 0;
  v75[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v75, 0);
  swift_release();
  type metadata accessor for ColorRampTextureNode(0);
  uint64_t v77 = (uint64_t *)swift_allocObject();
  float32x2_t v78 = (char *)v77 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp;
  float32x4_t v79 = (_OWORD *)swift_allocObject();
  v79[1] = xmmword_1B6E76B30;
  _OWORD v79[2] = v103;
  *(void *)float32x2_t v78 = v79;
  *((void *)v78 + 1) = &unk_1F0FA83D8;
  v78[16] = 1;
  *(uint64_t *)((char *)v77 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = 0xFFFFFFFFLL;
  v79[3] = xmmword_1B6E4F370;
  void v77[3] = 0;
  v77[4] = 0;
  v77[2] = v42;
  sub_1B6E31108();
  sub_1B6CE3D18(v77, 0);
  swift_release();
  uint64_t v80 = sub_1B6D3EC54(v42);
  uint64_t v82 = v81;
  sub_1B67C5BBC(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
  uint64_t v108 = v83;
  uint64_t v84 = swift_allocObject();
  uint64_t v105 = v84;
  *(void *)(v84 + 16) = v80;
  *(void *)(v84 + 24) = v82;
  *(void *)(v84 + 32) = 0;
  *(unsigned char *)(v84 + 40) = 1;
  sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
  uint64_t v109 = 0x8000000000000080;
  uint64_t v85 = (uint64_t *)swift_allocObject();
  uint64_t v86 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)&v109, (uint64_t)v85 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v85 + v86) = xmmword_1B6E50D30;
  v85[3] = 0;
  v85[4] = 0;
  v85[2] = v42;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)&v109);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
  sub_1B6CE3D18(v85, 0);
  swift_release();
  type metadata accessor for CurveTextureNode(0);
  swift_allocObject();
  uint64_t v87 = sub_1B69C8FC0();
  sub_1B6CE3D18(v87, 0);
  swift_release();
  uint64_t v108 = (ValueMetadata *)v104;
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = 0u;
  sub_1B62C14BC(&v105, v104);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v89 = sub_1B69B1CC4(DynamicType);
  if ((~v89 & 0xF000000000000007) != 0)
  {
    unint64_t v90 = v89;
    sub_1B62CAAD8((uint64_t)&v105, (uint64_t)v110);
    uint64_t v109 = v90;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v105);
    uint64_t v91 = (uint64_t *)swift_allocObject();
    uint64_t v92 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
    sub_1B66506CC((uint64_t)&v109, (uint64_t)v91 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
    *(_OWORD *)((char *)v91 + v92) = xmmword_1B6EC1250;
    v91[2] = v42;
    v91[3] = 0;
    v91[4] = 0;
    sub_1B6E31108();
    sub_1B6650728((uint64_t)&v109);
    sub_1B6CE3D18(v91, 0);
    swift_release();
    type metadata accessor for PiNode(0);
    swift_allocObject();
    uint64_t v93 = sub_1B6B3489C();
    sub_1B6CE3D18(v93, 0);
    swift_release();
    type metadata accessor for TwoPiNode(0);
    swift_allocObject();
    long long v94 = sub_1B6B3489C();
    sub_1B6CE3D18(v94, 0);
    swift_release();
    type metadata accessor for HalfPiNode(0);
    swift_allocObject();
    uint64_t v95 = sub_1B6B3489C();
    sub_1B6CE3D18(v95, 0);
    swift_release();
    type metadata accessor for EpsilonNode(0);
    swift_allocObject();
    uint64_t v96 = sub_1B6B3489C();
    sub_1B6CE3D18(v96, 0);
    swift_release();
    type metadata accessor for Identity2x2Node(0);
    swift_allocObject();
    uint64_t v97 = sub_1B6B3489C();
    sub_1B6CE3D18(v97, 0);
    swift_release();
    type metadata accessor for Identity3x3Node(0);
    swift_allocObject();
    uint64_t v98 = sub_1B6B3489C();
    sub_1B6CE3D18(v98, 0);
    swift_release();
    type metadata accessor for Identity4x4Node(0);
    swift_allocObject();
    uint64_t v99 = sub_1B6B3489C();
    sub_1B6CE3D18(v99, 0);
    swift_release();
    type metadata accessor for IdentityQuaternionNode(0);
    swift_allocObject();
    float v100 = sub_1B6B3489C();
    sub_1B6CE3D18(v100, 0);
    return swift_release();
  }
  else
  {
    uint64_t v109 = 0;
    v110[0] = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v109 = 0xD000000000000011;
    v110[0] = 0x80000001B6F34770;
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6CE72E4()
{
  uint64_t v1 = v0;
  type metadata accessor for DotNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  _OWORD v2[3] = 0;
  v2[4] = 0;
  v2[2] = v3;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 2);
  swift_release();
  type metadata accessor for SubGraphNode(0);
  unint64_t v4 = (uint64_t *)swift_allocObject();
  uint64_t v5 = (uint64_t *)((char *)v4 + OBJC_IVAR____TtC3VFX12SubGraphNode_name);
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = 0;
  *uint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  uint64_t v6 = (uint64_t *)((char *)v4 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature);
  *uint64_t v6 = v3;
  v6[1] = v3;
  _DWORD v6[2] = (uint64_t)&unk_1F0F6C4A8;
  v6[3] = v3;
  v6[4] = v3;
  v6[5] = v3;
  v4[2] = v3;
  _OWORD v4[3] = 0;
  v4[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v4, 2);
  swift_release();
  v87[0] = v3;
  v87[1] = v3;
  _OWORD v87[2] = (uint64_t)&unk_1F0F6C448;
  v87[3] = v3;
  v87[4] = v3;
  v87[5] = v3;
  type metadata accessor for SubGraphEnterNode(0);
  swift_allocObject();
  uint64_t v7 = sub_1B678E598(v87);
  sub_1B6CE3D18(v7, 2);
  swift_release();
  v86[0] = v3;
  v86[1] = v3;
  v86[2] = (uint64_t)&unk_1F0F6C478;
  v86[3] = v3;
  v86[4] = v3;
  v86[5] = v3;
  type metadata accessor for SubGraphReturnNode(0);
  swift_allocObject();
  uint64_t v8 = sub_1B678ECA4(v86);
  sub_1B6CE3D18(v8, 2);
  swift_release();
  long long v80 = xmmword_1B6E76900;
  uint64_t v9 = 32;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B6E8F480;
  uint64_t v81 = v10 | 0x1000000000000000;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E8DAE0;
  uint64_t v82 = v11 | 0x1000000000000000;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B6E8DAD0;
  uint64_t v83 = v12 | 0x1000000000000000;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x8000000000000050;
  uint64_t v84 = v13 | 0x2000000000000000;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0x8000000000000040;
  uint64_t v85 = v14 | 0x2000000000000000;
  type metadata accessor for ComposeNode(0);
  while (1)
  {
    unint64_t v15 = *(void *)&v79[v9];
    uint64_t v16 = (uint64_t *)swift_allocObject();
    *(uint64_t *)((char *)v16 + OBJC_IVAR____TtC3VFX12_ComposeNode_type) = v15;
    v16[4] = 0;
    _OWORD v16[2] = MEMORY[0x1E4FBC860];
    v16[3] = 0;
    sub_1B67C52A4(v15);
    sub_1B67C52A4(v15);
    sub_1B6E31108();
    uint64_t v17 = *v16;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = 0x8000000000000000;
    unint64_t v21 = sub_1B62C1A30(v17);
    char v22 = v20;
    uint64_t v23 = v19[2] + ((v20 & 1) == 0);
    if (v19[3] < v23) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v20 & 1) == 0) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1B6ACCBD0();
      if ((v22 & 1) == 0)
      {
LABEL_10:
        v19[(v21 >> 6) + 8] |= 1 << v21;
        uint64_t v27 = 8 * v21;
        *(void *)(v19[6] + v27) = v17;
        *(void *)(v19[7] + v27) = v16;
        ++v19[2];
        goto LABEL_11;
      }
    }
LABEL_8:
    uint64_t v26 = v19[7];
    swift_release();
    *(void *)(v26 + 8 * v21) = v16;
LABEL_11:
    *(void *)(v1 + 16) = v19;
    swift_bridgeObjectRelease();
    double v28 = *(void **)(v1 + 24);
    swift_retain();
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 24) = v28;
    if ((v29 & 1) == 0)
    {
      double v28 = sub_1B68C6334(0, v28[2] + 1, 1, v28);
      *(void *)(v1 + 24) = v28;
    }
    unint64_t v31 = v28[2];
    unint64_t v30 = v28[3];
    if (v31 >= v30 >> 1) {
      double v28 = sub_1B68C6334(v30 > 1, v31 + 1, 1, v28);
    }
    _OWORD v28[2] = v31 + 1;
    uint64_t v32 = &v28[2 * v31];
    uint64_t v32[4] = v16;
    v32[5] = 0;
    *(void *)(v1 + 24) = v28;
    swift_release();
    sub_1B678FC34(v15);
    v9 += 8;
    if (v9 == 72)
    {
      type metadata accessor for DecomposeNode(0);
      uint64_t v33 = 32;
      while (1)
      {
        unint64_t v34 = *(void *)&v79[v33];
        uint64_t v35 = (uint64_t *)swift_allocObject();
        *(uint64_t *)((char *)v35 + OBJC_IVAR____TtC3VFX12_ComposeNode_type) = v34;
        _OWORD v35[4] = 0;
        _OWORD v35[2] = MEMORY[0x1E4FBC860];
        v35[3] = 0;
        sub_1B67C52A4(v34);
        sub_1B67C52A4(v34);
        sub_1B6E31108();
        uint64_t v36 = *v35;
        swift_retain();
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        char v38 = *(void **)(v1 + 16);
        *(void *)(v1 + 16) = 0x8000000000000000;
        unint64_t v40 = sub_1B62C1A30(v36);
        char v41 = v39;
        uint64_t v42 = v38[2] + ((v39 & 1) == 0);
        if (v38[3] >= v42)
        {
          if (v37)
          {
            if ((v39 & 1) == 0) {
              goto LABEL_25;
            }
          }
          else
          {
            sub_1B6ACCBD0();
            if ((v41 & 1) == 0) {
              goto LABEL_25;
            }
          }
        }
        else
        {
          sub_1B6AB7D08(v42, v37);
          unint64_t v43 = sub_1B62C1A30(v36);
          if ((v41 & 1) != (v44 & 1)) {
            goto LABEL_32;
          }
          unint64_t v40 = v43;
          if ((v41 & 1) == 0)
          {
LABEL_25:
            v38[(v40 >> 6) + 8] |= 1 << v40;
            uint64_t v46 = 8 * v40;
            *(void *)(v38[6] + v46) = v36;
            *(void *)(v38[7] + v46) = v35;
            ++v38[2];
            goto LABEL_26;
          }
        }
        uint64_t v45 = v38[7];
        swift_release();
        *(void *)(v45 + 8 * v40) = v35;
LABEL_26:
        *(void *)(v1 + 16) = v38;
        swift_bridgeObjectRelease();
        unint64_t v47 = *(void **)(v1 + 24);
        swift_retain();
        char v48 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v1 + 24) = v47;
        if ((v48 & 1) == 0)
        {
          unint64_t v47 = sub_1B68C6334(0, v47[2] + 1, 1, v47);
          *(void *)(v1 + 24) = v47;
        }
        unint64_t v50 = v47[2];
        unint64_t v49 = v47[3];
        if (v50 >= v49 >> 1) {
          unint64_t v47 = sub_1B68C6334(v49 > 1, v50 + 1, 1, v47);
        }
        _OWORD v47[2] = v50 + 1;
        char v51 = &v47[2 * v50];
        v51[4] = v35;
        v51[5] = 0;
        *(void *)(v1 + 24) = v47;
        swift_release();
        sub_1B678FC34(v34);
        v33 += 8;
        if (v33 == 72)
        {
          swift_arrayDestroy();
          uint64_t v52 = swift_allocObject();
          *(_OWORD *)(v52 + 16) = xmmword_1B6E8DAE0;
          uint64_t v53 = v52 | 0x1000000000000000;
          type metadata accessor for ImplicitComposeNode(0);
          uint64_t v54 = (uint64_t *)swift_allocObject();
          *(uint64_t *)((char *)v54 + OBJC_IVAR____TtC3VFX12_ComposeNode_type) = v53;
          v54[4] = 0;
          uint64_t v55 = MEMORY[0x1E4FBC860];
          _OWORD v54[2] = MEMORY[0x1E4FBC860];
          id v54[3] = 0;
          sub_1B6E31108();
          sub_1B6CE3D18(v54, 2);
          swift_release();
          uint64_t v56 = swift_allocObject();
          *(_OWORD *)(v56 + 16) = xmmword_1B6E8DAE0;
          uint64_t v57 = v56 | 0x1000000000000000;
          type metadata accessor for ImplicitDecomposeNode(0);
          uint64_t v58 = (uint64_t *)swift_allocObject();
          *(uint64_t *)((char *)v58 + OBJC_IVAR____TtC3VFX12_ComposeNode_type) = v57;
          v58[3] = 0;
          v58[4] = 0;
          _OWORD v58[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v58, 2);
          swift_release();
          uint64_t v59 = swift_allocObject();
          *(_OWORD *)(v59 + 16) = xmmword_1B6E8DAE0;
          uint64_t v60 = v59 | 0x1000000000000000;
          type metadata accessor for ImplicitPartialComposeNode(0);
          uint64_t v61 = (uint64_t *)swift_allocObject();
          *(uint64_t *)((char *)v61 + OBJC_IVAR____TtC3VFX12_ComposeNode_type) = v60;
          v61[3] = 0;
          v61[4] = 0;
          v61[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v61, 2);
          swift_release();
          type metadata accessor for GetArrayElementNode(0);
          uint64_t v62 = (uint64_t *)swift_allocObject();
          v62[3] = 0;
          v62[4] = 0;
          _OWORD v62[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v62, 0);
          swift_release();
          type metadata accessor for GetArraySizeNode(0);
          uint64_t v63 = (uint64_t *)swift_allocObject();
          v63[3] = 0;
          v63[4] = 0;
          void v63[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v63, 0);
          swift_release();
          type metadata accessor for ArrayNode(0);
          uint64_t v64 = (uint64_t *)swift_allocObject();
          *(uint64_t *)((char *)v64 + OBJC_IVAR____TtC3VFX9ArrayNode_count) = 1;
          v64[3] = 0;
          v64[4] = 0;
          _OWORD v64[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v64, 0);
          swift_release();
          type metadata accessor for DoNode(0);
          uint64_t v65 = (uint64_t *)swift_allocObject();
          v65[3] = 0;
          v65[4] = 0;
          v65[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v65, 2);
          swift_release();
          type metadata accessor for ImplicitDoNode(0);
          uint64_t v66 = (uint64_t *)swift_allocObject();
          v66[3] = 0;
          v66[4] = 0;
          _OWORD v66[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v66, 2);
          swift_release();
          type metadata accessor for IfNode(0);
          uint64_t v67 = (uint64_t *)swift_allocObject();
          v67[3] = 0;
          v67[4] = 0;
          v67[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v67, 0);
          swift_release();
          type metadata accessor for NoopNode(0);
          uint64_t v68 = (uint64_t *)swift_allocObject();
          v68[3] = 0;
          v68[4] = 0;
          _OWORD v68[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v68, 2);
          swift_release();
          type metadata accessor for ImplicitNoopNode(0);
          uint64_t v69 = (uint64_t *)swift_allocObject();
          v69[3] = 0;
          v69[4] = 0;
          v69[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v69, 2);
          swift_release();
          type metadata accessor for NilNode(0);
          uint64_t v70 = (uint64_t *)swift_allocObject();
          v70[3] = 0;
          v70[4] = 0;
          v70[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v70, 2);
          swift_release();
          type metadata accessor for ImplicitNilNode(0);
          float32x4_t v71 = (uint64_t *)swift_allocObject();
          v71[3] = 0;
          v71[4] = 0;
          v71[2] = v55;
          sub_1B6E31108();
          sub_1B6CE3D18(v71, 2);
          swift_release();
          type metadata accessor for DecodingErrorNode(0);
          id v72 = (uint64_t *)swift_allocObject();
          float32x4_t v73 = (uint64_t *)((char *)v72 + OBJC_IVAR____TtC3VFX17DecodingErrorNode_name);
          void *v73 = 0;
          v73[1] = 0xE000000000000000;
          v72[2] = v55;
          v72[3] = 0;
          v72[4] = 0;
          sub_1B6E31108();
          sub_1B6CE3D18(v72, 2);
          swift_release();
          type metadata accessor for ImportErrorNode(0);
          float32x4_t v74 = (uint64_t *)swift_allocObject();
          uint64_t v75 = OBJC_IVAR____TtC3VFX15ImportErrorNode_message;
          *(uint64_t *)((char *)v74 + OBJC_IVAR____TtC3VFX15ImportErrorNode_inputCount) = 0;
          uint64_t v76 = (uint64_t *)((char *)v74 + v75);
          uint64_t v77 = (uint64_t *)((char *)v74 + OBJC_IVAR____TtC3VFX15ImportErrorNode_name);
          *uint64_t v77 = 0;
          v77[1] = 0xE000000000000000;
          *uint64_t v76 = 0;
          v76[1] = 0;
          v74[2] = v55;
          v74[3] = 0;
          v74[4] = 0;
          sub_1B6E31108();
          sub_1B6CE3D18(v74, 2);
          return swift_release();
        }
      }
    }
  }
  sub_1B6AB7D08(v23, isUniquelyReferenced_nonNull_native);
  unint64_t v24 = sub_1B62C1A30(v17);
  if ((v22 & 1) == (v25 & 1))
  {
    unint64_t v21 = v24;
    if ((v22 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
LABEL_32:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6CE7ED4()
{
  type metadata accessor for AddNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 0);
  swift_release();
  type metadata accessor for SubNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  _OWORD v2[3] = 0;
  v2[4] = 0;
  v2[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 0);
  swift_release();
  type metadata accessor for MulNode(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  _OWORD v3[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v3, 0);
  swift_release();
  type metadata accessor for DivNode(0);
  unint64_t v4 = (uint64_t *)swift_allocObject();
  _OWORD v4[3] = 0;
  v4[4] = 0;
  v4[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v4, 0);
  swift_release();
  type metadata accessor for RemainderNode(0);
  uint64_t v5 = (uint64_t *)swift_allocObject();
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v5, 0);
  swift_release();
  type metadata accessor for QuotientNode(0);
  uint64_t v6 = (uint64_t *)swift_allocObject();
  v6[3] = 0;
  v6[4] = 0;
  _DWORD v6[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v6, 0);
  swift_release();
  type metadata accessor for FModNode(0);
  uint64_t v7 = (uint64_t *)swift_allocObject();
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v7, 0);
  swift_release();
  type metadata accessor for MinNode(0);
  uint64_t v8 = (uint64_t *)swift_allocObject();
  v8[3] = 0;
  v8[4] = 0;
  _OWORD v8[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v8, 0);
  swift_release();
  type metadata accessor for MaxNode(0);
  uint64_t v9 = (uint64_t *)swift_allocObject();
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v9, 0);
  swift_release();
  type metadata accessor for PowNode(0);
  uint64_t v10 = (uint64_t *)swift_allocObject();
  id v10[3] = 0;
  v10[4] = 0;
  v10[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v10, 0);
  swift_release();
  type metadata accessor for ATan2Node(0);
  uint64_t v11 = (uint64_t *)swift_allocObject();
  v11[3] = 0;
  v11[4] = 0;
  _OWORD v11[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v11, 0);
  swift_release();
  type metadata accessor for StepNode(0);
  uint64_t v12 = (uint64_t *)swift_allocObject();
  v12[3] = 0;
  v12[4] = 0;
  v12[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v12, 0);
  swift_release();
  type metadata accessor for DistanceNode(0);
  uint64_t v13 = (uint64_t *)swift_allocObject();
  v13[3] = 0;
  v13[4] = 0;
  _OWORD v13[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v13, 0);
  swift_release();
  type metadata accessor for DistanceSquaredNode(0);
  uint64_t v14 = (uint64_t *)swift_allocObject();
  v14[3] = 0;
  v14[4] = 0;
  _OWORD v14[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v14, 0);
  swift_release();
  type metadata accessor for LengthSquaredNode(0);
  unint64_t v15 = (uint64_t *)swift_allocObject();
  v15[3] = 0;
  v15[4] = 0;
  _OWORD v15[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v15, 0);
  swift_release();
  type metadata accessor for IsAlmostEqualNode(0);
  uint64_t v16 = (uint64_t *)swift_allocObject();
  v16[3] = 0;
  v16[4] = 0;
  _OWORD v16[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v16, 0);
  swift_release();
  type metadata accessor for CrossProductNode(0);
  uint64_t v17 = (uint64_t *)swift_allocObject();
  v17[3] = 0;
  v17[4] = 0;
  _OWORD v17[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v17, 0);
  swift_release();
  type metadata accessor for DotProductNode(0);
  uint64_t v18 = (uint64_t *)swift_allocObject();
  v18[3] = 0;
  v18[4] = 0;
  _OWORD v18[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v18, 0);
  swift_release();
  type metadata accessor for Min3Node(0);
  unint64_t v19 = (uint64_t *)swift_allocObject();
  v19[3] = 0;
  v19[4] = 0;
  _OWORD v19[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v19, 0);
  swift_release();
  type metadata accessor for Max3Node(0);
  char v20 = (uint64_t *)swift_allocObject();
  v20[3] = 0;
  v20[4] = 0;
  _OWORD v20[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v20, 0);
  swift_release();
  type metadata accessor for SmoothStepNode(0);
  unint64_t v21 = (uint64_t *)swift_allocObject();
  v21[3] = 0;
  v21[4] = 0;
  uint64_t v21[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v21, 0);
  swift_release();
  type metadata accessor for MulAddNode(0);
  char v22 = (uint64_t *)swift_allocObject();
  v22[3] = 0;
  void v22[4] = 0;
  _OWORD v22[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v22, 0);
  swift_release();
  type metadata accessor for ClampNode(0);
  uint64_t v23 = (uint64_t *)swift_allocObject();
  v23[3] = 0;
  v23[4] = 0;
  _OWORD v23[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v23, 0);
  swift_release();
  type metadata accessor for Remap01Node(0);
  unint64_t v24 = (uint64_t *)swift_allocObject();
  v24[3] = 0;
  v24[4] = 0;
  _OWORD v24[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v24, 0);
  swift_release();
  type metadata accessor for ToRadiansNode(0);
  char v25 = (uint64_t *)swift_allocObject();
  void v25[2] = v1;
  v25[3] = 0;
  v25[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v25, 0);
  swift_release();
  type metadata accessor for ToDegreesNode(0);
  uint64_t v26 = (uint64_t *)swift_allocObject();
  _OWORD v26[2] = v1;
  v26[3] = 0;
  v26[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v26, 0);
  swift_release();
  type metadata accessor for SqrtNode(0);
  uint64_t v27 = (uint64_t *)swift_allocObject();
  _OWORD v27[2] = v1;
  v27[3] = 0;
  v27[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v27, 0);
  swift_release();
  type metadata accessor for FractNode(0);
  double v28 = (uint64_t *)swift_allocObject();
  _OWORD v28[2] = v1;
  void v28[3] = 0;
  v28[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v28, 0);
  swift_release();
  type metadata accessor for OneMinusNode(0);
  char v29 = (uint64_t *)swift_allocObject();
  _OWORD v29[2] = v1;
  void v29[3] = 0;
  v29[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v29, 0);
  swift_release();
  type metadata accessor for Pow2Node(0);
  unint64_t v30 = (uint64_t *)swift_allocObject();
  _OWORD v30[2] = v1;
  v30[3] = 0;
  void v30[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v30, 0);
  swift_release();
  type metadata accessor for Pow3Node(0);
  unint64_t v31 = (uint64_t *)swift_allocObject();
  uint64_t v31[2] = v1;
  v31[3] = 0;
  v31[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v31, 0);
  swift_release();
  type metadata accessor for RoundNode(0);
  uint64_t v32 = (uint64_t *)swift_allocObject();
  _OWORD v32[2] = v1;
  v32[3] = 0;
  uint64_t v32[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v32, 0);
  swift_release();
  type metadata accessor for SignNode(0);
  uint64_t v33 = (uint64_t *)swift_allocObject();
  _OWORD v33[2] = v1;
  v33[3] = 0;
  _OWORD v33[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v33, 0);
  swift_release();
  type metadata accessor for AbsNode(0);
  unint64_t v34 = (uint64_t *)swift_allocObject();
  _OWORD v34[2] = v1;
  void v34[3] = 0;
  void v34[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v34, 0);
  swift_release();
  type metadata accessor for FloorNode(0);
  uint64_t v35 = (uint64_t *)swift_allocObject();
  _OWORD v35[2] = v1;
  v35[3] = 0;
  _OWORD v35[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v35, 0);
  swift_release();
  type metadata accessor for LogNode(0);
  uint64_t v36 = (uint64_t *)swift_allocObject();
  _OWORD v36[2] = v1;
  v36[3] = 0;
  v36[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v36, 0);
  swift_release();
  type metadata accessor for ExpNode(0);
  char v37 = (uint64_t *)swift_allocObject();
  v37[2] = v1;
  v37[3] = 0;
  v37[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v37, 0);
  swift_release();
  type metadata accessor for Exp2Node(0);
  char v38 = (uint64_t *)swift_allocObject();
  _OWORD v38[2] = v1;
  uint64_t v38[3] = 0;
  v38[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v38, 0);
  swift_release();
  type metadata accessor for Exp10Node(0);
  char v39 = (uint64_t *)swift_allocObject();
  _OWORD v39[2] = v1;
  v39[3] = 0;
  v39[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v39, 0);
  swift_release();
  type metadata accessor for CosNode(0);
  unint64_t v40 = (uint64_t *)swift_allocObject();
  _OWORD v40[2] = v1;
  v40[3] = 0;
  v40[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v40, 0);
  swift_release();
  type metadata accessor for SinNode(0);
  char v41 = (uint64_t *)swift_allocObject();
  _OWORD v41[2] = v1;
  v41[3] = 0;
  v41[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v41, 0);
  swift_release();
  type metadata accessor for ASinNode(0);
  uint64_t v42 = (uint64_t *)swift_allocObject();
  _OWORD v42[2] = v1;
  v42[3] = 0;
  v42[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v42, 0);
  swift_release();
  type metadata accessor for ACosNode(0);
  unint64_t v43 = (uint64_t *)swift_allocObject();
  _OWORD v43[2] = v1;
  v43[3] = 0;
  v43[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v43, 0);
  swift_release();
  type metadata accessor for CeilNode(0);
  char v44 = (uint64_t *)swift_allocObject();
  _OWORD v44[2] = v1;
  v44[3] = 0;
  v44[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v44, 0);
  swift_release();
  type metadata accessor for TanNode(0);
  uint64_t v45 = (uint64_t *)swift_allocObject();
  _OWORD v45[2] = v1;
  v45[3] = 0;
  v45[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v45, 0);
  swift_release();
  type metadata accessor for ATanNode(0);
  uint64_t v46 = (uint64_t *)swift_allocObject();
  _OWORD v46[2] = v1;
  v46[3] = 0;
  v46[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v46, 0);
  swift_release();
  type metadata accessor for LengthNode(0);
  unint64_t v47 = (uint64_t *)swift_allocObject();
  _OWORD v47[2] = v1;
  v47[3] = 0;
  v47[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v47, 0);
  swift_release();
  type metadata accessor for QLengthNode(0);
  char v48 = (uint64_t *)swift_allocObject();
  _OWORD v48[2] = v1;
  v48[3] = 0;
  v48[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v48, 0);
  swift_release();
  type metadata accessor for IsAlmostZeroNode(0);
  unint64_t v49 = (uint64_t *)swift_allocObject();
  _OWORD v49[2] = v1;
  v49[3] = 0;
  v49[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v49, 0);
  swift_release();
  type metadata accessor for SaturateNode(0);
  unint64_t v50 = (uint64_t *)swift_allocObject();
  void v50[2] = v1;
  v50[3] = 0;
  v50[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v50, 0);
  swift_release();
  type metadata accessor for SignedSaturateNode(0);
  char v51 = (uint64_t *)swift_allocObject();
  _OWORD v51[2] = v1;
  v51[3] = 0;
  v51[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v51, 0);
  swift_release();
  type metadata accessor for NormalizedNode(0);
  uint64_t v52 = (uint64_t *)swift_allocObject();
  _OWORD v52[2] = v1;
  v52[3] = 0;
  v52[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v52, 0);
  swift_release();
  type metadata accessor for QNormalizedNode(0);
  uint64_t v53 = (uint64_t *)swift_allocObject();
  _OWORD v53[2] = v1;
  v53[3] = 0;
  v53[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v53, 0);
  swift_release();
  type metadata accessor for ConjugateNode(0);
  uint64_t v54 = (uint64_t *)swift_allocObject();
  _OWORD v54[2] = v1;
  id v54[3] = 0;
  v54[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v54, 0);
  swift_release();
  type metadata accessor for QLnNode(0);
  uint64_t v55 = (uint64_t *)swift_allocObject();
  _OWORD v55[2] = v1;
  v55[3] = 0;
  v55[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v55, 0);
  swift_release();
  type metadata accessor for QExpNode(0);
  uint64_t v56 = (uint64_t *)swift_allocObject();
  _OWORD v56[2] = v1;
  v56[3] = 0;
  v56[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v56, 0);
  swift_release();
  type metadata accessor for EulerAnglesNode(0);
  uint64_t v57 = (uint64_t *)swift_allocObject();
  _OWORD v57[2] = v1;
  v57[3] = 0;
  v57[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v57, 0);
  swift_release();
  type metadata accessor for AxisAngleNode(0);
  uint64_t v58 = (uint64_t *)swift_allocObject();
  _OWORD v58[2] = v1;
  v58[3] = 0;
  v58[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v58, 0);
  swift_release();
  type metadata accessor for AxisNode(0);
  uint64_t v59 = (uint64_t *)swift_allocObject();
  _OWORD v59[2] = v1;
  v59[3] = 0;
  v59[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v59, 0);
  swift_release();
  type metadata accessor for QAngleNode(0);
  uint64_t v60 = (uint64_t *)swift_allocObject();
  _OWORD v60[2] = v1;
  v60[3] = 0;
  void v60[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v60, 0);
  swift_release();
  type metadata accessor for NormalAxisNode(0);
  uint64_t v61 = (uint64_t *)swift_allocObject();
  v61[2] = v1;
  v61[3] = 0;
  v61[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v61, 0);
  swift_release();
  type metadata accessor for ReduceSumNode(0);
  uint64_t v62 = (uint64_t *)swift_allocObject();
  _OWORD v62[2] = v1;
  v62[3] = 0;
  v62[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v62, 0);
  swift_release();
  type metadata accessor for ReduceMulNode(0);
  uint64_t v63 = (uint64_t *)swift_allocObject();
  void v63[2] = v1;
  v63[3] = 0;
  v63[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v63, 0);
  swift_release();
  type metadata accessor for OrthonormalBasisNode(0);
  uint64_t v64 = (uint64_t *)swift_allocObject();
  _OWORD v64[2] = v1;
  v64[3] = 0;
  v64[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v64, 0);
  swift_release();
  type metadata accessor for MixNode(0);
  uint64_t v65 = (uint64_t *)swift_allocObject();
  v65[2] = v1;
  v65[3] = 0;
  v65[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v65, 0);
  swift_release();
  type metadata accessor for QTransformNode(0);
  uint64_t v66 = (uint64_t *)swift_allocObject();
  _OWORD v66[2] = v1;
  v66[3] = 0;
  v66[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v66, 0);
  swift_release();
  type metadata accessor for InverseNode(0);
  uint64_t v67 = (uint64_t *)swift_allocObject();
  v67[2] = v1;
  v67[3] = 0;
  v67[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v67, 0);
  swift_release();
  type metadata accessor for QInverseNode(0);
  uint64_t v68 = (uint64_t *)swift_allocObject();
  _OWORD v68[2] = v1;
  v68[3] = 0;
  v68[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v68, 0);
  swift_release();
  type metadata accessor for TransposeNode(0);
  uint64_t v69 = (uint64_t *)swift_allocObject();
  v69[2] = v1;
  v69[3] = 0;
  v69[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v69, 0);
  swift_release();
  type metadata accessor for TransformNormalNode(0);
  uint64_t v70 = (uint64_t *)swift_allocObject();
  v70[2] = v1;
  v70[3] = 0;
  v70[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v70, 0);
  swift_release();
  type metadata accessor for TransformPosition3Node(0);
  float32x4_t v71 = (uint64_t *)swift_allocObject();
  v71[2] = v1;
  v71[3] = 0;
  v71[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v71, 0);
  swift_release();
  type metadata accessor for TransformPosition4Node(0);
  id v72 = (uint64_t *)swift_allocObject();
  v72[2] = v1;
  v72[3] = 0;
  v72[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v72, 0);
  swift_release();
  type metadata accessor for TransformNode(0);
  float32x4_t v73 = (uint64_t *)swift_allocObject();
  void v73[2] = v1;
  v73[3] = 0;
  v73[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v73, 0);
  swift_release();
  type metadata accessor for TranslateMatrix3Node(0);
  float32x4_t v74 = (uint64_t *)swift_allocObject();
  v74[2] = v1;
  v74[3] = 0;
  v74[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v74, 0);
  swift_release();
  type metadata accessor for TranslateMatrix4Node(0);
  uint64_t v75 = (uint64_t *)swift_allocObject();
  v75[2] = v1;
  v75[3] = 0;
  v75[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v75, 0);
  swift_release();
  type metadata accessor for ScaleMatrix3Node(0);
  uint64_t v76 = (uint64_t *)swift_allocObject();
  v76[2] = v1;
  v76[3] = 0;
  v76[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v76, 0);
  swift_release();
  type metadata accessor for ScaleMatrix4Node(0);
  uint64_t v77 = (uint64_t *)swift_allocObject();
  v77[2] = v1;
  void v77[3] = 0;
  v77[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v77, 0);
  swift_release();
  type metadata accessor for ProjectPositionNode(0);
  float32x2_t v78 = (uint64_t *)swift_allocObject();
  v78[2] = v1;
  v78[3] = 0;
  v78[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v78, 0);
  swift_release();
  type metadata accessor for TransformDirection3Node(0);
  float32x4_t v79 = (uint64_t *)swift_allocObject();
  _OWORD v79[2] = v1;
  v79[3] = 0;
  v79[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v79, 0);
  swift_release();
  type metadata accessor for TransformDirection4Node(0);
  long long v80 = (uint64_t *)swift_allocObject();
  v80[2] = v1;
  v80[3] = 0;
  v80[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v80, 0);
  swift_release();
  type metadata accessor for TRSNode(0);
  uint64_t v81 = (uint64_t *)swift_allocObject();
  _OWORD v81[2] = v1;
  v81[3] = 0;
  v81[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v81, 0);
  swift_release();
  type metadata accessor for GetTranslation3Node(0);
  uint64_t v82 = (uint64_t *)swift_allocObject();
  _OWORD v82[2] = v1;
  v82[3] = 0;
  v82[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v82, 0);
  swift_release();
  type metadata accessor for GetTranslation4Node(0);
  uint64_t v83 = (uint64_t *)swift_allocObject();
  v83[2] = v1;
  v83[3] = 0;
  v83[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v83, 0);
  swift_release();
  type metadata accessor for GetRotationNode(0);
  uint64_t v84 = (uint64_t *)swift_allocObject();
  _OWORD v84[2] = v1;
  v84[3] = 0;
  v84[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v84, 0);
  swift_release();
  type metadata accessor for RotationNode(0);
  uint64_t v85 = (uint64_t *)swift_allocObject();
  v85[2] = v1;
  v85[3] = 0;
  v85[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v85, 0);
  swift_release();
  type metadata accessor for GetScale3Node(0);
  uint64_t v86 = (uint64_t *)swift_allocObject();
  v86[2] = v1;
  v86[3] = 0;
  v86[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v86, 0);
  swift_release();
  type metadata accessor for GetScale4Node(0);
  uint64_t v87 = (uint64_t *)swift_allocObject();
  _OWORD v87[2] = v1;
  v87[3] = 0;
  v87[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v87, 0);
  swift_release();
  type metadata accessor for RotateVectorNode(0);
  uint64_t v88 = (uint64_t *)swift_allocObject();
  v88[2] = v1;
  v88[3] = 0;
  v88[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v88, 0);
  swift_release();
  type metadata accessor for QPowNode(0);
  unint64_t v89 = (uint64_t *)swift_allocObject();
  v89[2] = v1;
  v89[3] = 0;
  v89[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v89, 0);
  swift_release();
  type metadata accessor for LookAtNode(0);
  unint64_t v90 = (uint64_t *)swift_allocObject();
  _OWORD v90[2] = v1;
  v90[3] = 0;
  v90[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v90, 0);
  swift_release();
  type metadata accessor for SlerpNode(0);
  uint64_t v91 = (uint64_t *)swift_allocObject();
  v91[2] = v1;
  v91[3] = 0;
  v91[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v91, 0);
  swift_release();
  type metadata accessor for SlerpLongestNode(0);
  uint64_t v92 = (uint64_t *)swift_allocObject();
  _OWORD v92[2] = v1;
  v92[3] = 0;
  v92[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v92, 0);
  swift_release();
  type metadata accessor for SquadNode(0);
  uint64_t v93 = (uint64_t *)swift_allocObject();
  _OWORD v93[2] = v1;
  v93[3] = 0;
  v93[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v93, 0);
  swift_release();
  type metadata accessor for BezierNode(0);
  long long v94 = (uint64_t *)swift_allocObject();
  _OWORD v94[2] = v1;
  v94[3] = 0;
  v94[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v94, 0);
  swift_release();
  type metadata accessor for RotationBetweenNode(0);
  uint64_t v95 = (uint64_t *)swift_allocObject();
  _OWORD v95[2] = v1;
  v95[3] = 0;
  v95[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v95, 0);
  swift_release();
  type metadata accessor for RotationBetweenFastNode(0);
  uint64_t v96 = (uint64_t *)swift_allocObject();
  v96[2] = v1;
  v96[3] = 0;
  v96[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v96, 0);
  swift_release();
  type metadata accessor for IsIdentityNode(0);
  uint64_t v97 = (uint64_t *)swift_allocObject();
  _OWORD v97[2] = v1;
  v97[3] = 0;
  v97[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v97, 0);
  swift_release();
  type metadata accessor for AngleNode(0);
  uint64_t v98 = (uint64_t *)swift_allocObject();
  _OWORD v98[2] = v1;
  v98[3] = 0;
  v98[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v98, 0);
  swift_release();
  type metadata accessor for IsInClosedRange(0);
  uint64_t v99 = (uint64_t *)swift_allocObject();
  _OWORD v99[2] = v1;
  v99[3] = 0;
  v99[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v99, 0);
  swift_release();
  type metadata accessor for QuaternionFromNormalNode(0);
  float v100 = (uint64_t *)swift_allocObject();
  _OWORD v100[2] = v1;
  v100[3] = 0;
  v100[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v100, 0);
  swift_release();
  type metadata accessor for QuaternionFromFloat3AxisAngleNode(0);
  uint64_t v101 = (uint64_t *)swift_allocObject();
  _OWORD v101[2] = v1;
  v101[3] = 0;
  v101[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v101, 0);
  swift_release();
  type metadata accessor for QuaternionFromFloat4AxisAngleNode(0);
  uint64_t v102 = (uint64_t *)swift_allocObject();
  v102[2] = v1;
  v102[3] = 0;
  v102[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v102, 0);
  swift_release();
  type metadata accessor for QuaternionFromEulerAnglesNode(0);
  long long v103 = (uint64_t *)swift_allocObject();
  _OWORD v103[2] = v1;
  v103[3] = 0;
  v103[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v103, 0);
  swift_release();
  type metadata accessor for QuaternionXNode(0);
  uint64_t v104 = (uint64_t *)swift_allocObject();
  _OWORD v104[2] = v1;
  v104[3] = 0;
  v104[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v104, 0);
  swift_release();
  type metadata accessor for QuaternionYNode(0);
  uint64_t v105 = (uint64_t *)swift_allocObject();
  v105[2] = v1;
  _OWORD v105[3] = 0;
  v105[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v105, 0);
  swift_release();
  type metadata accessor for QuaternionZNode(0);
  unint64_t v106 = (uint64_t *)swift_allocObject();
  void v106[2] = v1;
  v106[3] = 0;
  v106[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v106, 0);
  swift_release();
  type metadata accessor for QuaternionFromRotationMatrix3x3Node(0);
  char v107 = (uint64_t *)swift_allocObject();
  _OWORD v107[2] = v1;
  v107[3] = 0;
  v107[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v107, 0);
  swift_release();
  type metadata accessor for QuaternionFromRotationMatrix4x4Node(0);
  uint64_t v108 = (uint64_t *)swift_allocObject();
  v108[2] = v1;
  v108[3] = 0;
  v108[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v108, 0);
  swift_release();
  type metadata accessor for RotationMatrixFromEulerAngleNode(0);
  uint64_t v109 = (uint64_t *)swift_allocObject();
  _OWORD v109[2] = v1;
  v109[3] = 0;
  v109[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v109, 0);
  swift_release();
  type metadata accessor for RotationMatrix3x3FromQuaternionNode(0);
  uint64_t v110 = (uint64_t *)swift_allocObject();
  _OWORD v110[2] = v1;
  void v110[3] = 0;
  void v110[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v110, 0);
  swift_release();
  type metadata accessor for RotationMatrix4x4FromQuaternionNode(0);
  uint64_t v111 = (uint64_t *)swift_allocObject();
  _OWORD v111[2] = v1;
  v111[3] = 0;
  v111[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v111, 0);
  swift_release();
  type metadata accessor for RotationMatrixAroundCenterNode(0);
  uint64_t v112 = (uint64_t *)swift_allocObject();
  _OWORD v112[2] = v1;
  v112[3] = 0;
  v112[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v112, 0);
  swift_release();
  type metadata accessor for TRSFloat3x3MatrixNode(0);
  uint64_t v113 = (uint64_t *)swift_allocObject();
  _OWORD v113[2] = v1;
  long long v113[3] = 0;
  v113[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v113, 0);
  swift_release();
  type metadata accessor for TRSFloat4x4MatrixNode(0);
  uint64_t v114 = (uint64_t *)swift_allocObject();
  _OWORD v114[2] = v1;
  v114[3] = 0;
  v114[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v114, 0);

  return swift_release();
}

uint64_t sub_1B6CE9B94()
{
  type metadata accessor for SelectNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 0);
  swift_release();
  type metadata accessor for NotNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  _OWORD v2[3] = 0;
  v2[4] = 0;
  v2[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 0);
  swift_release();
  type metadata accessor for IsOddNode(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  _OWORD v3[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v3, 0);
  swift_release();
  type metadata accessor for IsEvenNode(0);
  unint64_t v4 = (uint64_t *)swift_allocObject();
  _OWORD v4[3] = 0;
  v4[4] = 0;
  v4[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v4, 0);
  swift_release();
  type metadata accessor for OrNode(0);
  uint64_t v5 = (uint64_t *)swift_allocObject();
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v5, 0);
  swift_release();
  type metadata accessor for AndNode(0);
  uint64_t v6 = (uint64_t *)swift_allocObject();
  v6[3] = 0;
  v6[4] = 0;
  _DWORD v6[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v6, 0);
  swift_release();
  type metadata accessor for NandNode(0);
  uint64_t v7 = (uint64_t *)swift_allocObject();
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v7, 0);
  swift_release();
  type metadata accessor for NorNode(0);
  uint64_t v8 = (uint64_t *)swift_allocObject();
  v8[3] = 0;
  v8[4] = 0;
  _OWORD v8[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v8, 0);
  swift_release();
  type metadata accessor for IsGreaterNode(0);
  uint64_t v9 = (uint64_t *)swift_allocObject();
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v9, 0);
  swift_release();
  type metadata accessor for IsGreaterOrEqualNode(0);
  uint64_t v10 = (uint64_t *)swift_allocObject();
  id v10[3] = 0;
  v10[4] = 0;
  v10[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v10, 0);
  swift_release();
  type metadata accessor for IsLesserNode(0);
  uint64_t v11 = (uint64_t *)swift_allocObject();
  v11[3] = 0;
  v11[4] = 0;
  _OWORD v11[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v11, 0);
  swift_release();
  type metadata accessor for IsLesserOrEqualNode(0);
  uint64_t v12 = (uint64_t *)swift_allocObject();
  v12[3] = 0;
  v12[4] = 0;
  v12[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v12, 0);
  swift_release();
  type metadata accessor for IsEqualNode(0);
  uint64_t v13 = (uint64_t *)swift_allocObject();
  v13[3] = 0;
  v13[4] = 0;
  _OWORD v13[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v13, 0);
  swift_release();
  type metadata accessor for IsNotEqualNode(0);
  uint64_t v14 = (uint64_t *)swift_allocObject();
  v14[3] = 0;
  v14[4] = 0;
  _OWORD v14[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v14, 0);

  return swift_release();
}

uint64_t sub_1B6CE9F54()
{
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E8F480;
  uint64_t v1 = v0 | 0x1000000000000000;
  type metadata accessor for CastNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000050;
  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v2[2] = MEMORY[0x1E4FBC860];
  _OWORD v2[3] = 0;
  uint64_t v4 = v3;
  v2[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 0);
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E8DAE0;
  uint64_t v6 = v5 | 0x1000000000000000;
  uint64_t v7 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000050;
  *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v6;
  v7[2] = v4;
  v7[3] = 0;
  v7[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v7, 0);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E8DAD0;
  uint64_t v9 = v8 | 0x1000000000000000;
  uint64_t v10 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v10 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000050;
  *(uint64_t *)((char *)v10 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v9;
  v10[2] = v4;
  id v10[3] = 0;
  v10[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v10, 0);
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E8F480;
  uint64_t v12 = v11 | 0x1000000000000000;
  uint64_t v13 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v13 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v12;
  *(uint64_t *)((char *)v13 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = 0x8000000000000050;
  _OWORD v13[2] = v4;
  v13[3] = 0;
  v13[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v13, 0);
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E8F480;
  uint64_t v15 = v14 | 0x1000000000000000;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E8DAE0;
  uint64_t v17 = v16 | 0x1000000000000000;
  uint64_t v18 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v18 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v15;
  *(uint64_t *)((char *)v18 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v17;
  _OWORD v18[2] = v4;
  v18[3] = 0;
  v18[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v18, 0);
  swift_release();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1B6E8F480;
  uint64_t v20 = v19 | 0x1000000000000000;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1B6E8DAD0;
  uint64_t v22 = v21 | 0x1000000000000000;
  uint64_t v23 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v23 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v20;
  *(uint64_t *)((char *)v23 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v22;
  _OWORD v23[2] = v4;
  v23[3] = 0;
  v23[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v23, 0);
  swift_release();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1B6E8DAE0;
  uint64_t v25 = v24 | 0x1000000000000000;
  uint64_t v26 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v26 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v25;
  *(uint64_t *)((char *)v26 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = 0x8000000000000050;
  _OWORD v26[2] = v4;
  v26[3] = 0;
  v26[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v26, 0);
  swift_release();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1B6E8DAE0;
  uint64_t v28 = v27 | 0x1000000000000000;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1B6E8F480;
  uint64_t v30 = v29 | 0x1000000000000000;
  unint64_t v31 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v31 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v28;
  *(uint64_t *)((char *)v31 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v30;
  uint64_t v31[2] = v4;
  v31[3] = 0;
  v31[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v31, 0);
  swift_release();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1B6E8DAE0;
  uint64_t v33 = v32 | 0x1000000000000000;
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1B6E8DAD0;
  uint64_t v35 = v34 | 0x1000000000000000;
  uint64_t v36 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v36 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v33;
  *(uint64_t *)((char *)v36 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v35;
  _OWORD v36[2] = v4;
  v36[3] = 0;
  v36[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v36, 0);
  swift_release();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1B6E8DAD0;
  uint64_t v38 = v37 | 0x1000000000000000;
  char v39 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v39 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v38;
  *(uint64_t *)((char *)v39 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = 0x8000000000000050;
  _OWORD v39[2] = v4;
  v39[3] = 0;
  v39[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v39, 0);
  swift_release();
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1B6E8DAD0;
  uint64_t v41 = v40 | 0x1000000000000000;
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1B6E8F480;
  uint64_t v43 = v42 | 0x1000000000000000;
  char v44 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v44 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v41;
  *(uint64_t *)((char *)v44 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v43;
  _OWORD v44[2] = v4;
  v44[3] = 0;
  v44[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v44, 0);
  swift_release();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1B6E8DAD0;
  uint64_t v46 = v45 | 0x1000000000000000;
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1B6E8DAE0;
  uint64_t v48 = v47 | 0x1000000000000000;
  unint64_t v49 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v49 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v46;
  *(uint64_t *)((char *)v49 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v48;
  _OWORD v49[2] = v4;
  v49[3] = 0;
  v49[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v49, 0);
  swift_release();
  unint64_t v50 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v50 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000038;
  *(uint64_t *)((char *)v50 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = 0x8000000000000050;
  void v50[2] = v4;
  v50[3] = 0;
  v50[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v50, 0);
  swift_release();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0x8000000000000050;
  uint64_t v52 = v51 | 0x2000000000000000;
  uint64_t v53 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v53 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000050;
  *(uint64_t *)((char *)v53 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v52;
  _OWORD v53[2] = v4;
  v53[3] = 0;
  v53[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v53, 0);
  swift_release();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = 0x8000000000000050;
  uint64_t v55 = v54 | 0x2000000000000000;
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1B6E8F480;
  uint64_t v57 = v56 | 0x1000000000000000;
  uint64_t v58 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v58 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v55;
  *(uint64_t *)((char *)v58 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v57;
  uint64_t v59 = MEMORY[0x1E4FBC860];
  _OWORD v58[2] = MEMORY[0x1E4FBC860];
  v58[3] = 0;
  v58[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v58, 0);
  swift_release();
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1B6E8F480;
  uint64_t v61 = v60 | 0x1000000000000000;
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = 0x8000000000000050;
  uint64_t v63 = v62 | 0x2000000000000000;
  uint64_t v64 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v64 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v61;
  *(uint64_t *)((char *)v64 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v63;
  _OWORD v64[2] = v59;
  v64[3] = 0;
  v64[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v64, 0);
  swift_release();
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = 0x8000000000000040;
  uint64_t v66 = v65 | 0x2000000000000000;
  uint64_t v67 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v67 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000040;
  *(uint64_t *)((char *)v67 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v66;
  v67[2] = v59;
  v67[3] = 0;
  v67[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v67, 0);
  swift_release();
  uint64_t v68 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v68 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000020;
  *(uint64_t *)((char *)v68 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = 0x8000000000000040;
  _OWORD v68[2] = v59;
  v68[3] = 0;
  v68[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v68, 0);
  swift_release();
  uint64_t v69 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v69 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = 0x8000000000000040;
  *(uint64_t *)((char *)v69 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = 0x8000000000000020;
  v69[2] = v59;
  v69[3] = 0;
  v69[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v69, 0);

  return swift_release();
}

uint64_t sub_1B6CEA8F0()
{
  type metadata accessor for BounceEaseNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 0);
  swift_release();
  type metadata accessor for CubicEaseInNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  _OWORD v2[3] = 0;
  v2[4] = 0;
  v2[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 0);
  swift_release();
  type metadata accessor for CubicEaseOutNode(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  _OWORD v3[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v3, 0);
  swift_release();
  type metadata accessor for CubicEaseInOutNode(0);
  uint64_t v4 = (uint64_t *)swift_allocObject();
  _OWORD v4[3] = 0;
  v4[4] = 0;
  v4[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v4, 0);
  swift_release();
  type metadata accessor for ExponentialEaseNode(0);
  uint64_t v5 = (uint64_t *)swift_allocObject();
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v5, 0);
  swift_release();
  type metadata accessor for PhysicalEaseNode(0);
  uint64_t v6 = (uint64_t *)swift_allocObject();
  v6[3] = 0;
  v6[4] = 0;
  _DWORD v6[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v6, 0);
  swift_release();
  type metadata accessor for PowerEaseNode(0);
  uint64_t v7 = (uint64_t *)swift_allocObject();
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v7, 0);
  swift_release();
  type metadata accessor for QuadraticEaseInNode(0);
  uint64_t v8 = (uint64_t *)swift_allocObject();
  v8[3] = 0;
  v8[4] = 0;
  _OWORD v8[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v8, 0);
  swift_release();
  type metadata accessor for QuadraticEaseOutNode(0);
  uint64_t v9 = (uint64_t *)swift_allocObject();
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v9, 0);
  swift_release();
  type metadata accessor for QuadraticEaseInOutNode(0);
  uint64_t v10 = (uint64_t *)swift_allocObject();
  id v10[3] = 0;
  v10[4] = 0;
  v10[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v10, 0);
  swift_release();
  type metadata accessor for QuarticEaseInNode(0);
  uint64_t v11 = (uint64_t *)swift_allocObject();
  v11[3] = 0;
  v11[4] = 0;
  _OWORD v11[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v11, 0);
  swift_release();
  type metadata accessor for QuarticEaseOutNode(0);
  uint64_t v12 = (uint64_t *)swift_allocObject();
  v12[3] = 0;
  v12[4] = 0;
  v12[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v12, 0);
  swift_release();
  type metadata accessor for QuarticEaseInOutNode(0);
  uint64_t v13 = (uint64_t *)swift_allocObject();
  v13[3] = 0;
  v13[4] = 0;
  _OWORD v13[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v13, 0);
  swift_release();
  type metadata accessor for QuinticEaseInNode(0);
  uint64_t v14 = (uint64_t *)swift_allocObject();
  v14[3] = 0;
  v14[4] = 0;
  _OWORD v14[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v14, 0);
  swift_release();
  type metadata accessor for QuinticEaseOutNode(0);
  uint64_t v15 = (uint64_t *)swift_allocObject();
  v15[3] = 0;
  v15[4] = 0;
  _OWORD v15[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v15, 0);
  swift_release();
  type metadata accessor for QuinticEaseInOutNode(0);
  uint64_t v16 = (uint64_t *)swift_allocObject();
  v16[3] = 0;
  v16[4] = 0;
  _OWORD v16[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v16, 0);
  swift_release();
  type metadata accessor for SinEaseInNode(0);
  uint64_t v17 = (uint64_t *)swift_allocObject();
  v17[3] = 0;
  v17[4] = 0;
  _OWORD v17[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v17, 0);
  swift_release();
  type metadata accessor for SinEaseOutNode(0);
  uint64_t v18 = (uint64_t *)swift_allocObject();
  v18[3] = 0;
  v18[4] = 0;
  _OWORD v18[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v18, 0);
  swift_release();
  type metadata accessor for SinEaseInOutNode(0);
  uint64_t v19 = (uint64_t *)swift_allocObject();
  v19[3] = 0;
  v19[4] = 0;
  _OWORD v19[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v19, 0);

  return swift_release();
}

uint64_t sub_1B6CEADF0()
{
  type metadata accessor for RenderWorldNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 0);
  swift_release();
  type metadata accessor for PresentNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  _OWORD v2[3] = 0;
  v2[4] = 0;
  v2[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 0);
  swift_release();
  type metadata accessor for PublishTextureNode(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  _OWORD v3[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v3, 0);
  swift_release();
  type metadata accessor for TextureDescriptorNode(0);
  uint64_t v4 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC3VFX21TextureDescriptorNode__descriptor) = 0;
  _OWORD v4[3] = 0;
  v4[4] = 0;
  v4[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v4, 0);
  swift_release();
  type metadata accessor for ComputeShaderNode(0);
  swift_allocObject();
  uint64_t v5 = sub_1B6C80E64();
  sub_1B6CE3D18(v5, 0);
  swift_release();
  type metadata accessor for FullscreenQuadNode(0);
  swift_allocObject();
  uint64_t v6 = sub_1B6C80E64();
  sub_1B6CE3D18(v6, 0);
  swift_release();
  type metadata accessor for BlurNode(0);
  uint64_t v7 = (uint64_t *)swift_allocObject();
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v7, 0);
  swift_release();
  type metadata accessor for BloomNode(0);
  uint64_t v8 = (uint64_t *)swift_allocObject();
  v8[3] = 0;
  v8[4] = 0;
  _OWORD v8[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v8, 0);
  swift_release();
  type metadata accessor for RenderGraphTextureNode(0);
  uint64_t v9 = (uint64_t *)swift_allocObject();
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v9, 0);
  swift_release();
  type metadata accessor for ResolveResolutionNode(0);
  uint64_t v10 = (uint64_t *)swift_allocObject();
  id v10[3] = 0;
  v10[4] = 0;
  v10[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v10, 0);

  return swift_release();
}

uint64_t sub_1B6CEB0B0()
{
  type metadata accessor for OnTickTriggerNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = @"VFXTriggerTypeTicked";
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  uint64_t v2 = @"VFXTriggerTypeTicked";
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 0);
  swift_release();
  type metadata accessor for OnMouseTriggerNode(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = @"VFXTriggerTypeMouseDown";
  v3[3] = 0;
  v3[4] = 0;
  _OWORD v3[2] = v1;
  uint64_t v4 = @"VFXTriggerTypeMouseDown";
  sub_1B6E31108();
  sub_1B6CE3D18(v3, 0);
  swift_release();
  uint64_t v5 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v5 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = @"VFXTriggerTypeMouseUp";
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = v1;
  uint64_t v6 = @"VFXTriggerTypeMouseUp";
  sub_1B6E31108();
  sub_1B6CE3D18(v5, 0);
  swift_release();
  uint64_t v7 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = @"VFXTriggerTypeMouseDragged";
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = v1;
  uint64_t v8 = @"VFXTriggerTypeMouseDragged";
  sub_1B6E31108();
  sub_1B6CE3D18(v7, 0);
  swift_release();
  uint64_t v9 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v9 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = @"VFXTriggerTypeMouseMoved";
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = v1;
  uint64_t v10 = @"VFXTriggerTypeMouseMoved";
  sub_1B6E31108();
  sub_1B6CE3D18(v9, 0);
  swift_release();
  type metadata accessor for OnKeyTriggerNode(0);
  uint64_t v11 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v11 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = @"VFXTriggerTypeKeyDown";
  v11[3] = 0;
  v11[4] = 0;
  _OWORD v11[2] = v1;
  uint64_t v12 = @"VFXTriggerTypeKeyDown";
  sub_1B6E31108();
  sub_1B6CE3D18(v11, 0);
  swift_release();
  uint64_t v13 = (uint64_t *)swift_allocObject();
  *(uint64_t *)((char *)v13 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = @"VFXTriggerTypeKeyUp";
  v13[3] = 0;
  v13[4] = 0;
  _OWORD v13[2] = v1;
  uint64_t v14 = @"VFXTriggerTypeKeyUp";
  sub_1B6E31108();
  sub_1B6CE3D18(v13, 0);
  swift_release();
  type metadata accessor for StateNode(0);
  uint64_t v15 = (uint64_t *)swift_allocObject();
  uint64_t v16 = (uint64_t)v15 + OBJC_IVAR____TtC3VFX9StateNode_stateRef;
  swift_unknownObjectWeakInit();
  uint64_t v23 = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v24 = 0x3E6C6C756E3CLL;
  unint64_t v25 = 0xE600000000000000;
  sub_1B6649008((uint64_t)&v22, v16);
  v15[3] = 0;
  v15[4] = 0;
  _OWORD v15[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v15, 0);
  swift_release();
  type metadata accessor for ImplicitStateNode(0);
  uint64_t v17 = (uint64_t *)swift_allocObject();
  uint64_t v18 = (uint64_t)v17 + OBJC_IVAR____TtC3VFX9StateNode_stateRef;
  uint64_t v23 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v23 = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v24 = 0x3E6C6C756E3CLL;
  unint64_t v25 = 0xE600000000000000;
  sub_1B6649008((uint64_t)&v22, v18);
  v17[3] = 0;
  v17[4] = 0;
  _OWORD v17[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v17, 2);
  swift_release();
  type metadata accessor for SetStateNode(0);
  uint64_t v19 = (uint64_t *)swift_allocObject();
  v19[3] = 0;
  v19[4] = 0;
  _OWORD v19[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v19, 0);
  swift_release();
  type metadata accessor for TickNode(0);
  uint64_t v20 = (uint64_t *)swift_allocObject();
  v20[3] = 0;
  v20[4] = 0;
  _OWORD v20[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v20, 0);
  return swift_release();
}

uint64_t sub_1B6CEB508()
{
  type metadata accessor for LogDebugNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  uint64_t v1 = (uint64_t *)((char *)v0 + OBJC_IVAR____TtC3VFX23LogDebugPassthroughNode_message);
  *uint64_t v1 = 0x65756C6156796DLL;
  v1[1] = 0xE700000000000000;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  v0[2] = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 0);
  swift_release();
  type metadata accessor for LogDebugPassthroughNode(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  uint64_t v4 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC3VFX23LogDebugPassthroughNode_message);
  *uint64_t v4 = 0x65756C6156796DLL;
  v4[1] = 0xE700000000000000;
  _OWORD v3[2] = v2;
  v3[3] = 0;
  v3[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v3, 0);

  return swift_release();
}

uint64_t sub_1B6CEB60C()
{
  type metadata accessor for CanvasItemNode(0);
  uint64_t v0 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v0 + OBJC_IVAR____TtC3VFX14CanvasItemNode_stage) = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v0, 2);
  swift_release();
  type metadata accessor for CanvasStickyNode(0);
  uint64_t v2 = (uint64_t *)swift_allocObject();
  *((unsigned char *)v2 + OBJC_IVAR____TtC3VFX16CanvasStickyNode_colorScheme) = 7;
  uint64_t v3 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC3VFX16CanvasStickyNode_text);
  void *v3 = 0;
  v3[1] = 0xE000000000000000;
  v2[2] = v1;
  _OWORD v2[3] = 0;
  v2[4] = 0;
  sub_1B6E31108();
  sub_1B6CE3D18(v2, 2);
  swift_release();
  type metadata accessor for CanvasStickyGroupNode(0);
  uint64_t v4 = (uint64_t *)swift_allocObject();
  _OWORD v4[3] = 0;
  v4[4] = 0;
  v4[2] = v1;
  sub_1B6E31108();
  sub_1B6CE3D18(v4, 2);

  return swift_release();
}

uint64_t type metadata accessor for GraphNodeLibrary()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for GraphNodeLibrary.NodeCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CEB838);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphNodeLibrary.NodeCategory()
{
  return &type metadata for GraphNodeLibrary.NodeCategory;
}

ValueMetadata *type metadata accessor for GraphNodeLibrary.Entry()
{
  return &type metadata for GraphNodeLibrary.Entry;
}

unint64_t sub_1B6CEB884()
{
  unint64_t result = qword_1E9DD8600;
  if (!qword_1E9DD8600)
  {
    sub_1B6CEBEA8(255, &qword_1E9DD8608, (uint64_t)&type metadata for GraphNodeLibrary.NodeCategory, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8600);
  }
  return result;
}

unint64_t sub_1B6CEB904()
{
  unint64_t result = qword_1E9DD8610;
  if (!qword_1E9DD8610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8610);
  }
  return result;
}

uint64_t sub_1B6CEB958()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6CEB990()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6CEB9C8()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

uint64_t sub_1B6CEB9D8()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

uint64_t sub_1B6CEB9E8()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6CEB9F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

unint64_t sub_1B6CEBA40()
{
  unint64_t result = qword_1E9DD8618;
  if (!qword_1E9DD8618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8618);
  }
  return result;
}

uint64_t sub_1B6CEBA94(uint64_t a1, uint64_t a2)
{
  sub_1B6CEBAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B6CEBAF8()
{
  if (!qword_1EB9801B0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB9801B0);
    }
  }
}

void sub_1B6CEBB64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B6CEBBB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1B6CEBB64(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_1B6CEBC14@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_position);
  *a2 = v4;
  return result;
}

id sub_1B6CEBC48(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPosition_, *a1);
}

id sub_1B6CEBC5C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isHidden);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1B6CEBC90(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHidden_, *a1);
}

id sub_1B6CEBCA4@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_eulerAngles);
  *a2 = v4;
  return result;
}

id sub_1B6CEBCD8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEulerAngles_, *a1);
}

id sub_1B6CEBCEC@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_scale);
  *a2 = v4;
  return result;
}

id sub_1B6CEBD20(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScale_, *a1);
}

id sub_1B6CEBD34@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_worldTransform);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_1B6CEBD6C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorldTransform_, *a1, a1[2], a1[4], a1[6]);
}

id sub_1B6CEBD88@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_opacity);
  *a2 = v4;
  return result;
}

id sub_1B6CEBDBC(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setOpacity_, a3);
}

id sub_1B6CEBDD0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_renderingOrder);
  *a2 = result;
  return result;
}

id sub_1B6CEBE04(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRenderingOrder_, *a1);
}

id sub_1B6CEBE18@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_castsShadow);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1B6CEBE4C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCastsShadow_, *a1);
}

id sub_1B6CEBE60@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_categoryBitMask);
  *a2 = result;
  return result;
}

id sub_1B6CEBE94(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCategoryBitMask_, *a1);
}

void sub_1B6CEBEA8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for GraphNodeLibrary.Flags()
{
  return &type metadata for GraphNodeLibrary.Flags;
}

unint64_t sub_1B6CEBF08()
{
  unint64_t result = qword_1E9DD8628;
  if (!qword_1E9DD8628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8628);
  }
  return result;
}

unint64_t sub_1B6CEBF60()
{
  unint64_t result = qword_1E9DD8630;
  if (!qword_1E9DD8630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8630);
  }
  return result;
}

unint64_t sub_1B6CEBFB8()
{
  unint64_t result = qword_1E9DD8638;
  if (!qword_1E9DD8638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8638);
  }
  return result;
}

unint64_t sub_1B6CEC010()
{
  unint64_t result = qword_1E9DD8640;
  if (!qword_1E9DD8640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8640);
  }
  return result;
}

uint64_t sub_1B6CEC064(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  uint64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  v9 &= v9 - 1;
  while (1)
  {
    swift_retain();
    if (sub_1B6E33B48() == a1 && v14 == a2)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_1B682A12C(1);
      swift_release();
      return v17;
    }
    char v16 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_release();
      goto LABEL_30;
    }
    swift_release();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v12 = v11 + 1;
    if (v11 + 1 >= v10) {
      goto LABEL_31;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v12);
    if (!v13)
    {
      uint64_t v12 = v11 + 2;
      if (v11 + 2 >= v10) {
        goto LABEL_31;
      }
      uint64_t v13 = *(void *)(v6 + 8 * v12);
      if (!v13)
      {
        uint64_t v12 = v11 + 3;
        if (v11 + 3 >= v10) {
          goto LABEL_31;
        }
        uint64_t v13 = *(void *)(v6 + 8 * v12);
        if (!v13)
        {
          uint64_t v12 = v11 + 4;
          if (v11 + 4 >= v10) {
            goto LABEL_31;
          }
          uint64_t v13 = *(void *)(v6 + 8 * v12);
          if (!v13)
          {
            uint64_t v12 = v11 + 5;
            if (v11 + 5 >= v10) {
              goto LABEL_31;
            }
            uint64_t v13 = *(void *)(v6 + 8 * v12);
            if (!v13)
            {
              uint64_t v12 = v11 + 6;
              if (v11 + 6 >= v10) {
                goto LABEL_31;
              }
              uint64_t v13 = *(void *)(v6 + 8 * v12);
              if (!v13) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_20:
    uint64_t v9 = (v13 - 1) & v13;
    uint64_t v11 = v12;
  }
  while (v10 - 7 != v11)
  {
    uint64_t v13 = *(void *)(v5 + 8 * v11++ + 120);
    if (v13)
    {
      uint64_t v12 = v11 + 6;
      goto LABEL_20;
    }
  }
LABEL_31:
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t *sub_1B6CEC2A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1B6E31118();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_1B6CEC3A4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1B6E31118();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1B6CEC420(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1B6E31118();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1B6CEC4D8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B6CEC5A0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B6CEC5A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1B6CEC5FC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1B6E31118();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1B6CEC6B4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B6CEC5A0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B6CEC77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1B6CEC7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1B6CEC7D0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B6CEC7E0()
{
  uint64_t result = sub_1B6E31118();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1B6CEC874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_1B6CEC87C()
{
  uint64_t result = type metadata accessor for ScriptCompileAttempt();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_1B6E324B8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B6CEC9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  int64_t v10 = (void **)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (id *)((v8 + 17) & 0xFFFFFFFFFFFFFFF8);
  id v12 = *v11;
  id v13 = *v11;
  uint64_t v14 = *v10;
  *int64_t v10 = v12;

  uint64_t v15 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v16 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v17 = (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v18 = a1 + v17 + 7;
  uint64_t v19 = a2 + v17 + 7;
  unint64_t v20 = (v19 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v18 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v19 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_retain();
  swift_release();
  v21 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)((v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v23 = (unint64_t)v22 + 31;
  uint64_t v24 = (void *)((v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v25 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void **)v26;
  uint64_t v28 = *(void **)v25;
  *(void *)unint64_t v25 = *(void *)v26;
  id v29 = v27;

  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  unint64_t v30 = ((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = *(void *)(v23 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v30 + 8) = *(unsigned char *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)unint64_t v30 = v31;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v34 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = (void *)((v34 + 9 + v30) & ~v34);
  uint64_t v36 = (void *)((v34 + 9 + (v23 & 0xFFFFFFFFFFFFFFF8)) & ~v34);
  uint64_t v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  LODWORD(v24) = v37(v35, 1, AssociatedTypeWitness);
  int v38 = v37(v36, 1, AssociatedTypeWitness);
  if (v24)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v35, v36, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v39 = *(_DWORD *)(v33 + 84);
    size_t v40 = *(void *)(v33 + 64);
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v35, v36, AssociatedTypeWitness);
      return a1;
    }
    uint64_t v42 = *(void (**)(void *, uint64_t))(v33 + 8);
    uint64_t v41 = v33 + 8;
    v42(v35, AssociatedTypeWitness);
    int v39 = *(_DWORD *)(v41 + 76);
    size_t v40 = *(void *)(v41 + 56);
  }
  if (v39) {
    size_t v43 = v40;
  }
  else {
    size_t v43 = v40 + 1;
  }
  memcpy(v35, v36, v43);
  return a1;
}

uint64_t sub_1B6CECCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  int64_t v10 = (void *)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((v8 + 17) & 0xFFFFFFFFFFFFFFF8);
  *int64_t v10 = *v11;
  id v12 = (_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v13 = (_OWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v12 = *v13;
  *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v15 = a1 + v14 + 7;
  char v16 = (void *)((a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v15 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v15 = *v16;
  unint64_t v17 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v17;
  uint64_t v19 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  unint64_t v23 = ((unint64_t)v19 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v20 + 31) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v20) = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = (_BYTE)v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (void *)((v27 + 9 + v23) & ~v27);
  id v29 = (const void *)((v27 + 9 + v24) & ~v27);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v29, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v26 + 84)) {
      size_t v30 = *(void *)(v26 + 64);
    }
    else {
      size_t v30 = *(void *)(v26 + 64) + 1;
    }
    memcpy(v28, v29, v30);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v28, v29, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_1B6CECF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  int64_t v10 = (void **)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void **)((v8 + 17) & 0xFFFFFFFFFFFFFFF8);
  id v12 = *v10;
  *int64_t v10 = *v11;

  id v13 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  unint64_t v15 = (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v16 = a1 + v15 + 7;
  unint64_t v17 = (void *)((a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v16 & 0xFFFFFFFFFFFFFFF8) = *v17;
  unint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  v18 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v18 = *v19;
  swift_bridgeObjectRelease();
  unint64_t v20 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (unint64_t)v20 + 31;
  unint64_t v22 = (void *)((v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v22 = *v20;
  swift_bridgeObjectRelease();
  unint64_t v23 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = *(void **)v23;
  *(void *)unint64_t v23 = *(void *)v24;

  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  unint64_t v26 = ((unint64_t)v22 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v21 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)(v21 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v26 + 8) = *(unsigned char *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)unint64_t v26 = v28;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (void *)((v31 + 9 + v26) & ~v31);
  uint64_t v33 = (void *)((v31 + 9 + v27) & ~v31);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  LODWORD(v27) = v34(v32, 1, AssociatedTypeWitness);
  int v35 = v34(v33, 1, AssociatedTypeWitness);
  if (v27)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v32, v33, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v36 = *(_DWORD *)(v30 + 84);
    size_t v37 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v32, v33, AssociatedTypeWitness);
      return a1;
    }
    int v39 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v38 = v30 + 8;
    v39(v32, AssociatedTypeWitness);
    int v36 = *(_DWORD *)(v38 + 76);
    size_t v37 = *(void *)(v38 + 56);
  }
  if (v36) {
    size_t v40 = v37;
  }
  else {
    size_t v40 = v37 + 1;
  }
  memcpy(v32, v33, v40);
  return a1;
}

uint64_t type metadata accessor for ScriptRuntime()
{
  return sub_1B62C36EC();
}

unsigned char *storeEnumTagSinglePayload for ScriptScheduling(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6CED380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptScheduling()
{
  return &type metadata for ScriptScheduling;
}

unint64_t sub_1B6CED3BC()
{
  unint64_t result = qword_1E9DD8648;
  if (!qword_1E9DD8648)
  {
    sub_1B6CED414();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8648);
  }
  return result;
}

void sub_1B6CED414()
{
  if (!qword_1E9DD8650)
  {
    unint64_t v0 = sub_1B6E31D18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD8650);
    }
  }
}

uint64_t sub_1B6CED46C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1B6CED480(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1B6CED494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1B6CED4C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  double v4 = MEMORY[0x1F4188790](a1, v1);
  unsigned int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + *(int *)(v7 + 40));
  (*(void (**)(char *, double))(v3 + 16))(v6, v4);
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a1);
  }
  else
  {
    uint64_t v10 = *(void *)&v6[*(int *)(a1 + 44)];
    uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    v11(v6, a1);
    if (!v10) {
      return 0;
    }
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t sub_1B6CED5F0()
{
  if (*(void *)(v0[4] + 16))
  {
    uint64_t result = swift_bridgeObjectRelease();
    v0[1] = 0x64656D6D6972743CLL;
    v0[2] = 0xE90000000000003ELL;
  }
  return result;
}

uint64_t sub_1B6CED634()
{
  if (*(void *)(v0[4] + 16))
  {
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v0 = 0x64656D6D6972743CLL;
    v0[1] = 0xE90000000000003ELL;
  }
  return result;
}

uint64_t sub_1B6CED678()
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v0 + 8) = 0x64656D6D6972743CLL;
  *(void *)(v0 + 16) = 0xE90000000000003ELL;
  return result;
}

uint64_t sub_1B6CED6B0()
{
  if (*(void *)(*v0 + 16))
  {
    uint64_t result = swift_bridgeObjectRelease();
    v0[1] = 0x64656D6D6972743CLL;
    v0[2] = 0xE90000000000003ELL;
  }
  return result;
}

uint64_t sub_1B6CED6F4()
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v0 = 0x64656D6D6972743CLL;
  v0[1] = 0xE90000000000003ELL;
  return result;
}

uint64_t sub_1B6CED72C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1B6B96A70(a1, a2);
  uint64_t v3 = (int *)type metadata accessor for ScriptRuntime();
  *(void *)(a2 + v3[9]) = 0;
  *(void *)(a2 + v3[10]) = 0;
  *(void *)(a2 + v3[11]) = 0;
  *(void *)(a2 + v3[12]) = 0;
  *(unsigned char *)(a2 + v3[13]) = 0;
  uint64_t v4 = a2 + v3[14];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  uint64_t v5 = a2 + v3[15];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v7(v5, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_1B6CED818(uint64_t a1)
{
  unint64_t v2 = sub_1B6CEE7CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CED854(uint64_t a1)
{
  unint64_t v2 = sub_1B6CEE7CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CED890(void *a1)
{
  sub_1B6CEE770();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6CEE7CC();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1B6CED99C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B6CEE454(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B6CED9C8()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B6CEDA28()
{
  return sub_1B6E31B08();
}

void sub_1B6CEDA78(void *a1@<X8>)
{
  *a1 = &unk_1F0F6F688;
}

unint64_t sub_1B6CEDA8C()
{
  unint64_t result = qword_1E9DD8658;
  if (!qword_1E9DD8658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8658);
  }
  return result;
}

uint64_t sub_1B6CEDAE0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t result = sub_1B67AFBF8(*(void *)a1, *(void *)(a1 + 8), a2, a3, a4, a5, a6, a7);
  *a8 = result;
  a8[1] = v10;
  return result;
}

uint64_t sub_1B6CEDB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1B6E324B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v48 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v47 = (char *)&v45 - v14;
  MEMORY[0x1F4188790](v15, v16);
  unint64_t v18 = (char *)&v45 - v17;
  uint64_t v19 = type metadata accessor for ScriptCompileAttempt();
  sub_1B6B96B0C(a1, a2, v19);
  unint64_t v20 = *(void (**)(char *))(v9 + 16);
  uint64_t v50 = v3 + *(int *)(a3 + 60);
  v20(v18);
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  int v22 = v21(v18, 1, AssociatedTypeWitness);
  uint64_t v49 = v9;
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
    goto LABEL_13;
  }
  uint64_t v45 = v8;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v8 = v45;
LABEL_13:
    uint64_t v33 = v48;
    ((void (*)(char *, uint64_t, uint64_t))v20)(v48, v50, v8);
    if (v21(v33, 1, AssociatedTypeWitness) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v33, v8);
    }
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      uint64_t v34 = v51;
      int v35 = v52;
      uint64_t v36 = v51[2];
      if (v36)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v34 = sub_1B6C166E4(v34);
        }
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v38 = (uint64_t)(v34 + 4);
        do
        {
          uint64_t v39 = swift_unknownObjectRetain();
          sub_1B6900694(v39, v38, ObjectType, a2);
          swift_unknownObjectRelease();
          v38 += 32;
          --v36;
        }
        while (v36);
      }
      uint64_t v40 = v35[2];
      if (v40)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v35 = sub_1B6C166E4(v35);
        }
        uint64_t v41 = swift_getObjectType();
        uint64_t v42 = (uint64_t)(v35 + 4);
        do
        {
          uint64_t v43 = swift_unknownObjectRetain();
          sub_1B6900694(v43, v42, v41, a2);
          swift_unknownObjectRelease();
          v42 += 32;
          --v40;
        }
        while (v40);
      }
      uint64_t v51 = v34;
      uint64_t v52 = v35;
      char v44 = v47;
      swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, AssociatedTypeWitness);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 40))(v50, v44, v8);
    }
    return result;
  }
  unint64_t v24 = v51;
  unint64_t v23 = v52;
  uint64_t v25 = v51[2];
  if (v25)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v24 = sub_1B6C166E4(v24);
    }
    uint64_t v26 = swift_getObjectType();
    uint64_t v27 = (uint64_t)(v24 + 4);
    do
    {
      uint64_t v28 = swift_unknownObjectRetain();
      sub_1B6900694(v28, v27, v26, a2);
      swift_unknownObjectRelease();
      v27 += 32;
      --v25;
    }
    while (v25);
  }
  uint64_t v29 = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(v29, a2))
  {
    swift_bridgeObjectRelease();
    unint64_t v23 = 0;
  }
  uint64_t v30 = v49;
  uint64_t v51 = v24;
  uint64_t v52 = v23;
  uint64_t v31 = v47;
  swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v31, 0, 1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 40))(v50, v31, v45);
}

uint64_t sub_1B6CEDFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6CED72C(*(void *)(a1 + 24), a2);
}

void sub_1B6CEE008(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
}

void sub_1B6CEE018(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 16) = v1;
}

uint64_t sub_1B6CEE02C()
{
  uint64_t v0 = sub_1B6E31798();
  uint64_t v2 = v1;
  if (v0 == sub_1B6E31798() && v2 == v3)
  {
    uint64_t v6 = 2;
LABEL_8:
    swift_bridgeObjectRelease_n();
    return v6;
  }
  char v5 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {
    return 2;
  }
  uint64_t v8 = sub_1B6E31798();
  uint64_t v10 = v9;
  if (v8 == sub_1B6E31798() && v10 == v11)
  {
    uint64_t v6 = 3;
    goto LABEL_8;
  }
  char v13 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13) {
    return 3;
  }
  uint64_t v14 = sub_1B6E31798();
  uint64_t v16 = v15;
  if (v14 == sub_1B6E31798() && v16 == v17)
  {
    uint64_t v6 = 4;
    goto LABEL_8;
  }
  char v18 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18) {
    return 4;
  }
  uint64_t v19 = sub_1B6E31798();
  uint64_t v21 = v20;
  if (v19 == sub_1B6E31798() && v21 == v22)
  {
    uint64_t v6 = 5;
    goto LABEL_8;
  }
  char v23 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23) {
    return 5;
  }
  uint64_t v24 = sub_1B6E31798();
  uint64_t v26 = v25;
  if (v24 == sub_1B6E31798() && v26 == v27)
  {
    uint64_t v6 = 6;
    goto LABEL_8;
  }
  char v28 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28) {
    return 6;
  }
  uint64_t v29 = sub_1B6E31798();
  uint64_t v31 = v30;
  if (v29 == sub_1B6E31798() && v31 == v32)
  {
    uint64_t v6 = 7;
    goto LABEL_8;
  }
  char v33 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33) {
    return 7;
  }
  uint64_t v34 = sub_1B6E31798();
  uint64_t v36 = v35;
  if (v34 == sub_1B6E31798() && v36 == v37)
  {
    uint64_t v6 = 8;
    goto LABEL_8;
  }
  char v38 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38) {
    return 8;
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  type metadata accessor for VFXTriggerType(0);
  sub_1B6E32B18();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

unint64_t sub_1B6CEE454(unint64_t result)
{
  if (result >= 9) {
    return 9;
  }
  return result;
}

unint64_t sub_1B6CEE464()
{
  unint64_t result = qword_1E9DD8660;
  if (!qword_1E9DD8660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8660);
  }
  return result;
}

uint64_t destroy for GeneratedScriptCode()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GeneratedScriptCode(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GeneratedScriptCode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for GeneratedScriptCode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for GeneratedScriptCode()
{
  return &type metadata for GeneratedScriptCode;
}

uint64_t sub_1B6CEE648(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScriptCompileOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScriptCompileOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ScriptCompileOptions()
{
  return &type metadata for ScriptCompileOptions;
}

ValueMetadata *type metadata accessor for CodableVoid()
{
  return &type metadata for CodableVoid;
}

uint64_t type metadata accessor for ScriptStateRestoration()
{
  return sub_1B62C36EC();
}

void sub_1B6CEE770()
{
  if (!qword_1E9DD8668)
  {
    sub_1B6CEE7CC();
    unint64_t v0 = sub_1B6E33038();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD8668);
    }
  }
}

unint64_t sub_1B6CEE7CC()
{
  unint64_t result = qword_1E9DD8670;
  if (!qword_1E9DD8670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8670);
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableVoid.CodingKeys()
{
  return &type metadata for CodableVoid.CodingKeys;
}

unint64_t sub_1B6CEE834()
{
  unint64_t result = qword_1E9DD8678;
  if (!qword_1E9DD8678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8678);
  }
  return result;
}

unint64_t sub_1B6CEE88C()
{
  unint64_t result = qword_1E9DD8680;
  if (!qword_1E9DD8680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8680);
  }
  return result;
}

unint64_t sub_1B6CEE8E8@<X0>(unint64_t result@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v4 = result;
  int64x2_t v6 = 0uLL;
  if (HIDWORD(result) || result != -1)
  {
    unint64_t result = sub_1B62EC0CC((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA160, result);
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1B695D94C(v4, (uint64_t)&v37);
      uint64_t v19 = v51;
      if (v51)
      {
        unint64_t v7 = v37;
        uint64_t v8 = v38;
        uint64_t v9 = v41;
        uint64_t v11 = v43;
        uint64_t v12 = v44;
        uint64_t v13 = v45;
        uint64_t v14 = v46;
        uint64_t v15 = v47;
        uint64_t v16 = v48;
        uint64_t v17 = v49;
        if (v37)
        {
          if (v40)
          {
            uint64_t v10 = v42 & 0x1FFFF;
            uint64_t v18 = v50;
            int64x2_t v6 = vdupq_n_s64(1uLL);
            v6.i64[0] = v39;
            goto LABEL_18;
          }
        }
        else if (v40)
        {
          unint64_t result = sub_1B6657748(0, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51);
          goto LABEL_16;
        }
        uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        unint64_t v37 = 0;
        uint64_t v38 = 0xE000000000000000;
        uint64_t v29 = v7;
        uint64_t v30 = v39;
        uint64_t v32 = v8;
        uint64_t v33 = v42;
        uint64_t v34 = v41;
        uint64_t v35 = v43;
        uint64_t v36 = v44;
        uint64_t v31 = v40;
        uint64_t v28 = v50;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        unint64_t v37 = 0x2065727574786554;
        uint64_t v38 = 0xE800000000000000;
        sub_1B681F698();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        unint64_t v25 = v37;
        uint64_t v26 = v38;
        uint64_t v27 = sub_1B6E32148();
        unint64_t v37 = 0;
        (*(void (**)(uint64_t, unint64_t *, unint64_t, uint64_t))(*(void *)v24 + 88))(v27, &v37, v25, v26);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t result = sub_1B6657748(v29, v32, v30, v31, v34, v33, v35, v36, v13, v14, v15, v16, v17, v28, v19);
      }
      else
      {
        unint64_t result = sub_1B631EA84(v4);
        if (result)
        {
          uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
          unint64_t v37 = 0;
          uint64_t v38 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          unint64_t v37 = 0xD00000000000001ALL;
          uint64_t v38 = 0x80000001B6F524F0;
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_retain();
          sub_1B636A9A0(v4);
          swift_release();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          unint64_t v21 = v37;
          uint64_t v22 = v38;
          uint64_t v23 = sub_1B6E32148();
          unint64_t v37 = 0;
          (*(void (**)(uint64_t, unint64_t *, unint64_t, uint64_t))(*(void *)v20 + 88))(v23, &v37, v21, v22);
          swift_release();
          swift_bridgeObjectRelease();
          sub_1B6BF914C(v4, v3);
          unint64_t result = sub_1B695D604(v4);
          unint64_t v7 = 0;
          if (BYTE3(result) == 2 || result != 1)
          {
            uint64_t v8 = 0;
            uint64_t v9 = 0;
            uint64_t v10 = 0;
            uint64_t v11 = 0;
            uint64_t v12 = 0;
            uint64_t v13 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            uint64_t v16 = 0;
            uint64_t v17 = 0;
            uint64_t v18 = 0;
            uint64_t v19 = 0;
            goto LABEL_17;
          }
          unint64_t result = sub_1B62E364C((uint64_t)&type metadata for TextureLoadRequestCPU, (uint64_t)&off_1F0F8B740, v4);
        }
      }
    }
LABEL_16:
    unint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
LABEL_17:
    int64x2_t v6 = 0uLL;
    goto LABEL_18;
  }
  unint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
LABEL_18:
  a2->i64[0] = v7;
  a2->i64[1] = v8;
  a2[1] = v6;
  a2[2].i64[0] = v9;
  a2[2].i64[1] = v10;
  a2[3].i64[0] = v11;
  a2[3].i64[1] = v12;
  a2[4].i64[0] = v13;
  a2[4].i64[1] = v14;
  a2[5].i64[0] = v15;
  a2[5].i64[1] = v16;
  a2[6].i64[0] = v17;
  a2[6].i64[1] = v18;
  a2[7].i64[0] = v19;
  return result;
}

uint64_t sub_1B6CEED50()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[4];
  if (v2)
  {
    uint64_t v3 = v1[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = v1[2];
    uint64_t v5 = v1[3];
    unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8);
    id v8 = v2;
    swift_bridgeObjectRetain();
    v7(v6, v5, ObjectType, v3);
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    int v9 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v11[0] = 0;
    swift_retain();
    sub_1B6B33E34(v9, v11, 0, 0xE000000000000000);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1B6E30E48();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CEEF60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  id v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B6E30E58();
  sub_1B63AC900(v9, v10);
  uint64_t v11 = (void *)v1[4];
  uint64_t v12 = v2[5];
  uint64_t v41 = a1;
  if (v11
    && (uint64_t v13 = (objc_class *)type metadata accessor for AbsolutePathStorage(0), (v14 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v16(v8, a1, v4);
    uint64_t v17 = *(void **)(v15 + OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver);
    uint64_t v40 = *(void *)(v15 + OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver + 8);
    uint64_t v18 = (char *)objc_allocWithZone(v13);
    v16(&v18[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_absoluteURL], (uint64_t)v8, v4);
    uint64_t v19 = &v18[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver];
    uint64_t v20 = v40;
    *(void *)uint64_t v19 = v17;
    *((void *)v19 + 1) = v20;
    v42.receiver = v18;
    v42.super_class = v13;
    id v21 = v11;
    id v22 = v17;
    id v23 = objc_msgSendSuper2(&v42, sel_init);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    unint64_t v25 = (void *)v2[4];
    v2[4] = (uint64_t)v23;
    v2[5] = (uint64_t)&off_1F0F7C0C8;
    id v26 = v23;

    uint64_t v27 = sub_1B6E30E18();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v30(v8, a1, v4);
    uint64_t v31 = (objc_class *)type metadata accessor for AbsolutePathStorage(0);
    uint64_t v32 = (char *)objc_allocWithZone(v31);
    v30(&v32[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_absoluteURL], (uint64_t)v8, v4);
    uint64_t v33 = &v32[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver];
    *(void *)uint64_t v33 = v11;
    *((void *)v33 + 1) = v12;
    v43.receiver = v32;
    v43.super_class = v31;
    id v34 = v11;
    id v35 = objc_msgSendSuper2(&v43, sel_init);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    uint64_t v36 = (void *)v2[4];
    v2[4] = (uint64_t)v35;
    v2[5] = (uint64_t)&off_1F0F7C0C8;
    id v37 = v35;

    uint64_t v27 = sub_1B6E30E18();
    uint64_t v29 = v38;
  }
  swift_bridgeObjectRelease();
  *uint64_t v2 = v27;
  v2[1] = v29;
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v41, v4);
}

uint64_t sub_1B6CEF25C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 16))(&v4);
  uint64_t v2 = v4;
  long long v8 = v5;
  sub_1B62C7BF4((uint64_t)&v8);
  sub_1B674C934((uint64_t)&v6, (uint64_t)v7);
  sub_1B6811278(v7);
  return v2;
}

unint64_t sub_1B6CEF2D4()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = sub_1B666CA28(v0);
  swift_bridgeObjectRelease();
  return v1;
}

BOOL sub_1B6CEF320(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  return (a4 & 0xFF00) == 256;
}

BOOL sub_1B6CEF330(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  return (a4 & 0xFF00) == 512;
}

uint64_t sub_1B6CEF340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62CAAD8(a1, (uint64_t)v22);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      uint64_t v4 = v14;
LABEL_7:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
LABEL_8:
      char v12 = 15;
      goto LABEL_9;
    }
    if (swift_dynamicCast())
    {
      LODWORD(v4) = (__int16)v14;
      goto LABEL_3;
    }
    if (swift_dynamicCast()) {
      goto LABEL_13;
    }
    if (swift_dynamicCast())
    {
      uint64_t v4 = (unsigned __int16)v14;
      goto LABEL_7;
    }
    if (swift_dynamicCast())
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      goto LABEL_8;
    }
    if (swift_dynamicCast())
    {
LABEL_13:
      uint64_t v4 = v14;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      uint64_t v4 = v14;
      goto LABEL_7;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    if (swift_dynamicCast())
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      char v12 = 13;
      goto LABEL_9;
    }
    type metadata accessor for simd_float2x2(0);
    if (swift_dynamicCast())
    {
LABEL_26:
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      uint64_t v5 = v15;
      char v12 = 4;
      goto LABEL_9;
    }
    type metadata accessor for simd_float2x3(0);
    if (swift_dynamicCast()) {
      goto LABEL_28;
    }
    type metadata accessor for simd_float2x4(0);
    if (swift_dynamicCast())
    {
LABEL_30:
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      uint64_t v5 = v15;
      char v12 = 6;
      goto LABEL_31;
    }
    type metadata accessor for simd_float3x2(0);
    if (swift_dynamicCast())
    {
LABEL_33:
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      uint64_t v5 = v15;
      uint64_t v6 = v16;
      char v12 = 7;
      goto LABEL_9;
    }
    type metadata accessor for simd_float3x3(0);
    if (swift_dynamicCast()) {
      goto LABEL_35;
    }
    type metadata accessor for simd_float3x4(0);
    if (swift_dynamicCast())
    {
LABEL_37:
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      uint64_t v5 = v15;
      uint64_t v6 = v16;
      uint64_t v7 = v17;
      char v12 = 9;
      goto LABEL_38;
    }
    type metadata accessor for simd_float4x2(0);
    if (swift_dynamicCast())
    {
LABEL_40:
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v4 = v14;
      uint64_t v5 = v15;
      char v12 = 10;
      goto LABEL_31;
    }
    type metadata accessor for simd_float4x3(0);
    if (swift_dynamicCast()) {
      goto LABEL_42;
    }
    type metadata accessor for simd_float4x4(0);
    if (!swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        uint64_t v5 = 0;
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        char v12 = 0;
        uint64_t v4 = v14;
        goto LABEL_9;
      }
      sub_1B639600C(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      if (swift_dynamicCast())
      {
        uint64_t v5 = 0;
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v4 = v14;
        char v12 = 1;
        goto LABEL_9;
      }
      sub_1B639600C(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      if (swift_dynamicCast())
      {
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v4 = v14;
        uint64_t v5 = v15;
        char v12 = 2;
        goto LABEL_9;
      }
      sub_1B639600C(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      if (swift_dynamicCast())
      {
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v4 = v14;
        uint64_t v5 = v15;
        char v12 = 3;
        goto LABEL_9;
      }
      if (swift_dynamicCast()) {
        goto LABEL_26;
      }
      if (swift_dynamicCast()) {
        goto LABEL_33;
      }
      if (swift_dynamicCast()) {
        goto LABEL_40;
      }
      if (swift_dynamicCast())
      {
LABEL_28:
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v4 = v14;
        uint64_t v5 = v15;
        char v12 = 5;
LABEL_31:
        uint64_t v6 = v16;
        uint64_t v7 = v17;
        goto LABEL_9;
      }
      if (swift_dynamicCast())
      {
LABEL_35:
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v4 = v14;
        uint64_t v5 = v15;
        uint64_t v6 = v16;
        uint64_t v7 = v17;
        char v12 = 8;
LABEL_38:
        uint64_t v8 = v18;
        uint64_t v9 = v19;
        goto LABEL_9;
      }
      if (swift_dynamicCast())
      {
LABEL_42:
        uint64_t v4 = v14;
        uint64_t v5 = v15;
        uint64_t v6 = v16;
        uint64_t v7 = v17;
        uint64_t v8 = v18;
        uint64_t v9 = v19;
        char v12 = 11;
LABEL_45:
        uint64_t v10 = v20;
        uint64_t v11 = v21;
        goto LABEL_9;
      }
      if (swift_dynamicCast()) {
        goto LABEL_30;
      }
      if (swift_dynamicCast()) {
        goto LABEL_37;
      }
      if (!swift_dynamicCast())
      {
        uint64_t v4 = 0;
        uint64_t v5 = 0;
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        char v12 = -1;
        goto LABEL_9;
      }
    }
    uint64_t v4 = v14;
    uint64_t v5 = v15;
    uint64_t v6 = v16;
    uint64_t v7 = v17;
    uint64_t v8 = v18;
    uint64_t v9 = v19;
    char v12 = 12;
    goto LABEL_45;
  }
  LODWORD(v4) = (char)v14;
LABEL_3:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v4 = v4;
LABEL_4:
  char v12 = 14;
LABEL_9:
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v22);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(unsigned char *)(a2 + 64) = v12;
  return result;
}

uint64_t sub_1B6CEFBC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v7 = a7;
    uint64_t v8 = (uint64_t *)(result + 48 * a3 + 40);
    uint64_t v9 = (void *)(a4 + 56 * a6);
    do
    {
      uint64_t v10 = *(v8 - 4);
      uint64_t v17 = *(v8 - 3);
      uint64_t v18 = *(v8 - 5);
      uint64_t v12 = *(v8 - 2);
      uint64_t v11 = (void *)*(v8 - 1);
      uint64_t v13 = *v8;
      v8 += 6;
      uint64_t v16 = (void *)v9[4];
      id v14 = v11;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *uint64_t v9 = v18;
      v9[1] = v10;
      v9[2] = v17;
      v9[3] = v12;
      v9[4] = v11;
      void v9[5] = v13;
      sub_1B6C620DC();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_arrayDestroy();
      v9 += 7;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1B6CEFCDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v7 = a7;
    uint64_t v8 = result + 48 * a3;
    uint64_t v9 = (void **)(a4 + 56 * a6 + 32);
    do
    {
      uint64_t v10 = *(void **)(v8 + 8);
      uint64_t v11 = *(void **)(v8 + 16);
      uint64_t v12 = *(void **)(v8 + 24);
      uint64_t v13 = *v9;
      long long v14 = *(_OWORD *)(v8 + 32);
      *(v9 - 4) = *(void **)v8;
      *(v9 - 3) = v10;
      *(_OWORD *)uint64_t v9 = v14;
      *(v9 - 2) = v11;
      *(v9 - 1) = v12;
      id v15 = (id)v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t result = swift_arrayDestroy();
      v8 += 48;
      v9 += 7;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1B6CEFDAC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v7 = a7;
    uint64_t v8 = result + 48 * a3;
    uint64_t v9 = (void **)(a4 + (a6 << 6) + 32);
    do
    {
      uint64_t v10 = *(void **)(v8 + 8);
      uint64_t v11 = *(void **)(v8 + 16);
      uint64_t v12 = *(void **)(v8 + 24);
      uint64_t v13 = *v9;
      long long v14 = *(_OWORD *)(v8 + 32);
      *(v9 - 4) = *(void **)v8;
      *(v9 - 3) = v10;
      *(_OWORD *)uint64_t v9 = v14;
      *(v9 - 2) = v11;
      *(v9 - 1) = v12;
      id v15 = (id)v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t result = swift_arrayDestroy();
      v8 += 48;
      v9 += 8;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1B6CEFE78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v7 = a7;
    uint64_t v8 = (uint64_t *)(result + 48 * a3);
    uint64_t v9 = (void *)(a4 + 48 * a6 + 24);
    do
    {
      uint64_t v10 = v8[1];
      uint64_t v12 = v8[2];
      uint64_t v11 = v8[3];
      uint64_t v13 = (void *)v8[4];
      uint64_t v16 = v8[5];
      uint64_t v17 = *v8;
      long long v14 = (void *)v9[1];
      id v15 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(v9 - 3) = v17;
      *(v9 - 2) = v10;
      *(v9 - 1) = v12;
      *uint64_t v9 = v11;
      v9[1] = v13;
      v9[2] = v16;
      uint64_t result = swift_arrayDestroy();
      v8 += 6;
      v9 += 6;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1B6CEFF54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v7 = result + 56 * a3;
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t v9 = *(void *)(v7 + 16);
    uint64_t v10 = *(void *)(v7 + 24);
    uint64_t v11 = a4 + 48 * a6;
    long long v12 = *(_OWORD *)(v7 + 32);
    *(void *)uint64_t v11 = *(void *)v7;
    *(void *)(v11 + 8) = v8;
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v10;
    *(_OWORD *)(v11 + 32) = v12;
    uint64_t v13 = (void *)v12;
    uint64_t v14 = a7 - 1;
    if (a7 != 1)
    {
      uint64_t v15 = result + 56 * a3 + 56;
      uint64_t v16 = (_OWORD *)(a4 + 48 * a6 + 80);
      do
      {
        uint64_t v17 = *(void *)(v15 + 8);
        uint64_t v18 = *(void *)(v15 + 16);
        uint64_t v19 = *(void *)(v15 + 24);
        long long v22 = *(_OWORD *)(v15 + 32);
        *((void *)v16 - 4) = *(void *)v15;
        *((void *)v16 - 3) = v17;
        *((void *)v16 - 2) = v18;
        *((void *)v16 - 1) = v19;
        *uint64_t v16 = v22;
        v16 += 3;
        id v20 = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = (void *)v22;
        v15 += 56;
        --v14;
      }
      while (v14);
    }
    id v21 = v13;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B6CF005C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v7 = result + (a3 << 6);
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t v9 = *(void *)(v7 + 16);
    uint64_t v10 = *(void *)(v7 + 24);
    uint64_t v11 = a4 + 48 * a6;
    long long v12 = *(_OWORD *)(v7 + 32);
    *(void *)uint64_t v11 = *(void *)v7;
    *(void *)(v11 + 8) = v8;
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v10;
    *(_OWORD *)(v11 + 32) = v12;
    uint64_t v13 = (void *)v12;
    uint64_t v14 = a7 - 1;
    if (a7 != 1)
    {
      uint64_t v15 = v7 + 64;
      uint64_t v16 = (_OWORD *)(a4 + 48 * a6 + 80);
      do
      {
        uint64_t v17 = *(void *)(v15 + 8);
        uint64_t v18 = *(void *)(v15 + 16);
        uint64_t v19 = *(void *)(v15 + 24);
        long long v22 = *(_OWORD *)(v15 + 32);
        *((void *)v16 - 4) = *(void *)v15;
        *((void *)v16 - 3) = v17;
        *((void *)v16 - 2) = v18;
        *((void *)v16 - 1) = v19;
        *uint64_t v16 = v22;
        v16 += 3;
        id v20 = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = (void *)v22;
        v15 += 64;
        --v14;
      }
      while (v14);
    }
    id v21 = v13;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B6CF0158(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v7 = result + 48 * a3;
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t v9 = *(void *)(v7 + 16);
    uint64_t v10 = *(void *)(v7 + 24);
    uint64_t v11 = a4 + 48 * a6;
    long long v12 = *(_OWORD *)(v7 + 32);
    *(void *)uint64_t v11 = *(void *)v7;
    *(void *)(v11 + 8) = v8;
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v10;
    *(_OWORD *)(v11 + 32) = v12;
    uint64_t v13 = (void *)v12;
    uint64_t v14 = a7 - 1;
    if (a7 != 1)
    {
      uint64_t v15 = 0;
      uint64_t v16 = result + 48 * a3;
      uint64_t v17 = a4 + 48 * a6;
      do
      {
        uint64_t v18 = *(void *)(v16 + v15 + 56);
        uint64_t v19 = *(void *)(v16 + v15 + 64);
        uint64_t v20 = *(void *)(v16 + v15 + 72);
        uint64_t v21 = v17 + v15;
        long long v24 = *(_OWORD *)(v16 + v15 + 80);
        *(void *)(v21 + 48) = *(void *)(v16 + v15 + 48);
        *(void *)(v21 + 56) = v18;
        *(void *)(v21 + 64) = v19;
        *(void *)(v21 + 72) = v20;
        *(_OWORD *)(v21 + 80) = v24;
        id v22 = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = (void *)v24;
        v15 += 48;
        --v14;
      }
      while (v14);
    }
    id v23 = v13;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B6CF025C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6CEFE78(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1B6CF0274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6CF0158(a1, a2, a3, a4, a5, a6, a7);
}

unint64_t sub_1B6CF028C(char a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t result = sub_1B6345398(*(void *)(v3 + 40), (uint64_t)&type metadata for HalfSizeLegacyPatch, v6);
  if ((v6[0] & 1) == 0)
  {
    v6[0] = &type metadata for HalfSizeLegacyPatch;
    v6[1] = &off_1F0F7C9D0;
    char v7 = 0;
    MEMORY[0x1F4188790](result, v5);
    swift_retain();
    sub_1B63932BC(a1 & 1, v3, (uint64_t (*)(uint64_t))sub_1B6393454);
    sub_1B6391400((uint64_t)v6);
    return swift_release();
  }
  return result;
}

unint64_t sub_1B6CF0394(char a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t result = sub_1B6345398(*(void *)(v3 + 40), (uint64_t)&type metadata for TextureCPURuntime, v6);
  if ((v6[0] & 1) == 0)
  {
    v6[0] = &type metadata for TextureCPURuntime;
    v6[1] = &off_1F0F74A68;
    char v7 = 0;
    MEMORY[0x1F4188790](result, v5);
    swift_retain();
    sub_1B63932BC(a1 & 1, v3, (uint64_t (*)(uint64_t))sub_1B6393454);
    sub_1B6391400((uint64_t)v6);
    return swift_release();
  }
  return result;
}

unint64_t sub_1B6CF049C(char a1)
{
  return sub_1B6CF0550(a1, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF04D8(char a1)
{
  return sub_1B6CF06A4(a1, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0514(char a1)
{
  return sub_1B6CF0550(a1, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0550(char a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  sub_1B6D0BA20(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 8);
  unint64_t result = sub_1B6345398(*(void *)(v10 + 40), v8, v13);
  if (LOBYTE(v13[0]) == 1)
  {
    v13[0] = v9;
    v13[1] = &off_1F0F61BF0;
    char v14 = 1;
    MEMORY[0x1F4188790](result, v12);
    swift_retain();
    sub_1B63932BC(a1 & 1, v10, a5);
    sub_1B6391400((uint64_t)v13);
    return swift_release();
  }
  return result;
}

unint64_t sub_1B6CF0668(char a1)
{
  return sub_1B6CF06A4(a1, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF06A4(char a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  sub_1B6D0BA20(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 8);
  unint64_t result = sub_1B6345398(*(void *)(v10 + 40), v8, v13);
  if (LOBYTE(v13[0]) == 1)
  {
    v13[0] = v9;
    v13[1] = &off_1F0F836B8;
    char v14 = 1;
    MEMORY[0x1F4188790](result, v12);
    swift_retain();
    sub_1B63932BC(a1 & 1, v10, a5);
    sub_1B6391400((uint64_t)v13);
    return swift_release();
  }
  return result;
}

unint64_t sub_1B6CF07BC(char a1)
{
  return sub_1B6CF0550(a1, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF07F8(char a1)
{
  return sub_1B6CF06A4(a1, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0834(char a1)
{
  return sub_1B6CF0550(a1, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0870(char a1)
{
  return sub_1B6CF06A4(a1, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF08AC(char a1)
{
  return sub_1B6CF0550(a1, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF08E8(char a1)
{
  return sub_1B6CF06A4(a1, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0924(char a1)
{
  return sub_1B6CF0550(a1, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0960(char a1)
{
  return sub_1B6CF06A4(a1, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF099C(char a1)
{
  return sub_1B6CF0550(a1, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF09D8(char a1)
{
  return sub_1B6CF06A4(a1, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0A14(char a1)
{
  return sub_1B6CF0550(a1, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0A50(char a1)
{
  return sub_1B6CF06A4(a1, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t))sub_1B6393454);
}

unint64_t sub_1B6CF0A8C(char a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t result = sub_1B6345398(*(void *)(v3 + 40), (uint64_t)&type metadata for TextureCPURuntime, v6);
  if (LOBYTE(v6[0]) == 1)
  {
    v6[0] = &type metadata for TextureCPURuntime;
    v6[1] = &off_1F0F74A68;
    char v7 = 1;
    MEMORY[0x1F4188790](result, v5);
    swift_retain();
    sub_1B63932BC(a1 & 1, v3, (uint64_t (*)(uint64_t))sub_1B6393454);
    sub_1B6391400((uint64_t)v6);
    return swift_release();
  }
  return result;
}

unint64_t sub_1B6CF0B98(char a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t result = sub_1B6345398(*(void *)(v3 + 40), (uint64_t)&type metadata for TextureGPURuntime, v6);
  if (LOBYTE(v6[0]) == 1)
  {
    v6[0] = &type metadata for TextureGPURuntime;
    v6[1] = &off_1F0F74BA8;
    char v7 = 1;
    MEMORY[0x1F4188790](result, v5);
    swift_retain();
    sub_1B63932BC(a1 & 1, v3, (uint64_t (*)(uint64_t))sub_1B6393454);
    sub_1B6391400((uint64_t)v6);
    return swift_release();
  }
  return result;
}

void *sub_1B6CF0CB4(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      uint64_t v2 = *(void *)(v1 + 240);
      swift_retain();
      uint64_t v3 = sub_1B6BCB544(0xD000000000000015, 0x80000001B6F525F0, v2, v1);
      break;
    case 2:
      uint64_t v5 = *(void *)(v1 + 240);
      swift_retain();
      uint64_t v3 = sub_1B6BCB190(0xD000000000000015, 0x80000001B6F45BA0, v5, v1);
      break;
    case 5:
      uint64_t v6 = *(void *)(v1 + 240);
      swift_retain();
      uint64_t v3 = sub_1B6BCB574(0xD000000000000017, 0x80000001B6F525B0, v6, v1);
      break;
    case 7:
      uint64_t v4 = *(void *)(v1 + 240);
      swift_retain();
      uint64_t v3 = sub_1B6BCB55C(0xD000000000000015, 0x80000001B6F525D0, v4, v1);
      break;
    default:
      sub_1B6E328C8();
      sub_1B6E31948();
      type metadata accessor for MTLTextureType(0);
      sub_1B6E32B18();
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B6CF0E8CLL);
  }
  char v7 = v3;
  swift_release();
  return v7;
}

uint64_t sub_1B6CF0EAC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B6CF0F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5[13] = a1;
  v5[14] = a2;
  v5[15] = a3;
  v5[16] = a4;
  uint64_t v10 = sub_1B6CF9014();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v5[19] = v10;
  v5[20] = v12;
  return result;
}

BOOL sub_1B6CF1008(void *a1)
{
  id v3 = (id)*v1;
  if (objc_msgSend(a1, sel_width) != v3) {
    return 0;
  }
  id v4 = (id)v1[1];
  if (objc_msgSend(a1, sel_height) != v4) {
    return 0;
  }
  uint64_t v5 = *((unsigned __int8 *)v1 + 8);
  if ((uint64_t)objc_msgSend(a1, sel_mipmapLevelCount) < v5) {
    return 0;
  }
  id v6 = (id)*((void *)v1 + 2);
  if (v6 != objc_msgSend(a1, sel_pixelFormat)) {
    return 0;
  }
  id v7 = (id)*((void *)v1 + 3);
  if (v7 != objc_msgSend(a1, sel_textureType)) {
    return 0;
  }
  id v8 = (id)v1[3];
  if (objc_msgSend(a1, sel_arrayLength) != v8) {
    return 0;
  }
  id v9 = (id)*((void *)v1 + 4);
  return v9 == objc_msgSend(a1, sel_storageMode);
}

uint64_t sub_1B6CF1100(__n128 a1)
{
  return sub_1B6CF1270(2, a1);
}

uint64_t sub_1B6CF115C(__n128 a1)
{
  return sub_1B6CF1270(3, a1);
}

uint64_t sub_1B6CF11B8(__n128 a1)
{
  return sub_1B6CF1270(0, a1);
}

uint64_t sub_1B6CF1214(__n128 a1)
{
  return sub_1B6CF1270(1, a1);
}

uint64_t sub_1B6CF1270(char a1, __n128 a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v4 = *(id *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  if (objc_msgSend(*(id *)v2, sel_storageMode) == (id)2)
  {
    uint64_t v7 = 0;
  }
  else
  {
    id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v9 = v4;
    uint64_t v7 = (uint64_t)v8 + v5;
  }
  v6.i32[0] = *(unsigned __int16 *)(v2 + 32);
  v6.i32[1] = *(unsigned __int16 *)(v2 + 34);
  v6.i32[2] = *(unsigned __int16 *)(v2 + 36);
  int32x4_t v12 = v6;
  char v10 = sub_1B6AFECA0(*(void *)(v2 + 48));
  vfx_sampler3d_make(v7, v10, a1, 1, (uint64_t)&v14, v12);
  return v15(&v14, a2);
}

unint64_t sub_1B6CF1390(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000016;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000017;
  }
  sub_1B6E31948();
  return v4;
}

unint64_t sub_1B6CF1448()
{
  return sub_1B6CF1390(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_1B6CF147C(char a1)
{
  unint64_t result = 0x5465727574786574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F466C65786970;
      break;
    case 2:
      unint64_t result = 0x6874646977;
      break;
    case 3:
      unint64_t result = 0x746867696568;
      break;
    case 4:
      unint64_t result = 0x6874706564;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x6F43656C706D6173;
      break;
    case 7:
      unint64_t result = 0x6E654C7961727261;
      break;
    case 8:
      unint64_t result = 0x6567617375;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0x656C7A7A697773;
      break;
    case 11:
      unint64_t result = 0x4D656761726F7473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B6CF1620(char a1)
{
  unint64_t result = 0x5465727574786574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F466C65786970;
      break;
    case 2:
      unint64_t result = 0x6874646977;
      break;
    case 3:
      unint64_t result = 0x746867696568;
      break;
    case 4:
      unint64_t result = 0x6874706564;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x6F43656C706D6173;
      break;
    case 7:
      unint64_t result = 0x6E654C7961727261;
      break;
    case 8:
      unint64_t result = 0x656372756F736572;
      break;
    case 9:
      unint64_t result = 0x6567617375;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0x656C7A7A697773;
      break;
    case 12:
      unint64_t result = 0x4D656761726F7473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B6CF17EC(char a1)
{
  unint64_t result = 0x5465727574786574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F466C65786970;
      break;
    case 2:
      unint64_t result = 0x6874646977;
      break;
    case 3:
      unint64_t result = 0x746867696568;
      break;
    case 4:
      unint64_t result = 0x6874706564;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x6F43656C706D6173;
      break;
    case 7:
      unint64_t result = 0x6E654C7961727261;
      break;
    case 8:
      unint64_t result = 0x656372756F736572;
      break;
    case 9:
      unint64_t result = 0x6567617375;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0x656C7A7A697773;
      break;
    case 12:
      unint64_t result = 0x4D656761726F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6CF19B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6CF1BE8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B6CF147C);
}

uint64_t sub_1B6CF19D0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF1A20()
{
  return sub_1B6E33928();
}

uint64_t sub_1B6CF1A58()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF1AA4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6D02B60(*a1);
  *a2 = result;
  return result;
}

void sub_1B6CF1AD0(void *a1@<X8>)
{
  *a1 = qword_1B6EC4B88[*v1];
}

unint64_t sub_1B6CF1AE8()
{
  return sub_1B6CF147C(*v0);
}

uint64_t sub_1B6CF1AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D02490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6CF1B18()
{
  return qword_1B6EC4B88[*v0];
}

uint64_t sub_1B6CF1B30@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6D02B60(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B6CF1B58(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CE78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF1B94(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CE78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF1BD0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6CF1BE8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B6CF17EC);
}

uint64_t sub_1B6CF1BE8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1B6CF1C80()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6CF1620(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6CF1CE4()
{
  sub_1B6CF1620(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CF1D38()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6CF1620(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6CF1D98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D0298C();
  *a1 = result;
  return result;
}

unint64_t sub_1B6CF1DC8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B6CF1620(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B6CF1DF4()
{
  return sub_1B6CF17EC(*v0);
}

uint64_t sub_1B6CF1DFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D0298C();
  *a1 = result;
  return result;
}

uint64_t sub_1B6CF1E24(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CECC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF1E60(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CECC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF1E9C(void *a1)
{
  unint64_t v2 = v1;
  sub_1B639600C(0, (unint64_t *)&unk_1E9DD8A00, (uint64_t (*)(void))sub_1B6D0CE78, (uint64_t)&type metadata for TextureDescriptorCoder.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0CE78();
  sub_1B6E33A88();
  uint64_t v23 = *v2;
  uint64_t v22 = v2[1];
  uint64_t v21 = v2[2];
  uint64_t v18 = v2[3];
  uint64_t v20 = *((unsigned __int8 *)v2 + 8);
  uint64_t v19 = *((unsigned __int8 *)v2 + 9);
  char v27 = *((unsigned char *)v2 + 10);
  uint64_t v10 = *((void *)v2 + 2);
  unint64_t v11 = *((void *)v2 + 4);
  uint64_t v12 = *((void *)v2 + 5);
  int v13 = *((_DWORD *)v2 + 18);
  uint64_t v25 = *((void *)v2 + 3);
  char v28 = 0;
  type metadata accessor for MTLTextureType(0);
  sub_1B6D0ACFC(&qword_1E9DD6818, type metadata accessor for MTLTextureType);
  uint64_t v14 = v24;
  sub_1B6E32FA8();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  int v26 = v13;
  uint64_t v24 = v6;
  uint64_t v25 = v10;
  unint64_t v16 = v11;
  uint64_t v17 = v12;
  char v28 = 1;
  type metadata accessor for MTLPixelFormat(0);
  sub_1B6D0ACFC(&qword_1E9DD8A10, type metadata accessor for MTLPixelFormat);
  sub_1B6E32FA8();
  LOBYTE(v25) = 2;
  sub_1B6E32F88();
  LOBYTE(v25) = 3;
  sub_1B6E32F88();
  LOBYTE(v25) = 4;
  sub_1B6E32F88();
  LOBYTE(v25) = 5;
  sub_1B6E32F88();
  LOBYTE(v25) = 6;
  sub_1B6E32F88();
  LOBYTE(v25) = 7;
  sub_1B6E32F88();
  uint64_t v25 = v17;
  char v28 = 8;
  type metadata accessor for MTLTextureUsage(0);
  sub_1B6D0ACFC(&qword_1E9DD8A18, type metadata accessor for MTLTextureUsage);
  sub_1B6E32FA8();
  LOBYTE(v25) = 9;
  sub_1B6E32F58();
  LODWORD(v25) = v26;
  char v28 = 10;
  type metadata accessor for MTLTextureSwizzleChannels(0);
  sub_1B6D0ACFC(&qword_1E9DD8A20, type metadata accessor for MTLTextureSwizzleChannels);
  sub_1B6E32FA8();
  if (v16 >= 0x100)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    LOBYTE(v25) = 11;
    sub_1B6E32FF8();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v9, v5);
  }
  return result;
}

__n128 sub_1B6CF2400@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6D073B4(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1B6CF244C(void *a1)
{
  return sub_1B6CF1E9C(a1);
}

uint64_t sub_1B6CF2464(__int16 a1)
{
  if (a1)
  {
    sub_1B6E31948();
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  sub_1B6E31948();
  if ((a1 & 4) != 0) {
LABEL_4:
  }
    sub_1B6E31948();
LABEL_5:
  if ((a1 & 8) != 0)
  {
    sub_1B6E31948();
    if ((a1 & 0x10) == 0)
    {
LABEL_7:
      if ((a1 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
  }
  else if ((a1 & 0x10) == 0)
  {
    goto LABEL_7;
  }
  sub_1B6E31948();
  if ((a1 & 0x20) == 0)
  {
LABEL_8:
    if ((a1 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  sub_1B6E31948();
  if ((a1 & 0x40) == 0)
  {
LABEL_9:
    if ((a1 & 0x80) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    sub_1B6E31948();
    if ((a1 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_19:
  sub_1B6E31948();
  if ((a1 & 0x80) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((a1 & 0x100) != 0) {
LABEL_11:
  }
    sub_1B6E31948();
LABEL_12:
  uint64_t v2 = sub_1B6D48258();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1BA9B34C0](v2, v4, v6, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B6CF2678()
{
  return sub_1B6CF2464(*v0);
}

uint64_t sub_1B6CF2680()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B6CF26E0()
{
  return sub_1B6E31B08();
}

uint64_t sub_1B6CF2730()
{
  int v1 = *(char *)(v0 + 16);
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  if ((v1 & 0x80000000) == 0) {
    sub_1B6E33938();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B6CF27D8()
{
  if (*(char *)(v0 + 16) < 0)
  {
    sub_1B6E33928();
    sub_1B6E33928();
    return sub_1B6E33928();
  }
  else
  {
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33928();
    return sub_1B6E33938();
  }
}

uint64_t sub_1B6CF2850()
{
  int v1 = *(char *)(v0 + 16);
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  if ((v1 & 0x80000000) == 0) {
    sub_1B6E33938();
  }
  return sub_1B6E33988();
}

BOOL sub_1B6CF28F4(uint64_t a1, uint64_t a2)
{
  return sub_1B6D01688(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

char *sub_1B6CF2910()
{
  sub_1B62E17B4();
  uint64_t v44 = v1;
  MEMORY[0x1F4188790](v1, v2);
  objc_super v43 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1B6E31098();
  MEMORY[0x1F4188790](v42, v4);
  uint64_t v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v8 = 0x20u;
  uint64_t v36 = v0;
  uint64_t v9 = *v0;
  long long v39 = xmmword_1B6E77050;
  unint64_t v38 = 0x80000001B6F52610;
  uint64_t v37 = v9;
  do
  {
    uint64_t v11 = *(void *)((char *)&unk_1F0F66F40 + v8);
    if ((v11 & ~v9) == 0)
    {
      uint64_t v12 = &type metadata for TextureRequireCPURepresentation;
      int v13 = &off_1F0F9AEA8;
      switch(v11)
      {
        case 1:
          break;
        case 2:
          uint64_t v12 = &type metadata for TextureRequireGPURepresentation;
          int v13 = &off_1F0F9AF80;
          break;
        case 3:
        case 5:
        case 6:
        case 7:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 31:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
          goto LABEL_10;
        case 4:
          uint64_t v12 = &type metadata for TextureRequireNonSRGB;
          int v13 = &off_1F0F8BC28;
          break;
        case 8:
          uint64_t v12 = &type metadata for TextureRequireUnpremultiply;
          int v13 = &off_1F0F985A8;
          break;
        case 16:
          uint64_t v12 = &type metadata for TextureRequireCubemap;
          int v13 = &off_1F0F8BB50;
          break;
        case 32:
          uint64_t v12 = &type metadata for TextureRequireMipmap;
          int v13 = &off_1F0F84158;
          break;
        case 64:
          uint64_t v12 = &type metadata for TextureRequireMipmapGeneration;
          int v13 = &off_1F0F9AA80;
          break;
        default:
          if (v11 == 128)
          {
            uint64_t v12 = &type metadata for TextureRequirePremultiplyWithLinearAlpha;
            int v13 = &off_1F0F9DE18;
          }
          else if (v11 == 256)
          {
            uint64_t v12 = &type metadata for TextureRequireIOSurface;
            int v13 = &off_1F0F91838;
          }
          else
          {
LABEL_10:
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v46 = qword_1EB997FD0;
            swift_retain();
            char v14 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v15 = qword_1EB997FF0;
            uint64_t v16 = qword_1EB985528;
            swift_retain();
            if (v16 != -1) {
              swift_once();
            }
            sub_1B62C6100(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v17 = swift_allocObject();
            *(_OWORD *)(v17 + 16) = v39;
            *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v17 + 64) = sub_1B678615C();
            *(void *)(v17 + 32) = 0xD000000000000016;
            unint64_t v18 = v38;
            *(void *)(v17 + 40) = v38;
            sub_1B6E31258();
            swift_bridgeObjectRelease();
            swift_retain();
            uint64_t v45 = v15;
            uint64_t v19 = v41;
            sub_1B6E31088();
            uint64_t v20 = v44[12];
            uint64_t v21 = v44[16];
            char v22 = v14;
            uint64_t v23 = (uint64_t)v43;
            uint64_t v24 = &v43[v44[20]];
            (*v40)(v43, v19, v42);
            *(unsigned char *)(v23 + v20) = v22;
            *(void *)(v23 + v21) = 0;
            *(void *)uint64_t v24 = 0xD000000000000016;
            *((void *)v24 + 1) = v18;
            sub_1B6E31368();
            swift_release();
            sub_1B62C0094(v23, (uint64_t (*)(void))sub_1B62E17B4);
            swift_release();
            swift_release();
            uint64_t v12 = &type metadata for NullEntityComponent;
            int v13 = &off_1F0F7CFF8;
            uint64_t v9 = v37;
          }
          break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1B62D1B88(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      unint64_t v26 = *((void *)v7 + 2);
      unint64_t v25 = *((void *)v7 + 3);
      if (v26 >= v25 >> 1) {
        uint64_t v7 = sub_1B62D1B88(v25 > 1, v26 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v26 + 1;
      uint64_t v10 = &v7[16 * v26];
      *((void *)v10 + 4) = v12;
      *((void *)v10 + 5) = v13;
    }
    v8 += 8;
  }
  while (v8 != 104);
  char v27 = v36;
  sub_1B6355BE8((uint64_t)(v36 + 1), (uint64_t)v48, (unint64_t *)&unk_1EB97D6A8, (uint64_t)&type metadata for TextureOptions.SizeModification);
  sub_1B6355BE8((uint64_t)v48, (uint64_t)&v49, (unint64_t *)&unk_1EB97D6A8, (uint64_t)&type metadata for TextureOptions.SizeModification);
  if (v50 <= 0xFDu)
  {
    sub_1B6D09CA4(&v49, (uint64_t)&v51);
    sub_1B6D09CA4(&v51, (uint64_t)v52);
    if (v53 < 0)
    {
      v53 &= ~0x80u;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1B62D1B88(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      unint64_t v29 = *((void *)v7 + 2);
      unint64_t v28 = *((void *)v7 + 3);
      if (v29 >= v28 >> 1) {
        uint64_t v7 = sub_1B62D1B88(v28 > 1, v29 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v29 + 1;
      uint64_t v30 = &v7[16 * v29];
      *((void *)v30 + 4) = &type metadata for TextureRequireSizeLimit;
      *((void *)v30 + 5) = &off_1F0F91A38;
    }
  }
  sub_1B6355BE8((uint64_t)(v27 + 4), (uint64_t)v47, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  sub_1B6355BE8((uint64_t)v47, (uint64_t)v54, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  if (v54[25] << 8 != 768)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1B62D1B88(0, *((void *)v7 + 2) + 1, 1, v7);
    }
    unint64_t v32 = *((void *)v7 + 2);
    unint64_t v31 = *((void *)v7 + 3);
    if (v32 >= v31 >> 1) {
      uint64_t v7 = sub_1B62D1B88(v31 > 1, v32 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v32 + 1;
    uint64_t v33 = &v7[16 * v32];
    *((void *)v33 + 4) = &type metadata for TextureRequireAnimationRepresentation;
    *((void *)v33 + 5) = &off_1F0F9D410;
  }
  return v7;
}

void *sub_1B6CF3114@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1B6CF3128()
{
  return 0;
}

uint64_t sub_1B6CF3134@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t sub_1B6CF3144(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CD28();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF3180(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CD28();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF31BC(void *a1)
{
  unint64_t v2 = v1;
  sub_1B639600C(0, &qword_1E9DD89A0, (uint64_t (*)(void))sub_1B6D0CD28, (uint64_t)&type metadata for TextureOptions.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0CD28();
  sub_1B6E33A88();
  v11[1] = *v2;
  sub_1B6D0CDD0();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6CF3338()
{
  sub_1B6E33918();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33928();
  if (v1 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v1 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  __int16 v2 = *(_WORD *)(v0 + 56);
  if ((v2 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v2 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  sub_1B6E33938();
  return sub_1B6E33988();
}

uint64_t sub_1B6CF3498()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 24);
  __int16 v2 = *(_WORD *)(v0 + 56);
  sub_1B6E33928();
  if (v1 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v1 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v2 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v2 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  return sub_1B6E33938();
}

uint64_t sub_1B6CF35A8()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 24);
  __int16 v2 = *(_WORD *)(v0 + 56);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v1 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v2 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v2 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  sub_1B6E33938();
  return sub_1B6E33988();
}

double sub_1B6CF3710@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6D04FE0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 42) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1B6CF375C(void *a1)
{
  return sub_1B6CF31BC(a1);
}

BOOL sub_1B6CF3774(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 10) = *(_OWORD *)((char *)a1 + 42);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 10) = *(_OWORD *)((char *)a2 + 42);
  return sub_1B6D01570((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_1B6CF37D0(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CF20();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF380C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CF20();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF3848(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6CF5068(a1, a2, a3, &qword_1E9DD8A28, (uint64_t (*)(void))sub_1B6D0CF20, (uint64_t)&type metadata for TextureSource.CodingKeys, (void (*)(void))sub_1B6D0CF20);
}

uint64_t sub_1B6CF3898(void *a1)
{
  unint64_t v2 = v1;
  sub_1B639600C(0, &qword_1E9DD8800, (uint64_t (*)(void))sub_1B6D0B484, (uint64_t)&type metadata for TextureLoadingOptions.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B484();
  sub_1B6E33A88();
  long long v10 = v2[1];
  v12[0] = *v2;
  v12[1] = v10;
  v13[0] = v2[2];
  *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)((char *)v2 + 42);
  sub_1B6D0B52C();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6CF3A28()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1B6CF3A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6CF3AD8(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B484();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF3B14(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B484();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6CF3B50@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6D071B8(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 42) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1B6CF3B9C(void *a1)
{
  return sub_1B6CF3898(a1);
}

uint64_t sub_1B6CF3BB4(void *a1, char a2)
{
  sub_1B639600C(0, &qword_1E9DD8A80, (uint64_t (*)(void))sub_1B6D0D070, (uint64_t)&type metadata for RenderGraphTextureTarget.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0D070();
  sub_1B6E33A88();
  char v12 = a2;
  sub_1B6D09D10();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6CF3D2C()
{
  return 0x6B6361626C6C6166;
}

uint64_t sub_1B6CF3D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6B6361626C6C6166 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6CF3DDC(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0D070();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF3E18(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0D070();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B6CF3E54@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B6D08014(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6CF3E80(void *a1)
{
  return sub_1B6CF3BB4(a1, *v1);
}

uint64_t sub_1B6CF3E9C()
{
  return sub_1B681573C();
}

uint64_t sub_1B6CF3EBC()
{
  return sub_1B6E318B8();
}

uint64_t sub_1B6CF3EDC()
{
  return sub_1B681578C();
}

uint64_t sub_1B6CF3EFC@<X0>(BOOL *a1@<X8>)
{
  return sub_1B68157E4(a1);
}

void sub_1B6CF3F08(void *a1@<X8>)
{
  *a1 = 0x6F4370616D70696DLL;
  a1[1] = 0xEB00000000746E75;
}

uint64_t sub_1B6CF3F2C()
{
  return 0x6F4370616D70696DLL;
}

uint64_t sub_1B6CF3F4C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B6815840(a1);
}

uint64_t sub_1B6CF3F58(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0D01C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF3F94(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0D01C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF3FD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1B639600C(0, &qword_1E9DD8A60, (uint64_t (*)(void))sub_1B6D0D01C, (uint64_t)&type metadata for TextureRequireMipmap.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v15 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0D01C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v16;
  uint64_t v11 = sub_1B6E32D68();
  char v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)uint64_t v10 = v11;
  *(unsigned char *)(v10 + 8) = v13 & 1;
  return result;
}

uint64_t sub_1B6CF4188(void *a1, char a2)
{
  sub_1B639600C(0, (unint64_t *)&unk_1E9DD8AA0, (uint64_t (*)(void))sub_1B6D0D0C4, (uint64_t)&type metadata for TextureRequireMask.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0D0C4();
  sub_1B6E33A88();
  v12[15] = a2;
  v12[14] = 0;
  sub_1B66C522C();
  sub_1B6E32FA8();
  if (!v2)
  {
    v12[13] = 1;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6CF4340(char *a1, char *a2)
{
  return sub_1B6BB3AB8(*a1, *a2);
}

uint64_t sub_1B6CF434C()
{
  if (*v0) {
    return 0x6C6F687365726874;
  }
  else {
    return 0x6C656E6E616863;
  }
}

uint64_t sub_1B6CF438C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D02390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6CF43B4(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0D0C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF43F0(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0D0C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6CF442C(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v5 = sub_1B6D05A88(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = v4;
    *(float *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B6CF445C(void *a1)
{
  return sub_1B6CF4188(a1, *v1);
}

void sub_1B6CF447C(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 3;
  *(_DWORD *)(a1 + 4) = 0;
}

void sub_1B6CF448C(void *a1@<X8>)
{
  *a1 = &unk_1F0F645B8;
}

uint64_t sub_1B6CF449C()
{
  return sub_1B6E31B28();
}

void sub_1B6CF44EC(void *a1@<X8>)
{
  *a1 = &unk_1F0F6A840;
}

uint64_t sub_1B6CF44FC()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B6CF454C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB3070(*a1, *a2);
}

uint64_t sub_1B6CF4558()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF4654()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CF4738()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF4830@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

void sub_1B6CF4868(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701080941;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x65646F4D757063;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x65646F4D757067;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0x6B6361626C6C6166;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 4:
      strcpy((char *)a1, "asynchronous");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1B6CF493C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B6CF496C(uint64_t a1)
{
  unint64_t v2 = sub_1B63B53FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF49A8(uint64_t a1)
{
  unint64_t v2 = sub_1B63B53FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF49E4(void *a1, int a2)
{
  sub_1B639600C(0, &qword_1E9DD8698, (uint64_t (*)(void))sub_1B63B53FC, (uint64_t)&type metadata for TextureLoadPolicy.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B63B53FC();
  sub_1B6E33A88();
  char v19 = a2;
  char v18 = 1;
  sub_1B6D09CBC();
  sub_1B6E32FA8();
  if (!v2)
  {
    char v17 = BYTE1(a2);
    char v16 = 2;
    sub_1B6E32FA8();
    char v15 = BYTE2(a2);
    char v14 = 3;
    sub_1B6D09D10();
    sub_1B6E32FA8();
    char v13 = 4;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6CF4C10(void *a1)
{
  if (v1[3]) {
    int v2 = 0x1000000;
  }
  else {
    int v2 = 0;
  }
  return sub_1B6CF49E4(a1, v2 | (v1[2] << 16) | (v1[1] << 8) | *v1);
}

uint64_t sub_1B6CF4C50(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v14 = a4;
  v13[1] = a3;
  sub_1B639600C(0, &qword_1E9DD8A58, (uint64_t (*)(void))sub_1B6D0CFC8, (uint64_t)&type metadata for TextureRequireSizeLimit.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0CFC8();
  sub_1B6E33A88();
  char v17 = 0;
  sub_1B6E32F88();
  if (!v4)
  {
    char v16 = 1;
    sub_1B6E32F88();
    char v15 = 2;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6CF4E1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB75B8(*a1, *a2);
}

uint64_t sub_1B6CF4E28()
{
  uint64_t v1 = 0x686769654878616DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x657073417065656BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x687464695778616DLL;
  }
}

uint64_t sub_1B6CF4E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D029D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6CF4EBC(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CFC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF4EF8(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CFC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF4F34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6D07E10(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1B6CF4F68(void *a1)
{
  return sub_1B6CF4C50(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

int64x2_t sub_1B6CF4F88@<Q0>(int64x2_t *a1@<X8>)
{
  int64x2_t result = vdupq_n_s64(0x400uLL);
  *a1 = result;
  a1[1].i8[0] = 1;
  return result;
}

uint64_t sub_1B6CF4FA0(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CF74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF4FDC(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0CF74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF5018(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6CF5068(a1, a2, a3, &qword_1E9DD8A38, (uint64_t (*)(void))sub_1B6D0CF74, (uint64_t)&type metadata for TextureGPURepresentationDoNotUpload.CodingKeys, (void (*)(void))sub_1B6D0CF74);
}

uint64_t sub_1B6CF5068(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B639600C(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  int v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6CF51A4()
{
  return sub_1B6E31BD8();
}

uint64_t sub_1B6CF5204()
{
  return sub_1B6E31B38();
}

uint64_t sub_1B6CF5254(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB96C0(*a1, *a2);
}

uint64_t sub_1B6CF5260()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF5360()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CF5448()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF5544@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

void sub_1B6CF557C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEA0000000000746ELL;
  uint64_t v3 = 0x756F43656D617266;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000776F52;
      uint64_t v3 = 0x726550656D617266;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "framePerColumn");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 1684957547;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 4:
      strcpy((char *)a1, "useTexture3D");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1B6CF5650()
{
  uint64_t result = 0x756F43656D617266;
  switch(*v0)
  {
    case 1:
    case 2:
      uint64_t result = 0x726550656D617266;
      break;
    case 3:
      uint64_t result = 1684957547;
      break;
    case 4:
      uint64_t result = 0x7574786554657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6CF5704@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B6CF5734(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B580();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF5770(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B580();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF57AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  _OWORD v16[2] = a2;
  v16[1] = a3;
  sub_1B639600C(0, &qword_1E9DD8818, (uint64_t (*)(void))sub_1B6D0B580, (uint64_t)&type metadata for TextureRequireAnimationRepresentation.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)v16 - v12;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B580();
  sub_1B6E33A88();
  v16[4] = a4;
  char v17 = a5 & 1;
  char v22 = 0;
  sub_1B6355C68(0, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
  sub_1B62A99B0(&qword_1E9DD8820);
  uint64_t v14 = v16[3];
  sub_1B6E32FA8();
  if (!v14)
  {
    char v21 = 1;
    sub_1B6E32F88();
    char v20 = 2;
    sub_1B6E32F88();
    char v19 = HIBYTE(a5);
    char v18 = 3;
    sub_1B6D0B628();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B6CF5A24()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33938();
  if (v1 != 1) {
    sub_1B6E33928();
  }
  sub_1B6E33938();
  return sub_1B6E33988();
}

uint64_t sub_1B6CF5ACC()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33938();
  if (v1 != 1) {
    sub_1B6E33928();
  }
  return sub_1B6E33938();
}

uint64_t sub_1B6CF5B48()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33938();
  if (v1 != 1) {
    sub_1B6E33928();
  }
  sub_1B6E33938();
  return sub_1B6E33988();
}

uint64_t sub_1B6CF5BEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6D081D0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
    *(unsigned char *)(a2 + 25) = HIBYTE(v7);
  }
  return result;
}

uint64_t sub_1B6CF5C2C(void *a1)
{
  return sub_1B6CF57AC(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 25) << 8));
}

BOOL sub_1B6CF5C60(uint64_t a1, uint64_t a2)
{
  return sub_1B6D01878(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (*(unsigned __int8 *)(a1 + 25) << 8), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24) | (*(unsigned __int8 *)(a2 + 25) << 8));
}

int64x2_t sub_1B6CF5C9C@<Q0>(int64x2_t *a1@<X8>)
{
  int64x2_t result = vdupq_n_s64(8uLL);
  *a1 = result;
  a1[1].i64[0] = 0;
  a1[1].i16[4] = 1;
  return result;
}

uint64_t sub_1B6CF5D58()
{
  return type metadata accessor for BundleResolver(0);
}

uint64_t type metadata accessor for BundleResolver(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1EB97E828);
}

uint64_t sub_1B6CF5D80()
{
  uint64_t result = sub_1B6E30F48();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B6CF5EC0()
{
  return type metadata accessor for AbsolutePathStorage(0);
}

uint64_t type metadata accessor for AbsolutePathStorage(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1EB981100);
}

uint64_t sub_1B6CF5EE8()
{
  uint64_t result = sub_1B6E30F48();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B6CF5F80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC3VFX19AbsolutePathStorage_absoluteURL;
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1B6CF5FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1B638C1B8(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = sub_1B6E30F48();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  char v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  char v18 = (char *)&v49 - v17;
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  uint64_t v56 = 47;
  unint64_t v57 = 0xE100000000000000;
  sub_1B633AF88();
  if ((sub_1B6E32678() & 1) == 0)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v2[2] = a1;
    _OWORD v2[3] = a2;
    char v19 = (void *)v2[4];
    if (v19)
    {
      type metadata accessor for AbsolutePathStorage(0);
      uint64_t v20 = swift_dynamicCastClass();
      if (v20)
      {
        long long v53 = *(_OWORD *)(v20 + OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver);
        id v21 = (id)v53;

        *((_OWORD *)v3 + 2) = v53;
      }
    }
    goto LABEL_12;
  }
  sub_1B6E30F18();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1B639579C((uint64_t)v9, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B638C1B8);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v9, v10);
  uint64_t v22 = sub_1B6E30E58();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  _OWORD v3[2] = v22;
  v3[3] = v24;
  unint64_t v25 = (void *)v3[4];
  uint64_t v26 = v3[5];
  if (v25
    && (*(void *)&v53 = type metadata accessor for AbsolutePathStorage(0), (uint64_t v27 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v28 = v27;
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v52(v15, v18, v10);
    uint64_t v29 = *(void *)(v28 + OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver + 8);
    unsigned __int8 v50 = *(void **)(v28 + OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver);
    uint64_t v51 = v29;
    uint64_t v30 = (char *)objc_allocWithZone((Class)v53);
    v52(&v30[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_absoluteURL], v15, v10);
    unint64_t v31 = &v30[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver];
    uint64_t v33 = v50;
    uint64_t v32 = v51;
    *(void *)unint64_t v31 = v50;
    *((void *)v31 + 1) = v32;
    v54.receiver = v30;
    v54.super_class = (Class)v53;
    id v34 = v25;
    id v35 = v33;
    id v36 = objc_msgSendSuper2(&v54, sel_init);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v11 + 8);
    v37(v15, v10);

    v37(v18, v10);
    v3[4] = v36;
  }
  else
  {
    uint64_t v52 = (void (*)(char *, char *, uint64_t))v25;
    *(void *)&long long v53 = a1;
    unint64_t v38 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v38(v15, v18, v10);
    long long v39 = (objc_class *)type metadata accessor for AbsolutePathStorage(0);
    uint64_t v51 = v26;
    uint64_t v40 = v39;
    uint64_t v41 = (char *)objc_allocWithZone(v39);
    v38(&v41[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_absoluteURL], v15, v10);
    uint64_t v42 = v52;
    a1 = v53;
    objc_super v43 = &v41[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver];
    uint64_t v44 = v51;
    *(void *)objc_super v43 = v52;
    *((void *)v43 + 1) = v44;
    v55.receiver = v41;
    v55.super_class = v40;
    uint64_t v45 = v42;
    id v46 = objc_msgSendSuper2(&v55, sel_init);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v11 + 8);
    v47(v15, v10);
    v47(v18, v10);

    v3[4] = v46;
  }
  v3[5] = &off_1F0F7C0C8;
LABEL_12:
  uint64_t result = swift_bridgeObjectRelease();
  void *v3 = a1;
  v3[1] = a2;
  return result;
}

uint64_t sub_1B6CF64A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(v9, v9[3]);
  uint64_t v5 = sub_1B6E334C8();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v5;
  a2[3] = v7;
  a2[4] = 0;
  a2[5] = 0;
  return result;
}

uint64_t sub_1B6CF657C(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_1B6E33578();
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

BOOL sub_1B6CF6624(uint64_t *a1, uint64_t *a2)
{
  return sub_1B6D018C8(a1[2], a1[3], a1[4], a1[5], a2[2], a2[3], a2[4]);
}

uint64_t sub_1B6CF6640(void *a1)
{
  return sub_1B6CF6658(a1);
}

uint64_t sub_1B6CF6658(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6811134();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B6CF671C()
{
  return sub_1B681573C();
}

uint64_t sub_1B6CF6730()
{
  return sub_1B6E318B8();
}

uint64_t sub_1B6CF6744()
{
  return sub_1B681578C();
}

uint64_t sub_1B6CF6758@<X0>(BOOL *a1@<X8>)
{
  return sub_1B68157E4(a1);
}

void sub_1B6CF6764(void *a1@<X8>)
{
  *a1 = 0x737465737361;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1B6CF677C()
{
  return 0x737465737361;
}

uint64_t sub_1B6CF6790@<X0>(BOOL *a1@<X8>)
{
  return sub_1B6815840(a1);
}

uint64_t sub_1B6CF679C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B370();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF67D8(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B370();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF6814(void *a1)
{
  sub_1B639600C(0, &qword_1E9DD87E0, (uint64_t (*)(void))sub_1B6D0B370, (uint64_t)&type metadata for TextureArrayFileAsset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)v11 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B370();
  sub_1B6E33A88();
  uint64_t v8 = swift_bridgeObjectRetain();
  unint64_t v9 = sub_1B666CA28(v8);
  swift_bridgeObjectRelease();
  v11[1] = v9;
  sub_1B638C1B8(0, &qword_1E9DCE860, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB320]);
  sub_1B6D0B3C4(&qword_1E9DD4080, &qword_1E9DD7B00);
  sub_1B6E32FA8();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6CF6A24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B6D06F50(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6CF6A50(void *a1)
{
  return sub_1B6CF6814(a1);
}

BOOL sub_1B6CF6A6C(void **a1, void **a2)
{
  return (sub_1B6919430(*a1, *a2) & 1) == 0;
}

uint64_t sub_1B6CF6A94(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B639600C(0, &qword_1E9DD87A8, (uint64_t (*)(void))sub_1B6D0B274, (uint64_t)&type metadata for TextureFileData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B274();
  sub_1B6E33A88();
  v13[0] = a2;
  v13[1] = a3;
  sub_1B6D0B31C();
  sub_1B6E32F38();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6CF6C14()
{
  return 1635017060;
}

uint64_t sub_1B6CF6C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6CF6CAC(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B274();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF6CE8(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B274();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6CF6D24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B6D058C4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B6CF6D50(void *a1)
{
  return sub_1B6CF6A94(a1, *v1, v1[1]);
}

double sub_1B6CF6D6C@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1B6E8B000;
  return result;
}

uint64_t sub_1B6CF6D7C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB3B64(*a1, *a2);
}

uint64_t sub_1B6CF6D88()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF6E90()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CF6F80()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF7084@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

void sub_1B6CF70BC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEE006E6F6974636ELL;
  uint64_t v3 = 0x75466C656E72656BLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1668506980;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6574656D61726170;
      *(void *)(a1 + 8) = 0xEA00000000007372;
      break;
    case 3:
      strcpy((char *)a1, "kernelScript");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 4:
      *(void *)a1 = 0x7365727574786574;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1B6CF7188()
{
  uint64_t result = 0x75466C656E72656BLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1668506980;
      break;
    case 2:
      uint64_t result = 0x6574656D61726170;
      break;
    case 3:
      uint64_t result = 0x63536C656E72656BLL;
      break;
    case 4:
      uint64_t result = 0x7365727574786574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6CF7244@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B69028B4();
  *a1 = result;
  return result;
}

uint64_t sub_1B6CF7274(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B67C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF72B0(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B67C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF72EC(void *a1)
{
  uint64_t v3 = v1;
  sub_1B639600C(0, &qword_1E9DD8888, (uint64_t (*)(void))sub_1B6D0B67C, (uint64_t)&type metadata for TextureShaderAsset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v16 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B67C();
  sub_1B6E33A88();
  LOBYTE(v16) = 0;
  sub_1B6E32F48();
  if (!v2)
  {
    uint64_t v16 = v3[17];
    char v24 = 2;
    sub_1B6D0B7AC(0, (unint64_t *)&qword_1E9DD86C0);
    sub_1B6D0B910();
    sub_1B6E32FA8();
    __int16 v11 = *((_WORD *)v3 + 16);
    char v12 = *((unsigned char *)v3 + 34);
    uint64_t v13 = v3[11];
    uint64_t v16 = v3[3];
    __int16 v17 = v11;
    char v18 = v12;
    long long v14 = *(_OWORD *)(v3 + 7);
    long long v19 = *(_OWORD *)(v3 + 5);
    long long v20 = v14;
    long long v21 = *(_OWORD *)(v3 + 9);
    uint64_t v22 = v13;
    int v23 = *((_DWORD *)v3 + 24);
    char v24 = 1;
    sub_1B6BEFED8();
    sub_1B6E32FA8();
    uint64_t v16 = *v3;
    char v24 = 3;
    sub_1B6657A10();
    sub_1B6E32FA8();
    uint64_t v16 = v3[18];
    char v24 = 4;
    sub_1B6D0B7AC(0, &qword_1E9DD8860);
    sub_1B6D0B998();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

BOOL sub_1B6CF75C0(uint64_t a1, uint64_t a2)
{
  return sub_1B6D016D8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1B6CF75DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6D05C84(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B6CF760C()
{
  return *(unsigned __int16 *)(v0 + 24);
}

uint64_t sub_1B6CF7614()
{
  return *(unsigned __int16 *)(v0 + 26);
}

uint64_t sub_1B6CF761C()
{
  return *(unsigned __int16 *)(v0 + 28);
}

uint64_t sub_1B6CF7624()
{
  return *(void *)(v0 + 56);
}

_OWORD *sub_1B6CF762C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (void *)v3;
  if (*(_DWORD *)v3 != -1 || *(_DWORD *)(v3 + 4))
  {
    uint64_t v8 = *(void *)(v3 + 128);
    uint64_t v35 = *(void *)(v3 + 104);
    uint64_t v36 = *(void *)(v3 + 120);
    uint64_t v41 = *(void *)(v3 + 112);
    uint64_t v7 = v41;
    uint64_t v42 = v35;
    uint64_t v39 = v8;
    uint64_t v40 = v36;
    sub_1B6399A44((uint64_t)&v42);
    sub_1B6399A44((uint64_t)&v41);
    sub_1B6399A44((uint64_t)&v40);
    sub_1B6399A44((uint64_t)&v39);
    uint64_t v9 = *(void *)(v7 + 16);
    if (v9) {
      goto LABEL_4;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B639600C(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    *(void *)(a3 + 24) = v29;
    uint64_t result = (_OWORD *)swift_allocObject();
    *(void *)a3 = result;
    *((void *)result + 2) = 0;
    *((void *)result + 3) = 0;
    return result;
  }
  if (qword_1E9DCC748 != -1) {
    swift_once();
  }
  uint64_t v26 = *(void *)(v3 + 8);
  uint64_t v27 = v4[2];
  swift_retain();
  sub_1B6D32580(v26, v27, 0x6C7070612E6D6F63, 0xED00007866762E65);
  uint64_t v7 = v28;
  swift_release();
  uint64_t v9 = *(void *)(v7 + 16);
  if (!v9) {
    goto LABEL_24;
  }
LABEL_4:
  uint64_t v10 = v7 + 72;
  while (1)
  {
    uint64_t v11 = *(void *)(v10 - 40);
    uint64_t v12 = *(void *)(v10 - 16);
    BOOL v13 = *(void *)(*(void *)v10 + 16) == a1 && *(void *)(*(void *)v10 + 24) == a2;
    if (v13 || (sub_1B6E334B8() & 1) != 0) {
      break;
    }
    v10 += 48;
    if (!--v9) {
      goto LABEL_24;
    }
  }
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v14 = v4[18];
    if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1B62C1A30(v12), (v16 & 1) != 0))
    {
      uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
      *(void *)(a3 + 24) = &type metadata for Entity;
      uint64_t result = (_OWORD *)swift_release();
      *(void *)a3 = v17;
    }
    else
    {
      *(void *)(a3 + 24) = &type metadata for Entity;
      uint64_t result = (_OWORD *)swift_release();
      *(void *)a3 = 0xFFFFFFFFLL;
    }
  }
  else
  {
    uint64_t v19 = v4[17];
    if (*(void *)(v19 + 16)
      && (unint64_t v20 = sub_1B62C1A30(v12), (v21 & 1) != 0)
      && (uint64_t v22 = *(void *)(v19 + 56) + 80 * v20, v23 = *(unsigned __int8 *)(v22 + 64), v23 <= 0xEF))
    {
      long long v30 = *(_OWORD *)v22;
      if ((v23 & 0x80) != 0)
      {
        *((void *)&v38 + 1) = &type metadata for Entity;
        *(void *)&long long v37 = v30;
      }
      else
      {
        long long v31 = *(_OWORD *)(v22 + 16);
        long long v32 = *(_OWORD *)(v22 + 32);
        long long v33 = *(_OWORD *)(v22 + 48);
        long long v43 = *(_OWORD *)v22;
        long long v44 = v31;
        long long v45 = v32;
        long long v46 = v33;
        char v47 = v23;
        sub_1B6790258((uint64_t *)&v37);
      }
      swift_release();
      return sub_1B62B57A8(&v37, (_OWORD *)a3);
    }
    else
    {
      sub_1B639600C(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      long long v37 = 0u;
      long long v38 = 0u;
      *(void *)(a3 + 24) = v24;
      uint64_t v25 = swift_allocObject();
      *(void *)a3 = v25;
      swift_release();
      *(void *)(v25 + 16) = 0;
      *(void *)(v25 + 24) = 0;
      return (_OWORD *)sub_1B639579C((uint64_t)&v37, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6355C68);
    }
  }
  return result;
}

uint64_t sub_1B6CF7A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (*(_DWORD *)v3 == -1 && *(_DWORD *)(v3 + 4) == 0)
  {
    uint64_t v10 = *(void *)(v3 + 8);
    uint64_t v11 = *(void *)(v4 + 16);
    if (qword_1E9DCC748 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1B6D32580(v10, v11, 0x6C7070612E6D6F63, 0xED00007866762E65);
    uint64_t v8 = v12;
    swift_release();
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9) {
      goto LABEL_17;
    }
LABEL_10:
    uint64_t v13 = v8 + 72;
    while (1)
    {
      uint64_t v14 = *(void *)(v13 - 40);
      uint64_t v15 = *(void *)(v13 - 16);
      BOOL v16 = *(void *)(*(void *)v13 + 16) == a2 && *(void *)(*(void *)v13 + 24) == a3;
      if (v16 || (sub_1B6E334B8() & 1) != 0) {
        break;
      }
      v13 += 48;
      if (!--v9) {
        goto LABEL_17;
      }
    }
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
    {
      uint64_t v17 = a1;
      sub_1B62CAAD8(a1, (uint64_t)v24);
      if (swift_dynamicCast())
      {
        uint64_t v18 = v23[0];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = *(void *)(v4 + 144);
        *(void *)(v4 + 144) = 0x8000000000000000;
        sub_1B67E4EA4(v18, v15, isUniquelyReferenced_nonNull_native);
        *(void *)(v4 + 144) = v24[0];
        swift_release();
        swift_bridgeObjectRelease();
        return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v17);
      }
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v20 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v24[0] = 0;
      swift_retain();
      sub_1B6B33E34(v20, v24, 0xD000000000000035, 0x80000001B6F52630);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v17 = a1;
      sub_1B62CAAD8(a1, (uint64_t)v23);
      sub_1B6D031A4((uint64_t)v23, (uint64_t)v24);
      sub_1B6CE0844((uint64_t)v24, v15);
    }
    swift_release();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v17);
  }
  uint64_t v8 = *(void *)(v3 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9) {
    goto LABEL_10;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1;
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v17);
}

uint64_t sub_1B6CF7D74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v34 = a2;
  long long v32 = *(void (**)(uint64_t, void))(a2 + 8);
  v32(v2, 0);
  uint64_t v5 = *(void *)(v2 + 144);
  uint64_t v30 = v5 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  unint64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v31 = v9;
  unint64_t v29 = v9 - 7;
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_23:
    uint64_t v15 = *(void *)(*(void *)(v5 + 48) + 8 * v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v37 = *(void **)(v3 + 144);
    uint64_t v17 = v37;
    *(void *)(v3 + 144) = 0x8000000000000000;
    unint64_t v19 = sub_1B62C1A30(v15);
    char v20 = v18;
    uint64_t v21 = v17[2] + ((v18 & 1) == 0);
    if (v17[3] >= v21)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v18 & 1) == 0) {
          goto LABEL_34;
        }
      }
      else
      {
        sub_1B6ACD784();
        if ((v20 & 1) == 0) {
          goto LABEL_34;
        }
      }
LABEL_29:
      uint64_t v24 = (uint64_t)v37;
      uint64_t v35 = *(void *)(v37[7] + 8 * v19);
      char v36 = 0;
      ((void (*)(uint64_t *, void, uint64_t, uint64_t))v32)(&v35, 0, ObjectType, v34);
      if (v36) {
        sub_1B628A428(v19, v24);
      }
      else {
        *(void *)(*(void *)(v24 + 56) + 8 * v19) = v35;
      }
      *(void *)(v3 + 144) = v24;
    }
    else
    {
      sub_1B6AB8F44(v21, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_1B62C1A30(v15);
      if ((v20 & 1) != (v23 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v19 = v22;
      if (v20) {
        goto LABEL_29;
      }
LABEL_34:
      uint64_t v35 = 0;
      char v36 = 1;
      ((void (*)(uint64_t *, void, uint64_t, uint64_t))v32)(&v35, 0, ObjectType, v34);
      uint64_t v25 = v37;
      if ((v36 & 1) == 0)
      {
        uint64_t v26 = v35;
        v37[(v19 >> 6) + 8] |= 1 << v19;
        uint64_t v27 = 8 * v19;
        *(void *)(v25[6] + v27) = v15;
        *(void *)(v25[7] + v27) = v26;
        ++v25[2];
      }
      *(void *)(v3 + 144) = v25;
    }
  }
  uint64_t v13 = v10 + 1;
  if (v10 + 1 >= v31) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v13);
  if (v14) {
    goto LABEL_22;
  }
  uint64_t v13 = v10 + 2;
  if (v10 + 2 >= v31) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v13);
  if (v14) {
    goto LABEL_22;
  }
  uint64_t v13 = v10 + 3;
  if (v10 + 3 >= v31) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v13);
  if (v14) {
    goto LABEL_22;
  }
  uint64_t v13 = v10 + 4;
  if (v10 + 4 >= v31) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v13);
  if (v14) {
    goto LABEL_22;
  }
  uint64_t v13 = v10 + 5;
  if (v10 + 5 >= v31) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v13);
  if (v14) {
    goto LABEL_22;
  }
  uint64_t v13 = v10 + 6;
  if (v10 + 6 >= v31) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v13);
  if (v14)
  {
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v10 = v13;
    goto LABEL_23;
  }
  while (v29 != v10)
  {
    unint64_t v14 = *(void *)(v5 + 120 + 8 * v10++);
    if (v14)
    {
      uint64_t v13 = v10 + 6;
      goto LABEL_22;
    }
  }
LABEL_36:

  return swift_release();
}

__n128 sub_1B6CF80F0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6D06010(a1, (uint64_t)v9);
  if (!v2)
  {
    long long v5 = v9[9];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(void *)(a2 + 160) = v10;
    long long v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    long long v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    long long v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    __n128 result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1B6CF8168(void *a1)
{
  return sub_1B6CF72EC(a1);
}

__n128 sub_1B6CF8188@<Q0>(uint64_t a1@<X8>)
{
  RGTextureDescriptor.init()((uint64_t)&v14);
  __int16 v2 = v15;
  char v3 = v16;
  long long v12 = v18;
  long long v13 = v17;
  __n128 v11 = v19;
  uint64_t v4 = v20;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  long long v6 = sub_1B67F43D8(MEMORY[0x1E4FBC860]);
  long long v7 = sub_1B67F44E4(v5);
  uint64_t v8 = sub_1B6335620(v5);
  *(void *)a1 = 0xFFFFFFFFLL;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  *(void *)(a1 + 24) = v14;
  *(_WORD *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 34) = v3;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v12;
  __n128 result = v11;
  *(__n128 *)(a1 + 72) = v11;
  *(void *)(a1 + 88) = v4;
  *(_DWORD *)(a1 + 96) = v21;
  *(void *)(a1 + 104) = MEMORY[0x1E4FBC868];
  *(void *)(a1 + 112) = v5;
  *(void *)(a1 + 120) = v5;
  *(void *)(a1 + 128) = v5;
  *(void *)(a1 + 136) = v6;
  *(void *)(a1 + 144) = v7;
  *(void *)(a1 + 152) = v8;
  *(void *)(a1 + 160) = v10;
  return result;
}

uint64_t sub_1B6CF8274()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v1 + 160);
  if (qword_1E9DCC720 != -1) {
    swift_once();
  }
  unint64_t v4 = qword_1E9E49848;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B68C75F8(v2, v3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6712824);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14[0] = v4;
  swift_bridgeObjectRetain();
  sub_1B6641860((unint64_t)v5);
  unint64_t v6 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_5:
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0)
        {
          unint64_t v9 = (void *)MEMORY[0x1BA9B4580](i, v6);
        }
        else
        {
          unint64_t v9 = *(void **)(v6 + 8 * i + 32);
          swift_retain();
        }
        uint64_t v10 = v9[20];
        if (*(void *)(v10 + 16))
        {
          uint64_t v11 = v9[2];
          uint64_t v12 = v9[3];
          sub_1B62CAAD8(v10 + 48, (uint64_t)v14);
          swift_bridgeObjectRetain();
          sub_1B6CF7A0C((uint64_t)v14, v11, v12);
        }
        swift_release();
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v14[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_5;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CF8454()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (v1 != 0xFFFFFFFFLL || v2 != 0) {
    return v1 | (v2 << 32);
  }
  uint64_t v4 = *((void *)v0 + 1);
  swift_bridgeObjectRetain();
  return v4;
}

unint64_t sub_1B6CF84B4(unint64_t result, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = result;
  if (a3)
  {
    unint64_t v10 = HIDWORD(result);
    if (result != 0xFFFFFFFF)
    {
      __n128 result = swift_bridgeObjectRelease();
      v4[1] = 0;
      v4[2] = 0xE000000000000000;
    }
    *(_DWORD *)uint64_t v4 = v5;
    *((_DWORD *)v4 + 1) = v10;
  }
  else
  {
    if ((result || a2 != 0xE000000000000000) && (sub_1B6E334B8() & 1) == 0) {
      void *v3 = 0xFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v3[1] = v5;
    _OWORD v3[2] = a2;
    uint64_t v7 = sub_1B6CF9014();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4[19] = v7;
    v4[20] = v9;
    sub_1B6CF8274();
    return sub_1B677C2B8(v5, a2, 0);
  }
  return result;
}

uint64_t sub_1B6CF8638()
{
  sub_1B6355C68(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78170;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6355C68(0, &qword_1E9DCFB58, (uint64_t)&type metadata for KernelReference, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v2 = (void *)swift_allocObject();
  v2[4] = sub_1B677C268;
  v2[5] = KeyPath;
  v2[2] = sub_1B677C270;
  _OWORD v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B67240A4(0x6C656E72656BLL, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 13, 0, (uint64_t)v2, KeyPath, 0, 0,
         64,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6355C68(0, (unint64_t *)&unk_1EB97DF50, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  unint64_t v6 = (void *)swift_allocObject();
  v6[4] = sub_1B677C1B0;
  _OWORD v6[5] = v5;
  _OWORD v6[2] = sub_1B677C1B8;
  v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B672449C(0x75466C656E72656BLL, 0xEE006E6F6974636ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         4,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  sub_1B638C1B8(0, &qword_1E9DCE450, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6D09DE0;
  void v9[5] = v8;
  v9[2] = sub_1B6D09E10;
  v9[3] = v8;
  v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6724518(0x726F466C65786970, 0xEB0000000074616DLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  sub_1B6355C68(0, &qword_1EB97DF70, MEMORY[0x1E4FBB550], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v12 = (void *)swift_allocObject();
  v12[4] = sub_1B6D09E58;
  void v12[5] = v11;
  _OWORD v12[2] = sub_1B677C0A4;
  v12[3] = v11;
  v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B67245A8(0x6874646977, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  __int16 v15 = (void *)swift_allocObject();
  v15[4] = sub_1B6D09E58;
  v15[5] = v14;
  _OWORD v15[2] = sub_1B677C0A4;
  v15[3] = v14;
  v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B67245A8(0x746867696568, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 64) = v16;
  uint64_t v17 = swift_getKeyPath();
  long long v18 = (void *)swift_allocObject();
  v18[4] = sub_1B6D09E58;
  v18[5] = v17;
  _OWORD v18[2] = sub_1B677C0A4;
  v18[3] = v17;
  v18[6] = v17;
  swift_allocObject();
  swift_retain_n();
  uint64_t v19 = sub_1B67245A8(0x6874706564, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v18, v17, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 72) = v19;
  uint64_t v20 = swift_getKeyPath();
  sub_1B6355C68(0, &qword_1E9DCFB28, (uint64_t)&type metadata for MetalFunctionReflection, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  int v21 = (void *)swift_allocObject();
  v21[4] = sub_1B677BF58;
  v21[5] = v20;
  uint64_t v21[2] = sub_1B677BF60;
  v21[3] = v20;
  void v21[6] = v20;
  swift_allocObject();
  swift_retain_n();
  uint64_t v22 = sub_1B6724624(0x746E656D75677261, 0xE900000000000073, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v21, v20, 0, 0,
          68,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 80) = v22;
  uint64_t v23 = swift_getKeyPath();
  sub_1B638C1B8(0, (unint64_t *)&unk_1E9DD86B0, (uint64_t (*)(uint64_t))type metadata accessor for MTLStorageMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = sub_1B6D09ED8;
  v24[5] = v23;
  _OWORD v24[2] = sub_1B6D09F08;
  v24[3] = v23;
  v24[6] = v23;
  swift_allocObject();
  swift_retain_n();
  uint64_t v25 = sub_1B6724A1C(0x4D656761726F7473, 0xEB0000000065646FLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v24, v23, 0, 0,
          4,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 88) = v25;
  uint64_t v26 = swift_getKeyPath();
  sub_1B6D09F38();
  uint64_t v27 = (void *)swift_allocObject();
  v27[4] = sub_1B677BDA8;
  v27[5] = v26;
  _OWORD v27[2] = sub_1B677BDB0;
  v27[3] = v26;
  v27[6] = v26;
  swift_allocObject();
  swift_retain_n();
  uint64_t v28 = sub_1B6724AAC(0x6574656D61726170, 0xEA00000000007372, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v27, v26, 0, 0,
          4,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 96) = v28;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49848 = v0;
  return result;
}

uint64_t sub_1B6CF8FB0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  BOOL v5 = v3 == 0xFFFFFFFFLL && v4 == 0;
  char v6 = !v5;
  if (v5)
  {
    uint64_t v8 = *((void *)a1 + 1);
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t result = 0;
    uint64_t v8 = v3 | (v4 << 32);
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = result;
  *(unsigned char *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_1B6CF9014()
{
  uint64_t v1 = sub_1B62A6F14(MEMORY[0x1E4FBC860]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 112);
  if (*(_DWORD *)v0 == -1 && !*(_DWORD *)(v0 + 4))
  {
    if (qword_1E9DCC748 != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v0 + 8);
    uint64_t v32 = *(void *)(v0 + 16);
    swift_retain();
    sub_1B6D32580(v33, v32, 0x6C7070612E6D6F63, 0xED00007866762E65);
    uint64_t v3 = v34;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      long long v43 = v2;
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return (uint64_t)v2;
  }
  long long v43 = v1;
  swift_bridgeObjectRetain();
LABEL_5:
  BOOL v5 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v6 = 72;
  uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v37 = v3;
  while (1)
  {
    uint64_t v41 = v5;
    uint64_t v42 = v4;
    uint64_t v7 = *(void *)(v3 + v6);
    uint64_t v8 = *(void *)(v7 + 24);
    uint64_t v39 = *(void *)(v7 + 16);
    uint64_t v40 = v6;
    uint64_t v9 = *(void *)(v7 + 40);
    uint64_t v10 = *(void *)(v7 + 152);
    uint64_t v38 = *(void *)(v7 + 144);
    char v11 = *(unsigned char *)(v7 + 188);
    if (v11) {
      double v12 = 0.0;
    }
    else {
      double v12 = *(float *)(v7 + 184);
    }
    char v13 = *(unsigned char *)(v7 + 196);
    if (v13) {
      double v14 = 0.0;
    }
    else {
      double v14 = *(float *)(v7 + 192);
    }
    char v15 = *(unsigned char *)(v7 + 204);
    if (v15) {
      double v16 = 0.0;
    }
    else {
      double v16 = *(float *)(v7 + 200);
    }
    memset(v44, 0, 32);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1B62B2E34(v9, (uint64_t)v44, v39, v8, *(uint64_t *)&v12, v11, *(uint64_t *)&v14, v13, *(uint64_t *)&v16, v15, v38, v10, 0, 0, 0, (uint64_t)&type metadata for TextureShaderAsset, v9, (uint64_t)&off_1F0F7B1C8);
    swift_bridgeObjectRelease();
    sub_1B639579C((uint64_t)v44, (uint64_t)&qword_1EB980F60, v36, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6355C68);
    v17[20] = *(void *)(v7 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v17[2];
    uint64_t v18 = v17[3];
    swift_retain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v44[0] = v43;
    unint64_t v21 = sub_1B62B2CE0(v19, v18);
    char v23 = v22;
    uint64_t v24 = v43[2] + ((v22 & 1) == 0);
    if (v43[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B6ACD41C();
      }
      goto LABEL_22;
    }
    sub_1B62B3CB0(v24, isUniquelyReferenced_nonNull_native);
    uint64_t v25 = sub_1B62B2CE0(v19, v18);
    if ((v23 & 1) != (v26 & 1)) {
      break;
    }
    unint64_t v21 = v25;
LABEL_22:
    BOOL v5 = v41;
    uint64_t v27 = *(void **)&v44[0];
    long long v43 = *(void **)&v44[0];
    if (v23)
    {
      *(void *)(*(void *)(*(void *)&v44[0] + 56) + 8 * v21) = v17;
      swift_release();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v37;
    }
    else
    {
      *(void *)(*(void *)&v44[0] + 8 * (v21 >> 6) + 64) |= 1 << v21;
      uint64_t v28 = (uint64_t *)(v27[6] + 16 * v21);
      uint64_t *v28 = v19;
      v28[1] = v18;
      *(void *)(v27[7] + 8 * v21) = v17;
      ++v27[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v5 = sub_1B6335858(0, v41[2] + 1, 1, v41);
      }
      uint64_t v3 = v37;
      unint64_t v30 = v5[2];
      unint64_t v29 = v5[3];
      if (v30 >= v29 >> 1) {
        BOOL v5 = sub_1B6335858(v29 > 1, v30 + 1, 1, v5);
      }
      _OWORD v5[2] = v30 + 1;
      int64_t v31 = &v5[2 * v30];
      v31[4] = v19;
      v31[5] = v18;
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
    }
    swift_release();
    uint64_t v6 = v40 + 48;
    uint64_t v4 = v42 - 1;
    if (v42 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v43;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6CF94B4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 152);
  uint64_t v10 = MEMORY[0x1BA9B34C0]();
  if (*(void *)(v9 + 16) && (uint64_t v12 = sub_1B62B2CE0(v10, v11), (v13 & 1) != 0))
  {
    uint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * v12);
    swift_retain();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1E9DCC720 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    unint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B6971778(v15, a1, a2, a3, a4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1B6CF95B8()
{
  return 0xD000000000000012;
}

uint64_t sub_1B6CF95D4(uint64_t a1, char a2)
{
  return a2 & 1 | (a1 > 1035);
}

uint64_t sub_1B6CF95E8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  if (qword_1E9DCC720 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1E9E49848;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B68C75F8(v1, v2, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6712824);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6641860((unint64_t)v4);
  return v3;
}

uint64_t sub_1B6CF96B4()
{
  if (qword_1E9DCC720 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6CF9714(char *a1, char *a2)
{
  return sub_1B6BB0F3C(*a1, *a2);
}

uint64_t sub_1B6CF9720()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF979C()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6CF9804()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6CF987C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B6CF98DC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1635017060;
  if (*v1) {
    uint64_t v2 = 0x65727574786574;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6CF9914()
{
  if (*v0) {
    return 0x65727574786574;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1B6CF9948@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B6CF99AC(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0A148();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF99E8(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0A148();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6CF9A24(void *a1)
{
  uint64_t v2 = v1;
  sub_1B639600C(0, (unint64_t *)&unk_1E9DD86D8, (uint64_t (*)(void))sub_1B6D0A148, (uint64_t)&_s10CodingKeysON_0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0A148();
  sub_1B6E33A88();
  sub_1B634F71C(v2, (uint64_t)v12);
  if (v13 < 0)
  {
    v13 &= ~0x80u;
    v11[0] = v12[0];
    char v15 = 1;
    sub_1B6657A10();
  }
  else
  {
    sub_1B62D6998((uint64_t)v12, (uint64_t)v14);
    sub_1B62D6998((uint64_t)v14, (uint64_t)v11);
    char v15 = 0;
    sub_1B68DA784();
  }
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6CF9C00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6D051D8(a1, (uint64_t)v5);
  if (!v2) {
    return sub_1B634F71C((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_1B6CF9C48(void *a1)
{
  sub_1B634F71C(v1, (uint64_t)&v4);
  return sub_1B6CF9A24(a1);
}

uint64_t sub_1B6CF9C98(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B220();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6CF9CD4(uint64_t a1)
{
  unint64_t v2 = sub_1B6D0B220();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1B6CF9D10@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  RGTextureDescriptor.init()((uint64_t)&v11);
  __int16 v4 = v12;
  char v5 = v13;
  long long v9 = v15;
  long long v10 = v14;
  __n128 v8 = v16;
  uint64_t v6 = v17;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  *(void *)a2 = v11;
  *(_WORD *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 10) = v5;
  *(_OWORD *)(a2 + 16) = v10;
  *(_OWORD *)(a2 + 32) = v9;
  __n128 result = v8;
  *(__n128 *)(a2 + 48) = v8;
  *(void *)(a2 + 64) = v6;
  *(_DWORD *)(a2 + 72) = v18;
  return result;
}

uint64_t sub_1B6CF9DB4(void *a1)
{
  sub_1B639600C(0, &qword_1E9DD8780, (uint64_t (*)(void))sub_1B6D0B220, (uint64_t)&type metadata for TextureRenderTarget.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B220();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

double sub_1B6CF9EF4@<D0>(uint64_t a1@<X8>)
{
  RGTextureDescriptor.init()((uint64_t)&v7);
  __int16 v2 = v8;
  char v3 = v9;
  uint64_t v4 = v13;
  *(void *)a1 = v7;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
  long long v5 = v11;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v5;
  double result = *(double *)&v12;
  *(_OWORD *)(a1 + 48) = v12;
  *(void *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 72) = v14;
  return result;
}

double sub_1B6CF9F5C@<D0>(uint64_t a1@<X8>)
{
  RGTextureDescriptor.init()((uint64_t)&v7);
  __int16 v2 = v8;
  char v3 = v9;
  uint64_t v4 = v13;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 42) = v3;
  long long v5 = v11;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v5;
  double result = *(double *)&v12;
  *(_OWORD *)(a1 + 80) = v12;
  *(void *)(a1 + 96) = v4;
  *(_DWORD *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1B6CF9FDC(uint64_t a1, unint64_t a2)
{
  unint64_t v5 = HIDWORD(a2);
  sub_1B6355BE8(a1 + 8, (uint64_t)v11, (unint64_t *)&unk_1EB97D6A8, (uint64_t)&type metadata for TextureOptions.SizeModification);
  sub_1B6355BE8((uint64_t)v11, (uint64_t)&v12, (unint64_t *)&unk_1EB97D6A8, (uint64_t)&type metadata for TextureOptions.SizeModification);
  if (v13 <= 0xFDu)
  {
    sub_1B6D09CA4(&v12, (uint64_t)&v14);
    sub_1B6D09CA4(&v14, (uint64_t)v15);
    if (v16 < 0)
    {
      v16 &= ~0x80u;
    }
    else if (a2 == -1 && !v5 {
           || (uint64_t)(a2 << 32) < (uint64_t)0xFFFFFFFF00000001
    }
           || (int)a2 >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
           || (uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v5 != -1)
           && *(_DWORD *)(v6 + 12 * (int)a2 + 8) != v5
           || (sub_1B6C05EEC(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a2) + 32), v2, a2, v15[0], v15[1], v16 & 1) & 1) == 0)
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B681F698();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
LABEL_22:
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
  }
  sub_1B6355BE8(a1 + 32, (uint64_t)v10, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  uint64_t result = sub_1B6355BE8((uint64_t)v10, (uint64_t)&v17, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  int v8 = v20 & 0xFF00;
  if (v8 != 768)
  {
    if (a2 == -1 && !v5
      || (uint64_t)(a2 << 32) < (uint64_t)0xFFFFFFFF00000001
      || (int)a2 >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
      || (uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v5 != -1)
      && *(_DWORD *)(v9 + 12 * (int)a2 + 8) != v5
      || (uint64_t result = sub_1B6C05FC8(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v9 + 12 * (int)a2) + 32), v2, a2, v17, v18, v19, v8 | v20 & 1u), (result & 1) == 0))
    {
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B681F698();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      goto LABEL_22;
    }
  }
  return result;
}

double sub_1B6CFA388(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, int a5, int a6, long long *a7)
{
  int v30 = a5;
  int v31 = a6;
  long long v11 = *a7;
  uint64_t v12 = *((void *)a7 + 2);
  char v13 = *((unsigned char *)a7 + 24);
  long long v28 = a7[2];
  long long v29 = v11;
  uint64_t v14 = *((void *)a7 + 6);
  __int16 v15 = *((_WORD *)a7 + 28);
  uint64_t v16 = sub_1B6E30F48();
  double v18 = MEMORY[0x1F4188790](v16, v17);
  __int16 v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v21 + 16))(v20, a4, v18);
  sub_1B6D09A88((uint64_t)v20, (uint64_t *)v32);
  long long v26 = v32[1];
  long long v27 = v32[0];
  uint64_t v22 = v33;
  uint64_t v23 = v34;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  long long v24 = v26;
  *(_OWORD *)a1 = v27;
  *(_OWORD *)(a1 + 16) = v24;
  *(void *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v23;
  *a2 = v30;
  a2[1] = v31;
  *(_OWORD *)a3 = v29;
  *(void *)(a3 + 16) = v12;
  *(unsigned char *)(a3 + 24) = v13;
  double result = *(double *)&v28;
  *(_OWORD *)(a3 + 32) = v28;
  *(void *)(a3 + 48) = v14;
  *(_WORD *)(a3 + 56) = v15;
  return result;
}

CGColorSpaceRef sub_1B6CFA508()
{
  CGColorSpaceRef result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC00]);
  qword_1E9E49850 = (uint64_t)result;
  return result;
}

CGColorSpaceRef sub_1B6CFA534()
{
  CGColorSpaceRef result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC78]);
  qword_1E9E49858 = (uint64_t)result;
  return result;
}

CGColorSpaceRef sub_1B6CFA560()
{
  CGColorSpaceRef result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DBE8]);
  qword_1E9E49860 = (uint64_t)result;
  return result;
}

CGColorSpaceRef sub_1B6CFA58C()
{
  CGColorSpaceRef result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DBE0]);
  qword_1E9E49868 = (uint64_t)result;
  return result;
}

void sub_1B6CFA5B8(uint64_t a1, unint64_t a2, CGColorSpace *a3, uint64_t a4)
{
  sub_1B638C1B8(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  char v13 = (char *)&v21 - v12;
  CFDataRef v14 = (const __CFData *)sub_1B6E30FC8();
  __int16 v15 = CGImageSourceCreateWithData(v14, 0);

  if (!v15)
  {
LABEL_8:
    sub_1B6E32BE8();
    __break(1u);
    JUMPOUT(0x1B6CFA834);
  }
  CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v15, 0, 0);
  if (!ImageAtIndex)
  {

    goto LABEL_8;
  }
  uint64_t v17 = ImageAtIndex;
  uint64_t v18 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
  sub_1B628D46C(v17, a3, a4, (size_t)v13, 0, 1);
  sub_1B639579C((uint64_t)v13, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B638C1B8);
  if (!v5)
  {
    uint64_t v19 = *v4;
    if (v19)
    {
      sub_1B62FFBB0(a1, a2);
      sub_1B6E30F78();
      sub_1B62C2360(a1, a2);
      __int16 v20 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setLabel_, v20);
    }
  }
}

uint64_t sub_1B6CFA864(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4, uint64_t *a5, void *a6, char a7, void *a8)
{
  uint64_t v46 = *a5;
  if (*a5)
  {
    uint64_t v9 = a3;
    uint64_t v11 = result;
    __int16 v12 = a4;
    uint64_t v41 = a5[1];
    unint64_t v13 = *((unsigned __int16 *)a5 + 16);
    unint64_t v14 = *((unsigned __int16 *)a5 + 17);
    uint64_t v15 = a5[6];
    if (*((unsigned __int16 *)a5 + 18) < 2u)
    {
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v17 = qword_1EB9852D0;
      swift_unknownObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      swift_retain();
      int v18 = sub_1B6E32148();
      uint64_t v9 = a3;
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v49 = 0;
      swift_retain();
      sub_1B6B33E34(v18, (uint64_t *)&v49, 0xD00000000000002ELL, 0x80000001B6F528E0);
      swift_release();
      swift_release();
      __int16 v12 = a4;
    }
    if (a2 <= 1) {
      uint64_t v19 = 1;
    }
    else {
      uint64_t v19 = a2;
    }
    if (v19 >= 1024) {
      uint64_t v19 = 1024;
    }
    if (v11 <= 1) {
      uint64_t v20 = 1;
    }
    else {
      uint64_t v20 = v11;
    }
    if (v20 >= 1024) {
      uint64_t v21 = 1024;
    }
    else {
      uint64_t v21 = v20;
    }
    uint64_t v22 = v21 * v19;
    if (v12) {
      uint64_t v23 = v21 * v19;
    }
    else {
      uint64_t v23 = v9;
    }
    if (v22 >= v23) {
      uint64_t v22 = v23;
    }
    uint64_t v43 = v22;
    if (v21 > v13) {
      uint64_t v24 = 1;
    }
    else {
      uint64_t v24 = v13 / v21;
    }
    BOOL v25 = v19 > v14;
    uint64_t v26 = v14 / v19;
    if (v25) {
      uint64_t v27 = 1;
    }
    else {
      uint64_t v27 = v26;
    }
    char v39 = a7;
    if ((unint64_t)(v15 - 160) <= 0x3A && ((1 << (v15 + 96)) & 0x7FDF1FF7CFD54FFLL) != 0)
    {
      if ((unint64_t)(v15 - 186) > 0x20) {
        LODWORD(v28) = 1;
      }
      else {
        uint64_t v28 = qword_1B6EC4BE8[v15 - 186];
      }
      uint64_t v29 = 16 * (((int)v28 + (int)v13 - 1) / v28);
      int v30 = 1;
    }
    else
    {
      int v30 = 0;
      uint64_t v29 = sub_1B6368160(v15) * v13;
    }
    swift_getObjectType();
    uint64_t v31 = sub_1B6BBAFE8();
    uint64_t v32 = v27;
    if (v30)
    {
      if ((unint64_t)(v15 - 186) > 0x20) {
        LODWORD(v33) = 1;
      }
      else {
        uint64_t v33 = qword_1B6EC4CF0[v15 - 186];
      }
      uint64_t v32 = ((int)v33 + (int)v27 - 1) / v33;
    }
    sub_1B6367EB4(v24, v27, 1, 0, v15);
    sub_1B6389580(v24, v27, &v49);
    if (v43)
    {
      uint64_t v34 = 0;
      long long v40 = v49;
      uint64_t v35 = v50;
      do
      {
        if ((v12 & 0xFF00) == 0x100)
        {
          sub_1B638955C(0, 0, v34, &v49);
          uint64_t v38 = 0;
          long long v36 = v49;
          uint64_t v37 = v50;
        }
        else
        {
          sub_1B638955C(0, 0, 0, &v49);
          long long v36 = v49;
          uint64_t v37 = v50;
          uint64_t v38 = v34;
        }
        long long v49 = v40;
        uint64_t v50 = v35;
        long long v47 = v36;
        uint64_t v48 = v37;
        objc_msgSend(a8, sel_copyFromBuffer_sourceOffset_sourceBytesPerRow_sourceBytesPerImage_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, v46, v41 + v32 * v29 * (v34 / v21) + v34 % v21 * v31, v29, 0, &v49, a6, v38, 0, &v47);
        ++v34;
      }
      while (v43 != v34);
    }
    if (v39) {
      sub_1B63AF8CC(a6, a8);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6CFABF8(void *a1, id *a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  id v9 = objc_msgSend(*a2, sel_pixelFormat);
  if (v9 == (id)11 || v9 == (id)71 || v9 == (id)81)
  {
    uint64_t v11 = *a4;
    uint64_t v10 = a4[1];
    sub_1B6E33998();
    swift_bridgeObjectRetain_n();
    sub_1B6E318B8();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    long long v35 = v30;
    long long v36 = v31;
    uint64_t v37 = v32;
    long long v33 = v28;
    long long v34 = v29;
    uint64_t v12 = sub_1B6E33978();
    *(void *)&long long v28 = v11;
    *((void *)&v28 + 1) = v10;
    long long v29 = 0uLL;
    long long v30 = MEMORY[0x1E4FBC860];
    *(void *)&long long v31 = v12;
    id v13 = sub_1B679C370((uint64_t)&v28, 0, 0);
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    id v16 = *a2;
    id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_pixelFormat);
    id v18 = objc_msgSend(v16, sel_newTextureViewWithPixelFormat_, sub_1B6398884((uint64_t)v17));
    swift_unknownObjectRelease();
    if (!v18)
    {
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B62F3064(0, (unint64_t *)&qword_1EB97D7F0);
      sub_1B6E32B18();
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    swift_getObjectType();
    objc_msgSend(a1, sel_setTexture_atIndex_, v18, 0);
    id v19 = *a2;
    swift_unknownObjectRetain();
    sub_1B6B595FC(v13, (uint64_t)v19, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v21 = *a5;
    uint64_t v20 = a5[1];
    sub_1B6E33998();
    swift_bridgeObjectRetain_n();
    sub_1B6E318B8();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    long long v35 = v30;
    long long v36 = v31;
    uint64_t v37 = v32;
    long long v33 = v28;
    long long v34 = v29;
    uint64_t v22 = sub_1B6E33978();
    *(void *)&long long v28 = v21;
    *((void *)&v28 + 1) = v20;
    long long v29 = 0uLL;
    long long v30 = MEMORY[0x1E4FBC860];
    *(void *)&long long v31 = v22;
    id v23 = sub_1B679C370((uint64_t)&v28, 0, 0);
    BOOL v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    swift_getObjectType();
    objc_msgSend(a1, sel_setTexture_atIndex_, *a2, 0);
    id v26 = *a2;
    swift_unknownObjectRetain();
    sub_1B6B595FC(v23, (uint64_t)v26, 0);
  }
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6CFAFB0()
{
  sub_1B634F71C(v0, (uint64_t)v2);
  if ((v2[64] & 0x80000000) != 0) {
    return 0;
  }
  sub_1B62D6998((uint64_t)v2, (uint64_t)v3);
  sub_1B62D6998((uint64_t)v3, (uint64_t)v4);
  return qword_1B6EC4DF8[v4[64]];
}

uint64_t sub_1B6CFB01C(void *a1, unsigned int *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v253 = a3;
  uint64_t v234 = a1;
  sub_1B695A854();
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = &v218[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B6D0BA20(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v15);
  id v17 = &v218[-v16];
  int v18 = *((unsigned __int16 *)a2 + 12);
  int v242 = *((unsigned __int16 *)a2 + 13);
  int v243 = v18;
  int v19 = *((unsigned __int16 *)a2 + 14);
  int v240 = *((unsigned __int16 *)a2 + 15);
  int v241 = v19;
  int v237 = *((unsigned __int8 *)a2 + 32);
  int v239 = *((unsigned __int8 *)a2 + 33);
  int v20 = *((unsigned __int8 *)a2 + 34);
  uint64_t v254 = *((void *)a2 + 5);
  uint64_t v21 = *((void *)a2 + 6);
  uint64_t v244 = *((void *)a2 + 7);
  int64_t v235 = *((void *)a2 + 8);
  float v251 = (_UNKNOWN **)*((void *)a2 + 9);
  uint64_t v252 = v21;
  uint64_t v22 = *((void *)a2 + 10);
  uint64_t v249 = *((void *)a2 + 11);
  uint64_t v250 = v22;
  LODWORD(v22) = *((unsigned __int8 *)a2 + 96);
  int v247 = *((unsigned __int8 *)a2 + 97);
  int v248 = v22;
  LODWORD(v22) = *((unsigned __int8 *)a2 + 98);
  int v245 = *((unsigned __int8 *)a2 + 99);
  int v246 = v22;
  int v238 = v20;
  char v272 = v20;
  uint64_t v24 = *a2;
  uint64_t v23 = a2[1];
  swift_retain();
  uint64_t v236 = a5;
  if (__PAIR64__(v23, v24) != 0xFFFFFFFF)
  {
    uint64_t v233 = v17;
    unint64_t v89 = v24 | (v23 << 32);
    uint64_t v90 = sub_1B695E2FC(v89);
    if (v90)
    {
      sub_1B6A02FB0(v90, v310);
      swift_bridgeObjectRelease();
      sub_1B6355ED8((uint64_t)v310, (uint64_t)&v311, &qword_1E9DD8768, (uint64_t (*)(uint64_t))sub_1B6D0AFF0);
      if (*((void *)&v311 + 1))
      {
        uint64_t v91 = *((void *)&v312 + 1);
        uint64_t v231 = v313;
        uint64_t v232 = v312;
        uint64_t v230 = *((void *)&v313 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v93 = v231;
        uint64_t v92 = v232;
        *((void *)a2 + 13) = v232;
        *((void *)a2 + 14) = v91;
        uint64_t v94 = v230;
        *((void *)a2 + 15) = v93;
        *((void *)a2 + 16) = v94;
        uint64_t v95 = *((void *)a2 + 1);
        uint64_t v96 = *((void *)a2 + 2);
        uint64_t v255 = a4;
        uint64_t v97 = *((void *)a2 + 19);
        uint64_t v98 = *((void *)a2 + 20);
        unint64_t v316 = __PAIR64__(v23, v24);
        uint64_t v317 = v95;
        uint64_t v318 = v96;
        __int16 v319 = v243;
        __int16 v320 = v242;
        __int16 v321 = v241;
        __int16 v322 = v240;
        char v323 = v237;
        char v324 = v239;
        char v325 = v238;
        uint64_t v326 = v254;
        uint64_t v327 = v252;
        uint64_t v328 = v244;
        int64_t v329 = v235;
        char v330 = v251;
        uint64_t v331 = v250;
        uint64_t v332 = v249;
        char v333 = v248;
        char v334 = v247;
        char v335 = v246;
        char v336 = v245;
        uint64_t v337 = v92;
        uint64_t v338 = v91;
        uint64_t v339 = v93;
        uint64_t v340 = v94;
        long long v341 = *(_OWORD *)(a2 + 34);
        uint64_t v342 = v97;
        uint64_t v343 = v98;
        uint64_t v99 = sub_1B6CF9014();
        uint64_t v101 = v100;
        a4 = v255;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *((void *)a2 + 19) = v99;
        *((void *)a2 + 20) = v101;
      }
    }
    sub_1B695E41C(v89, (uint64_t)v11);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
    {
      sub_1B62C0094((uint64_t)v11, (uint64_t (*)(void))sub_1B695A854);
      return swift_release();
    }
    uint64_t v102 = v233;
    sub_1B6D0AD48((uint64_t)v11, (uint64_t)v233);
    unint64_t v103 = *(void *)&v102[*(int *)(v13 + 44)];
    if (v103)
    {
      if (v103 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_1B6E32C18())
        {
LABEL_54:
          if ((v103 & 0xC000000000000001) != 0)
          {
            uint64_t v105 = MEMORY[0x1BA9B4580](0, v103);
          }
          else
          {
            uint64_t v105 = *(void *)(v103 + 32);
            swift_unknownObjectRetain();
          }
          swift_bridgeObjectRelease();
          id v40 = sub_1B679EBDC(v105);
          uint64_t v42 = v106;
          swift_unknownObjectRelease();
          sub_1B6D0ADE4((uint64_t)v233);
          if (v42) {
            goto LABEL_5;
          }
LABEL_57:
          swift_release();
          return swift_unknownObjectRelease();
        }
      }
      else
      {
        uint64_t v104 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v104) {
          goto LABEL_54;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v102 = v233;
    }
    sub_1B6D0ADE4((uint64_t)v102);
    return swift_release();
  }
  uint64_t v255 = a4;
  if (qword_1E9DCC748 != -1) {
    swift_once();
  }
  uint64_t v26 = *((void *)a2 + 1);
  uint64_t v25 = *((void *)a2 + 2);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6D32580(v26, v25, 0x6C7070612E6D6F63, 0xED00007866762E65);
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)a2 + 13) = v27;
  *((void *)a2 + 14) = v29;
  *((void *)a2 + 15) = v31;
  *((void *)a2 + 16) = v33;
  uint64_t v34 = *((void *)a2 + 19);
  uint64_t v35 = *((void *)a2 + 20);
  unint64_t v316 = 0xFFFFFFFFLL;
  uint64_t v317 = v26;
  uint64_t v318 = v25;
  __int16 v319 = v243;
  __int16 v320 = v242;
  __int16 v321 = v241;
  __int16 v322 = v240;
  char v323 = v237;
  char v324 = v239;
  char v325 = v238;
  uint64_t v326 = v254;
  uint64_t v327 = v252;
  uint64_t v328 = v244;
  int64_t v329 = v235;
  char v330 = v251;
  uint64_t v331 = v250;
  uint64_t v332 = v249;
  char v333 = v248;
  char v334 = v247;
  char v335 = v246;
  char v336 = v245;
  uint64_t v337 = v27;
  uint64_t v338 = v29;
  uint64_t v339 = v31;
  uint64_t v340 = v33;
  long long v341 = *(_OWORD *)(a2 + 34);
  uint64_t v342 = v34;
  uint64_t v343 = v35;
  uint64_t v36 = sub_1B6CF9014();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)a2 + 19) = v36;
  *((void *)a2 + 20) = v38;
  sub_1B6E33998();
  swift_bridgeObjectRetain_n();
  sub_1B6E318B8();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33938();
  long long v313 = v300;
  long long v314 = v301;
  uint64_t v315 = v302;
  long long v312 = v299;
  long long v311 = v298;
  uint64_t v39 = sub_1B6E33978();
  v310[0] = v26;
  v310[1] = v25;
  v310[3] = 0;
  _OWORD v310[2] = 0;
  v310[4] = MEMORY[0x1E4FBC860];
  v310[5] = 0;
  v310[6] = v39;
  id v40 = sub_1B679C370((uint64_t)v310, 1, 0);
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  a4 = v255;
  if (!v42) {
    goto LABEL_57;
  }
LABEL_5:
  id v226 = v40;
  id v228 = v42;
  id v43 = objc_msgSend(v228, sel_bindings);
  sub_1B62F3064(0, (unint64_t *)&qword_1EB97D7E0);
  unint64_t v44 = sub_1B6E31C28();

  if (!(v44 >> 62))
  {
    uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v45) {
      goto LABEL_7;
    }
LABEL_59:
    swift_bridgeObjectRelease_n();
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v298 = 0;
    *((void *)&v298 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    long long v108 = v298;
    int v109 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v298 = 0;
    swift_retain();
    sub_1B6B33E34(v109, (uint64_t *)&v298, v108, *((uint64_t *)&v108 + 1));
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    id v110 = v228;

    swift_release();
    return swift_unknownObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1B6E32C18();
  if (!v45) {
    goto LABEL_59;
  }
LABEL_7:
  uint64_t v46 = 0;
  unint64_t v227 = HIDWORD(v253);
  while (1)
  {
    if ((v44 & 0xC000000000000001) != 0)
    {
      long long v47 = (void *)MEMORY[0x1BA9B4580](v46, v44);
    }
    else
    {
      long long v47 = *(void **)(v44 + 8 * v46 + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v47, sel_type) == (id)2 && objc_msgSend(v47, sel_access) == (id)2) {
      break;
    }
    swift_unknownObjectRelease();
    if (v45 == ++v46) {
      goto LABEL_59;
    }
  }
  uint64_t v222 = v47;
  swift_bridgeObjectRelease_n();
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v271 = sub_1B6B65EE4(v48);
  uint64_t v232 = *((void *)a2 + 17);
  swift_bridgeObjectRetain();
  id v49 = objc_msgSend(v228, sel_bindings);
  unint64_t v50 = sub_1B6E31C28();

  uint64_t v255 = a4;
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v51)
    {
LABEL_16:
      uint64_t v52 = 0;
      long long v53 = &selRef_exposure;
      do
      {
        if ((v50 & 0xC000000000000001) != 0)
        {
          objc_super v54 = (void *)MEMORY[0x1BA9B4580](v52, v50);
        }
        else
        {
          objc_super v54 = *(void **)(v50 + 8 * v52 + 32);
          swift_unknownObjectRetain();
        }
        if (objc_msgSend(v54, sel_access)
          || objc_msgSend(v54, sel_type)
          || (sub_1B6801E64((uint64_t)[v54 v53[205]]),
              int v256 = &unk_1F108F780,
              (uint64_t v55 = swift_dynamicCastObjCProtocolConditional()) == 0))
        {
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v56 = (void *)v55;
          swift_unknownObjectRetain();

          uint64_t v233 = (char *)objc_msgSend(v56, sel_bufferDataType);
          id v57 = [v54 v53[205]];
          uint64_t v58 = (uint64_t)v57;
          uint64_t v59 = *((void *)a2 + 17);
          if (!*(void *)(v59 + 16)
            || (v235 = (int64_t)v57, unint64_t v60 = sub_1B62C1A30((uint64_t)v57), v58 = v235, (v61 & 1) == 0)
            || (sub_1B634F71C(*(void *)(v59 + 56) + 80 * v60, (uint64_t)&v309),
                uint64_t v62 = sub_1B6CFAFB0(),
                uint64_t v58 = v235,
                (v63 & 1) != 0)
            || (char *)v62 != v233)
          {
            sub_1B62D97D8((uint64_t)v233, (uint64_t)v273);
            sub_1B6355BE8((uint64_t)v273, (uint64_t)v274, (unint64_t *)&qword_1EB980018, (uint64_t)&type metadata for DataValue);
            if (v275 != 255)
            {
              LODWORD(v233) = v275;
              uint64_t v220 = v274[0];
              uint64_t v221 = v274[1];
              uint64_t v223 = v274[2];
              uint64_t v224 = v274[3];
              uint64_t v225 = v274[4];
              uint64_t v229 = v274[5];
              uint64_t v230 = v274[6];
              uint64_t v231 = v274[7];
              LODWORD(v235) = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v64 = v58;
              *(void *)&long long v298 = *((void *)a2 + 17);
              uint64_t v65 = v298;
              *((void *)a2 + 17) = 0x8000000000000000;
              unint64_t v67 = sub_1B62C1A30(v64);
              char v68 = v66;
              uint64_t v69 = *(void *)(v65 + 16) + ((v66 & 1) == 0);
              if (*(void *)(v65 + 24) >= v69)
              {
                if ((v235 & 1) == 0)
                {
                  int64_t v235 = v67;
                  int v219 = v66;
                  sub_1B6ACE194();
                  char v68 = v219;
                  unint64_t v67 = v235;
                }
              }
              else
              {
                int v219 = v66;
                sub_1B6ABA390(v69, v235);
                int64_t v235 = v64;
                unint64_t v70 = sub_1B62C1A30(v64);
                char v68 = v219;
                if ((v219 & 1) != (v71 & 1))
                {
                  uint64_t result = sub_1B6E33838();
                  __break(1u);
                  return result;
                }
                unint64_t v67 = v70;
                uint64_t v64 = v235;
              }
              char v77 = (char)v233;
              uint64_t v79 = v230;
              uint64_t v78 = v231;
              uint64_t v80 = v229;
              uint64_t v81 = v224;
              uint64_t v82 = v225;
              uint64_t v83 = v223;
              uint64_t v85 = v220;
              uint64_t v84 = v221;
              uint64_t v86 = (void *)v298;
              if (v68)
              {
                uint64_t v87 = *(void *)(v298 + 56) + 80 * v67;
                *(void *)uint64_t v87 = v220;
                *(void *)(v87 + 8) = v84;
                *(void *)(v87 + 16) = v83;
                *(void *)(v87 + 24) = v81;
                *(void *)(v87 + 32) = v82;
                *(void *)(v87 + 40) = v80;
                *(void *)(v87 + 48) = v79;
                *(void *)(v87 + 56) = v78;
                *(unsigned char *)(v87 + 64) = v77;
              }
              else
              {
                *(void *)(v298 + 8 * (v67 >> 6) + 64) |= 1 << v67;
                *(void *)(v86[6] + 8 * v67) = v64;
                uint64_t v88 = v86[7] + 80 * v67;
                *(void *)uint64_t v88 = v85;
                *(void *)(v88 + 8) = v84;
                *(void *)(v88 + 16) = v83;
                *(void *)(v88 + 24) = v81;
                *(void *)(v88 + 32) = v82;
                *(void *)(v88 + 40) = v80;
                *(void *)(v88 + 48) = v79;
                *(void *)(v88 + 56) = v78;
                *(unsigned char *)(v88 + 64) = v77;
                ++v86[2];
              }
              *((void *)a2 + 17) = v86;
              swift_unknownObjectRelease_n();
              goto LABEL_45;
            }
            unint64_t v72 = sub_1B62C1A30(v58);
            if (v73)
            {
              unint64_t v74 = v72;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v76 = *((void *)a2 + 17);
              *(void *)&long long v298 = v76;
              *((void *)a2 + 17) = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1B6ACE194();
                uint64_t v76 = v298;
              }
              sub_1B6AC9128(v74, v76);
              *((void *)a2 + 17) = v76;
              swift_unknownObjectRelease_n();
LABEL_45:
              swift_bridgeObjectRelease();
              long long v53 = &selRef_exposure;
              goto LABEL_22;
            }
          }
          swift_unknownObjectRelease_n();
          long long v53 = &selRef_exposure;
        }
LABEL_22:
        ++v52;
      }
      while (v51 != v52);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v111 = v271;
  uint64_t v112 = v271 + 56;
  uint64_t v113 = 1 << *(unsigned char *)(v271 + 32);
  uint64_t v114 = -1;
  if (v113 < 64) {
    uint64_t v114 = ~(-1 << v113);
  }
  unint64_t v115 = v114 & *(void *)(v271 + 56);
  int64_t v116 = (unint64_t)(v113 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v117 = 0;
  int64_t v235 = v116 - 5;
  uint64_t v233 = (char *)(v111 + 96);
  while (v115)
  {
    unint64_t v118 = __clz(__rbit64(v115));
    v115 &= v115 - 1;
    unint64_t v119 = v118 | (v117 << 6);
LABEL_87:
    unint64_t v122 = sub_1B62C1A30(*(void *)(*(void *)(v111 + 48) + 8 * v119));
    if (v123)
    {
      unint64_t v124 = v122;
      char v125 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v126 = *((void *)a2 + 17);
      *(void *)&long long v298 = v126;
      *((void *)a2 + 17) = 0x8000000000000000;
      if ((v125 & 1) == 0)
      {
        sub_1B6ACE194();
        uint64_t v126 = v298;
      }
      sub_1B6AC9128(v124, v126);
      *((void *)a2 + 17) = v126;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v120 = v117 + 1;
  if (v117 + 1 >= v116) {
    goto LABEL_91;
  }
  unint64_t v121 = *(void *)(v112 + 8 * v120);
  if (v121) {
    goto LABEL_86;
  }
  uint64_t v120 = v117 + 2;
  if (v117 + 2 >= v116) {
    goto LABEL_91;
  }
  unint64_t v121 = *(void *)(v112 + 8 * v120);
  if (v121) {
    goto LABEL_86;
  }
  uint64_t v120 = v117 + 3;
  if (v117 + 3 >= v116) {
    goto LABEL_91;
  }
  unint64_t v121 = *(void *)(v112 + 8 * v120);
  if (v121) {
    goto LABEL_86;
  }
  uint64_t v120 = v117 + 4;
  if (v117 + 4 >= v116) {
    goto LABEL_91;
  }
  unint64_t v121 = *(void *)(v112 + 8 * v120);
  if (v121)
  {
LABEL_86:
    unint64_t v115 = (v121 - 1) & v121;
    unint64_t v119 = __clz(__rbit64(v121)) + (v120 << 6);
    uint64_t v117 = v120;
    goto LABEL_87;
  }
  while (v235 != v117)
  {
    unint64_t v121 = *(void *)&v233[8 * v117++];
    if (v121)
    {
      uint64_t v120 = v117 + 4;
      goto LABEL_86;
    }
  }
LABEL_91:
  swift_release();
  char v127 = sub_1B6985050(*((void *)a2 + 17), v232);
  swift_bridgeObjectRelease();
  if (v127)
  {
    swift_bridgeObjectRelease();
    uint64_t v128 = v255;
    int64_t v129 = v253;
  }
  else
  {
    long long v130 = *((_OWORD *)a2 + 9);
    long long v306 = *((_OWORD *)a2 + 8);
    long long v307 = v130;
    uint64_t v308 = *((void *)a2 + 20);
    long long v131 = *((_OWORD *)a2 + 5);
    long long v302 = *((_OWORD *)a2 + 4);
    long long v303 = v131;
    long long v132 = *((_OWORD *)a2 + 7);
    long long v304 = *((_OWORD *)a2 + 6);
    long long v305 = v132;
    long long v133 = *((_OWORD *)a2 + 1);
    long long v298 = *(_OWORD *)a2;
    long long v299 = v133;
    long long v134 = *((_OWORD *)a2 + 3);
    long long v300 = *((_OWORD *)a2 + 2);
    long long v301 = v134;
    uint64_t v135 = *((void *)&v307 + 1);
    uint64_t v136 = v308;
    uint64_t v137 = sub_1B6CF9014();
    uint64_t v139 = v138;
    v345[0] = v135;
    sub_1B62D8C3C((uint64_t)v345);
    uint64_t v344 = v136;
    sub_1B62D8C3C((uint64_t)&v344);
    *((void *)a2 + 19) = v137;
    *((void *)a2 + 20) = v139;
    uint64_t v128 = v255;
    uint64_t v225 = OBJC_IVAR____TtC3VFX13EntityManager_replicationStream;
    int64_t v129 = v253;
    if (*(void *)(v255 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream))
    {
      uint64_t v140 = *((void *)&v304 + 1);
      unint64_t v142 = *((void *)&v305 + 1);
      unint64_t v141 = v305;
      uint64_t v143 = v306;
      uint64_t KeyPath = swift_getKeyPath();
      *(void *)&long long v287 = __PAIR64__(v227, v129);
      *((void *)&v287 + 1) = v128;
      sub_1B677BF9C();
      *((void *)&v289 + 1) = v145;
      *(void *)&long long v290 = &off_1F0F7FE30;
      uint64_t v146 = swift_allocObject();
      *(void *)&long long v288 = v146;
      *(void *)(v146 + 16) = KeyPath;
      *(void *)(v146 + 24) = v140;
      *(_OWORD *)(v146 + 32) = __PAIR128__(v142, v141);
      *(void *)(v146 + 48) = v143;
      BYTE8(v290) = 11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6A62610((uint64_t)&v287);
      sub_1B67421B0((uint64_t)&v287);
      uint64_t v147 = *((void *)a2 + 14);
      int64_t v148 = *(void *)(v147 + 16);
      if (v148)
      {
        swift_bridgeObjectRetain();
        uint64_t v149 = 72;
        uint64_t v223 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v224 = v147;
        do
        {
          int64_t v235 = v148;
          uint64_t v233 = (char *)v149;
          uint64_t v152 = *(void *)(v147 + v149);
          uint64_t v153 = *(void *)(v152 + 16);
          uint64_t v154 = *(void *)(v152 + 24);
          uint64_t v155 = *(void *)(v152 + 40);
          uint64_t v231 = *(void *)(v152 + 144);
          uint64_t v232 = v153;
          uint64_t v156 = *(void *)(v152 + 152);
          char v157 = *(unsigned char *)(v152 + 188);
          double v158 = *(float *)(v152 + 184);
          if (v157) {
            double v158 = 0.0;
          }
          uint64_t v229 = *(void *)&v158;
          uint64_t v230 = v156;
          char v159 = *(unsigned char *)(v152 + 196);
          if (v159) {
            double v160 = 0.0;
          }
          else {
            double v160 = *(float *)(v152 + 192);
          }
          char v161 = *(unsigned char *)(v152 + 204);
          if (v161) {
            double v162 = 0.0;
          }
          else {
            double v162 = *(float *)(v152 + 200);
          }
          long long v276 = 0u;
          long long v277 = 0u;
          swift_retain_n();
          swift_bridgeObjectRetain();
          uint64_t v163 = *(void *)&v160;
          int64_t v129 = v253;
          uint64_t v164 = sub_1B62B2E34(v155, (uint64_t)&v276, v232, v154, v229, v157, v163, v159, *(uint64_t *)&v162, v161, v231, v230, 0, 0, 0, (uint64_t)&type metadata for TextureShaderAsset, v155, (uint64_t)&off_1F0F7B1C8);
          swift_bridgeObjectRelease();
          sub_1B639579C((uint64_t)&v276, (uint64_t)&qword_1EB980F60, v223, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6355C68);
          uint64_t v165 = *(void *)(v164 + 32);
          swift_retain();
          swift_release();
          uint64_t v166 = *(void *)(v152 + 16);
          uint64_t v167 = *(void *)(v152 + 24);
          long long v168 = *((_OWORD *)a2 + 9);
          long long v295 = *((_OWORD *)a2 + 8);
          long long v296 = v168;
          uint64_t v297 = *((void *)a2 + 20);
          long long v169 = *((_OWORD *)a2 + 5);
          long long v291 = *((_OWORD *)a2 + 4);
          long long v292 = v169;
          long long v170 = *((_OWORD *)a2 + 7);
          long long v293 = *((_OWORD *)a2 + 6);
          long long v294 = v170;
          long long v171 = *((_OWORD *)a2 + 1);
          long long v287 = *(_OWORD *)a2;
          long long v288 = v171;
          long long v172 = *((_OWORD *)a2 + 3);
          long long v289 = *((_OWORD *)a2 + 2);
          long long v290 = v172;
          swift_bridgeObjectRetain();
          sub_1B6CF762C(v166, v167, (uint64_t)&v257);
          swift_bridgeObjectRelease();
          *(void *)&long long v276 = __PAIR64__(v227, v129);
          uint64_t v173 = v255;
          *((void *)&v276 + 1) = v255;
          sub_1B6D0AED0();
          uint64_t v279 = v174;
          uint64_t v280 = &off_1F0F7FE30;
          uint64_t v175 = swift_allocObject();
          *(void *)&long long v277 = v175;
          sub_1B62CAAD8((uint64_t)&v257, v175 + 24);
          *(void *)(v175 + 16) = v165;
          LOBYTE(v281) = 11;
          swift_retain();
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v257);
          uint64_t v176 = *(void *)(v173 + v225);
          if (v176 && (*(unsigned char *)(v176 + 81) & 1) != 0 && *(void *)(v176 + 24) && swift_weakLoadStrong())
          {
            swift_retain();
            swift_unknownObjectRetain();
            swift_release();
            sub_1B6873570((uint64_t)&v276, (uint64_t)&v257);
            uint64_t v177 = *(void **)(v176 + 16);
            char v178 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v176 + 16) = v177;
            if ((v178 & 1) == 0)
            {
              uint64_t v177 = sub_1B68C0B2C(0, v177[2] + 1, 1, v177);
              *(void *)(v176 + 16) = v177;
            }
            unint64_t v180 = v177[2];
            unint64_t v179 = v177[3];
            if (v180 >= v179 >> 1)
            {
              uint64_t v177 = sub_1B68C0B2C(v179 > 1, v180 + 1, 1, v177);
              *(void *)(v176 + 16) = v177;
            }
            v177[2] = v180 + 1;
            sub_1B68735CC((uint64_t)&v257, (uint64_t)&v177[8 * v180 + 4]);
            swift_release_n();
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release_n();
          }
          swift_release();
          uint64_t v147 = v224;
          int64_t v150 = v235;
          long long v151 = v233;
          sub_1B67421B0((uint64_t)&v276);
          uint64_t v149 = (uint64_t)(v151 + 48);
          int64_t v148 = v150 - 1;
        }
        while (v148);
        swift_bridgeObjectRelease();
        uint64_t v128 = v255;
      }
      swift_bridgeObjectRelease();
      uint64_t v181 = swift_getKeyPath();
      *(void *)&long long v276 = __PAIR64__(v227, v129);
      *((void *)&v276 + 1) = v128;
      sub_1B6D0AF88();
      uint64_t v279 = v182;
      uint64_t v280 = &off_1F0F7FE30;
      *(void *)&long long v277 = v181;
      BYTE8(v277) = 1;
      LOBYTE(v281) = 11;
      sub_1B6A62610((uint64_t)&v276);
      sub_1B67421B0((uint64_t)&v276);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v184 = *((void *)a2 + 1);
  uint64_t v183 = *((void *)a2 + 2);
  uint64_t v185 = sub_1B6E31828();
  uint64_t v187 = v186;
  int v270 = &unk_1F10901A8;
  uint64_t v188 = swift_dynamicCastObjCProtocolConditional();
  if (v188)
  {
    id v189 = (void *)v188;
    swift_unknownObjectRetain_n();
    if (objc_msgSend(v189, sel_textureType) == (id)3)
    {
      int64_t v235 = v184;
      *(void *)&long long v276 = v185;
      *((void *)&v276 + 1) = v187;
      uint64_t v257 = 1700951395;
      unint64_t v258 = 0xE400000000000000;
      sub_1B633AF88();
      if (sub_1B6E32678())
      {
        swift_bridgeObjectRelease();
        uint64_t v252 = 5;
        uint64_t v184 = v235;
LABEL_134:
        if ((unint64_t)(v254 - 160) <= 0x3A
          && ((1 << (v254 + 96)) & 0x7FDF1FF7CFD54FFLL) != 0)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          *(void *)&long long v276 = 0;
          *((void *)&v276 + 1) = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(v254);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v197 = *((void *)&v276 + 1);
          uint64_t v196 = v276;
          int v198 = sub_1B6E32148();
          if (qword_1EB9854F8 == -1) {
            goto LABEL_139;
          }
LABEL_165:
          swift_once();
          goto LABEL_139;
        }
        swift_getObjectType();
        unint64_t v190 = (unint64_t)v189;
        id v217 = objc_msgSend(v189, sel_textureDataType);
        if (sub_1B6BBF2D0(v254, (uint64_t)v217))
        {
          swift_unknownObjectRelease();
          int64_t v129 = v253;
          goto LABEL_123;
        }
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        *(void *)&long long v276 = 0;
        *((void *)&v276 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(v254);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v257 = (uint64_t)objc_msgSend(v189, sel_textureDataType);
        type metadata accessor for MTLDataType(0);
        sub_1B6E32B18();
        sub_1B6E31948();
        uint64_t v197 = *((void *)&v276 + 1);
        uint64_t v196 = v276;
        int v198 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          goto LABEL_165;
        }
LABEL_139:
        *(void *)&long long v276 = 0;
        swift_retain();
        sub_1B6B33E34(v198, (uint64_t *)&v276, v196, v197);
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        id v199 = v228;

        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        return swift_unknownObjectRelease();
      }
      *(void *)&long long v276 = v185;
      *((void *)&v276 + 1) = v187;
      uint64_t v257 = 0x786F62796B73;
      unint64_t v258 = 0xE600000000000000;
      char v200 = sub_1B6E32678();
      swift_bridgeObjectRelease();
      uint64_t v184 = v235;
      if (v200)
      {
        uint64_t v252 = 5;
        goto LABEL_134;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v252 = (uint64_t)objc_msgSend(v189, sel_textureType);
    goto LABEL_134;
  }
  swift_bridgeObjectRelease();
  unint64_t v190 = 0;
LABEL_123:
  unint64_t v253 = v190;
  if (v129 == -1 && !v227)
  {
LABEL_146:
    LOBYTE(v195) = 1;
    goto LABEL_147;
  }
  swift_retain();
  uint64_t v191 = sub_1B6960630(v129);
  __int16 v193 = v192;
  swift_release();
  if ((v193 & 0x100) != 0)
  {
    swift_retain();
    BOOL v201 = sub_1B62EC0CC((uint64_t)&type metadata for TextureRequireMipmapGeneration, (uint64_t)&off_1F0F9AAB0, v129);
    swift_release();
    if (v201)
    {
      LOWORD(v276) = v243;
      WORD1(v276) = v242;
      WORD2(v276) = v241;
      WORD3(v276) = v240;
      BYTE8(v276) = v237;
      BYTE9(v276) = v239;
      BYTE10(v276) = v238;
      *(void *)&long long v277 = v254;
      *((void *)&v277 + 1) = v252;
      uint64_t v278 = v244;
      uint64_t v279 = 3;
      uint64_t v280 = v251;
      uint64_t v281 = v250;
      uint64_t v282 = v249;
      char v283 = v248;
      char v284 = v247;
      char v285 = v246;
      char v286 = v245;
      LOBYTE(v195) = sub_1B638D61C();
      goto LABEL_147;
    }
    goto LABEL_146;
  }
  LOWORD(v276) = v243;
  WORD1(v276) = v242;
  WORD2(v276) = v241;
  WORD3(v276) = v240;
  BYTE8(v276) = v237;
  BYTE9(v276) = v239;
  BYTE10(v276) = v238;
  *(void *)&long long v277 = v254;
  *((void *)&v277 + 1) = v252;
  uint64_t v278 = v244;
  uint64_t v279 = 3;
  uint64_t v280 = v251;
  uint64_t v281 = v250;
  uint64_t v282 = v249;
  char v283 = v248;
  char v284 = v247;
  char v285 = v246;
  char v286 = v245;
  uint64_t v194 = sub_1B638D61C();
  if (v193) {
    uint64_t v195 = v194;
  }
  else {
    uint64_t v195 = v191;
  }
  if (v195 <= 0)
  {
    if (v194 < 1) {
      goto LABEL_158;
    }
    goto LABEL_146;
  }
  if (v194 >= v195) {
    goto LABEL_147;
  }
LABEL_158:
  LOBYTE(v195) = v194;
LABEL_147:
  char v202 = v272;
  id v203 = objc_allocWithZone(MEMORY[0x1E4F35330]);
  swift_bridgeObjectRetain();
  id v204 = objc_msgSend(v203, sel_init);
  LOWORD(v257) = v243;
  WORD1(v257) = v242;
  WORD2(v257) = v241;
  HIWORD(v257) = v240;
  LOBYTE(v258) = v195;
  BYTE1(v258) = v239;
  BYTE2(v258) = v202;
  uint64_t v259 = v254;
  uint64_t v260 = v252;
  uint64_t v261 = v244;
  uint64_t v262 = 3;
  char v263 = v251;
  uint64_t v264 = v250;
  uint64_t v265 = v249;
  char v266 = v248;
  char v267 = v247;
  char v268 = v246;
  char v269 = v245;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v257, v204);
  float32x4_t v205 = sub_1B639E4E4(v204, v184, v183);
  swift_bridgeObjectRelease();

  if (!v205)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v213 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v257 = 0;
    swift_retain();
    sub_1B6B33E34(v213, &v257, 0xD000000000000018, 0x80000001B6F416B0);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    id v214 = v228;

    swift_release();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  float32x4_t v206 = v234;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *float32x4_t v206 = v205;
  float32x4_t v207 = v226;
  if (!v226)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    id v215 = v228;

    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  float32x4_t v208 = (void *)sub_1B6802298(0x657475706D6F43, 0xE700000000000000, 0);
  char v209 = (void *)sub_1B6E31768();
  objc_msgSend(v208, sel_pushDebugGroup_, v209);

  sub_1B6D08590(v208, v205, (void *)v253, v222, (uint64_t)a2, v128, v207);
  objc_msgSend(v208, sel_popDebugGroup);
  swift_unknownObjectRelease();
  if ((uint64_t)objc_msgSend(v205, sel_mipmapLevelCount) < 2)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
    id v216 = v228;

    return swift_unknownObjectRelease();
  }
  float32x4_t v210 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
  uint64_t v211 = (void *)sub_1B6E31768();
  objc_msgSend(v210, sel_pushDebugGroup_, v211);

  swift_unknownObjectRetain();
  sub_1B63AF8CC(v205, v210);
  swift_unknownObjectRelease();
  objc_msgSend(v210, sel_popDebugGroup);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease_n();
  id v212 = v228;

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B6CFCFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 152);
  uint64_t v4 = *(void *)(a2 + 160);
  uint64_t v5 = sub_1B6CF9014();
  uint64_t v7 = v6;
  uint64_t v10 = v3;
  sub_1B62D8C3C((uint64_t)&v10);
  uint64_t v9 = v4;
  uint64_t result = sub_1B62D8C3C((uint64_t)&v9);
  *(void *)(a2 + 152) = v5;
  *(void *)(a2 + 160) = v7;
  return result;
}

unint64_t sub_1B6CFD06C()
{
  CFURLRef v0 = (const __CFURL *)sub_1B6E30E78();
  uint64_t v1 = CGImageSourceCreateWithURL(v0, 0);

  if (!v1) {
    goto LABEL_7;
  }
  CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v1, 0, 0);
  if (!ImageAtIndex)
  {

LABEL_7:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E30F48();
    sub_1B6D0ACFC((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0x80000001B6F52780;
    sub_1B6D0ACA8();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD00000000000001FLL;
    *(void *)(v6 + 8) = 0x80000001B6F52780;
    *(unsigned char *)(v6 + 16) = 0;
    swift_willThrow();
    return v5;
  }
  CGImageRef v3 = ImageAtIndex;
  uint64_t v4 = sub_1B6508190();
  if (v4)
  {
    unint64_t v5 = v4;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E30F48();
    sub_1B6D0ACFC((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0x80000001B6F527A0;
    sub_1B6D0ACA8();
    swift_allocError();
    *(void *)uint64_t v7 = 0xD000000000000023;
    *(void *)(v7 + 8) = 0x80000001B6F527A0;
    *(unsigned char *)(v7 + 16) = 0;
    swift_willThrow();
  }

  return v5;
}

char *sub_1B6CFD2B4(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v5 = sub_1B6E30F48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B6E312C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v65 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B6E31288();
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  MEMORY[0x1F4188790](v14, v15);
  id v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a3;
  uint64_t v58 = *(void **)(a3 + 16);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1B6385660(v10, (uint64_t)qword_1EB997E68);
  sub_1B6E312A8();
  sub_1B6E31268();
  int v19 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v65, v18, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  uint64_t v20 = swift_slowAlloc();
  uint64_t v59 = v11;
  uint64_t v60 = v10;
  uint64_t v64 = v17;
  uint64_t v21 = (uint8_t *)v20;
  uint64_t v57 = swift_slowAlloc();
  v66[0] = v57;
  *(_DWORD *)uint64_t v21 = 136315138;
  uint64_t v22 = sub_1B6E30E08();
  uint64_t v67 = sub_1B6385A2C(v22, v23, v66);
  sub_1B6E325A8();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v56 = v5;
  v24(v9, v5);
  uint64_t v25 = sub_1B6E312A8();
  os_signpost_type_t v26 = sub_1B6E322B8();
  uint64_t v27 = v64;
  os_signpost_id_t v28 = sub_1B6E31278();
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v25, v26, v28, "loadGPUTextureAsIOSurface", "URL: %s", v21, 0xCu);
  uint64_t v29 = v61;
  unint64_t v30 = sub_1B6CFD06C();
  if (v29)
  {

    (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v60);
LABEL_68:
    (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v63);
    return v19;
  }
  uint64_t v31 = (__IOSurface *)v30;
  uint64_t v61 = 0;
  os_signpost_type_t v32 = sub_1B6E322A8();
  os_signpost_id_t v33 = sub_1B6E31278();
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v25, v32, v33, "loadGPUTextureAsIOSurface", "URL: %s", v21, 0xCu);

  uint64_t v34 = v57;
  swift_arrayDestroy();
  MEMORY[0x1BA9B84C0](v34, -1, -1);
  MEMORY[0x1BA9B84C0](v21, -1, -1);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v60);
  size_t Width = IOSurfaceGetWidth(v31);
  size_t Height = IOSurfaceGetHeight(v31);
  uint64_t v65 = (char *)v31;
  signed int PixelFormat = IOSurfaceGetPixelFormat(v31);
  id v38 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 0, Width, Height, 0, v54);
  objc_msgSend(v38, sel_setUsage_, 1);
  if (PixelFormat > 1278226487)
  {
    if (PixelFormat <= 2016686641)
    {
      uint64_t v39 = v58;
      if (PixelFormat == 1278226488)
      {
        uint64_t v41 = v38;
        if ((*v55 & 4) != 0) {
          uint64_t v40 = 10;
        }
        else {
          uint64_t v40 = 11;
        }
        goto LABEL_52;
      }
      if (PixelFormat != 2016686640) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v39 = v58;
      if (PixelFormat == 2016686642) {
        goto LABEL_18;
      }
      if (PixelFormat != 2019963440)
      {
        if (PixelFormat != 2019963442) {
          goto LABEL_47;
        }
LABEL_18:
        if ((*v55 & 4) != 0)
        {
          if (qword_1E9DCC6A8 != -1) {
            swift_once();
          }
          uint64_t v40 = qword_1E9E49740;
        }
        else
        {
          if (qword_1E9DCC6B0 != -1) {
            swift_once();
          }
          uint64_t v40 = qword_1E9E49748;
        }
        goto LABEL_51;
      }
    }
    if ((*v55 & 4) != 0)
    {
      if (qword_1E9DCC688 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_1E9E49720;
    }
    else
    {
      if (qword_1E9DCC690 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_1E9E49728;
    }
    goto LABEL_51;
  }
  if (PixelFormat > 875704437)
  {
    uint64_t v39 = v58;
    if (PixelFormat != 875704438)
    {
      if (PixelFormat == 875704934 || PixelFormat == 875704950)
      {
        if ((*v55 & 4) != 0)
        {
          if (qword_1E9DCC698 != -1) {
            swift_once();
          }
          uint64_t v40 = qword_1E9E49730;
        }
        else
        {
          if (qword_1E9DCC6A0 != -1) {
            swift_once();
          }
          uint64_t v40 = qword_1E9E49738;
        }
LABEL_51:
        uint64_t v41 = v38;
        goto LABEL_52;
      }
LABEL_47:
      v66[0] = 0;
      v66[1] = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      LODWORD(v67) = PixelFormat;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6D0ACFC((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
LABEL_58:
      int v19 = (char *)v66[0];
      uint64_t v43 = v66[1];
      sub_1B6D0ACA8();
      swift_allocError();
      *(void *)uint64_t v44 = v19;
      *(void *)(v44 + 8) = v43;
      *(unsigned char *)(v44 + 16) = 0;
      swift_willThrow();

LABEL_67:
      uint64_t v27 = v64;
      goto LABEL_68;
    }
LABEL_24:
    if ((*v55 & 4) != 0)
    {
      if (qword_1E9DCC678 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_1E9E49710;
    }
    else
    {
      if (qword_1E9DCC680 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_1E9E49718;
    }
    goto LABEL_51;
  }
  uint64_t v39 = v58;
  if (PixelFormat != 843264056)
  {
    if (PixelFormat != 875704422) {
      goto LABEL_47;
    }
    goto LABEL_24;
  }
  uint64_t v41 = v38;
  if ((*v55 & 4) != 0) {
    uint64_t v40 = 30;
  }
  else {
    uint64_t v40 = 31;
  }
LABEL_52:
  objc_msgSend(v41, sel_setPixelFormat_, v40);
  swift_getObjectType();
  objc_msgSend(v38, sel_pixelFormat);
  if ((sub_1B6BBC86C() & 1) == 0)
  {
    v66[0] = 0;
    v66[1] = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    strcpy((char *)v66, "PixelFormat ");
    BYTE5(v66[1]) = 0;
    HIWORD(v66[1]) = -5120;
    _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)objc_msgSend(v38, sel_pixelFormat));
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    goto LABEL_58;
  }
  unint64_t v42 = (unint64_t)objc_msgSend(v38, sel_pixelFormat);
  if (v42 <= 0x37 && ((1 << v42) & 0xE0000003D07C00) != 0)
  {
    if (sub_1B6BBF568())
    {
      objc_msgSend(v38, sel_setSwizzle_, 33686018);
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v66[0] = 0;
      v66[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      v66[0] = 0xD000000000000030;
      v66[1] = 0x80000001B6F52740;
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)objc_msgSend(v38, sel_pixelFormat));
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v45 = v66[0];
      uint64_t v46 = v66[1];
      int v47 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v66[0] = 0;
      swift_retain();
      sub_1B6B33E34(v47, v66, v45, v46);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v39 = v58;
    }
  }
  uint64_t v48 = v65;
  id v49 = (char *)objc_msgSend(v39, sel_newTextureWithDescriptor_iosurface_plane_, v38, v65, 0);
  if (!v49)
  {
    v66[0] = 0;
    v66[1] = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    v66[0] = 0xD00000000000002CLL;
    v66[1] = 0x80000001B6F52710;
    sub_1B6D0ACFC((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    int v19 = (char *)v66[0];
    uint64_t v51 = v66[1];
    sub_1B6D0ACA8();
    swift_allocError();
    *(void *)uint64_t v52 = v19;
    *(void *)(v52 + 8) = v51;
    *(unsigned char *)(v52 + 16) = 0;
    swift_willThrow();

    goto LABEL_67;
  }
  int v19 = v49;
  sub_1B6331FD0((uint64_t)v49);
  sub_1B6E30E58();
  unint64_t v50 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setLabel_, v50);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v63);
  return v19;
}

uint64_t sub_1B6CFDF50()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = swift_allocObject();
    swift_weakInit();
    uint64_t v3 = v1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock;
    uint64_t v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock + 24);
    swift_retain();
    os_unfair_lock_lock(v4);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1B6D0B1A0;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks;
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + v6) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v7 = sub_1B62CACA8(0, v7[2] + 1, 1, v7);
      *(void *)(v1 + v6) = v7;
    }
    unint64_t v10 = v7[2];
    unint64_t v9 = v7[3];
    if (v10 >= v9 >> 1) {
      uint64_t v7 = sub_1B62CACA8(v9 > 1, v10 + 1, 1, v7);
    }
    _OWORD v7[2] = v10 + 1;
    uint64_t v11 = &v7[2 * v10];
    v11[4] = sub_1B6377A84;
    _OWORD v11[5] = v5;
    *(void *)(v1 + v6) = v7;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 24));
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1B6CFE0B8()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_1EB997A18;
    int v9 = 0;
    char v10 = 2;
    uint64_t v11 = 0;
    char v12 = 2;
    uint64_t v13 = 0;
    swift_retain();
    sub_1B636DA60(3, (uint64_t)v2);
    swift_release();
    v6[0] = v2[0];
    v6[1] = v2[1];
    uint64_t v7 = v3;
    sub_1B62C9DA8(v1, (uint64_t)v6, 0x200000000, v4);
    sub_1B6355BE8((uint64_t)v4, (uint64_t)v5, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v5[0])
    {
      v5[8] = v5[2];
      v5[9] = v5[3];
      v5[10] = v5[4];
      v5[11] = v5[5];
      v5[6] = v5[0];
      v5[7] = v5[1];
      sub_1B68457BC();
      sub_1B6355CB4(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    sub_1B696E534(v1);
    sub_1B62CA064((uint64_t)v2);
    return swift_release();
  }
  return result;
}

void sub_1B6CFE324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v88 = a3;
  uint64_t v90 = sub_1B6E30F48();
  MEMORY[0x1F4188790](v90, v5);
  uint64_t v92 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = a2 + 16;
    uint64_t v10 = a1 + 32;
    uint64_t v83 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v87 = a1;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v85 = 0;
    unint64_t v79 = 0x80000001B6F384A0;
    unint64_t v80 = 0x80000001B6F38470;
    unint64_t v81 = 0x80000001B6F52EA0;
    unint64_t v82 = 0x80000001B6F52E60;
    uint64_t v89 = v8;
    uint64_t v91 = v10;
    while (1)
    {
      char v12 = (int *)(v10 + 8 * v11);
      int v13 = v12[1];
      uint64_t v14 = *v12;
      int v15 = *v12;
      uint64_t v16 = v9;
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        BOOL v19 = v15 == -1 && v13 == 0;
        if (v19
          || (v14 & 0x80000000) != 0
          || *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v14
          || ((uint64_t v20 = *(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries), v13 != -1)
            ? (BOOL v21 = *(_DWORD *)(v20 + 12 * (int)v14 + 8) == v13)
            : (BOOL v21 = 1),
              !v21))
        {
          swift_release();
        }
        else
        {
          uint64_t v22 = *(void *)(*(void *)(Strong + 136) + 8 * *(int *)(v20 + 12 * (int)v14) + 32);
          uint64_t v23 = *(void *)(*(void *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                          + 8 * *(void *)thread_worker_index(&thread_worker_index, v18)
                          + 8);
          uint64_t v25 = *(void *)(v22 + 192);
          if (v25)
          {
            uint64_t v26 = *(void *)(v22 + 208);
            uint64_t v27 = 8 * (v24 >> 6);
            *(void *)(v25 + v27) |= 1 << v24;
            *(void *)(v26 + v27) &= ~(1 << v24);
          }
          if (*(unsigned char *)(*(void *)(v22 + 40) + 213) == 1)
          {
            uint64_t v28 = *(void *)(v22 + 48);
            uint64_t v29 = *(void *)(v28 + 16);
            uint64_t v78 = v23;
            uint64_t v86 = v24;
            if (v29)
            {
              unint64_t v30 = (char **)(v28 + 56);
              while (*(v30 - 3) != (char *)&type metadata for PropagateDirtiness)
              {
                v30 += 5;
                if (!--v29) {
                  goto LABEL_22;
                }
              }
              uint64_t v84 = *v30;
            }
            else
            {
LABEL_22:
              uint64_t v84 = 0;
            }
            uint64_t v50 = *(void *)(v22 + 128);
            char v51 = *(unsigned char *)(v22 + 184);
            uint64_t v52 = swift_retain();
            if (v51)
            {
              int v74 = 0;
              uint64_t v73 = 204;
              sub_1B6E32BE8();
              __break(1u);
              return;
            }
            unsigned int v53 = *(_DWORD *)(*(void *)(v22 + 168) + 4 * v86);
            uint64_t v54 = &v84[8 * v86 + v50];
            uint64_t v55 = *(unsigned int *)(*(void *)(v52 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v53 + 8);
            swift_release();
            uint64_t v56 = *(unsigned int *)v54;
            uint64_t v57 = *((unsigned int *)v54 + 1);
            if (v56 != -1 || v57 != 0) {
              sub_1B6398CA0(&v93, v53 | (unint64_t)(v55 << 32), v56 | (v57 << 32));
            }
            swift_release();
            uint64_t v8 = v89;
            uint64_t v10 = v91;
          }
          else
          {
            swift_release();
            uint64_t v10 = v91;
          }
        }
      }
      uint64_t v31 = swift_weakLoadStrong();
      if (v31)
      {
        BOOL v32 = v15 == -1 && v13 == 0;
        if (!v32
          && (v14 & 0x80000000) == 0
          && (os_signpost_id_t v33 = (uint64_t *)(v31 + OBJC_IVAR____TtC3VFX13EntityManager__entries),
              *(void *)(v31 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v14)
          && ((uint64_t v34 = *v33, v35 = *v33 + 12 * (int)v14, v36 = *(__int16 *)(v35 + 4), v13 == -1)
           || *(_DWORD *)(v35 + 8) == v13)
          && (uint64_t v37 = *(void *)(*(void *)(v31 + 136) + 8 * *(int *)(v34 + 12 * (int)v14) + 32),
              uint64_t v38 = *(void *)(v37 + 48),
              (uint64_t v39 = *(void *)(v38 + 16)) != 0))
        {
          uint64_t v40 = (void *)(v38 + 56);
          while ((ValueMetadata *)*(v40 - 3) != &type metadata for TextureFileAsset)
          {
            v40 += 5;
            if (!--v39) {
              goto LABEL_37;
            }
          }
          uint64_t v41 = (void *)(*(void *)(v37 + 128) + *v40 + 48 * v36);
          uint64_t v43 = v41[1];
          uint64_t v42 = v41[2];
          uint64_t v45 = v41[3];
          uint64_t v44 = (void *)v41[4];
          uint64_t v77 = v41[5];
          uint64_t v78 = v42;
          uint64_t v46 = v44;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_release();
          uint64_t v86 = v43;
          uint64_t v84 = v46;
          if (v44)
          {
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v48 = v77;
            uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v49 = v46;
            v76(v78, v45, ObjectType, v48);
          }
          else
          {
            uint64_t v59 = qword_1EB9852D0;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v59 != -1) {
              swift_once();
            }
            uint64_t v93 = 0;
            unint64_t v94 = 0xE000000000000000;
            uint64_t v77 = qword_1EB997FD0;
            swift_retain();
            sub_1B6E328C8();
            sub_1B6E31948();
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            uint64_t v60 = v93;
            uint64_t v61 = v94;
            int v62 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v93 = 0;
            swift_retain();
            sub_1B6B33E34(v62, &v93, v60, v61);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRetain();
            sub_1B6E30E48();
            swift_bridgeObjectRelease();
            uint64_t v46 = v84;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v93 = 0;
          unint64_t v94 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B681F698();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6D0ACFC((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v63 = v93;
          uint64_t v64 = v94;
          int v65 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v93 = 0;
          swift_retain();
          sub_1B6B33E34(v65, &v93, v63, v64);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if (v88)
          {
            uint64_t v66 = *(void *)(v88 + 240);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v66 + 48));
            uint64_t v67 = *(void *)(v66 + 72);
            MEMORY[0x1F4188790](v68, v69);
            unint64_t v70 = v92;
            uint64_t v73 = (uint64_t)v92;
            swift_bridgeObjectRetain();
            uint64_t v71 = v85;
            unint64_t v72 = sub_1B6D00908((uint64_t)sub_1B6C17FAC, &v75 - 4, v67);
            uint64_t v85 = v71;
            swift_bridgeObjectRelease();
            *(void *)(v66 + 72) = v72;
            swift_bridgeObjectRelease();
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v66 + 48));

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*v83)(v70, v90);
          }
          else
          {
            (*v83)(v92, v90);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v8 = v89;
          uint64_t v10 = v91;
          uint64_t v9 = v16;
        }
        else
        {
LABEL_37:
          swift_release();
        }
      }
      if (++v11 == v8)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

void sub_1B6CFEC08(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void *a5@<X8>)
{
  if ((unint64_t)*(unsigned __int8 *)(a3 + 10) << 16 == 0x20000)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    char v9 = *(unsigned char *)(a2 + 24);
  }
  else
  {
    uint64_t v7 = (unsigned __int16)*(void *)a3;
    uint64_t v8 = WORD1(*(void *)a3);
    char v9 = 0x80;
  }
  uint64_t v10 = *(void *)(a2 + 48);
  __int16 v11 = *(_WORD *)(a2 + 56);
  v33[0] = *(void *)a2;
  v33[1] = v7;
  _OWORD v33[2] = v8;
  char v34 = v9;
  long long v35 = *(_OWORD *)(a2 + 32);
  uint64_t v36 = v10;
  __int16 v37 = v11;
  char v12 = (void *)sub_1B636146C(a1, (uint64_t)v33, 0, 1, a4);
  int v13 = v12;
  if (v12)
  {
    if ((unint64_t)*(unsigned __int8 *)(a3 + 10) << 16 == 0x20000
      || (id v14 = *(id *)(a3 + 16), v14 == objc_msgSend(v12, sel_pixelFormat)))
    {
      RGTextureDescriptorFromMTLTexture(v13, (uint64_t)&v26);
      uint64_t v15 = v31;
      uint64_t v16 = v32;
      uint64_t v17 = 0x10000;
      if (!BYTE2(v27)) {
        uint64_t v17 = 0;
      }
      unint64_t v18 = (unsigned __int16)v27 | (unint64_t)v17;
      long long v19 = v28;
      long long v20 = v29;
      long long v21 = v30;
      *(void *)a3 = v26;
      *(void *)(a3 + 8) = v18;
      *(_OWORD *)(a3 + 16) = v19;
      *(_OWORD *)(a3 + 32) = v20;
      *(_OWORD *)(a3 + 48) = v21;
      *(void *)(a3 + 64) = v15;
      *(void *)(a3 + 72) = v16;
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      uint64_t v26 = 0xD000000000000026;
      uint64_t v27 = 0x80000001B6F52CA0;
      id v22 = objc_msgSend(v13, sel_label);
      if (v22)
      {
        uint64_t v23 = v22;
        sub_1B6E31798();
      }
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)v14);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0((uint64_t)objc_msgSend(v13, sel_pixelFormat));
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v24 = v26;
      int v25 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v26 = 0;
      swift_retain();
      sub_1B6B33E34(v25, &v26, v24, v27);
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      int v13 = 0;
    }
  }
  *a5 = v13;
}

uint64_t sub_1B6CFEF0C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B6CFEFAC()
{
  sub_1B6CFEF0C();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6CFEFE0(uint64_t a1, unint64_t a2)
{
  int v2 = a2;
  unint64_t v4 = HIDWORD(a2);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(_DWORD *)(v6 + 24) = v2;
  *(_DWORD *)(v6 + 28) = v4;
  uint64_t v7 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock;
  uint64_t v8 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock + 24);
  swift_retain();
  os_unfair_lock_lock(v8);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1B6D0B218;
  *(void *)(v9 + 24) = v6;
  uint64_t v10 = OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks;
  __int16 v11 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + v10) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    __int16 v11 = sub_1B62CACA8(0, v11[2] + 1, 1, v11);
    *(void *)(a1 + v10) = v11;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1) {
    __int16 v11 = sub_1B62CACA8(v13 > 1, v14 + 1, 1, v11);
  }
  void v11[2] = v14 + 1;
  uint64_t v15 = &v11[2 * v14];
  v15[4] = sub_1B69E90EC;
  v15[5] = v9;
  *(void *)(a1 + v10) = v11;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 24));
  swift_release();

  return swift_release();
}

uint64_t sub_1B6CFF174(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a2 != 0xFFFFFFFFLL
      && (a2 & 0x80000000) == 0
      && (int)a2 < *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (HIDWORD(a2) == -1 || *(_DWORD *)(v4 + 12 * (int)a2 + 8) == HIDWORD(a2)) {
        sub_1B6C09C48(*(void *)(*(void *)(result + 136) + 8 * *(int *)(v4 + 12 * (int)a2) + 32), *(_WORD *)(v4 + 12 * (int)a2 + 4), 120);
      }
    }
    return swift_release();
  }
  return result;
}

void *sub_1B6CFF254(uint64_t a1)
{
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v1 + 32);
  v48[0] = *(_OWORD *)(v1 + 16);
  v48[1] = v4;
  uint64_t v49 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v48, 0x200000000, v35);
  sub_1B6355BE8((uint64_t)v35, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v43[0])
  {
    if (v45 >= 1)
    {
      uint64_t v5 = v44;
      if (v44)
      {
        uint64_t v6 = v43[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v7 = 48 * v5;
        uint64_t v8 = (uint64_t *)(v6 + 40);
        do
        {
          uint64_t v13 = *v8;
          unint64_t v14 = *(os_unfair_lock_s **)(*v8 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          int v15 = *(_DWORD *)(v13 + 24);
          swift_retain();
          uint64_t v39 = 0;
          memset(v38, 0, sizeof(v38));
          uint64_t v37 = 0;
          memset(v36, 0, sizeof(v36));
          int v16 = sub_1B637F628(v15, 0, 0, (uint64_t)&type metadata for TextureCPURuntime, (uint64_t)&off_1F0F74A68, (uint64_t)v38, (uint64_t)v36);
          swift_release();
          sub_1B6386458((uint64_t)v36);
          sub_1B6386458((uint64_t)v38);
          if (sub_1B63B4340(v16))
          {
            sub_1B66603E4(v16);
          }
          else
          {
            uint64_t v9 = *(void *)(v13 + 232);
            uint64_t v10 = *(void *)(v13 + 240);
            char v11 = *(unsigned char *)(v13 + 120);
            uint64_t v12 = *(unsigned int *)(v13 + 28);
            LOBYTE(v38[0]) = *(unsigned char *)(v13 + 32);
            sub_1B628EEF4(v9, v10, v16, v11, v12 | ((unint64_t)LOBYTE(v38[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
          swift_release();
          v8 += 6;
          v7 -= 48;
        }
        while (v7);
        sub_1B6355CB4(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    sub_1B6355CB4(v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v17 = *(_OWORD *)(v2 + 72);
  v46[0] = *(_OWORD *)(v2 + 56);
  v46[1] = v17;
  uint64_t v47 = *(void *)(v2 + 88);
  sub_1B62C9DA8(a1, (uint64_t)v46, 0x200000000, v36);
  uint64_t result = (void *)sub_1B6355BE8((uint64_t)v36, (uint64_t)v38, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v38[0])
  {
    if (v42 >= 1)
    {
      uint64_t v19 = v41;
      if (v41)
      {
        uint64_t v20 = v40;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v21 = 48 * v19;
        id v22 = (uint64_t *)(v20 + 40);
        do
        {
          uint64_t v27 = *v22;
          long long v28 = *(os_unfair_lock_s **)(*v22 + 376);
          swift_retain();
          os_unfair_lock_lock(v28);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 344));
          int v29 = *(_DWORD *)(v27 + 24);
          swift_retain();
          uint64_t v34 = 0;
          memset(v33, 0, sizeof(v33));
          uint64_t v32 = 0;
          memset(v31, 0, sizeof(v31));
          int v30 = sub_1B637F628(v29, 0, 0, (uint64_t)&type metadata for TextureGPURuntime, (uint64_t)&off_1F0F74BA8, (uint64_t)v33, (uint64_t)v31);
          swift_release();
          sub_1B6386458((uint64_t)v31);
          sub_1B6386458((uint64_t)v33);
          if (sub_1B63B4340(v30))
          {
            sub_1B66603E4(v30);
          }
          else
          {
            uint64_t v23 = *(void *)(v27 + 232);
            uint64_t v24 = *(void *)(v27 + 240);
            char v25 = *(unsigned char *)(v27 + 120);
            uint64_t v26 = *(unsigned int *)(v27 + 28);
            LOBYTE(v33[0]) = *(unsigned char *)(v27 + 32);
            sub_1B628EEF4(v23, v24, v30, v25, v26 | ((unint64_t)LOBYTE(v33[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 376));
          swift_release();
          v22 += 6;
          v21 -= 48;
        }
        while (v21);
        sub_1B6355CB4(v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    return sub_1B6355CB4(v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  return result;
}

uint64_t sub_1B6CFF67C(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v48 = MEMORY[0x1E4FBC860];
  long long v4 = *(_OWORD *)(v1 + 32);
  v72[0] = *(_OWORD *)(v1 + 16);
  v72[1] = v4;
  uint64_t v73 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v72, 0x200000000, v49);
  sub_1B6355BE8((uint64_t)v49, (uint64_t)&v50, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v50)
  {
    uint64_t v61 = v50;
    int v62 = v51;
    char v63 = v52;
    uint64_t v64 = v53;
    char v65 = v54;
    uint64_t v66 = v55;
    uint64_t v67 = v56;
    long long v68 = v57;
    long long v69 = v58;
    uint64_t v70 = v59;
    uint64_t v71 = v60;
    sub_1B6D86AA4((uint64_t)&v61, (uint64_t)&v48);
    sub_1B6355CB4(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    uint64_t v3 = v48;
  }
  uint64_t v44 = *(void *)(v3 + 16);
  if (v44)
  {
    uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v43 = v3 + 32;
    uint64_t v40 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v41 = v2;
    uint64_t v42 = v5;
    while (1)
    {
      uint64_t v8 = (unsigned int *)(v43 + 8 * v6);
      uint64_t v9 = v8[1];
      uint64_t v10 = (int)*v8;
      BOOL v11 = v10 == -1 && v9 == 0;
      if (v11
        || (v10 & 0x80000000) != 0
        || v5[1] <= v10
        || ((uint64_t v12 = *v5 + 12 * (int)v10, v9 != -1) ? (v13 = *(_DWORD *)(v12 + 8) == v9) : (v13 = 1),
            !v13
         || (uint64_t v14 = *(void *)(*(void *)(v2 + 136) + 8 * *(int *)(*v5 + 12 * (int)v10) + 32),
             uint64_t v15 = *(void *)(v14 + 48),
             (uint64_t v16 = *(void *)(v15 + 16)) == 0)))
      {
LABEL_57:
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B681F698();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31948();
        while (1)
        {
LABEL_58:
          sub_1B6E32BE8();
          __break(1u);
        }
      }
      uint64_t v17 = v6 + 1;
      uint64_t v18 = *(__int16 *)(v12 + 4);
      uint64_t v19 = (void *)(v15 + 56);
      while ((ValueMetadata *)*(v19 - 3) != &type metadata for TexturePlaceholder)
      {
        v19 += 5;
        if (!--v16) {
          goto LABEL_57;
        }
      }
      uint64_t v20 = (unsigned int *)(*(void *)(v14 + 128) + *v19 + 16 * v18);
      uint64_t v21 = v2;
      uint64_t v23 = *v20;
      uint64_t v22 = v20[1];
      int v45 = v8[1];
      uint64_t v24 = *v8 | (unint64_t)(v9 << 32);
      swift_unknownObjectRetain();
      sub_1B6BF931C(v23 | (v22 << 32), v21, v24);
      BOOL v25 = v23 == -1 && v22 == 0;
      uint64_t v46 = v17;
      unint64_t v47 = v23 | (v22 << 32);
      if (v25 || sub_1B62EC0CC((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA160, v23 | (v22 << 32)))
      {
        uint64_t v26 = 0;
        uint64_t v2 = v21;
      }
      else
      {
        uint64_t v28 = sub_1B695D6BC(v23 | (v22 << 32));
        if (v28 == 1)
        {
          uint64_t v26 = 0;
          uint64_t v29 = (int)v23;
          if ((v23 & 0x80000000) == 0)
          {
            uint64_t v5 = v42;
            if (v42[1] <= v29)
            {
              uint64_t v2 = v41;
            }
            else
            {
              int v30 = *(_DWORD *)(*v42 + 12 * (int)v29 + 8);
              if (v22 == -1 || v30 == v22)
              {
                uint64_t v2 = v41;
                sub_1B6BF8FE4(v47, v41);
                unsigned int v32 = sub_1B695D604(v47);
                if (HIBYTE(v32) != 2 && (v32 & 0xFF00) == 0x100) {
                  sub_1B62E364C((uint64_t)&type metadata for TextureLoadRequestGPU, (uint64_t)&off_1F0F8B818, v47);
                }
                unsigned int v33 = sub_1B695D604(v47);
                if (HIBYTE(v33) == 2 || (uint64_t v34 = *(void *)(v41 + v40)) == 0)
                {
                  uint64_t v26 = 0;
                }
                else
                {
                  switch(BYTE2(v33))
                  {
                    case 1:
                      uint64_t v37 = *(void *)(v34 + 240);
                      swift_retain();
                      uint64_t v36 = sub_1B6BCB190(0xD000000000000015, 0x80000001B6F45BA0, v37, v34);
                      break;
                    case 3:
                      uint64_t v38 = *(void *)(v34 + 240);
                      swift_retain();
                      uint64_t v36 = sub_1B6BCB1A8(0x47746C7561666544, 0xEE00786554796572, v38, v34);
                      break;
                    default:
                      uint64_t v35 = *(void *)(v34 + 240);
                      swift_retain();
                      uint64_t v36 = sub_1B6BCB178(0x42746C7561666544, 0xEF7865546B63616CLL, v35, v34);
                      break;
                  }
                  uint64_t v26 = (uint64_t)v36;
                  swift_release();
                }
              }
              else
              {
                uint64_t v26 = 0;
                uint64_t v2 = v41;
              }
            }
            goto LABEL_29;
          }
        }
        else
        {
          uint64_t v26 = v28;
        }
        uint64_t v2 = v41;
      }
      uint64_t v5 = v42;
LABEL_29:
      swift_unknownObjectRetain_n();
      swift_unknownObjectRelease();
      sub_1B6BFF228(v24, v2, v26);
      swift_unknownObjectRelease_n();
      if (v5[1] <= v10) {
        goto LABEL_58;
      }
      uint64_t v27 = *v5;
      if (v45 != -1 && *(_DWORD *)(v27 + 12 * (int)v10 + 8) != v45) {
        goto LABEL_58;
      }
      uint64_t v7 = *(__int16 *)(v27 + 12 * (int)v10 + 4);
      swift_retain();
      sub_1B6BF5348(v7, v47, v26);
      swift_unknownObjectRelease();
      swift_release();
      uint64_t v6 = v46;
      if (v46 == v44) {
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for TextureRequireCPURepresentation()
{
  return &type metadata for TextureRequireCPURepresentation;
}

ValueMetadata *type metadata accessor for TextureGPURuntime()
{
  return &type metadata for TextureGPURuntime;
}

ValueMetadata *type metadata accessor for TextureRenderTarget()
{
  return &type metadata for TextureRenderTarget;
}

ValueMetadata *type metadata accessor for TextureRequireGPURepresentation()
{
  return &type metadata for TextureRequireGPURepresentation;
}

uint64_t *destroy for TextureFileData(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_1B62C2360(*result, v1);
  }
  return result;
}

uint64_t _s3VFX15TextureFileDataVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_1B62FFBB0(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for TextureFileData(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_1B62FFBB0(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_1B62C2360(v7, v8);
      return a1;
    }
    sub_1B6CFFE7C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_1B62FFBB0(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t sub_1B6CFFE7C(uint64_t a1)
{
  return a1;
}

uint64_t *assignWithTake for TextureFileData(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1B62C2360(v6, v4);
      return a1;
    }
    sub_1B6CFFE7C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TextureFileData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureFileData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)uint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureFileData()
{
  return &type metadata for TextureFileData;
}

ValueMetadata *type metadata accessor for TextureArrayFileAsset()
{
  return &type metadata for TextureArrayFileAsset;
}

ValueMetadata *type metadata accessor for TextureLoadingOptions()
{
  return &type metadata for TextureLoadingOptions;
}

__n128 initializeWithCopy for TextureRequireAnimationRepresentation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TextureRequireAnimationRepresentation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureRequireAnimationRepresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureRequireAnimationRepresentation()
{
  return &type metadata for TextureRequireAnimationRepresentation;
}

ValueMetadata *type metadata accessor for TextureFileAsset()
{
  return &type metadata for TextureFileAsset;
}

uint64_t destroy for TextureShaderAsset()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextureShaderAsset(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v3;
  uint64_t v4 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v4;
  uint64_t v5 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v5;
  uint64_t v6 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextureShaderAsset(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_WORD *)(a1 + 30) = *(_WORD *)(a2 + 30);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TextureShaderAsset(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for TextureShaderAsset(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextureShaderAsset(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureShaderAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureShaderAsset()
{
  return &type metadata for TextureShaderAsset;
}

uint64_t destroy for TextureCPURuntime()
{
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextureCPURuntime(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v3 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v3;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextureCPURuntime(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(_WORD *)(a1 + 38) = *(_WORD *)(a2 + 38);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TextureCPURuntime(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextureCPURuntime(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureCPURuntime(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureCPURuntime()
{
  return &type metadata for TextureCPURuntime;
}

unint64_t sub_1B6D008B0()
{
  unint64_t result = qword_1E9DD8690;
  if (!qword_1E9DD8690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8690);
  }
  return result;
}

void *sub_1B6D00908(uint64_t isStackAllocationSafe, void *a2, uint64_t a3)
{
  long long v5 = a2;
  long long v6 = (uint64_t (*)(char *, unsigned char *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, a2);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_1B6D00A80((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    BOOL v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    long long v5 = sub_1B6D00A80((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x1BA9B84C0](v11, -1, -1);
  }
  return v5;
}

void *sub_1B6D00A80(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unsigned char *))
{
  uint64_t v31 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v6 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8, v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a3 + 64);
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  int64_t v24 = v29 - 5;
  uint64_t v28 = a3 + 64;
  uint64_t v15 = a3 + 104;
  uint64_t v16 = &v32;
LABEL_4:
  *(v16 - 32) = v15;
  while (v14)
  {
    unint64_t v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_19:
    sub_1B6D0B130(*(void *)(a3 + 48) + *(void *)(v7 + 72) * v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    sub_1B6367A74(*(void *)(a3 + 56) + 160 * v18, (uint64_t)v30);
    char v21 = v31(v10, v30);
    sub_1B63800F4((uint64_t)v30);
    unint64_t result = (void *)sub_1B62C0094((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    if (v4) {
      return result;
    }
    if (v21)
    {
      *(unint64_t *)((char *)v26 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v15 = v27 + 1;
      uint64_t v16 = &v33;
      goto LABEL_4;
    }
  }
  uint64_t v19 = v11 + 1;
  if (v11 + 1 >= v29) {
    return sub_1B685FA0C(v26, v25, v27, (void *)a3);
  }
  unint64_t v20 = *(void *)(v28 + 8 * v19);
  if (v20) {
    goto LABEL_18;
  }
  uint64_t v19 = v11 + 2;
  if (v11 + 2 >= v29) {
    return sub_1B685FA0C(v26, v25, v27, (void *)a3);
  }
  unint64_t v20 = *(void *)(v28 + 8 * v19);
  if (v20) {
    goto LABEL_18;
  }
  uint64_t v19 = v11 + 3;
  if (v11 + 3 >= v29) {
    return sub_1B685FA0C(v26, v25, v27, (void *)a3);
  }
  unint64_t v20 = *(void *)(v28 + 8 * v19);
  if (v20) {
    goto LABEL_18;
  }
  uint64_t v19 = v11 + 4;
  if (v11 + 4 >= v29) {
    return sub_1B685FA0C(v26, v25, v27, (void *)a3);
  }
  unint64_t v20 = *(void *)(v28 + 8 * v19);
  if (v20)
  {
LABEL_18:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v11 = v19;
    goto LABEL_19;
  }
  while (v24 != v11)
  {
    unint64_t v20 = *(void *)(v23 + 8 * v11++);
    if (v20)
    {
      uint64_t v19 = v11 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B685FA0C(v26, v25, v27, (void *)a3);
}

uint64_t sub_1B6D00D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (unsigned __int16 *)sub_1B6E30B98();
  if (v7) {
    uint64_t v7 = (unsigned __int16 *)((char *)v7 + a1 - sub_1B6E30BC8());
  }
  uint64_t v8 = sub_1B6E30BB8();
  uint64_t v9 = a2 - a1;
  if (v8 < a2 - a1) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = (char *)v7 + v9;
  if (v7) {
    uint64_t v11 = (uint64_t)v10;
  }
  else {
    uint64_t v11 = 0;
  }
  sub_1B6BDF564(v7, v11, a4);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B6D00E24@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  swift_retain();
  uint64_t v6 = sub_1B66DCBFC(a1, (uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1F0F7B198, a2);
  uint64_t result = swift_release();
  *a3 = v6;
  return result;
}

uint64_t sub_1B6D00E8C(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6D09FA0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6D00F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6D011AC(a1, a2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DCD44, a3);
}

uint64_t sub_1B6D00F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6D0124C(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6D09FDC);
}

uint64_t sub_1B6D00F7C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  swift_retain();
  uint64_t v6 = sub_1B66DCD5C(a1, (uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1F0F7B198, a2);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t result = swift_release();
  *a3 = v6;
  a3[1] = v8;
  a3[2] = v10;
  a3[3] = v12;
  return result;
}

uint64_t sub_1B6D00FFC(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6D0A008);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6D010BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6D011AC(a1, a2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D98B0, a3);
}

uint64_t sub_1B6D010D4(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6D0A048);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6D01194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1B6D011AC(a1, a2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DB434, a3);
}

uint64_t sub_1B6D011AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  swift_retain();
  uint64_t v8 = a3(a1, &type metadata for TextureShaderAsset, &off_1F0F7B198, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_release();
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  return result;
}

uint64_t sub_1B6D01234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6D0124C(a1, a2, a3, a4, (void (*)(unsigned char *))sub_1B6D0A074);
}

uint64_t sub_1B6D0124C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x1F4188790](v6, v7);
    sub_1B636C318(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6D01300@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  swift_retain();
  uint64_t v6 = sub_1B66DA968(a1, (uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1F0F7B198, a2);
  uint64_t v8 = v7;
  uint64_t result = swift_release();
  *a3 = v6;
  a3[1] = v8;
  return result;
}

uint64_t sub_1B6D0136C(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6D0A0CC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6D0142C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_retain();
  uint64_t v6 = sub_1B66DCEAC(a1, (uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1F0F7B198, a2);
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t result = swift_release();
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = v10;
  return result;
}

uint64_t sub_1B6D014A8(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6D0A108);
    return swift_release();
  }
  return result;
}

BOOL sub_1B6D01570(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 24);
  unsigned int v3 = *(unsigned __int8 *)(a2 + 24);
  if (v2 > 0xFD)
  {
    if (v3 <= 0xFD) {
      return 0;
    }
    goto LABEL_4;
  }
  if (v3 > 0xFD) {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  if ((v2 & 0x80) != 0)
  {
    if ((v3 & 0x80) == 0) {
      return 0;
    }
    if (v9 != v11 || v8 != v10) {
      return 0;
    }
LABEL_4:
    unsigned int v4 = *(unsigned __int16 *)(a1 + 56);
    unsigned int v5 = *(unsigned __int16 *)(a2 + 56);
    int v6 = v5 & 0xFF00;
    if ((v4 & 0xFF00) == 0x300) {
      return v6 == 768;
    }
    if (v6 != 768 && *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
    {
      if ((v4 & 1) == 0)
      {
        if ((v5 & 1) != 0 || *(void *)(a1 + 48) != *(void *)(a2 + 48)) {
          return 0;
        }
        return v4 >> 8 == v5 >> 8;
      }
      if (v5) {
        return v4 >> 8 == v5 >> 8;
      }
    }
    return 0;
  }
  if ((v3 & 0x80) != 0) {
    return 0;
  }
  BOOL v12 = (v2 & 1) == 0;
  if (v9 == v11 && v8 == v10 && ((v12 ^ v3) & 1) != 0) {
    goto LABEL_4;
  }
  return 0;
}

BOOL sub_1B6D01688(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v7 = a1 == a4 && a2 == a5;
  if ((a6 & 0x80) == 0) {
    BOOL v7 = 0;
  }
  char v8 = ((a3 & 1) == 0) ^ a6;
  if (a2 != a5) {
    char v8 = 0;
  }
  if (a1 != a4) {
    char v8 = 0;
  }
  if (a6 < 0) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v8;
  }
  if (a3 < 0) {
    return v7;
  }
  return v9;
}

BOOL sub_1B6D016D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      return a6 == 1 && *(float *)&a1 == *(float *)&a4 && *((float *)&a1 + 1) == *((float *)&a4 + 1);
    case 2:
      if (a6 != 2) {
        return 0;
      }
      uint64_t v8 = 0;
      *(void *)&long long v9 = a1;
      *((void *)&v9 + 1) = a2;
      *(void *)&long long v10 = a4;
      *((void *)&v10 + 1) = a5;
      while (1)
      {
        long long v18 = v9;
        float v16 = *(float *)((unint64_t)&v18 & 0xFFFFFFFFFFFFFFF3 | (4 * (v8 & 3)));
        long long v19 = v10;
        float v17 = *(float *)((unint64_t)&v19 & 0xFFFFFFFFFFFFFFF3 | (4 * (v8 & 3)));
        BOOL v11 = v16 == v17;
        if (v8 == 2) {
          break;
        }
        while (1)
        {
          ++v8;
          if (v11) {
            break;
          }
          if (v8 == 2) {
            return 0;
          }
          BOOL v11 = 0;
        }
      }
      return v16 == v17;
    case 3:
      if (a6 != 3) {
        return 0;
      }
      uint64_t v12 = 0;
      *(void *)&long long v13 = a1;
      *((void *)&v13 + 1) = a2;
      *(void *)&long long v14 = a4;
      *((void *)&v14 + 1) = a5;
      break;
    default:
      return !a6 && *(float *)&a1 == *(float *)&a4;
  }
  while (1)
  {
    long long v20 = v13;
    float v16 = *(float *)((unint64_t)&v20 & 0xFFFFFFFFFFFFFFF3 | (4 * (v12 & 3)));
    long long v21 = v14;
    float v17 = *(float *)((unint64_t)&v21 & 0xFFFFFFFFFFFFFFF3 | (4 * (v12 & 3)));
    BOOL v15 = v16 == v17;
    if (v12 == 3) {
      break;
    }
    while (1)
    {
      ++v12;
      if (v15) {
        break;
      }
      if (v12 == 3) {
        return 0;
      }
      BOOL v15 = 0;
    }
  }
  return v16 == v17;
}

BOOL sub_1B6D01878(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  BOOL result = 0;
  if (a1 == a5 && a2 == a6)
  {
    if (a4)
    {
      if ((a8 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if ((a8 & 1) != 0 || a3 != a7) {
        return result;
      }
    }
    return HIBYTE(a4) == (unsigned __int16)(a8 & 0xFF00) >> 8;
  }
  return result;
}

BOOL sub_1B6D018C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1 == a5 && a2 == a6 || (char v9 = sub_1B6E334B8(), result = 0, (v9 & 1) != 0))
  {
    BOOL v11 = a3 == a7;
    if (!a7) {
      BOOL v11 = a3 == 0;
    }
    if (a3) {
      return v11;
    }
    else {
      return a7 == 0;
    }
  }
  return result;
}

uint64_t sub_1B6D0193C(uint64_t a1, uint64_t a2)
{
  char v2 = 1;
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40)
    && *(unsigned __int16 *)(a1 + 24) == *(unsigned __int16 *)(a2 + 24)
    && *(unsigned __int16 *)(a1 + 26) == *(unsigned __int16 *)(a2 + 26)
    && *(unsigned __int16 *)(a1 + 28) == *(unsigned __int16 *)(a2 + 28)
    && *(void *)(a1 + 56) == *(void *)(a2 + 56)
    && *(_DWORD *)a1 == *(_DWORD *)a2
    && *(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4))
  {
    uint64_t v4 = *(void *)(a1 + 136);
    uint64_t v3 = *(void *)(a1 + 144);
    uint64_t v6 = *(void *)(a2 + 136);
    uint64_t v5 = *(void *)(a2 + 144);
    if ((*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)
       || (sub_1B6E334B8() & 1) != 0)
      && (sub_1B6985050(v4, v6) & 1) != 0)
    {
      char v2 = sub_1B69852C4(v3, v5) ^ 1;
    }
    else
    {
      char v2 = 1;
    }
  }
  return v2 & 1;
}

uint64_t sub_1B6D01A34(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v94 = a6;
  uint64_t v93 = a5;
  uint64_t v92 = a4;
  uint64_t v97 = a2;
  uint64_t v98 = a1;
  uint64_t v91 = sub_1B6E312D8();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91, v7);
  uint64_t v88 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v89 = &v84[-v11];
  uint64_t v12 = sub_1B6E31288();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  float v16 = &v84[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v95 = &v84[-v19];
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = &v84[-v22];
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v101 = &v84[-v26];
  long long v27 = *(_OWORD *)(a3 + 64);
  long long v28 = *(_OWORD *)(a3 + 96);
  long long v114 = *(_OWORD *)(a3 + 80);
  long long v115 = v28;
  long long v29 = *(_OWORD *)(a3 + 32);
  long long v112 = *(_OWORD *)(a3 + 48);
  long long v113 = v27;
  long long v111 = v29;
  uint64_t v30 = sub_1B6367CFC();
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  objc_msgSend(v31, sel_setCountStyle_, 3);
  id v32 = objc_msgSend(v31, sel_stringFromByteCount_, v30);
  uint64_t v33 = sub_1B6E31798();
  unint64_t v35 = v34;

  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1B6E312C8();
  uint64_t v37 = sub_1B6385660(v36, (uint64_t)qword_1EB997E68);
  sub_1B6E312A8();
  sub_1B6E31268();
  swift_bridgeObjectRetain();
  uint64_t v96 = v37;
  uint64_t v38 = sub_1B6E312A8();
  int v39 = sub_1B6E322B8();
  if (sub_1B6E323F8())
  {
    uint64_t v100 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16);
    unint64_t v99 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v100(v23, v101, v12);
    uint64_t v87 = v16;
    uint64_t v86 = v13;
    uint64_t v40 = v33;
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    int v85 = v39;
    uint64_t v43 = v23;
    uint64_t v44 = v42;
    uint64_t v103 = v42;
    *(_DWORD *)uint64_t v41 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v102 = sub_1B6385A2C(v40, v35, &v103);
    uint64_t v13 = v86;
    float v16 = v87;
    sub_1B6E325A8();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v45 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v38, (os_signpost_type_t)v85, v45, "downloadGPUTextureToCPU", "size: %s", v41, 0xCu);
    swift_arrayDestroy();
    uint64_t v46 = v44;
    uint64_t v23 = v43;
    MEMORY[0x1BA9B84C0](v46, -1, -1);
    MEMORY[0x1BA9B84C0](v41, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v43, v12);
    unint64_t v47 = v99;
    uint64_t v48 = v100;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v48 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16);
    unint64_t v47 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v100 = v48;
  unint64_t v99 = v47;
  v48(v23, v101, v12);
  sub_1B6E31308();
  swift_allocObject();
  sub_1B6E312F8();
  uint64_t v49 = v97;
  swift_getObjectType();
  uint64_t v50 = sub_1B6BBD664(0);
  uint64_t v51 = v50;
  uint64_t v52 = *(void *)a3;
  if (*(void *)a3 && *(void *)(a3 + 16) == v50) {
    goto LABEL_11;
  }
  swift_getObjectType();
  id v53 = sub_1B6397BCC(v51, 0);
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  swift_unknownObjectRelease();
  *(void *)a3 = v53;
  *(void *)(a3 + 8) = v55;
  *(void *)(a3 + 16) = v57;
  if (v53)
  {
    id v58 = objc_msgSend(v49, sel_label);
    objc_msgSend(v53, sel_setLabel_, v58);
  }
  RGTextureDescriptorFromMTLTexture(v49, (uint64_t)&v103);
  __int16 v59 = v104;
  char v60 = v105;
  uint64_t v61 = v109;
  long long v62 = v106;
  long long v63 = v107;
  long long v64 = v108;
  int v65 = v110;
  *(void *)(a3 + 32) = v103;
  *(_WORD *)(a3 + 40) = v59;
  *(unsigned char *)(a3 + 42) = v60;
  *(_OWORD *)(a3 + 48) = v62;
  *(_OWORD *)(a3 + 64) = v63;
  *(_OWORD *)(a3 + 80) = v64;
  *(void *)(a3 + 96) = v61;
  *(_DWORD *)(a3 + 104) = v65;
  uint64_t v52 = *(void *)a3;
  if (*(void *)a3)
  {
LABEL_11:
    uint64_t v66 = *(void *)(a3 + 8);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v67 = v93;
    uint64_t v68 = v94;
    sub_1B62C6A60(v93);
    sub_1B680243C(0xD000000000000014, 0x80000001B6F52550, v92, v98, v49, v52, v66, v67, v68);
    sub_1B62C6A50(v67);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    long long v69 = sub_1B6E312A8();
    uint64_t v70 = v95;
    sub_1B6E312E8();
    LOBYTE(v52) = sub_1B6E322A8();
    if (sub_1B6E323F8())
    {
      swift_retain();
      uint64_t v71 = v89;
      sub_1B6E31318();
      swift_release();
      uint64_t v72 = v90;
      uint64_t v73 = v91;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v90 + 88))(v71, v91) == *MEMORY[0x1E4FBD340])
      {
        int v74 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v71, v73);
        int v74 = "";
      }
      v100(v23, v70, v12);
      unint64_t v79 = (uint8_t *)swift_slowAlloc();
      float v16 = v70;
LABEL_23:
      unint64_t v80 = v23;
      unint64_t v81 = v79;
      *(_WORD *)unint64_t v79 = 0;
      os_signpost_id_t v82 = sub_1B6E31278();
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v69, (os_signpost_type_t)v52, v82, "downloadGPUTextureToCPU", v74, v81, 2u);
      MEMORY[0x1BA9B84C0](v81, -1, -1);

      uint64_t v75 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v75(v16, v12);
      v75(v80, v12);
      goto LABEL_24;
    }

    uint64_t v75 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v75(v70, v12);
  }
  else
  {
    long long v69 = sub_1B6E312A8();
    sub_1B6E312E8();
    uint64_t v52 = sub_1B6E322A8();
    if (sub_1B6E323F8())
    {
      swift_retain();
      uint64_t v76 = v88;
      sub_1B6E31318();
      swift_release();
      uint64_t v77 = v90;
      uint64_t v78 = v91;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v90 + 88))(v76, v91) == *MEMORY[0x1E4FBD340])
      {
        int v74 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v76, v78);
        int v74 = "";
      }
      v100(v23, v16, v12);
      unint64_t v79 = (uint8_t *)swift_slowAlloc();
      goto LABEL_23;
    }

    uint64_t v75 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v75(v16, v12);
  }
LABEL_24:
  swift_release();
  return ((uint64_t (*)(unsigned char *, uint64_t))v75)(v101, v12);
}

uint64_t sub_1B6D02390(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6D02490(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x5465727574786574 && a2 == 0xEB00000000657079 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F466C65786970 && a2 == 0xEB0000000074616DLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6874706564 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B6F2F650 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F43656C706D6173 && a2 == 0xEB00000000746E75 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E654C7961727261 && a2 == 0xEB00000000687467 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6567617375 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001B6F2F690 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C7A7A697773 && a2 == 0xE700000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x4D656761726F7473 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1B6D0298C()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6D029D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x687464695778616DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x686769654878616DLL && a2 == 0xE900000000000074 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657073417065656BLL && a2 == 0xEF6F697461527463)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B6D02B60(unint64_t a1)
{
  if (a1 > 0xC) {
    return 12;
  }
  else {
    return byte_1B6EC4E78[a1];
  }
}

uint64_t sub_1B6D02B80(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v46 = a5;
  uint64_t v50 = a4;
  uint64_t v44 = a1;
  uint64_t v7 = sub_1B6E30F48();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  os_signpost_id_t v45 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v12);
  unint64_t v47 = (char *)&v41 - v13;
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v19 = a3[2];
  uint64_t v18 = a3[3];
  uint64_t v20 = (void *)a3[4];
  if (v20)
  {
    uint64_t v43 = (char *)a2;
    uint64_t v21 = a3[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v41 = v7;
    uint64_t v42 = v8;
    uint64_t v23 = ObjectType;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8);
    swift_bridgeObjectRetain();
    id v25 = v20;
    uint64_t v26 = v23;
    uint64_t v27 = v21;
    uint64_t v8 = v42;
    a2 = (uint64_t)v43;
    v24(v19, v18, v26, v27);
    uint64_t v7 = v41;
  }
  else
  {
    uint64_t v43 = (char *)&v41 - v16;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    uint64_t v42 = qword_1EB997FD0;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v29 = v48;
    uint64_t v28 = v49;
    int v30 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v48 = 0;
    swift_retain();
    sub_1B6B33E34(v30, &v48, v29, v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v17 = v43;
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v31 = sub_1B62DE2C8(a2);
  swift_release();
  id v32 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v33 = v47;
  v32(v47, v17, v7);
  type metadata accessor for URLWatcher();
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = (uint64_t)v45;
  v32(v45, v33, v7);
  id v36 = objc_allocWithZone((Class)type metadata accessor for URLWatcher.Presenter());
  id v37 = sub_1B6C16B48(v35, v31, v46);
  *(void *)(v34 + 16) = v37;
  objc_msgSend(self, sel_addFilePresenter_, v37);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
  v38(v33, v7);
  v38(v17, v7);
  int v39 = v50;
  uint64_t result = swift_release();
  *int v39 = v34;
  return result;
}

uint64_t sub_1B6D02F68(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  unsigned int v6 = *((unsigned __int8 *)a3 + 8);
  char v7 = *((unsigned char *)a3 + 9);
  char v22 = *((unsigned char *)a3 + 10);
  long long v20 = *((_OWORD *)a3 + 2);
  long long v21 = *((_OWORD *)a3 + 1);
  long long v19 = *((_OWORD *)a3 + 3);
  uint64_t v8 = a3[8];
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  uint64_t v9 = *a3;
  int v10 = *((_DWORD *)a3 + 18);
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  strcpy((char *)v23, "RenderTarget[");
  HIWORD(v23[1]) = -4864;
  swift_retain();
  int v11 = sub_1B62DE2C8(a2);
  swift_release();
  int v29 = v11;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v12 = v23[0];
  uint64_t v13 = v23[1];
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  v23[0] = v9;
  LOBYTE(v23[1]) = v6;
  BYTE1(v23[1]) = v7;
  BYTE2(v23[1]) = v22;
  long long v24 = v21;
  long long v25 = v20;
  long long v26 = v19;
  uint64_t v27 = v8;
  int v28 = v10;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)v23, v14);
  uint64_t v15 = sub_1B639E4E4(v14, v12, v13);
  swift_bridgeObjectRelease();

  uint64_t result = swift_unknownObjectRelease();
  *a4 = v15;
  if (v6 >= 2)
  {
    uint64_t v17 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
    uint64_t v18 = (void *)sub_1B6E31768();
    objc_msgSend(v17, sel_pushDebugGroup_, v18);

    objc_msgSend(v17, sel_generateMipmapsForTexture_, v15);
    objc_msgSend(v17, sel_popDebugGroup);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6D031A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62CAAD8(a1, (uint64_t)v13);
  if (swift_dynamicCast())
  {
    *(void *)&long long v4 = v12[0];
    long long v11 = v4;
    uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    long long v6 = v11;
    long long v7 = 0uLL;
    char v8 = 0x80;
LABEL_6:
    long long v9 = 0uLL;
    long long v10 = 0uLL;
    goto LABEL_7;
  }
  sub_1B62CAAD8(a1, (uint64_t)v13);
  sub_1B6CEF340((uint64_t)v13, (uint64_t)v12);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  uint64_t result = sub_1B6355BE8((uint64_t)v12, (uint64_t)v13, (unint64_t *)&qword_1EB980018, (uint64_t)&type metadata for DataValue);
  char v8 = v14;
  if (v14 == 255)
  {
    long long v6 = 0uLL;
    char v8 = -16;
    long long v7 = 0uLL;
    goto LABEL_6;
  }
  long long v6 = v13[0];
  long long v7 = v13[1];
  long long v9 = v13[2];
  long long v10 = v13[3];
LABEL_7:
  *(_OWORD *)a2 = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = v9;
  *(_OWORD *)(a2 + 48) = v10;
  *(unsigned char *)(a2 + 64) = v8;
  return result;
}

uint64_t sub_1B6D03294(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a6;
  uint64_t v67 = a5;
  uint64_t v66 = a4;
  uint64_t v65 = a3;
  uint64_t v8 = sub_1B6E30F48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v83 = xmmword_1B6EC1B10;
  long long v84 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  uint64_t v13 = swift_bridgeObjectRetain();
  unint64_t v14 = sub_1B666CA28(v13);
  uint64_t v15 = v6;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  char v60 = a1;
  uint64_t v70 = MEMORY[0x1E4FBC860];
  sub_1B6E32A48();
  uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v17 = v9 + 16;
  long long v64 = v18;
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64);
  unint64_t v62 = v14;
  unint64_t v20 = v14 + v19;
  uint64_t v63 = *(void *)(v17 + 56);
  long long v21 = (void (**)(char *, uint64_t))(v17 - 8);
  do
  {
    v64(v12, v20, v8);
    sub_1B6CFEC08((uint64_t)v12, v65, (uint64_t)&v83, v67, &v68);
    uint64_t v88 = v15;
    if (v15)
    {
      (*v21)(v12, v8);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    (*v21)(v12, v8);
    sub_1B6E32A08();
    sub_1B6E32A68();
    sub_1B6E32A78();
    sub_1B6E32A28();
    v20 += v63;
    --v16;
    uint64_t v15 = v88;
  }
  while (v16);
  uint64_t v22 = v70;
  swift_bridgeObjectRelease();
  unint64_t v23 = *((void *)&v83 + 1);
  if ((*((void *)&v83 + 1) & 0xFF0000) == 0x20000) {
    return swift_bridgeObjectRelease();
  }
  long long v24 = *(void **)(v22 + 16);
  if (!v24) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v67 = *((void *)&v85 + 1);
  long long v64 = (void (*)(char *, unint64_t, uint64_t))v85;
  uint64_t v65 = *((void *)&v86 + 1);
  uint64_t v66 = v86;
  uint64_t v25 = *((void *)&v87 + 1);
  uint64_t v63 = v87;
  uint64_t v26 = v84;
  uint64_t v27 = v83;
  unint64_t v62 = *((void *)&v87 + 1) >> 24;
  uint64_t v59 = *((void *)&v87 + 1) >> 16;
  uint64_t v58 = *((void *)&v87 + 1) >> 8;
  unint64_t v28 = DWORD1(v83);
  unint64_t v29 = (unint64_t)v83 >> 16;
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  LODWORD(v70) = v27;
  unint64_t v54 = v29;
  uint64_t v31 = v30;
  unint64_t v55 = v28;
  WORD2(v70) = WORD2(v27);
  HIWORD(v70) = (_WORD)v24;
  LOWORD(v71) = v23;
  unint64_t v56 = v23 >> 8;
  unsigned int v53 = WORD1(v23) & 1;
  BYTE2(v71) = BYTE2(v23) & 1;
  uint64_t v57 = v26;
  uint64_t v72 = v26;
  uint64_t v73 = 3;
  int v74 = v64;
  uint64_t v75 = v67;
  uint64_t v76 = v66;
  uint64_t v77 = v65;
  uint64_t v78 = v63;
  char v79 = v25;
  char v80 = v58;
  char v81 = v59;
  char v82 = v62;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v70, v30);
  id v32 = objc_msgSend(*(id *)(v61 + 16), sel_newTextureWithDescriptor_, v31);
  if (v32)
  {
    uint64_t v33 = v32;
    sub_1B6331FD0((uint64_t)v32);
    objc_msgSend(v33, sel_setLabel_, 0);

    uint64_t v34 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
    uint64_t v35 = (void *)sub_1B6E31768();
    objc_msgSend(v34, sel_pushDebugGroup_, v35);

    uint64_t v36 = *(void *)(v22 + 16);
    if (v36)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v36; ++i)
      {
        uint64_t v38 = *(void *)(v22 + 8 * i + 32);
        if (v38) {
          objc_msgSend(v34, sel_copyFromTexture_sourceSlice_sourceLevel_toTexture_destinationSlice_destinationLevel_sliceCount_levelCount_, v38, 0, 0, v33, i, 0, 1, 1);
        }
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v34, sel_popDebugGroup);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v40 = v60;
    uint64_t result = swift_unknownObjectRelease();
    *uint64_t v40 = v33;
  }
  else
  {
    unint64_t v51 = v23;
    uint64_t v52 = v27;
    char v60 = v24;
    uint64_t v61 = v25;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v70 = 0;
    unint64_t v71 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v70 = 0xD000000000000023;
    unint64_t v71 = 0x80000001B6F379E0;
    uint64_t v41 = v31;
    id v42 = objc_msgSend(v31, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v43 = v70;
    uint64_t v44 = v71;
    int v45 = sub_1B6E32148();
    uint64_t v46 = v64;
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v70 = 0;
    swift_retain();
    sub_1B6B33E34(v45, &v70, v43, v44);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v70 = 0;
    unint64_t v71 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    uint64_t v68 = v70;
    unint64_t v69 = v71;
    sub_1B6E31948();
    LOWORD(v70) = v52;
    WORD1(v70) = v54;
    WORD2(v70) = v55;
    HIWORD(v70) = (_WORD)v60;
    LOBYTE(v71) = v51;
    BYTE1(v71) = v56;
    BYTE2(v71) = v53;
    uint64_t v72 = v57;
    uint64_t v73 = 3;
    int v74 = v46;
    uint64_t v75 = v67;
    uint64_t v76 = v66;
    uint64_t v77 = v65;
    uint64_t v78 = v63;
    char v79 = v61;
    char v80 = v58;
    char v81 = v59;
    char v82 = v62;
    type metadata accessor for TextureDescriptor(0);
    sub_1B6E32B18();
    uint64_t v47 = v68;
    uint64_t v48 = v69;
    int v49 = sub_1B6E32148();
    uint64_t v70 = 0;
    swift_retain();
    sub_1B6B33E34(v49, &v70, v47, v48);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

char *sub_1B6D03AEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1B6E30F48();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v13 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t result = (char *)&v48 - v16;
  uint64_t v19 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  long long v20 = 0uLL;
  if (!v19)
  {
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    long long v41 = 0uLL;
    long long v42 = 0uLL;
    long long v43 = 0uLL;
LABEL_13:
    *(_OWORD *)a5 = v20;
    *(void *)(a5 + 16) = v35;
    *(void *)(a5 + 24) = v36;
    *(void *)(a5 + 32) = v37;
    *(void *)(a5 + 40) = v19;
    *(_OWORD *)(a5 + 48) = v41;
    *(_OWORD *)(a5 + 64) = v42;
    *(_OWORD *)(a5 + 80) = v43;
    *(void *)(a5 + 96) = v38;
    *(void *)(a5 + 104) = v39;
    *(void *)(a5 + 112) = v40;
    return result;
  }
  *(void *)&long long v51 = a2;
  long long v21 = *(void (**)(__n128))(v17 + 16);
  uint64_t v22 = (char *)&v48 - v16;
  uint64_t v55 = v19;
  LODWORD(v49) = a3;
  uint64_t v23 = v17;
  v21((__n128)0);
  *(void *)&long long v50 = *(void *)(v55 + 240);
  unint64_t v54 = v22;
  ((void (*)(char *, char *, uint64_t))v21)(v13, v22, v10);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (v11 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  uint64_t v52 = v23;
  uint64_t v53 = v10;
  uint64_t v27 = v23;
  uint64_t v28 = v55;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v26 + v24, v13, v10);
  unint64_t v29 = (_OWORD *)(v26 + v25);
  long long v30 = *(_OWORD *)(a1 + 16);
  *unint64_t v29 = *(_OWORD *)a1;
  v29[1] = v30;
  _OWORD v29[2] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)((char *)v29 + 42) = *(_OWORD *)(a1 + 42);
  *(void *)(v26 + ((v25 + 65) & 0xFFFFFFFFFFFFFFF8)) = v28;
  if (v49)
  {
    if ((void)v51)
    {
      int v31 = 2;
      swift_retain_n();
      swift_retain();
      swift_release();
      id v32 = 0;
      uint64_t v26 = 0;
      uint64_t v34 = 0;
    }
    else
    {
      swift_retain_n();
      swift_retain();
      uint64_t v34 = 0;
      int v31 = 0;
      id v32 = sub_1B63AED18;
    }
    uint64_t v33 = v54;
  }
  else
  {
    swift_retain_n();
    swift_retain();
    int v31 = 1;
    id v32 = sub_1B63AED18;
    uint64_t v33 = v54;
    uint64_t v34 = v51;
  }
  sub_1B63619EC(0, (uint64_t *)a1, (uint64_t)v32, v26, v34, v31, v56);
  sub_1B63619A4((uint64_t)v32, v26, v34, v31);
  swift_release();
  sub_1B6355BE8((uint64_t)v56, (uint64_t)&v57, &qword_1EB97D5C0, (uint64_t)&type metadata for TextureCache.Texture);
  if (v58 >> 1 == 0xFFFFFFFF && !(v59 >> 17) && !HIDWORD(v60))
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
    uint64_t result = (char *)swift_release();
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v19 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    long long v41 = 0uLL;
    long long v42 = 0uLL;
    long long v43 = 0uLL;
    long long v20 = 0uLL;
    goto LABEL_13;
  }
  sub_1B63619BC(&v57, (uint64_t)v61);
  sub_1B63619BC(v61, (uint64_t)&v62);
  unsigned int v44 = v72;
  if (v72 < 0)
  {
    v72 &= ~0x8000000000000000;
    uint64_t v35 = v63;
    uint64_t v36 = v64;
    uint64_t v37 = v65;
    int v45 = v67;
    long long v50 = v68;
    long long v51 = v62;
    long long v48 = v70;
    long long v49 = v69;
    uint64_t v39 = v44;
    uint64_t v38 = v71;
    uint64_t v40 = v73;
    uint64_t v46 = v66;
    swift_release();
    uint64_t result = (char *)(*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v54, v53);
    long long v43 = v48;
    long long v42 = v49;
    long long v41 = v50;
    long long v20 = v51;
    uint64_t v47 = 0x10000;
    if (!v45) {
      uint64_t v47 = 0;
    }
    uint64_t v19 = v46 | v47;
    goto LABEL_13;
  }
  uint64_t result = (char *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

double sub_1B6D040B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v47 = a6;
  uint64_t v35 = a3;
  uint64_t v32 = a1;
  int v34 = a5 & 1;
  uint64_t v8 = sub_1B6E30F48();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = a2[2];
  uint64_t v14 = a2[3];
  uint64_t v15 = (void *)a2[4];
  if (v15)
  {
    int v31 = (char *)a4;
    uint64_t v16 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v30 = v8;
    uint64_t v18 = ObjectType;
    unint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
    swift_bridgeObjectRetain();
    id v19 = v15;
    uint64_t v20 = v18;
    uint64_t v21 = v16;
    uint64_t v8 = v30;
    a4 = (uint64_t)v31;
    v29(v13, v14, v20, v21);
  }
  else
  {
    int v31 = (char *)&v29 - v11;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v39 = 0;
    *((void *)&v39 + 1) = 0xE000000000000000;
    uint64_t v30 = qword_1EB997FD0;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    long long v22 = v39;
    int v23 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v39 = 0;
    swift_retain();
    sub_1B6B33E34(v23, (uint64_t *)&v39, v22, *((uint64_t *)&v22 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v12 = v31;
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  sub_1B6D03AEC(v35, a4, v34, v47, (uint64_t)v36);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v8);
  sub_1B6355BE8((uint64_t)v36, (uint64_t)v37, (unint64_t *)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime);
  if (v38)
  {
    long long v43 = v37[4];
    long long v44 = v37[5];
    long long v45 = v37[6];
    long long v39 = v37[0];
    long long v40 = v37[1];
    uint64_t v46 = v38;
    long long v41 = v37[2];
    long long v42 = v37[3];
    uint64_t v25 = v32;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    long long v26 = v44;
    *(_OWORD *)(v25 + 64) = v43;
    *(_OWORD *)(v25 + 80) = v26;
    *(_OWORD *)(v25 + 96) = v45;
    *(void *)(v25 + 112) = v46;
    long long v27 = v40;
    *(_OWORD *)uint64_t v25 = v39;
    *(_OWORD *)(v25 + 16) = v27;
    double result = *(double *)&v41;
    long long v28 = v42;
    *(_OWORD *)(v25 + 32) = v41;
    *(_OWORD *)(v25 + 48) = v28;
  }
  return result;
}

double sub_1B6D04438(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v7 = sub_1B6E30F48();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v7, v9);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v14 = a2[2];
  uint64_t v13 = a2[3];
  uint64_t v15 = (void *)a2[4];
  if (v15)
  {
    unint64_t v29 = a1;
    uint64_t v16 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = a4;
    uint64_t v18 = ObjectType;
    long long v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
    swift_bridgeObjectRetain();
    id v19 = v15;
    uint64_t v20 = v18;
    a4 = v28;
    a1 = v29;
    v27(v14, v13, v20, v16);
  }
  else
  {
    unint64_t v29 = (char *)&v27 - v11;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v36 = 0;
    *((void *)&v36 + 1) = 0xE000000000000000;
    uint64_t v28 = qword_1EB997FD0;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    long long v21 = v36;
    int v22 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v36 = 0;
    swift_retain();
    sub_1B6B33E34(v22, (uint64_t *)&v36, v21, *((uint64_t *)&v21 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v12 = v29;
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  sub_1B6D03AEC(v32, 1, 1, a4, (uint64_t)v33);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
  sub_1B6355BE8((uint64_t)v33, (uint64_t)v34, (unint64_t *)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime);
  if (v35)
  {
    long long v40 = v34[4];
    long long v41 = v34[5];
    long long v42 = v34[6];
    long long v36 = v34[0];
    long long v37 = v34[1];
    uint64_t v43 = v35;
    long long v38 = v34[2];
    long long v39 = v34[3];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    long long v24 = v41;
    *((_OWORD *)a1 + 4) = v40;
    *((_OWORD *)a1 + 5) = v24;
    *((_OWORD *)a1 + 6) = v42;
    *((void *)a1 + 14) = v43;
    long long v25 = v37;
    *(_OWORD *)a1 = v36;
    *((_OWORD *)a1 + 1) = v25;
    double result = *(double *)&v38;
    long long v26 = v39;
    *((_OWORD *)a1 + 2) = v38;
    *((_OWORD *)a1 + 3) = v26;
  }
  return result;
}

uint64_t sub_1B6D047A0(void *a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  sub_1B6389580(*a2, a2[1], &v27);
  if (!a3) {
    return sub_1B63AF8CC(a7, a1);
  }
  uint64_t v10 = 0;
  long long v11 = v27;
  uint64_t v12 = v28;
  while (1)
  {
    sub_1B638955C(v10 % a4 * v11, v10 / a4 * *((void *)&v11 + 1), 0, &v27);
    long long v15 = v27;
    uint64_t v16 = v28;
    if (a5 != 1) {
      break;
    }
    sub_1B638955C(0, 0, v10, &v27);
    uint64_t v13 = v28;
    long long v14 = v27;
    long long v27 = v15;
    uint64_t v28 = v16;
    long long v25 = v11;
    uint64_t v26 = v12;
    long long v23 = v14;
    uint64_t v24 = v13;
    objc_msgSend(a1, sel_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, a6, 0, 0, &v27, &v25, a7, 0, 0, &v23);
LABEL_4:
    if (a3 == ++v10) {
      return sub_1B63AF8CC(a7, a1);
    }
  }
  if (a5 == 2)
  {
    sub_1B638955C(0, 0, 0, &v27);
    uint64_t v17 = v28;
    long long v18 = v27;
    long long v27 = v15;
    uint64_t v28 = v16;
    long long v25 = v11;
    uint64_t v26 = v12;
    long long v23 = v18;
    uint64_t v24 = v17;
    objc_msgSend(a1, sel_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, a6, 0, 0, &v27, &v25, a7, v10, 0, &v23);
    goto LABEL_4;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void *sub_1B6D0496C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  RGTextureDescriptorFromMTLTexture(a1, (uint64_t)&v64);
  double v9 = sub_1B628B5E0((unsigned __int16 *)&v64, (uint64_t)&v52);
  uint64_t v10 = v52;
  char v11 = v53;
  char v12 = v54;
  char v37 = v55;
  uint64_t v35 = v57;
  uint64_t v36 = v56;
  uint64_t v33 = v59;
  uint64_t v34 = v58;
  uint64_t v31 = v61;
  uint64_t v32 = v60;
  uint64_t v30 = v62;
  LODWORD(v9) = v63;
  int16x8_t v29 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v9);
  id v13 = objc_msgSend(a1, sel_label);
  if (v13)
  {
    long long v14 = v13;
    unint64_t v15 = sub_1B6E31798();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v17 = 0x80000001B6F52980;
    unint64_t v15 = 0xD000000000000010;
  }
  uint64_t v18 = 1024;
  if (a2 >= 1024) {
    uint64_t v19 = 1024;
  }
  else {
    uint64_t v19 = a2;
  }
  if (v19 <= 1) {
    uint64_t v20 = 1;
  }
  else {
    uint64_t v20 = v19;
  }
  if (a3 <= 1) {
    uint64_t v21 = 1;
  }
  else {
    uint64_t v21 = a3;
  }
  if (v21 < 1024) {
    uint64_t v18 = v21;
  }
  uint64_t v22 = v18 * v20;
  uint64_t v23 = a4;
  if (a5) {
    uint64_t v23 = v22;
  }
  if (v22 >= v23) {
    uint64_t v22 = v23;
  }
  uint64_t v39 = v22;
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  uint64_t v40 = v10;
  char v41 = v11;
  char v42 = v12;
  char v43 = v37;
  uint64_t v44 = v36;
  uint64_t v45 = v35;
  uint64_t v46 = v34;
  uint64_t v47 = v33;
  uint64_t v48 = v32;
  uint64_t v49 = v31;
  uint64_t v50 = v30;
  unsigned __int32 v51 = vmovn_s16(v29).u32[0];
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v40, v24);
  long long v25 = sub_1B639E4E4(v24, v15, v17);
  swift_bridgeObjectRelease();

  uint64_t v26 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
  long long v27 = (void *)sub_1B6E31768();
  objc_msgSend(v26, sel_pushDebugGroup_, v27);

  swift_unknownObjectRetain();
  sub_1B6D047A0(v26, (unsigned __int16 *)&v52, v39, v20, SHIBYTE(a5), (uint64_t)a1, v25);
  swift_unknownObjectRelease();
  objc_msgSend(v26, sel_popDebugGroup);
  swift_unknownObjectRelease();
  return v25;
}

uint64_t sub_1B6D04FE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B639600C(0, &qword_1E9DD8988, (uint64_t (*)(void))sub_1B6D0CD28, (uint64_t)&type metadata for TextureOptions.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  double v9 = (char *)&v13 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0CD28();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v11 = v14;
  sub_1B6D0CD7C();
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v6);
  uint64_t v12 = v15;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = v12;
  *(unsigned char *)(a2 + 24) = -2;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 32) = 0;
  *(_WORD *)(a2 + 56) = 768;
  return result;
}

uint64_t sub_1B6D051D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B639600C(0, &qword_1EB980928, (uint64_t (*)(void))sub_1B6D0A148, (uint64_t)&_s10CodingKeysON_0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_1B62C14BC(a1, v13);
  if (!sub_1B62B8F14(1077, v13, v14))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v2)
    {
      sub_1B62C14BC(v30, v31);
      sub_1B6E334E8();
      uint64_t v21 = 0;
      LODWORD(v38) = 0;
      uint64_t v23 = v24;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v30);
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v27 = 0;
      uint64_t v16 = 0;
      uint64_t v18 = 0;
      uint64_t v17 = 0;
      char v19 = v38;
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v38 = v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0A148();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v37) = 0;
  sub_1B68DA6CC();
  sub_1B6E32DF8();
  uint64_t v28 = v31;
  uint64_t v29 = v30[2];
  uint64_t v16 = v33;
  uint64_t v27 = v32;
  uint64_t v18 = v34;
  uint64_t v17 = v35;
  char v19 = v36;
  uint64_t v20 = v12;
  uint64_t v21 = v30[1];
  uint64_t v22 = v6;
  uint64_t v23 = v30[0];
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v22);
LABEL_7:
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v21;
  uint64_t v25 = v28;
  *(void *)(a2 + 16) = v29;
  *(void *)(a2 + 24) = v25;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = v17;
  *(unsigned char *)(a2 + 64) = v19;
  return result;
}

void *sub_1B6D058C4(void *a1)
{
  sub_1B639600C(0, &qword_1E9DD8790, (uint64_t (*)(void))sub_1B6D0B274, (uint64_t)&type metadata for TextureFileData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B274();
  uint64_t v10 = v9;
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B6D0B2C8();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v10 = v12;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

float sub_1B6D05A88(void *a1)
{
  sub_1B639600C(0, &qword_1E9DD8A88, (uint64_t (*)(void))sub_1B6D0D0C4, (uint64_t)&type metadata for TextureRequireMask.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = &v12[-v8];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0D0C4();
  sub_1B6E33A48();
  if (!v1)
  {
    v12[14] = 0;
    sub_1B62A85E8();
    sub_1B6E32DF8();
    v12[13] = 1;
    sub_1B6E32DC8();
    float v2 = v11;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B6D05C84(void *a1)
{
  uint64_t v3 = a1[3];
  sub_1B62C14BC(a1, v3);
  sub_1B6E33A28();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C14BC(v6, v6[3]);
    sub_1B6E334E8();
    uint64_t v3 = v4;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1B6D06010@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  sub_1B639600C(0, &qword_1E9DD8838, (uint64_t (*)(void))sub_1B6D0B67C, (uint64_t)&type metadata for TextureShaderAsset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v103 - v9;
  RGTextureDescriptor.init()((uint64_t)&v194);
  uint64_t v11 = v194;
  int v129 = v196;
  LODWORD(v130) = v195;
  int v128 = v197;
  int v192 = v198;
  char v193 = v199;
  uint64_t v126 = v201;
  uint64_t v127 = v200;
  uint64_t v124 = v203;
  char v125 = v202;
  unint64_t v122 = v205;
  uint64_t v123 = v204;
  uint64_t v121 = v206;
  v3.i32[0] = v207;
  v134.i32[0] = v208;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v135 = sub_1B67F43D8(MEMORY[0x1E4FBC860]);
  long long v131 = sub_1B67F44E4(v12);
  uint64_t v13 = sub_1B6335620(v12);
  int64_t v132 = v14;
  uint64_t v133 = v13;
  uint64_t v15 = a1[3];
  int v238 = a1;
  sub_1B62C14BC(a1, v15);
  sub_1B6D0B67C();
  sub_1B6E33A48();
  if (v2)
  {
    unsigned int v17 = 0;
    uint64_t v23 = 0;
    unint64_t v18 = 0xE000000000000000;
    int v19 = -1;
    __int32 v20 = v134.i32[0];
    uint64_t v21 = v131;
LABEL_4:
    int16x8_t v134 = (int16x8_t)vmovl_u8(v3);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v238);
    unint64_t v166 = __PAIR64__(v17, v19);
    uint64_t v167 = v23;
    unint64_t v168 = v18;
    uint64_t v169 = v11;
    char v170 = v130;
    char v171 = v129;
    char v172 = v128;
    int v173 = v192;
    char v174 = v193;
    uint64_t v175 = v127;
    uint64_t v176 = v126;
    uint64_t v177 = v125;
    uint64_t v178 = v124;
    uint64_t v179 = v123;
    unint64_t v180 = v122;
    uint64_t v181 = v121;
    unsigned __int32 v182 = vmovn_s16(v134).u32[0];
    __int32 v183 = v20;
    uint64_t v184 = MEMORY[0x1E4FBC868];
    uint64_t v185 = MEMORY[0x1E4FBC860];
    uint64_t v186 = MEMORY[0x1E4FBC860];
    uint64_t v187 = MEMORY[0x1E4FBC860];
    uint64_t v188 = v135;
    id v189 = v21;
    uint64_t v190 = v133;
    int64_t v191 = v132;
    return sub_1B6AE9D64((uint64_t)&v166);
  }
  uint64_t v119 = v7;
  LOBYTE(v166) = 0;
  uint64_t v16 = 0;
  uint64_t v23 = sub_1B6E32D98();
  uint64_t v113 = v6;
  long long v114 = v10;
  unint64_t v111 = v24;
  uint64_t v25 = v238[3];
  uint64_t v26 = v238[4];
  sub_1B62C14BC(v238, v25);
  if (sub_1B62B8F14(1048, v25, v26))
  {
    LOBYTE(v136) = 3;
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    uint64_t v110 = v166;
  }
  else
  {
    uint64_t v110 = 0xFFFFFFFFLL;
  }
  uint64_t v27 = v238[3];
  uint64_t v28 = v238[4];
  sub_1B62C14BC(v238, v27);
  if (!sub_1B62B8F14(1081, v27, v28))
  {
    sub_1B6D0B7AC(0, &qword_1E9DD8848);
    LOBYTE(v136) = 2;
    sub_1B6D0B6D0();
    sub_1B6E32D78();
    uint64_t v29 = v119;
    uint64_t v31 = (void *)v166;
    uint64_t v112 = 0;
    if (!v166) {
      uint64_t v31 = sub_1B67F64E4(MEMORY[0x1E4FBC860]);
    }
    uint64_t v32 = v135;
    uint64_t v33 = 0;
    uint64_t v34 = v31[8];
    uint64_t v115 = (uint64_t)(v31 + 8);
    uint64_t v35 = 1 << *((unsigned char *)v31 + 32);
    uint64_t v36 = -1;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    unint64_t v37 = v36 & v34;
    int64_t v116 = (unint64_t)(v35 + 63) >> 6;
    uint64_t v117 = v23;
    int64_t v109 = v116 - 5;
    while (1)
    {
      if (v37)
      {
        unint64_t v40 = __clz(__rbit64(v37));
        v37 &= v37 - 1;
        uint64_t v135 = v33;
        unint64_t v41 = v40 | ((void)v33 << 6);
      }
      else
      {
        char v42 = (char *)v33 + 1;
        if ((uint64_t)v33 + 1 >= v116)
        {
          uint64_t v135 = v32;
          swift_release();
          uint64_t v16 = v112;
          goto LABEL_69;
        }
        unint64_t v43 = *(void *)(v115 + 8 * (void)v42);
        uint64_t v16 = v112;
        if (!v43)
        {
          uint64_t v44 = v33;
          char v42 = (char *)v33 + 2;
          if ((uint64_t)v33 + 2 >= v116) {
            goto LABEL_68;
          }
          unint64_t v43 = *(void *)(v115 + 8 * (void)v42);
          if (!v43)
          {
            char v42 = (char *)v33 + 3;
            if ((uint64_t)v33 + 3 >= v116) {
              goto LABEL_68;
            }
            unint64_t v43 = *(void *)(v115 + 8 * (void)v42);
            if (!v43)
            {
              char v42 = (char *)v33 + 4;
              if ((uint64_t)v33 + 4 >= v116)
              {
LABEL_68:
                uint64_t v135 = v32;
                swift_release();
                goto LABEL_69;
              }
              unint64_t v43 = *(void *)(v115 + 8 * (void)v42);
              if (!v43)
              {
                do
                {
                  if ((void *)v109 == v44) {
                    goto LABEL_68;
                  }
                  unint64_t v43 = v31[(void)v44 + 13];
                  uint64_t v44 = (void *)((char *)v44 + 1);
                }
                while (!v43);
                char v42 = (char *)v44 + 4;
              }
            }
          }
        }
        unint64_t v37 = (v43 - 1) & v43;
        unint64_t v41 = __clz(__rbit64(v43)) + ((void)v42 << 6);
        uint64_t v135 = v42;
      }
      uint64_t v45 = *(void *)(v31[6] + 8 * v41);
      uint64_t v46 = v31[7] + 32 * v41;
      uint64_t v47 = *(void *)(v46 + 8);
      uint64_t v120 = *(void *)v46;
      switch(*(unsigned char *)(v46 + 16))
      {
        case 1:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v166 = (unint64_t)v32;
          unint64_t v70 = sub_1B62C1A30(v45);
          char v72 = v71;
          uint64_t v73 = v32[2] + ((v71 & 1) == 0);
          if (v32[3] >= v73)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1B6ACE194();
            }
          }
          else
          {
            sub_1B6ABA390(v73, isUniquelyReferenced_nonNull_native);
            unint64_t v74 = sub_1B62C1A30(v45);
            if ((v72 & 1) != (v75 & 1))
            {
LABEL_74:
              sub_1B6E33838();
              __break(1u);
              JUMPOUT(0x1B6D06F40);
            }
            unint64_t v70 = v74;
          }
          uint64_t v32 = (void *)v166;
          if (v72)
          {
            uint64_t v80 = *(void *)(v166 + 56) + 80 * v70;
            *(void *)uint64_t v80 = v120;
            *(_OWORD *)(v80 + 8) = 0u;
            *(_OWORD *)(v80 + 24) = 0u;
            *(_OWORD *)(v80 + 40) = 0u;
            *(void *)(v80 + 56) = 0;
            *(unsigned char *)(v80 + 64) = 1;
            goto LABEL_20;
          }
          *(void *)(v166 + 8 * (v70 >> 6) + 64) |= 1 << v70;
          *(void *)(v32[6] + 8 * v70) = v45;
          uint64_t v82 = v32[7] + 80 * v70;
          *(void *)uint64_t v82 = v120;
          *(_OWORD *)(v82 + 8) = 0u;
          *(_OWORD *)(v82 + 24) = 0u;
          *(_OWORD *)(v82 + 40) = 0u;
          *(void *)(v82 + 56) = 0;
          *(unsigned char *)(v82 + 64) = 1;
          goto LABEL_19;
        case 2:
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v166 = (unint64_t)v32;
          unint64_t v56 = sub_1B62C1A30(v45);
          char v58 = v57;
          uint64_t v59 = v32[2] + ((v57 & 1) == 0);
          if (v32[3] >= v59)
          {
            if ((v55 & 1) == 0) {
              sub_1B6ACE194();
            }
          }
          else
          {
            sub_1B6ABA390(v59, v55);
            unint64_t v60 = sub_1B62C1A30(v45);
            if ((v58 & 1) != (v61 & 1)) {
              goto LABEL_74;
            }
            unint64_t v56 = v60;
          }
          uint64_t v32 = (void *)v166;
          if ((v58 & 1) == 0)
          {
            *(void *)(v166 + 8 * (v56 >> 6) + 64) |= 1 << v56;
            *(void *)(v32[6] + 8 * v56) = v45;
            uint64_t v38 = v32[7] + 80 * v56;
            *(void *)uint64_t v38 = v120;
            *(void *)(v38 + 8) = v47;
            *(_OWORD *)(v38 + 16) = 0u;
            *(_OWORD *)(v38 + 32) = 0u;
            *(_OWORD *)(v38 + 48) = 0u;
            char v39 = 2;
            goto LABEL_18;
          }
          uint64_t v76 = *(void *)(v166 + 56) + 80 * v56;
          *(void *)uint64_t v76 = v120;
          *(void *)(v76 + 8) = v47;
          *(_OWORD *)(v76 + 16) = 0u;
          *(_OWORD *)(v76 + 32) = 0u;
          *(_OWORD *)(v76 + 48) = 0u;
          *(unsigned char *)(v76 + 64) = 2;
          goto LABEL_20;
        case 3:
          char v62 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v166 = (unint64_t)v32;
          unint64_t v63 = sub_1B62C1A30(v45);
          char v65 = v64;
          uint64_t v66 = v32[2] + ((v64 & 1) == 0);
          if (v32[3] >= v66)
          {
            if ((v62 & 1) == 0) {
              sub_1B6ACE194();
            }
          }
          else
          {
            sub_1B6ABA390(v66, v62);
            unint64_t v67 = sub_1B62C1A30(v45);
            if ((v65 & 1) != (v68 & 1)) {
              goto LABEL_74;
            }
            unint64_t v63 = v67;
          }
          uint64_t v32 = (void *)v166;
          if (v65)
          {
            uint64_t v77 = *(void *)(v166 + 56) + 80 * v63;
            *(void *)uint64_t v77 = v120;
            *(void *)(v77 + 8) = v47;
            *(_OWORD *)(v77 + 16) = 0u;
            *(_OWORD *)(v77 + 32) = 0u;
            *(_OWORD *)(v77 + 48) = 0u;
            *(unsigned char *)(v77 + 64) = 3;
          }
          else
          {
            *(void *)(v166 + 8 * (v63 >> 6) + 64) |= 1 << v63;
            *(void *)(v32[6] + 8 * v63) = v45;
            uint64_t v38 = v32[7] + 80 * v63;
            *(void *)uint64_t v38 = v120;
            *(void *)(v38 + 8) = v47;
            *(_OWORD *)(v38 + 16) = 0u;
            *(_OWORD *)(v38 + 32) = 0u;
            *(_OWORD *)(v38 + 48) = 0u;
            char v39 = 3;
LABEL_18:
            *(unsigned char *)(v38 + 64) = v39;
LABEL_19:
            ++v32[2];
          }
LABEL_20:
          uint64_t v23 = v117;
          swift_bridgeObjectRelease();
          uint64_t v29 = v119;
          uint64_t v33 = v135;
          break;
        default:
          char v48 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v166 = (unint64_t)v32;
          unint64_t v49 = sub_1B62C1A30(v45);
          char v51 = v50;
          uint64_t v52 = v32[2] + ((v50 & 1) == 0);
          if (v32[3] >= v52)
          {
            if ((v48 & 1) == 0) {
              sub_1B6ACE194();
            }
          }
          else
          {
            sub_1B6ABA390(v52, v48);
            unint64_t v53 = sub_1B62C1A30(v45);
            if ((v51 & 1) != (v54 & 1)) {
              goto LABEL_74;
            }
            unint64_t v49 = v53;
          }
          uint64_t v78 = v120;
          uint64_t v32 = (void *)v166;
          if (v51)
          {
            uint64_t v79 = *(void *)(v166 + 56) + 80 * v49;
            *(void *)uint64_t v79 = v120;
            *(_OWORD *)(v79 + 8) = 0u;
            *(_OWORD *)(v79 + 24) = 0u;
            *(_OWORD *)(v79 + 40) = 0u;
            *(_OWORD *)(v79 + 49) = 0u;
            goto LABEL_20;
          }
          *(void *)(v166 + 8 * (v49 >> 6) + 64) |= 1 << v49;
          *(void *)(v32[6] + 8 * v49) = v45;
          uint64_t v81 = v32[7] + 80 * v49;
          *(void *)uint64_t v81 = v78;
          *(_OWORD *)(v81 + 8) = 0u;
          *(_OWORD *)(v81 + 24) = 0u;
          *(_OWORD *)(v81 + 40) = 0u;
          *(_OWORD *)(v81 + 49) = 0u;
          goto LABEL_19;
      }
    }
  }
  sub_1B6D0B7AC(0, (unint64_t *)&qword_1E9DD86C0);
  LOBYTE(v136) = 2;
  sub_1B6D0B888();
  sub_1B6E32D78();
  uint64_t v29 = v119;
  uint64_t v30 = (void *)v166;
  if (!v166) {
    uint64_t v30 = sub_1B67F43D8(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRelease();
  uint64_t v135 = v30;
LABEL_69:
  sub_1B6D0B7AC(0, &qword_1E9DD8860);
  LOBYTE(v136) = 4;
  sub_1B6D0B800();
  uint64_t v83 = v113;
  long long v84 = v114;
  sub_1B6E32D78();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v84, v83);
    __int32 v20 = v134.i32[0];
    uint64_t v21 = v131;
    int v19 = v110;
    unsigned int v17 = HIDWORD(v110);
    unint64_t v18 = v111;
    goto LABEL_4;
  }
  long long v85 = (void *)v166;
  if (!v166) {
    long long v85 = sub_1B67F44E4(MEMORY[0x1E4FBC860]);
  }
  uint64_t v86 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  char v147 = 1;
  sub_1B6BEFE5C();
  uint64_t v87 = v113;
  uint64_t v88 = v114;
  sub_1B6E32DF8();
  LODWORD(v124) = v148;
  LODWORD(v123) = v149;
  uint64_t v112 = 0;
  LODWORD(v122) = v150;
  uint64_t v117 = v23;
  LODWORD(v121) = v151;
  LODWORD(v120) = v152;
  LODWORD(v119) = v153;
  LODWORD(v116) = v154;
  uint64_t v107 = v156;
  uint64_t v108 = v155;
  uint64_t v105 = v158;
  long long v106 = v157;
  uint64_t v104 = v159;
  uint64_t v130 = v161;
  long long v131 = v160;
  int v128 = v163;
  int v129 = v162;
  LODWORD(v127) = v164;
  LODWORD(v126) = v165;
  uint64_t v209 = v110;
  uint64_t v210 = v23;
  unint64_t v211 = v111;
  unsigned __int16 v212 = v148;
  unsigned __int16 v213 = v149;
  unsigned __int16 v214 = v150;
  unsigned __int16 v215 = v151;
  unsigned __int8 v216 = v152;
  unsigned __int8 v217 = v153;
  unsigned __int8 v218 = v154;
  uint64_t v219 = v155;
  uint64_t v220 = v156;
  uint64_t v221 = v157;
  uint64_t v222 = v158;
  uint64_t v223 = v159;
  uint64_t v224 = v160;
  uint64_t v225 = v161;
  unsigned __int8 v226 = v162;
  unsigned __int8 v227 = v163;
  unsigned __int8 v228 = v164;
  unsigned __int8 v229 = v165;
  uint64_t v230 = MEMORY[0x1E4FBC868];
  uint64_t v231 = v86;
  uint64_t v232 = v86;
  uint64_t v233 = v86;
  uint64_t v234 = v135;
  int64_t v235 = v85;
  char v125 = v85;
  uint64_t v236 = v133;
  uint64_t v237 = v132;
  uint64_t v115 = sub_1B6CF9014();
  int64_t v109 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v88, v87);
  unsigned int v90 = v110;
  *(void *)&long long v136 = v110;
  *((void *)&v136 + 1) = v117;
  *(void *)&long long v137 = v111;
  WORD4(v137) = v124;
  WORD5(v137) = v123;
  WORD6(v137) = (_WORD)v122;
  HIWORD(v137) = v121;
  LOBYTE(v138) = v120;
  BYTE1(v138) = v119;
  BYTE2(v138) = v116;
  *(_DWORD *)((char *)&v138 + 3) = v192;
  BYTE7(v138) = v193;
  uint64_t v92 = v107;
  uint64_t v91 = v108;
  *((void *)&v138 + 1) = v108;
  *(void *)&long long v139 = v107;
  uint64_t v94 = v105;
  uint64_t v93 = v106;
  *((void *)&v139 + 1) = v106;
  *(void *)&long long v140 = v105;
  uint64_t v95 = v104;
  *((void *)&v140 + 1) = v104;
  *(void *)&long long v141 = v131;
  *((void *)&v141 + 1) = v130;
  LOBYTE(v142) = v129;
  BYTE1(v142) = v128;
  BYTE2(v142) = v127;
  BYTE3(v142) = v126;
  __int32 v96 = v134.i32[0];
  DWORD1(v142) = v134.i32[0];
  *((void *)&v142 + 1) = MEMORY[0x1E4FBC868];
  *(void *)&long long v143 = v86;
  *((void *)&v143 + 1) = v86;
  *(void *)&long long v144 = v86;
  *((void *)&v144 + 1) = v135;
  *(void *)&long long v145 = v125;
  *((void *)&v145 + 1) = v115;
  int64_t v146 = v109;
  sub_1B6AE9CC8((uint64_t)&v136);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v238);
  unint64_t v166 = __PAIR64__(HIDWORD(v110), v90);
  uint64_t v167 = v117;
  unint64_t v168 = v111;
  LOWORD(v169) = v124;
  WORD1(v169) = v123;
  WORD2(v169) = (_WORD)v122;
  HIWORD(v169) = v121;
  char v170 = v120;
  char v171 = v119;
  char v172 = v116;
  int v173 = v192;
  char v174 = v193;
  uint64_t v175 = v91;
  uint64_t v176 = v92;
  uint64_t v177 = v93;
  uint64_t v178 = v94;
  uint64_t v179 = v95;
  unint64_t v180 = v131;
  uint64_t v181 = v130;
  LOBYTE(v182) = v129;
  BYTE1(v182) = v128;
  BYTE2(v182) = v127;
  HIBYTE(v182) = v126;
  __int32 v183 = v96;
  uint64_t v184 = MEMORY[0x1E4FBC868];
  uint64_t v185 = v86;
  uint64_t v186 = v86;
  uint64_t v187 = v86;
  uint64_t v188 = v135;
  id v189 = v125;
  uint64_t v190 = v115;
  int64_t v191 = v109;
  uint64_t result = sub_1B6AE9D64((uint64_t)&v166);
  long long v97 = v145;
  uint64_t v98 = v118;
  *(_OWORD *)(v118 + 128) = v144;
  *(_OWORD *)(v98 + 144) = v97;
  *(void *)(v98 + 160) = v146;
  long long v99 = v141;
  *(_OWORD *)(v98 + 64) = v140;
  *(_OWORD *)(v98 + 80) = v99;
  long long v100 = v143;
  *(_OWORD *)(v98 + 96) = v142;
  *(_OWORD *)(v98 + 112) = v100;
  long long v101 = v137;
  *(_OWORD *)uint64_t v98 = v136;
  *(_OWORD *)(v98 + 16) = v101;
  long long v102 = v139;
  *(_OWORD *)(v98 + 32) = v138;
  *(_OWORD *)(v98 + 48) = v102;
  return result;
}

uint64_t sub_1B6D06F50(void *a1)
{
  uint64_t v2 = v1;
  sub_1B639600C(0, &qword_1E9DD87B8, (uint64_t (*)(void))sub_1B6D0B370, (uint64_t)&type metadata for TextureArrayFileAsset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B370();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B666CA28(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
    sub_1B638C1B8(0, &qword_1E9DCE860, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB320]);
    sub_1B6D0B3C4((unint64_t *)&unk_1E9DD87D0, (unint64_t *)&qword_1EB97D980);
    sub_1B6E32DF8();
    uint64_t v2 = sub_1B666C8F0(v11[3]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B6D071B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  sub_1B639600C(0, &qword_1E9DD87E8, (uint64_t (*)(void))sub_1B6D0B484, (uint64_t)&type metadata for TextureLoadingOptions.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B484();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v24;
  sub_1B6D0B4D8();
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v11 = v19;
  char v12 = v20;
  long long v16 = v21;
  long long v17 = v18;
  uint64_t v13 = v22;
  __int16 v14 = v23;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(_OWORD *)uint64_t v10 = v17;
  *(void *)(v10 + 16) = v11;
  *(unsigned char *)(v10 + 24) = v12;
  *(_OWORD *)(v10 + 32) = v16;
  *(void *)(v10 + 48) = v13;
  *(_WORD *)(v10 + 56) = v14;
  return result;
}

uint64_t sub_1B6D073B4@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  unint64_t v40 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1B639600C(0, &qword_1E9DD89B8, (uint64_t (*)(void))sub_1B6D0CE78, (uint64_t)&type metadata for TextureDescriptorCoder.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = &v30.i8[-v8];
  sub_1B639600C(0, &qword_1E9DD89C8, (uint64_t (*)(void))sub_1B6D0CECC, (uint64_t)&type metadata for TextureDescriptorCoder.CodingKeys_pre2019, v5);
  uint64_t v11 = v10;
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  __int16 v14 = &v30.i8[-v13];
  RGTextureDescriptorMakeDefault((uint64_t)&v45);
  uint64_t v38 = v48;
  uint64_t v39 = v47;
  uint64_t v37 = v49;
  char v50 = v46;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_1B62C14BC(a1, v15);
  BOOL v17 = sub_1B62BF5E0(2019, v15, v16);
  sub_1B62C14BC(a1, a1[3]);
  if (!v17)
  {
    sub_1B6D0CE78();
    sub_1B6E33A48();
    if (!v2)
    {
      type metadata accessor for MTLTextureType(0);
      char v44 = 0;
      sub_1B6D0ACFC(&qword_1EB980578, type metadata accessor for MTLTextureType);
      sub_1B6E32DF8();
      unint64_t v18 = v45;
      type metadata accessor for MTLPixelFormat(0);
      char v44 = 1;
      sub_1B6D0ACFC(&qword_1E9DD89E0, type metadata accessor for MTLPixelFormat);
      sub_1B6E32DF8();
      unint64_t v19 = v45;
      LOBYTE(v45) = 2;
      __int16 v20 = sub_1B6E32DD8();
      LOBYTE(v45) = 3;
      uint64_t v36 = sub_1B6E32DD8();
      LOBYTE(v45) = 4;
      uint64_t v35 = sub_1B6E32DD8();
      LOBYTE(v45) = 5;
      uint64_t v34 = sub_1B6E32DD8();
      LOBYTE(v45) = 6;
      uint64_t v33 = sub_1B6E32DD8();
      LOBYTE(v45) = 7;
      uint64_t v32 = sub_1B6E32DD8();
      type metadata accessor for MTLTextureUsage(0);
      char v44 = 8;
      sub_1B6D0ACFC(&qword_1E9DD89E8, type metadata accessor for MTLTextureUsage);
      sub_1B6E32DF8();
      unint64_t v31 = v45;
      LOBYTE(v45) = 9;
      char v50 = sub_1B6E32DA8() & 1;
      type metadata accessor for MTLTextureSwizzleChannels(0);
      char v44 = 10;
      sub_1B6D0ACFC(&qword_1E9DD89F0, type metadata accessor for MTLTextureSwizzleChannels);
      sub_1B6E32DF8();
      v3.i32[0] = v45;
      LOBYTE(v45) = 11;
      unsigned __int8 v24 = sub_1B6E32E48();
      int16x8_t v30 = (int16x8_t)vmovl_u8(v3);
      (*(void (**)(__int8 *, uint64_t))(v42 + 8))(v9, v43);
      if (v24 == 1) {
        unsigned __int8 v25 = 0;
      }
      else {
        unsigned __int8 v25 = v24;
      }
      uint64_t v23 = v25;
      goto LABEL_11;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B6D0CECC();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  type metadata accessor for MTLTextureType(0);
  char v44 = 0;
  sub_1B6D0ACFC(&qword_1EB980578, type metadata accessor for MTLTextureType);
  sub_1B6E32DF8();
  unint64_t v18 = v45;
  type metadata accessor for MTLPixelFormat(0);
  char v44 = 1;
  sub_1B6D0ACFC(&qword_1E9DD89E0, type metadata accessor for MTLPixelFormat);
  sub_1B6E32DF8();
  unint64_t v19 = v45;
  LOBYTE(v45) = 2;
  __int16 v20 = sub_1B6E32DD8();
  LOBYTE(v45) = 3;
  uint64_t v36 = sub_1B6E32DD8();
  LOBYTE(v45) = 4;
  uint64_t v35 = sub_1B6E32DD8();
  LOBYTE(v45) = 5;
  uint64_t v34 = sub_1B6E32DD8();
  LOBYTE(v45) = 6;
  uint64_t v33 = sub_1B6E32DD8();
  LOBYTE(v45) = 7;
  uint64_t v32 = sub_1B6E32DD8();
  type metadata accessor for MTLTextureUsage(0);
  char v44 = 9;
  sub_1B6D0ACFC(&qword_1E9DD89E8, type metadata accessor for MTLTextureUsage);
  sub_1B6E32DF8();
  unint64_t v31 = v45;
  LOBYTE(v45) = 10;
  char v50 = sub_1B6E32DA8() & 1;
  type metadata accessor for MTLTextureSwizzleChannels(0);
  char v44 = 11;
  sub_1B6D0ACFC(&qword_1E9DD89F0, type metadata accessor for MTLTextureSwizzleChannels);
  sub_1B6E32DF8();
  v3.i32[0] = v45;
  type metadata accessor for MTLResourceOptions(0);
  char v44 = 8;
  sub_1B6D0ACFC(&qword_1E9DD89F8, type metadata accessor for MTLResourceOptions);
  sub_1B6E32DF8();
  int16x8_t v30 = (int16x8_t)vmovl_u8(v3);
  unint64_t v22 = v45;
  (*(void (**)(__int8 *, uint64_t))(v41 + 8))(v14, v11);
  uint64_t v23 = (v22 >> 4) & 2;
LABEL_11:
  char v26 = v50;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t v27 = v40;
  *unint64_t v40 = v20;
  v27[1] = v36;
  _OWORD v27[2] = v35;
  v27[3] = v32;
  *((unsigned char *)v27 + 8) = v34;
  *((unsigned char *)v27 + 9) = v33;
  *((unsigned char *)v27 + 10) = v26;
  *((void *)v27 + 2) = v19;
  *((void *)v27 + 3) = v18;
  unint64_t v28 = v31;
  *((void *)v27 + 4) = v23;
  *((void *)v27 + 5) = v28;
  uint64_t v29 = v38;
  *((void *)v27 + 6) = v39;
  *((void *)v27 + 7) = v29;
  *((void *)v27 + 8) = v37;
  *((_DWORD *)v27 + 18) = vmovn_s16(v30).u32[0];
  return result;
}

uint64_t sub_1B6D07E10(void *a1)
{
  sub_1B639600C(0, &qword_1E9DD8A48, (uint64_t (*)(void))sub_1B6D0CFC8, (uint64_t)&type metadata for TextureRequireSizeLimit.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6D0CFC8();
  sub_1B6E33A48();
  if (!v1)
  {
    char v14 = 0;
    uint64_t v9 = sub_1B6E32DD8();
    char v13 = 1;
    sub_1B6E32DD8();
    char v12 = 2;
    sub_1B6E32DA8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

unint64_t sub_1B6D08014(void *a1)
{
  sub_1B639600C(0, &qword_1E9DD8A70, (uint64_t (*)(void))sub_1B6D0D070, (uint64_t)&type metadata for RenderGraphTextureTarget.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0D070();
  unint64_t v10 = (unint64_t)v9;
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B63B7884();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    unint64_t v10 = v13;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1B6D081D0(void *a1)
{
  sub_1B639600C(0, &qword_1EB980A80, (uint64_t (*)(void))sub_1B6D0B580, (uint64_t)&type metadata for TextureRequireAnimationRepresentation.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D0B580();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B6355C68(0, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    char v19 = 0;
    sub_1B62A99B0((unint64_t *)&qword_1EB9803F0);
    sub_1B6E32DF8();
    int v10 = v18;
    LOBYTE(v17) = 1;
    uint64_t v9 = sub_1B6E32DD8();
    int v16 = v10;
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_1B62C14BC(a1, v12);
    if (!sub_1B62BF5E0(1009, v12, v13))
    {
      LOBYTE(v17) = 2;
      sub_1B6E32DD8();
    }
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62BF5E0(2011, v14, v15))
    {
      LOBYTE(v17) = 4;
      sub_1B6E32DA8();
    }
    else
    {
      char v19 = 3;
      sub_1B6D0B5D4();
      sub_1B6E32DF8();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1B6D08590(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  swift_getObjectType();
  BOOL v12 = objc_msgSend(a2, sel_textureType) != (id)5 || a3 == 0;
  id v107 = a2;
  if (v12 || objc_msgSend(a3, sel_textureType) != (id)3)
  {
    objc_msgSend(a1, sel_setTexture_atIndex_, a2, objc_msgSend(a4, sel_index));
  }
  else
  {
    objc_msgSend(a1, sel_setTexture_atIndex_, sub_1B6BBD724(), objc_msgSend(a4, sel_index));
    swift_unknownObjectRelease();
  }
  uint64_t v13 = 0;
  uint64_t v113 = a5;
  uint64_t v14 = *(void *)(a5 + 136);
  uint64_t v15 = v14 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v14 + 64);
  int64_t v19 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain();
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v13 + 1;
    if (v13 + 1 >= v19) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v15 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v13 + 2;
      if (v13 + 2 >= v19) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v15 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v19) {
          goto LABEL_26;
        }
        unint64_t v24 = *(void *)(v15 + 8 * v23);
        if (!v24)
        {
          uint64_t v23 = v13 + 4;
          if (v13 + 4 >= v19) {
            goto LABEL_26;
          }
          unint64_t v24 = *(void *)(v15 + 8 * v23);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v13 = v23;
LABEL_12:
    uint64_t v22 = *(void *)(*(void *)(v14 + 48) + 8 * v21);
    sub_1B634F71C(*(void *)(v14 + 56) + 80 * v21, (uint64_t)v122);
    swift_getObjectType();
    swift_retain();
    sub_1B6BA082C((uint64_t)v122, v22);
    swift_release();
  }
  while (v19 - 5 != v13)
  {
    unint64_t v24 = *(void *)(v14 + 104 + 8 * v13++);
    if (v24)
    {
      uint64_t v23 = v13 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  swift_release();
  uint64_t v25 = *(void *)(v113 + 144);
  uint64_t v116 = v25 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & *(void *)(v25 + 64);
  int64_t v29 = (unint64_t)(v26 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  int64_t v105 = v29 - 5;
  int64_t v112 = v29;
  uint64_t v114 = v25;
  while (v28)
  {
    unint64_t v31 = __clz(__rbit64(v28));
    v28 &= v28 - 1;
    unint64_t v32 = v31 | (v30 << 6);
LABEL_44:
    uint64_t v35 = *(void *)(*(void *)(v25 + 48) + 8 * v32);
    uint64_t v36 = (int *)(*(void *)(v25 + 56) + 8 * v32);
    uint64_t v37 = v36[1];
    uint64_t v38 = *v36;
    swift_retain();
    if (v38 == -1 && v37 == 0) {
      goto LABEL_29;
    }
    unint64_t v40 = (void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v41 = *(void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
    if ((v38 & 0x80000000) != 0 || v41 <= v38)
    {
LABEL_67:
      if ((v38 & 0x80000000) != 0 || v41 <= v38) {
        goto LABEL_29;
      }
LABEL_71:
      uint64_t v55 = *v40;
      if (v37 != -1 && *(_DWORD *)(v55 + 12 * (int)v38 + 8) != v37) {
        goto LABEL_29;
      }
      unint64_t v56 = (int *)(v55 + 12 * (int)v38);
      uint64_t v57 = *((__int16 *)v56 + 2);
      uint64_t v58 = *(void *)(*(void *)(a6 + 136) + 8 * *v56 + 32);
      if (*(void *)(v58 + 232) <= v57 && *(void *)(v58 + 240) > v57)
      {
        unint64_t v111 = v40;
        int64_t v109 = *(uint64_t **)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v60 = *v109;
        char v61 = *(os_unfair_lock_s **)(v58 + 344);
        swift_retain();
        os_unfair_lock_lock(v61);
        uint64_t v110 = v60;
        uint64_t v108 = *(void *)(v60 + 32);
        ecs_stack_allocator_push_snapshot(v108);
        uint64_t v62 = *(void *)(*(void *)(v58 + 40) + 16);
        uint64_t v63 = *(void *)(v62 + 128);
        if (*(void *)(v63 + 16)
          && (unint64_t v64 = sub_1B62C1A30((uint64_t)&type metadata for TextureLoadingOptions), (v65 & 1) != 0)
          && *(ValueMetadata **)(*(void *)(v62 + 24) + 16 * *(void *)(*(void *)(v63 + 56) + 8 * v64) + 32) == &type metadata for TextureLoadingOptions)
        {
          swift_retain();
        }
        else
        {
          swift_retain();
          uint64_t v66 = ecs_stack_allocator_allocate(v108, 8, 8);
          unint64_t v67 = v66;
          *uint64_t v66 = v57;
          uint64_t v68 = *v109;
          uint64_t v69 = *(void *)(v58 + 192);
          if (v69)
          {
            uint64_t v103 = *(void *)(v58 + 216);
            sub_1B6BFB238(v66, 1, 1, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 1, v69, *(void *)(v58 + 200), *(void *)(v58 + 208));
          }
          sub_1B6BFB510(*(void *)(v58 + 40), v58, v67, 1, 1);
          uint64_t v70 = v68;
          int v71 = *(_DWORD *)(v58 + 24);
          swift_retain();
          uint64_t v121 = 0;
          memset(v120, 0, sizeof(v120));
          uint64_t v119 = 0;
          memset(v118, 0, sizeof(v118));
          int v72 = sub_1B637F628(v71, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 0, 0, (uint64_t)v120, (uint64_t)v118);
          swift_release();
          sub_1B6386458((uint64_t)v118);
          sub_1B6386458((uint64_t)v120);
          if ((uint64_t)(*(void *)(v58 + 240) - *(void *)(v58 + 232)) < 2)
          {
            if (sub_1B63B4340(v72))
            {
              sub_1B66603E4(v72);
            }
            else
            {
              uint64_t v76 = *(void *)(v58 + 232);
              uint64_t v77 = *(void *)(v58 + 240);
              char v78 = *(unsigned char *)(v58 + 120);
              uint64_t v79 = *(unsigned int *)(v58 + 28);
              LOBYTE(v120[0]) = *(unsigned char *)(v58 + 32);
              uint64_t v102 = 0;
              uint64_t v103 = v70;
              sub_1B628EEF4(v76, v77, v72, v78, v79 | ((unint64_t)LOBYTE(v120[0]) << 32));
            }
          }
          else
          {
            int v73 = *(unsigned __int8 *)(v58 + 120);
            uint64_t v74 = *(unsigned int *)(v58 + 28);
            LOBYTE(v120[0]) = *(unsigned char *)(v58 + 32);
            uint64_t v102 = 0;
            uint64_t v103 = 0;
            uint64_t v104 = v70;
            sub_1B6BF2AEC(v67, 1, 1, v72, v73, v74 | ((unint64_t)LOBYTE(v120[0]) << 32), 0, 0);
          }
        }
        int64_t v29 = v112;
        if ((sub_1B6BF9C60(v38 | (unint64_t)(v37 << 32), a6) & 1) == 0)
        {
          *(void *)&v120[0] = 0;
          *((void *)&v120[0] + 1) = 0xE000000000000000;
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B681F698();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E32BE8();
          __break(1u);
          JUMPOUT(0x1B6D092FCLL);
        }
        swift_release();
        ecs_stack_allocator_pop_snapshot(*(void *)(v110 + 32));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v58 + 344));
        swift_release();
        unint64_t v40 = v111;
      }
      uint64_t v80 = v40[1];
      uint64_t v25 = v114;
      if (v80 > v38)
      {
        uint64_t v81 = *v40 + 12 * (int)v38;
        uint64_t v82 = *(__int16 *)(v81 + 4);
        if (v37 == -1 || *(_DWORD *)(v81 + 8) == v37)
        {
          uint64_t v83 = *(void *)(*(void *)(a6 + 136) + 8 * *(int *)(*v40 + 12 * (int)v38) + 32);
          uint64_t v84 = *(void *)(v83 + 48);
          uint64_t v85 = *(void *)(v84 + 16);
          if (v85)
          {
            uint64_t v86 = (void *)(v84 + 56);
            while ((ValueMetadata *)*(v86 - 3) != &type metadata for TextureLoadPolicy)
            {
              v86 += 5;
              if (!--v85) {
                goto LABEL_105;
              }
            }
            if (*(unsigned char *)(*(void *)(v83 + 128) + *v86 + 4 * v82 + 1) == 1)
            {
              uint64_t v87 = v40;
              sub_1B62E364C((uint64_t)&type metadata for TextureLoadRequestGPU, (uint64_t)&off_1F0F8B818, v38 | (unint64_t)(v37 << 32));
              unint64_t v40 = v87;
              int64_t v29 = v112;
              uint64_t v80 = v87[1];
            }
          }
        }
      }
LABEL_105:
      if (v80 <= v38
        || (uint64_t v88 = *v40 + 12 * (int)v38, v89 = *(__int16 *)(v88 + 4), v37 != -1)
        && *(_DWORD *)(v88 + 8) != v37
        || (uint64_t v90 = *(void *)(*(void *)(a6 + 136) + 8 * *(int *)(*v40 + 12 * (int)v38) + 32),
            uint64_t v91 = *(void *)(v90 + 48),
            (uint64_t v92 = *(void *)(v91 + 16)) == 0))
      {
LABEL_29:
        swift_release();
        continue;
      }
      uint64_t v93 = (void *)(v91 + 56);
      while ((ValueMetadata *)*(v93 - 3) != &type metadata for TextureLoadPolicy)
      {
        v93 += 5;
        if (!--v92) {
          goto LABEL_29;
        }
      }
      uint64_t v94 = *(void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
      if (v94)
      {
        switch(*(unsigned char *)(*(void *)(v90 + 128) + *v93 + 4 * v89 + 2))
        {
          case 1:
            uint64_t v97 = *(void *)(v94 + 240);
            swift_retain();
            __int32 v96 = sub_1B6BCB190(0xD000000000000015, 0x80000001B6F45BA0, v97, v94);
            break;
          case 3:
            uint64_t v98 = *(void *)(v94 + 240);
            swift_retain();
            __int32 v96 = sub_1B6BCB1A8(0x47746C7561666544, 0xEE00786554796572, v98, v94);
            break;
          default:
            uint64_t v95 = *(void *)(v94 + 240);
            swift_retain();
            __int32 v96 = sub_1B6BCB178(0x42746C7561666544, 0xEF7865546B63616CLL, v95, v94);
            break;
        }
        char v75 = v96;
        swift_release();
        swift_release();
        int64_t v29 = v112;
LABEL_87:
        objc_msgSend(a1, sel_setTexture_atIndex_, v75, v35, v102, v103, v104);
        swift_unknownObjectRelease();
        continue;
      }
      swift_release();
      int64_t v29 = v112;
    }
    else
    {
      unint64_t v115 = v28;
      if (v37 == -1 || *(_DWORD *)(*v40 + 12 * (int)v38 + 8) == v37)
      {
        uint64_t v43 = *(void *)(*(void *)(*(void *)(a6 + 80) + 8 * *(__int16 *)(*v40 + 12 * (int)v38 + 6) + 32) + 16);
        uint64_t v44 = *(void *)(v43 + 128);
        if (*(void *)(v44 + 16))
        {
          unint64_t v45 = (void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          unint64_t v46 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone);
          unint64_t v40 = v45;
          if ((v47 & 1) != 0
            && *(ValueMetadata **)(*(void *)(v43 + 24) + 16 * *(void *)(*(void *)(v44 + 56) + 8 * v46) + 32) == &type metadata for Tombstone)
          {
            swift_release();
            int64_t v29 = v112;
            uint64_t v25 = v114;
            unint64_t v28 = v115;
            continue;
          }
        }
      }
      uint64_t v48 = *v40 + 12 * (int)v38;
      BOOL v49 = v37 == -1 || *(_DWORD *)(v48 + 8) == v37;
      if (!v49
        || (uint64_t v50 = *(void *)(*(void *)(a6 + 136) + 8 * *(int *)(*v40 + 12 * (int)v38) + 32),
            uint64_t v51 = *(void *)(v50 + 48),
            (uint64_t v52 = *(void *)(v51 + 16)) == 0))
      {
        int64_t v29 = v112;
        uint64_t v25 = v114;
        unint64_t v28 = v115;
        if (v41 <= v38) {
          goto LABEL_29;
        }
        goto LABEL_71;
      }
      uint64_t v53 = *(__int16 *)(v48 + 4);
      char v54 = (void *)(v51 + 56);
      int64_t v29 = v112;
      uint64_t v25 = v114;
      unint64_t v28 = v115;
      while ((ValueMetadata *)*(v54 - 3) != &type metadata for TextureGPURuntime)
      {
        v54 += 5;
        if (!--v52) {
          goto LABEL_67;
        }
      }
      char v75 = *(void **)(*(void *)(v50 + 128) + *v54 + 8 * v53);
      swift_unknownObjectRetain();
      swift_release();
      if (v75) {
        goto LABEL_87;
      }
    }
  }
  uint64_t v33 = v30 + 1;
  if (v30 + 1 >= v29) {
    goto LABEL_120;
  }
  unint64_t v34 = *(void *)(v116 + 8 * v33);
  if (v34) {
    goto LABEL_43;
  }
  uint64_t v33 = v30 + 2;
  if (v30 + 2 >= v29) {
    goto LABEL_120;
  }
  unint64_t v34 = *(void *)(v116 + 8 * v33);
  if (v34) {
    goto LABEL_43;
  }
  uint64_t v33 = v30 + 3;
  if (v30 + 3 >= v29) {
    goto LABEL_120;
  }
  unint64_t v34 = *(void *)(v116 + 8 * v33);
  if (v34) {
    goto LABEL_43;
  }
  uint64_t v33 = v30 + 4;
  if (v30 + 4 >= v29) {
    goto LABEL_120;
  }
  unint64_t v34 = *(void *)(v116 + 8 * v33);
  if (v34)
  {
LABEL_43:
    unint64_t v28 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v33 << 6);
    uint64_t v30 = v33;
    goto LABEL_44;
  }
  while (v105 != v30)
  {
    unint64_t v34 = *(void *)(v25 + 8 * v30++ + 104);
    if (v34)
    {
      uint64_t v33 = v30 + 4;
      goto LABEL_43;
    }
  }
LABEL_120:
  swift_release();
  switch((unint64_t)objc_msgSend(v107, sel_textureType))
  {
    case 0uLL:
      swift_getObjectType();
      uint64_t result = sub_1B6B59598(a7, (uint64_t)v107, 0);
      break;
    case 2uLL:
      swift_getObjectType();
      uint64_t result = sub_1B6B595FC(a7, (uint64_t)v107, 0);
      break;
    case 5uLL:
      swift_getObjectType();
      uint64_t result = sub_1B6B59994(a7, (uint64_t)v107, 0);
      break;
    case 7uLL:
      swift_getObjectType();
      uint64_t result = sub_1B6B59694(a7, (uint64_t)v107, 0);
      break;
    default:
      sub_1B6355C68(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v100 = swift_allocObject();
      *(_OWORD *)(v100 + 16) = xmmword_1B6E77050;
      *(void *)&v120[0] = 0;
      *((void *)&v120[0] + 1) = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      *(void *)&v118[0] = objc_msgSend(v107, sel_textureType);
      type metadata accessor for MTLTextureType(0);
      sub_1B6E32B18();
      sub_1B6E31948();
      long long v101 = v120[0];
      *(void *)(v100 + 56) = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v100 + 32) = v101;
      sub_1B6E338E8();
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t sub_1B6D0932C(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, char **a6, uint64_t a7)
{
  swift_retain();
  char v13 = sub_1B62EB860(a2, 2);
  swift_release();
  if (v13 & 1) != 0 || (uint64_t result = sub_1B62EB864(*a3), (result))
  {
    uint64_t v22 = a7;
    swift_retain();
    uint64_t v15 = sub_1B62DE2C8(a2);
    swift_release();
    uint64_t v16 = *a6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a6 = v16;
    unint64_t v21 = (unsigned int *)a3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v16 = sub_1B633F784(0, *((void *)v16 + 2) + 1, 1, v16);
      *a6 = v16;
    }
    unint64_t v19 = *((void *)v16 + 2);
    unint64_t v18 = *((void *)v16 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v16 = sub_1B633F784(v18 > 1, v19 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v19 + 1;
    *(void *)&v16[8 * v19 + 32] = v15;
    *a6 = v16;
    swift_retain();
    unint64_t v20 = sub_1B62DE2C8(a2);
    swift_release();
    return sub_1B6CFB01C(a4, v21, v20, a5, v22);
  }
  return result;
}

uint64_t sub_1B6D094AC(uint64_t result, uint64_t a2, void **a3, uint64_t a4, char **a5)
{
  uint64_t v5 = *a3;
  if (!*a3) {
    return result;
  }
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_textureType) == (id)5) {
    return swift_unknownObjectRelease();
  }
  id v9 = objc_msgSend(v5, sel_width);
  if (v9 != (id)(2 * (void)objc_msgSend(v5, sel_height))) {
    return swift_unknownObjectRelease();
  }
  uint64_t v34 = a2;
  uint64_t v35 = a5;
  id v10 = objc_msgSend(v5, sel_height);
  int8x8_t v11 = sub_1B6331A2C(5, 115, (uint64_t)v10, (uint64_t)v10, 1, 1, 1, 1, (uint64_t)&v57, 1, 2, 3);
  uint64_t v12 = v57;
  char v13 = v58;
  char v45 = v59;
  char v44 = v60;
  uint64_t v42 = v62;
  uint64_t v43 = v61;
  uint64_t v40 = v64;
  uint64_t v41 = v63;
  uint64_t v38 = v66;
  uint64_t v39 = v65;
  uint64_t v37 = v67;
  v11.i32[0] = v68;
  int16x8_t v36 = (int16x8_t)vmovl_u8((uint8x8_t)v11);
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  *(void *)&long long v51 = 0xD000000000000010;
  *((void *)&v51 + 1) = 0x80000001B6F52E00;
  id v14 = objc_msgSend(v5, sel_label);
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1B6E31798();
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  long long v16 = v51;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  *(void *)&long long v51 = v12;
  BYTE8(v51) = v13;
  BYTE9(v51) = v45;
  BYTE10(v51) = v44;
  *(void *)&long long v52 = v43;
  *((void *)&v52 + 1) = v42;
  *(void *)&long long v53 = v41;
  *((void *)&v53 + 1) = v40;
  *(void *)&long long v54 = v39;
  *((void *)&v54 + 1) = v38;
  uint64_t v55 = v37;
  unsigned __int32 v56 = vmovn_s16(v36).u32[0];
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v51, v17);
  unint64_t v18 = sub_1B639E4E4(v17, v16, *((uint64_t *)&v16 + 1));
  swift_bridgeObjectRelease();

  sub_1B6E33998();
  sub_1B6E318B8();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33938();
  long long v53 = v48;
  long long v54 = v49;
  uint64_t v55 = v50;
  long long v51 = v46;
  long long v52 = v47;
  uint64_t v19 = sub_1B6E33978();
  *(void *)&long long v46 = 0xD000000000000015;
  *((void *)&v46 + 1) = 0x80000001B6F52E20;
  long long v47 = 0uLL;
  long long v48 = MEMORY[0x1E4FBC860];
  *(void *)&long long v49 = v19;
  id v20 = sub_1B679C370((uint64_t)&v46, 0, 0);
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v20)
  {
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  uint64_t v23 = v20;
  unint64_t v24 = (void *)sub_1B6802298(0x657475706D6F43, 0xE700000000000000, 0);
  swift_getObjectType();
  uint64_t v25 = (void *)sub_1B6E31768();
  objc_msgSend(v24, sel_pushDebugGroup_, v25);

  objc_msgSend(v24, sel_setTexture_atIndex_, v5, 0);
  swift_getObjectType();
  objc_msgSend(v24, sel_setTexture_atIndex_, sub_1B6BBD724(), 1);
  swift_unknownObjectRelease();
  sub_1B6B59994(v23, (uint64_t)v18, 0);
  objc_msgSend(v24, sel_popDebugGroup);
  swift_unknownObjectRelease();
  uint64_t v26 = v18;
  if ((uint64_t)objc_msgSend(v18, sel_mipmapLevelCount) > 1)
  {
    uint64_t v27 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
    unint64_t v28 = (void *)sub_1B6E31768();
    objc_msgSend(v27, sel_pushDebugGroup_, v28);

    swift_unknownObjectRetain();
    sub_1B63AF8CC(v18, v27);
    swift_unknownObjectRelease();
    objc_msgSend(v27, sel_popDebugGroup);
    swift_unknownObjectRelease();
  }
  swift_retain();
  uint64_t v29 = sub_1B62DE2C8(v34);
  swift_release();
  uint64_t v30 = *v35;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v35 = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v30 = sub_1B633F784(0, *((void *)v30 + 2) + 1, 1, v30);
    *uint64_t v35 = v30;
  }
  unint64_t v33 = *((void *)v30 + 2);
  unint64_t v32 = *((void *)v30 + 3);
  if (v33 >= v32 >> 1) {
    uint64_t v30 = sub_1B633F784(v32 > 1, v33 + 1, 1, v30);
  }
  *((void *)v30 + 2) = v33 + 1;
  *(void *)&v30[8 * v33 + 32] = v29;
  *uint64_t v35 = v30;
  swift_unknownObjectRelease_n();
  uint64_t result = swift_unknownObjectRelease();
  *a3 = v26;
  return result;
}

uint64_t sub_1B6D09A88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = MEMORY[0x1F4188790](v9, v10);
  char v13 = (char *)&v27 - v12;
  id v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v14((char *)&v27 - v12, a1, v4, v11);
  uint64_t v27 = sub_1B6E30E58();
  uint64_t v16 = v15;
  ((void (*)(char *, char *, uint64_t))v14)(v8, v13, v4);
  id v17 = (objc_class *)type metadata accessor for AbsolutePathStorage(0);
  unint64_t v18 = (char *)objc_allocWithZone(v17);
  ((void (*)(char *, char *, uint64_t))v14)(&v18[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_absoluteURL], v8, v4);
  uint64_t v19 = &v18[OBJC_IVAR____TtC3VFX19AbsolutePathStorage_pathResolver];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  v29.receiver = v18;
  v29.super_class = v17;
  swift_bridgeObjectRetain();
  id v20 = objc_msgSendSuper2(&v29, sel_init);
  unint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  id v22 = v20;
  uint64_t v23 = sub_1B6E30E18();
  uint64_t v25 = v24;

  swift_bridgeObjectRelease();
  v21(v13, v4);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v21)(v28, v4);
  *a2 = v23;
  a2[1] = v25;
  a2[2] = v27;
  a2[3] = v16;
  a2[4] = (uint64_t)v20;
  a2[5] = (uint64_t)&off_1F0F7C0C8;
  return result;
}

uint64_t sub_1B6D09CA4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_1B6D09CBC()
{
  unint64_t result = qword_1E9DD86A0;
  if (!qword_1E9DD86A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD86A0);
  }
  return result;
}

unint64_t sub_1B6D09D10()
{
  unint64_t result = qword_1E9DD86A8;
  if (!qword_1E9DD86A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD86A8);
  }
  return result;
}

uint64_t sub_1B6D09D64()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

unint64_t sub_1B6D09D78(uint64_t a1)
{
  unint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  sub_1B677C290(*(void *)a1, v2, v3);
  return sub_1B6CF84B4(v1, v2, v3);
}

uint64_t sub_1B6D09DC8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 40);
  return result;
}

void *sub_1B6D09DD4(void *result, uint64_t a2)
{
  *(void *)(a2 + 40) = *result;
  return result;
}

uint64_t sub_1B6D09DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D011AC(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DB434, a2);
}

uint64_t sub_1B6D09E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6D0124C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6D0A074);
}

uint64_t sub_1B6D09E40@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int16 *)(result + 24);
  return result;
}

void *sub_1B6D09E4C(void *result, uint64_t a2)
{
  *(_WORD *)(a2 + 24) = *result;
  return result;
}

uint64_t sub_1B6D09E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D011AC(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6D09E88@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int16 *)(result + 26);
  return result;
}

void *sub_1B6D09E94(void *result, uint64_t a2)
{
  *(_WORD *)(a2 + 26) = *result;
  return result;
}

uint64_t sub_1B6D09EA0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int16 *)(result + 28);
  return result;
}

void *sub_1B6D09EAC(void *result, uint64_t a2)
{
  *(_WORD *)(a2 + 28) = *result;
  return result;
}

uint64_t sub_1B6D09EC0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 56);
  return result;
}

void *sub_1B6D09ECC(void *result, uint64_t a2)
{
  *(void *)(a2 + 56) = *result;
  return result;
}

uint64_t sub_1B6D09ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D011AC(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DCD44, a2);
}

uint64_t sub_1B6D09F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6D0124C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6D09FDC);
}

void sub_1B6D09F38()
{
  if (!qword_1E9DCFAF0)
  {
    sub_1B6D0B7AC(255, (unint64_t *)&qword_1E9DD86C0);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1E9DCFAF0);
    }
  }
}

uint64_t sub_1B6D09FA0()
{
  return sub_1B66D6EDC(**(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B6D09FDC(uint64_t a1)
{
  return sub_1B6D0A0A0(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CE7E8);
}

uint64_t sub_1B6D0A008()
{
  return sub_1B66D7070(**(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 8), *(void **)(*(void *)(v0 + 16) + 16), *(void *)(*(void *)(v0 + 16) + 24), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B6D0A048(uint64_t a1)
{
  return sub_1B6D0A0A0(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CE980);
}

uint64_t sub_1B6D0A074(uint64_t a1)
{
  return sub_1B6D0A0A0(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CE9D4);
}

uint64_t sub_1B6D0A0A0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, **(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1B6D0A0CC()
{
  return sub_1B66D722C(**(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 8), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B6D0A108()
{
  return sub_1B66D726C(**(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 8), *(unsigned char *)(*(void *)(v0 + 16) + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_1B6D0A148()
{
  unint64_t result = qword_1EB97EB80;
  if (!qword_1EB97EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EB80);
  }
  return result;
}

uint64_t sub_1B6D0A19C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B639600C(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6D0A200()
{
  unint64_t result = qword_1E9DD86D0;
  if (!qword_1E9DD86D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD86D0);
  }
  return result;
}

void sub_1B6D0A254()
{
  if (!qword_1EB981040)
  {
    unint64_t Result2 = type metadata accessor for QueryResult2();
    if (!v1) {
      atomic_store(Result2, (unint64_t *)&qword_1EB981040);
    }
  }
}

void sub_1B6D0A2CC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t Result1 = type metadata accessor for QueryResult1();
    if (!v4) {
      atomic_store(Result1, a2);
    }
  }
}

uint64_t sub_1B6D0A318()
{
  uint64_t v1 = sub_1B6E30F48();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 65) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1B6D0A3CC()
{
  uint64_t v1 = sub_1B6E30F48();
  uint64_t v82 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v84 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B6E30B18();
  uint64_t v91 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1B6E30EF8();
  uint64_t v9 = v8;
  uint64_t v10 = sub_1B6E30F08();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    unint64_t v92 = 0;
    uint64_t v93 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v92 = 0xD00000000000002ALL;
    uint64_t v93 = 0x80000001B6F52B50;
    sub_1B6D0ACFC((unint64_t *)&qword_1E9DD0020, MEMORY[0x1E4F276F0]);
    sub_1B6E33098();
    sub_1B6E31948();
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v24 = v92;
    uint64_t v23 = v93;
    sub_1B6D0ACA8();
    swift_allocError();
    *(void *)uint64_t v25 = v24;
    *(void *)(v25 + 8) = v23;
    *(unsigned char *)(v25 + 16) = 0;
    swift_willThrow();
    return v24;
  }
  uint64_t v85 = v9;
  unint64_t v92 = v10;
  uint64_t v93 = v11;
  sub_1B633AF88();
  uint64_t v12 = sub_1B6E32638();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    unint64_t v92 = 0;
    uint64_t v93 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v92 = 0xD000000000000030;
    uint64_t v93 = 0x80000001B6F52B80;
    sub_1B6E31948();
    goto LABEL_9;
  }
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  swift_bridgeObjectRelease();
  uint64_t v80 = v15;
  uint64_t v81 = v14;
  if ((sub_1B6E319F8() & 1) == 0) {
    goto LABEL_84;
  }
  id v16 = objc_allocWithZone(MEMORY[0x1E4F29088]);
  id v17 = (void *)sub_1B6E30E78();
  id v18 = objc_msgSend(v16, sel_initWithURL_resolvingAgainstBaseURL_, v17, 0);

  if (v18)
  {
    id v19 = objc_msgSend(v18, sel_queryItems);
    uint64_t v20 = v91;
    if (v19)
    {
      unint64_t v21 = v19;
      uint64_t v22 = sub_1B6E31C28();
    }
    else
    {
      uint64_t v22 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t v20 = v91;
  }
  uint64_t v91 = *(void *)(v22 + 16);
  if (!v91)
  {

    swift_bridgeObjectRelease();
LABEL_84:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v77 = v1;
  id v78 = v18;
  uint64_t v86 = v0;
  uint64_t v87 = 0;
  uint64_t v26 = 0;
  uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
  uint64_t v27 = v20 + 16;
  unint64_t v29 = (*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64);
  uint64_t v79 = v22;
  unint64_t v89 = v22 + v29;
  uint64_t v90 = v28;
  uint64_t v88 = *(void *)(v27 + 56);
  char v75 = (char *)&v92 + 2;
  uint64_t v76 = (char *)&v92 + 3;
  uint64_t v30 = (void (**)(char *, uint64_t))(v27 - 8);
  v28(v7, v22 + v29, v4);
  while (1)
  {
    if (sub_1B6E30AF8() == 0x74657366666FLL && v37 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0) {
        goto LABEL_67;
      }
    }
    uint64_t v39 = sub_1B6E30B08();
    uint64_t v41 = v40;
    uint64_t v42 = HIBYTE(v40) & 0xF;
    uint64_t v43 = v39 & 0xFFFFFFFFFFFFLL;
    if ((v41 & 0x2000000000000000) != 0) {
      uint64_t v44 = v42;
    }
    else {
      uint64_t v44 = v39 & 0xFFFFFFFFFFFFLL;
    }
    if (v44)
    {
      if ((v41 & 0x1000000000000000) != 0)
      {
        sub_1B6A03668(v39, v41, 10);
      }
      else if ((v41 & 0x2000000000000000) != 0)
      {
        unint64_t v92 = v39;
        uint64_t v93 = v41 & 0xFFFFFFFFFFFFFFLL;
        if (v39 == 43)
        {
          if (v42 != 1
            && (BYTE1(v39) - 48) <= 9u
            && v42 != 2
            && (BYTE2(v39) - 48) <= 9u)
          {
            uint64_t v47 = 10 * (BYTE1(v39) - 48) + (BYTE2(v39) - 48);
            uint64_t v48 = v42 - 3;
            if (v48)
            {
              long long v49 = (unsigned __int8 *)v76;
              do
              {
                unsigned int v50 = *v49 - 48;
                if (v50 > 9) {
                  break;
                }
                uint64_t v51 = 10 * v47;
                if ((unsigned __int128)(v47 * (__int128)10) >> 64 != (10 * v47) >> 63) {
                  break;
                }
                uint64_t v47 = v51 + v50;
                if (__OFADD__(v51, v50)) {
                  break;
                }
                ++v49;
                --v48;
              }
              while (v48);
            }
          }
        }
        else if (v39 == 45)
        {
          if (v42 != 1
            && (BYTE1(v39) - 48) <= 9u
            && v42 != 2
            && (BYTE2(v39) - 48) <= 9u)
          {
            uint64_t v57 = -10 * (BYTE1(v39) - 48) - (BYTE2(v39) - 48);
            uint64_t v58 = v42 - 3;
            if (v58)
            {
              uint64_t v61 = (unsigned __int8 *)v76;
              do
              {
                unsigned int v62 = *v61 - 48;
                if (v62 > 9) {
                  break;
                }
                uint64_t v63 = 10 * v57;
                if ((unsigned __int128)(v57 * (__int128)10) >> 64 != (10 * v57) >> 63) {
                  break;
                }
                uint64_t v57 = v63 - v62;
                if (__OFSUB__(v63, v62)) {
                  break;
                }
                ++v61;
                --v58;
              }
              while (v58);
            }
          }
        }
        else if (v42)
        {
          if ((v39 - 48) <= 9u && v42 != 1 && (BYTE1(v39) - 48) <= 9u)
          {
            uint64_t v52 = 10 * (v39 - 48) + (BYTE1(v39) - 48);
            uint64_t v53 = v42 - 2;
            if (v53)
            {
              long long v54 = (unsigned __int8 *)v75;
              do
              {
                unsigned int v55 = *v54 - 48;
                if (v55 > 9) {
                  break;
                }
                uint64_t v56 = 10 * v52;
                if ((unsigned __int128)(v52 * (__int128)10) >> 64 != (10 * v52) >> 63) {
                  break;
                }
                uint64_t v52 = v56 + v55;
                if (__OFADD__(v56, v55)) {
                  break;
                }
                ++v54;
                --v53;
              }
              while (v53);
            }
          }
        }
      }
      else
      {
        if ((v39 & 0x1000000000000000) != 0) {
          char v45 = (unsigned __int8 *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          char v45 = (unsigned __int8 *)sub_1B6E329D8();
        }
        long long v46 = v86;
        sub_1B6A03568(v45, v43, 10);
        uint64_t v86 = v46;
      }
    }
    swift_bridgeObjectRelease();
LABEL_67:
    if (sub_1B6E30AF8() == 1702521203 && v59 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v60 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
      {
        (*v30)(v7, v4);
        goto LABEL_20;
      }
    }
    uint64_t v31 = sub_1B6E30B08();
    uint64_t v33 = sub_1B6A032AC(v31, v32);
    char v35 = v34;
    (*v30)(v7, v4);
    uint64_t v36 = (v35 & 1) != 0 ? 0 : v33;
    uint64_t v87 = v36;
LABEL_20:
    if (++v26 == v91) {
      break;
    }
    v90(v7, v89 + v88 * v26, v4);
  }
  swift_bridgeObjectRelease();
  if (v87 <= 0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v64 = v84;
    sub_1B6E30E48();
    swift_bridgeObjectRelease();
    uint64_t v65 = v86;
    uint64_t v66 = sub_1B6E30F68();
    if (v65)
    {

      (*(void (**)(char *, uint64_t))(v82 + 8))(v64, v77);
      return 0;
    }
    else
    {
      uint64_t v69 = v66;
      unint64_t v70 = v67;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v64, v77);
      uint64_t v71 = sub_1B6E31008();
      unint64_t v73 = v72;
      sub_1B62C2360(v69, v70);
      uint64_t v24 = sub_1B6E30FC8();

      sub_1B62C2360(v71, v73);
    }
  }
  return v24;
}

unint64_t sub_1B6D0ACA8()
{
  unint64_t result = qword_1E9DD86E8;
  if (!qword_1E9DD86E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD86E8);
  }
  return result;
}

uint64_t sub_1B6D0ACFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6D0AD48(uint64_t a1, uint64_t a2)
{
  sub_1B6D0BA20(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6D0ADE4(uint64_t a1)
{
  sub_1B6D0BA20(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B6D0AE78()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1B6D0AED0()
{
  if (!qword_1E9DD8758)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD8758);
    }
  }
}

uint64_t sub_1B6D0AF3C()
{
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 24);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1B6D0AF7C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1B6D0AF88()
{
  if (!qword_1E9DD8760)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD8760);
    }
  }
}

void sub_1B6D0AFF0()
{
  if (!qword_1E9DD8770)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD8770);
    }
  }
}

uint64_t sub_1B6D0B05C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6D0B094()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B6D0B0DC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1B6D0B124()
{
  sub_1B6CFE324(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6D0B130(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6D0B198()
{
  return sub_1B6CFDF50();
}

uint64_t sub_1B6D0B1A0()
{
  return sub_1B6CFE0B8();
}

uint64_t sub_1B6D0B1A8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6D0B1E0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6D0B218()
{
  return sub_1B6CFF174(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1B6D0B220()
{
  unint64_t result = qword_1E9DD8788;
  if (!qword_1E9DD8788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8788);
  }
  return result;
}

unint64_t sub_1B6D0B274()
{
  unint64_t result = qword_1E9DD8798;
  if (!qword_1E9DD8798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8798);
  }
  return result;
}

unint64_t sub_1B6D0B2C8()
{
  unint64_t result = qword_1E9DD87A0;
  if (!qword_1E9DD87A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD87A0);
  }
  return result;
}

unint64_t sub_1B6D0B31C()
{
  unint64_t result = qword_1E9DD87B0;
  if (!qword_1E9DD87B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD87B0);
  }
  return result;
}

unint64_t sub_1B6D0B370()
{
  unint64_t result = qword_1E9DD87C0;
  if (!qword_1E9DD87C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD87C0);
  }
  return result;
}

uint64_t sub_1B6D0B3C4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B638C1B8(255, &qword_1E9DCE860, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB320]);
    sub_1B6D0ACFC(a2, MEMORY[0x1E4F276F0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6D0B484()
{
  unint64_t result = qword_1E9DD87F0;
  if (!qword_1E9DD87F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD87F0);
  }
  return result;
}

unint64_t sub_1B6D0B4D8()
{
  unint64_t result = qword_1E9DD87F8;
  if (!qword_1E9DD87F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD87F8);
  }
  return result;
}

unint64_t sub_1B6D0B52C()
{
  unint64_t result = qword_1E9DD8808;
  if (!qword_1E9DD8808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8808);
  }
  return result;
}

unint64_t sub_1B6D0B580()
{
  unint64_t result = qword_1EB97FB98;
  if (!qword_1EB97FB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FB98);
  }
  return result;
}

unint64_t sub_1B6D0B5D4()
{
  unint64_t result = qword_1EB97FBC0;
  if (!qword_1EB97FBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBC0);
  }
  return result;
}

unint64_t sub_1B6D0B628()
{
  unint64_t result = qword_1E9DD8828;
  if (!qword_1E9DD8828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8828);
  }
  return result;
}

unint64_t sub_1B6D0B67C()
{
  unint64_t result = qword_1E9DD8840;
  if (!qword_1E9DD8840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8840);
  }
  return result;
}

unint64_t sub_1B6D0B6D0()
{
  unint64_t result = qword_1E9DD8850;
  if (!qword_1E9DD8850)
  {
    sub_1B6D0B7AC(255, &qword_1E9DD8848);
    sub_1B6D0B758();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8850);
  }
  return result;
}

unint64_t sub_1B6D0B758()
{
  unint64_t result = qword_1E9DD8858;
  if (!qword_1E9DD8858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8858);
  }
  return result;
}

void sub_1B6D0B7AC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B6E31568();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1B6D0B800()
{
  unint64_t result = qword_1E9DD8868;
  if (!qword_1E9DD8868)
  {
    sub_1B6D0B7AC(255, &qword_1E9DD8860);
    sub_1B62B1EA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8868);
  }
  return result;
}

unint64_t sub_1B6D0B888()
{
  unint64_t result = qword_1E9DD8878;
  if (!qword_1E9DD8878)
  {
    sub_1B6D0B7AC(255, (unint64_t *)&qword_1E9DD86C0);
    sub_1B6BA2C4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8878);
  }
  return result;
}

unint64_t sub_1B6D0B910()
{
  unint64_t result = qword_1E9DD8890;
  if (!qword_1E9DD8890)
  {
    sub_1B6D0B7AC(255, (unint64_t *)&qword_1E9DD86C0);
    sub_1B6BA2F04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8890);
  }
  return result;
}

unint64_t sub_1B6D0B998()
{
  unint64_t result = qword_1E9DD88A8;
  if (!qword_1E9DD88A8)
  {
    sub_1B6D0B7AC(255, &qword_1E9DD8860);
    sub_1B6657A10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD88A8);
  }
  return result;
}

void sub_1B6D0BA20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

ValueMetadata *type metadata accessor for UnmanagedFileAsset()
{
  return &type metadata for UnmanagedFileAsset;
}

ValueMetadata *type metadata accessor for TextureSource()
{
  return &type metadata for TextureSource;
}

ValueMetadata *type metadata accessor for TextureDescriptorCoder()
{
  return &type metadata for TextureDescriptorCoder;
}

uint64_t getEnumTagSinglePayload for TextureShaderAsset.Parameter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureShaderAsset.Parameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureShaderAsset.Parameter()
{
  return &type metadata for TextureShaderAsset.Parameter;
}

ValueMetadata *type metadata accessor for TextureShaderAsset.CodingKeys()
{
  return &type metadata for TextureShaderAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureRequireAnimationRepresentation.CodingKeys()
{
  return &type metadata for TextureRequireAnimationRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for VirtualFileAsset()
{
  return &type metadata for VirtualFileAsset;
}

ValueMetadata *type metadata accessor for TextureLoadingOptions.CodingKeys()
{
  return &type metadata for TextureLoadingOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureArrayFileAsset.CodingKeys()
{
  return &type metadata for TextureArrayFileAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureFileData.CodingKeys()
{
  return &type metadata for TextureFileData.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureRenderTarget.CodingKeys()
{
  return &type metadata for TextureRenderTarget.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureError()
{
  return &type metadata for TextureError;
}

ValueMetadata *type metadata accessor for FileWatcher()
{
  return &type metadata for FileWatcher;
}

ValueMetadata *type metadata accessor for TextureGPURepresentationDoNotUpload()
{
  return &type metadata for TextureGPURepresentationDoNotUpload;
}

ValueMetadata *_s19PostTypeCodingErrorOMa()
{
  return &_s19PostTypeCodingErrorON;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

ValueMetadata *type metadata accessor for LoadPolicyMode()
{
  return &type metadata for LoadPolicyMode;
}

unsigned char *_s3VFX18TextureShaderAssetV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D0BD04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureLoadPolicy.CodingKeys()
{
  return &type metadata for TextureLoadPolicy.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureRequireNonSRGB()
{
  return &type metadata for TextureRequireNonSRGB;
}

ValueMetadata *type metadata accessor for TextureRequireCubemap()
{
  return &type metadata for TextureRequireCubemap;
}

ValueMetadata *type metadata accessor for TextureRequireMipmapGeneration()
{
  return &type metadata for TextureRequireMipmapGeneration;
}

ValueMetadata *type metadata accessor for TextureRequirePremultiplyWithLinearAlpha()
{
  return &type metadata for TextureRequirePremultiplyWithLinearAlpha;
}

uint64_t getEnumTagSinglePayload for TextureOptions.SizeModification(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TextureOptions.SizeModification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1B6D0BE20(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1B6D0BE2C(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1B6D0BE3C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TextureOptions.SizeModification()
{
  return &type metadata for TextureOptions.SizeModification;
}

ValueMetadata *type metadata accessor for TextureRequireUnpremultiply()
{
  return &type metadata for TextureRequireUnpremultiply;
}

ValueMetadata *type metadata accessor for TextureLoadRequestGPU()
{
  return &type metadata for TextureLoadRequestGPU;
}

ValueMetadata *type metadata accessor for TextureFallback()
{
  return &type metadata for TextureFallback;
}

ValueMetadata *type metadata accessor for TextureLoadRequestCPU()
{
  return &type metadata for TextureLoadRequestCPU;
}

ValueMetadata *type metadata accessor for TextureRequireSizeLimit()
{
  return &type metadata for TextureRequireSizeLimit;
}

uint64_t getEnumTagSinglePayload for MipmapGeneration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TextureRequireMipmap(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TextureRequireMipmap()
{
  return &type metadata for TextureRequireMipmap;
}

unsigned char *_s3VFX15TextureFallbackOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D0BFDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderGraphTextureTarget()
{
  return &type metadata for RenderGraphTextureTarget;
}

uint64_t getEnumTagSinglePayload for TextureRequireMask(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && a1[8]) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureRequireMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureRequireMask()
{
  return &type metadata for TextureRequireMask;
}

ValueMetadata *type metadata accessor for TextureRequireIOSurface()
{
  return &type metadata for TextureRequireIOSurface;
}

uint64_t getEnumTagSinglePayload for TextureLoadPolicy(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 3);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureLoadPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 3) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureLoadPolicy()
{
  return &type metadata for TextureLoadPolicy;
}

ValueMetadata *type metadata accessor for TextureCPURuntime.Slice()
{
  return &type metadata for TextureCPURuntime.Slice;
}

uint64_t storeEnumTagSinglePayload for MipmapGeneration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1B6D0C19C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B6D0C1B8(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MipmapGeneration()
{
  return &type metadata for MipmapGeneration;
}

uint64_t _s3VFX14TextureOptionsVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 253);
  }
  if (*(unsigned __int8 *)(a1 + 57) <= 3u) {
    int v3 = 3;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 57);
  }
  int v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 57) < 3u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t _s3VFX14TextureOptionsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 57) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureOptions()
{
  return &type metadata for TextureOptions;
}

ValueMetadata *type metadata accessor for TextureRequireAnimationRepresentation.Kind()
{
  return &type metadata for TextureRequireAnimationRepresentation.Kind;
}

ValueMetadata *type metadata accessor for Asset()
{
  return &type metadata for Asset;
}

unint64_t sub_1B6D0C2C4()
{
  unint64_t result = qword_1E9DD88B8;
  if (!qword_1E9DD88B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD88B8);
  }
  return result;
}

unint64_t sub_1B6D0C31C()
{
  unint64_t result = qword_1E9DD88C0;
  if (!qword_1E9DD88C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD88C0);
  }
  return result;
}

uint64_t sub_1B6D0C370()
{
  return sub_1B6D0C3A0(&qword_1E9DD88C8, &qword_1E9DD88D0, (uint64_t)&type metadata for TextureFallback);
}

uint64_t sub_1B6D0C3A0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6355C68(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6D0C408()
{
  unint64_t result = qword_1E9DD88D8;
  if (!qword_1E9DD88D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD88D8);
  }
  return result;
}

unint64_t sub_1B6D0C460()
{
  unint64_t result = qword_1E9DD88E0;
  if (!qword_1E9DD88E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD88E0);
  }
  return result;
}

unint64_t sub_1B6D0C4B8()
{
  unint64_t result = qword_1E9DD88E8;
  if (!qword_1E9DD88E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD88E8);
  }
  return result;
}

uint64_t sub_1B6D0C50C()
{
  return sub_1B6D0C3A0(&qword_1E9DD88F0, &qword_1E9DD88F8, (uint64_t)&type metadata for LoadPolicyMode);
}

unint64_t sub_1B6D0C540()
{
  unint64_t result = qword_1E9DD8900;
  if (!qword_1E9DD8900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8900);
  }
  return result;
}

unint64_t sub_1B6D0C598()
{
  unint64_t result = qword_1E9DD8908;
  if (!qword_1E9DD8908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8908);
  }
  return result;
}

unint64_t sub_1B6D0C5F4()
{
  unint64_t result = qword_1E9DD8910;
  if (!qword_1E9DD8910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8910);
  }
  return result;
}

unint64_t sub_1B6D0C64C()
{
  unint64_t result = qword_1E9DD8918;
  if (!qword_1E9DD8918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8918);
  }
  return result;
}

unint64_t sub_1B6D0C6A4()
{
  unint64_t result = qword_1E9DD8920;
  if (!qword_1E9DD8920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8920);
  }
  return result;
}

unint64_t sub_1B6D0C6FC()
{
  unint64_t result = qword_1E9DD8928;
  if (!qword_1E9DD8928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8928);
  }
  return result;
}

unint64_t sub_1B6D0C754()
{
  unint64_t result = qword_1E9DD8930;
  if (!qword_1E9DD8930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8930);
  }
  return result;
}

unint64_t sub_1B6D0C7AC()
{
  unint64_t result = qword_1E9DD8938;
  if (!qword_1E9DD8938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8938);
  }
  return result;
}

unint64_t sub_1B6D0C804()
{
  unint64_t result = qword_1E9DD8940;
  if (!qword_1E9DD8940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8940);
  }
  return result;
}

unint64_t sub_1B6D0C85C()
{
  unint64_t result = qword_1EB97FBA8;
  if (!qword_1EB97FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBA8);
  }
  return result;
}

unint64_t sub_1B6D0C8B4()
{
  unint64_t result = qword_1EB97FBA0;
  if (!qword_1EB97FBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBA0);
  }
  return result;
}

unint64_t sub_1B6D0C90C()
{
  unint64_t result = qword_1E9DD8948;
  if (!qword_1E9DD8948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8948);
  }
  return result;
}

unint64_t sub_1B6D0C964()
{
  unint64_t result = qword_1E9DD8950;
  if (!qword_1E9DD8950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8950);
  }
  return result;
}

unint64_t sub_1B6D0C9BC()
{
  unint64_t result = qword_1E9DD8958;
  if (!qword_1E9DD8958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8958);
  }
  return result;
}

unint64_t sub_1B6D0CA14()
{
  unint64_t result = qword_1E9DD8960;
  if (!qword_1E9DD8960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8960);
  }
  return result;
}

unint64_t sub_1B6D0CA6C()
{
  unint64_t result = qword_1E9DD8968;
  if (!qword_1E9DD8968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8968);
  }
  return result;
}

unint64_t sub_1B6D0CAC4()
{
  unint64_t result = qword_1E9DD8970;
  if (!qword_1E9DD8970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8970);
  }
  return result;
}

unint64_t sub_1B6D0CB1C()
{
  unint64_t result = qword_1E9DD8978;
  if (!qword_1E9DD8978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8978);
  }
  return result;
}

unint64_t sub_1B6D0CB74()
{
  unint64_t result = qword_1E9DD8980;
  if (!qword_1E9DD8980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8980);
  }
  return result;
}

unint64_t sub_1B6D0CBCC()
{
  unint64_t result = qword_1EB97EB98;
  if (!qword_1EB97EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EB98);
  }
  return result;
}

unint64_t sub_1B6D0CC24()
{
  unint64_t result = qword_1EB97EB90;
  if (!qword_1EB97EB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EB90);
  }
  return result;
}

unint64_t sub_1B6D0CC7C()
{
  unint64_t result = qword_1EB97EFF8;
  if (!qword_1EB97EFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EFF8);
  }
  return result;
}

unint64_t sub_1B6D0CCD4()
{
  unint64_t result = qword_1EB97EFF0;
  if (!qword_1EB97EFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EFF0);
  }
  return result;
}

unint64_t sub_1B6D0CD28()
{
  unint64_t result = qword_1E9DD8990;
  if (!qword_1E9DD8990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8990);
  }
  return result;
}

unint64_t sub_1B6D0CD7C()
{
  unint64_t result = qword_1E9DD8998;
  if (!qword_1E9DD8998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8998);
  }
  return result;
}

unint64_t sub_1B6D0CDD0()
{
  unint64_t result = qword_1E9DD89A8;
  if (!qword_1E9DD89A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD89A8);
  }
  return result;
}

unint64_t sub_1B6D0CE24()
{
  unint64_t result = qword_1EB97FBB0;
  if (!qword_1EB97FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBB0);
  }
  return result;
}

unint64_t sub_1B6D0CE78()
{
  unint64_t result = qword_1E9DD89C0;
  if (!qword_1E9DD89C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD89C0);
  }
  return result;
}

unint64_t sub_1B6D0CECC()
{
  unint64_t result = qword_1E9DD89D0;
  if (!qword_1E9DD89D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD89D0);
  }
  return result;
}

unint64_t sub_1B6D0CF20()
{
  unint64_t result = qword_1E9DD8A30;
  if (!qword_1E9DD8A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8A30);
  }
  return result;
}

unint64_t sub_1B6D0CF74()
{
  unint64_t result = qword_1E9DD8A40;
  if (!qword_1E9DD8A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8A40);
  }
  return result;
}

unint64_t sub_1B6D0CFC8()
{
  unint64_t result = qword_1E9DD8A50;
  if (!qword_1E9DD8A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8A50);
  }
  return result;
}

unint64_t sub_1B6D0D01C()
{
  unint64_t result = qword_1E9DD8A68;
  if (!qword_1E9DD8A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8A68);
  }
  return result;
}

unint64_t sub_1B6D0D070()
{
  unint64_t result = qword_1E9DD8A78;
  if (!qword_1E9DD8A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8A78);
  }
  return result;
}

unint64_t sub_1B6D0D0C4()
{
  unint64_t result = qword_1E9DD8A90;
  if (!qword_1E9DD8A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8A90);
  }
  return result;
}

unsigned char *_s10CodingKeysOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D0D1E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureRequireMask.CodingKeys()
{
  return &type metadata for TextureRequireMask.CodingKeys;
}

ValueMetadata *type metadata accessor for RenderGraphTextureTarget.CodingKeys()
{
  return &type metadata for RenderGraphTextureTarget.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureRequireMipmap.CodingKeys()
{
  return &type metadata for TextureRequireMipmap.CodingKeys;
}

unsigned char *_s3VFX37TextureRequireAnimationRepresentationV4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D0D308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureRequireSizeLimit.CodingKeys()
{
  return &type metadata for TextureRequireSizeLimit.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureGPURepresentationDoNotUpload.CodingKeys()
{
  return &type metadata for TextureGPURepresentationDoNotUpload.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureSource.CodingKeys()
{
  return &type metadata for TextureSource.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TextureDescriptorCoder.CodingKeys_pre2019(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D0D42CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureDescriptorCoder.CodingKeys_pre2019()
{
  return &type metadata for TextureDescriptorCoder.CodingKeys_pre2019;
}

unsigned char *storeEnumTagSinglePayload for TextureDescriptorCoder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D0D530);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureDescriptorCoder.CodingKeys()
{
  return &type metadata for TextureDescriptorCoder.CodingKeys;
}

unsigned char *_s3VFX21TextureLoadingOptionsV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6D0D604);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureOptions.CodingKeys()
{
  return &type metadata for TextureOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for TextureOptions.StorageOptions()
{
  return &type metadata for TextureOptions.StorageOptions;
}

unint64_t sub_1B6D0D650()
{
  unint64_t result = qword_1E9DD8AB0;
  if (!qword_1E9DD8AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AB0);
  }
  return result;
}

unint64_t sub_1B6D0D6A8()
{
  unint64_t result = qword_1E9DD8AB8;
  if (!qword_1E9DD8AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AB8);
  }
  return result;
}

unint64_t sub_1B6D0D700()
{
  unint64_t result = qword_1E9DD8AC0;
  if (!qword_1E9DD8AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AC0);
  }
  return result;
}

unint64_t sub_1B6D0D758()
{
  unint64_t result = qword_1E9DD8AC8;
  if (!qword_1E9DD8AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AC8);
  }
  return result;
}

unint64_t sub_1B6D0D7B0()
{
  unint64_t result = qword_1E9DD8AD0;
  if (!qword_1E9DD8AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AD0);
  }
  return result;
}

unint64_t sub_1B6D0D808()
{
  unint64_t result = qword_1E9DD8AD8;
  if (!qword_1E9DD8AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AD8);
  }
  return result;
}

unint64_t sub_1B6D0D860()
{
  unint64_t result = qword_1E9DD8AE0;
  if (!qword_1E9DD8AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AE0);
  }
  return result;
}

unint64_t sub_1B6D0D8B8()
{
  unint64_t result = qword_1E9DD8AE8;
  if (!qword_1E9DD8AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AE8);
  }
  return result;
}

unint64_t sub_1B6D0D910()
{
  unint64_t result = qword_1E9DD8AF0;
  if (!qword_1E9DD8AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AF0);
  }
  return result;
}

unint64_t sub_1B6D0D968()
{
  unint64_t result = qword_1E9DD8AF8;
  if (!qword_1E9DD8AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8AF8);
  }
  return result;
}

unint64_t sub_1B6D0D9C0()
{
  unint64_t result = qword_1E9DD8B00;
  if (!qword_1E9DD8B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B00);
  }
  return result;
}

unint64_t sub_1B6D0DA18()
{
  unint64_t result = qword_1E9DD8B08;
  if (!qword_1E9DD8B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B08);
  }
  return result;
}

unint64_t sub_1B6D0DA70()
{
  unint64_t result = qword_1E9DD8B10;
  if (!qword_1E9DD8B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B10);
  }
  return result;
}

unint64_t sub_1B6D0DAC8()
{
  unint64_t result = qword_1E9DD8B18;
  if (!qword_1E9DD8B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B18);
  }
  return result;
}

unint64_t sub_1B6D0DB20()
{
  unint64_t result = qword_1E9DD8B20;
  if (!qword_1E9DD8B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B20);
  }
  return result;
}

unint64_t sub_1B6D0DB78()
{
  unint64_t result = qword_1E9DD8B28;
  if (!qword_1E9DD8B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B28);
  }
  return result;
}

unint64_t sub_1B6D0DBD0()
{
  unint64_t result = qword_1E9DD8B30;
  if (!qword_1E9DD8B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B30);
  }
  return result;
}

unint64_t sub_1B6D0DC28()
{
  unint64_t result = qword_1E9DD8B38;
  if (!qword_1E9DD8B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B38);
  }
  return result;
}

unint64_t sub_1B6D0DC80()
{
  unint64_t result = qword_1E9DD8B40;
  if (!qword_1E9DD8B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B40);
  }
  return result;
}

unint64_t sub_1B6D0DCD8()
{
  unint64_t result = qword_1E9DD8B48;
  if (!qword_1E9DD8B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B48);
  }
  return result;
}

unint64_t sub_1B6D0DD30()
{
  unint64_t result = qword_1E9DD8B50;
  if (!qword_1E9DD8B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B50);
  }
  return result;
}

unint64_t sub_1B6D0DD88()
{
  unint64_t result = qword_1E9DD8B58;
  if (!qword_1E9DD8B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B58);
  }
  return result;
}

unint64_t sub_1B6D0DDE0()
{
  unint64_t result = qword_1E9DD8B60;
  if (!qword_1E9DD8B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B60);
  }
  return result;
}

unint64_t sub_1B6D0DE38()
{
  unint64_t result = qword_1E9DD8B68;
  if (!qword_1E9DD8B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B68);
  }
  return result;
}

unint64_t sub_1B6D0DE90()
{
  unint64_t result = qword_1E9DD8B70;
  if (!qword_1E9DD8B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B70);
  }
  return result;
}

unint64_t sub_1B6D0DEE8()
{
  unint64_t result = qword_1E9DD8B78;
  if (!qword_1E9DD8B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B78);
  }
  return result;
}

unint64_t sub_1B6D0DF40()
{
  unint64_t result = qword_1E9DD8B80;
  if (!qword_1E9DD8B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B80);
  }
  return result;
}

unint64_t sub_1B6D0DF98()
{
  unint64_t result = qword_1E9DD8B88;
  if (!qword_1E9DD8B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B88);
  }
  return result;
}

unint64_t sub_1B6D0DFF0()
{
  unint64_t result = qword_1E9DD8B90;
  if (!qword_1E9DD8B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8B90);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentPropertyRewriter()
{
  return &type metadata for ComponentPropertyRewriter;
}

id sub_1B6D0E058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B62E736C(a1, a2, a3, a4, a5, a6, (SEL *)&selRef_setBuffer_offset_atIndex_);
}

id sub_1B6D0E064(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  id v11 = result;
  if (a6)
  {
    unint64_t result = objc_msgSend(v6, sel_setVertexBuffer_offset_atIndex_, result, a4 + a2, a5);
    if ((a6 & 8) == 0)
    {
LABEL_3:
      if ((a6 & 0x10) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      unint64_t result = objc_msgSend(v6, sel_setMeshBuffer_offset_atIndex_, v11, a4 + a2, a5);
      if ((a6 & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((a6 & 8) == 0)
  {
    goto LABEL_3;
  }
  unint64_t result = objc_msgSend(v6, sel_setObjectBuffer_offset_atIndex_, v11, a4 + a2, a5);
  if ((a6 & 0x10) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((a6 & 2) == 0) {
    return result;
  }
LABEL_9:

  return objc_msgSend(v6, sel_setFragmentBuffer_offset_atIndex_, v11, a4 + a2, a5);
}

id sub_1B6D0E150(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(v2, sel_setFragmentTexture_atIndex_, a1, a2);
}

ValueMetadata *type metadata accessor for PointOfView()
{
  return &type metadata for PointOfView;
}

__n128 initializeBufferWithCopyOfBuffer for OrthographicCamera(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for OrthographicCamera(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OrthographicCamera(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrthographicCamera()
{
  return &type metadata for OrthographicCamera;
}

ValueMetadata *type metadata accessor for PerspectiveCamera()
{
  return &type metadata for PerspectiveCamera;
}

ValueMetadata *type metadata accessor for ProjectionMatrix()
{
  return &type metadata for ProjectionMatrix;
}

float sub_1B6D0E244()
{
  return *(float *)(v0 + 12) / *(float *)(v0 + 16);
}

uint64_t sub_1B6D0E250(uint64_t a1)
{
  unint64_t v2 = sub_1B6D1350C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D0E28C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D1350C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D0E2C8(void *a1)
{
  sub_1B6D13F04(0, &qword_1E9DD8BB8, (uint64_t (*)(void))sub_1B6D1350C, (uint64_t)&type metadata for PointOfView.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D1350C();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6D0E408(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  __n128 v15 = a4;
  __n128 v16 = a5;
  __n128 v13 = a2;
  __n128 v14 = a3;
  sub_1B6D13F04(0, &qword_1E9DD4070, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  id v11 = (char *)&v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62B1B2C();
  sub_1B6E33A88();
  __n128 v21 = v13;
  __n128 v22 = v14;
  __n128 v23 = v15;
  __n128 v24 = v16;
  uint64_t v17 = 0;
  char v18 = 1;
  uint64_t v19 = 0x65756C6176;
  unint64_t v20 = 0xE500000000000000;
  sub_1B6792298();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B6D0E5B8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B6D1225C(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_1B6D0E5E8(void *a1)
{
  return sub_1B6D0E408(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_1B6D0E608(char a1)
{
  unint64_t result = 0x6E654C6C61636F66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7369447375636F66;
      break;
    case 2:
      unint64_t result = 0x6953726F736E6573;
      break;
    case 3:
      unint64_t result = 0x706F745366;
      break;
    case 4:
      unint64_t result = 0x657275736F707865;
      break;
    case 5:
      unint64_t result = 0x65676E61527ALL;
      break;
    case 6:
      unint64_t result = 0x5A65737265766572;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x7366664F6D6C6966;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B6D0E744(char a1)
{
  unint64_t result = 0x6E654C6C61636F66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7369447375636F66;
      break;
    case 2:
      unint64_t result = 0x6953726F736E6573;
      break;
    case 3:
      unint64_t result = 0x706F745366;
      break;
    case 4:
      unint64_t result = 0x657275736F707865;
      break;
    case 5:
      unint64_t result = 0x65676E61527ALL;
      break;
    case 6:
      unint64_t result = 0x5A65737265766572;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x7366664F6D6C6966;
      break;
    default:
      return result;
  }
  return result;
}

double sub_1B6D0E880@<D0>(uint64_t a1@<X8>)
{
  double result = 95168079.9;
  *(_OWORD *)a1 = xmmword_1B6EC4EC0;
  *(_OWORD *)(a1 + 16) = xmmword_1B6EC4ED0;
  *(_WORD *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1B6D0E8A4(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB2B60(*a1, *a2);
}

uint64_t sub_1B6D0E8B0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6D0E8F8()
{
  return sub_1B69E9DB4();
}

uint64_t sub_1B6D0E900()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6D0E944@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D1124C();
  *a1 = result;
  return result;
}

unint64_t sub_1B6D0E974@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B6D0E608(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B6D0E9A0()
{
  return sub_1B6D0E744(*v0);
}

uint64_t sub_1B6D0E9A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D1124C();
  *a1 = result;
  return result;
}

uint64_t sub_1B6D0E9D0(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13454();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D0EA0C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13454();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D0EA48(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6D13F04(0, &qword_1E9DD8BB0, (uint64_t (*)(void))sub_1B6D13454, (uint64_t)&type metadata for PerspectiveCamera.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13454();
  sub_1B6E33A88();
  LOBYTE(v15) = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1B6E32F78();
    LOBYTE(v15) = 2;
    sub_1B6E32F78();
    LOBYTE(v15) = 3;
    sub_1B6E32F78();
    LOBYTE(v15) = 4;
    sub_1B6E32F78();
    uint64_t v15 = *(void *)(v3 + 24);
    char v14 = 5;
    sub_1B62AA858();
    sub_1B62AA5EC(qword_1E9DD02C8);
    sub_1B6E32FA8();
    LOBYTE(v15) = 6;
    sub_1B6E32F58();
    LOBYTE(v15) = *(unsigned char *)(v3 + 33);
    char v14 = 7;
    sub_1B66C50D8();
    sub_1B6E32FA8();
    uint64_t v15 = *(void *)(v3 + 40);
    char v14 = 8;
    id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
    sub_1B6D13F04(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    sub_1B6D134A8((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v11);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B6D0EDD8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6D12614(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1B6D0EE1C(void *a1)
{
  return sub_1B6D0EA48(a1);
}

uint64_t sub_1B6D0EE34(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6D13F04(0, &qword_1E9DD8BD8, (uint64_t (*)(void))sub_1B6D13560, (uint64_t)&type metadata for OrthographicCamera.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13560();
  sub_1B6E33A88();
  char v17 = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    char v16 = *(unsigned char *)(v3 + 4);
    char v15 = 1;
    sub_1B66C50D8();
    sub_1B6E32FA8();
    v12[1] = *(void *)(v3 + 8);
    char v14 = 2;
    sub_1B62AA858();
    sub_1B62AA5EC(qword_1E9DD02C8);
    sub_1B6E32FA8();
    char v13 = 3;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6D0F078(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB392C(*a1, *a2);
}

unint64_t sub_1B6D0F084()
{
  unint64_t result = 0x656C616373;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x65676E61527ALL;
      break;
    case 3:
      unint64_t result = 0x5A65737265766572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6D0F110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D11858(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6D0F138(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13560();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D0F174(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13560();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B6D0F1B0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6D13100(a1, (uint64_t)&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B6D0F1F4(void *a1)
{
  return sub_1B6D0EE34(a1);
}

double sub_1B6D0F20C@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1065353216;
  *(unsigned char *)(a1 + 4) = 0;
  double result = 5.59548971e29;
  *(void *)(a1 + 8) = 0x461C40003DCCCCCDLL;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_1B6D0F230(void *a1)
{
  sub_1B6D13F04(0, &qword_1E9DD8C50, (uint64_t (*)(void))sub_1B6D13D0C, (uint64_t)&type metadata for CameraDepthOfField.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v10[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13D0C();
  sub_1B6E33A88();
  v10[15] = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    v10[14] = 1;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B6D0F3CC(char *a1, char *a2)
{
  return sub_1B6BB33E4(*a1, *a2);
}

uint64_t sub_1B6D0F3D8()
{
  if (*v0) {
    return 0x6163537375636F66;
  }
  else {
    return 0x696F507375636F66;
  }
}

uint64_t sub_1B6D0F418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D11750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6D0F440(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13D0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D0F47C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13D0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6D0F4B8(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B6D12F20(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B6D0F4E4(void *a1)
{
  return sub_1B6D0F230(a1);
}

double sub_1B6D0F500@<D0>(void *a1@<X8>)
{
  double result = 524288.125;
  *a1 = 0x4120000040000000;
  return result;
}

unint64_t sub_1B6D0F510(char a1)
{
  unint64_t result = 0x7469736E65746E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x617265744978616DLL;
      break;
    case 2:
      unint64_t result = 0x6C6F687365726874;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6C6946726F6C6F63;
      break;
    case 5:
      unint64_t result = 0x74736172746E6F63;
      break;
    case 6:
      unint64_t result = 0x6974617275746173;
      break;
    case 7:
      unint64_t result = 0x5168676948657375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B6D0F644(char a1)
{
  unint64_t result = 0x7469736E65746E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x617265744978616DLL;
      break;
    case 2:
      unint64_t result = 0x6C6F687365726874;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6C6946726F6C6F63;
      break;
    case 5:
      unint64_t result = 0x74736172746E6F63;
      break;
    case 6:
      unint64_t result = 0x6974617275746173;
      break;
    case 7:
      unint64_t result = 0x5168676948657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6D0F778(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAD45C(*a1, *a2);
}

uint64_t sub_1B6D0F784()
{
  return sub_1B69EC210();
}

uint64_t sub_1B6D0F790()
{
  return sub_1B69EA360();
}

uint64_t sub_1B6D0F798()
{
  return sub_1B69EC210();
}

uint64_t sub_1B6D0F7A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D10E9C();
  *a1 = result;
  return result;
}

unint64_t sub_1B6D0F7D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B6D0F510(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B6D0F7FC()
{
  return sub_1B6D0F644(*v0);
}

uint64_t sub_1B6D0F804@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D10E9C();
  *a1 = result;
  return result;
}

uint64_t sub_1B6D0F82C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13D60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D0F868(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13D60();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D0F8A4(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6D13F04(0, &qword_1E9DD8C58, (uint64_t (*)(void))sub_1B6D13D60, (uint64_t)&type metadata for CameraBloom.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13D60();
  sub_1B6E33A88();
  LOBYTE(v13) = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1B6E32F88();
    LOBYTE(v13) = 2;
    sub_1B6E32F78();
    LOBYTE(v13) = 3;
    sub_1B6E32F78();
    long long v13 = *(_OWORD *)(v3 + 32);
    char v14 = 4;
    id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
    sub_1B6D13F04(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    sub_1B6D134A8((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v11);
    sub_1B6E32FA8();
    LOBYTE(v13) = 5;
    sub_1B6E32F78();
    LOBYTE(v13) = 6;
    sub_1B6E32F78();
    LOBYTE(v13) = 7;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B6D0FBB0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6D119FC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1B6D0FBFC(void *a1)
{
  return sub_1B6D0F8A4(a1);
}

double sub_1B6D0FC14@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1065353216;
  *(void *)(a1 + 8) = 10;
  *(void *)(a1 + 16) = 0x3DCCCCCD3F800000;
  __asm { FMOV            V0.4S, #1.0 }
  *(_OWORD *)(a1 + 32) = _Q0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 56) = 1;
  return result;
}

void sub_1B6D0FC4C(void *a1@<X8>)
{
  *a1 = &unk_1F0F68BE0;
}

uint64_t sub_1B6D0FC5C()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B6D0FCBC()
{
  return sub_1B6E31B08();
}

uint64_t sub_1B6D0FD0C(void *a1, int a2)
{
  int v12 = a2;
  sub_1B6D13F04(0, &qword_1E9DD8C70, (uint64_t (*)(void))sub_1B6D13DB4, (uint64_t)&type metadata for CameraLensBlur.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13DB4();
  sub_1B6E33A88();
  char v16 = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    char v15 = v12;
    char v14 = 1;
    sub_1B66C557C();
    sub_1B6E32FA8();
    char v13 = 2;
    sub_1B6E32F88();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6D0FEF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BAFD0C(*a1, *a2);
}

uint64_t sub_1B6D0FF00()
{
  uint64_t v1 = 0x75517265746C6966;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E72654B78616DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x737569646172;
  }
}

uint64_t sub_1B6D0FF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D10EE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6D0FF98(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13DB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D0FFD4(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13DB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D10010@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6D11DF4(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v6;
    *(unsigned char *)(a2 + 4) = result;
    *(void *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1B6D10044(void *a1)
{
  return sub_1B6D0FD0C(a1, *(unsigned __int8 *)(v1 + 4));
}

void sub_1B6D10068(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(void *)(a1 + 8) = 32;
}

uint64_t sub_1B6D1007C(void *a1)
{
  sub_1B6D13F04(0, &qword_1E9DD8CA0, (uint64_t (*)(void))sub_1B6D13E5C, (uint64_t)&type metadata for CameraVignetting.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v10[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13E5C();
  sub_1B6E33A88();
  v10[15] = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    v10[14] = 1;
    sub_1B6E32F78();
    v10[13] = 2;
    sub_1B6E32F78();
    v10[12] = 3;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B6D10278(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB0FDC(*a1, *a2);
}

uint64_t sub_1B6D10284()
{
  uint64_t result = 0x7469736E65746E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6870726F6D616E61;
      break;
    case 2:
      uint64_t result = 0x7373656E74666F73;
      break;
    case 3:
      uint64_t result = 0x737569646172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6D10318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D11080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6D10340(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13E5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D1037C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13E5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B6D103B8(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B6D1201C(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
    *(_DWORD *)(a2 + 8) = v6;
    *(_DWORD *)(a2 + 12) = v7;
  }
}

uint64_t sub_1B6D103E8(void *a1)
{
  return sub_1B6D1007C(a1);
}

double sub_1B6D10408@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0078125;
  *a1 = xmmword_1B6EC4EE0;
  return result;
}

uint64_t sub_1B6D10418(char a1)
{
  uint64_t result = 0x657275736F707865;
  switch(a1)
  {
    case 1:
      return 0x74617265706D6574;
    case 2:
      return 1953393012;
    case 3:
      unsigned int v3 = 1952868716;
      return v3 | 0x6F6C6F4300000000;
    case 4:
      unsigned int v4 = 1952868716;
      goto LABEL_13;
    case 5:
      return 0x6C6F43616D6D6167;
    case 6:
      return 0x66664F616D6D6167;
    case 7:
      unsigned int v3 = 1852399975;
      return v3 | 0x6F6C6F4300000000;
    case 8:
      unsigned int v4 = 1852399975;
LABEL_13:
      uint64_t result = v4 | 0x7366664F00000000;
      break;
    case 9:
      uint64_t result = 0x74736172746E6F63;
      break;
    case 10:
      uint64_t result = 0x6974617275746173;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6D10574(void *a1)
{
  unsigned int v3 = v1;
  sub_1B6D13F04(0, &qword_1E9DD8CB8, (uint64_t (*)(void))sub_1B6D13EB0, (uint64_t)&type metadata for CameraColorGrading.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13EB0();
  sub_1B6E33A88();
  LOBYTE(v13) = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1B6E32F78();
    LOBYTE(v13) = 2;
    sub_1B6E32F78();
    long long v13 = v3[1];
    char v14 = 3;
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
    sub_1B6D13F04(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    sub_1B6D134A8((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v11);
    sub_1B6E32FA8();
    LOBYTE(v13) = 4;
    sub_1B6E32F78();
    long long v13 = v3[3];
    char v14 = 5;
    sub_1B6E32FA8();
    LOBYTE(v13) = 6;
    sub_1B6E32F78();
    long long v13 = v3[5];
    char v14 = 7;
    sub_1B6E32FA8();
    LOBYTE(v13) = 8;
    sub_1B6E32F78();
    LOBYTE(v13) = 9;
    sub_1B6E32F78();
    LOBYTE(v13) = 10;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6D1091C(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1B6D10418(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B6D10418(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6D109A8()
{
  return sub_1B6D10418(*v0);
}

uint64_t sub_1B6D109B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6D11298(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6D109D8(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13EB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D10A14(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13EB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1B6D10A50@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6D12AA0(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v8[0];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 92) = *(_OWORD *)((char *)v8 + 12);
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1B6D10AA4(void *a1)
{
  return sub_1B6D10574(a1);
}

double sub_1B6D10ABC@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *(_OWORD *)(a1 + 16) = _Q0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 48) = _Q0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 80) = _Q0;
  double result = 0.0078125;
  *(void *)(a1 + 96) = 0x3F80000000000000;
  *(_DWORD *)(a1 + 104) = 1065353216;
  return result;
}

void sub_1B6D10AF4(void *a1@<X8>)
{
  *a1 = &unk_1F0F7F748;
}

uint64_t sub_1B6D10B04()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B6D10B64()
{
  return sub_1B6E31B08();
}

uint64_t sub_1B6D10BB4(void *a1, char a2)
{
  sub_1B6D13F04(0, &qword_1E9DD8C88, (uint64_t (*)(void))sub_1B6D13E08, (uint64_t)&type metadata for CameraToneMapping.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13E08();
  sub_1B6E33A88();
  char v12 = a2;
  sub_1B66C54A8();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6D10D2C()
{
  return 0x726F74617265706FLL;
}

uint64_t sub_1B6D10D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6D10DDC(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13E08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D10E18(uint64_t a1)
{
  unint64_t v2 = sub_1B6D13E08();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B6D10E54@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B6D12458(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6D10E80(void *a1)
{
  return sub_1B6D10BB4(a1, *v1);
}

uint64_t sub_1B6D10E9C()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6D10EE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75517265746C6966 && a2 == 0xED00007974696C61 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E72654B78616DLL && a2 == 0xEF7375696461526CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B6D11080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7469736E65746E69 && a2 == 0xE900000000000079;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6870726F6D616E61 && a2 == 0xEA00000000006369 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7373656E74666F73 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B6D1124C()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6D11298(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657275736F707865 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953393012 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6C6F437466696CLL && a2 == 0xE900000000000072 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7366664F7466696CLL && a2 == 0xEA00000000007465 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6F43616D6D6167 && a2 == 0xEA0000000000726FLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x66664F616D6D6167 && a2 == 0xEB00000000746573 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6C6F436E696167 && a2 == 0xE900000000000072 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7366664F6E696167 && a2 == 0xEA00000000007465 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74736172746E6F63 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6974617275746173 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1B6D11750(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696F507375636F66 && a2 == 0xEA0000000000746ELL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6163537375636F66 && a2 == 0xEA0000000000656CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6D11858(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001B6F2EA20 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E61527ALL && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5A65737265766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B6D119FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6D13F04(0, &qword_1EB980888, (uint64_t (*)(void))sub_1B6D13D60, (uint64_t)&type metadata for CameraBloom.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = a1[3];
  unint64_t v32 = a1;
  sub_1B62C14BC(a1, v11);
  sub_1B6D13D60();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v32);
  }
  LOBYTE(v34) = 0;
  sub_1B6E32DC8();
  int v13 = v12;
  LOBYTE(v34) = 1;
  uint64_t v14 = sub_1B6E32DD8();
  LOBYTE(v34) = 2;
  sub_1B6E32DC8();
  int v16 = v15;
  LOBYTE(v34) = 3;
  sub_1B6E32DC8();
  int v19 = v18;
  unint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
  sub_1B6D13F04(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  char v33 = 4;
  sub_1B6D134A8((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v20);
  sub_1B6E32D78();
  if (v35) {
    __asm { FMOV            V0.4S, #1.0 }
  }
  else {
    _Q0 = v34;
  }
  long long v31 = _Q0;
  LOBYTE(v34) = 5;
  uint64_t v26 = sub_1B6E32D58();
  if ((v26 & 0x100000000) != 0) {
    float v27 = 1.0;
  }
  else {
    float v27 = *(float *)&v26;
  }
  LOBYTE(v34) = 6;
  uint64_t v28 = sub_1B6E32D58();
  LOBYTE(v34) = 7;
  char v29 = sub_1B6E32D38();
  if ((v28 & 0x100000000) != 0) {
    float v30 = 1.0;
  }
  else {
    float v30 = *(float *)&v28;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v32);
  *(_DWORD *)a2 = v13;
  *(void *)(a2 + 8) = v14;
  *(_DWORD *)(a2 + 16) = v16;
  *(_DWORD *)(a2 + 20) = v19;
  *(_OWORD *)(a2 + 32) = v31;
  *(float *)(a2 + 48) = v27;
  *(float *)(a2 + 52) = v30;
  *(unsigned char *)(a2 + 56) = (v29 == 2) | v29 & 1;
  return result;
}

uint64_t sub_1B6D11DF4(void *a1)
{
  sub_1B6D13F04(0, &qword_1E9DD8C60, (uint64_t (*)(void))sub_1B6D13DB4, (uint64_t)&type metadata for CameraLensBlur.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v11[-v7];
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6D13DB4();
  sub_1B6E33A48();
  if (!v1)
  {
    v11[15] = 0;
    sub_1B6E32DC8();
    v11[13] = 1;
    sub_1B66C5528();
    sub_1B6E32DF8();
    uint64_t v9 = v11[14];
    v11[12] = 2;
    sub_1B6E32DD8();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

float sub_1B6D1201C(void *a1)
{
  sub_1B6D13F04(0, &qword_1E9DD8C90, (uint64_t (*)(void))sub_1B6D13E5C, (uint64_t)&type metadata for CameraVignetting.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13E5C();
  sub_1B6E33A48();
  if (!v1)
  {
    char v16 = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    char v15 = 1;
    sub_1B6E32DC8();
    char v14 = 2;
    sub_1B6E32DC8();
    char v13 = 3;
    sub_1B6E32DC8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B6D1225C(void *a1)
{
  sub_1B6D13F04(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62B1B2C();
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v11 = 0;
    char v12 = 1;
    uint64_t v13 = 0x65756C6176;
    unint64_t v14 = 0xE500000000000000;
    sub_1B62B18DC();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v10[2] = v16;
    id v10[3] = v15;
    v10[0] = v18;
    v10[1] = v17;
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

unint64_t sub_1B6D12458(void *a1)
{
  sub_1B6D13F04(0, &qword_1E9DD8C78, (uint64_t (*)(void))sub_1B6D13E08, (uint64_t)&type metadata for CameraToneMapping.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13E08();
  unint64_t v10 = (unint64_t)v9;
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B66C5454();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    unint64_t v10 = v13;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1B6D12614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6D13F04(0, &qword_1EB9809B0, (uint64_t (*)(void))sub_1B6D13454, (uint64_t)&type metadata for PerspectiveCamera.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v32 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v31 - v8;
  char v35 = 1;
  char v37 = 0;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13454();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  v33.i8[0] = 0;
  sub_1B6E32DC8();
  float v11 = v10;
  v33.i8[0] = 1;
  sub_1B6E32DC8();
  uint64_t v12 = v6;
  int v14 = v13;
  v33.i8[0] = 2;
  sub_1B6E32DC8();
  float v16 = v15;
  v33.i8[0] = 3;
  sub_1B6E32DC8();
  int v18 = v17;
  v33.i8[0] = 4;
  sub_1B6E32DC8();
  int v20 = v19;
  sub_1B62AA858();
  char v36 = 5;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  int8x8_t v21 = v33;
  v33.i8[0] = 6;
  char v35 = sub_1B6E32DA8() & 1;
  char v36 = 7;
  sub_1B66C5084();
  sub_1B6E32D78();
  char v37 = v33.i8[0] & 1;
  __n128 v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  sub_1B6D13F04(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  char v36 = 8;
  uint64_t v24 = v32;
  sub_1B6D134A8((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v23);
  sub_1B6E32D78();
  if (v34) {
    unsigned int v25 = -1;
  }
  else {
    unsigned int v25 = 0;
  }
  int8x8_t v26 = vbic_s8(v33, (int8x8_t)vdup_n_s32(v25));
  float v27 = atanf((float)(v16 * 0.5) / v11);
  float v28 = v27 + v27;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v24);
  char v29 = v35;
  char v30 = v37;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(float *)a2 = v28;
  *(float *)(a2 + 4) = v11;
  *(_DWORD *)(a2 + 8) = v14;
  *(float *)(a2 + 12) = v16;
  *(_DWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 20) = v20;
  *(int8x8_t *)(a2 + 24) = v21;
  *(unsigned char *)(a2 + 32) = v29;
  *(unsigned char *)(a2 + 33) = v30;
  *(int8x8_t *)(a2 + 40) = v26;
  return result;
}

uint64_t sub_1B6D12AA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6D13F04(0, &qword_1E9DD8CA8, (uint64_t (*)(void))sub_1B6D13EB0, (uint64_t)&type metadata for CameraColorGrading.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v30 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13EB0();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v34) = 0;
  sub_1B6E32DC8();
  int v11 = v10;
  LOBYTE(v34) = 1;
  sub_1B6E32DC8();
  int v13 = v12;
  LOBYTE(v34) = 2;
  sub_1B6E32DC8();
  int v15 = v14;
  float v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
  sub_1B6D13F04(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v18 = v17;
  char v35 = 3;
  sub_1B6D134A8((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v16);
  *(void *)&long long v32 = v18;
  sub_1B6E32DF8();
  long long v31 = v34;
  LOBYTE(v34) = 4;
  sub_1B6E32DC8();
  int v20 = v19;
  char v35 = 5;
  sub_1B6E32DF8();
  long long v30 = v34;
  LOBYTE(v34) = 6;
  sub_1B6E32DC8();
  int v22 = v21;
  char v35 = 7;
  sub_1B6E32DF8();
  long long v32 = v34;
  LOBYTE(v34) = 8;
  sub_1B6E32DC8();
  int v24 = v23;
  LOBYTE(v34) = 9;
  sub_1B6E32DC8();
  int v26 = v25;
  LOBYTE(v34) = 10;
  sub_1B6E32DC8();
  int v28 = v27;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v33);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(_DWORD *)a2 = v11;
  *(_DWORD *)(a2 + 4) = v13;
  *(_DWORD *)(a2 + 8) = v15;
  *(_OWORD *)(a2 + 16) = v31;
  *(_DWORD *)(a2 + 32) = v20;
  *(_OWORD *)(a2 + 48) = v30;
  *(_DWORD *)(a2 + 64) = v22;
  *(_OWORD *)(a2 + 80) = v32;
  *(_DWORD *)(a2 + 96) = v24;
  *(_DWORD *)(a2 + 100) = v26;
  *(_DWORD *)(a2 + 104) = v28;
  return result;
}

float sub_1B6D12F20(void *a1)
{
  sub_1B6D13F04(0, &qword_1E9DD8C40, (uint64_t (*)(void))sub_1B6D13D0C, (uint64_t)&type metadata for CameraDepthOfField.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13D0C();
  sub_1B6E33A48();
  if (!v1)
  {
    char v14 = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    char v13 = 1;
    sub_1B6E32DC8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B6D13100@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a2;
  sub_1B6D13F04(0, &qword_1E9DD8BC8, (uint64_t (*)(void))sub_1B6D13560, (uint64_t)&type metadata for OrthographicCamera.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v17 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D13560();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v17[0];
  char v22 = 0;
  sub_1B6E32DC8();
  int v12 = v11;
  char v20 = 1;
  sub_1B66C5084();
  sub_1B6E32DF8();
  char v13 = v21;
  sub_1B62AA858();
  char v19 = 2;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v14 = v17[1];
  char v18 = 3;
  char v15 = sub_1B6E32DA8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(_DWORD *)uint64_t v10 = v12;
  *(unsigned char *)(v10 + 4) = v13;
  *(void *)(v10 + 8) = v14;
  *(unsigned char *)(v10 + 16) = v15 & 1;
  return result;
}

unint64_t sub_1B6D133AC()
{
  unint64_t result = qword_1E9DD8BA0;
  if (!qword_1E9DD8BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8BA0);
  }
  return result;
}

unint64_t sub_1B6D13400()
{
  unint64_t result = qword_1E9DD8BA8;
  if (!qword_1E9DD8BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8BA8);
  }
  return result;
}

unint64_t sub_1B6D13454()
{
  unint64_t result = qword_1EB97EF90;
  if (!qword_1EB97EF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF90);
  }
  return result;
}

uint64_t sub_1B6D134A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6D13F04(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6D1350C()
{
  unint64_t result = qword_1E9DD8BC0;
  if (!qword_1E9DD8BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8BC0);
  }
  return result;
}

unint64_t sub_1B6D13560()
{
  unint64_t result = qword_1E9DD8BD0;
  if (!qword_1E9DD8BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8BD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for OrthographicCamera.CodingKeys()
{
  return &type metadata for OrthographicCamera.CodingKeys;
}

ValueMetadata *type metadata accessor for PointOfView.CodingKeys()
{
  return &type metadata for PointOfView.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PerspectiveCamera.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D136A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PerspectiveCamera.CodingKeys()
{
  return &type metadata for PerspectiveCamera.CodingKeys;
}

ValueMetadata *type metadata accessor for CameraDepthOfField()
{
  return &type metadata for CameraDepthOfField;
}

__n128 initializeWithCopy for CameraBloom(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CameraBloom(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraBloom(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraBloom()
{
  return &type metadata for CameraBloom;
}

uint64_t getEnumTagSinglePayload for CameraLensBlur(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraLensBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraLensBlur()
{
  return &type metadata for CameraLensBlur;
}

ValueMetadata *type metadata accessor for CameraToneMapping()
{
  return &type metadata for CameraToneMapping;
}

ValueMetadata *type metadata accessor for CameraVignetting()
{
  return &type metadata for CameraVignetting;
}

__n128 initializeWithCopy for CameraColorGrading(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 92) = *(long long *)((char *)a2 + 92);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CameraColorGrading(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 108)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CameraColorGrading(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 104) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 108) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CameraColorGrading()
{
  return &type metadata for CameraColorGrading;
}

ValueMetadata *type metadata accessor for LensBlurQuality()
{
  return &type metadata for LensBlurQuality;
}

ValueMetadata *type metadata accessor for ToneMappingOperator()
{
  return &type metadata for ToneMappingOperator;
}

uint64_t sub_1B6D1393C()
{
  return sub_1B699C708(&qword_1E9DD8BE0, &qword_1E9DD8BE8);
}

unint64_t sub_1B6D13970()
{
  unint64_t result = qword_1E9DD8BF0;
  if (!qword_1E9DD8BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8BF0);
  }
  return result;
}

uint64_t sub_1B6D139C4()
{
  return sub_1B699C708(&qword_1E9DD8BF8, &qword_1E9DD8C00);
}

unint64_t sub_1B6D139F8()
{
  unint64_t result = qword_1E9DD8C08;
  if (!qword_1E9DD8C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C08);
  }
  return result;
}

unint64_t sub_1B6D13A50()
{
  unint64_t result = qword_1E9DD8C10;
  if (!qword_1E9DD8C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C10);
  }
  return result;
}

unint64_t sub_1B6D13AA8()
{
  unint64_t result = qword_1E9DD8C18;
  if (!qword_1E9DD8C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C18);
  }
  return result;
}

unint64_t sub_1B6D13B00()
{
  unint64_t result = qword_1E9DD8C20;
  if (!qword_1E9DD8C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C20);
  }
  return result;
}

unint64_t sub_1B6D13B58()
{
  unint64_t result = qword_1E9DD8C28;
  if (!qword_1E9DD8C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C28);
  }
  return result;
}

unint64_t sub_1B6D13BB0()
{
  unint64_t result = qword_1E9DD8C30;
  if (!qword_1E9DD8C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C30);
  }
  return result;
}

unint64_t sub_1B6D13C08()
{
  unint64_t result = qword_1E9DD8C38;
  if (!qword_1E9DD8C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C38);
  }
  return result;
}

unint64_t sub_1B6D13C60()
{
  unint64_t result = qword_1EB97EFA0;
  if (!qword_1EB97EFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EFA0);
  }
  return result;
}

unint64_t sub_1B6D13CB8()
{
  unint64_t result = qword_1EB97EF98;
  if (!qword_1EB97EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EF98);
  }
  return result;
}

unint64_t sub_1B6D13D0C()
{
  unint64_t result = qword_1E9DD8C48;
  if (!qword_1E9DD8C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C48);
  }
  return result;
}

unint64_t sub_1B6D13D60()
{
  unint64_t result = qword_1EB97DAB8;
  if (!qword_1EB97DAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DAB8);
  }
  return result;
}

unint64_t sub_1B6D13DB4()
{
  unint64_t result = qword_1E9DD8C68;
  if (!qword_1E9DD8C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C68);
  }
  return result;
}

unint64_t sub_1B6D13E08()
{
  unint64_t result = qword_1E9DD8C80;
  if (!qword_1E9DD8C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C80);
  }
  return result;
}

unint64_t sub_1B6D13E5C()
{
  unint64_t result = qword_1E9DD8C98;
  if (!qword_1E9DD8C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8C98);
  }
  return result;
}

unint64_t sub_1B6D13EB0()
{
  unint64_t result = qword_1E9DD8CB0;
  if (!qword_1E9DD8CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CB0);
  }
  return result;
}

void sub_1B6D13F04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CameraColorGrading.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D14038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraColorGrading.CodingKeys()
{
  return &type metadata for CameraColorGrading.CodingKeys;
}

unsigned char *_s3VFX18OrthographicCameraV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D1413CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraVignetting.CodingKeys()
{
  return &type metadata for CameraVignetting.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CameraToneMapping.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6D14210);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraToneMapping.CodingKeys()
{
  return &type metadata for CameraToneMapping.CodingKeys;
}

unsigned char *_s3VFX15LensBlurQualityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D14314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraLensBlur.CodingKeys()
{
  return &type metadata for CameraLensBlur.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CameraBloom.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D14418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraBloom.CodingKeys()
{
  return &type metadata for CameraBloom.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CameraDepthOfField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6D1451CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraDepthOfField.CodingKeys()
{
  return &type metadata for CameraDepthOfField.CodingKeys;
}

unint64_t sub_1B6D14558()
{
  unint64_t result = qword_1E9DD8CC0;
  if (!qword_1E9DD8CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CC0);
  }
  return result;
}

unint64_t sub_1B6D145B0()
{
  unint64_t result = qword_1E9DD8CC8;
  if (!qword_1E9DD8CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CC8);
  }
  return result;
}

unint64_t sub_1B6D14608()
{
  unint64_t result = qword_1E9DD8CD0;
  if (!qword_1E9DD8CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CD0);
  }
  return result;
}

unint64_t sub_1B6D14660()
{
  unint64_t result = qword_1E9DD8CD8;
  if (!qword_1E9DD8CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CD8);
  }
  return result;
}

unint64_t sub_1B6D146B8()
{
  unint64_t result = qword_1E9DD8CE0;
  if (!qword_1E9DD8CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CE0);
  }
  return result;
}

unint64_t sub_1B6D14710()
{
  unint64_t result = qword_1E9DD8CE8;
  if (!qword_1E9DD8CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CE8);
  }
  return result;
}

unint64_t sub_1B6D14768()
{
  unint64_t result = qword_1E9DD8CF0;
  if (!qword_1E9DD8CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CF0);
  }
  return result;
}

unint64_t sub_1B6D147C0()
{
  unint64_t result = qword_1E9DD8CF8;
  if (!qword_1E9DD8CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8CF8);
  }
  return result;
}

unint64_t sub_1B6D14818()
{
  unint64_t result = qword_1E9DD8D00;
  if (!qword_1E9DD8D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D00);
  }
  return result;
}

unint64_t sub_1B6D14870()
{
  unint64_t result = qword_1E9DD8D08;
  if (!qword_1E9DD8D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D08);
  }
  return result;
}

unint64_t sub_1B6D148C8()
{
  unint64_t result = qword_1E9DD8D10;
  if (!qword_1E9DD8D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D10);
  }
  return result;
}

unint64_t sub_1B6D14920()
{
  unint64_t result = qword_1E9DD8D18;
  if (!qword_1E9DD8D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D18);
  }
  return result;
}

unint64_t sub_1B6D14978()
{
  unint64_t result = qword_1E9DD8D20;
  if (!qword_1E9DD8D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D20);
  }
  return result;
}

unint64_t sub_1B6D149D0()
{
  unint64_t result = qword_1E9DD8D28;
  if (!qword_1E9DD8D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D28);
  }
  return result;
}

unint64_t sub_1B6D14A28()
{
  unint64_t result = qword_1EB97DAC8;
  if (!qword_1EB97DAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DAC8);
  }
  return result;
}

unint64_t sub_1B6D14A80()
{
  unint64_t result = qword_1EB97DAC0;
  if (!qword_1EB97DAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DAC0);
  }
  return result;
}

unint64_t sub_1B6D14AD8()
{
  unint64_t result = qword_1E9DD8D30;
  if (!qword_1E9DD8D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D30);
  }
  return result;
}

unint64_t sub_1B6D14B30()
{
  unint64_t result = qword_1E9DD8D38;
  if (!qword_1E9DD8D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D38);
  }
  return result;
}

ValueMetadata *type metadata accessor for HiddenOrHasHiddenAncestor()
{
  return &type metadata for HiddenOrHasHiddenAncestor;
}

uint64_t sub_1B6D14B94(char a1, unint64_t a2, uint64_t a3)
{
  int v6 = a1 & 1;
  swift_retain();
  int v7 = sub_1B62EC0CC((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FDE0, a2);
  uint64_t result = swift_release();
  if (v7 != v6)
  {
    BOOL v10 = a2 == -1 && HIDWORD(a2) == 0;
    if (a1)
    {
      if (!v10)
      {
        uint64_t v11 = swift_retain();
        MEMORY[0x1F4188790](v11, v12);
        sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6D156F8);
        swift_release();
      }
      return sub_1B6D15234(a2, a3);
    }
    else
    {
      if (v10) {
        return sub_1B6D15090(a2, a3);
      }
      uint64_t v13 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
      swift_retain();
      if (v13)
      {
        int v14 = *(unsigned __int8 *)(v13 + 80);
        MEMORY[0x1BA9B8670](v13 + 48);
        uint64_t v13 = *(void *)(v13 + 56);
      }
      else
      {
        int v14 = 0;
      }
      swift_unknownObjectUnownedInit();
      v19[0] = a3;
      _OWORD v19[2] = v13;
      swift_unknownObjectUnownedAssign();
      swift_unownedRetain();
      swift_unknownObjectRelease();
      char v20 = v14;
      sub_1B636C4E0((uint64_t)v19, (uint64_t)v21);
      sub_1B6A61F04((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FD68, a2);
      sub_1B636C450((uint64_t)v21);
      if (v14) {
        sub_1B6A667F0(1);
      }
      swift_release();
      swift_retain();
      uint64_t v15 = sub_1B62D054C(a2);
      char v17 = v16;
      swift_release();
      if (v17) {
        return sub_1B6D15090(a2, a3);
      }
      swift_retain();
      BOOL v18 = sub_1B62EC0CC((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F51710, v15);
      uint64_t result = swift_release();
      if (!v18) {
        return sub_1B6D15090(a2, a3);
      }
    }
  }
  return result;
}

uint64_t sub_1B6D14DC4(uint64_t a1)
{
  unint64_t v2 = sub_1B6D15908();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D14E00(uint64_t a1)
{
  unint64_t v2 = sub_1B6D15908();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D14E3C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6D14F54(a1, a2, a3, &qword_1E9DD8D78, (uint64_t (*)(void))sub_1B6D15908, (uint64_t)&type metadata for Hidden.CodingKeys, (void (*)(void))sub_1B6D15908);
}

uint64_t sub_1B6D14E8C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D15718();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D14EC8(uint64_t a1)
{
  unint64_t v2 = sub_1B6D15718();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D14F04(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6D14F54(a1, a2, a3, &qword_1E9DD8D40, (uint64_t (*)(void))sub_1B6D15718, (uint64_t)&type metadata for HiddenOrHasHiddenAncestor.CodingKeys, (void (*)(void))sub_1B6D15718);
}

uint64_t sub_1B6D14F54(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B6D158A0(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  int v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6D15090(unint64_t a1, uint64_t a2)
{
  swift_retain();
  BOOL v4 = sub_1B62EC0CC((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F51710, a1);
  uint64_t result = swift_release();
  if (v4)
  {
    swift_retain();
    BOOL v6 = sub_1B62EC0CC((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FDE0, a1);
    uint64_t result = swift_release();
    if (!v6)
    {
      if (a1 != 0xFFFFFFFF)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        if (v7)
        {
          int v8 = *(unsigned __int8 *)(v7 + 80);
          MEMORY[0x1BA9B8670](v7 + 48);
          uint64_t v7 = *(void *)(v7 + 56);
        }
        else
        {
          int v8 = 0;
        }
        swift_unknownObjectUnownedInit();
        v12[0] = a2;
        void v12[2] = v7;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        char v13 = v8;
        sub_1B636C4E0((uint64_t)v12, (uint64_t)v14);
        sub_1B6A61F04((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F516E0, a1);
        sub_1B636C450((uint64_t)v14);
        if (v8) {
          sub_1B6A667F0(1);
        }
        swift_release();
      }
      uint64_t v9 = sub_1B6AAD6A8(a1, a2);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        uint64_t v11 = (void *)(v9 + 40);
        do
        {
          sub_1B6D15090(*(v11 - 1), *v11);
          v11 += 2;
          --v10;
        }
        while (v10);
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6D15234(unint64_t a1, uint64_t a2)
{
  swift_retain();
  BOOL v4 = sub_1B62EC0CC((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F51710, a1);
  uint64_t result = swift_release();
  if (!v4)
  {
    if (a1 != 0xFFFFFFFF)
    {
      uint64_t v6 = swift_retain();
      MEMORY[0x1F4188790](v6, v7);
      sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6D156DC);
      swift_release();
    }
    uint64_t v8 = sub_1B6AAD6A8(a1, a2);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = (void *)(v8 + 40);
      do
      {
        sub_1B6D15234(*(v10 - 1), *v10);
        v10 += 2;
        --v9;
      }
      while (v9);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6D15340(uint64_t a1)
{
  unint64_t v2 = sub_1B6D1584C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D1537C(uint64_t a1)
{
  unint64_t v2 = sub_1B6D1584C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D153B8@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1B6D158A0(0, &qword_1E9DD8D60, (uint64_t (*)(void))sub_1B6D1584C, (uint64_t)&type metadata for Opacity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D1584C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v15;
  sub_1B6E32DC8();
  int v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *uint64_t v10 = v12;
  return result;
}

uint64_t sub_1B6D15570(void *a1)
{
  sub_1B6D158A0(0, &qword_1E9DD8D70, (uint64_t (*)(void))sub_1B6D1584C, (uint64_t)&type metadata for Opacity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D1584C();
  sub_1B6E33A88();
  sub_1B6E32F78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void *sub_1B6D156DC(void *a1)
{
  return sub_1B6B71064(a1, *(void *)(v1 + 24));
}

void *sub_1B6D156F8(void *a1)
{
  return sub_1B6B6D5D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1B6D15718()
{
  unint64_t result = qword_1E9DD8D48;
  if (!qword_1E9DD8D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D48);
  }
  return result;
}

ValueMetadata *type metadata accessor for Opacity()
{
  return &type metadata for Opacity;
}

ValueMetadata *type metadata accessor for HiddenOrHasHiddenAncestor.CodingKeys()
{
  return &type metadata for HiddenOrHasHiddenAncestor.CodingKeys;
}

ValueMetadata *type metadata accessor for Hidden()
{
  return &type metadata for Hidden;
}

unint64_t sub_1B6D157A0()
{
  unint64_t result = qword_1E9DD8D50;
  if (!qword_1E9DD8D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D50);
  }
  return result;
}

unint64_t sub_1B6D157F8()
{
  unint64_t result = qword_1E9DD8D58;
  if (!qword_1E9DD8D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D58);
  }
  return result;
}

unint64_t sub_1B6D1584C()
{
  unint64_t result = qword_1E9DD8D68;
  if (!qword_1E9DD8D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D68);
  }
  return result;
}

void sub_1B6D158A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B6D15908()
{
  unint64_t result = qword_1E9DD8D80;
  if (!qword_1E9DD8D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D80);
  }
  return result;
}

ValueMetadata *type metadata accessor for Hidden.CodingKeys()
{
  return &type metadata for Hidden.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Opacity.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6D15A08);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Opacity.CodingKeys()
{
  return &type metadata for Opacity.CodingKeys;
}

unint64_t sub_1B6D15A44()
{
  unint64_t result = qword_1E9DD8D88;
  if (!qword_1E9DD8D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D88);
  }
  return result;
}

unint64_t sub_1B6D15A9C()
{
  unint64_t result = qword_1E9DD8D90;
  if (!qword_1E9DD8D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D90);
  }
  return result;
}

unint64_t sub_1B6D15AF4()
{
  unint64_t result = qword_1E9DD8D98;
  if (!qword_1E9DD8D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8D98);
  }
  return result;
}

unint64_t sub_1B6D15B4C()
{
  unint64_t result = qword_1E9DD8DA0;
  if (!qword_1E9DD8DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8DA0);
  }
  return result;
}

unint64_t sub_1B6D15BA4()
{
  unint64_t result = qword_1E9DD8DA8;
  if (!qword_1E9DD8DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8DA8);
  }
  return result;
}

uint64_t sub_1B6D15BF8(uint64_t result)
{
  if (result != 1)
  {
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6D15C3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SwiftScriptCodeGen();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B67BB6D0(a1, a2, a3);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1B67BA894(1);
  if (v5)
  {
    swift_release();
  }
  else
  {
    uint64_t v14 = v11;
    uint64_t v23 = v12;
    unint64_t v24 = v13;
    type metadata accessor for CScriptCodeGen();
    swift_initStackObject();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B67BB6D0(a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B67B93D4(1);
    uint64_t v18 = v15;
    unint64_t v19 = v16;
    if (v14 < 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = 0;
      unint64_t v21 = 0;
      uint64_t v20 = a4;
    }
    else
    {
      uint64_t v20 = a4;
      unint64_t v21 = v24;
      uint64_t v22 = v23;
    }
    a5 = sub_1B6D1729C(v22, v21, v18, v19, v20, a5 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return a5;
}

uint64_t sub_1B6D15E2C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BACEB0(*a1, *a2);
}

uint64_t sub_1B6D15E38()
{
  return sub_1B69EC45C();
}

uint64_t sub_1B6D15E44()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6D15F74()
{
  return sub_1B69EC45C();
}

uint64_t sub_1B6D15F7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D1D0A8();
  *a1 = result;
  return result;
}

void sub_1B6D15FAC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000656D61;
  uint64_t v3 = 0x4E7463656A6F7250;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1145656661;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6E6F6973726556;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0x74726F7078457349;
      *(void *)(a1 + 8) = 0xEA00000000006465;
      break;
    case 4:
      *(void *)a1 = 0x325846567349;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 5:
      strcpy((char *)a1, "VersionHistory");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 6:
      strcpy((char *)a1, "SceneFilename");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1B6D160C0()
{
  uint64_t result = 0x4E7463656A6F7250;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1145656661;
      break;
    case 2:
      uint64_t result = 0x6E6F6973726556;
      break;
    case 3:
      uint64_t result = 0x74726F7078457349;
      break;
    case 4:
      uint64_t result = 0x325846567349;
      break;
    case 5:
      uint64_t result = 0x486E6F6973726556;
      break;
    case 6:
      uint64_t result = 0x6C6946656E656353;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6D161BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6D1D0A8();
  *a1 = result;
  return result;
}

uint64_t sub_1B6D161E4(uint64_t a1)
{
  unint64_t v2 = sub_1B6D1CC08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6D16220(uint64_t a1)
{
  unint64_t v2 = sub_1B6D1CC08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6D1625C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  sub_1B63BDFB4(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)&v103 - v5;
  uint64_t v7 = sub_1B6E31118();
  uint64_t v109 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8);
  unint64_t v10 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6D1CF5C(0, &qword_1EB980870, MEMORY[0x1E4FBBDC0]);
  uint64_t v12 = v11;
  uint64_t v108 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v103 - v14;
  uint64_t v16 = type metadata accessor for BundleInfo();
  MEMORY[0x1F4188790](v16, v17);
  unint64_t v19 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v113 = v20;
  unint64_t v21 = v19;
  uint64_t v22 = &v19[v20[10]];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v110 = v22;
  uint64_t v111 = (uint64_t)a1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D1CC08();
  uint64_t v23 = v112;
  sub_1B6E33A48();
  if (!v23)
  {
    int64_t v105 = v6;
    LOBYTE(v115) = 1;
    sub_1B6D1FC00(&qword_1EB97D9B8, MEMORY[0x1E4F27990]);
    sub_1B6E32DF8();
    char v29 = v15;
    int v26 = v113;
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v21[v113[5]], v10, v7);
    LOBYTE(v115) = 2;
    uint64_t v30 = sub_1B6E32DD8();
    uint64_t v31 = v7;
    *(void *)&v21[v26[6]] = v30;
    uint64_t v32 = v30;
    sub_1B6D1FBB4(0, &qword_1EB980330, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
    LOBYTE(v116) = 5;
    sub_1B6A4AA0C();
    sub_1B6E32DF8();
    id v106 = 0;
    uint64_t v103 = v32;
    uint64_t v104 = v12;
    uint64_t v49 = v31;
    unsigned int v50 = (int *)v29;
    uint64_t v51 = v115;
    uint64_t v52 = sub_1B6E31EF8();
    uint64_t v116 = v52;
    uint64_t v53 = *(void *)(v51 + 16);
    if (v53)
    {
      for (uint64_t i = 0; i != v53; ++i)
      {
        uint64_t v55 = *(void *)(v51 + 8 * i + 32);
        sub_1B637E330(&v114, v55);
      }
      swift_bridgeObjectRelease();
      uint64_t v56 = v116;
      int v26 = v113;
    }
    else
    {
      uint64_t v56 = v52;
      swift_bridgeObjectRelease();
    }
    *(void *)&v21[v26[9]] = v56;
    uint64_t v27 = v111;
    char v45 = v50;
    if (v103 < 1023)
    {
      *(void *)unint64_t v21 = 0;
      *((void *)v21 + 1) = 0;
      uint64_t v66 = v49;
LABEL_34:
      v21[v26[7]] = 0;
LABEL_35:
      uint64_t v44 = v104;
      unint64_t v67 = v110;
      *(void *)uint64_t v110 = 0;
      *((void *)v67 + 1) = 0;
LABEL_36:
      LOBYTE(v115) = 4;
      id v68 = v106;
      char v69 = sub_1B6E32D38();
      if (!v68)
      {
        char v71 = v69 & 1;
        uint64_t v72 = v107;
        uint64_t v43 = v103;
LABEL_84:
        v21[v26[8]] = v71;
        sub_1B637E330((uint64_t *)&v115, v43);
        (*(void (**)(int *, uint64_t))(v108 + 8))(v45, v44);
        sub_1B6D1CFC0((uint64_t)v21, v72);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v27);
        return sub_1B67E9670((uint64_t)v21);
      }
      swift_bridgeObjectRelease();
      LODWORD(v112) = 99;
      id v106 = v68;
LABEL_4:
      *(void *)unint64_t v21 = 0;
      *((void *)v21 + 1) = 0;
      LOBYTE(v115) = 1;
      sub_1B6E32D98();
      uint64_t v33 = v27;
      uint64_t v104 = v44;
      long long v34 = v45;
      char v35 = v105;
      sub_1B6E310A8();
      swift_bridgeObjectRelease();
      uint64_t v36 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 48))(v35, 1, v66);
      char v37 = &v21[v26[5]];
      if ((v112 & 2) != 0) {
        (*(void (**)(char *, uint64_t))(v36 + 8))(&v21[v26[5]], v66);
      }
      char v38 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      uint64_t v39 = v66;
      v38(v37, v105, v66);
      LOBYTE(v115) = 2;
      uint64_t v40 = sub_1B6E32D98();
      uint64_t v113 = v34;
      if (v40 == 3157553 && v41 == 0xE300000000000000)
      {

        swift_bridgeObjectRelease();
        uint64_t v43 = 1000;
        uint64_t v44 = v104;
        char v45 = v113;
        uint64_t v27 = v33;
LABEL_81:
        *(void *)&v21[v26[6]] = v43;
        uint64_t v90 = v26[9];
        uint64_t v72 = v107;
        if ((v112 & 0x20) != 0)
        {
          uint64_t v91 = v43;
          swift_bridgeObjectRelease();
          uint64_t v43 = v91;
        }
        char v71 = 0;
        *(void *)&v21[v90] = MEMORY[0x1E4FBC870];
        v21[v26[7]] = 0;
        goto LABEL_84;
      }
      unint64_t v46 = v41;
      uint64_t v47 = v40;
      char v48 = sub_1B6E334B8();
      uint64_t v44 = v104;
      uint64_t v27 = v33;
      if (v48)
      {

        swift_bridgeObjectRelease();
        uint64_t v43 = 1000;
        char v45 = v113;
        goto LABEL_81;
      }
      uint64_t v57 = HIBYTE(v46) & 0xF;
      uint64_t v58 = v47 & 0xFFFFFFFFFFFFLL;
      if ((v46 & 0x2000000000000000) != 0) {
        uint64_t v59 = HIBYTE(v46) & 0xF;
      }
      else {
        uint64_t v59 = v47 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v60 = v39;
      char v45 = v113;
      uint64_t v61 = v47;
      if (!v59) {
        goto LABEL_92;
      }
      if ((v46 & 0x1000000000000000) != 0)
      {
        uint64_t v96 = v46;
        uint64_t v97 = v61;
        swift_bridgeObjectRetain();
        uint64_t v103 = sub_1B6A03668(v97, v96, 10);
        LODWORD(v111) = v98;
        swift_bridgeObjectRelease();
        uint64_t v65 = v103;
        if ((v111 & 1) == 0) {
          goto LABEL_80;
        }
        goto LABEL_92;
      }
      if ((v46 & 0x2000000000000000) == 0)
      {
        if ((v47 & 0x1000000000000000) != 0) {
          unsigned int v62 = (unsigned __int8 *)((v46 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          unsigned int v62 = (unsigned __int8 *)sub_1B6E329D8();
        }
        uint64_t v63 = sub_1B6A03568(v62, v58, 10);
        if ((v64 & 1) == 0)
        {
          uint64_t v65 = v63;
LABEL_80:
          uint64_t v89 = v65;

          swift_bridgeObjectRelease();
          uint64_t v43 = v89;
          goto LABEL_81;
        }
LABEL_92:
        *(void *)&long long v115 = 0;
        *((void *)&v115 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v115 = 0xD000000000000018;
        *((void *)&v115 + 1) = 0x80000001B6F53110;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v111 = v60;
        uint64_t v99 = v44;
        uint64_t v101 = *((void *)&v115 + 1);
        uint64_t v100 = v115;
        sub_1B67CD358();
        swift_allocError();
        *(void *)uint64_t v102 = v100;
        *(void *)(v102 + 8) = v101;
        *(unsigned char *)(v102 + 16) = 32;
        swift_willThrow();

        uint64_t v28 = v111;
        (*(void (**)(int *, uint64_t))(v108 + 8))(v45, v99);
        unsigned int v25 = (v112 >> 5) & 1;
        int v24 = 1;
        goto LABEL_7;
      }
      *(void *)&long long v115 = v47;
      *((void *)&v115 + 1) = v46 & 0xFFFFFFFFFFFFFFLL;
      if (v47 == 43)
      {
        if (v57 == 1) {
          goto LABEL_94;
        }
        if ((BYTE1(v47) - 48) > 9u) {
          goto LABEL_63;
        }
        uint64_t v65 = (BYTE1(v47) - 48);
        if (v57 != 2)
        {
          if ((BYTE2(v47) - 48) > 9u) {
            goto LABEL_63;
          }
          uint64_t v65 = 10 * (BYTE1(v47) - 48) + (BYTE2(v47) - 48);
          uint64_t v76 = v57 - 3;
          if (v57 != 3)
          {
            uint64_t v77 = (unsigned __int8 *)&v115 + 3;
            while (1)
            {
              unsigned int v78 = *v77 - 48;
              if (v78 > 9) {
                goto LABEL_63;
              }
              uint64_t v79 = (unsigned __int128)(v65 * (__int128)10) >> 64;
              uint64_t v80 = 10 * v65;
              if (v79 != v80 >> 63) {
                goto LABEL_63;
              }
              BOOL v81 = __OFADD__(v80, v78);
              uint64_t v65 = v80 + v78;
              if (v81) {
                goto LABEL_63;
              }
              LOBYTE(v57) = 0;
              ++v77;
              if (!--v76) {
                goto LABEL_79;
              }
            }
          }
        }
      }
      else
      {
        if (v47 == 45)
        {
          if (v57 != 1)
          {
            if ((BYTE1(v47) - 48) <= 9u)
            {
              if (v57 == 2)
              {
                LOBYTE(v57) = 0;
                uint64_t v65 = -(uint64_t)(BYTE1(v47) - 48);
                goto LABEL_79;
              }
              if ((BYTE2(v47) - 48) <= 9u)
              {
                uint64_t v65 = -10 * (BYTE1(v47) - 48) - (BYTE2(v47) - 48);
                uint64_t v88 = v57 - 3;
                if (v57 == 3) {
                  goto LABEL_78;
                }
                unint64_t v92 = (unsigned __int8 *)&v115 + 3;
                while (1)
                {
                  unsigned int v93 = *v92 - 48;
                  if (v93 > 9) {
                    break;
                  }
                  uint64_t v94 = (unsigned __int128)(v65 * (__int128)10) >> 64;
                  uint64_t v95 = 10 * v65;
                  if (v94 != v95 >> 63) {
                    break;
                  }
                  BOOL v81 = __OFSUB__(v95, v93);
                  uint64_t v65 = v95 - v93;
                  if (v81) {
                    break;
                  }
                  LOBYTE(v57) = 0;
                  ++v92;
                  if (!--v88) {
                    goto LABEL_79;
                  }
                }
              }
            }
LABEL_63:
            uint64_t v65 = 0;
            LOBYTE(v57) = 1;
            goto LABEL_79;
          }
LABEL_94:
          uint64_t v65 = 0;
LABEL_79:
          if ((v57 & 1) == 0) {
            goto LABEL_80;
          }
          goto LABEL_92;
        }
        if (!v57 || (v47 - 48) > 9u) {
          goto LABEL_63;
        }
        uint64_t v65 = (v47 - 48);
        if (v57 != 1)
        {
          if ((BYTE1(v47) - 48) > 9u) {
            goto LABEL_63;
          }
          uint64_t v65 = 10 * (v47 - 48) + (BYTE1(v47) - 48);
          uint64_t v82 = v57 - 2;
          if (v57 != 2)
          {
            uint64_t v83 = (unsigned __int8 *)&v115 + 2;
            while (1)
            {
              unsigned int v84 = *v83 - 48;
              if (v84 > 9) {
                goto LABEL_63;
              }
              uint64_t v85 = (unsigned __int128)(v65 * (__int128)10) >> 64;
              uint64_t v86 = 10 * v65;
              if (v85 != v86 >> 63) {
                goto LABEL_63;
              }
              BOOL v81 = __OFADD__(v86, v84);
              uint64_t v65 = v86 + v84;
              if (v81) {
                goto LABEL_63;
              }
              LOBYTE(v57) = 0;
              ++v83;
              if (!--v82) {
                goto LABEL_79;
              }
            }
          }
        }
      }
LABEL_78:
      LOBYTE(v57) = 0;
      goto LABEL_79;
    }
    sub_1B6D1FBB4(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    LOBYTE(v116) = 0;
    sub_1B6D1D024(&qword_1EB980118);
    id v70 = v106;
    sub_1B6E32DF8();
    id v106 = v70;
    uint64_t v66 = v49;
    if (!v70)
    {
      uint64_t v73 = *((void *)&v115 + 1);
      *(void *)unint64_t v21 = v115;
      *((void *)v21 + 1) = v73;
      if ((unint64_t)v103 < 0x421) {
        goto LABEL_34;
      }
      LOBYTE(v115) = 3;
      id v74 = v106;
      char v75 = sub_1B6E32DA8();
      id v106 = v74;
      if (!v74)
      {
        v21[v26[7]] = v75 & 1;
        if ((unint64_t)v103 < 0x7D9) {
          goto LABEL_35;
        }
        LOBYTE(v116) = 6;
        id v87 = v106;
        sub_1B6E32DF8();
        id v106 = v87;
        if (!v87)
        {
          *(_OWORD *)uint64_t v110 = v115;
          uint64_t v44 = v104;
          goto LABEL_36;
        }
      }
      swift_bridgeObjectRelease();
    }
    LODWORD(v112) = 99;
    uint64_t v44 = v104;
    goto LABEL_4;
  }
  int v24 = 0;
  unsigned int v25 = 0;
  int v26 = v113;
  uint64_t v27 = v111;
  uint64_t v28 = v7;
LABEL_7:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v27);
  swift_bridgeObjectRelease();
  if (v24) {
    (*(void (**)(char *, uint64_t))(v109 + 8))(&v21[v26[5]], v28);
  }
  if (v25) {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6D16F18(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6D1CF5C(0, &qword_1E9DD8DD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6D1CC08();
  sub_1B6E33A88();
  long long v14 = *v3;
  char v15 = 0;
  sub_1B6D1FBB4(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  sub_1B6D1D024(&qword_1E9DD2750);
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v11 = (int *)type metadata accessor for BundleInfo();
    LOBYTE(v14) = 3;
    sub_1B6E32F58();
    LOBYTE(v14) = 4;
    sub_1B6E32F58();
    v13[1] = (char *)v3 + v11[5];
    LOBYTE(v14) = 1;
    sub_1B6E31118();
    sub_1B6D1FC00(&qword_1E9DD17C8, MEMORY[0x1E4F27990]);
    sub_1B6E32FA8();
    LOBYTE(v14) = 2;
    sub_1B6E32F88();
    *(void *)&long long v14 = *(void *)((char *)v3 + v11[9]);
    char v15 = 5;
    sub_1B6AD94C8();
    sub_1B6D1CC5C();
    sub_1B6E32FA8();
    long long v14 = *(long long *)((char *)v3 + v11[10]);
    char v15 = 6;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6D1726C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D1625C(a1, a2);
}

uint64_t sub_1B6D17284(void *a1)
{
  return sub_1B6D16F18(a1);
}

uint64_t sub_1B6D1729C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6)
{
  uint64_t v7 = v6;
  int v79 = a6;
  unint64_t v89 = a4;
  uint64_t v82 = a3;
  uint64_t v84 = a1;
  uint64_t v88 = sub_1B6E30F48();
  MEMORY[0x1F4188790](v88, v10);
  uint64_t v80 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v91 = (char *)&v75 - v14;
  MEMORY[0x1F4188790](v15, v16);
  unsigned int v78 = (char *)&v75 - v18;
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(a5 + 56);
  uint64_t v81 = a5 + 56;
  unint64_t v98 = MEMORY[0x1E4FBC860];
  uint64_t v21 = 1 << *(unsigned char *)(a5 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  unint64_t v24 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v86 = v17 + 32;
  uint64_t v87 = v17;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  int64_t v83 = v24;
  unint64_t v77 = v24 - 5;
  uint64_t v93 = a5;
  uint64_t v76 = a5 + 96;
  unint64_t v85 = a2;
  if (!v23) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v25 << 6);
  while (1)
  {
    LOWORD(v94) = *(_WORD *)(*(void *)(v93 + 48) + 2 * v27);
    type metadata accessor for XcodeCommandBuilder();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = sub_1B6830944((unsigned __int8 *)&v94);
    if (!v32) {
      goto LABEL_43;
    }
    uint64_t v33 = v32;
    long long v34 = *(void **)(v32 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v33 + 32) = v34;
    uint64_t v90 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v34 = sub_1B6335858(0, v34[2] + 1, 1, v34);
      *(void *)(v33 + 32) = v34;
    }
    unint64_t v37 = v34[2];
    unint64_t v36 = v34[3];
    if (v37 >= v36 >> 1)
    {
      long long v34 = sub_1B6335858(v36 > 1, v37 + 1, 1, v34);
      *(void *)(v33 + 32) = v34;
    }
    _OWORD v34[2] = v37 + 1;
    char v38 = &v34[2 * v37];
    v38[4] = 5785174;
    v38[5] = 0xE300000000000000;
    unint64_t v92 = v19;
    if (a2)
    {
      type metadata accessor for SwiftCodeLoader();
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = 0u;
      *(_OWORD *)(v31 + 32) = 0u;
      *(void *)(v31 + 48) = 0;
      *(unsigned char *)(v31 + 56) = 1;
      *(void *)(v31 + 64) = 0;
      *(void *)(v31 + 72) = 0;
      *(void *)(v31 + 80) = v33;
      swift_retain();
      uint64_t v39 = sub_1B6C4C204(v84, a2, 6972015, 0xE300000000000000);
      if (v7)
      {
        swift_release();
        swift_release();
LABEL_58:
        swift_release();
        sub_1B6D17F88((uint64_t *)&v98);
        goto LABEL_68;
      }
      sub_1B6C4D150((uint64_t)v39, v40);
      uint64_t v7 = 0;
      uint64_t v41 = v96;
      uint64_t v42 = v97;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v45 = v43[2];
      unint64_t v44 = v43[3];
      if (v45 >= v44 >> 1) {
        uint64_t v43 = sub_1B6335858(v44 > 1, v45 + 1, 1, v43);
      }
      _OWORD v43[2] = v45 + 1;
      unint64_t v46 = &v43[2 * v45];
      v46[4] = v41;
      v46[5] = v42;
      swift_release();
    }
    else
    {
      uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
    }
    type metadata accessor for CCodeLoader();
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = 0u;
    *(_OWORD *)(v47 + 32) = 0u;
    *(void *)(v47 + 48) = 0;
    *(unsigned char *)(v47 + 56) = 1;
    *(void *)(v47 + 64) = 0;
    *(void *)(v47 + 72) = 0;
    *(void *)(v47 + 80) = v33;
    swift_retain();
    if (v89)
    {
      uint64_t v31 = v47;
      char v48 = sub_1B6C4C204(v82, v89, 6972015, 0xE300000000000000);
      if (v7)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_67;
      }
      sub_1B6C4D7D4((uint64_t)v48, v49);
      uint64_t v7 = 0;
      uint64_t v50 = v96;
      uint64_t v51 = v97;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = sub_1B6335858(0, v43[2] + 1, 1, v43);
      }
      unint64_t v53 = v43[2];
      unint64_t v52 = v43[3];
      if (v53 >= v52 >> 1) {
        uint64_t v43 = sub_1B6335858(v52 > 1, v53 + 1, 1, v43);
      }
      _OWORD v43[2] = v53 + 1;
      long long v54 = &v43[2 * v53];
      v54[4] = v50;
      v54[5] = v51;
    }
    uint64_t v55 = swift_bridgeObjectRetain();
    uint64_t v31 = v47;
    sub_1B6C4C6A8(v55);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      goto LABEL_67;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v93 + 16) == 1)
    {
      if ((v79 & 1) == 0)
      {
        swift_release();
        uint64_t v31 = *(void *)(v47 + 32);
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B6D17F88((uint64_t *)&v98);
        goto LABEL_68;
      }
      swift_bridgeObjectRetain();
      uint64_t v59 = v78;
      sub_1B6E30E48();
      swift_bridgeObjectRelease();
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v94 = 0;
      unint64_t v95 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      uint64_t v94 = 0xD000000000000013;
      unint64_t v95 = 0x80000001B6F531C0;
      sub_1B6E30E58();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v60 = v94;
      uint64_t v61 = v95;
      int v62 = sub_1B6E32138();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v94 = 0;
      swift_retain();
      sub_1B6B33E34(v62, &v94, v60, v61);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B6832998();
      uint64_t v31 = v63;
      swift_bridgeObjectRelease();
      sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6959B78();
      swift_allocError();
      *(void *)uint64_t v64 = 0xD000000000000027;
      *(void *)(v64 + 8) = 0x80000001B6F4E3A0;
      *(void *)(v64 + 16) = 0;
      *(void *)(v64 + 24) = 0;
      *(unsigned char *)(v64 + 32) = 3;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v88);
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B6E30E48();
    swift_bridgeObjectRelease();
    unint64_t v19 = v92;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v19 = sub_1B68C2198(0, *(void *)(v19 + 16) + 1, 1, v19);
    }
    a2 = v85;
    unint64_t v57 = *(void *)(v19 + 16);
    unint64_t v56 = *(void *)(v19 + 24);
    if (v57 >= v56 >> 1) {
      unint64_t v19 = sub_1B68C2198(v56 > 1, v57 + 1, 1, v19);
    }
    *(void *)(v19 + 16) = v57 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v87 + 32))(v19+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v57, v91, v88);
    swift_release();
    swift_release();
    unint64_t v98 = v19;
    uint64_t v25 = v90;
    if (v23) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v28 = v25 + 1;
    if (v25 + 1 >= v83)
    {
      char v29 = v80;
      goto LABEL_55;
    }
    char v29 = v80;
    unint64_t v30 = *(void *)(v81 + 8 * v28);
    if (!v30)
    {
      uint64_t v28 = v25 + 2;
      if (v25 + 2 >= v83) {
        goto LABEL_55;
      }
      unint64_t v30 = *(void *)(v81 + 8 * v28);
      if (!v30)
      {
        uint64_t v28 = v25 + 3;
        if (v25 + 3 >= v83) {
          goto LABEL_55;
        }
        unint64_t v30 = *(void *)(v81 + 8 * v28);
        if (!v30)
        {
          uint64_t v28 = v25 + 4;
          if (v25 + 4 >= v83) {
            goto LABEL_55;
          }
          unint64_t v30 = *(void *)(v81 + 8 * v28);
          if (!v30) {
            break;
          }
        }
      }
    }
LABEL_16:
    unint64_t v23 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v28 << 6);
    uint64_t v25 = v28;
  }
  while (v77 != v25)
  {
    unint64_t v30 = *(void *)(v76 + 8 * v25++);
    if (v30)
    {
      uint64_t v28 = v25 + 4;
      goto LABEL_16;
    }
  }
LABEL_55:
  swift_release();
  type metadata accessor for SwiftCodeLoader();
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = 0u;
  *(_OWORD *)(v65 + 32) = 0u;
  *(void *)(v65 + 48) = 0;
  *(unsigned char *)(v65 + 56) = 1;
  *(void *)(v65 + 72) = 0;
  *(void *)(v65 + 80) = 0;
  *(void *)(v65 + 64) = 0;
  LOWORD(v94) = 512;
  type metadata accessor for XcodeCommandBuilder();
  uint64_t v31 = swift_allocObject();
  uint64_t v66 = sub_1B6830944((unsigned __int8 *)&v94);
  if (!v66)
  {
LABEL_43:
    sub_1B67C5B68();
    swift_allocError();
    void *v58 = 0;
    v58[1] = 0;
    swift_willThrow();
    goto LABEL_66;
  }
  *(void *)(v65 + 80) = v66;
  swift_retain();
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v31 = v65;
  sub_1B6C4CCF0(v67);
  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_58;
  }
  swift_bridgeObjectRelease();
  if (v79)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v94 = 0;
    unint64_t v95 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v94 = 0xD000000000000013;
    unint64_t v95 = 0x80000001B6F531C0;
    id v68 = v80;
    sub_1B6E30E58();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v69 = v94;
    uint64_t v70 = v95;
    int v71 = sub_1B6E32138();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v94 = 0;
    swift_retain();
    sub_1B6B33E34(v71, &v94, v69, v70);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B6832998();
    uint64_t v31 = v72;
    swift_bridgeObjectRelease();
    sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6959B78();
    swift_allocError();
    *(void *)uint64_t v73 = 0xD000000000000027;
    *(void *)(v73 + 8) = 0x80000001B6F4E3A0;
    *(void *)(v73 + 16) = 0;
    *(void *)(v73 + 24) = 0;
    *(unsigned char *)(v73 + 32) = 3;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v68, v88);
    swift_release();
LABEL_66:
    swift_release();
LABEL_67:
    sub_1B6D17F88((uint64_t *)&v98);
    goto LABEL_68;
  }
  uint64_t v31 = sub_1B6E30EF8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v29, v88);
  sub_1B6D17F88((uint64_t *)&v98);
LABEL_68:
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1B6D17F88(uint64_t *a1)
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1B6E30F48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BDFB4(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = *(void *)(*a1 + 16);
  void v25[2] = *a1;
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v31 = v14;
    uint64_t v15 = v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v28 = *(void *)(v13 + 56);
    char v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    unint64_t v26 = (void (**)(char *, uint64_t))(v13 - 8);
    unint64_t v27 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain_n();
    unint64_t v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v25[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v31(v10, v15, v2);
      uint64_t v18 = *v30;
      (*v30)(v10, 0, 1, v2);
      if ((*v29)(v10, 1, v2) == 1) {
        break;
      }
      (*v27)(v6, v10, v2);
      id v19 = objc_msgSend(self, sel_defaultManager);
      uint64_t v20 = (void *)sub_1B6E30E78();
      v32[0] = 0;
      unsigned int v21 = objc_msgSend(v19, sel_removeItemAtURL_error_, v20, v32);

      if (v21)
      {
        id v22 = v32[0];
      }
      else
      {
        id v16 = v32[0];
        uint64_t v17 = (void *)sub_1B6E30D78();

        swift_willThrow();
      }
      (*v26)(v6, v2);
      v15 += v28;
      if (!--v12)
      {
        v18(v10, 1, 1, v2);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain_n();
    v23(v10, 1, 1, v2);
  }
  return swift_bridgeObjectRelease_n();
}

void sub_1B6D182A4(unsigned char *a1)
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  if (*a1 == 1)
  {
    id v1 = objc_msgSend(self, sel_defaultManager);
    uint64_t v2 = (void *)sub_1B6E30E78();
    v8[0] = 0;
    unsigned int v3 = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v8);

    id v4 = v8[0];
    if (v3)
    {
      id v5 = v4;
    }
    else
    {
      id v6 = v8[0];
      uint64_t v7 = (void *)sub_1B6E30D78();

      swift_willThrow();
    }
  }
}

void sub_1B6D183D0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v36 - v12;
  double v16 = MEMORY[0x1F4188790](v14, v15);
  uint64_t v18 = (char *)&v36 - v17;
  id v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v19((char *)&v36 - v17, a1, v6, v16);
  if (a2)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    id v21 = a2;
    v20(v18, v6);
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v19)(v13, v18, v6);
    id v30 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
    id v31 = sub_1B63989F4((uint64_t)v13, 0);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
      return;
    }
    id v21 = v31;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v18, v6);
  }
  id v22 = objc_msgSend(v21, sel_fileWrappers);
  if (!v22) {
    goto LABEL_12;
  }
  sub_1B63989B8(0, &qword_1EB9804F0);
  uint64_t v23 = sub_1B6E314C8();

  if (!*(void *)(v23 + 16) || (uint64_t v24 = sub_1B62B2CE0(0x6F736A2E6F666E69, 0xE90000000000006ELL), (v25 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    id v22 = 0;
    goto LABEL_12;
  }
  id v22 = *(id *)(*(void *)(v23 + 56) + 8 * v24);
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v22, sel_regularFileContents);
  if (!v26)
  {
LABEL_12:
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v32 = 0xD000000000000022;
    *(void *)(v32 + 8) = 0x80000001B6F536F0;
    *(unsigned char *)(v32 + 16) = 96;
    swift_willThrow();
    goto LABEL_13;
  }
  unint64_t v27 = v26;
  uint64_t v39 = sub_1B6E30FD8();
  unint64_t v40 = v28;

  sub_1B6E30978();
  swift_allocObject();
  uint64_t v38 = sub_1B6E30968();
  type metadata accessor for BundleInfo();
  sub_1B6D1FC00(&qword_1EB97DA28, (void (*)(uint64_t))type metadata accessor for BundleInfo);
  char v29 = v42;
  sub_1B6E30938();
  if (v3)
  {
    swift_release();
    sub_1B62C2360(v39, v40);
LABEL_13:

    return;
  }
  if (v29[1])
  {
    swift_release();

    sub_1B62C2360(v39, v40);
  }
  else
  {
    sub_1B6E30E98();
    uint64_t v33 = v41;
    uint64_t v37 = sub_1B6E30E58();
    uint64_t v35 = v34;
    swift_release();
    sub_1B62C2360(v39, v40);

    v20(v33, v6);
    swift_bridgeObjectRelease();
    *char v29 = v37;
    v29[1] = v35;
  }
}

uint64_t sub_1B6D187F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B63BDFB4(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_1B6E30F48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x1F4188790](v13, v14);
  uint64_t v17 = (char *)&v35 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v35 - v16, a1, v8, v15);
  if (sub_1B6E30E58() == 47 && v18 == 0xE100000000000000)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  char v20 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
    sub_1B6E30E58();
    char v21 = sub_1B6E31A08();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      sub_1B6E30E58();
      char v22 = sub_1B6E31A08();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
        while (1)
        {
          sub_1B6E30EC8();
          (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v17, v12, v8);
          if (sub_1B6E30E58() == 47 && v23 == 0xE100000000000000) {
            goto LABEL_14;
          }
          char v24 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
            sub_1B6E30E58();
            char v25 = sub_1B6E31A08();
            swift_bridgeObjectRelease();
            if ((v25 & 1) == 0)
            {
              sub_1B6E30E58();
              char v26 = sub_1B6E31A08();
              swift_bridgeObjectRelease();
              if ((v26 & 1) == 0) {
                continue;
              }
            }
          }
          break;
        }
      }
    }
  }
LABEL_15:
  id v27 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
  unint64_t v28 = (void *)sub_1B6E30E78();
  id v29 = objc_msgSend(v27, sel_initWithURL_, v28);

  if (v29)
  {
    id v30 = (void *)sub_1B6E31768();
    id v31 = (void *)sub_1B6E31768();
    id v32 = objc_msgSend(v29, sel_URLForResource_withExtension_, v30, v31);

    if (v32)
    {
      sub_1B6E30EE8();

      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v33 = 1;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v33, 1, v8);
    return sub_1B665F41C((uint64_t)v7, a2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  }
}

void sub_1B6D18C50(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10)
{
  uint64_t v11 = v10;
  uint64_t v114 = a8;
  uint64_t v117 = a7;
  unint64_t v119 = a5;
  uint64_t v120 = a4;
  uint64_t v115 = type metadata accessor for BundleInfo();
  MEMORY[0x1F4188790](v115, v16);
  uint64_t v18 = &v110[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1B6E30F48();
  uint64_t v116 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v20);
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v118 = &v110[-v25];
  if ((a2 & 1) == 0) {
    goto LABEL_59;
  }
  int v128 = v18;
  if (!qword_1EB997EC8)
  {
    sub_1B6E32BE8();
    __break(1u);
    return;
  }
  uint64_t v121 = v24;
  uint64_t v139 = v23;
  int v111 = a2;
  uint64_t v112 = a3;
  uint64_t v113 = a6;
  uint64_t v26 = *(void *)(qword_1EB997EC8 + 16);
  uint64_t v129 = a1;
  if (v26)
  {
    uint64_t v27 = *(int *)(v115 + 28);
    uint64_t v167 = *(void (***)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))(v120 + *(int *)(v115 + 24));
    int v28 = *(unsigned __int8 *)(v120 + v27);
    int v29 = *(unsigned __int8 *)(a6 + 19);
    long long v140 = (char *)OBJC_IVAR____TtC3VFX13EntityManager_world;
    BOOL v30 = v28 == 0;
    uint64_t v31 = 0x1000000000000;
    if (v30) {
      uint64_t v31 = 0;
    }
    BOOL v30 = v29 == 0;
    uint64_t v32 = 0x10000000000;
    if (v30) {
      uint64_t v32 = 0;
    }
    uint64_t v33 = v32 | v31;
    unint64_t v34 = v119;
    uint64_t v35 = v119;
    uint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v37 = v36 + 48;
    uint64_t v137 = v36;
    long long v138 = (void (**)(uint64_t, uint64_t))(v33 | ((HIDWORD(v34) & 1) << 32) | v35);
    while (1)
    {
      if ((uint64_t)v167 < *(void *)(v37 - 16))
      {
        uint64_t v41 = v11;
        uint64_t v42 = *(void (**)(void, void, void, void, void))(v37 - 8);
        uint64_t v43 = *(void **)&v140[a1];
        unint64_t v44 = v43;
        swift_retain();
        if (v43)
        {
          sub_1B6583674(v44);
          swift_unknownObjectRetain();

          self;
          uint64_t v38 = (void *)swift_dynamicCastObjCClass();
          if (!v38) {
            swift_unknownObjectRelease();
          }
        }
        else
        {
          uint64_t v38 = 0;
        }
        id v39 = v38;
        swift_retain();
        a1 = v129;
        uint64_t v40 = swift_retain();
        v42(v40, a1, v38, v138, v167);
        uint64_t v11 = v41;
        if (v41)
        {
          swift_bridgeObjectRelease();

          swift_release();
          swift_release_n();
          return;
        }
        swift_release();
        swift_release_n();
      }
      v37 += 24;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        a6 = v113;
        break;
      }
    }
  }
  sub_1B6376EB8();
  sub_1B6E30EB8();
  uint64_t v45 = (uint64_t)v128;
  if ((*(unsigned char *)(a6 + 19) & 1) != 0
    && (swift_getKeyPath(),
        uint64_t v46 = *(void *)(a1 + 176),
        swift_retain(),
        uint64_t v47 = (void *)sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v46, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0), swift_release(), swift_release(), v47, v47))
  {
    swift_getKeyPath();
    uint64_t v48 = *(void *)(a1 + 176);
    swift_retain();
    uint64_t v49 = (void *)sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v48, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0);
    swift_release();
    swift_release();
    uint64_t v50 = (objc_class *)type metadata accessor for AssetManagerPathResolver();
    id v51 = objc_allocWithZone(v50);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v141.receiver = v51;
    v141.super_class = v50;
    unint64_t v52 = (char *)objc_msgSendSuper2(&v141, sel_init);

    unint64_t v53 = &off_1F0F91D90;
  }
  else
  {
    uint64_t v54 = v116;
    uint64_t v55 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v116 + 16);
    unint64_t v56 = v121;
    uint64_t v57 = v139;
    v55((uint64_t)v121, v118, v139);
    uint64_t v58 = (objc_class *)type metadata accessor for BundleResolver(0);
    uint64_t v59 = (char *)objc_allocWithZone(v58);
    v55((uint64_t)&v59[OBJC_IVAR____TtC3VFX14BundleResolver_bundle], v56, v57);
    v142.receiver = v59;
    v142.super_class = v58;
    unint64_t v52 = (char *)objc_msgSendSuper2(&v142, sel_init);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v56, v57);
    unint64_t v53 = &off_1F0F62F88;
    uint64_t v45 = (uint64_t)v128;
  }
  uint64_t v135 = v53;
  long long v140 = v52;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v161 = qword_1EB997A18;
  int v162 = 0;
  char v163 = 2;
  uint64_t v164 = 0;
  char v165 = 2;
  uint64_t v166 = 0;
  swift_retain();
  sub_1B6A6EAF8(2, (uint64_t)v143);
  swift_release();
  v158[0] = v143[0];
  v158[1] = v143[1];
  uint64_t v159 = v144;
  if ((v119 & 0x100000000) != 0) {
    uint64_t v60 = 0x200000000;
  }
  else {
    uint64_t v60 = v119;
  }
  sub_1B62C9DA8(v129, (uint64_t)v158, v60, v145);
  sub_1B62CA67C((uint64_t)v145, (uint64_t)v146, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v146[0])
  {
    long long v153 = v146[0];
    long long v154 = v146[1];
    uint64_t v126 = v148;
    uint64_t v155 = v147;
    uint64_t v62 = v149;
    uint64_t v61 = v150;
    uint64_t v63 = v152;
    uint64_t v133 = v151;
    sub_1B62CA064((uint64_t)v143);
    if (v63 <= 0)
    {
      sub_1B632F170(v145);
      uint64_t v45 = (uint64_t)v128;
      a1 = v129;
      goto LABEL_53;
    }
    uint64_t v45 = (uint64_t)v128;
    if (v62)
    {
      uint64_t v132 = v133[4];
      int v64 = *(unsigned __int8 *)(v61 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v156[0] = v153;
      v156[1] = v154;
      uint64_t v157 = v155;
      unint64_t v122 = v133 + 8;
      uint64_t v123 = v133 + 6;
      uint64_t v167 = (void (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))(v135 + 1);
      long long v138 = (void (**)(uint64_t, uint64_t))(v116 + 8);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v65 = 0;
      uint64_t v125 = v62;
      int v124 = v64;
      do
      {
        uint64_t v130 = v65;
        uint64_t v66 = (unsigned int *)(v126 + 48 * v65);
        uint64_t v67 = *v66;
        uint64_t v127 = v66[1];
        uint64_t v69 = (uint64_t *)*((void *)v66 + 2);
        uint64_t v68 = *((void *)v66 + 3);
        uint64_t v70 = *((void *)v66 + 4);
        uint64_t v71 = *((void *)v66 + 5);
        if (v64)
        {
          uint64_t v72 = *(os_unfair_lock_s **)(v71 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v72);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v71 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v132);
        sub_1B62CA67C((uint64_t)v123, (uint64_t)v160, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v73 = v133;
        uint64_t v74 = v133[4];
        uint64_t v75 = *(void *)(*(void *)(*(void *)(*(void *)(v71 + 40) + 16) + 32) + 16) + 1;
        int16x8_t v134 = (char *)v71;
        swift_retain();
        v73[6] = ecs_stack_allocator_allocate(v74, 48 * v75, 8);
        v73[7] = v75;
        uint64_t v76 = v122;
        v122[1] = 0;
        v76[2] = 0;
        *uint64_t v76 = 0;
        swift_release();
        uint64_t v77 = sub_1B62C9024((uint64_t)&type metadata for VirtualFileAsset, (uint64_t)&off_1F0F6FB90, v69, v68, v70, (uint64_t)v73);
        uint64_t v131 = v11;
        if (v69)
        {
          unsigned int v78 = v167;
          if (v70)
          {
            uint64_t ObjectType = swift_getObjectType();
            long long v136 = *v78;
            uint64_t v137 = ObjectType;
            uint64_t v80 = (uint64_t *)(v77 + 24);
            uint64_t v81 = v121;
            uint64_t v82 = v135;
            do
            {
              int64_t v83 = (void *)v80[1];
              id v84 = v140;
              v80[1] = (uint64_t)v140;
              v80[2] = (uint64_t)v82;
              id v85 = v84;

              uint64_t v87 = *(v80 - 1);
              uint64_t v86 = *v80;
              id v88 = v85;
              swift_bridgeObjectRetain();
              v136(v87, v86, v137, v82);
              swift_bridgeObjectRelease();

              uint64_t v89 = sub_1B6E30E18();
              uint64_t v91 = v90;
              (*v138)((uint64_t)v81, v139);
              swift_bridgeObjectRelease();
              *(v80 - 3) = v89;
              *(v80 - 2) = v91;

              v80 += 6;
              --v70;
            }
            while (v70);
          }
        }
        else
        {
          uint64_t v92 = v127;
          if (v67 != v127)
          {
            uint64_t v137 = swift_getObjectType();
            long long v136 = *v167;
            uint64_t v93 = v92 - v67;
            uint64_t v94 = (uint64_t *)(v77 + 48 * v67 + 24);
            unint64_t v95 = v121;
            do
            {
              uint64_t v96 = (void *)v94[1];
              id v97 = v140;
              unint64_t v98 = v135;
              v94[1] = (uint64_t)v140;
              _OWORD v94[2] = (uint64_t)v98;
              id v99 = v97;

              uint64_t v100 = *(v94 - 1);
              uint64_t v101 = *v94;
              id v102 = v99;
              swift_bridgeObjectRetain();
              v136(v100, v101, v137, v98);
              swift_bridgeObjectRelease();

              uint64_t v103 = sub_1B6E30E18();
              uint64_t v105 = v104;
              (*v138)((uint64_t)v95, v139);
              swift_bridgeObjectRelease();
              *(v94 - 3) = v103;
              *(v94 - 2) = v105;

              v94 += 6;
              --v93;
            }
            while (v93);
          }
        }
        uint64_t v106 = v131;
        sub_1B6345178(v133, (unsigned __int16 **)v156, (uint64_t)v160);
        uint64_t v11 = v106;
        uint64_t v107 = v134;
        sub_1B634507C(v134);
        ecs_stack_allocator_pop_snapshot(v132);
        int v64 = v124;
        if (v124)
        {
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v107 + 43));
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v107 + 47));
        }
        swift_release();
        uint64_t v65 = v130 + 1;
        uint64_t v45 = (uint64_t)v128;
      }
      while (v130 + 1 != v125);
      sub_1B632F170(v145);
    }
    sub_1B632F170(v145);
  }
  else
  {
    sub_1B62CA064((uint64_t)v143);
  }
  a1 = v129;
LABEL_53:
  a6 = v113;
  LOBYTE(a2) = v111;
  int v108 = *(unsigned __int8 *)(v113 + 19);
  sub_1B6D1CFC0(v120, v45);
  if (v108 == 1)
  {
    char v109 = *(unsigned char *)(v45 + *(int *)(v115 + 28));
    sub_1B67E9670(v45);
    if ((v109 & 1) == 0) {
      sub_1B6872640(a1, 1);
    }
  }
  else
  {

    sub_1B67E9670(v45);
  }
  (*(void (**)(unsigned char *, uint64_t))(v116 + 8))(v118, v139);
  a3 = v112;
LABEL_59:
  if ((a2 & 2) != 0)
  {
    sub_1B6D19798(v120, v114, a9, v117, a10, a1, v119 | ((HIDWORD(v119) & 1) << 32), a3);
    if (v11) {
      return;
    }
    sub_1B63773A4();
  }
  if ((a2 & 4) != 0 && *(unsigned char *)(a6 + 23) == 1) {
    sub_1B6A99274();
  }
}

uint64_t sub_1B6D19798(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v322 = a8;
  unint64_t v325 = a7;
  uint64_t v332 = a4;
  uint64_t v318 = a3;
  __int16 v321 = a2;
  v339[1] = *MEMORY[0x1E4F143B8];
  uint64_t v309 = *v8;
  sub_1B63BDFB4(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v326 = (char *)&v285 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v308 = (uint64_t)&v285 - v17;
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v313 = (uint64_t)&v285 - v20;
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v310 = (uint64_t)&v285 - v23;
  uint64_t v315 = sub_1B6E312D8();
  uint64_t v316 = *(void *)(v315 - 8);
  MEMORY[0x1F4188790](v315, v24);
  long long v294 = (char *)&v285 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26, v27);
  uint64_t v297 = (char *)&v285 - v28;
  MEMORY[0x1F4188790](v29, v30);
  long long v306 = (char *)&v285 - v31;
  MEMORY[0x1F4188790](v32, v33);
  uint64_t v35 = (char *)&v285 - v34;
  MEMORY[0x1F4188790](v36, v37);
  long long v296 = (char *)&v285 - v38;
  MEMORY[0x1F4188790](v39, v40);
  long long v304 = (char *)&v285 - v41;
  uint64_t v42 = type metadata accessor for BundleInfo();
  MEMORY[0x1F4188790](v42, v43);
  uint64_t v317 = (uint64_t)&v285 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = sub_1B6E31288();
  uint64_t v327 = *(void *)(v324 - 8);
  MEMORY[0x1F4188790](v324, v45);
  long long v295 = (char *)&v285 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v47, v48);
  long long v302 = (char *)&v285 - v49;
  MEMORY[0x1F4188790](v50, v51);
  long long v312 = (char *)&v285 - v52;
  MEMORY[0x1F4188790](v53, v54);
  __int16 v319 = (char *)&v285 - v55;
  MEMORY[0x1F4188790](v56, v57);
  long long v299 = (char *)&v285 - v58;
  MEMORY[0x1F4188790](v59, v60);
  long long v311 = (char *)&v285 - v61;
  MEMORY[0x1F4188790](v62, v63);
  uint64_t v65 = (char *)&v285 - v64;
  MEMORY[0x1F4188790](v66, v67);
  uint64_t v69 = (char *)&v285 - v68;
  uint64_t v70 = sub_1B6E30F48();
  uint64_t v331 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70, v71);
  long long v305 = (char *)&v285 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v73, v74);
  long long v314 = (char *)&v285 - v75;
  MEMORY[0x1F4188790](v76, v77);
  long long v300 = (char *)&v285 - v78;
  MEMORY[0x1F4188790](v79, v80);
  long long v298 = (char *)&v285 - v81;
  MEMORY[0x1F4188790](v82, v83);
  long long v301 = (char *)&v285 - v84;
  MEMORY[0x1F4188790](v85, v86);
  long long v307 = (char *)&v285 - v87;
  MEMORY[0x1F4188790](v88, v89);
  long long v303 = (char *)&v285 - v90;
  MEMORY[0x1F4188790](v91, v92);
  uint64_t v94 = (char *)&v285 - v93;
  sub_1B6874F74(a6, 1, 1);
  uint64_t v320 = v42;
  uint64_t v95 = *(int *)(v42 + 24);
  uint64_t v330 = a1;
  uint64_t v328 = v95;
  uint64_t v96 = *(void *)(a1 + v95);
  if (v96 > 2025) {
    goto LABEL_6;
  }
  if ((*(unsigned char *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) & 1) == 0) {
    sub_1B6AA0250(a6, v330);
  }
  if (v96 >= 1003) {
LABEL_6:
  }
    LODWORD(v329) = *(unsigned __int8 *)(v336 + 16);
  else {
    LODWORD(v329) = 0;
  }
  char v335 = v94;
  uint64_t v97 = v332;
  sub_1B6E30EB8();
  id v98 = objc_msgSend(a5, sel_fileWrappers);
  uint64_t v333 = a6;
  if (v98)
  {
    id v99 = v98;
    sub_1B63989B8(0, &qword_1EB9804F0);
    uint64_t v100 = sub_1B6E314C8();

    if (*(void *)(v100 + 16))
    {
      uint64_t v101 = sub_1B62B2CE0(0x2E73747069726373, 0xEE00656C646E7562);
      id v102 = v335;
      if (v103)
      {
        uint64_t v104 = *(void **)(*(void *)(v100 + 56) + 8 * v101);
        id v105 = v104;
      }
      else
      {
        uint64_t v104 = 0;
      }
    }
    else
    {
      uint64_t v104 = 0;
      id v102 = v335;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v104 = 0;
    id v102 = v335;
  }
  v339[0] = 0;
  if (*(unsigned char *)(v336 + 19) != 1) {
    goto LABEL_22;
  }
  if (*(unsigned char *)(v336 + 18)) {
    goto LABEL_22;
  }
  *(void *)&long long v338 = 0;
  uint64_t v106 = v333;
  sub_1B6939434(v333, (uint64_t *)&v338);
  sub_1B693947C(v106, (uint64_t *)&v338);
  sub_1B69394C4(v106, (uint64_t *)&v338);
  sub_1B693950C(v106, (uint64_t *)&v338);
  sub_1B6939554(v106, (uint64_t *)&v338);
  sub_1B693959C(v106, (uint64_t *)&v338);
  sub_1B69395E4(v106, (uint64_t *)&v338);
  sub_1B693962C(v106, (uint64_t *)&v338);
  if ((uint64_t)v338 < 1)
  {
LABEL_22:
    if (v329)
    {
      unint64_t v119 = v104;
      int v120 = 0;
      uint64_t v122 = v330;
      uint64_t v121 = v331;
      goto LABEL_24;
    }
    id v125 = v104;
    uint64_t v121 = v331;
LABEL_27:

    (*(void (**)(char *, uint64_t))(v121 + 8))(v102, v70);
    return swift_unknownObjectRelease();
  }
  char v285 = v35;
  long long v291 = v65;
  id v293 = v104;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  long long v288 = a5;
  uint64_t v107 = sub_1B6E312C8();
  uint64_t v108 = sub_1B6385660(v107, (uint64_t)qword_1EB997E68);
  uint64_t v109 = v327;
  uint64_t v111 = v327 + 16;
  uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v327 + 16);
  uint64_t v112 = v324;
  v110(v69, v333 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v324);
  uint64_t v290 = v108;
  uint64_t v113 = sub_1B6E312A8();
  int v114 = sub_1B6E322B8();
  char v115 = sub_1B6E323F8();
  uint64_t v323 = v70;
  if (v115)
  {
    LODWORD(v292) = v114;
    uint64_t v116 = v291;
    v110(v291, (uint64_t)v69, v112);
    uint64_t v117 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v117 = 0;
    os_signpost_id_t v118 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v113, (os_signpost_type_t)v292, v118, "initialBuildScripts", "", v117, 2u);
    MEMORY[0x1BA9B84C0](v117, -1, -1);

    (*(void (**)(char *, uint64_t))(v109 + 8))(v116, v112);
  }
  else
  {

    uint64_t v116 = v291;
  }
  uint64_t v287 = v111;
  char v286 = (void (*)(char *, char *, uint64_t))v110;
  v110(v116, (uint64_t)v69, v112);
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v292 = sub_1B6E312F8();
  uint64_t v158 = *(void (**)(char *, uint64_t))(v109 + 8);
  uint64_t v327 = v109 + 8;
  long long v289 = v158;
  v158(v69, v112);
  uint64_t v159 = v320;
  uint64_t v160 = v330;
  uint64_t v161 = v334;
  int v162 = v335;
  id v163 = v293;
  uint64_t v164 = v321;
  if (*(unsigned char *)(v330 + *(int *)(v320 + 28)) == 1)
  {
    uint64_t v165 = sub_1B6D1F300();
    unint64_t v167 = v166;
    uint64_t v168 = sub_1B6D1F300();
    unint64_t v170 = v169;
    *(void *)&long long v338 = v168;
    *((void *)&v338 + 1) = v169;
    uint64_t v329 = sub_1B6D1F300();
    unint64_t v172 = v171;
    uint64_t v173 = v317;
    sub_1B6D1CFC0(v160, v317);
    if (v170)
    {
      uint64_t v174 = *(void *)(v173 + *(int *)(v159 + 24));
      sub_1B67E9670(v173);
      if (v174 >= 2001) {
        goto LABEL_61;
      }
      uint64_t v175 = v163;
      sub_1B67C5914((uint64_t)&v338, *(void **)v330, *(void *)(v330 + 8), *(void *)(v330 + v328));
      unint64_t v170 = *((void *)&v338 + 1);
      if (v167 | *((void *)&v338 + 1)) {
        goto LABEL_61;
      }
    }
    else
    {
      sub_1B67E9670(v173);
      uint64_t v175 = v163;
      if (v167 != (unsigned __int128)0)
      {
LABEL_61:
        uint64_t v176 = v338;
        swift_bridgeObjectRetain();
        uint64_t v177 = sub_1B6B67A28((uint64_t)&unk_1F0FAAA90);
        uint64_t v178 = v334;
        sub_1B6D1729C(v176, v170, v165, v167, v177, 0);
        if (v178)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v179 = sub_1B6E312A8();
          unint64_t v180 = v312;
          sub_1B6E312E8();
          int v181 = sub_1B6E322A8();
          if (sub_1B6E323F8())
          {
            swift_retain();
            unsigned __int32 v182 = v306;
            sub_1B6E31318();
            swift_release();
            uint64_t v183 = v316;
            uint64_t v184 = v315;
            int v185 = (*(uint64_t (**)(char *, uint64_t))(v316 + 88))(v182, v315);
            int v186 = *MEMORY[0x1E4FBD340];
            LODWORD(v336) = v181;
            if (v185 == v186)
            {
              uint64_t v187 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v183 + 8))(v182, v184);
              uint64_t v187 = "";
            }
            id v223 = v293;
            unsigned __int8 v229 = v291;
            uint64_t v230 = v312;
            uint64_t v231 = v324;
            v286(v291, v312, v324);
            uint64_t v232 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v232 = 0;
            os_signpost_id_t v233 = sub_1B6E31278();
            _os_signpost_emit_with_name_impl(&dword_1B6287000, v179, (os_signpost_type_t)v336, v233, "initialBuildScripts", v187, v232, 2u);
            MEMORY[0x1BA9B84C0](v232, -1, -1);

            uint64_t v234 = v289;
            v289(v230, v231);
            uint64_t v221 = v323;
            uint64_t v222 = v335;
            v234(v229, v231);
          }
          else
          {

            uint64_t v221 = v323;
            uint64_t v222 = v335;
            id v223 = v293;
            v289(v180, v324);
          }
          swift_release();

          (*(void (**)(char *, uint64_t))(v331 + 8))(v222, v221);
          return swift_unknownObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v172)
        {
          type metadata accessor for MetalScriptCodeGen();
          LOWORD(v337) = 512;
          uint64_t v220 = v303;
          sub_1B67B6524(v329, v172, (__int16 *)&v337);
          swift_bridgeObjectRelease();
          int64_t v235 = v335;
          if (*(void *)(v333 + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
          {
            swift_retain();
            sub_1B6796BE0();
            int v246 = v220;
            uint64_t v70 = v323;
            uint64_t v278 = v277;
            (*(void (**)(char *, uint64_t))(v331 + 8))(v246, v323);
            swift_release();
          }
          else
          {
            uint64_t v70 = v323;
            (*(void (**)(char *, uint64_t))(v331 + 8))(v220, v323);
            uint64_t v278 = 0;
          }
          swift_unknownObjectRelease();
          v339[0] = v278;
        }
        else
        {
          uint64_t v70 = v323;
          int64_t v235 = v335;
        }
        uint64_t v279 = v307;
        sub_1B6E30E48();
        swift_bridgeObjectRelease();
        uint64_t v280 = v331;
        (*(void (**)(char *, uint64_t))(v331 + 8))(v235, v70);
        (*(void (**)(char *, char *, uint64_t))(v280 + 32))(v235, v279, v70);
        uint64_t v281 = *(void (**)(char *, char *, uint64_t))(v280 + 16);
        uint64_t v282 = (uint64_t)v301;
        v281(v301, v235, v70);
        id v283 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
        id v284 = sub_1B63989F4(v282, 0);
        char v334 = 0;

        *(unsigned char *)(v333 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) = 0;
        swift_bridgeObjectRelease();
        LODWORD(v321) = 0;
        LODWORD(v329) = 1;
        id v192 = v284;
        goto LABEL_135;
      }
    }
    swift_bridgeObjectRelease();
    sub_1B67CD358();
    uint64_t v197 = swift_allocError();
    *(void *)uint64_t v198 = 0xD000000000000037;
    *(void *)(v198 + 8) = 0x80000001B6F53180;
    *(unsigned char *)(v198 + 16) = 96;
    char v334 = (void *)v197;
    swift_willThrow();
    swift_bridgeObjectRelease();
    char v199 = sub_1B6E312A8();
    uint64_t v200 = v311;
    sub_1B6E312E8();
    os_signpost_type_t v201 = sub_1B6E322A8();
    if (sub_1B6E323F8())
    {
      swift_retain();
      char v202 = v304;
      sub_1B6E31318();
      swift_release();
      uint64_t v203 = v316;
      uint64_t v204 = v315;
      os_signpost_type_t v205 = v201;
      if ((*(unsigned int (**)(char *, uint64_t))(v316 + 88))(v202, v315) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v206 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v203 + 8))(v202, v204);
        uint64_t v206 = "";
      }
      uint64_t v236 = v291;
      uint64_t v237 = v311;
      uint64_t v238 = v324;
      v286(v291, v311, v324);
      int v239 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v239 = 0;
      os_signpost_id_t v240 = sub_1B6E31278();
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v199, v205, v240, "initialBuildScripts", v206, v239, 2u);
      MEMORY[0x1BA9B84C0](v239, -1, -1);

      int v241 = v237;
      int v242 = v289;
      v289(v241, v238);
      uint64_t v226 = v323;
      int v162 = v335;
      v242(v236, v238);
    }
    else
    {

      uint64_t v226 = v323;
      v289(v200, v324);
    }
    swift_release();

    (*(void (**)(char *, uint64_t))(v331 + 8))(v162, v226);
    return swift_unknownObjectRelease();
  }
  uint64_t v188 = sub_1B6B67A28((uint64_t)&unk_1F0FAAA68);
  uint64_t v189 = v333;
  uint64_t v190 = v318;
  uint64_t v191 = sub_1B6D15C3C(v333, v164, v318, v188, 0);
  uint64_t v70 = v323;
  if (v161)
  {
    swift_bridgeObjectRelease();
    char v334 = 0;
    id v192 = v163;
    uint64_t v261 = v70;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v338 = 0;
    *((void *)&v338 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    uint64_t v337 = v161;
    sub_1B666BD6C();
    sub_1B6E32B18();
    long long v262 = v338;
    int v263 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v338 = 0;
    swift_retain();
    sub_1B6B33E34(v263, (uint64_t *)&v338, v262, *((uint64_t *)&v262 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    LODWORD(v321) = 0;
    uint64_t v70 = v261;
LABEL_135:
    uint64_t v97 = v332;
    uint64_t v255 = v319;
    goto LABEL_136;
  }
  char v334 = (void *)v191;
  swift_bridgeObjectRelease();
  type metadata accessor for MetalScriptCodeGen();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B67BB6D0(v189, v164, v190);
  swift_release();
  swift_bridgeObjectRelease();
  LOWORD(v338) = 512;
  uint64_t v207 = v310;
  sub_1B67B635C((char *)&v338, v310);
  __int32 v208 = v163;
  swift_release();
  uint64_t v227 = v331;
  int v228 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v331 + 48))(v207, 1, v70);
  uint64_t v97 = v332;
  if (v228 == 1)
  {
    sub_1B6D1F2A4(v207, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  }
  else
  {
    int v243 = v298;
    (*(void (**)(char *, uint64_t, uint64_t))(v227 + 32))(v298, v207, v70);
    uint64_t v244 = v70;
    if (*(void *)(v333 + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
    {
      swift_retain();
      sub_1B6796BE0();
      uint64_t v254 = v253;
      (*(void (**)(char *, uint64_t))(v331 + 8))(v243, v244);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v227 + 8))(v243, v70);
      uint64_t v254 = 0;
    }
    swift_unknownObjectRelease();
    v339[0] = v254;
    uint64_t v70 = v244;
  }
  uint64_t v255 = v319;
  int v256 = v307;
  sub_1B6E30E48();
  swift_bridgeObjectRelease();
  uint64_t v257 = v331;
  (*(void (**)(char *, uint64_t))(v331 + 8))(v162, v70);
  (*(void (**)(char *, char *, uint64_t))(v257 + 32))(v162, v256, v70);
  unint64_t v258 = *(void (**)(char *, char *, uint64_t))(v257 + 16);
  uint64_t v259 = (uint64_t)v300;
  v258(v300, v162, v70);
  id v260 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
  id v276 = sub_1B63989F4(v259, 0);
  char v334 = 0;

  LODWORD(v329) = 1;
  LODWORD(v321) = 1;
  id v192 = v276;
LABEL_136:
  uint64_t v264 = sub_1B6E312A8();
  sub_1B6E312E8();
  os_signpost_type_t v265 = sub_1B6E322A8();
  if (sub_1B6E323F8())
  {
    swift_retain();
    char v266 = v285;
    sub_1B6E31318();
    swift_release();
    uint64_t v267 = v316;
    uint64_t v268 = v315;
    if ((*(unsigned int (**)(char *, uint64_t))(v316 + 88))(v266, v315) == *MEMORY[0x1E4FBD340])
    {
      char v269 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v267 + 8))(v266, v268);
      char v269 = "";
    }
    unint64_t v119 = v192;
    int v270 = v291;
    uint64_t v271 = v319;
    uint64_t v272 = v324;
    v286(v291, v319, v324);
    char v273 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v273 = 0;
    os_signpost_id_t v274 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v264, v265, v274, "initialBuildScripts", v269, v273, 2u);
    MEMORY[0x1BA9B84C0](v273, -1, -1);

    unsigned __int8 v275 = v289;
    v289(v271, v272);
    uint64_t v70 = v323;
    uint64_t v97 = v332;
    v275(v270, v272);
  }
  else
  {
    unint64_t v119 = v192;

    v289(v255, v324);
  }
  swift_release();
  uint64_t v122 = v330;
  uint64_t v121 = v331;
  if ((v329 & 1) == 0)
  {
    id v125 = v119;
    id v102 = v335;
    goto LABEL_27;
  }
  a5 = v288;
  int v120 = (int)v321;
LABEL_24:
  uint64_t v324 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  uint64_t v123 = *(void *)(v333 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v123)
  {
    int v124 = *(void **)(v123 + 16);
    swift_unknownObjectRetain();
  }
  else
  {
    int v124 = 0;
  }
  uint64_t v327 = sub_1B6D1EFB0(v97, v124);
  uint64_t v329 = v126;
  uint64_t v128 = v127;
  swift_unknownObjectRelease();
  LODWORD(v321) = v120;
  if (!v128)
  {
    if (v339[0]) {
      goto LABEL_32;
    }
    id v293 = v119;
    long long v288 = a5;
    uint64_t v193 = *(void *)(v333 + v324);
    if (v193)
    {
      id v194 = *(id *)(v193 + 16);
      swift_unknownObjectRetain();
      unsigned __int8 v195 = v334;
      unsigned __int8 v196 = v314;
    }
    else
    {
      id v194 = MTLCreateSystemDefaultDevice();
      unsigned __int8 v195 = v334;
      unsigned __int8 v196 = v314;
      if (!v194)
      {
        uint64_t v129 = v330;
        a5 = v288;
        id v130 = v293;
        goto LABEL_33;
      }
    }
    uint64_t v209 = OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
    uint64_t v210 = v333 + *(int *)(type metadata accessor for ScriptingConfiguration() + 28) + v209;
    uint64_t v211 = v313;
    sub_1B663AB08(v210, v313);
    uint64_t v212 = v70;
    unsigned __int16 v213 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
    if (v213(v211, 1, v70) == 1)
    {
      sub_1B6D1F2A4(v211, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
      uint64_t v214 = v308;
      sub_1B6D187F8(v332, v308);
      uint64_t v215 = v214;
      if (v213(v214, 1, v70) == 1)
      {
        sub_1B6D1F2A4(v214, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
        uint64_t v216 = *(void *)(v333 + v324);
        if (v216)
        {
          id v217 = *(id *)(v216 + 16);
          swift_unknownObjectRetain();
          a5 = v288;
        }
        else
        {
          id v217 = MTLCreateSystemDefaultDevice();
          a5 = v288;
          if (!v217)
          {
            swift_unknownObjectRelease();
            v339[0] = 0;
            goto LABEL_105;
          }
        }
        id v245 = objc_msgSend(v217, sel_newDefaultLibrary, v285);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v339[0] = v245;
LABEL_105:
        uint64_t v70 = v212;
        uint64_t v129 = v330;
        goto LABEL_106;
      }
      unsigned __int8 v196 = v305;
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 32))(v305, v215, v70);
      sub_1B63BCCA4((uint64_t)v194);
      sub_1B6796BE0();
      uint64_t v219 = v195;
      if (v195)
      {
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_87;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 32))(v196, v211, v70);
      sub_1B63BCCA4((uint64_t)v194);
      sub_1B6796BE0();
      uint64_t v219 = v195;
      if (v195)
      {
        swift_unknownObjectRelease();
        swift_release();
LABEL_87:
        swift_bridgeObjectRelease();
        uint64_t v224 = *(void (**)(char *, uint64_t))(v121 + 8);
        v224(v196, v70);

        v224(v335, v70);
        return swift_unknownObjectRelease();
      }
    }
    uint64_t v225 = v218;
    char v334 = v219;
    (*(void (**)(char *, uint64_t))(v121 + 8))(v196, v212);
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    v339[0] = v225;
    uint64_t v70 = v212;
    uint64_t v129 = v330;
    a5 = v288;
LABEL_106:
    id v130 = v293;
    int v120 = (int)v321;
    goto LABEL_33;
  }
  swift_unknownObjectRelease();
  v339[0] = v128;
LABEL_32:
  uint64_t v129 = v122;
  id v130 = v119;
LABEL_33:
  uint64_t v131 = *(void *)(v129 + v328);
  uint64_t v323 = v70;
  if (v131 < 1033 || (id v132 = objc_msgSend(a5, sel_fileWrappers)) == 0)
  {
    int64_t v146 = v335;
    if (v120) {
      goto LABEL_42;
    }
LABEL_45:
    uint64_t v148 = *(void (***)(char *, char *, uint64_t))(*(void *)(v336 + 32) + 120);
    uint64_t v332 = v131;
    if (v322)
    {
      uint64_t v149 = v334;
      uint64_t v148 = (void (**)(char *, char *, uint64_t))sub_1B6D1F5B4(v322, (uint64_t)v148);
      char v334 = v149;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    goto LABEL_48;
  }
  uint64_t v133 = v132;
  uint64_t v134 = v129;
  sub_1B63989B8(0, &qword_1EB9804F0);
  uint64_t v135 = sub_1B6E314C8();

  if (!*(void *)(v135 + 16) || (uint64_t v136 = sub_1B62B2CE0(0xD000000000000010, 0x80000001B6F373E0), (v137 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    int64_t v146 = v335;
    goto LABEL_44;
  }
  uint64_t v332 = v131;
  id v138 = *(id *)(*(void *)(v135 + 56) + 8 * v136);
  swift_bridgeObjectRelease();
  id v139 = objc_msgSend(v138, sel_regularFileContents);
  if (!v139)
  {

    int64_t v146 = v335;
    uint64_t v131 = v332;
LABEL_44:
    uint64_t v129 = v134;
    if (v120) {
      goto LABEL_42;
    }
    goto LABEL_45;
  }
  long long v140 = v139;
  uint64_t v141 = sub_1B6E30FD8();
  unint64_t v143 = v142;

  uint64_t v144 = *(void *)(v333 + v324);
  if (!v144)
  {
    sub_1B62C2360(v141, v143);

LABEL_125:
    uint64_t v70 = v323;
    int64_t v146 = v335;
LABEL_126:
    uint64_t v129 = v330;
    uint64_t v131 = v332;
    if (!v120) {
      goto LABEL_45;
    }
LABEL_42:
    uint64_t v148 = (void (**)(char *, char *, uint64_t))sub_1B62FF544(MEMORY[0x1E4FBC860]);
    uint64_t v332 = 0;
LABEL_48:
    uint64_t v150 = (uint64_t)v326;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v326, v146, v70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v150, 0, 1, v70);
    uint64_t v151 = v339[0];
    uint64_t v152 = *(void **)v129;
    uint64_t v153 = *(void *)(v129 + 8);
    unsigned __int8 v154 = *(unsigned char *)(v336 + 17);
    id v125 = v130;
    swift_unknownObjectRetain();
    uint64_t v155 = v334;
    sub_1B6D1D3C0(v333, v327, v329, v130, v150, v151, v152, v153, v332, v321, v148, v325 | ((HIDWORD(v325) & 1) << 32), v154);
    if (v155)
    {
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6D1F2A4(v150, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);

      (*(void (**)(char *, uint64_t))(v121 + 8))(v335, v323);
      return swift_unknownObjectRelease();
    }
    uint64_t v157 = v323;
    sub_1B6D1F2A4(v150, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(uint64_t *)(v330 + v328) >= 2026)
    {
      uint64_t v70 = v157;
      id v102 = v335;
      uint64_t v121 = v331;
    }
    else
    {
      uint64_t v70 = v157;
      id v102 = v335;
      uint64_t v121 = v331;
      if ((*(unsigned char *)(v333 + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) & 1) == 0) {
        sub_1B6AA0DF4(v333, v330);
      }
    }
    goto LABEL_27;
  }
  long long v145 = *(void **)(v144 + 16);
  int64_t v146 = v335;
  switch(v143 >> 62)
  {
    case 1uLL:
      uint64_t v324 = (int)v141;
      swift_unknownObjectRetain_n();
      sub_1B62FFBB0(v141, v143);
      int v247 = v334;
      sub_1B6D1CEB0(v324, v141 >> 32, v143 & 0x3FFFFFFFFFFFFFFFLL, v339, v145);
      char v334 = v247;
      if (v247)
      {
        sub_1B62C2360(v141, v143);

        goto LABEL_113;
      }
      sub_1B62C2360(v141, v143);

      goto LABEL_124;
    case 2uLL:
      uint64_t v249 = *(void *)(v141 + 16);
      uint64_t v248 = *(void *)(v141 + 24);
      swift_unknownObjectRetain_n();
      swift_retain();
      swift_retain();
      uint64_t v250 = v248;
      float v251 = v334;
      sub_1B6D1CEB0(v249, v250, v143 & 0x3FFFFFFFFFFFFFFFLL, v339, v145);
      char v334 = v251;
      if (v251)
      {

        swift_release();
        swift_release();
LABEL_113:
        sub_1B62C2360(v141, v143);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        int64_t v146 = v335;
        goto LABEL_117;
      }

      swift_release();
      swift_release();
LABEL_124:
      sub_1B62C2360(v141, v143);
      swift_unknownObjectRelease_n();
      goto LABEL_125;
    case 3uLL:
      *(void *)((char *)&v338 + 6) = 0;
      *(void *)&long long v338 = 0;
      swift_unknownObjectRetain_n();
      uint64_t v147 = (char *)&v338;
      goto LABEL_115;
    default:
      *(void *)&long long v338 = v141;
      WORD4(v338) = v143;
      BYTE10(v338) = BYTE2(v143);
      BYTE11(v338) = BYTE3(v143);
      BYTE12(v338) = BYTE4(v143);
      BYTE13(v338) = BYTE5(v143);
      swift_unknownObjectRetain_n();
      uint64_t v147 = (char *)&v339[-2] + BYTE6(v143);
LABEL_115:
      uint64_t v252 = v334;
      sub_1B6D1C144((uint64_t)&v338, (uint64_t)v147, v339, v145);
      char v334 = v252;
      if (!v252)
      {

        sub_1B62C2360(v141, v143);
        swift_unknownObjectRelease_n();
        uint64_t v70 = v323;
        goto LABEL_126;
      }

      sub_1B62C2360(v141, v143);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

LABEL_117:
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v121 + 8))(v146, v323);
      swift_unknownObjectRelease();
      break;
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1B6D1C144(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  v16[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1B6E31448();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E31438();
  uint64_t v11 = (void *)sub_1B6E31428();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v16[0] = 0;
  id v12 = objc_msgSend(a4, sel_newLibraryWithData_error_, v11, v16);

  id v13 = v16[0];
  if (v12)
  {
    *a3 = v12;
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v15 = v13;
    sub_1B6E30D78();

    return swift_willThrow();
  }
}

uint64_t sub_1B6D1C2C8()
{
  swift_release();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for EffectID()
{
  return &type metadata for EffectID;
}

ValueMetadata *type metadata accessor for VFXLoader.InitializePhases()
{
  return &type metadata for VFXLoader.InitializePhases;
}

void *sub_1B6D1C328(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B6E31118();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)v4 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[10];
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B6D1C468(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1B6D1C504(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B6E31118();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B6D1C5F4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B6E31118();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1B6D1C704(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B6E31118();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  return a1;
}

void *sub_1B6D1C7C4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B6E31118();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B6D1C8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B6D1C8B8);
}

uint64_t sub_1B6D1C8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B6E31118();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1B6D1C97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B6D1C990);
}

uint64_t sub_1B6D1C990(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1B6E31118();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

unint64_t sub_1B6D1CA54()
{
  unint64_t result = qword_1E9DD8DB0;
  if (!qword_1E9DD8DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8DB0);
  }
  return result;
}

unint64_t sub_1B6D1CAAC()
{
  unint64_t result = qword_1E9DD8DB8;
  if (!qword_1E9DD8DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8DB8);
  }
  return result;
}

unint64_t sub_1B6D1CB04()
{
  unint64_t result = qword_1E9DD8DC0;
  if (!qword_1E9DD8DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8DC0);
  }
  return result;
}

unint64_t sub_1B6D1CB5C()
{
  unint64_t result = qword_1E9DD8DC8;
  if (!qword_1E9DD8DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8DC8);
  }
  return result;
}

unint64_t sub_1B6D1CBB4()
{
  unint64_t result = qword_1EB97FEF0;
  if (!qword_1EB97FEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FEF0);
  }
  return result;
}

unint64_t sub_1B6D1CC08()
{
  unint64_t result = qword_1EB97DA10;
  if (!qword_1EB97DA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DA10);
  }
  return result;
}

unint64_t sub_1B6D1CC5C()
{
  unint64_t result = qword_1E9DD8DD8;
  if (!qword_1E9DD8DD8)
  {
    sub_1B6AD94C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD8DD8);
  }
  return result;
}

void *sub_1B6D1CCC4(uint64_t a1)
{
  sub_1B67F7364();
  uint64_t v2 = sub_1B6E32C28();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = 0;
  uint64_t v26 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v11 = v2 + 64;
  uint64_t v24 = v6;
  int64_t v25 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v23 = v6 + 40;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v4 << 6);
      goto LABEL_5;
    }
    uint64_t v20 = v4 + 1;
    if (v4 + 1 >= v25) {
      return v3;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v4 + 2;
      if (v4 + 2 >= v25) {
        return v3;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v4 + 3;
        if (v4 + 3 >= v25) {
          return v3;
        }
        unint64_t v21 = *(void *)(v24 + 8 * v20);
        if (!v21)
        {
          uint64_t v20 = v4 + 4;
          if (v4 + 4 >= v25) {
            return v3;
          }
          unint64_t v21 = *(void *)(v24 + 8 * v20);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v13 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v4 = v20;
LABEL_5:
    uint64_t v14 = (uint64_t *)(*(void *)(v26 + 48) + 16 * v13);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *(void **)(*(void *)(v26 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    id v18 = objc_msgSend(v17, sel_pointerValue);
    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v19 = (void *)(v3[6] + 16 * v13);
    *uint64_t v19 = v16;
    v19[1] = v15;
    *(void *)(v3[7] + 8 * v13) = v18;
    ++v3[2];
  }
  while (v25 - 5 != v4)
  {
    unint64_t v21 = *(void *)(v23 + 8 * v4++);
    if (v21)
    {
      uint64_t v20 = v4 + 4;
      goto LABEL_18;
    }
  }
  return v3;
}