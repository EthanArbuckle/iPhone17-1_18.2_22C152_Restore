double sub_1B628A080@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  long long v12;
  _OWORD v13[2];
  uint64_t v14;

  v3 = v2;
  v4 = a1;
  v6 = *(void *)v2;
  v7 = *(unsigned __int16 *)(*(void *)v2 + 26);
  if (v7 > 0xF)
  {
    v8 = *(void *)(a1 + 16);
    v9 = sub_1B62F79D4((char *)(v6 + *(unsigned __int16 *)(v6 + 24) + 41), v7 >> 4);
    if (v8)
    {
      *(void *)&v13[0] = v9;
      v10 = swift_bridgeObjectRetain();
      sub_1B62F8084(v10);
      v4 = *(void *)&v13[0];
    }
    else
    {
      v4 = v9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1B628A144((char *)(v4 + 32), *(void *)(v4 + 16), v3, (uint64_t)v13);
  swift_bridgeObjectRelease();
  result = *(double *)v13;
  v12 = v13[1];
  *(_OWORD *)a2 = v13[0];
  *(_OWORD *)(a2 + 16) = v12;
  *(void *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_1B628A144@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1B62C8668((char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 16)), (unint64_t)*(unsigned __int16 *)(*(void *)a3 + 18) >> 4, (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 20)), *(unsigned __int16 *)(*(void *)a3 + 22), a1, a2, (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 28)), *(unsigned __int16 *)(*(void *)a3 + 30) / 0x18u);
  int v7 = *(_DWORD *)(a3 + 8);
  char v8 = *(unsigned char *)(a3 + 12);
  uint64_t v9 = *(void *)(a3 + 16);
  char v10 = *(unsigned char *)(a3 + 24);
  uint64_t v11 = *(void *)(a3 + 32);
  *(void *)a4 = result;
  *(_DWORD *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 12) = v8;
  *(void *)(a4 + 16) = v9;
  *(unsigned char *)(a4 + 24) = v10;
  *(void *)(a4 + 32) = v11;
  return result;
}

uint64_t sub_1B628A1EC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B628A390((uint64_t)objc_msgSend(a1, sel_hash));
  if (v3)
  {
    uint64_t v4 = v3;
    v5 = *(void **)(v2 + 40);
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 40) = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v5 = sub_1B637C5BC(0, v5[2] + 1, 1, v5);
      *(void *)(v2 + 40) = v5;
    }
    unint64_t v8 = v5[2];
    unint64_t v7 = v5[3];
    if (v8 >= v7 >> 1) {
      v5 = sub_1B637C5BC(v7 > 1, v8 + 1, 1, v5);
    }
    v5[2] = v8 + 1;
    uint64_t v9 = &v5[2 * v8];
    v9[4] = v4;
    v9[5] = 0;
    *(void *)(v2 + 40) = v5;
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6AB24D4();
    sub_1B6E32B18();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B628A390(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B62C1A30(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B6AD06C8();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v5);
  sub_1B628A428(v5, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1B628A428(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_1B6E33908();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            v16 = (void *)(v15 + 8 * v3);
            v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

uint64_t sub_1B628A5B8()
{
  uint64_t v1 = *(void *)(v0 + 304);
  long long v11 = *(_OWORD *)(v0 + 272);
  long long v12 = *(_OWORD *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);

  uint64_t v5 = v4 + 24;
  uint64_t v6 = v4 + 16;
  uint64_t v7 = *(void *)(v0 + 216);
  sub_1B6384640(v6, v0 + 208);
  sub_1B6398C10(v5, v0 + 200);
  *(void *)uint64_t v3 = v7;
  *(_OWORD *)(v3 + 8) = v11;
  *(_OWORD *)(v3 + 24) = v12;
  *(void *)(v3 + 40) = v1;
  unint64_t v8 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  sub_1B62C7C20(v0 + 184);
  sub_1B63846D0(v0 + 208);
  sub_1B63846D0(v0 + 200);
  sub_1B6399A44(v0 + 224);
  os_unfair_lock_lock(v8);
  sub_1B6385318(v2 + 128);
  os_unfair_lock_unlock(v8);
  sub_1B63852E0(v0 + 80);
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

unint64_t sub_1B628A6F0(uint64_t *a1, uint64_t a2, unint64_t a3, int a4, char a5)
{
  unint64_t v9 = sub_1B637CB68();
  if ((v9 & 0x100000000) != 0)
  {
    uint64_t v13 = *a1;
    unint64_t v10 = *(unsigned int *)(*a1 + 16);
    type metadata accessor for ComponentsDataChunk();
    swift_allocObject();
    uint64_t v15 = swift_retain();
    uint64_t v12 = sub_1B628A8B0(v15, a3 | ((HIDWORD(a3) & 1) << 32), a4, a5 & 1, v10);
    swift_retain();
    _swift_stdlib_immortalize();
    swift_release();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6C3C3D8(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = *a1;
    }
    unint64_t v14 = *(void *)(v13 + 16);
    unint64_t v17 = *(void *)(v13 + 24);
    if (v14 >= v17 >> 1)
    {
      sub_1B6C3C3D8(v17 > 1, v14 + 1, 1);
      uint64_t v13 = *a1;
    }
    *(void *)(v13 + 16) = v14 + 1;
  }
  else
  {
    unint64_t v10 = v9;
    type metadata accessor for ComponentsDataChunk();
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = sub_1B628A8B0(v11, a3 | ((HIDWORD(a3) & 1) << 32), a4, a5 & 1, v10);
    swift_retain();
    _swift_stdlib_immortalize();
    swift_release();
    uint64_t v13 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1B6D671CC(v13);
    }
    unint64_t v14 = (int)v10;
  }
  *(void *)(v13 + 8 * v14 + 32) = v12;
  *a1 = v13;
  return v10;
}

uint64_t type metadata accessor for ComponentsDataChunk()
{
  return self;
}

uint64_t sub_1B628A8B0(uint64_t a1, uint64_t a2, int a3, char a4, int a5)
{
  uint64_t v6 = v5;
  *(_DWORD *)(v5 + 116) = 0;
  *(void *)(v5 + 168) = 0;
  *(void *)(v5 + 176) = 0;
  *(unsigned char *)(v5 + 184) = 1;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(void *)(v5 + 224) = -1;
  *(_OWORD *)(v5 + 232) = 0u;
  *(_OWORD *)(v5 + 248) = 0u;
  *(_OWORD *)(v5 + 272) = xmmword_1B6E4F370;
  *(_OWORD *)(v5 + 288) = xmmword_1B6E77AF0;
  *(void *)(v5 + 304) = 0x7F800000FFFFFFFFLL;
  *(_DWORD *)(v5 + 312) = -1;
  uint64_t v12 = (_DWORD *)swift_slowAlloc();
  *uint64_t v12 = 0;
  *(void *)(v5 + 320) = "lock short chunk";
  *(void *)(v5 + 328) = 16;
  *(unsigned char *)(v5 + 336) = 2;
  *(void *)(v5 + 344) = v12;
  uint64_t v13 = (_DWORD *)swift_slowAlloc();
  *uint64_t v13 = 0;
  *(void *)(v5 + 352) = "lock ownership chunk";
  *(void *)(v5 + 360) = 20;
  *(unsigned char *)(v5 + 368) = 2;
  *(void *)(v5 + 376) = v13;
  *(unsigned char *)(v5 + 120) = a4;
  *(void *)(v5 + 16) = a1;
  *(_DWORD *)(v5 + 24) = a3;
  uint64_t v14 = *(void *)(a1 + 80) + 8 * a3;
  *(void *)(v5 + 40) = *(void *)(v14 + 32);
  *(_DWORD *)(v5 + 188) = a5;
  *(_DWORD *)(v5 + 28) = a2;
  *(unsigned char *)(v5 + 32) = BYTE4(a2) & 1;
  uint64_t v15 = *(void *)(v14 + 32);
  uint64_t v16 = *(void *)(v15 + 64);
  LODWORD(v14) = *(unsigned __int8 *)(v15 + 211);
  *(unsigned char *)(v5 + 121) = v14;
  uint64_t v17 = *(void *)(v15 + 32);
  uint64_t v18 = *(void *)(v15 + 40);
  size_t v20 = *(void *)(v15 + 72);
  uint64_t v19 = *(void *)(v15 + 80);
  int v21 = *(unsigned __int8 *)(v15 + 88);
  long long v22 = *(_OWORD *)(v15 + 48);
  *(void *)(v6 + 48) = *(void *)(v15 + 24);
  *(void *)(v6 + 56) = v17;
  *(void *)(v6 + 64) = v18;
  *(_OWORD *)(v6 + 72) = v22;
  *(void *)(v6 + 88) = v16;
  *(void *)(v6 + 96) = v20;
  *(void *)(v6 + 104) = v19;
  *(unsigned char *)(v6 + 112) = v21;
  if (v14 == 1)
  {
    task_t v38 = *(_DWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    vfx_allocate_memory_entry(v20, 0x40uLL, v38, (uint64_t)v39);
    uint64_t v23 = v39[0];
    uint64_t v24 = v39[1];
    LODWORD(v25) = v40;
    LOBYTE(v26) = v41;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v23 = sub_1B628ABB0(v20);
    uint64_t v26 = HIDWORD(v25) & 1;
  }
  *(void *)(v6 + 144) = v23;
  *(void *)(v6 + 152) = v24;
  *(_DWORD *)(v6 + 160) = v25;
  *(unsigned char *)(v6 + 164) = v26;
  uint64_t v27 = v23 + v24;
  if (!v23) {
    uint64_t v27 = 0;
  }
  *(void *)(v6 + 128) = v23;
  *(void *)(v6 + 136) = v27;
  uint64_t v28 = v23 + v19;
  if (v21)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v29 = v16;
  }
  *(void *)(v6 + 168) = v28;
  *(void *)(v6 + 176) = v29;
  *(unsigned char *)(v6 + 184) = v21;
  if (*(unsigned char *)(v15 + 212) == 1)
  {
    uint64_t v30 = (v16 + 63) >> 6;
    if (v30 <= 1) {
      uint64_t v30 = 1;
    }
    size_t v31 = 8 * v30;
    v32 = aligned_alloc(8uLL, 8 * v30);
    bzero(v32, v31);
    v33 = aligned_alloc(8uLL, v31);
    bzero(v33, v31);
    *(void *)(v6 + 192) = v32;
    *(void *)(v6 + 200) = v16;
    *(void *)(v6 + 208) = v33;
    *(void *)(v6 + 216) = v16;
  }
  uint64_t v34 = *(void *)(v6 + 128);
  if (v34) {
    Swift::Int v35 = *(void *)(v6 + 136) - v34;
  }
  else {
    Swift::Int v35 = 0;
  }
  if (*(void *)(*(void *)(v6 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
    vfx_counters.add(_:_:)(*(_DWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 56), v35);
  }
  uint64_t v36 = *(void *)(v6 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  if (*(void *)v36) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v36 + 52), 1);
  }
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1B628ABB0(size_t a1)
{
  uint64_t v2 = *(void **)(v1 + 152);
  uint64_t v3 = v2[2];
  if (v3)
  {
    if (v2[5] == a1)
    {
      uint64_t v4 = 0;
      return sub_1B6399AB8(v4);
    }
    if (v3 != 1)
    {
      uint64_t v6 = v2 + 8;
      uint64_t v4 = 1;
      do
      {
        uint64_t v7 = *v6;
        v6 += 3;
        if (v7 == a1) {
          return sub_1B6399AB8(v4);
        }
      }
      while (v3 != ++v4);
    }
  }
  vfx_allocate_memory_entry(a1, 0x40uLL, *(_DWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity), (uint64_t)&v8);
  return v8;
}

void sub_1B628ACE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  id v58 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AssetManager()), sel_init);
  uint64_t v5 = *(void **)(v4 + 176);
  swift_retain();
  sub_1B636E6CC((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v5, (void (*)(uint64_t))sub_1B63BAFF0);

  swift_release();
  uint64_t v6 = (unsigned char *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig + 2) = 1;
  uint64_t v7 = type metadata accessor for ScriptingConfiguration();
  *(void *)&v6[*(int *)(v7 + 32)] = 0;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions];
  uint64_t v9 = *(void *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_counterStorage);
  if (vfx_counters_is_null(v9)) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v9;
  }
  sub_1B63B8F08(v10, (uint64_t)&v59);
  uint64_t v11 = v4 + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  long long v12 = v60;
  *(_OWORD *)uint64_t v11 = v59;
  *(_OWORD *)(v11 + 16) = v12;
  *(void *)(v11 + 96) = v65;
  long long v13 = v64;
  *(_OWORD *)(v11 + 64) = v63;
  *(_OWORD *)(v11 + 80) = v13;
  long long v14 = v62;
  *(_OWORD *)(v11 + 32) = v61;
  *(_OWORD *)(v11 + 48) = v14;
  uint64_t v15 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  uint64_t v16 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v16)
  {
    long long v17 = v61;
    *(_OWORD *)(v16 + 88) = v62;
    long long v18 = v64;
    *(_OWORD *)(v16 + 104) = v63;
    *(_OWORD *)(v16 + 120) = v18;
    *(void *)(v16 + 136) = v65;
    long long v19 = v60;
    *(_OWORD *)(v16 + 40) = v59;
    *(_OWORD *)(v16 + 56) = v19;
    *(_OWORD *)(v16 + 72) = v17;
  }
  if (*(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_setupRenderer) == 1)
  {
    v57 = v2;
    int v20 = *(unsigned __int8 *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_isVFX2);
    uint64_t v56 = v7;
    uint64_t v21 = a1;
    if (v20 == 1)
    {
      sub_1B62F7DD8(0, (unint64_t *)&unk_1EB985590, (uint64_t)&type metadata for RenderVariantDescriptor, MEMORY[0x1E4FBBE00]);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1B6E76B30;
      *(_DWORD *)(v22 + 32) = 1024;
      *(void *)(v22 + 40) = 81;
      *(_OWORD *)(v22 + 48) = 0u;
      *(_OWORD *)(v22 + 64) = 0u;
      *(_OWORD *)(v22 + 80) = 0u;
      *(void *)(v22 + 96) = 0;
      *(_OWORD *)(v22 + 104) = xmmword_1B6E8DCB0;
      *(void *)(v22 + 120) = 4;
      *(_DWORD *)(v22 + 128) = 1024;
      *(void *)(v22 + 136) = 115;
      *(_OWORD *)(v22 + 144) = 0u;
      *(_OWORD *)(v22 + 160) = 0u;
      *(_OWORD *)(v22 + 176) = 0u;
      *(void *)(v22 + 192) = 0;
      *(_OWORD *)(v22 + 200) = xmmword_1B6E8DCB0;
      BOOL v23 = 1;
      *(void *)(v22 + 216) = 4;
    }
    else
    {
      uint64_t v22 = 0;
      int v24 = *(unsigned __int8 *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering);
      BOOL v23 = (v24 & 1) == 0 && v24 != 2;
    }
    uint64_t v26 = *(void **)(v8 + OBJC_IVAR___VFXSceneLoadOptions_device);
    uint64_t v27 = *(void **)(v8 + OBJC_IVAR___VFXSceneLoadOptions_commandQueue);
    LOBYTE(v66) = v23;
    *(_WORD *)((char *)&v66 + 1) = 0;
    BYTE3(v66) = 0;
    BYTE4(v66) = v20;
    *((void *)&v66 + 1) = 0;
    char v67 = 1;
    uint64_t v68 = 0;
    char v69 = 1;
    uint64_t v70 = 0;
    __int16 v71 = 257;
    uint64_t v72 = 260;
    char v73 = 0;
    uint64_t v74 = v22;
    type metadata accessor for Renderer();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v28 = sub_1B6390860(v26, v27, &v66);
    long long v29 = *(_OWORD *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 8);
    long long v30 = *(_OWORD *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 24);
    long long v31 = *(_OWORD *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 40);
    long long v32 = *(_OWORD *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 56);
    long long v33 = *(_OWORD *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 72);
    long long v34 = *(_OWORD *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 88);
    *(void *)(v28 + 40) = *(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_counters);
    *(_OWORD *)(v28 + 48) = v29;
    *(_OWORD *)(v28 + 64) = v30;
    *(_OWORD *)(v28 + 80) = v31;
    *(_OWORD *)(v28 + 96) = v32;
    *(_OWORD *)(v28 + 112) = v33;
    *(_OWORD *)(v28 + 128) = v34;
    *(void *)(v4 + v15) = v28;
    swift_retain();
    swift_release();
    type metadata accessor for SceneAssetRegistry();
    uint64_t v35 = swift_allocObject();
    swift_retain();
    uint64_t v36 = MEMORY[0x1E4FBC860];
    *(void *)(v35 + 16) = sub_1B639A2B4(MEMORY[0x1E4FBC860]);
    *(void *)(v35 + 24) = sub_1B639A78C(v36);
    swift_weakInit();
    swift_weakAssign();
    uint64_t v37 = swift_release();
    MEMORY[0x1F4188790](v37, v38);
    v39 = *(void **)(v4 + 176);
    swift_retain();
    sub_1B636E6CC((uint64_t)&type metadata for SceneAssetRegistryInstance, (uint64_t)&off_1F0F96FB0, v39, (void (*)(uint64_t))sub_1B63BAD70);
    swift_release();
    swift_release();
    uint64_t v2 = v57;
    sub_1B6290AF0(v28);
    swift_bridgeObjectRelease();
    a1 = v21;
    swift_release();
    uint64_t v7 = v56;
  }
  uint64_t v40 = OBJC_IVAR___VFXSceneLoadOptions_isVFX2;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_isVFX2);
  *uint64_t v6 = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_enableRuntimeScriptCompilation);
  sub_1B63BE008(v8 + OBJC_IVAR___VFXSceneLoadOptions_metalLibraryURL, (uint64_t)&v6[*(int *)(v7 + 28)]);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_imGUIEnabled) = 0;
  if (*(void *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_clientID + 8))
  {
    uint64_t v41 = *(void *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_clientID);
    unint64_t v42 = *(void *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_clientID + 8);
  }
  else
  {
    uint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
  }
  *(void *)(v4 + 32) = v41;
  *(void *)(v4 + 40) = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = OBJC_IVAR___VFXSceneLoadOptions_isAuthoringWorld;
  char v44 = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_isAuthoringWorld);
  *(unsigned char *)(v4 + 48) = v44;
  *(unsigned char *)(*(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 16) = v44;
  uint64_t v45 = *(void *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_systemRegistrationOptions);
  swift_retain();
  sub_1B6368580(v45);
  swift_release();
  v46 = *(void **)(v8 + OBJC_IVAR___VFXSceneLoadOptions_world);
  id v47 = v46;
  if (v46)
  {
    *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_world) = v47;
  }
  char v48 = 0;
  *(_DWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_peerPid) = *(_DWORD *)(v8
                                                                            + OBJC_IVAR___VFXSceneLoadOptions_peerPid);
  *(_DWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity) = *(_DWORD *)(v8
                                                                                     + OBJC_IVAR___VFXSceneLoadOptions_peerTaskIdentity);
  v49 = *(unsigned char **)&v2[OBJC_IVAR____TtC3VFX8VFXScene_loader];
  v49[19] = *(unsigned char *)(v8 + v43);
  v49[20] = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_loadBindingsMetadata);
  v49[21] = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_enableParallelDecoding);
  v49[16] = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_loadPrecompiledScripts);
  v49[17] = 0;
  v49[22] = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_allowLoadingFromFuture);
  if (*(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_automaticallyPrepareScene) == 1) {
    char v48 = *(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_setupAsTemplate) ^ 1;
  }
  v49[23] = v48 & 1;
  if (*(unsigned char *)(v8 + OBJC_IVAR___VFXSceneLoadOptions_setupAsyncRuntime) == 1)
  {
    uint64_t v50 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
    if (!*(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
    {
      v51 = *(pthread_mutex_t **)(v8 + OBJC_IVAR___VFXSceneLoadOptions_asyncRuntimeLock);
      type metadata accessor for RuntimeThread();
      swift_allocObject();
      uint64_t v52 = swift_retain();
      uint64_t v53 = sub_1B6A93D78(v52, v51, 0);
      swift_release();
      *(void *)(a1 + v50) = v53;
      swift_release();
    }
    if (*(unsigned char *)(v8 + v40) == 1)
    {
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v2;
      v55 = v2;
      sub_1B69DECC8((uint64_t)sub_1B688AACC, v54);
      swift_release();
    }
  }
}

uint64_t sub_1B628B42C()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v32 = qword_1EB997A18;
  int v33 = 0;
  char v34 = 2;
  uint64_t v35 = 0;
  char v36 = 2;
  uint64_t v37 = 0;
  swift_retain();
  sub_1B63A9BC8(1, (uint64_t)v6);
  swift_release();
  long long v1 = v6[1];
  *(_OWORD *)(v0 + 16) = v6[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = v7;
  uint64_t v26 = qword_1EB997A18;
  int v27 = 0;
  char v28 = 2;
  uint64_t v29 = 0;
  char v30 = 2;
  uint64_t v31 = 0;
  swift_retain();
  sub_1B63A9B54(1, (uint64_t)v8);
  swift_release();
  long long v2 = v8[1];
  *(_OWORD *)(v0 + 56) = v8[0];
  *(_OWORD *)(v0 + 72) = v2;
  *(void *)(v0 + 88) = v9;
  uint64_t v20 = qword_1EB997A18;
  int v21 = 0;
  char v22 = 2;
  uint64_t v23 = 0;
  char v24 = 2;
  uint64_t v25 = 0;
  swift_retain();
  sub_1B63A9AE0(1, (uint64_t)v10);
  swift_release();
  long long v3 = v10[1];
  *(_OWORD *)(v0 + 96) = v10[0];
  *(_OWORD *)(v0 + 112) = v3;
  *(void *)(v0 + 128) = v11;
  uint64_t v14 = qword_1EB997A18;
  int v15 = 0;
  char v16 = 2;
  uint64_t v17 = 0;
  char v18 = 2;
  uint64_t v19 = 0;
  swift_retain();
  sub_1B63A9A6C(1, (uint64_t)v12);
  swift_release();
  long long v4 = v12[1];
  *(_OWORD *)(v0 + 136) = v12[0];
  *(_OWORD *)(v0 + 152) = v4;
  *(void *)(v0 + 168) = v13;
  return v0;
}

double sub_1B628B5E0@<D0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (uint64_t)(v2 + 4);
  uint64_t v6 = *v2;
  char v34 = *((unsigned char *)a1 + 73);
  char v35 = *((unsigned char *)a1 + 72);
  char v32 = *((unsigned char *)a1 + 75);
  char v33 = *((unsigned char *)a1 + 74);
  uint64_t v39 = *((void *)a1 + 7);
  uint64_t v40 = *((void *)a1 + 8);
  uint64_t v38 = *((void *)a1 + 6);
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v41 = *((void *)a1 + 2);
  char v36 = *((unsigned char *)a1 + 9);
  char v37 = *((unsigned char *)a1 + 10);
  char v29 = *((unsigned char *)a1 + 8);
  __int16 v8 = a1[3];
  __int16 v9 = a1[2];
  unint64_t v10 = a1[1];
  unint64_t v11 = *a1;
  sub_1B6355BE8(v5, (uint64_t)v42, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  sub_1B6355BE8((uint64_t)v42, (uint64_t)&v55, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  if ((v58 & 0xFF00) == 0x300 || !HIBYTE(v58))
  {
    char v18 = v34;
    char v17 = v35;
    char v20 = v32;
    char v19 = v33;
    uint64_t v15 = v7;
    char v16 = v29;
  }
  else
  {
    uint64_t v12 = v56;
    uint64_t v13 = v55;
    if (v56 <= 1) {
      uint64_t v12 = 1;
    }
    if (v12 >= 1024) {
      uint64_t v12 = 1024;
    }
    if (v55 <= 1) {
      uint64_t v13 = 1;
    }
    if (v13 >= 1024) {
      uint64_t v13 = 1024;
    }
    if (v58) {
      uint64_t v14 = v13 * v12;
    }
    else {
      uint64_t v14 = v57;
    }
    if (v13 * v12 < v14) {
      LOWORD(v14) = v13 * v12;
    }
    uint64_t v15 = 3;
    if (HIBYTE(v58) == 1)
    {
      uint64_t v15 = 7;
      __int16 v8 = 1;
    }
    else
    {
      __int16 v8 = v14;
    }
    if (HIBYTE(v58) == 1) {
      __int16 v9 = v14;
    }
    else {
      __int16 v9 = 1;
    }
    if (v13 > v11) {
      LOWORD(v11) = 1;
    }
    else {
      LODWORD(v11) = v11 / v13;
    }
    if (v12 <= v10)
    {
      LODWORD(v10) = v10 / (unsigned __int16)v12;
      if ((v6 & 0x40) == 0)
      {
        char v16 = 1;
        goto LABEL_31;
      }
    }
    else
    {
      LOWORD(v10) = 1;
      if ((v6 & 0x40) == 0)
      {
        char v16 = 1;
LABEL_31:
        char v18 = v34;
        char v17 = v35;
        char v20 = v32;
        char v19 = v33;
        goto LABEL_39;
      }
    }
    if ((unint64_t)(v41 - 160) <= 0x3A && ((1 << (v41 + 96)) & 0x7FDF1FF7CFD54FFLL) != 0)
    {
      uint64_t v30 = v15;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v43 = 0;
      unint64_t v44 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      uint64_t v43 = 0xD00000000000001BLL;
      unint64_t v44 = 0x80000001B6F52A10;
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(v41);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v21 = v43;
      uint64_t v22 = v44;
      int v23 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v43 = 0;
      swift_retain();
      sub_1B6B33E34(v23, &v43, v21, v22);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      char v16 = 1;
      char v18 = v34;
      char v17 = v35;
      char v20 = v32;
      char v19 = v33;
      uint64_t v15 = v30;
    }
    else
    {
      LOWORD(v43) = v11;
      WORD1(v43) = v10;
      WORD2(v43) = v9;
      HIWORD(v43) = v8;
      LOBYTE(v44) = v29;
      BYTE1(v44) = v36;
      BYTE2(v44) = v37;
      uint64_t v45 = v41;
      uint64_t v46 = v15;
      long long v47 = *((_OWORD *)a1 + 2);
      uint64_t v48 = v38;
      uint64_t v49 = v39;
      uint64_t v50 = v40;
      char v18 = v34;
      char v17 = v35;
      char v51 = v35;
      char v52 = v34;
      char v20 = v32;
      char v19 = v33;
      char v53 = v33;
      char v54 = v32;
      __int16 v31 = v11;
      __int16 v25 = v10;
      __int16 v26 = v9;
      __int16 v27 = v8;
      uint64_t v28 = v15;
      char v16 = sub_1B638D61C();
      uint64_t v15 = v28;
      __int16 v8 = v27;
      __int16 v9 = v26;
      LOWORD(v10) = v25;
      LOWORD(v11) = v31;
    }
  }
LABEL_39:
  *(_WORD *)a2 = v11;
  *(_WORD *)(a2 + 2) = v10;
  *(_WORD *)(a2 + 4) = v9;
  *(_WORD *)(a2 + 6) = v8;
  *(unsigned char *)(a2 + 8) = v16;
  *(unsigned char *)(a2 + 9) = v36;
  *(unsigned char *)(a2 + 10) = v37;
  *(void *)(a2 + 16) = v41;
  *(void *)(a2 + 24) = v15;
  *(void *)&double result = 2;
  *(_OWORD *)(a2 + 32) = xmmword_1B6EA0BC0;
  *(void *)(a2 + 48) = v38;
  *(void *)(a2 + 56) = v39;
  *(void *)(a2 + 64) = v40;
  *(unsigned char *)(a2 + 72) = v17;
  *(unsigned char *)(a2 + 73) = v18;
  *(unsigned char *)(a2 + 74) = v19;
  *(unsigned char *)(a2 + 75) = v20;
  return result;
}

id sub_1B628B9D4(void **a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v216 = a3;
  id v217 = a4;
  v213 = a2;
  uint64_t v5 = sub_1B6E312D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  __int16 v9 = (char *)&v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v11);
  v186 = (char *)&v180 - v12;
  MEMORY[0x1F4188790](v13, v14);
  v187 = (char *)&v180 - v15;
  uint64_t v16 = sub_1B6E31288();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v18);
  MEMORY[0x1F4188790](v19, v20);
  MEMORY[0x1F4188790](v21, v22);
  MEMORY[0x1F4188790](v23, v24);
  __int16 v26 = (char *)&v180 - v25;
  MEMORY[0x1F4188790](v27, v28);
  char v33 = (char *)&v180 - v32;
  v215 = (uint64_t *)a1;
  char v34 = *a1;
  if (!v34) {
    return 0;
  }
  uint64_t v182 = v31;
  uint64_t v183 = v6;
  uint64_t v180 = v30;
  uint64_t v191 = v29;
  uint64_t v184 = v5;
  uint64_t v35 = qword_1EB97FF40;
  swift_unknownObjectRetain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1B6E312C8();
  uint64_t v37 = sub_1B6385660(v36, (uint64_t)qword_1EB997E68);
  sub_1B6E312A8();
  sub_1B6E31268();
  uint64_t v38 = v215;
  sub_1B628D434((uint64_t)v215);
  sub_1B628D434((uint64_t)v38);
  uint64_t v189 = v37;
  uint64_t v39 = sub_1B6E312A8();
  LODWORD(v212) = sub_1B6E322B8();
  char v40 = sub_1B6E323F8();
  uint64_t v198 = v17;
  uint64_t v199 = v16;
  v214 = v33;
  v190 = v26;
  id v209 = v34;
  v188 = v9;
  if (v40)
  {
    uint64_t v41 = *(void (**)(void, void, void))(v17 + 16);
    unint64_t v196 = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v197 = v41;
    v41(v26, v33, v16);
    unint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)unint64_t v42 = 136315138;
    *(void *)&long long v258 = v43;
    v211 = v42 + 4;
    long long v44 = *((_OWORD *)v38 + 5);
    v272[7] = *((_OWORD *)v38 + 4);
    v272[8] = v44;
    v272[9] = *((_OWORD *)v38 + 6);
    long long v45 = *((_OWORD *)v38 + 2);
    v272[6] = *((_OWORD *)v38 + 3);
    v272[5] = v45;
    uint64_t v46 = sub_1B6367CFC();
    id v47 = [objc_allocWithZone(MEMORY[0x1E4F28B68]) (SEL)0x1F6E6D618];
    objc_msgSend(v47, sel_setCountStyle_, 3);
    id v48 = objc_msgSend(v47, sel_stringFromByteCount_, v46);
    uint64_t v49 = sub_1B6E31798();
    unint64_t v51 = v50;

    uint64_t v16 = v199;
    *(void *)&v273[0] = sub_1B6385A2C(v49, v51, (uint64_t *)&v258);
    __int16 v26 = v190;
    char v33 = v214;
    sub_1B6E325A8();
    swift_bridgeObjectRelease();
    sub_1B628D3FC((uint64_t)v38);
    sub_1B628D3FC((uint64_t)v38);
    os_signpost_id_t v52 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v39, (os_signpost_type_t)v212, v52, "uploadTextureToGPU", "%s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B84C0](v43, -1, -1);
    id v53 = v217;
    MEMORY[0x1BA9B84C0](v42, -1, -1);

    (*(void (**)(char *, uint64_t))(v198 + 8))(v26, v16);
    unint64_t v55 = v196;
    char v54 = v197;
  }
  else
  {

    sub_1B628D3FC((uint64_t)v38);
    sub_1B628D3FC((uint64_t)v38);
    char v54 = *(void (**)(void, void, void))(v17 + 16);
    unint64_t v55 = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    id v53 = v217;
  }
  unint64_t v196 = v55;
  v197 = v54;
  v54(v26, v33, v16);
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v195 = sub_1B6E312F8();
  uint64_t v56 = v216;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v216 + 208));
  long long v57 = *((_OWORD *)v38 + 5);
  v272[2] = *((_OWORD *)v38 + 4);
  v272[3] = v57;
  v272[4] = *((_OWORD *)v38 + 6);
  long long v58 = *((_OWORD *)v38 + 2);
  v272[1] = *((_OWORD *)v38 + 3);
  v272[0] = v58;
  long long v59 = v213;
  sub_1B628B5E0((unsigned __int16 *)v272, (uint64_t)&v237);
  unsigned __int16 v60 = v237;
  unsigned __int16 v61 = v238;
  int v207 = v240;
  int v208 = v239;
  unsigned int v210 = v241;
  int v206 = v242;
  char v236 = v243;
  int v234 = v244;
  char v235 = v245;
  uint64_t v62 = v246;
  unint64_t v63 = v249;
  uint64_t v201 = v248;
  uint64_t v202 = v247;
  uint64_t v204 = v251;
  uint64_t v205 = v250;
  uint64_t v203 = v252;
  int v64 = v253;
  LODWORD(v217) = v254;
  LODWORD(v212) = v255;
  LODWORD(v211) = v256;
  int v185 = v257;
  int v193 = v238;
  int v194 = v237;
  if (v246 <= 0x37 && ((1 << v246) & 0xE0000003D07C00) != 0)
  {
    swift_getObjectType();
    if ((sub_1B6BBF568() & 1) == 0 || (v63 & 2) != 0)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      id v65 = v53;
      *(void *)&long long v258 = 0;
      *((void *)&v258 + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v258 = 0xD000000000000024;
      *((void *)&v258 + 1) = 0x80000001B6F528B0;
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(v62);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      long long v66 = v258;
      int v67 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      int v200 = v64;
      *(void *)&long long v258 = 0;
      swift_retain();
      sub_1B6B33E34(v67, (uint64_t *)&v258, v66, *((uint64_t *)&v66 + 1));
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v56 = v216;
      id v53 = v65;
      long long v59 = v213;
      unsigned __int16 v61 = v193;
      unsigned __int16 v60 = v194;
    }
    else
    {
      int v200 = 2;
      LODWORD(v217) = 2;
      LODWORD(v212) = 2;
      LODWORD(v211) = 2;
    }
  }
  else
  {
    int v200 = v253;
  }
  uint64_t v68 = *v59;
  BOOL v70 = v62 == 125 || v62 == 115;
  if ((v68 & 8) == 0) {
    BOOL v70 = 0;
  }
  BOOL v192 = v70;
  id v181 = *(id *)(v56 + 16);
  if (objc_msgSend(v181, sel_readWriteTextureSupport) == (id)2)
  {
    uint64_t v71 = sub_1B6398884(v62);
    int v72 = 0;
    switch(v71)
    {
      case 10:
      case 13:
      case 14:
      case 23:
      case 25:
      case 70:
      case 73:
      case 74:
      case 113:
      case 114:
      case 115:
      case 123:
      case 124:
      case 125:
        break;
      default:
        int v72 = 1;
        break;
    }
    if (!(v72 | !v192 | (v63 >> 1) & 1)) {
      v63 |= 2uLL;
    }
  }
  if (v53)
  {
    unsigned __int16 v286 = v60;
    unsigned __int16 v287 = v61;
    __int16 v288 = v208;
    __int16 v289 = v207;
    char v290 = v210;
    char v291 = v206;
    char v73 = v236;
    char v292 = v236;
    int v293 = v234;
    char v294 = v235;
    uint64_t v295 = v62;
    uint64_t v296 = v202;
    uint64_t v297 = v201;
    unint64_t v298 = v63;
    uint64_t v299 = v205;
    uint64_t v300 = v204;
    uint64_t v301 = v203;
    char v302 = v200;
    char v303 = (char)v217;
    char v304 = v212;
    char v305 = (char)v211;
    int v306 = v185;
    uint64_t v74 = (void *)swift_unknownObjectRetain();
    if (sub_1B6CF1008(v74)) {
      goto LABEL_38;
    }
    swift_unknownObjectRelease();
    char v75 = v73 & 1;
  }
  else
  {
    char v75 = v236;
  }
  id v76 = objc_msgSend(v209, sel_label);
  if (v76)
  {
    v77 = v76;
    uint64_t v78 = sub_1B6E31798();
    uint64_t v80 = v79;
  }
  else
  {
    uint64_t v78 = 0;
    uint64_t v80 = 0;
  }
  id v81 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  LOWORD(v258) = v194;
  WORD1(v258) = v193;
  WORD2(v258) = v208;
  WORD3(v258) = v207;
  BYTE8(v258) = v210;
  BYTE9(v258) = v206;
  BYTE10(v258) = v75;
  uint64_t v259 = v62;
  uint64_t v260 = v202;
  uint64_t v261 = v201;
  unint64_t v262 = v63;
  uint64_t v263 = v205;
  uint64_t v264 = v204;
  uint64_t v265 = v203;
  char v266 = v200;
  char v267 = (char)v217;
  char v268 = v212;
  char v269 = (char)v211;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v258, v81);
  v82 = sub_1B639E4E4(v81, v78, v80);

  swift_bridgeObjectRelease();
  if (!v82)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v258 = 0;
    *((void *)&v258 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    v273[0] = v258;
    sub_1B6E31948();
    LOWORD(v258) = v194;
    WORD1(v258) = v193;
    WORD2(v258) = v208;
    WORD3(v258) = v207;
    BYTE8(v258) = v210;
    BYTE9(v258) = v206;
    BYTE10(v258) = v75;
    uint64_t v259 = v62;
    uint64_t v260 = v202;
    uint64_t v261 = v201;
    unint64_t v262 = v63;
    uint64_t v263 = v205;
    uint64_t v264 = v204;
    uint64_t v265 = v203;
    char v266 = v200;
    char v267 = (char)v217;
    char v268 = v212;
    char v269 = (char)v211;
    type metadata accessor for TextureDescriptor(0);
    sub_1B6E32B18();
    sub_1B6E31948();
    id v101 = objc_msgSend(v209, sel_label);
    if (v101)
    {
      v102 = v101;
      sub_1B6E31798();
    }
    uint64_t v110 = v198;
    uint64_t v109 = v199;
    v95 = v214;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v111 = v273[0];
    int v112 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v258 = 0;
    swift_retain();
    sub_1B6B33E34(v112, (uint64_t *)&v258, v111, *((uint64_t *)&v111 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v216 + 208));
    v113 = sub_1B6E312A8();
    uint64_t v114 = v182;
    sub_1B6E312E8();
    os_signpost_type_t v115 = sub_1B6E322A8();
    if (sub_1B6E323F8())
    {
      swift_retain();
      v116 = v187;
      sub_1B6E31318();
      swift_release();
      uint64_t v118 = v183;
      uint64_t v117 = v184;
      if ((*(unsigned int (**)(char *, uint64_t))(v183 + 88))(v116, v184) == *MEMORY[0x1E4FBD340])
      {
        v119 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v118 + 8))(v116, v117);
        v119 = "";
      }
      v134 = v190;
      uint64_t v135 = v182;
      v197(v190, v182, v109);
      v136 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v136 = 0;
      os_signpost_id_t v137 = sub_1B6E31278();
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v113, v115, v137, "uploadTextureToGPU", v119, v136, 2u);
      MEMORY[0x1BA9B84C0](v136, -1, -1);

      v120 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
      v120(v135, v109);
      v120((uint64_t)v134, v109);
      v95 = v214;
    }
    else
    {

      v120 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
      v120(v114, v109);
    }
LABEL_96:
    swift_unknownObjectRelease();
    swift_release();
    v120((uint64_t)v95, v109);
    return 0;
  }
  id v53 = v82;
LABEL_38:
  id v217 = v53;
  id v233 = v53;
  v83 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
  v84 = (void *)sub_1B6E31768();
  objc_msgSend(v83, sel_pushDebugGroup_, v84);

  sub_1B6355BE8((uint64_t)(v59 + 4), (uint64_t)v271, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  sub_1B6355BE8((uint64_t)v271, (uint64_t)v307, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  char v85 = v308;
  int v86 = v308 & 0xFF00;
  if (v86 == 768 || v308 < 0x100u)
  {
    BOOL v93 = v192;
    unsigned int v94 = !v192 & (v68 >> 6);
    swift_unknownObjectRetain();
    id v91 = v217;
    swift_unknownObjectRetain();
    sub_1B63ACA80(v215, v91, v94, v83);
  }
  else
  {
    uint64_t v87 = v307[1];
    uint64_t v212 = v307[2];
    uint64_t v88 = v307[0];
    BOOL v89 = v192;
    unsigned int v90 = !v192 & (v68 >> 6);
    swift_unknownObjectRetain();
    id v91 = v217;
    swift_unknownObjectRetain();
    __int16 v92 = v86 | v85 & 1;
    BOOL v93 = v89;
    sub_1B6CFA864(v88, v87, v212, v92, v215, v91, v90, v83);
  }
  v95 = v214;
  v96 = v188;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  objc_msgSend(v83, sel_popDebugGroup);
  swift_unknownObjectRelease();
  uint64_t v97 = v216;
  if (v93)
  {
    v231[0] = 0xD00000000000001DLL;
    v231[1] = 0x80000001B6F52810;
    v232[0] = 0xD00000000000001DLL;
    v232[1] = 0x80000001B6F52810;
    if (objc_msgSend(v181, sel_readWriteTextureSupport) == (id)2)
    {
      switch(sub_1B6398884((uint64_t)objc_msgSend(v91, sel_pixelFormat)))
      {
        case 10:
        case 13:
        case 14:
        case 23:
        case 25:
        case 70:
        case 73:
        case 74:
        case 113:
        case 114:
        case 115:
        case 123:
        case 124:
        case 125:
          v98 = (void *)sub_1B6802298(0x657475706D6F43, 0xE700000000000000, 0);
          v99 = (void *)sub_1B6E31768();
          objc_msgSend(v98, sel_pushDebugGroup_, v99);

          sub_1B6CFABF8(v98, &v233, v97, v231, v232);
          objc_msgSend(v98, sel_popDebugGroup);
          swift_unknownObjectRelease();
          goto LABEL_74;
        default:
          break;
      }
    }
    sub_1B63989B8(0, (unint64_t *)&unk_1EB94A1D0);
    swift_getObjectType();
    v103 = (void *)swift_unknownObjectRetain();
    v215 = (uint64_t *)sub_1B6BBFFB0(v103);
    objc_msgSend(v215, sel_setUsage_, 5);
    id v104 = objc_msgSend(v91, sel_label);
    if (v104)
    {
      v105 = v104;
      unint64_t v106 = sub_1B6E31798();
      uint64_t v108 = v107;
    }
    else
    {
      uint64_t v108 = 0x80000001B6F52850;
      unint64_t v106 = 0xD000000000000010;
    }
    v121 = sub_1B639E4E4(v215, v106, v108);
    swift_bridgeObjectRelease();
    if (v121)
    {
      uint64_t v122 = swift_unknownObjectRetain();
      v123 = sub_1B633483C(v122, 0, 0, 2, 0, 0);
      swift_unknownObjectRelease();
      id v124 = objc_msgSend(v217, sel_pixelFormat);
      long long v275 = 0u;
      long long v276 = 0u;
      long long v277 = 0u;
      long long v278 = 0u;
      id v274 = v124;
      uint64_t v279 = 0;
      uint64_t v280 = 1;
      *(void *)&long long v218 = 0xD000000000000010;
      *((void *)&v218 + 1) = 0x80000001B6F396F0;
      uint64_t v219 = 0;
      uint64_t v220 = 0;
      *(void *)&long long v221 = MEMORY[0x1E4FBC860];
      *((void *)&v221 + 1) = 0xD00000000000001ELL;
      unint64_t v222 = 0x80000001B6F52830;
      uint64_t v223 = 0;
      *(void *)&long long v224 = 0;
      *((void *)&v224 + 1) = MEMORY[0x1E4FBC860];
      long long v227 = 0u;
      long long v228 = 0u;
      long long v229 = 0u;
      long long v230 = 0u;
      long long v225 = 0u;
      long long v226 = 0u;
      v273[0] = v218;
      v273[1] = 0u;
      v273[2] = v221;
      v273[3] = 0x80000001B6F52830;
      v273[4] = v224;
      memset(&v273[5], 0, 96);
      v281[1] = 0;
      v281[0] = 0;
      long long v282 = xmmword_1B6E50D30;
      long long v283 = xmmword_1B6E50D30;
      __int16 v284 = 15;
      v285[0] = 0;
      v285[1] = 0;
      v285[2] = 2;
      memset(&v285[3], 0, 24);
      sub_1B62D5ED4((uint64_t *)v273, &v274, 0, 0, 0, (uint64_t)v281, 3, (uint64_t)v285, (uint64_t)&v258, 1, 1);
      sub_1B638A224((uint64_t *)&v218);
      unint64_t v125 = sub_1B638A310((uint64_t)&v258, 0);
      v127 = v126;
      unint64_t v128 = 0;
      if (v125 >= 3)
      {
        unint64_t v125 = swift_unknownObjectRetain();
        unint64_t v128 = v125;
      }
      sub_1B630B7D8(v125, v127);
      sub_1B638CE7C((uint64_t *)&v258);
      uint64_t v129 = v216;
      sub_1B6388754(0x6C756D6572706E55, 0xED0000796C706974, v123);
      uint64_t v130 = sub_1B6388ED8(0);
      if (v130)
      {
        v131 = (void *)v130;
        swift_unknownObjectRetain();
        sub_1B638963C((uint64_t)&v270);
        swift_getObjectType();
        objc_msgSend(v131, sel_setRenderPipelineState_, v128);
        objc_msgSend(v131, sel_setFragmentTexture_atIndex_, v217, 0);
        sub_1B6CC8618(1);
        sub_1B6388C28();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      id v233 = v121;
      id v91 = v121;
      uint64_t v97 = v129;
      v96 = v188;
LABEL_74:
      v138 = v96;
      if (v210 >= 2)
      {
        v139 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
        v140 = (void *)sub_1B6E31768();
        objc_msgSend(v139, sel_pushDebugGroup_, v140);

        swift_unknownObjectRetain();
        v141 = (void *)swift_unknownObjectRetain();
        sub_1B63AF8CC(v141, v139);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        objc_msgSend(v139, sel_popDebugGroup);
        swift_unknownObjectRelease();
      }
      id v142 = v91;
      sub_1B6355BE8((uint64_t)v271, (uint64_t)&v218, &qword_1EB97D7B0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation);
      unsigned __int8 v143 = v220;
      int v144 = v220 & 0xFF00;
      if (v144 == 768)
      {
        uint64_t v100 = v199;
        id v91 = v142;
      }
      else
      {
        uint64_t v146 = *((void *)&v218 + 1);
        uint64_t v145 = v218;
        uint64_t v147 = v219;
        v148 = (void *)swift_unknownObjectRetain();
        uint64_t v149 = v145;
        uint64_t v97 = v216;
        id v91 = sub_1B6D0496C(v148, v149, v146, v147, v144 | v143 & 1u);
        swift_unknownObjectRelease_n();
        uint64_t v100 = v199;
      }
      v96 = v138;
      v95 = v214;
      goto LABEL_80;
    }
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v258 = 0;
    *((void *)&v258 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    id v132 = objc_msgSend(v217, sel_label);
    if (v132)
    {
      v133 = v132;
      sub_1B6E31798();
    }
    v163 = v215;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    id v164 = objc_msgSend(v163, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v165 = v258;
    int v166 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v258 = 0;
    swift_retain();
    sub_1B6B33E34(v166, (uint64_t *)&v258, v165, *((uint64_t *)&v165 + 1));
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v216 + 208));
    v167 = sub_1B6E312A8();
    uint64_t v168 = v180;
    sub_1B6E312E8();
    os_signpost_type_t v169 = sub_1B6E322A8();
    if (sub_1B6E323F8())
    {
      swift_retain();
      v170 = v186;
      sub_1B6E31318();
      swift_release();
      uint64_t v172 = v183;
      uint64_t v171 = v184;
      int v173 = (*(uint64_t (**)(char *, uint64_t))(v183 + 88))(v170, v184);
      uint64_t v109 = v199;
      if (v173 == *MEMORY[0x1E4FBD340])
      {
        v174 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v172 + 8))(v170, v171);
        v174 = "";
      }
      v175 = v190;
      uint64_t v176 = v180;
      v197(v190, v180, v109);
      v177 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v177 = 0;
      os_signpost_id_t v178 = sub_1B6E31278();
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v167, v169, v178, "uploadTextureToGPU", v174, v177, 2u);
      MEMORY[0x1BA9B84C0](v177, -1, -1);

      v120 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
      v120(v176, v109);
      v120((uint64_t)v175, v109);
      v95 = v214;
    }
    else
    {

      uint64_t v109 = v199;
      v120 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
      v120(v168, v199);
    }
    goto LABEL_96;
  }
  uint64_t v100 = v199;
LABEL_80:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 208));
  v150 = sub_1B6E312A8();
  uint64_t v151 = v191;
  sub_1B6E312E8();
  os_signpost_type_t v152 = sub_1B6E322A8();
  if (sub_1B6E323F8())
  {
    swift_retain();
    sub_1B6E31318();
    swift_release();
    uint64_t v154 = v183;
    uint64_t v153 = v184;
    int v155 = (*(uint64_t (**)(char *, uint64_t))(v183 + 88))(v96, v184);
    int v156 = *MEMORY[0x1E4FBD340];
    id v217 = v91;
    if (v155 == v156)
    {
      v157 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v154 + 8))(v96, v153);
      v157 = "";
    }
    v159 = v190;
    uint64_t v160 = v191;
    v197(v190, v191, v100);
    v161 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v161 = 0;
    os_signpost_id_t v162 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v150, v152, v162, "uploadTextureToGPU", v157, v161, 2u);
    MEMORY[0x1BA9B84C0](v161, -1, -1);

    v158 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
    v158(v160, v100);
    v158((uint64_t)v159, v100);
    id v91 = v217;
    v95 = v214;
  }
  else
  {

    v158 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
    v158(v151, v100);
  }
  swift_unknownObjectRelease();
  swift_release();
  v158((uint64_t)v95, v100);
  return v91;
}

uint64_t sub_1B628D3FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B628D434(uint64_t a1)
{
  return a1;
}

void sub_1B628D46C(CGImage *a1, CGColorSpace *a2, uint64_t a3, size_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v144 = a6;
  size_t v109 = a4;
  uint64_t v108 = a3;
  CGColorSpaceRef v112 = a2;
  sub_1B638C1B8(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v106 = (uint64_t)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v102 - v15;
  uint64_t Width = CGImageGetWidth(a1);
  size_t Height = CGImageGetHeight(a1);
  size_t v19 = Height;
  uint64_t v111 = a5;
  if (a5 >= 2)
  {
    size_t v20 = *(unsigned __int16 *)(v7 + 34);
    *(void *)&long long v114 = *(unsigned __int16 *)(v7 + 32);
    if (Width != (void)v114 || Height != v20)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      *(void *)&long long v115 = 0;
      *((void *)&v115 + 1) = 0xE000000000000000;
      uint64_t v113 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v115 = 0x727574786554202DLL;
      *((void *)&v115 + 1) = 0xEB00000000282065;
      sub_1B663AB08(v109, (uint64_t)v16);
      uint64_t v21 = sub_1B6E30F48();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21) == 1)
      {
        sub_1B639579C((uint64_t)v16, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B638C1B8);
      }
      else
      {
        sub_1B6E30DC8();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
      }
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      size_t v117 = CGImageGetWidth(a1);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      size_t v117 = CGImageGetHeight(a1);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t Width = v114;
      size_t v117 = v114;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      size_t v117 = v20;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      long long v23 = v115;
      int v24 = sub_1B6E32168();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v115 = 0;
      swift_retain();
      sub_1B6B33E34(v24, (uint64_t *)&v115, v23, *((uint64_t *)&v23 + 1));
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      size_t v19 = v20;
    }
  }
  uint64_t v25 = CGImageGetColorSpace(a1);
  if (!v25)
  {
    *(void *)&long long v115 = 0;
    *((void *)&v115 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E31948();
    size_t v117 = (size_t)a1;
    type metadata accessor for CGImage(0);
    sub_1B6E32B18();
    sub_1B6E31948();
    long long v30 = v115;
    sub_1B6D0ACA8();
    swift_allocError();
    *(_OWORD *)uint64_t v31 = v30;
    *(unsigned char *)(v31 + 16) = 0;
    swift_willThrow();
    return;
  }
  __int16 v26 = v25;
  CGBitmapInfo BitmapInfo = CGImageGetBitmapInfo(a1);
  if (CGImageGetAlphaInfo(a1))
  {
    CGImageAlphaInfo AlphaInfo = CGImageGetAlphaInfo(a1);
    CGColorSpaceRef v28 = v112;
    uint64_t v29 = v19;
    BOOL v104 = AlphaInfo != kCGImageAlphaNoneSkipLast && CGImageGetAlphaInfo(a1) != kCGImageAlphaNoneSkipFirst;
  }
  else
  {
    uint64_t v29 = v19;
    BOOL v104 = 0;
    CGColorSpaceRef v28 = v112;
  }
  int64_t BitsPerComponent = CGImageGetBitsPerComponent(a1);
  BOOL IsWideGamutRGB = CGColorSpaceIsWideGamutRGB(v26);
  uint32_t v34 = BitsPerComponent > 71 && IsWideGamutRGB;
  uint32_t v105 = v34;
  size_t NumberOfComponents = CGColorSpaceGetNumberOfComponents(v26);
  CGImageGetBitmapInfo(a1);
  sub_1B6355BE8((uint64_t)v28 + 8, (uint64_t)v118, (unint64_t *)&unk_1EB97D6A8, (uint64_t)&type metadata for TextureOptions.SizeModification);
  sub_1B6355BE8((uint64_t)v118, (uint64_t)&v141, (unint64_t *)&unk_1EB97D6A8, (uint64_t)&type metadata for TextureOptions.SizeModification);
  if (v143 <= 0xFDu)
  {
    uint64_t v36 = v142;
    if ((v143 & 0x80) != 0)
    {
      uint64_t Width = v141;
      uint64_t v35 = v142;
    }
    else
    {
      uint64_t v35 = v29;
      if (v143)
      {
        if (v142 >= v141) {
          uint64_t v36 = v141;
        }
        if (Width >= v29)
        {
          if (v36 >= Width) {
            uint64_t v36 = Width;
          }
          uint64_t v35 = v36 * v29 / Width;
          uint64_t Width = v36;
        }
        else
        {
          if (v36 >= v29) {
            uint64_t v36 = v29;
          }
          uint64_t Width = v36 * Width / v29;
          uint64_t v35 = v36;
        }
      }
      else
      {
        if (v141 < Width) {
          uint64_t Width = v141;
        }
        if (v142 < v29) {
          uint64_t v35 = v142;
        }
      }
    }
    if (Width != CGImageGetWidth(a1) || v35 != CGImageGetHeight(a1))
    {
      *(void *)&long long v114 = v35;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v113 = Width;
      uint64_t v37 = qword_1EB997FD0;
      *(void *)&long long v115 = 0;
      *((void *)&v115 + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v115 = 0x727574786554202DLL;
      *((void *)&v115 + 1) = 0xEB00000000282065;
      uint64_t v38 = v106;
      sub_1B663AB08(v109, v106);
      uint64_t v39 = sub_1B6E30F48();
      uint64_t v40 = *(void *)(v39 - 8);
      int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39);
      uint64_t v102 = v37;
      if (v41 == 1)
      {
        sub_1B639579C(v38, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B638C1B8);
      }
      else
      {
        sub_1B6E30DC8();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
      }
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      size_t v117 = CGImageGetWidth(a1);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      size_t v117 = CGImageGetHeight(a1);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t Width = v113;
      size_t v117 = v113;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      size_t v117 = v114;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      long long v42 = v115;
      int v43 = sub_1B6E32168();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v115 = 0;
      swift_retain();
      sub_1B6B33E34(v43, (uint64_t *)&v115, v42, *((uint64_t *)&v42 + 1));
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v35 = v114;
      CGColorSpaceRef v28 = v112;
    }
  }
  else
  {
    uint64_t v35 = v29;
  }
  uint64_t v44 = *(void *)v28;
  uint64_t v110 = v26;
  *(void *)&long long v114 = v35;
  if ((BitmapInfo & 0x100) != 0)
  {
    if ((v44 & 4) != 0)
    {
      if (qword_1E9DCC738 != -1) {
        swift_once();
      }
      uint64_t v46 = &qword_1E9E49860;
    }
    else
    {
      if (qword_1E9DCC740 != -1) {
        swift_once();
      }
      uint64_t v46 = &qword_1E9E49868;
    }
    long long v45 = (void *)*v46;
    goto LABEL_68;
  }
  if (v105)
  {
    if (qword_1E9DCC740 != -1) {
      swift_once();
    }
    long long v45 = (void *)qword_1E9E49868;
LABEL_68:
    unint64_t v51 = v45;
    uint32_t v105 = 4353;
    uint64_t v52 = 2;
    uint64_t v50 = 8;
    goto LABEL_87;
  }
  size_t v47 = CGImageGetBitsPerComponent(a1);
  if (v47 == 16)
  {
    if (v104)
    {
      uint32_t v48 = 4097;
      if ((v44 & 4) != 0)
      {
LABEL_63:
        uint64_t v49 = 2;
        uint64_t v50 = 8;
LABEL_82:
        uint32_t v105 = v48;
        if (qword_1EB97D488 != -1) {
          swift_once();
        }
        id v53 = &qword_1EB997928;
LABEL_85:
        unint64_t v51 = (CGColorSpace *)(id)*v53;
LABEL_86:
        uint64_t v52 = v49;
        goto LABEL_87;
      }
LABEL_77:
      uint32_t v105 = v48;
      if (qword_1EB97DA30 != -1) {
        swift_once();
      }
      id v53 = &qword_1EB997920;
      uint64_t v49 = 2;
      uint64_t v50 = 8;
      goto LABEL_85;
    }
    if (NumberOfComponents != 1)
    {
      uint32_t v48 = 4101;
      if ((v44 & 4) != 0) {
        goto LABEL_63;
      }
      goto LABEL_77;
    }
    uint64_t v50 = 2;
    goto LABEL_133;
  }
  if (v104)
  {
    uint32_t v48 = 16385;
LABEL_81:
    uint64_t v49 = 1;
    uint64_t v50 = 4;
    goto LABEL_82;
  }
  if (NumberOfComponents != 1)
  {
    uint32_t v48 = 16389;
    goto LABEL_81;
  }
  if ((v44 & 4) != 0)
  {
    uint64_t v50 = 1;
  }
  else
  {
    swift_getObjectType();
    char v96 = sub_1B6BBC86C();
    uint64_t v50 = 1;
    uint64_t v97 = 1;
    if ((v96 & 1) == 0)
    {
LABEL_140:
      uint64_t v49 = v97;
      uint64_t v50 = 4 * v97;
      if (qword_1EB97D488 != -1) {
        swift_once();
      }
      unint64_t v51 = (CGColorSpace *)(id)qword_1EB997928;
      uint32_t v105 = 5;
      uint64_t v35 = v114;
      goto LABEL_86;
    }
  }
LABEL_133:
  swift_getObjectType();
  if ((sub_1B6BBF568() & 1) == 0)
  {
    uint64_t v97 = v50;
    goto LABEL_140;
  }
  if (qword_1E9DCC728 != -1) {
    swift_once();
  }
  v98 = (void *)qword_1E9E49850;
  if (v47 == 16 && (v44 & 4) == 0)
  {
    uint64_t v100 = qword_1E9DCC730;
    id v101 = (id)qword_1E9E49850;
    if (v100 != -1) {
      swift_once();
    }
    id v99 = (id)qword_1E9E49858;
  }
  else
  {
    id v99 = (id)qword_1E9E49850;
  }
  unint64_t v51 = (CGColorSpace *)v99;

  uint32_t v105 = 0;
  uint64_t v52 = v50;
  uint64_t v35 = v114;
LABEL_87:
  CGColorSpaceRef v112 = v51;
  uint64_t v113 = Width;
  size_t v109 = v50 * Width;
  uint64_t v54 = v50 * Width * v35;
  id v55 = *(id *)v7;
  uint64_t v106 = v54;
  size_t NumberOfComponents = v50;
  char v56 = v44;
  if (v55)
  {
    uint64_t v57 = v54 * v144;
    if (*(void *)(v7 + 16) == v54 * v144)
    {
      uint64_t v58 = *(void *)(v7 + 8);
      goto LABEL_93;
    }
  }
  else
  {
    uint64_t v57 = v54 * v144;
  }
  uint64_t v59 = v52;
  swift_getObjectType();
  id v55 = sub_1B6397BCC(v57, 0);
  uint64_t v58 = v60;
  uint64_t v62 = v61;
  swift_unknownObjectRelease();
  *(void *)uint64_t v7 = v55;
  *(void *)(v7 + 8) = v58;
  *(void *)(v7 + 16) = v62;
  if (!v55)
  {
    sub_1B6D0ACA8();
    swift_allocError();
    *(void *)uint64_t v75 = 0xD000000000000018;
    *(void *)(v75 + 8) = 0x80000001B6F52BF0;
    *(unsigned char *)(v75 + 16) = 0;
    swift_willThrow();

    return;
  }
  uint64_t v52 = v59;
LABEL_93:
  uint64_t v63 = v52;
  uint64_t v64 = 8 * v52;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    id v65 = 0;
  }
  else
  {
    long long v66 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v67 = v55;
    id v65 = &v66[v58];
  }
  uint64_t v108 = v106 * v111;
  size_t v68 = v64;
  CGColorSpaceRef v69 = v112;
  CGContextRef v70 = CGBitmapContextCreateWithData(&v65[v106 * v111], v113, v114, v68, v109, v112, v105, (CGBitmapContextReleaseDataCallback)nullsub_2, 0);
  if (v70)
  {
    uint64_t v71 = v70;
    sub_1B6E32128();
    float v72 = sub_1B6397F04();
    if (v63 == 1 && v104 && v72 == 2.2 && (v56 & 4) == 0 && (v56 & 8) == 0 && (v56 & 0x80) == 0)
    {
      CACurrentMediaTime();
      CGBitmapContext_fixIncorrectPremultiply(v71);
    }
    uint64_t v73 = 10;
    switch((NumberOfComponents - 1) & 0x1FFFFFFFFFFFFFFFLL)
    {
      case 0uLL:
        goto LABEL_113;
      case 1uLL:
        uint64_t v73 = 30;
        goto LABEL_113;
      case 3uLL:
        uint64_t v73 = 70;
        goto LABEL_113;
      case 7uLL:
        if ((BitmapInfo & 0x100) != 0) {
          uint64_t v73 = 115;
        }
        else {
          uint64_t v73 = 110;
        }
LABEL_113:
        *(unsigned char *)(v7 + 24) = 1;
        if (v144 <= 1) {
          uint64_t v77 = 2;
        }
        else {
          uint64_t v77 = 3;
        }
        *(void *)(v7 + 56) = v77;
        if ((v56 & 4) == 0) {
          uint64_t v73 = sub_1B6BBD24C(v73);
        }
        *(void *)(v7 + 48) = v73;
        __int16 v78 = v113;
        *(_WORD *)(v7 + 32) = v113;
        __int16 v79 = v114;
        *(_WORD *)(v7 + 34) = v114;
        *(_WORD *)(v7 + 36) = 1;
        if ((v56 & 0x20) != 0)
        {
          int v80 = *(_DWORD *)(v7 + 38);
          char v81 = *(unsigned char *)(v7 + 42);
          uint64_t v82 = *(void *)(v7 + 96);
          __int16 v119 = v78;
          __int16 v120 = v79;
          __int16 v121 = 1;
          int v122 = v80;
          char v123 = v81;
          uint64_t v124 = v73;
          uint64_t v125 = v77;
          long long v83 = *(_OWORD *)(v7 + 80);
          long long v126 = *(_OWORD *)(v7 + 64);
          long long v127 = v83;
          uint64_t v128 = v82;
          int v129 = *(_DWORD *)(v7 + 104);
        }
        else
        {
          if ((v56 & 0x40) == 0)
          {
            *(unsigned char *)(v7 + 40) = 1;
            goto LABEL_124;
          }
          int v84 = *(_DWORD *)(v7 + 38);
          char v85 = *(unsigned char *)(v7 + 42);
          uint64_t v86 = *(void *)(v7 + 96);
          __int16 v130 = v113;
          __int16 v131 = v114;
          __int16 v132 = 1;
          int v133 = v84;
          char v134 = v85;
          uint64_t v135 = v73;
          uint64_t v136 = v77;
          long long v87 = *(_OWORD *)(v7 + 80);
          long long v137 = *(_OWORD *)(v7 + 64);
          long long v138 = v87;
          uint64_t v139 = v86;
          int v140 = *(_DWORD *)(v7 + 104);
        }
        *(unsigned char *)(v7 + 40) = sub_1B638D61C();
LABEL_124:
        *(unsigned char *)(v7 + 41) = 1;
        uint64_t v88 = v144;
        *(_WORD *)(v7 + 38) = v144;
        *(void *)(v7 + 80) = 0;
        *(void *)(v7 + 96) = 0;
        *(_OWORD *)(v7 + 64) = xmmword_1B6EA0BC0;
        if (v88 < 2)
        {

          swift_unknownObjectRelease();
        }
        else
        {
          sub_1B6389580(v113, v114, &v115);
          long long v114 = v115;
          uint64_t v89 = v116;
          unsigned int v90 = *(char **)(v7 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v90 = sub_1B68C3984(0, *((void *)v90 + 2) + 1, 1, v90);
          }
          unint64_t v92 = *((void *)v90 + 2);
          unint64_t v91 = *((void *)v90 + 3);
          if (v92 >= v91 >> 1) {
            unsigned int v90 = sub_1B68C3984(v91 > 1, v92 + 1, 1, v90);
          }
          *((void *)v90 + 2) = v92 + 1;
          BOOL v93 = &v90[64 * v92];
          size_t v94 = v109;
          *((void *)v93 + 4) = v108;
          *((void *)v93 + 5) = v94;
          *((void *)v93 + 6) = v106;
          *(_OWORD *)(v93 + 56) = v114;
          uint64_t v95 = v111;
          *((void *)v93 + 9) = v89;
          *((void *)v93 + 10) = v95;
          *((void *)v93 + 11) = 0;

          swift_unknownObjectRelease();
          *(void *)(v7 + 112) = v90;
        }
        break;
      default:
        sub_1B6D0ACA8();
        swift_allocError();
        *(_OWORD *)uint64_t v76 = xmmword_1B6EC1B00;
        *(unsigned char *)(v76 + 16) = 0;
        swift_willThrow();

        swift_unknownObjectRelease();
        return;
    }
  }
  else
  {
    sub_1B6D0ACA8();
    swift_allocError();
    *(void *)uint64_t v74 = 0xD000000000000026;
    *(void *)(v74 + 8) = 0x80000001B6F52C10;
    *(unsigned char *)(v74 + 16) = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B628E8B4()
{
  uint64_t v1 = v0[1];
  if (v1)
  {
    uint64_t v2 = v0[3];
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[2];
    uint64_t v15 = *v0;
    uint64_t v16 = v1;
    *(void *)&long long v17 = v4;
    *((void *)&v17 + 1) = v2;
    uint64_t v18 = v3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1B6384424();
    sub_1B6E31948();
    sub_1B6313054((uint64_t)(v0 + 5), (uint64_t)v11, (uint64_t (*)(void))sub_1B6313108);
    sub_1B6313054((uint64_t)v11, (uint64_t)&v19, (uint64_t (*)(void))sub_1B6313108);
    if (*((void *)&v19 + 1))
    {
      long long v12 = v19;
      long long v13 = v20;
      uint64_t v14 = v21;
      sub_1B6384424();
    }
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v0[16];
    uint64_t v6 = v0[19];
    uint64_t v15 = v0[15];
    uint64_t v16 = v5;
    long long v17 = *(_OWORD *)(v0 + 17);
    uint64_t v18 = v6;
    uint64_t v10 = sub_1B6384424();
    sub_1B6E31948();
    sub_1B6313054((uint64_t)(v0 + 5), (uint64_t)v11, (uint64_t (*)(void))sub_1B6313108);
    sub_1B6313054((uint64_t)v11, (uint64_t)&v19, (uint64_t (*)(void))sub_1B6313108);
    if (*((void *)&v19 + 1))
    {
      long long v12 = v19;
      long long v13 = v20;
      uint64_t v14 = v21;
      sub_1B6384424();
    }
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    return v10;
  }
  return v7;
}

uint64_t sub_1B628EAB8()
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB997A18;
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for OldEvent;
  *(void *)(inited + 40) = &off_1F0FA6C00;
  uint64_t v18 = v1;
  int v19 = 0;
  char v20 = 2;
  uint64_t v21 = 0;
  char v22 = 2;
  uint64_t v23 = 0;
  swift_retain();
  sub_1B62F776C(inited, 1, (uint64_t)v8);
  swift_setDeallocating();
  swift_release();
  long long v3 = v8[1];
  *(_OWORD *)(v0 + 16) = v8[0];
  *(_OWORD *)(v0 + 32) = v3;
  *(void *)(v0 + 48) = v9;
  uint64_t v4 = qword_1EB997A18;
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  *(void *)(v5 + 32) = &type metadata for NewEvent;
  *(void *)(v5 + 40) = &off_1F0FA6AD8;
  uint64_t v12 = v4;
  int v13 = 0;
  char v14 = 2;
  uint64_t v15 = 0;
  char v16 = 2;
  uint64_t v17 = 0;
  swift_retain();
  sub_1B62F776C(v5, 1, (uint64_t)v10);
  swift_setDeallocating();
  swift_release();
  long long v6 = v10[1];
  *(_OWORD *)(v0 + 56) = v10[0];
  *(_OWORD *)(v0 + 72) = v6;
  *(void *)(v0 + 88) = v11;
  return v0;
}

uint64_t sub_1B628EC80()
{
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  long long v1 = v0[9];
  long long v24 = v0[8];
  long long v25 = v1;
  long long v26 = v0[10];
  long long v2 = v0[5];
  long long v20 = v0[4];
  long long v21 = v2;
  long long v3 = v0[7];
  long long v22 = v0[6];
  long long v23 = v3;
  long long v4 = v0[1];
  long long v16 = *v0;
  long long v17 = v4;
  long long v5 = v0[3];
  long long v18 = v0[2];
  long long v19 = v5;
  sub_1B628E8B4();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33918();
  sub_1B6E33928();
  *(void *)&long long v10 = sub_1B6E33988();
  sub_1B638491C();
  sub_1B6E31A38();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  long long v6 = *(long long *)((char *)v0 + 232);
  long long v12 = *(long long *)((char *)v0 + 216);
  long long v13 = v6;
  long long v14 = *(long long *)((char *)v0 + 248);
  uint64_t v15 = *((void *)v0 + 33);
  long long v7 = *(long long *)((char *)v0 + 200);
  long long v10 = *(long long *)((char *)v0 + 184);
  long long v11 = v7;
  sub_1B63B6E84();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B62CA210((uint64_t)(v0 + 45), (uint64_t)v9, &qword_1EB97D5E8);
  sub_1B62CA210((uint64_t)v9, (uint64_t)v27, &qword_1EB97D5E8);
  if (v27[1])
  {
    sub_1B6E33918();
    sub_1B6E33928();
    sub_1B6E33988();
    sub_1B6E31A38();
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B62D5798(*((void *)v0 + 22));
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return 0x205D50525BLL;
}

uint64_t sub_1B628EEF4(uint64_t a1, uint64_t a2, signed int a3, char a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *(void *)(v6 + 16);
  uint64_t v12 = *(void *)(v6 + 40);
  char v13 = *(unsigned char *)(v12 + 200);
  uint64_t v35 = *(void *)(*(void *)(v11 + 80) + 8 * a3 + 32);
  swift_retain();
  if ((v13 & 1) != 0 || *(unsigned char *)(v35 + 200) == 1)
  {
    *(unsigned char *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
    uint64_t v12 = *(void *)(v6 + 40);
  }
  uint64_t v14 = *(void *)(v6 + 256);
  sub_1B63B3344(v12, a1, a2, 0, v6);
  uint64_t v33 = *(void *)(v6 + 256);
  uint64_t v15 = v33 - v14;
  if (v33 == v14) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v14;
  }
  uint64_t v45 = v16;
  uint64_t v17 = *(void *)(*(void *)(v6 + 40) + 24);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    char v32 = a4;
    uint64_t v19 = v17 + 32;
    swift_retain();
    for (uint64_t i = 0; i != v18; ++i)
    {
      uint64_t v21 = v19 + 40 * i;
      if ((*(unsigned char *)(v21 + 32) & 1) == 0)
      {
        uint64_t v22 = *(void *)(v35 + 24);
        uint64_t v23 = *(void *)(v22 + 16);
        if (v23)
        {
          long long v24 = (void *)(v22 + 32);
          while (*v24 != *(void *)v21)
          {
            v24 += 5;
            if (!--v23) {
              goto LABEL_9;
            }
          }
        }
        else
        {
LABEL_9:
          sub_1B633B0E8();
        }
      }
    }
    swift_release();
    a4 = v32;
  }
  if (*(void *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 68), *(void *)(v6 + 72) * v15);
  }
  if (*(unsigned char *)(v6 + 184) & 1 | (*(void *)(v6 + 168) == 0)) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = *(void *)(v6 + 168);
  }
  uint64_t v44 = 0;
  uint64_t v26 = swift_retain();
  MEMORY[0x1F4188790](v26, v27);
  int v39 = -1;
  uint64_t v40 = v14;
  uint64_t v41 = v33;
  uint64_t v42 = v14;
  uint64_t v43 = v33;
  uint64_t v36 = v14;
  uint64_t v37 = v33;
  uint64_t v38 = v25;
  if (v15 >= 1)
  {
    char v28 = a4 & 1;
    do
      sub_1B63BA64C(a3, a5 | ((HIDWORD(a5) & 1) << 32), v28, v11, (uint64_t)&v36, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B63B3AA8);
    while (v37 - v36 > 0);
  }
  swift_release();
  uint64_t v29 = *(void *)(v6 + 192);
  if (v29)
  {
    uint64_t v30 = *(void *)(v6 + 208);
    sub_1B62C9D00(v14, v33, v29);
    sub_1B62C9D00(v14, v33, v30);
  }
  return swift_release();
}

unint64_t sub_1B628F248(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C550C((uint64_t)v9, v10);
  uint64_t v3 = sub_1B6E33148();
  uint64_t v5 = v3;
  unsigned __int8 v6 = 1;
  switch(v3)
  {
    case 0:
      break;
    case 1:
      uint64_t v5 = 1;
      break;
    case 2:
      sub_1B62C550C((uint64_t)v9, v10);
      sub_1B6E33138();
      unsigned __int8 v6 = 0;
      uint64_t v5 = v7;
      break;
    case 3:
      uint64_t v5 = 2;
      break;
    default:
      sub_1B62C1550((uint64_t)v9, (uint64_t)v8);
      sub_1B6E32998();
      swift_allocError();
      sub_1B6E32958();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
      swift_willThrow();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v5 | ((unint64_t)v6 << 32);
}

uint64_t sub_1B628F3F4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B6E30F48();
  *(void *)&long long v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  unsigned int v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63965F4(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  char v13 = (char *)v28 - v12;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_1B62C14BC(a1, v14);
  if (sub_1B62BF5E0(2031, v14, v15))
  {
    uint64_t v29 = v7;
    uint64_t v30 = v10;
    uint64_t v38 = v4;
    v28[1] = v2;
    sub_1B62C14BC(a1, a1[3]);
    sub_1B62B1B2C();
    uint64_t v16 = v32;
    uint64_t result = sub_1B6E33A48();
    if (!v16)
    {
      *(void *)&long long v33 = 0;
      BYTE8(v33) = 1;
      *(void *)&long long v34 = 0x7465737361;
      *((void *)&v34 + 1) = 0xE500000000000000;
      sub_1B63BE158();
      uint64_t v18 = v29;
      uint64_t v19 = v38;
      sub_1B6E32DF8();
      uint64_t v20 = sub_1B6E30E58();
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v19);
      sub_1B63AC900(v20, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v9);
    }
  }
  else
  {
    uint64_t v23 = v2;
    sub_1B62C14BC(a1, a1[3]);
    uint64_t v24 = v32;
    uint64_t result = sub_1B6E33A28();
    if (!v24)
    {
      sub_1B62C14BC(v37, v37[3]);
      sub_1B68111DC();
      sub_1B6E33518();
      long long v31 = v34;
      long long v32 = v33;
      uint64_t v25 = v35;
      uint64_t v26 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      long long v27 = v31;
      *(_OWORD *)uint64_t v23 = v32;
      *(_OWORD *)(v23 + 16) = v27;
      *(void *)(v23 + 32) = v25;
      *(void *)(v23 + 40) = v26;
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v37);
    }
  }
  return result;
}

uint64_t sub_1B628F754(void *a1)
{
  sub_1B639600C(0, &qword_1EB9809B8, (uint64_t (*)(void))sub_1B63B53FC, (uint64_t)&type metadata for TextureLoadPolicy.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v17[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B63B53FC();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62BF5E0(2040, v9, v10))
  {
    v17[15] = 0;
    sub_1B63B89C0();
    sub_1B6E32DF8();
    int v11 = v18;
    unsigned int v12 = v18;
  }
  else
  {
    char v24 = 1;
    sub_1B63B89C0();
    sub_1B6E32DF8();
    unsigned int v12 = v25;
    char v22 = 2;
    sub_1B6E32DF8();
    int v11 = v23;
  }
  char v20 = 3;
  sub_1B63B7884();
  sub_1B6E32DF8();
  int v13 = v21;
  char v19 = 4;
  char v15 = sub_1B6E32DA8();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  if (v15) {
    int v16 = 0x1000000;
  }
  else {
    int v16 = 0;
  }
  return v16 | (v13 << 16) | (v11 << 8) | v12;
}

uint64_t sub_1B628FA4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v5 = sub_1B62B6A60();
  uint64_t v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B62B6A68(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B628FB3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v5 = sub_1B62B6A60();
  uint64_t v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B62B6A68(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B628FC2C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v5 = sub_1B62B6A60();
  uint64_t v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B62B6A68(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B628FD1C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v5 = sub_1B62B6A60();
  uint64_t v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B62B6A68(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B628FE0C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v5 = sub_1B62B6A60();
  uint64_t v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B62B6A68(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B628FEFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v43 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v45 = (unsigned __int8 *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6290A98(0, &qword_1EB97E308, &qword_1EB97E300);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  unsigned int v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_1B63BB308(a1);
  if (v13)
  {
    int64_t v14 = 0;
    uint64_t v44 = v13;
    uint64_t v17 = *(void *)(v13 + 64);
    uint64_t v15 = v13 + 64;
    uint64_t v16 = v17;
    uint64_t v18 = 1 << *(unsigned char *)(v15 - 32);
    uint64_t v19 = -1;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    unint64_t v20 = v19 & v16;
    uint64_t v41 = v15;
    int64_t v42 = (unint64_t)(v18 + 63) >> 6;
    int64_t v40 = v42 - 5;
    int64_t v38 = v42 - 1;
    uint64_t v39 = v15 + 40;
    unsigned __int8 v21 = &qword_1EB97E300;
    uint64_t v22 = MEMORY[0x1E4FBB550];
    if ((v19 & v16) == 0) {
      goto LABEL_7;
    }
LABEL_5:
    unint64_t v23 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    int64_t v24 = v14;
    unint64_t v25 = v23 | (v14 << 6);
LABEL_6:
    uint64_t v26 = v44;
    sub_1B63675F4(*(void *)(v44 + 48) + *(void *)(v43 + 72) * v25, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    uint64_t v27 = *(void *)(v26 + 56);
    sub_1B62909A8(0, v21);
    uint64_t v28 = v22;
    uint64_t v29 = v21;
    uint64_t v31 = v30;
    *(void *)&v8[*(int *)(v30 + 48)] = *(void *)(v27 + 8 * v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v8, 0, 1, v30);
    while (1)
    {
      sub_1B6290A28((uint64_t)v8, (uint64_t)v12, &qword_1EB97E308, v29);
      long long v34 = v29;
      sub_1B62909A8(0, v29);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v12, 1, v31) == 1) {
        return swift_release();
      }
      uint64_t v22 = v28;
      uint64_t v35 = v45;
      sub_1B6365FC8((uint64_t)v12, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      sub_1B637FF3C(v35);
      sub_1B63677B8((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      unsigned __int8 v21 = v34;
      int64_t v14 = v24;
      if (v20) {
        goto LABEL_5;
      }
LABEL_7:
      int64_t v24 = v14 + 1;
      if (v14 + 1 >= v42)
      {
        int64_t v24 = v14;
      }
      else
      {
        unint64_t v32 = *(void *)(v41 + 8 * v24);
        if (v32) {
          goto LABEL_9;
        }
        if (v14 + 2 < v42)
        {
          unint64_t v32 = *(void *)(v41 + 8 * (v14 + 2));
          if (v32)
          {
            int64_t v24 = v14 + 2;
LABEL_9:
            unint64_t v20 = (v32 - 1) & v32;
            unint64_t v25 = __clz(__rbit64(v32)) + (v24 << 6);
            goto LABEL_6;
          }
          int64_t v24 = v14 + 2;
          if (v14 + 3 < v42)
          {
            unint64_t v32 = *(void *)(v41 + 8 * (v14 + 3));
            if (v32)
            {
              int64_t v24 = v14 + 3;
              goto LABEL_9;
            }
            int64_t v24 = v14 + 3;
            if (v14 + 4 < v42)
            {
              unint64_t v32 = *(void *)(v41 + 8 * (v14 + 4));
              int64_t v24 = v14 + 4;
              if (v32) {
                goto LABEL_9;
              }
              while (v40 != v14)
              {
                unint64_t v32 = *(void *)(v39 + 8 * v14++);
                if (v32)
                {
                  int64_t v24 = v14 + 4;
                  goto LABEL_9;
                }
              }
              int64_t v24 = v38;
            }
          }
        }
      }
      sub_1B62909A8(0, v21);
      uint64_t v28 = v22;
      uint64_t v29 = v21;
      uint64_t v31 = v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
      unint64_t v20 = 0;
    }
  }
  else
  {
    unint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v47 = 0xD00000000000002BLL;
    unint64_t v48 = 0x80000001B6F4C7B0;
    uint64_t v46 = a1;
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62903E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v45 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (unsigned __int8 *)&v39 - v10;
  sub_1B6290A98(0, &qword_1EB97E308, &qword_1EB97E300);
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v19 = (char *)&v39 - v18;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 48));
  uint64_t v20 = sub_1B6399CE4(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 48));
  if (v20)
  {
    int64_t v21 = 0;
    uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
    uint64_t v23 = -1;
    if (v22 < 64) {
      uint64_t v23 = ~(-1 << v22);
    }
    unint64_t v24 = v23 & *(void *)(v20 + 64);
    uint64_t v48 = v2 + 72;
    uint64_t v49 = v20;
    uint64_t v43 = v20 + 64;
    int64_t v44 = (unint64_t)(v22 + 63) >> 6;
    int64_t v42 = v44 - 5;
    int64_t v40 = v44 - 1;
    uint64_t v41 = v20 + 104;
    uint64_t v46 = v7;
    uint64_t v47 = v2;
    while (!v24)
    {
      int64_t v26 = v21 + 1;
      if (v21 + 1 >= v44)
      {
        int64_t v26 = v21;
      }
      else
      {
        unint64_t v31 = *(void *)(v43 + 8 * v26);
        if (v31) {
          goto LABEL_11;
        }
        if (v21 + 2 < v44)
        {
          unint64_t v31 = *(void *)(v43 + 8 * (v21 + 2));
          if (v31)
          {
            int64_t v26 = v21 + 2;
            goto LABEL_11;
          }
          int64_t v26 = v21 + 2;
          if (v21 + 3 < v44)
          {
            unint64_t v31 = *(void *)(v43 + 8 * (v21 + 3));
            if (v31)
            {
              int64_t v26 = v21 + 3;
LABEL_11:
              unint64_t v24 = (v31 - 1) & v31;
              unint64_t v27 = __clz(__rbit64(v31)) + (v26 << 6);
LABEL_8:
              sub_1B63675F4(*(void *)(v20 + 48) + *(void *)(v45 + 72) * v27, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
              uint64_t v28 = *(void *)(v20 + 56);
              sub_1B62909A8(0, &qword_1EB97E300);
              uint64_t v30 = v29;
              *(void *)&v15[*(int *)(v29 + 48)] = *(void *)(v28 + 8 * v27);
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v15, 0, 1, v29);
              goto LABEL_14;
            }
            int64_t v26 = v21 + 3;
            if (v21 + 4 < v44)
            {
              unint64_t v31 = *(void *)(v43 + 8 * (v21 + 4));
              int64_t v26 = v21 + 4;
              if (v31) {
                goto LABEL_11;
              }
              while (v42 != v21)
              {
                unint64_t v31 = *(void *)(v41 + 8 * v21++);
                if (v31)
                {
                  int64_t v26 = v21 + 4;
                  goto LABEL_11;
                }
              }
              int64_t v26 = v40;
            }
          }
        }
      }
      sub_1B62909A8(0, &qword_1EB97E300);
      uint64_t v30 = v32;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 1, 1, v32);
      unint64_t v24 = 0;
LABEL_14:
      sub_1B6290A28((uint64_t)v15, (uint64_t)v19, &qword_1EB97E308, &qword_1EB97E300);
      sub_1B62909A8(0, &qword_1EB97E300);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v19, 1, v30) == 1) {
        return swift_release();
      }
      uint64_t v33 = *(void *)&v19[*(int *)(v30 + 48)];
      sub_1B6365FC8((uint64_t)v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      uint64_t v34 = v47;
      sub_1B637FF3C(v11);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 48));
      uint64_t v35 = (uint64_t)v46;
      sub_1B63675F4((uint64_t)v11, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      uint64_t v36 = sub_1B6366A74(&v50, v35);
      if (*(unsigned __int8 *)(v37 + 152) != 255) {
        sub_1B6380124(v33);
      }
      ((void (*)(unint64_t *, void))v36)(&v50, 0);
      sub_1B63677B8(v35, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 48));
      sub_1B63677B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      uint64_t v20 = v49;
      int64_t v21 = v26;
    }
    unint64_t v25 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    int64_t v26 = v21;
    unint64_t v27 = v25 | (v21 << 6);
    goto LABEL_8;
  }
  unint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v50 = 0xD00000000000002BLL;
  unint64_t v51 = 0x80000001B6F4C7B0;
  uint64_t v52 = a1;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B62909A8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    type metadata accessor for TextureCache.TextureKey();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1B6290A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B6BCA30C);
}

uint64_t sub_1B6290A28(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1B6290A98(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6290A98(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B62909A8(255, a3);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B6290AF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1 + 552;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_loadOptions);
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR___VFXSceneLoadOptions_colorPixelFormat);
  *(void *)(a1 + 544) = v6;
  *(unsigned char *)(a1 + 552) = v6 == 0;
  sub_1B6382348();
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR___VFXSceneLoadOptions_depthPixelFormat);
  *(void *)(a1 + 560) = v7;
  *(unsigned char *)(a1 + 568) = v7 == 0;
  sub_1B6382348();
  int v8 = *(unsigned __int8 *)(v5 + OBJC_IVAR___VFXSceneLoadOptions_internalPixelFormatDepth);
  if (v8 == 2) {
    char v9 = 2;
  }
  else {
    char v9 = v8 == 1;
  }
  *(unsigned char *)(a1 + 585) = v9;
  sub_1B6382348();
  int v10 = *(unsigned __int8 *)(v5 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering);
  if (v10 != 2)
  {
    *(unsigned char *)(a1 + 536) = (v10 & 1) == 0;
    sub_1B6382348();
    sub_1B6382348();
  }
  *(unsigned char *)(a1 + 600) = *(unsigned char *)(v5 + OBJC_IVAR___VFXSceneLoadOptions_useGammaBlending);
  sub_1B6382348();
  uint64_t v11 = 1;
  if (!*(unsigned char *)(v5 + OBJC_IVAR___VFXSceneLoadOptions_doNotClearRenderOutput)) {
    uint64_t v11 = 2;
  }
  *(void *)(a1 + 576) = v11;
  *(unsigned char *)(v4 + 32) = 0;
  return sub_1B6382348();
}

unint64_t sub_1B6290BF0(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  int v8 = (void *)*v3;
  unint64_t v9 = sub_1B636EC2C(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_release();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD4480();
    goto LABEL_6;
  }
  sub_1B639707C(v13, a3 & 1);
  unint64_t v17 = sub_1B636EC2C(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6396BFC(v9, a2, a1, v14);
}

uint64_t sub_1B6290D0C()
{
  uint64_t v1 = (void *)v0[624];
  uint64_t v2 = (void *)v0[622];
  uint64_t v3 = v0[606];
  uint64_t v4 = v0[603];
  swift_bridgeObjectRetain();
  v0[626] = sub_1B6290DE0(v3, v2, v1, v4);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 2, v0 + 343, sub_1B67980EC, v0 + 242);
}

id sub_1B6290DE0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F352F0]), sel_init);
  uint64_t v77 = a1;
  objc_msgSend(v9, sel_setInputPrimitiveTopology_, *(void *)(a1 + 736));
  if (a2)
  {
    id v10 = objc_msgSend((id)swift_unknownObjectRetain(), sel_functionConstantsDictionary);
    sub_1B62D8F08();
    uint64_t v11 = sub_1B6E314C8();

    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRelease();
    if (v12
      && (sub_1B67A2C0C(v77 + 176, (uint64_t)v87, &qword_1E9DD0018, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant), sub_1B67A2C0C((uint64_t)v87, (uint64_t)&v88, &qword_1E9DD0018, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant), v88))
    {
      __dst[0] = sub_1B62DADA8(v88);
      sub_1B638491C();
      sub_1B6E31A38();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  if (a3)
  {
    id v13 = objc_msgSend((id)swift_unknownObjectRetain(), sel_functionConstantsDictionary);
    sub_1B62D8F08();
    uint64_t v14 = sub_1B6E314C8();

    uint64_t v15 = *(void *)(v14 + 16);
    swift_bridgeObjectRelease();
    if (v15
      && (sub_1B67A2C0C(v77 + 176, (uint64_t)v86, &qword_1E9DD0018, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant), sub_1B67A2C0C((uint64_t)v86, (uint64_t)&v89, &qword_1E9DD0018, &qword_1EB980250, (uint64_t)&type metadata for FunctionConstant), v89))
    {
      __dst[0] = sub_1B62DADA8(v89);
      sub_1B638491C();
      sub_1B6E31A38();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  objc_msgSend(v9, sel_setVertexFunction_, a2);
  objc_msgSend(v9, sel_setFragmentFunction_, a3);
  id v16 = objc_msgSend(v9, sel_fragmentLinkedFunctions);
  uint64_t v75 = a3;
  uint64_t v76 = v4;
  uint64_t v74 = a2;
  if (a4)
  {
    sub_1B62F3064(0, (unint64_t *)&unk_1EB9804C0);
    unint64_t v17 = (void *)sub_1B6E31C18();
  }
  else
  {
    unint64_t v17 = 0;
  }
  objc_msgSend(v16, sel_setPrivateFunctions_, v17);

  uint64_t v19 = *(void *)(v77 + 184);
  uint64_t v18 = *(void *)(v77 + 192);
  uint64_t v21 = *(void *)(v77 + 200);
  uint64_t v20 = *(void *)(v77 + 208);
  uint64_t v71 = *(void *)(v77 + 216);
  uint64_t v72 = *(void *)(v77 + 224);
  uint64_t v73 = *(void *)(v77 + 232);
  uint64_t v78 = *(void *)(v77 + 240);
  uint64_t v79 = *(void *)(v77 + 248);
  uint64_t v81 = *(void *)(v77 + 256);
  objc_msgSend(v9, sel_setRasterSampleCount_, *(void *)(v77 + 264));
  id v22 = objc_msgSend(v9, sel_colorAttachments);
  id v80 = v9;
  id v23 = objc_msgSend(v22, sel_objectAtIndexedSubscript_, 0);

  objc_msgSend(v23, sel_setPixelFormat_, v19);
  unint64_t v24 = v80;
  id v25 = objc_msgSend(v80, sel_colorAttachments);
  id v26 = objc_msgSend(v25, sel_objectAtIndexedSubscript_, 1);

  objc_msgSend(v26, sel_setPixelFormat_, v18);
  id v27 = objc_msgSend(v80, sel_colorAttachments);
  id v28 = objc_msgSend(v27, sel_objectAtIndexedSubscript_, 2);

  objc_msgSend(v28, sel_setPixelFormat_, v21);
  id v29 = objc_msgSend(v80, sel_colorAttachments);
  id v30 = objc_msgSend(v29, sel_objectAtIndexedSubscript_, 3);

  objc_msgSend(v30, sel_setPixelFormat_, v20);
  id v31 = objc_msgSend(v80, sel_colorAttachments);
  id v32 = objc_msgSend(v31, sel_objectAtIndexedSubscript_, 4);

  objc_msgSend(v32, sel_setPixelFormat_, v71);
  id v33 = objc_msgSend(v80, sel_colorAttachments);
  id v34 = objc_msgSend(v33, sel_objectAtIndexedSubscript_, 5);

  objc_msgSend(v34, sel_setPixelFormat_, v72);
  id v35 = objc_msgSend(v80, sel_colorAttachments);
  id v36 = objc_msgSend(v35, sel_objectAtIndexedSubscript_, 6);

  objc_msgSend(v36, sel_setPixelFormat_, v73);
  id v37 = objc_msgSend(v80, sel_colorAttachments);
  id v38 = objc_msgSend(v37, sel_objectAtIndexedSubscript_, 7);

  objc_msgSend(v38, sel_setPixelFormat_, v78);
  objc_msgSend(v80, sel_setDepthAttachmentPixelFormat_, v79);
  objc_msgSend(v80, sel_setStencilAttachmentPixelFormat_, v81);
  memcpy(__dst, (const void *)(v77 + 272), 0x1B9uLL);
  uint64_t v39 = 0;
  int64_t v40 = &v83[3];
  do
  {
    memcpy(v83, __dst, 0x1B9uLL);
    uint64_t v42 = *(v40 - 3);
    uint64_t v41 = *(v40 - 2);
    uint64_t v44 = *(v40 - 1);
    uint64_t v43 = *v40;
    uint64_t v46 = v40[1];
    uint64_t v45 = v40[2];
    uint64_t v82 = *((unsigned __int8 *)v40 + 24);
    id v47 = objc_msgSend(v24, sel_colorAttachments);
    id v48 = objc_msgSend(v47, sel_objectAtIndexedSubscript_, v39);

    if (v44 == 1
      && ((v49.i64[0] = v42,
           v49.i64[1] = v41,
           v50.i64[0] = v46,
           v50.i64[1] = v45,
           (vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1B6E50330, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(v50, (int64x2_t)xmmword_1B6E50D30), (int32x4_t)vceqzq_s64(v49)))) & 0xF) == 0)? (BOOL v51 = v43 == 0): (BOOL v51 = 0), v51))
    {
      objc_msgSend(v48, sel_setBlendingEnabled_, 0);
    }
    else
    {
      objc_msgSend(v48, sel_setBlendingEnabled_, 1);
      objc_msgSend(v48, sel_setSourceRGBBlendFactor_, v44);
      objc_msgSend(v48, sel_setDestinationRGBBlendFactor_, v43);
      objc_msgSend(v48, sel_setSourceAlphaBlendFactor_, v46);
      objc_msgSend(v48, sel_setDestinationAlphaBlendFactor_, v45);
      objc_msgSend(v48, sel_setRgbBlendOperation_, v42);
      objc_msgSend(v48, sel_setAlphaBlendOperation_, v41);
    }
    ++v39;
    v40 += 7;
    objc_msgSend(v48, sel_setWriteMask_, v82);

    unint64_t v24 = v80;
  }
  while (v39 != 8);
  objc_msgSend(v80, sel_setRasterizationEnabled_, *(unsigned __int8 *)(v77 + 792));
  unint64_t v52 = *(unsigned __int8 *)(v77 + 793);
  if (v52 >= 2
    && objc_msgSend(*(id *)(v76 + 16), sel_supportsVertexAmplificationCount_, *(unsigned __int8 *)(v77 + 793)))
  {
    objc_msgSend(v80, sel_setMaxVertexAmplificationCount_, v52);
  }
  uint64_t v53 = *(void *)(v77 + 728);
  if (v53)
  {
    uint64_t v54 = *(void *)(v77 + 720);
    id v55 = objc_allocWithZone(MEMORY[0x1E4F35358]);
    swift_retain();
    id v56 = objc_msgSend(v55, sel_init);
    sub_1B6A51D54(v56, v54, v53);
    objc_msgSend(v80, sel_setVertexDescriptor_, v56);
    swift_release();
  }
  uint64_t v57 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(v77 + 744, (uint64_t)v84, &qword_1EB97F6C8, (uint64_t)&type metadata for TesselationDescriptor, MEMORY[0x1E4FBB718]);
  sub_1B6312FE4((uint64_t)v84, (uint64_t)v83, &qword_1EB97F6C8, (uint64_t)&type metadata for TesselationDescriptor, v57);
  char v58 = v83[2];
  if (LOBYTE(v83[2]) != 2)
  {
    uint64_t v59 = v83[0];
    uint64_t v60 = v83[1];
    uint64_t v61 = v83[3];
    uint64_t v62 = v83[4];
    uint64_t v63 = v83[5];
    objc_msgSend(v80, sel_setTessellationFactorFormat_, 0);
    objc_msgSend(v80, sel_setTessellationPartitionMode_, v59);
    objc_msgSend(v80, sel_setMaxTessellationFactor_, v60);
    objc_msgSend(v80, sel_setTessellationFactorScaleEnabled_, v58 & 1);
    objc_msgSend(v80, sel_setTessellationControlPointIndexType_, v61);
    objc_msgSend(v80, sel_setTessellationFactorStepFunction_, v62);
    objc_msgSend(v80, sel_setTessellationOutputWindingOrder_, v63);
  }
  id v64 = objc_msgSend(v74, sel_name);
  sub_1B6E31798();

  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (v75)
  {
    id v65 = objc_msgSend(v75, sel_name);
    sub_1B6E31798();
  }
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v66 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  objc_msgSend(v80, sel_setLabel_, v66);

  unint64_t v67 = *(void *)(v76 + 152);
  if (v67 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (!v70) {
      return v80;
    }
    goto LABEL_35;
  }
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_35:
    sub_1B62F3064(0, &qword_1E9DCFF70);
    swift_bridgeObjectRetain();
    size_t v68 = (void *)sub_1B6E31C18();
    swift_bridgeObjectRelease();
    objc_msgSend(v80, sel_setBinaryArchives_, v68);
  }
  return v80;
}

uint64_t sub_1B62918A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6291938(uint64_t a1)
{
  return sub_1B6AB401C(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1B6291944()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1B629196C(uint64_t a1)
{
  return sub_1B6291990(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1B6291990(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v11 = 0;
  sched_param v10 = 0;
  uint64_t v6 = pthread_self();
  pthread_getschedparam(v6, &v11, &v10);
  if ((a2 & 0x100000000) != 0 || v11 == 2) {
    return a3(a1);
  }
  uint64_t v7 = pthread_self();
  started = pthread_override_qos_class_start_np(v7, (qos_class_t)a2, 0);
  uint64_t result = a3(a1);
  if (started) {
    return pthread_override_qos_class_end_np(started);
  }
  return result;
}

uint64_t sub_1B6291A5C(uint64_t a1)
{
  return sub_1B62FD444(a1, *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void *sub_1B6291A90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B62E190C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6291ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F9218(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for AmbientLight;
  *(void *)(inited + 40) = &off_1F0F58F60;
  *(void *)(inited + 48) = &type metadata for Color;
  *(void *)(inited + 56) = &off_1F0F9ED50;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 2;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 2;
  *(_WORD *)(v12 + 32) = 771;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  id v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B6291CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for SpotLight;
  *(void *)(inited + 40) = &off_1F0FA9D60;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  *(void *)(inited + 64) = &type metadata for Color;
  *(void *)(inited + 72) = &off_1F0F9ED50;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  id v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B6291F14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for DirectionalLight;
  *(void *)(inited + 40) = &off_1F0F6BC38;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  *(void *)(inited + 64) = &type metadata for Color;
  *(void *)(inited + 72) = &off_1F0F9ED50;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  id v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B629214C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for PointLight;
  *(void *)(inited + 40) = &off_1F0F536F0;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  *(void *)(inited + 64) = &type metadata for Color;
  *(void *)(inited + 72) = &off_1F0F9ED50;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  id v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

float sub_1B6292384(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1) {
    goto LABEL_8;
  }
  sub_1B62C550C((uint64_t)v7, v8);
  if ((unint64_t)sub_1B6E33148() >= 4)
  {
    sub_1B62C1550((uint64_t)v7, (uint64_t)v6);
    sub_1B6E32998();
    swift_allocError();
    sub_1B6E32958();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
LABEL_8:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v2;
  }
  sub_1B62C550C((uint64_t)v7, v8);
  sub_1B6E33138();
  float v2 = v4;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B62924F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  sub_1B62B5820();
  MEMORY[0x1F4188790](v3 - 8, v4);
  id v34 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62BAC28(0, &qword_1EB980A00, (uint64_t (*)(void))sub_1B63B20D8, (uint64_t)&type metadata for GraphScriptingConfig.ScriptInfo.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  unint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  unint64_t v15 = sub_1B639A2D4(MEMORY[0x1E4FBC860]);
  *((void *)v14 + 3) = 0;
  *((void *)v14 + 2) = v15;
  *((void *)v14 + 4) = 0;
  *((_WORD *)v14 + 20) = 1;
  uint64_t v16 = (uint64_t)&v14[v11[12]];
  uint64_t v17 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)&v14[v11[13]] = 0;
  int v18 = &v14[v11[14]];
  *(void *)int v18 = 0;
  v18[8] = 1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B63B20D8();
  char v19 = v37;
  sub_1B6E33A48();
  if (!v19)
  {
    uint64_t v32 = v16;
    id v37 = a1;
    sub_1B62D85D4(0, &qword_1EB980260, (uint64_t)&type metadata for GraphScriptingConfig.ScriptArg, MEMORY[0x1E4FBB320]);
    char v38 = 1;
    sub_1B639994C();
    uint64_t v20 = v36;
    sub_1B6E32D78();
    *((void *)v14 + 3) = v39;
    char v38 = 2;
    sub_1B6E32D78();
    *((void *)v14 + 4) = v39;
    LOBYTE(v39) = 3;
    sub_1B62BAC90(&qword_1EB97D9B8, MEMORY[0x1E4F27990]);
    uint64_t v21 = (uint64_t)v34;
    sub_1B6E32D78();
    uint64_t v23 = v9;
    uint64_t v24 = v20;
    sub_1B63BDCC4(v21, v32);
    a1 = v37;
    uint64_t v26 = v37[3];
    uint64_t v25 = v37[4];
    sub_1B62C14BC(v37, v26);
    BOOL v27 = sub_1B62BF5E0(2010, v26, v25);
    uint64_t v28 = v35;
    if (v27)
    {
      sub_1B6879144(0, &qword_1E9DD1780, (uint64_t (*)(uint64_t))_s11MetadataSetCMa, MEMORY[0x1E4FBAEA0]);
      char v38 = 0;
      sub_1B687B9AC();
    }
    else
    {
      sub_1B63B9EA0();
      char v38 = 0;
      sub_1B62BAC90(&qword_1EB981050, (void (*)(uint64_t))sub_1B63B9EA0);
    }
    sub_1B6E32DF8();
    uint64_t v29 = v33;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v24);
    uint64_t v30 = v39;
    swift_bridgeObjectRelease();
    *((void *)v14 + 2) = v30;
    sub_1B6366C08((uint64_t)v14, v29, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B62BFF14((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
}

void *sub_1B6292A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = sub_1B62BAA04(MEMORY[0x1E4FBC860]);
  uint64_t v4 = sub_1B62BAA04(v2);
  uint64_t v5 = sub_1B62BAB24(v2);
  uint64_t v6 = sub_1B62BAB24(v2);
  uint64_t result = sub_1B62BAA04(v2);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = 1;
  return result;
}

uint64_t sub_1B6292AB0(uint64_t a1)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  v7[5] = qword_1EB997A18;
  int v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  char v11 = 2;
  uint64_t v12 = 0;
  swift_retain();
  sub_1B62A068C(1, (uint64_t)v7);
  swift_release();
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v3 = sub_1B62B6A60();
  uint64_t v4 = v7[0];
  uint64_t v5 = *(os_unfair_lock_s **)(v2 + 40);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v3, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 40));
  sub_1B62CA064((uint64_t)v7);
  sub_1B62CA064((uint64_t)v7);
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B6292C1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TextureCache.TextureKey();
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  char v11 = (unsigned __int8 *)&v22 - v10;
  sub_1B63675F4(a1, (uint64_t)&v22 - v10, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = (void *)*v2;
  uint64_t v13 = v23;
  *uint64_t v2 = 0x8000000000000000;
  unint64_t v14 = sub_1B6367070(v11);
  char v16 = v15;
  uint64_t v17 = v13[2] + ((v15 & 1) == 0);
  if (v13[3] >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6AD60D4();
      uint64_t v13 = v23;
    }
  }
  else
  {
    sub_1B6397374(v17, isUniquelyReferenced_nonNull_native);
    uint64_t v13 = v23;
    unint64_t v18 = sub_1B6367070(v11);
    if ((v16 & 1) != (v19 & 1))
    {
      uint64_t result = sub_1B6E33838();
      __break(1u);
      return result;
    }
    unint64_t v14 = v18;
  }
  *uint64_t v2 = v13;
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)*v2;
  if ((v16 & 1) == 0)
  {
    sub_1B63675F4((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    sub_1B6396B50(v14, (uint64_t)v7, 0, v20);
  }
  ++*(void *)(v20[7] + 8 * v14);
  return sub_1B63677B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
}

uint64_t sub_1B6292DF8()
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_1EB997A18;
  int v41 = 0;
  char v42 = 2;
  uint64_t v43 = 0;
  char v44 = 2;
  uint64_t v45 = 0;
  swift_retain();
  sub_1B63AC4F0(1, (uint64_t)v10);
  swift_release();
  sub_1B63B1FDC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for CurveRuntime;
  *(void *)(inited + 40) = &off_1F0F596D8;
  sub_1B62AD184(v11);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v10);
  long long v2 = v11[1];
  *(_OWORD *)(v0 + 16) = v11[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v12;
  uint64_t v34 = qword_1EB997A18;
  int v35 = 0;
  char v36 = 2;
  uint64_t v37 = 0;
  char v38 = 2;
  uint64_t v39 = 0;
  swift_retain();
  sub_1B63ABC5C(1, (uint64_t)v13);
  swift_release();
  long long v3 = v13[1];
  *(_OWORD *)(v0 + 56) = v13[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(void *)(v0 + 88) = v14;
  uint64_t v28 = qword_1EB997A18;
  int v29 = 0;
  char v30 = 2;
  uint64_t v31 = 0;
  char v32 = 2;
  uint64_t v33 = 0;
  swift_retain();
  sub_1B629307C(1, 1, (uint64_t)v15);
  swift_release();
  long long v4 = v15[1];
  *(_OWORD *)(v0 + 96) = v15[0];
  *(_OWORD *)(v0 + 112) = v4;
  *(void *)(v0 + 128) = v16;
  uint64_t v22 = qword_1EB997A18;
  int v23 = 0;
  char v24 = 2;
  uint64_t v25 = 0;
  char v26 = 2;
  uint64_t v27 = 0;
  swift_retain();
  sub_1B629307C(1, 1, (uint64_t)&v17);
  swift_release();
  int v5 = v18;
  char v6 = v19;
  uint64_t v7 = v21;
  uint64_t v8 = v20 | 4;
  *(void *)(v0 + 136) = v17;
  *(_DWORD *)(v0 + 144) = v5;
  *(unsigned char *)(v0 + 148) = v6;
  *(void *)(v0 + 152) = v8;
  *(unsigned char *)(v0 + 160) = 2;
  *(void *)(v0 + 168) = v7;
  return v0;
}

uint64_t sub_1B629307C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  long long v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for CurveComponent;
  *(void *)(inited + 40) = &off_1F0F63698;
  *(void *)(inited + 48) = &type metadata for CurveRuntime;
  *(void *)(inited + 56) = &off_1F0F596D8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  int v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B62932D0()
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_1EB997A18;
  int v23 = 0;
  char v24 = 2;
  uint64_t v25 = 0;
  char v26 = 2;
  uint64_t v27 = 0;
  swift_retain();
  sub_1B62934B4(1, 1, (uint64_t)v8);
  swift_release();
  sub_1B638C1B8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for TextureCPURuntime;
  *(void *)(inited + 40) = &off_1F0F74A98;
  sub_1B62AD184(v9);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v8);
  long long v2 = v9[1];
  *(_OWORD *)(v0 + 16) = v9[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v10;
  uint64_t v16 = qword_1EB997A18;
  int v17 = 0;
  char v18 = 2;
  uint64_t v19 = 0;
  char v20 = 2;
  uint64_t v21 = 0;
  swift_retain();
  sub_1B62934B4(1, 1, (uint64_t)&v11);
  swift_release();
  int v3 = v12;
  char v4 = v13;
  uint64_t v5 = v15;
  uint64_t v6 = v14 | 4;
  *(void *)(v0 + 56) = v11;
  *(_DWORD *)(v0 + 64) = v3;
  *(unsigned char *)(v0 + 68) = v4;
  *(void *)(v0 + 72) = v6;
  *(unsigned char *)(v0 + 80) = 2;
  *(void *)(v0 + 88) = v5;
  return v0;
}

uint64_t sub_1B62934B4@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for TextureGPURuntime;
  *(void *)(inited + 40) = &off_1F0F74BD8;
  *(void *)(inited + 48) = &type metadata for TextureRequireCPURepresentation;
  *(void *)(inited + 56) = &off_1F0F9AED8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  char v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  char v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6293708()
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_1EB997A18;
  int v41 = 0;
  char v42 = 2;
  uint64_t v43 = 0;
  char v44 = 2;
  uint64_t v45 = 0;
  swift_retain();
  sub_1B63A9C44(1, (uint64_t)v10);
  swift_release();
  long long v1 = v10[1];
  *(_OWORD *)(v0 + 16) = v10[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = v11;
  uint64_t v34 = qword_1EB997A18;
  int v35 = 0;
  char v36 = 2;
  uint64_t v37 = 0;
  char v38 = 2;
  uint64_t v39 = 0;
  swift_retain();
  sub_1B63AC0E0(1, (uint64_t)v12);
  swift_release();
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ColorRampRuntime;
  *(void *)(inited + 40) = &off_1F0F6B7D8;
  sub_1B62AD184(v13);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v12);
  long long v3 = v13[1];
  *(_OWORD *)(v0 + 56) = v13[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(void *)(v0 + 88) = v14;
  uint64_t v28 = qword_1EB997A18;
  int v29 = 0;
  char v30 = 2;
  uint64_t v31 = 0;
  char v32 = 2;
  uint64_t v33 = 0;
  swift_retain();
  sub_1B6293958(1, 1, (uint64_t)v15);
  swift_release();
  long long v4 = v15[1];
  *(_OWORD *)(v0 + 96) = v15[0];
  *(_OWORD *)(v0 + 112) = v4;
  *(void *)(v0 + 128) = v16;
  uint64_t v22 = qword_1EB997A18;
  int v23 = 0;
  char v24 = 2;
  uint64_t v25 = 0;
  char v26 = 2;
  uint64_t v27 = 0;
  swift_retain();
  sub_1B6293958(1, 1, (uint64_t)&v17);
  swift_release();
  int v5 = v18;
  char v6 = v19;
  uint64_t v7 = v21;
  uint64_t v8 = v20 | 4;
  *(void *)(v0 + 136) = v17;
  *(_DWORD *)(v0 + 144) = v5;
  *(unsigned char *)(v0 + 148) = v6;
  *(void *)(v0 + 152) = v8;
  *(unsigned char *)(v0 + 160) = 2;
  *(void *)(v0 + 168) = v7;
  return v0;
}

uint64_t sub_1B6293958@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  long long v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ColorRampComponent;
  *(void *)(inited + 40) = &off_1F0F75B48;
  *(void *)(inited + 48) = &type metadata for ColorRampRuntime;
  *(void *)(inited + 56) = &off_1F0F6B7D8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  int v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6293BAC(uint64_t a1)
{
  long long v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1B6293C0C(uint64_t a1)
{
  sub_1B6293C14(a1, v1);
}

void sub_1B6293C14(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a2 + 352));
  uint64_t v3 = swift_unknownObjectRetain();
  sub_1B6293C80(v3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  long long v4 = *(os_unfair_lock_s **)(a2 + 352);

  os_unfair_lock_unlock(v4);
}

uint64_t sub_1B6293C80(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v4 = sub_1B6E33988();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = ~v5;
  while (*(void *)(*(void *)(v3 + 48) + 8 * v6) != a1)
  {
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return 0;
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v12 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1B67F10B4();
    uint64_t v10 = v12;
  }
  uint64_t v8 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_1B6293D94(v6);
  *uint64_t v1 = v12;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1B6293D94(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33928();
        unint64_t v10 = sub_1B6E33988() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v2);
          uint64_t v13 = (void *)(v11 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  --*(void *)(v3 + 16);
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_1B6293F38()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

uint64_t sub_1B6293F7C()
{
  return sub_1B62F23EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B6293F88()
{
  return sub_1B6E32308();
}

void sub_1B6293FAC(void *a1)
{
  objc_msgSend(a1, sel_presentedTime);

  prof_commit();
}

id sub_1B6293FDC(uint64_t a1)
{
  return sub_1B6293FE4(a1, *(void **)(v1 + 16));
}

id sub_1B6293FE4(uint64_t a1, void *a2)
{
  v5[4] = sub_1B6293FAC;
  v5[5] = 0;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1B638F0B8;
  v5[3] = &unk_1F0FB7FF8;
  uint64_t v3 = _Block_copy(v5);
  swift_release();
  objc_msgSend(a2, sel_addPresentedHandler_, v3);
  _Block_release(v3);
  prof_commit();
  return objc_msgSend(a2, sel_present);
}

uint64_t sub_1B62940A8()
{
  uint64_t v1 = v0[51];
  swift_bridgeObjectRelease();
  sub_1B6384640((uint64_t)(v0 + 26), (uint64_t)(v0 + 40));
  sub_1B62D8C10((uint64_t)(v0 + 40));
  swift_unknownObjectRelease();
  v0[39] = v0[28];
  sub_1B62D8C3C((uint64_t)(v0 + 39));
  uint64_t v2 = (void *)v0[43];
  swift_bridgeObjectRelease();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1B629416C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ParticleSubSpawn;
  *(void *)(inited + 40) = &off_1F0F6EB40;
  *(void *)(inited + 48) = &type metadata for ParticleSubSpawn.State;
  *(void *)(inited + 56) = &off_1F0F6E968;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  int v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B62943C0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for PointCacheGenerator;
  *(void *)(inited + 40) = &off_1F0F7E730;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  unint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  int v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  int v22 = v3[4];
  char v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B62945C8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleSubSpawn.State;
  *(void *)(inited + 40) = &off_1F0F6E968;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  unint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  int v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  int v22 = v3[4];
  char v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B62947D0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for TextureGPURuntime;
  *(void *)(inited + 40) = &off_1F0F74BD8;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  unint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  int v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  int v22 = v3[4];
  char v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B62949D8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Material;
  *(void *)(inited + 40) = &off_1F0FA6678;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  unint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  int v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  int v22 = v3[4];
  char v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B6294BE0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleSubSpawn;
  *(void *)(inited + 40) = &off_1F0F6EB40;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  unint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  int v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  int v22 = v3[4];
  char v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B6294DE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = *(void *)(v2 + 96);
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6294FD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295138(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = *(void *)(v2 + 96);
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295324(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295488(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B62955EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295750(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B62958B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = *(void *)(v2 + 96);
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295AA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295C04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295D68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B6295ECC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 176);
  swift_retain();
  sub_1B636E270((uint64_t)&type metadata for MeshRenderSystemState, (uint64_t)&off_1F0F87F80, v2);
  swift_release();
  if (qword_1EB97EC68 != -1) {
    swift_once();
  }
  uint64_t v3 = xmmword_1EB997C70;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v5 = sub_1B62B6A60();
  uint64_t v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B62B6A68(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  if (qword_1EB97EC70 != -1) {
    swift_once();
  }
  uint64_t v7 = xmmword_1EB997C98;
  swift_getObjectType();
  uint64_t v8 = sub_1B62B6A60();
  uint64_t v9 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v9);
  sub_1B62B6A68(a1, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v8, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B62960E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B629624C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = *(void *)(v2 + 56);
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B62963B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1B62B2CE0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B6ACBB08();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1B6296480(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1B6296480(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1B6E33918();
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        uint64_t v9 = sub_1B6E33988();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  --*(void *)(a2 + 16);
  ++*(_DWORD *)(a2 + 36);
  return result;
}

uint64_t sub_1B6296650()
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1EB997A18;
  int v28 = 0;
  char v29 = 2;
  uint64_t v30 = 0;
  char v31 = 2;
  uint64_t v32 = 0;
  swift_retain();
  sub_1B629416C(1, 2, (uint64_t)v7);
  swift_release();
  long long v1 = v7[1];
  *(_OWORD *)(v0 + 16) = v7[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = v8;
  uint64_t v21 = qword_1EB997A18;
  int v22 = 0;
  char v23 = 2;
  uint64_t v24 = 0;
  char v25 = 2;
  uint64_t v26 = 0;
  swift_retain();
  sub_1B6294BE0(1, (uint64_t)v9);
  swift_release();
  sub_1B62F6E70(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleSubSpawn.State;
  *(void *)(inited + 40) = &off_1F0F6E968;
  sub_1B62AD184(v10);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v9);
  long long v3 = v10[1];
  *(_OWORD *)(v0 + 56) = v10[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(void *)(v0 + 88) = v11;
  uint64_t v15 = qword_1EB997A18;
  int v16 = 0;
  char v17 = 2;
  uint64_t v18 = 0;
  char v19 = 2;
  uint64_t v20 = 0;
  swift_retain();
  sub_1B62945C8(1, (uint64_t)v12);
  swift_release();
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  *(void *)(v4 + 32) = &type metadata for ParticleSubSpawn;
  *(void *)(v4 + 40) = &off_1F0F6EB40;
  sub_1B62AD184(v13);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v12);
  long long v5 = v13[1];
  *(_OWORD *)(v0 + 96) = v13[0];
  *(_OWORD *)(v0 + 112) = v5;
  *(void *)(v0 + 128) = v14;
  return v0;
}

uint64_t sub_1B62968C0()
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_1EB997A18;
  int v35 = 0;
  char v36 = 2;
  uint64_t v37 = 0;
  char v38 = 2;
  uint64_t v39 = 0;
  swift_retain();
  sub_1B63A9864(1, (uint64_t)v14);
  swift_release();
  sub_1B638C1B8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for TextureRequireCPURepresentation;
  *(void *)(inited + 40) = &off_1F0F9AED8;
  sub_1B62AD184(&v15);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v14);
  int v2 = v16;
  char v3 = v17;
  char v4 = v19;
  uint64_t v5 = v20;
  uint64_t v6 = v18 | 0x20;
  *(void *)(v0 + 16) = v15;
  *(_DWORD *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 28) = v3;
  *(void *)(v0 + 32) = v6;
  *(unsigned char *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  uint64_t v28 = qword_1EB997A18;
  int v29 = 0;
  char v30 = 2;
  uint64_t v31 = 0;
  char v32 = 2;
  uint64_t v33 = 0;
  swift_retain();
  sub_1B62947D0(1, (uint64_t)v21);
  swift_release();
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = &type metadata for TextureRequireGPURepresentation;
  *(void *)(v7 + 40) = &off_1F0F9AFB0;
  sub_1B62AD184(&v22);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v21);
  int v8 = v23;
  char v9 = v24;
  char v10 = v26;
  uint64_t v11 = v27;
  uint64_t v12 = v25 | 0x20;
  *(void *)(v0 + 56) = v22;
  *(_DWORD *)(v0 + 64) = v8;
  *(unsigned char *)(v0 + 68) = v9;
  *(void *)(v0 + 72) = v12;
  *(unsigned char *)(v0 + 80) = v10;
  *(void *)(v0 + 88) = v11;
  return v0;
}

uint64_t sub_1B6296B18()
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_1EB997A18;
  int v37 = 0;
  char v38 = 2;
  uint64_t v39 = 0;
  char v40 = 2;
  uint64_t v41 = 0;
  swift_retain();
  sub_1B63A158C((uint64_t)v8);
  swift_release();
  long long v1 = v8[1];
  *(_OWORD *)(v0 + 16) = v8[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = v9;
  uint64_t v30 = qword_1EB997A18;
  int v31 = 0;
  char v32 = 2;
  uint64_t v33 = 0;
  char v34 = 2;
  uint64_t v35 = 0;
  swift_retain();
  sub_1B63A6848((uint64_t)v10);
  swift_release();
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for LODState;
  *(void *)(inited + 40) = &off_1F0FA4738;
  sub_1B62AD184(v11);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v10);
  long long v3 = v11[1];
  *(_OWORD *)(v0 + 56) = v11[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(void *)(v0 + 88) = v12;
  uint64_t v24 = qword_1EB997A18;
  int v25 = 0;
  char v26 = 2;
  uint64_t v27 = 0;
  char v28 = 2;
  uint64_t v29 = 0;
  swift_retain();
  sub_1B639F4B0(1, 1, 2, 2, (uint64_t)v13);
  swift_release();
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  *(void *)(v4 + 32) = &type metadata for Parent;
  *(void *)(v4 + 40) = &off_1F0FA04A8;
  sub_1B62AD184(v14);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v13);
  long long v5 = v14[1];
  *(_OWORD *)(v0 + 96) = v14[0];
  *(_OWORD *)(v0 + 112) = v5;
  *(void *)(v0 + 128) = v15;
  uint64_t v18 = qword_1EB997A18;
  int v19 = 0;
  char v20 = 2;
  uint64_t v21 = 0;
  char v22 = 2;
  uint64_t v23 = 0;
  swift_retain();
  sub_1B639EB5C(1, 1, 2, 2, 1, (uint64_t)v16);
  swift_release();
  long long v6 = v16[1];
  *(_OWORD *)(v0 + 136) = v16[0];
  *(_OWORD *)(v0 + 152) = v6;
  *(void *)(v0 + 168) = v17;
  return v0;
}

uint64_t sub_1B6296DBC()
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_1EB997A18;
  int v19 = 0;
  char v20 = 2;
  uint64_t v21 = 0;
  char v22 = 2;
  uint64_t v23 = 0;
  swift_retain();
  sub_1B63A0488((uint64_t)v6);
  swift_release();
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for WorldAABB;
  *(void *)(inited + 40) = &off_1F0FAABA0;
  sub_1B62AD184(v7);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v6);
  long long v2 = v7[1];
  *(_OWORD *)(v0 + 16) = v7[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v8;
  uint64_t v12 = qword_1EB997A18;
  int v13 = 0;
  char v14 = 2;
  uint64_t v15 = 0;
  char v16 = 2;
  uint64_t v17 = 0;
  swift_retain();
  sub_1B639F948(1, 1, 2, (uint64_t)v9);
  swift_release();
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  *(void *)(v3 + 32) = &type metadata for Fixed;
  *(void *)(v3 + 40) = &off_1F0F9F050;
  sub_1B62AD184(v10);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v9);
  long long v4 = v10[1];
  *(_OWORD *)(v0 + 56) = v10[0];
  *(_OWORD *)(v0 + 72) = v4;
  *(void *)(v0 + 88) = v11;
  return v0;
}

uint64_t sub_1B6296FC0()
{
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v65 = qword_1EB997A18;
  int v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  char v69 = 2;
  uint64_t v70 = 0;
  swift_retain();
  sub_1B6291F14((uint64_t)v12);
  swift_release();
  sub_1B62F93A4(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Shadow;
  *(void *)(inited + 40) = &off_1F0FA1928;
  sub_1B62AD184(v13);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v12);
  long long v2 = v13[1];
  *(_OWORD *)(v0 + 16) = v13[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v14;
  uint64_t v59 = qword_1EB997A18;
  int v60 = 0;
  char v61 = 2;
  uint64_t v62 = 0;
  char v63 = 2;
  uint64_t v64 = 0;
  swift_retain();
  sub_1B639F020((uint64_t)v15);
  swift_release();
  long long v3 = v15[1];
  *(_OWORD *)(v0 + 56) = v15[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(void *)(v0 + 88) = v16;
  uint64_t v53 = qword_1EB997A18;
  int v54 = 0;
  char v55 = 2;
  uint64_t v56 = 0;
  char v57 = 2;
  uint64_t v58 = 0;
  swift_retain();
  sub_1B629214C((uint64_t)v17);
  swift_release();
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  *(void *)(v4 + 32) = &type metadata for Shadow;
  *(void *)(v4 + 40) = &off_1F0FA1928;
  sub_1B62AD184(v18);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v17);
  long long v5 = v18[1];
  *(_OWORD *)(v0 + 96) = v18[0];
  *(_OWORD *)(v0 + 112) = v5;
  *(void *)(v0 + 128) = v19;
  uint64_t v47 = qword_1EB997A18;
  int v48 = 0;
  char v49 = 2;
  uint64_t v50 = 0;
  char v51 = 2;
  uint64_t v52 = 0;
  swift_retain();
  sub_1B639F268((uint64_t)v20);
  swift_release();
  long long v6 = v20[1];
  *(_OWORD *)(v0 + 136) = v20[0];
  *(_OWORD *)(v0 + 152) = v6;
  *(void *)(v0 + 168) = v21;
  uint64_t v41 = qword_1EB997A18;
  int v42 = 0;
  char v43 = 2;
  uint64_t v44 = 0;
  char v45 = 2;
  uint64_t v46 = 0;
  swift_retain();
  sub_1B6291CDC((uint64_t)v22);
  swift_release();
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = &type metadata for Shadow;
  *(void *)(v7 + 40) = &off_1F0FA1928;
  sub_1B62AD184(v23);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v22);
  long long v8 = v23[1];
  *(_OWORD *)(v0 + 176) = v23[0];
  *(_OWORD *)(v0 + 192) = v8;
  *(void *)(v0 + 208) = v24;
  uint64_t v35 = qword_1EB997A18;
  int v36 = 0;
  char v37 = 2;
  uint64_t v38 = 0;
  char v39 = 2;
  uint64_t v40 = 0;
  swift_retain();
  sub_1B639EDD8((uint64_t)v25);
  swift_release();
  long long v9 = v25[1];
  *(_OWORD *)(v0 + 216) = v25[0];
  *(_OWORD *)(v0 + 232) = v9;
  *(void *)(v0 + 248) = v26;
  uint64_t v29 = qword_1EB997A18;
  int v30 = 0;
  char v31 = 2;
  uint64_t v32 = 0;
  char v33 = 2;
  uint64_t v34 = 0;
  swift_retain();
  sub_1B6291ABC((uint64_t)v27);
  swift_release();
  long long v10 = v27[1];
  *(_OWORD *)(v0 + 256) = v27[0];
  *(_OWORD *)(v0 + 272) = v10;
  *(void *)(v0 + 288) = v28;
  return v0;
}

uint64_t sub_1B6297374@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B62973A8(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  }
  return result;
}

uint64_t sub_1B62973A8(void *a1)
{
  sub_1B6297594(0, &qword_1EB980AA0, (uint64_t (*)(void))sub_1B62975FC, (uint64_t)&type metadata for Seed.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)&v13 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62975FC();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v15 = 0;
  unsigned int v9 = sub_1B6E32E68();
  char v14 = 1;
  char v10 = sub_1B6E32DA8();
  if (v10)
  {
    uint64_t v12 = 0x100000000;
    unsigned int v9 = arc4random();
  }
  else
  {
    uint64_t v12 = 0;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v12 | v9;
}

void sub_1B6297594(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B62975FC()
{
  unint64_t result = qword_1EB97FC48;
  if (!qword_1EB97FC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC48);
  }
  return result;
}

uint64_t sub_1B6297650()
{
  return sub_1B629768C((uint64_t)&unk_1F0F51D20, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBC230]);
}

uint64_t sub_1B629768C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  sub_1B62C14BC(v3, v8);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v9 + 8))(0, v8, v9);
  if (!v4)
  {
    char v11 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v11 & 0x10) == 0) {
        return result;
      }
      if (result == 3)
      {
        uint64_t v12 = v3[3];
        uint64_t v13 = v3[4];
        sub_1B62C14BC(v3, v12);
        (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32))(&v18, a2, a3, v12, v13);
        return bswap64(v18);
      }
      uint64_t v17 = (result << 8) | 3;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v15 = v17;
      *(void *)(v15 + 8) = 0;
      char v16 = 5;
    }
    else
    {
      uint64_t v14 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v15 = a1;
      *(void *)(v15 + 8) = v14;
      char v16 = 3;
    }
    *(unsigned char *)(v15 + 16) = v16;
    return swift_willThrow();
  }
  return result;
}

double sub_1B6297804@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6297848(a1, &v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B6297848@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B6297AA8(0, &qword_1EB980A40, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)&v15 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6297B0C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62AA858();
  HIBYTE(v15) = 0;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v11 = v16;
  HIBYTE(v15) = 1;
  sub_1B6E32DF8();
  uint64_t v12 = v16;
  HIBYTE(v15) = 2;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v13 = v16;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  return result;
}

void sub_1B6297AA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6297B0C();
    unint64_t v7 = a3(a1, &type metadata for ParticleOrientationInit.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1B6297B0C()
{
  unint64_t result = qword_1EB97F858;
  if (!qword_1EB97F858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F858);
  }
  return result;
}

uint64_t sub_1B6297B60()
{
  uint64_t v1 = *(long long **)(v0 + 360);
  uint64_t v2 = *((void *)v1 + 22);
  *(void *)(v0 + 368) = v2;
  long long v3 = v1[7];
  long long v4 = v1[8];
  long long v5 = v1[10];
  *(_OWORD *)(v0 + 160) = v1[9];
  *(_OWORD *)(v0 + 176) = v5;
  *(_OWORD *)(v0 + 128) = v3;
  *(_OWORD *)(v0 + 144) = v4;
  long long v6 = v1[3];
  long long v7 = v1[4];
  long long v8 = v1[6];
  *(_OWORD *)(v0 + 96) = v1[5];
  *(_OWORD *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 64) = v6;
  *(_OWORD *)(v0 + 80) = v7;
  long long v9 = *v1;
  long long v10 = v1[2];
  *(_OWORD *)(v0 + 32) = v1[1];
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 16) = v9;
  uint64_t v11 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(v0 + 16, v0 + 272, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  sub_1B6312FE4(v0 + 272, v0 + 232, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v11);
  if (*(void *)(v0 + 240))
  {
    if (v2) {
      uint64_t v12 = v2;
    }
    else {
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v0 + 224) = *(void *)(v0 + 264);
    long long v13 = *(_OWORD *)(v0 + 248);
    *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 208) = v13;
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 216);
    *(void *)(v0 + 376) = v15;
    *(void *)(v0 + 384) = v16;
    swift_bridgeObjectRetain();
    sub_1B63127F0((void *)(v0 + 272), (void (*)(void, void, void, void, void))sub_1B6312ABC);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v17;
    void *v17 = v0;
    v17[1] = sub_1B6394170;
    return sub_1B63928BC(v14, v15, v16, v12, 0);
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v19 = 0;
    char v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_1B6297D70()
{
  uint64_t v1 = *(long long **)(v0 + 360);
  uint64_t v2 = *((void *)v1 + 22);
  *(void *)(v0 + 368) = v2;
  long long v3 = v1[7];
  long long v4 = v1[8];
  long long v5 = v1[10];
  *(_OWORD *)(v0 + 160) = v1[9];
  *(_OWORD *)(v0 + 176) = v5;
  *(_OWORD *)(v0 + 128) = v3;
  *(_OWORD *)(v0 + 144) = v4;
  long long v6 = v1[3];
  long long v7 = v1[4];
  long long v8 = v1[6];
  *(_OWORD *)(v0 + 96) = v1[5];
  *(_OWORD *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 64) = v6;
  *(_OWORD *)(v0 + 80) = v7;
  long long v9 = *v1;
  long long v10 = v1[2];
  *(_OWORD *)(v0 + 32) = v1[1];
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 16) = v9;
  uint64_t v11 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(v0 + 56, v0 + 272, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  sub_1B6312FE4(v0 + 272, v0 + 232, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v11);
  if (*(void *)(v0 + 240))
  {
    if (v2) {
      uint64_t v12 = v2;
    }
    else {
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v0 + 224) = *(void *)(v0 + 264);
    long long v13 = *(_OWORD *)(v0 + 248);
    *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 208) = v13;
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 216);
    *(void *)(v0 + 376) = v15;
    *(void *)(v0 + 384) = v16;
    swift_bridgeObjectRetain();
    sub_1B63127F0((void *)(v0 + 272), (void (*)(void, void, void, void, void))sub_1B6312ABC);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v17;
    void *v17 = v0;
    v17[1] = sub_1B6394170;
    return sub_1B63928BC(v14, v15, v16, v12, 0);
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v19 = 0;
    char v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_1B6297F80()
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1EB997A18;
  int v25 = 0;
  char v26 = 2;
  uint64_t v27 = 0;
  char v28 = 2;
  uint64_t v29 = 0;
  swift_retain();
  sub_1B6298188(1, (uint64_t)v9);
  swift_release();
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for TextureRequireGPURepresentation;
  *(void *)(inited + 40) = &off_1F0F9AFB0;
  sub_1B63B9C40(inited, 1, (uint64_t)&v10);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v9);
  int v2 = v11;
  char v3 = v12;
  uint64_t v4 = v14;
  uint64_t v5 = v13 | 4;
  *(void *)(v0 + 16) = v10;
  *(_DWORD *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 28) = v3;
  *(void *)(v0 + 32) = v5;
  *(unsigned char *)(v0 + 40) = 2;
  *(void *)(v0 + 48) = v4;
  uint64_t v18 = qword_1EB997A18;
  int v19 = 0;
  char v20 = 2;
  uint64_t v21 = 0;
  char v22 = 2;
  uint64_t v23 = 0;
  swift_retain();
  sub_1B6298188(1, (uint64_t)v15);
  swift_release();
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = &type metadata for TextureGPURepresentationDoNotUpload;
  *(void *)(v6 + 40) = &off_1F0F9C868;
  sub_1B62AD184(v16);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v15);
  long long v7 = v16[1];
  *(_OWORD *)(v0 + 56) = v16[0];
  *(_OWORD *)(v0 + 72) = v7;
  *(void *)(v0 + 88) = v17;
  return v0;
}

uint64_t sub_1B6298188@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for SDFTextureGenerator;
  *(void *)(inited + 40) = &off_1F0F7F2E8;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  uint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  uint64_t v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  char v22 = v3[4];
  uint64_t v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B6298390()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_1B62C6A50(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 72);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

char *sub_1B6298408(void *a1)
{
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62BAC28(0, &qword_1EB9809F8, (uint64_t (*)(void))sub_1B63B212C, (uint64_t)&type metadata for GraphScriptingConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v44 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v38 - v9;
  unsigned __int16 v48 = 513;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  int64_t v12 = sub_1B62BAA04(MEMORY[0x1E4FBC860]);
  char v49 = v12;
  uint64_t v13 = sub_1B6392F78(v11);
  uint64_t v50 = v13;
  __int16 v51 = 1;
  char v52 = 1;
  uint64_t v14 = a1[3];
  uint64_t v46 = a1;
  sub_1B62C14BC(a1, v14);
  sub_1B63B212C();
  swift_bridgeObjectRetain();
  uint64_t v15 = v45;
  sub_1B6E33A48();
  if (v15)
  {
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v45 = v12;
    uint64_t v16 = v44;
    char v53 = 0;
    sub_1B63B1C04();
    sub_1B6E32DF8();
    LOBYTE(v48) = (_BYTE)v47;
    uint64_t v18 = v46;
    uint64_t v19 = v46[3];
    uint64_t v20 = v46[4];
    sub_1B62C14BC(v46, v19);
    if (sub_1B62BF5E0(1085, v19, v20))
    {
      swift_bridgeObjectRelease();
      LOBYTE(v47) = 2;
      sub_1B6E32D28();
      uint64_t v22 = v21;
      sub_1B6879144(0, &qword_1E9DD1780, (uint64_t (*)(uint64_t))_s11MetadataSetCMa, MEMORY[0x1E4FBAEA0]);
      char v53 = 3;
      sub_1B687B9AC();
      sub_1B6E32D78();
      if (v47) {
        char v43 = v47;
      }
      else {
        char v43 = sub_1B639A2D4(MEMORY[0x1E4FBC860]);
      }
      sub_1B62D85D4(0, &qword_1EB980260, (uint64_t)&type metadata for GraphScriptingConfig.ScriptArg, MEMORY[0x1E4FBB320]);
      char v53 = 4;
      unint64_t v42 = sub_1B639994C();
      sub_1B6E32D78();
      uint64_t v41 = v47;
      char v53 = 5;
      sub_1B6E32D78();
      uint64_t v32 = v47;
      if (v22)
      {
        uint64_t v40 = &v50;
        swift_bridgeObjectRelease();
        sub_1B639A2D4(MEMORY[0x1E4FBC860]);
        unint64_t v42 = (unint64_t)v10;
        uint64_t v39 = v7;
        *((_WORD *)v5 + 20) = 1;
        char v33 = (int *)type metadata accessor for GraphScriptingConfig.ScriptInfo();
        uint64_t v34 = &v5[v33[10]];
        uint64_t v35 = sub_1B6E31118();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
        swift_bridgeObjectRelease();
        *(void *)&v5[v33[11]] = 0;
        int v36 = &v5[v33[12]];
        *(void *)int v36 = 0;
        v36[8] = 1;
        *(void *)uint64_t v5 = 0;
        *((void *)v5 + 1) = 0;
        char v37 = v41;
        *((void *)v5 + 2) = v43;
        *((void *)v5 + 3) = v37;
        *((void *)v5 + 4) = v32;
        (*(void (**)(char *, void, uint64_t, int *))(*((void *)v33 - 1) + 56))(v5, 0, 1, v33);
        LOBYTE(v47) = 1;
        uint64_t v7 = v39;
        uint64_t v10 = (char *)v42;
        uint64_t v18 = v46;
        sub_1B6CE10FC((uint64_t)v5, 0x100000002uLL);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      HIBYTE(v51) = 1;
    }
    else
    {
      uint64_t v23 = v18[3];
      uint64_t v24 = v18[4];
      sub_1B62C14BC(v18, v23);
      if (sub_1B62BF5E0(2010, v23, v24))
      {
        sub_1B6396740(0, &qword_1E9DD17D0, MEMORY[0x1E4FBAEA0]);
        char v53 = 7;
        sub_1B687BD50();
        sub_1B6E32D78();
        uint64_t v25 = v47;
        swift_bridgeObjectRelease();
        if (v25)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = v25;
        }
        uint64_t v50 = v13;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1B63B9F9C();
        char v53 = 7;
        sub_1B62BAC90(&qword_1EB97E540, (void (*)(uint64_t))sub_1B63B9F9C);
        sub_1B6E32DF8();
        swift_bridgeObjectRelease();
        uint64_t v50 = v47;
      }
    }
    uint64_t v26 = v18[3];
    uint64_t v27 = v18[4];
    sub_1B62C14BC(v18, v26);
    if (sub_1B62BF5E0(2010, v26, v27))
    {
      sub_1B62BACD8(0, &qword_1EB9800D8, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBAEA0]);
      char v53 = 1;
      sub_1B62BAECC(&qword_1EB9800E0, (void (*)(void))sub_1B62A2730);
      sub_1B6E32D78();
      __int16 v28 = v47;
      if (v47) {
        swift_bridgeObjectRelease();
      }
      else {
        __int16 v28 = v45;
      }
      char v49 = v28;
    }
    else
    {
      sub_1B62BB5E4(0, &qword_1EB97E578, (void (*)(void))sub_1B62A2730, (void (*)(void))sub_1B6878CE8);
      char v53 = 1;
      sub_1B63B9E10();
      sub_1B6E32DF8();
      swift_bridgeObjectRelease();
      char v49 = v47;
    }
    char v53 = 6;
    sub_1B639E88C();
    sub_1B6E32D78();
    char v29 = (char)v47;
    if (v47 == 3) {
      char v29 = 2;
    }
    HIBYTE(v48) = v29;
    char v52 = 1;
    uint64_t v30 = v18[3];
    uint64_t v31 = v18[4];
    sub_1B62C14BC(v18, v30);
    sub_1B62BF5E0(1080, v30, v31);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v7);
    uint64_t v10 = (char *)v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v10;
}

id VFXScene.init(options:)(unsigned char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC3VFX8VFXScene_loader;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B639AB38();
  *(void *)&v1[v4] = v5;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_effects] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityObjects] = v6;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene__version] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isInsideRE] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isREAssetScene] = 0;
  uint64_t v7 = OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall;
  id v8 = objc_allocWithZone((Class)type metadata accessor for VFXREDrawCall());
  uint64_t v9 = v2;
  *(void *)&v2[v7] = objc_msgSend(v8, sel_init);
  v9[OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager] = 0;
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs] = 0;
  uint64_t v10 = &v9[OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL];
  uint64_t v11 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat] = 115;
  v9[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth] = 1;
  v9[OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending] = 0;
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions] = 0;
  if (a1[OBJC_IVAR___VFXSceneLoadOptions_setupRenderer]) {
    uint64_t v12 = 0x746E657365727028;
  }
  else {
    uint64_t v12 = 0x296C65646F6D28;
  }
  if (a1[OBJC_IVAR___VFXSceneLoadOptions_setupRenderer]) {
    uint64_t v13 = 0xEE00296E6F697461;
  }
  else {
    uint64_t v13 = 0xE700000000000000;
  }
  type metadata accessor for EntityManager();
  swift_allocObject();
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_entityManager] = sub_1B6299098(v12, v13, 1, 0);
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions] = a1;
  uint64_t v14 = a1;

  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for VFXScene(0);
  id v15 = objc_msgSendSuper2(&v19, sel_init);
  swift_unknownObjectWeakAssign();
  id v16 = v15;
  uint64_t v17 = swift_retain();
  sub_1B628ACE0(v17);
  swift_release();
  if (qword_1EB97F010 != -1) {
    swift_once();
  }

  return v16;
}

uint64_t type metadata accessor for EntityManager()
{
  uint64_t result = qword_1EB97D5F8;
  if (!qword_1EB97D5F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B6299098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v95 = a4;
  uint64_t v92 = a2;
  uint64_t v93 = a3;
  uint64_t v91 = a1;
  uint64_t v97 = sub_1B6E31288();
  *(void *)&long long v96 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97, v6);
  size_t v94 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B6E32228();
  uint64_t v89 = *(void *)(v8 - 8);
  uint64_t v90 = v8;
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v88 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B6E321F8();
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v13 = sub_1B6E31418();
  MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v15 = sub_1B6E313E8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  objc_super v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = 0xE000000000000000;
  *(unsigned char *)(v4 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 64) = 0;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0) {
    uint64_t v21 = sub_1B69FEFB8(MEMORY[0x1E4FBC860]);
  }
  *(void *)(v4 + 72) = v21;
  *(void *)(v4 + 80) = v20;
  *(void *)(v4 + 88) = v20;
  *(void *)(v4 + 96) = v20;
  uint64_t v22 = (_DWORD *)swift_slowAlloc();
  *uint64_t v22 = 0;
  *(void *)(v4 + 104) = "ChunksStorage";
  *(void *)(v4 + 112) = 13;
  *(unsigned char *)(v4 + 120) = 2;
  *(void *)(v4 + 128) = v22;
  *(void *)(v4 + 136) = v20;
  *(void *)(v4 + 144) = v20;
  *(void *)(v4 + 152) = v20;
  uint64_t v23 = sub_1B6E31C98();
  int64x2_t v24 = vdupq_n_s64(0x2710uLL);
  *(void *)(v23 + 16) = 32;
  *(int64x2_t *)(v23 + 32) = v24;
  *(int64x2_t *)(v23 + 48) = v24;
  *(int64x2_t *)(v23 + 64) = v24;
  *(int64x2_t *)(v23 + 80) = v24;
  *(int64x2_t *)(v23 + 96) = v24;
  *(int64x2_t *)(v23 + 112) = v24;
  *(int64x2_t *)(v23 + 128) = v24;
  *(int64x2_t *)(v23 + 144) = v24;
  *(int64x2_t *)(v23 + 160) = v24;
  *(int64x2_t *)(v23 + 176) = v24;
  *(int64x2_t *)(v23 + 192) = v24;
  *(int64x2_t *)(v23 + 208) = v24;
  *(int64x2_t *)(v23 + 224) = v24;
  *(int64x2_t *)(v23 + 240) = v24;
  *(int64x2_t *)(v23 + 256) = v24;
  *(int64x2_t *)(v23 + 272) = v24;
  *(void *)(v4 + 160) = v23;
  type metadata accessor for WorkerComponentStorage();
  uint64_t v25 = (void *)swift_allocObject();
  sub_1B62CEB80(v20, 0, 256, 0, (uint64_t)(v25 + 2));
  v25[11] = 0;
  uint64_t v26 = swift_slowAlloc();
  v25[12] = v26;
  v25[13] = v26 + 4096;
  v25[14] = 4096;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 168) = v25;
  *(void *)(v5 + 184) = 0;
  sub_1B6299DFC();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, *MEMORY[0x1E4FBCB38], v15);
  uint64_t v28 = sub_1B6E32268();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  *(void *)(v5 + 192) = v28;
  *(void *)(v5 + 200) = dispatch_group_create();
  *(void *)(v5 + 208) = sub_1B6299FC0(v27);
  *(void *)(v5 + 216) = 0;
  *(_WORD *)(v5 + 224) = 0;
  uint64_t v29 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  *(void *)(v29 + 96) = 0;
  *(_OWORD *)(v29 + 64) = 0u;
  *(_OWORD *)(v29 + 80) = 0u;
  *(_OWORD *)(v29 + 32) = 0u;
  *(_OWORD *)(v29 + 48) = 0u;
  *(_OWORD *)uint64_t v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  uint64_t v87 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = 1024;
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount) = 0;
  uint64_t v30 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
  *(_DWORD *)(v5 + v30) = sub_1B6299E70(0x7FFFFFFEu) + 1;
  uint64_t v31 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  uint64_t v32 = (_DWORD *)swift_slowAlloc();
  *(void *)uint64_t v31 = "lock EntityManager";
  *(void *)(v31 + 8) = 18;
  *(unsigned char *)(v31 + 16) = 2;
  *(void *)(v31 + 24) = v32;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) = 0;
  *(_DWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex) = -1;
  _DWORD *v32 = 0;
  uint64_t v33 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
  if (qword_1EB97D7D0 != -1) {
    swift_once();
  }
  type metadata accessor for Scheduler();
  swift_allocObject();
  *(void *)(v5 + v33) = sub_1B629A1D0();
  uint64_t v34 = OBJC_IVAR____TtC3VFX13EntityManager_queryManager;
  type metadata accessor for QueryManager();
  uint64_t v35 = swift_allocObject();
  int v36 = (_DWORD *)swift_slowAlloc();
  *int v36 = 0;
  *(void *)(v35 + 16) = "QueryManagerLock";
  *(void *)(v35 + 24) = 16;
  *(unsigned char *)(v35 + 32) = 2;
  *(void *)(v35 + 40) = v36;
  *(void *)(v35 + 48) = sub_1B629A0AC(v27);
  *(void *)(v35 + 56) = sub_1B6299EF8(v27);
  *(void *)(v5 + v34) = v35;
  uint64_t v37 = OBJC_IVAR____TtC3VFX13EntityManager_updateQueue;
  sub_1B6E313F8();
  v98[0] = v27;
  sub_1B6299DB4(&qword_1EB97D1A8, MEMORY[0x1E4FBCC10]);
  sub_1B6299E3C(0);
  sub_1B6299DB4(&qword_1EB97D1A0, sub_1B6299E3C);
  sub_1B6E327B8();
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, *MEMORY[0x1E4FBCC58], v90);
  *(void *)(v5 + v37) = sub_1B6E32258();
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks) = v27;
  uint64_t v38 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock;
  uint64_t v39 = (_DWORD *)swift_slowAlloc();
  *(void *)uint64_t v38 = "nextFrameBlocks";
  *(void *)(v38 + 8) = 15;
  *(unsigned char *)(v38 + 16) = 2;
  *(void *)(v38 + 24) = v39;
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread) = 0;
  _DWORD *v39 = 0;
  uint64_t v40 = v5 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated;
  id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  *(unsigned char *)uint64_t v40 = 0;
  *(void *)(v40 + 8) = v41;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_canUseImGUI) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_imGUIEnabled) = 1;
  uint64_t v42 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
  *(void *)(v5 + v42) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  uint64_t v43 = OBJC_IVAR____TtC3VFX13EntityManager_asyncQueue;
  *(void *)(v5 + v43) = sub_1B6E32238();
  uint64_t v44 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
  char v45 = (_DWORD *)swift_slowAlloc();
  *(void *)uint64_t v44 = "backgroundingSignalLock";
  *(void *)(v44 + 8) = 23;
  *(unsigned char *)(v44 + 16) = 2;
  *(void *)(v44 + 24) = v45;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach) = 1;
  *char v45 = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 0;
  uint64_t v46 = (void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
  void *v46 = 0;
  v46[1] = 0;
  uint64_t v47 = OBJC_IVAR____TtC3VFX13EntityManager_mainGraphScriptGroup;
  type metadata accessor for MainGraphScriptGroup();
  uint64_t v48 = swift_allocObject();
  *(void *)(v5 + v47) = v48;
  *(void *)(v48 + 16) = v27;
  uint64_t v49 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)(v5 + v49) = qword_1EB997FF0;
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream) = 0;
  uint64_t v50 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  *(_WORD *)uint64_t v50 = 0;
  *(unsigned char *)(v50 + 2) = 1;
  __int16 v51 = (int *)type metadata accessor for ScriptingConfiguration();
  uint64_t v52 = v50 + v51[7];
  uint64_t v53 = sub_1B6E30F48();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
  *(void *)(v50 + v51[8]) = 0;
  *(void *)(v50 + v51[9]) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_world) = 0;
  uint64_t v54 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  swift_retain();
  CFTimeInterval v55 = CACurrentMediaTime();
  *(void *)uint64_t v54 = 1;
  *(void *)(v54 + 8) = 0;
  *(void *)(v54 + 16) = 0;
  *(void *)(v54 + 24) = 0;
  *(CFTimeInterval *)(v54 + 32) = v55;
  *(void *)(v54 + 40) = 0;
  *(void *)(v54 + 48) = 0;
  *(void *)(v54 + 56) = 0;
  *(void *)(v54 + 64) = 0x3C88888900000000;
  *(void *)(v54 + 72) = 1;
  *(unsigned char *)(v54 + 80) = 0;
  *(void *)(v54 + 88) = 60;
  *(unsigned char *)(v54 + 96) = 1;
  *(_DWORD *)(v54 + 97) = 0;
  uint64_t v56 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_updateHandlerIndex;
  *(void *)uint64_t v56 = 0;
  *(unsigned char *)(v56 + 8) = 1;
  uint64_t v57 = MEMORY[0x1E4FBC868];
  *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_activeStatesPerEffects) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 4;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare) = 0;
  *(_DWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_peerPid) = -1;
  *(_DWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity) = 0;
  uint64_t v58 = v92;
  *(void *)(v5 + 16) = v91;
  *(void *)(v5 + 24) = v58;
  uint64_t v59 = v95;
  *(void *)(v5 + 64) = v95;
  swift_retain();
  swift_release();
  if (v59)
  {
    swift_retain();
    int v60 = sub_1B6654C8C();
    type metadata accessor for SceneComponentStorage();
    swift_allocObject();
    uint64_t v61 = sub_1B6B39FF4((uint64_t)v60);
    swift_release();
  }
  else
  {
    type metadata accessor for SceneComponentStorage();
    swift_allocObject();
    uint64_t v61 = sub_1B63B0308();
  }
  *(void *)(v5 + 176) = v61;
  uint64_t v62 = *(void *)(v5 + v87);
  uint64_t v63 = swift_slowAlloc();
  uint64_t v64 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  *uint64_t v64 = v63;
  v64[1] = v62;
  uint64_t v65 = v93 + 1;
  uint64_t v66 = swift_slowAlloc();
  char v67 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  *char v67 = v66;
  v67[1] = v65;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v68 = sub_1B6E312C8();
  sub_1B6385660(v68, (uint64_t)qword_1EB997E68);
  sub_1B6E312A8();
  char v69 = v94;
  sub_1B6E31268();
  (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v5 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v69, v97);
  uint64_t v70 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v70)
  {
    uint64_t v71 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v71)
    {
      uint64_t v97 = type metadata accessor for PrivateCommandQueue();
      swift_retain();
      uint64_t v72 = 0;
      long long v96 = xmmword_1B6E50D30;
      uint64_t v73 = MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v74 = swift_allocObject();
        swift_retain();
        *(void *)(v74 + 32) = ecs_stack_allocator_create(0x10000);
        type metadata accessor for FrameAllocator();
        uint64_t v75 = v5;
        uint64_t v76 = v57;
        uint64_t v77 = (void *)swift_allocObject();
        v77[4] = 0;
        v77[5] = v73;
        uint64_t v78 = swift_slowAlloc();
        v77[2] = v78;
        v77[3] = v78 + 0x10000;
        v77[4] = 0;
        *(void *)(v74 + 40) = v77;
        *(void *)(v74 + 48) = 0;
        uint64_t v57 = v76;
        uint64_t v5 = v75;
        *(void *)(v74 + 56) = 0;
        *(void *)(v74 + 64) = 0;
        *(_OWORD *)(v74 + 72) = v96;
        *(void *)(v74 + 88) = MEMORY[0x1E4FBC870];
        *(void *)(v74 + 96) = v57;
        *(void *)(v74 + 104) = v73;
        *(unsigned char *)(v74 + 112) = 0;
        *(_OWORD *)(v74 + 120) = 0u;
        *(_OWORD *)(v74 + 136) = 0u;
        *(_OWORD *)(v74 + 152) = 0u;
        *(void *)(v74 + 16) = v75;
        swift_release();
        *(void *)(v74 + 24) = v72 - 1;
        *(void *)(v70 + 8 * v72++) = v74;
      }
      while (v71 != v72);
      swift_release();
    }
  }
  *(void *)(*(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 24) = v5;
  sub_1B63BA93C(0);
  if (qword_1EB97D5F0 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB997960, sel_lock);
  if (qword_1EB97E3F8 != -1) {
    swift_once();
  }
  swift_weakInit();
  uint64_t v79 = swift_weakAssign();
  sub_1B629A4EC(v79, (uint64_t)v98);
  id v80 = (void *)qword_1EB997A98;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  qword_1EB997A98 = (uint64_t)v80;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v80 = sub_1B68C09C8(0, v80[2] + 1, 1, (unint64_t)v80);
    qword_1EB997A98 = (uint64_t)v80;
  }
  unint64_t v83 = v80[2];
  unint64_t v82 = v80[3];
  if (v83 >= v82 >> 1)
  {
    id v80 = sub_1B68C09C8(v82 > 1, v83 + 1, 1, (unint64_t)v80);
    qword_1EB997A98 = (uint64_t)v80;
  }
  v80[2] = v83 + 1;
  sub_1B629A4EC((uint64_t)v98, (uint64_t)&v80[v83 + 4]);
  id v84 = (id)qword_1EB997960;
  objc_msgSend(v84, sel_unlock);

  swift_release();
  return v5;
}

uint64_t sub_1B6299DB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6299DFC()
{
  unint64_t result = qword_1EB97D1B0;
  if (!qword_1EB97D1B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB97D1B0);
  }
  return result;
}

void sub_1B6299E3C(uint64_t a1)
{
}

uint64_t sub_1B6299E70(unsigned int a1)
{
  uint64_t v6 = 0;
  MEMORY[0x1BA9B84E0](&v6, 8);
  unint64_t v2 = v6 * (unint64_t)a1;
  uint64_t result = HIDWORD(v2);
  if (v2 < a1)
  {
    unsigned int v4 = -a1 % a1;
    if (v4 > v2)
    {
      do
      {
        uint64_t v6 = 0;
        MEMORY[0x1BA9B84E0](&v6, 8);
        int64_t v5 = v6 * (unint64_t)a1;
      }
      while (v4 > v5);
      return v5 >> 32;
    }
  }
  return result;
}

void *sub_1B6299EF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FAD68();
  uint64_t v3 = (void *)sub_1B6E32C58();
  unsigned int v4 = (void *)(a1 + 40);
  do
  {
    unsigned int v5 = *((_DWORD *)v4 - 2);
    uint64_t v6 = *v4;
    v4 += 2;
    unint64_t v7 = sub_1B62C5AB0(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(_DWORD *)(v3[6] + 4 * v7) = v5;
    *(void *)(v3[7] + 8 * v7) = v6;
    ++v3[2];
    swift_retain();
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B6299FC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67CB72C();
  uint64_t v3 = (void *)sub_1B6E32C58();
  unsigned int v4 = (void *)(a1 + 56);
  do
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *v4;
    long long v10 = *((_OWORD *)v4 - 1);
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(void *)(v3[6] + 8 * v7) = v5;
    uint64_t v8 = v3[7] + 24 * v7;
    *(_OWORD *)uint64_t v8 = v10;
    *(void *)(v8 + 16) = v6;
    ++v3[2];
    swift_bridgeObjectRetain();
    v4 += 4;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B629A0AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FADF4();
  uint64_t v3 = (void *)sub_1B6E32C58();
  unsigned int v4 = (void *)(a1 + 56);
  do
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *v4;
    long long v10 = *((_OWORD *)v4 - 1);
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(void *)(v3[6] + 8 * v7) = v5;
    uint64_t v8 = v3[7] + 24 * v7;
    *(_OWORD *)uint64_t v8 = v10;
    *(void *)(v8 + 16) = v6;
    ++v3[2];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 += 4;
    --v1;
  }
  while (v1);
  return v3;
}

uint64_t type metadata accessor for Scheduler()
{
  return self;
}

uint64_t sub_1B629A1D0()
{
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *uint64_t v1 = 0;
  *(void *)(v0 + 32) = "lock-scheduler";
  *(void *)(v0 + 40) = 14;
  *(unsigned char *)(v0 + 48) = 2;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(_WORD *)(v0 + 88) = 256;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 96) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 120) = 0;
  *(void *)(v0 + 128) = v2;
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 152) = sub_1B62BC484(v2);
  *(_WORD *)(v0 + 160) = 0;
  *(void *)(v0 + 168) = sub_1B629A388(v2);
  *(void *)(v0 + 176) = v2;
  *(void *)(v0 + 184) = sub_1B629A35C(v2);
  *(void *)(v0 + 192) = v2;
  *(void *)(v0 + 200) = sub_1B629A35C(v2);
  *(_DWORD *)(v0 + 208) = 1065353216;
  return v0;
}

void *sub_1B629A284(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  a2(0);
  uint64_t v6 = (void *)sub_1B6E32C58();
  unint64_t v7 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    unint64_t v10 = a3(v8);
    *(void *)((char *)v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
    uint64_t v11 = 8 * v10;
    *(void *)(v6[6] + v11) = v8;
    *(void *)(v6[7] + v11) = v9;
    ++v6[2];
    swift_bridgeObjectRetain();
    v7 += 2;
    --v3;
  }
  while (v3);
  return v6;
}

void *sub_1B629A35C(uint64_t a1)
{
  return sub_1B629A284(a1, (void (*)(void))sub_1B67FAE5C, (uint64_t (*)(uint64_t))sub_1B62C19C8);
}

void *sub_1B629A388(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F78A0(0, (unint64_t *)&qword_1EB980808, (void (*)(uint64_t))sub_1B67FAF70);
  uint64_t v3 = (void *)sub_1B6E32C58();
  unsigned int v4 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    unint64_t v7 = sub_1B62C19C8(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    uint64_t v8 = 8 * v7;
    *(void *)(v3[6] + v8) = v5;
    *(void *)(v3[7] + v8) = v6;
    ++v3[2];
    swift_bridgeObjectRetain();
    v4 += 2;
    --v1;
  }
  while (v1);
  return v3;
}

uint64_t type metadata accessor for WorkerComponentStorage()
{
  return self;
}

uint64_t type metadata accessor for MainGraphScriptGroup()
{
  return self;
}

uint64_t type metadata accessor for FrameAllocator()
{
  return self;
}

uint64_t sub_1B629A4EC(uint64_t a1, uint64_t a2)
{
  sub_1B629A550(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B629A550(uint64_t a1)
{
}

uint64_t type metadata accessor for QueryManager()
{
  return self;
}

uint64_t sub_1B629A5AC()
{
  sub_1B629A5E0();

  return swift_deallocClassInstance();
}

uint64_t sub_1B629A5E0()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 88);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_1B62C6A50((uint64_t)v1);
  }
  swift_bridgeObjectRelease();
  sub_1B62C6A50(*(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void *sub_1B629A66C()
{
  uint64_t result = (void *)thread_serialization_context();
  *uint64_t result = v1;
  return result;
}

unint64_t sub_1B629A698@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1B629A6CC(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  }
  return result;
}

unint64_t sub_1B629A6CC(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C550C((uint64_t)v9, v10);
  unint64_t v3 = sub_1B6E33148();
  unint64_t v5 = v3;
  if (v3 >= 3)
  {
    if (v3 == 3)
    {
      sub_1B62C550C((uint64_t)v9, v10);
      sub_1B6E33138();
      unsigned __int8 v6 = 0;
      unint64_t v5 = v7;
      goto LABEL_6;
    }
    sub_1B62C1550((uint64_t)v9, (uint64_t)v8);
    sub_1B6E32998();
    swift_allocError();
    sub_1B6E32958();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  unsigned __int8 v6 = 1;
LABEL_6:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v9[0] = v6;
  return v5 | ((unint64_t)v6 << 32);
}

void *vfx_script_color_ramp_create(_:_:_:_:_:)(uint64_t a1, char *a2, char *a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v9 = ecs_stack_allocator_allocate(*(void *)(a1 + 16), 17, 8);
  if (a5 >= 3u) {
    char v10 = 3;
  }
  else {
    char v10 = a5;
  }
  uint64_t v11 = sub_1B629A8D4(a2, a4);
  uint64_t v12 = sub_1B629AA38(a3, a4);
  *uint64_t v9 = v11;
  v9[1] = v12;
  *((unsigned char *)v9 + 16) = v10;
  return v9;
}

uint64_t sub_1B629A8D4(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (a2 > 0)
  {
    sub_1B629AC74(0, (unint64_t *)&qword_1EB980DA0, (uint64_t (*)(uint64_t))sub_1B62AADE8, MEMORY[0x1E4FBBE00]);
    uint64_t v4 = 16 * a2;
    unint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 17;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 4);
    uint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 16 * a2);
      return (uint64_t)v5;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B629AA38(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (a2 > 0)
  {
    sub_1B62F7E70(0, (unint64_t *)&unk_1EB980D30, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBBE00]);
    uint64_t v4 = 4 * a2;
    unint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 29;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 2);
    uint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 4 * a2);
      return (uint64_t)v5;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

void sub_1B629AB8C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B68E2ED4(255, a3, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a4);
    unint64_t v5 = sub_1B6E330A8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B629AC00(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B6297594(255, a3, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a4);
    unint64_t v5 = sub_1B6E330A8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B629AC74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B629ACD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E330A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B629AD2C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  unint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for EmitterDescription;
  *(void *)(inited + 40) = &off_1F0F76688;
  *(void *)(inited + 48) = &type metadata for EmitterRuntime;
  *(void *)(inited + 56) = &off_1F0F63FA8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  int64x2_t v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B629AF80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[8];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[13];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[18];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  unint64_t v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B629B1F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(a1 + 176);
  swift_retain();
  sub_1B636E270((uint64_t)&type metadata for CurvesState, (uint64_t)&off_1F0F54AF0, v4);
  swift_release();
  uint64_t v5 = v2[2];
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v7 = sub_1B62B6A60();
  uint64_t v8 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v8);
  sub_1B62B6A68(a1, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v7, v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  swift_release_n();
  uint64_t v9 = v2[7];
  swift_getObjectType();
  uint64_t v10 = sub_1B62B6A60();
  uint64_t v11 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v11);
  sub_1B62B6A68(a1, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v10, v9);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  swift_release_n();
  uint64_t v12 = v2[12];
  swift_getObjectType();
  uint64_t v13 = sub_1B62B6A60();
  uint64_t v14 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v14);
  sub_1B62B6A68(a1, v12);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v13, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  swift_release_n();
  uint64_t v15 = v2[17];
  swift_getObjectType();
  uint64_t v16 = sub_1B62B6A60();
  uint64_t v17 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v17);
  sub_1B62B6A68(a1, v15);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v16, v15);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  return swift_release_n();
}

uint64_t sub_1B629B4A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[12];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[17];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[7];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  uint64_t v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B629B728(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[7];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[12];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[17];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  uint64_t v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B629B99C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[7];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[12];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[17];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  uint64_t v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B629BC10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(a1 + 176);
  swift_retain();
  sub_1B636E270((uint64_t)&type metadata for ColorRampsState, (uint64_t)&off_1F0F681D8, v4);
  swift_release();
  uint64_t v5 = v2[2];
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v7 = sub_1B62B6A60();
  uint64_t v8 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v8);
  sub_1B62B6A68(a1, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v7, v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  swift_release_n();
  uint64_t v9 = v2[7];
  swift_getObjectType();
  uint64_t v10 = sub_1B62B6A60();
  uint64_t v11 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v11);
  sub_1B62B6A68(a1, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v10, v9);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  swift_release_n();
  uint64_t v12 = v2[12];
  swift_getObjectType();
  uint64_t v13 = sub_1B62B6A60();
  uint64_t v14 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v14);
  sub_1B62B6A68(a1, v12);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v13, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  swift_release_n();
  uint64_t v15 = v2[17];
  swift_getObjectType();
  uint64_t v16 = sub_1B62B6A60();
  uint64_t v17 = *(os_unfair_lock_s **)(v6 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v17);
  sub_1B62B6A68(a1, v15);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v16, v15);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 40));
  return swift_release_n();
}

uint64_t sub_1B629BEBC()
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_1EB997A18;
  int v42 = 0;
  char v43 = 2;
  uint64_t v44 = 0;
  char v45 = 2;
  uint64_t v46 = 0;
  swift_retain();
  sub_1B63AC6F8(0, (uint64_t)v14);
  swift_release();
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for EffectiveHiddenState;
  *(void *)(inited + 40) = &off_1F0F7FE80;
  sub_1B62AD184(v15);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v14);
  long long v2 = v15[1];
  *(_OWORD *)(v0 + 16) = v15[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v16;
  uint64_t v35 = qword_1EB997A18;
  int v36 = 0;
  char v37 = 2;
  uint64_t v38 = 0;
  char v39 = 2;
  uint64_t v40 = 0;
  swift_retain();
  sub_1B629C12C(0, (uint64_t)&v17);
  swift_release();
  int v3 = v18;
  char v4 = v19;
  uint64_t v5 = v21;
  uint64_t v6 = v20 | 4;
  *(void *)(v0 + 56) = v17;
  *(_DWORD *)(v0 + 64) = v3;
  *(unsigned char *)(v0 + 68) = v4;
  *(void *)(v0 + 72) = v6;
  *(unsigned char *)(v0 + 80) = 2;
  *(void *)(v0 + 88) = v5;
  uint64_t v29 = qword_1EB997A18;
  int v30 = 0;
  char v31 = 2;
  uint64_t v32 = 0;
  char v33 = 2;
  uint64_t v34 = 0;
  swift_retain();
  sub_1B629C12C(0, (uint64_t)v22);
  swift_release();
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = &type metadata for HiddenOrHasHiddenAncestor;
  *(void *)(v7 + 40) = &off_1F0F51710;
  sub_1B62AD184(&v23);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v22);
  int v8 = v24;
  char v9 = v25;
  char v10 = v27;
  uint64_t v11 = v28;
  uint64_t v12 = v26 | 1;
  *(void *)(v0 + 96) = v23;
  *(_DWORD *)(v0 + 104) = v8;
  *(unsigned char *)(v0 + 108) = v9;
  *(void *)(v0 + 112) = v12;
  *(unsigned char *)(v0 + 120) = v10;
  *(void *)(v0 + 128) = v11;
  return v0;
}

uint64_t sub_1B629C12C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  int v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for EffectiveHiddenState;
  *(void *)(inited + 40) = &off_1F0F7FE80;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  uint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  int v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  int v22 = v3[4];
  uint64_t v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B629C334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B629C3EC(a1, v5);
  if (!v2) {
    return sub_1B629C37C((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_1B629C37C(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for Query(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1B629C3EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v2)
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    sub_1B62C550C((uint64_t)v20, v21);
    uint64_t v6 = sub_1B6E33108();
    sub_1B629C678(v6, v13, &v24);
    uint64_t v8 = v25;
    uint64_t v10 = v27;
    uint64_t v12 = v28;
    if (v25 >= 0x3B)
    {
      uint64_t v29 = v22;
      sub_1B62C550C((uint64_t)v20, v21);
      sub_1B6A4CE8C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E33168();

      sub_1B6A4D128(&v24, (void (*)(void, void, void, void, void))sub_1B666BC88);
      sub_1B6A4D128(&v24, (void (*)(void, void, void, void, void))sub_1B666BC88);
      uint64_t v9 = v15;
      uint64_t v8 = v16;
      uint64_t v11 = v17;
      uint64_t v10 = v18;
      uint64_t v12 = v19;
    }
    else
    {
      uint64_t v11 = v26;
      uint64_t v9 = v24;
    }
  }
  else
  {
    sub_1B62C14BC(v20, v21);
    uint64_t v5 = sub_1B6E334C8();
    sub_1B629C678(v5, v7, v23);
    uint64_t v9 = v23[0];
    uint64_t v8 = v23[1];
    uint64_t v11 = v23[2];
    uint64_t v10 = v23[3];
    uint64_t v12 = v23[4];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v20);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v8;
  a2[2] = v11;
  a2[3] = v10;
  a2[4] = v12;
  return result;
}

uint64_t sub_1B629C678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (qword_1EB981160 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EB997F40;
  if (!*(void *)(qword_1EB997F40 + 16))
  {
LABEL_7:
    uint64_t v30 = a1;
    unint64_t v31 = a2;
    sub_1B666BDC4();
    sub_1B666BE18();
    if (sub_1B6E31618())
    {
      swift_bridgeObjectRetain();
      if (sub_1B6E319F8())
      {
        swift_bridgeObjectRetain();
        sub_1B6E318C8();
        uint64_t v15 = sub_1B6A04144();
        uint64_t v17 = v16;
        uint64_t v19 = v18;
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        a1 = MEMORY[0x1BA9B34C0](v15, v17, v19, v21);
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v23;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v25 = MEMORY[0x10];
      if (*(void *)(MEMORY[0x10] + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1B62B2CE0(a1, a2);
        if (v27)
        {
          uint64_t v28 = (uint64_t *)(*(void *)(v25 + 56) + 40 * v26);
          uint64_t v10 = *v28;
          unint64_t v11 = v28[1];
          uint64_t v12 = v28[2];
          uint64_t v13 = v28[3];
          uint64_t v14 = v28[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v31 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E31948();
      int v29 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v30 = 0;
      swift_retain();
      sub_1B6B33E34(v29, &v30, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    unint64_t v11 = 59;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1B62B2CE0(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 40 * v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  uint64_t v12 = v9[2];
  uint64_t v13 = v9[3];
  uint64_t v14 = v9[4];
  sub_1B629C9E8(*v9, v11);
LABEL_15:
  uint64_t result = swift_bridgeObjectRelease_n();
LABEL_23:
  *a3 = v10;
  a3[1] = v11;
  a3[2] = v12;
  a3[3] = v13;
  a3[4] = v14;
  return result;
}

uint64_t sub_1B629C9E8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x3B)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B629CA3C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(unsigned __int16 **)v3;
  int v6 = *(_DWORD *)(v3 + 8);
  char v7 = *(unsigned char *)(v3 + 12);
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 32);
  if (a2)
  {
    int v27 = *(_DWORD *)(v3 + 8);
    char v28 = *(unsigned char *)(v3 + 12);
    uint64_t v12 = (char *)v5 + 41;
    unint64_t v13 = v5[9];
    if (v13 >= 0x10)
    {
      uint64_t v16 = *(void *)(a1 + 16);
      uint64_t v17 = sub_1B62F79D4(&v12[v5[8]], v13 >> 4);
      uint64_t v14 = v17;
      if (v16)
      {
        uint64_t v29 = v17;
        uint64_t v18 = swift_bridgeObjectRetain();
        sub_1B62F8084(v18);
        uint64_t v14 = v29;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = a1;
    }
    uint64_t v19 = v5[10];
    int64_t v20 = v5[11];
    uint64_t v21 = sub_1B62F79C8(0, *(void *)(a1 + 16));
    uint64_t v22 = v21;
    if (v20)
    {
      uint64_t v23 = &v12[v19];
      uint64_t v24 = *(void *)(v22 + 16);
      uint64_t v25 = sub_1B62F7C94(v23, v20);
      uint64_t v26 = v25;
      if (v24)
      {
        uint64_t v30 = v25;
        sub_1B62F81D8(v22);
        uint64_t v26 = v30;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v26 = v21;
    }
    int v6 = v27;
    uint64_t v5 = (unsigned __int16 *)sub_1B62C8668((char *)(v14 + 32), *(void *)(v14 + 16), (char *)(v26 + 32), *(void *)(v26 + 16), &v12[v5[12]], (unint64_t)v5[13] >> 4, &v12[v5[14]], v5[15] / 0x18u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v28;
  }
  else
  {
    uint64_t result = swift_retain();
  }
  *(void *)a3 = v5;
  *(_DWORD *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 12) = v7;
  *(void *)(a3 + 16) = v8;
  *(unsigned char *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = v10;
  return result;
}

void *vfx_script_color_ramp_create_setting_color(_:_:_:_:)(uint64_t a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  uint64_t v5 = *(char **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v9 = ecs_stack_allocator_allocate(v8, 17, 8);
  *char v9 = v5;
  v9[1] = v6;
  *((unsigned char *)v9 + 16) = v7;
  if ((a3 & 0x8000000000000000) == 0 && *((void *)v5 + 2) > a3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *char v9 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v5 = sub_1B629CC8C((uint64_t)v5);
    }
    *(__n128 *)&v5[16 * a3 + 32] = a4;
    *char v9 = v5;
  }
  return v9;
}

{
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  char isUniquelyReferenced_nonNull_native;

  uint64_t v5 = *(char **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v9 = ecs_stack_allocator_allocate(v8, 17, 8);
  *char v9 = v5;
  v9[1] = v6;
  *((unsigned char *)v9 + 16) = v7;
  if ((a3 & 0x8000000000000000) == 0 && *((void *)v5 + 2) > a3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *char v9 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v5 = sub_1B629CC8C((uint64_t)v5);
    }
    *(__n128 *)&v5[16 * a3 + 32] = a4;
    *char v9 = v5;
  }
  return v9;
}

char *sub_1B629CC8C(uint64_t a1)
{
  return sub_1B629CE28(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B629CCA0(char a1, uint64_t a2, char a3, char *a4, void (*a5)(void))
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    uint64_t v8 = v7 >> 1;
    int64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if (v9 <= a2) {
      int64_t v9 = a2;
    }
    if (v8 < a2) {
      a2 = v9;
    }
    else {
      a2 = v8;
    }
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (a2 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = a2;
  }
  if (v11)
  {
    a5(0);
    uint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = j__malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 17;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 4);
    uint64_t v15 = v12 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v10, v15, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v15 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v12 != a4 || v15 >= &a4[16 * v10 + 32]) {
    memmove(v15, a4 + 32, 16 * v10);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v12;
}

void sub_1B629CD98()
{
  if (!qword_1EB980DA0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980DA0);
    }
  }
}

char *sub_1B629CE28(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B629CCA0(a1, a2, a3, a4, (void (*)(void))sub_1B629CD98);
}

uint64_t sub_1B629CE40()
{
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v83 = qword_1EB997A18;
  int v84 = 0;
  char v85 = 2;
  uint64_t v86 = 0;
  char v87 = 2;
  uint64_t v88 = 0;
  swift_retain();
  sub_1B63A7278(1, (uint64_t)&v22);
  swift_release();
  int v1 = v23;
  char v2 = v24;
  uint64_t v3 = v26;
  uint64_t v4 = v25 | 4;
  *(void *)(v0 + 16) = v22;
  *(_DWORD *)(v0 + 24) = v1;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v4;
  *(unsigned char *)(v0 + 40) = 2;
  *(void *)(v0 + 48) = v3;
  uint64_t v77 = qword_1EB997A18;
  int v78 = 0;
  char v79 = 2;
  uint64_t v80 = 0;
  char v81 = 2;
  uint64_t v82 = 0;
  swift_retain();
  sub_1B63AACF8(1, (uint64_t)&v27);
  swift_release();
  int v5 = v28;
  char v6 = v29;
  uint64_t v7 = v31;
  uint64_t v8 = v30 | 4;
  *(void *)(v0 + 56) = v27;
  *(_DWORD *)(v0 + 64) = v5;
  *(unsigned char *)(v0 + 68) = v6;
  *(void *)(v0 + 72) = v8;
  *(unsigned char *)(v0 + 80) = 2;
  *(void *)(v0 + 88) = v7;
  uint64_t v9 = qword_1EB997A18;
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for WorldTransform;
  *(void *)(inited + 40) = &off_1F0F67798;
  *(void *)(inited + 48) = &type metadata for Depth;
  *(void *)(inited + 56) = &off_1F0F9EF58;
  uint64_t v71 = v9;
  int v72 = 0;
  char v73 = 2;
  uint64_t v74 = 0;
  char v75 = 2;
  uint64_t v76 = 0;
  swift_retain();
  sub_1B62F776C(inited, 1, (uint64_t)v32);
  swift_setDeallocating();
  swift_release();
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E77050;
  *(void *)(v11 + 32) = &type metadata for Parent;
  *(void *)(v11 + 40) = &off_1F0FA04A8;
  sub_1B628A080(v11, (uint64_t)v33);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v32);
  long long v12 = v33[1];
  *(_OWORD *)(v0 + 96) = v33[0];
  *(_OWORD *)(v0 + 112) = v12;
  *(void *)(v0 + 128) = v34;
  uint64_t v65 = qword_1EB997A18;
  int v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  char v69 = 2;
  uint64_t v70 = 0;
  swift_retain();
  sub_1B63AA25C(2, (uint64_t)v35);
  swift_release();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E76B30;
  *(void *)(v13 + 32) = &type metadata for Fixed;
  *(void *)(v13 + 40) = &off_1F0F9F050;
  *(void *)(v13 + 48) = &type metadata for Beamed;
  *(void *)(v13 + 56) = &off_1F0F9FB80;
  sub_1B62AD184(v36);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v35);
  long long v14 = v36[1];
  *(_OWORD *)(v0 + 136) = v36[0];
  *(_OWORD *)(v0 + 152) = v14;
  *(void *)(v0 + 168) = v37;
  uint64_t v59 = qword_1EB997A18;
  int v60 = 0;
  char v61 = 2;
  uint64_t v62 = 0;
  char v63 = 2;
  uint64_t v64 = 0;
  swift_retain();
  sub_1B63A2A1C(1, 2, (uint64_t)v38);
  swift_release();
  long long v15 = v38[1];
  *(_OWORD *)(v0 + 176) = v38[0];
  *(_OWORD *)(v0 + 192) = v15;
  *(void *)(v0 + 208) = v39;
  uint64_t v53 = qword_1EB997A18;
  int v54 = 0;
  char v55 = 2;
  uint64_t v56 = 0;
  char v57 = 2;
  uint64_t v58 = 0;
  swift_retain();
  sub_1B629D424(1, 3, (uint64_t)v40);
  swift_release();
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980B70, &qword_1EB97E870, (unint64_t *)&qword_1EB97E840);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 32) = &type metadata for Depth;
  *(void *)(v16 + 40) = &off_1F0F9EF28;
  sub_1B63B9DD4(v41);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v40);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E77D10;
  *(void *)(v17 + 32) = &type metadata for Fixed;
  *(void *)(v17 + 40) = &off_1F0F9F050;
  *(void *)(v17 + 48) = &type metadata for Beamed;
  *(void *)(v17 + 56) = &off_1F0F9FB80;
  *(void *)(v17 + 64) = &type metadata for NotInHierarchy;
  *(void *)(v17 + 72) = &off_1F0F64BD8;
  sub_1B62AD184(v42);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v41);
  long long v18 = v42[1];
  *(_OWORD *)(v0 + 216) = v42[0];
  *(_OWORD *)(v0 + 232) = v18;
  *(void *)(v0 + 248) = v43;
  uint64_t v47 = qword_1EB997A18;
  int v48 = 0;
  char v49 = 2;
  uint64_t v50 = 0;
  char v51 = 2;
  uint64_t v52 = 0;
  swift_retain();
  sub_1B629D424(1, 3, (uint64_t)v44);
  swift_release();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1B6E77D10;
  *(void *)(v19 + 32) = &type metadata for Fixed;
  *(void *)(v19 + 40) = &off_1F0F9F050;
  *(void *)(v19 + 48) = &type metadata for Beamed;
  *(void *)(v19 + 56) = &off_1F0F9FB80;
  *(void *)(v19 + 64) = &type metadata for NotInHierarchy;
  *(void *)(v19 + 72) = &off_1F0F64BD8;
  sub_1B62AD184(v45);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v44);
  long long v20 = v45[1];
  *(_OWORD *)(v0 + 256) = v45[0];
  *(_OWORD *)(v0 + 272) = v20;
  *(void *)(v0 + 288) = v46;
  return v0;
}

uint64_t sub_1B629D424@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Parent;
  *(void *)(inited + 40) = &off_1F0FA04A8;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  long long v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  long long v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B629D678@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B629D6A4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B629D6A4(void *a1)
{
  sub_1B62AEADC(0, (unint64_t *)&qword_1EB980930, (uint64_t (*)(void))sub_1B6AAF8B4, (uint64_t)&type metadata for ValueCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v14[-1] - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62B8F14(2000, v9, v10))
  {
    uint64_t v11 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(v14, v14[3]);
      uint64_t v11 = sub_1B6E334F8();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
    }
  }
  else
  {
    uint64_t v11 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
    sub_1B6AAF8B4();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = sub_1B6E32DD8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v11;
}

double sub_1B629D8D8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B629D928(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1B629D928@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B62BAC28(0, &qword_1EB980A08, (uint64_t (*)(void))sub_1B687B904, (uint64_t)&type metadata for GraphScriptingConfig.ScriptArg.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)v24 - v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_1B62C14BC(a1, v11);
  if (!sub_1B62BF5E0(2010, v11, v12))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v2)
    {
      sub_1B62C550C((uint64_t)v25, v26);
      uint64_t v17 = sub_1B6E33108();
      uint64_t v16 = v18;
      sub_1B62C550C((uint64_t)v25, v26);
      sub_1B629DD00();
      sub_1B6E33168();
      uint64_t v28 = v17;
      uint64_t v19 = v24[0];
      unint64_t v20 = v24[1];
      uint64_t v22 = v24[2];
      uint64_t v21 = v24[3];
      uint64_t v23 = v24[4];
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v25);
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B687B904();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v25[0]) = 0;
  uint64_t v14 = sub_1B6E32D98();
  uint64_t v16 = v15;
  LOBYTE(v24[0]) = 1;
  sub_1B629DD00();
  sub_1B6E32DF8();
  uint64_t v28 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v19 = v25[0];
  unint64_t v20 = v25[1];
  uint64_t v22 = v25[2];
  uint64_t v21 = v26;
  uint64_t v23 = v27;
LABEL_7:
  swift_bridgeObjectRetain();
  sub_1B629C9E8(v19, v20);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B629DCAC(v19, v20);
  *a2 = v28;
  a2[1] = v16;
  a2[2] = v19;
  a2[3] = v20;
  a2[4] = v22;
  a2[5] = v21;
  a2[6] = v23;
  return result;
}

uint64_t sub_1B629DCAC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x3B)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B629DD00()
{
  unint64_t result = qword_1EB981170;
  if (!qword_1EB981170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB981170);
  }
  return result;
}

uint64_t sub_1B629DD54(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = *(uint64_t *)((char *)a3 + a4 - 24);
  uint64_t v5 = *(uint64_t *)((char *)a3 + a4 - 8);
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  sub_1B62CAAD8(a1, (uint64_t)v10);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 32);
  swift_bridgeObjectRetain();
  return v8(v10, v6, v7, v4, v5);
}

uint64_t sub_1B629DDDC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B62B2CE0(a2, a3);
    if (v10)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1B62C14BC(a1, a1[3]);
      if (swift_getDynamicType() == *(void *)(v11 + 32))
      {
        swift_bridgeObjectRelease();
        sub_1B62CAAD8((uint64_t)a1, (uint64_t)v14);
        sub_1B629E0D8((uint64_t)v14, *(void *)(v11 + 16), *(void *)(v11 + 32));
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
        swift_release();
        uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
        *((unsigned char *)v4 + 8) = 1;
      }
      else
      {
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E33B48();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E33B48();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t result = sub_1B6E32BE8();
        __break(1u);
      }
      return result;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  v14[1] = 0x80000001B6F3DC60;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v13 = sub_1B6E32148();
  v14[0] = 1;
  sub_1B6B33B70(v13, 0xD000000000000029, 0x80000001B6F3DC60, v14);
  swift_release();
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

uint64_t sub_1B629E0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B6E324B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v9, v13);
  uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B62CAAD8(a1, (uint64_t)v19);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v16)
  {
    v17(v11, 0, 1, a3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v15, v11, a3);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v12 + 40))(a2, v15, a3);
  }
  else
  {
    v17(v11, 1, 1, a3);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v6);
  }
}

uint64_t sub_1B629E2CC()
{
  uint64_t v70 = v0;
  id v1 = sub_1B629EC48(*(void *)(v0 + 480), *(void *)(v0 + 488), *(void **)(v0 + 496));
  *(void *)(v0 + 536) = v1;
  *(void *)(v0 + 544) = v2;
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 504);
  swift_unknownObjectRetain();
  sub_1B62D8D6C(v3, v4, v5, (uint64_t *)(v0 + 264));
  swift_unknownObjectRelease();
  sub_1B6312FE4(v0 + 264, v0 + 344, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  if (!*(void *)(v0 + 352))
  {
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  uint64_t v6 = (_OWORD *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 512);
  *(void *)(v0 + 256) = *(void *)(v0 + 376);
  long long v8 = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 240) = v8;
  uint64_t v9 = *(void *)(v0 + 248);
  uint64_t v10 = *(void *)(v0 + 256);
  *(void *)(v0 + 448) = v10;
  *(void *)(v0 + 552) = v9;
  uint64_t v11 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 232);
  *(void *)(v0 + 560) = v12;
  uint64_t v68 = v0 + 448;
  uint64_t v13 = sub_1B62D5DBC(v11, v12, v9, v10);
  *(void *)(v0 + 568) = v13;
  uint64_t v14 = OBJC_IVAR____TtC3VFX11ShaderCache_lock;
  *(void *)(v0 + 576) = OBJC_IVAR____TtC3VFX11ShaderCache_lock;
  uint64_t v15 = v7 + v14;
  int v16 = *(os_unfair_lock_s **)(v7 + v14 + 24);
  os_unfair_lock_lock(v16);
  uint64_t v17 = *(void *)(v7 + 56);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1B62C1A30(v13), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(v17 + 56) + 56 * v18;
    uint64_t v21 = *(void *)v20;
    *(void *)(v0 + 584) = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    *(void *)(v0 + 592) = v22;
    uint64_t v23 = *(void *)(v20 + 16);
    *(void *)(v0 + 600) = v23;
    uint64_t v24 = *(void *)(v20 + 24);
    *(void *)(v0 + 608) = v24;
    uint64_t v25 = *(void *)(v20 + 32);
    *(void *)(v0 + 616) = v25;
    uint64_t v26 = *(void *)(v20 + 40);
    *(void *)(v0 + 624) = v26;
    int v27 = *(unsigned __int8 *)(v20 + 48);
    *(unsigned char *)(v0 + 66) = v27;
    uint64_t v66 = v21;
    sub_1B629EBB8(v21, v22, v23, v24, v25, v26, v27);
    os_unfair_lock_unlock(v16);
    if (v27 == 1)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6384640(v0 + 240, v0 + 456);
      sub_1B62D8C10(v0 + 456);
      swift_unknownObjectRelease();
      sub_1B62D8C3C(v68);
      swift_unknownObjectRelease();
      uint64_t v3 = (void *)v66;
      uint64_t v28 = swift_unknownObjectRetain();
      sub_1B6385A14(v28, v22, v23, v24, v25, v26, 1u);
LABEL_14:
      swift_task_dealloc();
      swift_task_dealloc();
      int v36 = *(uint64_t (**)(void *))(v0 + 8);
      return v36(v3);
    }
    sub_1B629EBB8(v66, v22, v23, v24, v25, v26, 0);
    sub_1B629EBB8(v66, v22, v23, v24, v25, v26, 0);
    char v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v63;
    uint64_t v59 = sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    *char v63 = v0;
    v63[1] = sub_1B63946D0;
    uint64_t v60 = MEMORY[0x1E4FBC0F0];
    uint64_t v61 = v0 + 128;
    uint64_t v62 = v66;
  }
  else
  {
    uint64_t v65 = v15;
    uint64_t v67 = v13;
    uint64_t v64 = v0 + 432;
    uint64_t v29 = *(void *)(v0 + 512);
    os_unfair_lock_unlock(v16);
    __int16 v30 = *(void (**)(uint64_t))(v29 + OBJC_IVAR____TtC3VFX11ShaderCache_onShaderCompilation);
    char v31 = &unk_1EB985000;
    if (v30)
    {
      if (v30 == (void (*)(uint64_t))1)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        v69[0] = 0;
        v69[1] = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        *(void *)(v0 + 416) = 0;
        *(void *)(v0 + 424) = 0xE000000000000000;
        sub_1B6E31948();
        long long v32 = *(_OWORD *)(v0 + 240);
        *(_OWORD *)(v0 + 304) = *v6;
        *(_OWORD *)(v0 + 320) = v32;
        *(void *)(v0 + 336) = *(void *)(v0 + 256);
        sub_1B6E32B18();
        uint64_t v33 = *(void *)(v0 + 416);
        uint64_t v34 = *(void *)(v0 + 424);
        int v35 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        v69[0] = 0;
        swift_retain();
        sub_1B6B33E34(v35, v69, v33, v34);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        char v31 = (void *)&unk_1EB985000;
      }
      else
      {
        uint64_t v38 = *(os_unfair_lock_s **)(v15 + 24);
        swift_retain();
        os_unfair_lock_lock(v38);
        *(void *)(v0 + 408) = &type metadata for FunctionDescriptor;
        uint64_t v39 = swift_allocObject();
        *(void *)(v0 + 384) = v39;
        long long v40 = *(_OWORD *)(v0 + 240);
        *(_OWORD *)(v39 + 16) = *v6;
        *(_OWORD *)(v39 + 32) = v40;
        *(void *)(v39 + 48) = *(void *)(v0 + 256);
        sub_1B6384640(v0 + 240, v0 + 472);
        swift_bridgeObjectRetain();
        sub_1B63846D0(v0 + 472);
        swift_unknownObjectRetain();
        sub_1B6399A44(v68);
        v30(v0 + 384);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 384);
        uint64_t v41 = v38;
        char v31 = &unk_1EB985000;
        os_unfair_lock_unlock(v41);
        sub_1B67A21D4((unint64_t)v30);
      }
    }
    uint64_t v42 = *(void *)(v0 + 528);
    uint64_t v43 = *(void *)(v0 + 512);
    char v44 = *(unsigned char *)(v0 + 65);
    sub_1B6E31DC8();
    uint64_t v45 = sub_1B6E31DE8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v42, 0, 1, v45);
    sub_1B6384640(v0 + 240, v64);
    uint64_t v46 = swift_allocObject();
    long long v47 = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v46 + 16) = *v6;
    *(_OWORD *)(v46 + 32) = v47;
    *(void *)(v46 + 48) = *(void *)(v0 + 256);
    *(void *)(v46 + 56) = v67;
    *(void *)(v46 + 64) = v43;
    *(unsigned char *)(v46 + 72) = v44;
    *(void *)(v46 + 80) = v4;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6399A44(v68);
    sub_1B63846D0(v64);
    uint64_t v48 = qword_1EB9852D0;
    swift_retain();
    if (v48 != -1) {
      swift_once();
    }
    uint64_t v49 = v31[159];
    swift_retain();
    if (v49 != -1) {
      swift_once();
    }
    uint64_t v50 = *(void *)(v0 + 528);
    uint64_t v51 = *(void *)(v0 + 520);
    uint64_t v52 = qword_1EB997FF0;
    swift_retain();
    swift_release();
    uint64_t v53 = (void (*)(uint64_t))MEMORY[0x1E4FBCFE8];
    sub_1B639956C(v50, v51, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
    int v54 = (void *)swift_allocObject();
    v54[2] = 0;
    v54[3] = 0;
    v54[4] = v52;
    v54[5] = &unk_1E9DCFF38;
    v54[6] = v46;
    uint64_t v55 = sub_1B6398DF8(v51, (uint64_t)&unk_1E9DCFF48, (uint64_t)v54);
    *(void *)(v0 + 648) = v55;
    sub_1B6399510(v50, (unint64_t *)&unk_1EB980390, v53);
    uint64_t v56 = *(os_unfair_lock_s **)(v65 + 24);
    os_unfair_lock_lock(v56);
    *(void *)(v0 + 16) = v55;
    *(_OWORD *)(v0 + 24) = 0u;
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 49) = 0u;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v69[0] = *(void *)(v7 + 56);
    *(void *)(v7 + 56) = 0x8000000000000000;
    sub_1B6384C30(v0 + 16, v67, isUniquelyReferenced_nonNull_native);
    *(void *)(v7 + 56) = v69[0];
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v56);
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 656) = v58;
    uint64_t v59 = sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    *uint64_t v58 = v0;
    v58[1] = sub_1B63927A8;
    uint64_t v60 = MEMORY[0x1E4FBC0F0];
    uint64_t v61 = v0 + 176;
    uint64_t v62 = v55;
  }
  return MEMORY[0x1F4187D90](v61, v62, &type metadata for ShaderCache.SpecializedFunction, v59, v60);
}

uint64_t sub_1B629EBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  else
  {
    return swift_retain();
  }
}

id sub_1B629EC48(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    swift_unknownObjectRetain();
    uint64_t v7 = (void *)sub_1B6E31768();
    id v8 = objc_msgSend(a3, sel_newFunctionWithName_, v7);

    if (!v8)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      unint64_t v19 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B62F3064(0, (unint64_t *)&qword_1EB980440);
      sub_1B6E32B18();
      int v9 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_1EB997FF0;
      uint64_t v18 = 0;
      swift_retain();
      id v8 = (id)v10;
      sub_1B6B33E34(v9, &v18, 0, 0xE000000000000000);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B67A2B7C();
      swift_allocError();
      *(void *)uint64_t v11 = a1;
      *(void *)(v11 + 8) = a2;
      *(void *)(v11 + 16) = a3;
      *(unsigned char *)(v11 + 24) = 0;
LABEL_15:
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v12 = v3;
    uint64_t v13 = *(void **)(*(void *)(v3 + 24) + OBJC_IVAR____TtC3VFX13ShaderLibrary_library);
    swift_unknownObjectRetain();
    uint64_t v14 = (void *)sub_1B6E31768();
    id v8 = objc_msgSend(v13, sel_newFunctionWithName_, v14);

    swift_unknownObjectRelease();
    if (!v8)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v19 = 0x80000001B6F34FB0;
      sub_1B6E31948();
      sub_1B6E31948();
      int v15 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v18 = 0;
      swift_retain();
      sub_1B6B33E34(v15, &v18, 0xD000000000000011, 0x80000001B6F34FB0);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      id v8 = *(id *)(*(void *)(v12 + 24) + OBJC_IVAR____TtC3VFX13ShaderLibrary_library);
      sub_1B67A2B7C();
      swift_allocError();
      *(void *)uint64_t v16 = a1;
      *(void *)(v16 + 8) = a2;
      *(void *)(v16 + 16) = v8;
      *(unsigned char *)(v16 + 24) = 0;
      swift_unknownObjectRetain();
      goto LABEL_15;
    }
    swift_unknownObjectRetain();
  }
  return v8;
}

uint64_t sub_1B629F06C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_1EB997A18;
  int v29 = 0;
  char v30 = 2;
  uint64_t v31 = 0;
  char v32 = 2;
  uint64_t v33 = 0;
  swift_retain();
  sub_1B6337390(1, 1, (uint64_t)v21);
  swift_release();
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v5 = sub_1B62B6A60();
  uint64_t v6 = v21[0];
  uint64_t v7 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v5, v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  sub_1B62CA064((uint64_t)v21);
  sub_1B62CA064((uint64_t)v21);
  v22[5] = qword_1EB997A18;
  int v23 = 0;
  char v24 = 2;
  uint64_t v25 = 0;
  char v26 = 2;
  uint64_t v27 = 0;
  swift_retain();
  sub_1B63366F8(1, 1, (uint64_t)v22);
  swift_release();
  swift_getObjectType();
  uint64_t v8 = sub_1B62B6A60();
  uint64_t v9 = v22[0];
  uint64_t v10 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v8, v9);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  sub_1B62CA064((uint64_t)v22);
  sub_1B62CA064((uint64_t)v22);
  uint64_t v11 = v2[3];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  uint64_t v14 = v2[8];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  uint64_t v16 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  uint64_t v17 = v2[13];
  swift_getObjectType();
  uint64_t v18 = sub_1B62B6A60();
  unint64_t v19 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v19);
  sub_1B62B6A68(a1, v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v18, v17);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B62B6A60();
}

uint64_t sub_1B629F444(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[7];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[12];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[17];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  uint64_t v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v17 = v2[22];
  swift_getObjectType();
  uint64_t v18 = sub_1B62B6A60();
  unint64_t v19 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v19);
  sub_1B62B6A68(a1, v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v18, v17);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v20 = v2[27];
  swift_getObjectType();
  uint64_t v21 = sub_1B62B6A60();
  uint64_t v22 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v22);
  sub_1B62B6A68(a1, v20);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v21, v20);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B629F7C8()
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v72 = qword_1EB997A18;
  int v73 = 0;
  char v74 = 2;
  uint64_t v75 = 0;
  char v76 = 2;
  uint64_t v77 = 0;
  swift_retain();
  sub_1B63AB4E8(1, (uint64_t)&v19);
  swift_release();
  int v1 = v20;
  char v2 = v21;
  uint64_t v3 = v23;
  uint64_t v4 = v22 | 5;
  *(void *)(v0 + 16) = v19;
  *(_DWORD *)(v0 + 24) = v1;
  *(unsigned char *)(v0 + 28) = v2;
  *(void *)(v0 + 32) = v4;
  *(unsigned char *)(v0 + 40) = 2;
  *(void *)(v0 + 48) = v3;
  uint64_t v66 = qword_1EB997A18;
  int v67 = 0;
  char v68 = 2;
  uint64_t v69 = 0;
  char v70 = 2;
  uint64_t v71 = 0;
  swift_retain();
  sub_1B629FB54(1, (uint64_t)&v24);
  swift_release();
  int v5 = v25;
  char v6 = v26;
  uint64_t v7 = v28;
  uint64_t v8 = v27 | 4;
  *(void *)(v0 + 56) = v24;
  *(_DWORD *)(v0 + 64) = v5;
  *(unsigned char *)(v0 + 68) = v6;
  *(void *)(v0 + 72) = v8;
  *(unsigned char *)(v0 + 80) = 2;
  *(void *)(v0 + 88) = v7;
  uint64_t v60 = qword_1EB997A18;
  int v61 = 0;
  char v62 = 2;
  uint64_t v63 = 0;
  char v64 = 2;
  uint64_t v65 = 0;
  swift_retain();
  sub_1B63AB2E0(1, (uint64_t)&v29);
  swift_release();
  int v9 = v30;
  char v10 = v31;
  uint64_t v11 = v33;
  uint64_t v12 = v32 | 4;
  *(void *)(v0 + 96) = v29;
  *(_DWORD *)(v0 + 104) = v9;
  *(unsigned char *)(v0 + 108) = v10;
  *(void *)(v0 + 112) = v12;
  *(unsigned char *)(v0 + 120) = 2;
  *(void *)(v0 + 128) = v11;
  uint64_t v54 = qword_1EB997A18;
  int v55 = 0;
  char v56 = 2;
  uint64_t v57 = 0;
  char v58 = 2;
  uint64_t v59 = 0;
  swift_retain();
  sub_1B629FB54(1, (uint64_t)v34);
  swift_release();
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for VertexLayoutCollection;
  *(void *)(inited + 40) = &off_1F0F8E708;
  sub_1B62AD184(v35);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v34);
  long long v14 = v35[1];
  *(_OWORD *)(v0 + 136) = v35[0];
  *(_OWORD *)(v0 + 152) = v14;
  *(void *)(v0 + 168) = v36;
  uint64_t v48 = qword_1EB997A18;
  int v49 = 0;
  char v50 = 2;
  uint64_t v51 = 0;
  char v52 = 2;
  uint64_t v53 = 0;
  swift_retain();
  sub_1B62949D8(1, (uint64_t)v37);
  swift_release();
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E77050;
  *(void *)(v15 + 32) = &type metadata for VertexLayoutCollection;
  *(void *)(v15 + 40) = &off_1F0F8E708;
  sub_1B62AD184(v38);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v37);
  long long v16 = v38[1];
  *(_OWORD *)(v0 + 176) = v38[0];
  *(_OWORD *)(v0 + 192) = v16;
  *(void *)(v0 + 208) = v39;
  uint64_t v42 = qword_1EB997A18;
  int v43 = 0;
  char v44 = 2;
  uint64_t v45 = 0;
  char v46 = 2;
  uint64_t v47 = 0;
  swift_retain();
  sub_1B63A19CC(1, 2, (uint64_t)v40);
  swift_release();
  long long v17 = v40[1];
  *(_OWORD *)(v0 + 216) = v40[0];
  *(_OWORD *)(v0 + 232) = v17;
  *(void *)(v0 + 248) = v41;
  return v0;
}

uint64_t sub_1B629FB54@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  char v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleMeshRenderer;
  *(void *)(inited + 40) = &off_1F0F81958;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  long long v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  uint64_t v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  uint64_t v22 = v3[4];
  uint64_t v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B629FD5C()
{
  *(void *)(v0 + 16) = "ResourceUsage";
  *(void *)(v0 + 24) = 13;
  *(unsigned char *)(v0 + 32) = 2;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v172 = qword_1EB997A18;
  int v173 = 0;
  char v174 = 2;
  uint64_t v175 = 0;
  char v176 = 2;
  uint64_t v177 = 0;
  swift_retain();
  sub_1B62943C0(1, (uint64_t)&v48);
  swift_release();
  int v1 = v49;
  char v2 = v50;
  uint64_t v3 = v52;
  uint64_t v4 = v51 | 4;
  *(void *)(v0 + 40) = v48;
  *(_DWORD *)(v0 + 48) = v1;
  *(unsigned char *)(v0 + 52) = v2;
  *(void *)(v0 + 56) = v4;
  *(unsigned char *)(v0 + 64) = 2;
  *(void *)(v0 + 72) = v3;
  uint64_t v166 = qword_1EB997A18;
  int v167 = 0;
  char v168 = 2;
  uint64_t v169 = 0;
  char v170 = 2;
  uint64_t v171 = 0;
  swift_retain();
  sub_1B62A068C(1, (uint64_t)&v53);
  swift_release();
  int v5 = v54;
  char v6 = v55;
  uint64_t v7 = v57;
  uint64_t v8 = v56 | 4;
  *(void *)(v0 + 80) = v53;
  *(_DWORD *)(v0 + 88) = v5;
  *(unsigned char *)(v0 + 92) = v6;
  *(void *)(v0 + 96) = v8;
  *(unsigned char *)(v0 + 104) = 2;
  *(void *)(v0 + 112) = v7;
  uint64_t v160 = qword_1EB997A18;
  int v161 = 0;
  char v162 = 2;
  uint64_t v163 = 0;
  char v164 = 2;
  uint64_t v165 = 0;
  swift_retain();
  sub_1B6298188(1, (uint64_t)&v58);
  swift_release();
  int v9 = v59;
  char v10 = v60;
  uint64_t v11 = v62;
  uint64_t v12 = v61 | 4;
  *(void *)(v0 + 120) = v58;
  *(_DWORD *)(v0 + 128) = v9;
  *(unsigned char *)(v0 + 132) = v10;
  *(void *)(v0 + 136) = v12;
  *(unsigned char *)(v0 + 144) = 2;
  *(void *)(v0 + 152) = v11;
  uint64_t v154 = qword_1EB997A18;
  int v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  char v158 = 2;
  uint64_t v159 = 0;
  swift_retain();
  sub_1B636DA60(1, (uint64_t)&v63);
  swift_release();
  int v13 = v64;
  char v14 = v65;
  uint64_t v15 = v67;
  uint64_t v16 = v66 | 4;
  *(void *)(v0 + 160) = v63;
  *(_DWORD *)(v0 + 168) = v13;
  *(unsigned char *)(v0 + 172) = v14;
  *(void *)(v0 + 176) = v16;
  *(unsigned char *)(v0 + 184) = 2;
  *(void *)(v0 + 192) = v15;
  uint64_t v148 = qword_1EB997A18;
  int v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  char v152 = 2;
  uint64_t v153 = 0;
  swift_retain();
  sub_1B63AB264(1, (uint64_t)&v68);
  swift_release();
  int v17 = v69;
  char v18 = v70;
  uint64_t v19 = v72;
  uint64_t v20 = v71 | 4;
  *(void *)(v0 + 200) = v68;
  *(_DWORD *)(v0 + 208) = v17;
  *(unsigned char *)(v0 + 212) = v18;
  *(void *)(v0 + 216) = v20;
  *(unsigned char *)(v0 + 224) = 2;
  *(void *)(v0 + 232) = v19;
  uint64_t v142 = qword_1EB997A18;
  int v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  char v146 = 2;
  uint64_t v147 = 0;
  swift_retain();
  sub_1B63AB16C(1, (uint64_t)&v73);
  swift_release();
  int v21 = v74;
  char v22 = v75;
  uint64_t v23 = v77;
  uint64_t v24 = v76 | 4;
  *(void *)(v0 + 240) = v73;
  *(_DWORD *)(v0 + 248) = v21;
  *(unsigned char *)(v0 + 252) = v22;
  *(void *)(v0 + 256) = v24;
  *(unsigned char *)(v0 + 264) = 2;
  *(void *)(v0 + 272) = v23;
  uint64_t v136 = qword_1EB997A18;
  int v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  char v140 = 2;
  uint64_t v141 = 0;
  swift_retain();
  sub_1B63AB0F0(1, (uint64_t)&v78);
  swift_release();
  int v25 = v79;
  char v26 = v80;
  uint64_t v27 = v82;
  uint64_t v28 = v81 | 4;
  *(void *)(v0 + 280) = v78;
  *(_DWORD *)(v0 + 288) = v25;
  *(unsigned char *)(v0 + 292) = v26;
  *(void *)(v0 + 296) = v28;
  *(unsigned char *)(v0 + 304) = 2;
  *(void *)(v0 + 312) = v27;
  uint64_t v130 = qword_1EB997A18;
  int v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  char v134 = 2;
  uint64_t v135 = 0;
  swift_retain();
  sub_1B62A1E28(1, (uint64_t)&v83);
  swift_release();
  int v29 = v84;
  char v30 = v85;
  uint64_t v31 = v87;
  uint64_t v32 = v86 | 4;
  *(void *)(v0 + 320) = v83;
  *(_DWORD *)(v0 + 328) = v29;
  *(unsigned char *)(v0 + 332) = v30;
  *(void *)(v0 + 336) = v32;
  *(unsigned char *)(v0 + 344) = 2;
  *(void *)(v0 + 352) = v31;
  uint64_t v124 = qword_1EB997A18;
  int v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  char v128 = 2;
  uint64_t v129 = 0;
  swift_retain();
  sub_1B63A7480(1, (uint64_t)&v88);
  swift_release();
  int v33 = v89;
  char v34 = v90;
  uint64_t v35 = v92;
  uint64_t v36 = v91 | 4;
  *(void *)(v0 + 360) = v88;
  *(_DWORD *)(v0 + 368) = v33;
  *(unsigned char *)(v0 + 372) = v34;
  *(void *)(v0 + 376) = v36;
  *(unsigned char *)(v0 + 384) = 2;
  *(void *)(v0 + 392) = v35;
  uint64_t v118 = qword_1EB997A18;
  int v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  char v122 = 2;
  uint64_t v123 = 0;
  swift_retain();
  sub_1B62A068C(1, (uint64_t)v93);
  swift_release();
  long long v37 = v93[1];
  *(_OWORD *)(v0 + 400) = v93[0];
  *(_OWORD *)(v0 + 416) = v37;
  *(void *)(v0 + 432) = v94;
  uint64_t v112 = qword_1EB997A18;
  int v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  char v116 = 2;
  uint64_t v117 = 0;
  swift_retain();
  sub_1B62D3230(3, 2, (uint64_t)&v95);
  swift_release();
  int v38 = v96;
  char v39 = v97;
  char v40 = v99;
  uint64_t v41 = v100;
  uint64_t v42 = v98 | 0x20;
  *(void *)(v0 + 440) = v95;
  *(_DWORD *)(v0 + 448) = v38;
  *(unsigned char *)(v0 + 452) = v39;
  *(void *)(v0 + 456) = v42;
  *(unsigned char *)(v0 + 464) = v40;
  *(void *)(v0 + 472) = v41;
  uint64_t v106 = qword_1EB997A18;
  int v107 = 0;
  char v108 = 2;
  uint64_t v109 = 0;
  char v110 = 2;
  uint64_t v111 = 0;
  swift_retain();
  sub_1B629FB54(1, (uint64_t)&v101);
  swift_release();
  int v43 = v102;
  char v44 = v103;
  uint64_t v45 = v105;
  uint64_t v46 = v104 | 4;
  *(void *)(v0 + 480) = v101;
  *(_DWORD *)(v0 + 488) = v43;
  *(unsigned char *)(v0 + 492) = v44;
  *(void *)(v0 + 496) = v46;
  *(unsigned char *)(v0 + 504) = 2;
  *(void *)(v0 + 512) = v45;
  *(unsigned char *)(v0 + 520) = 0;
  return v0;
}

uint64_t sub_1B62A02EC()
{
  uint64_t v74 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v68 = qword_1EB997A18;
  int v69 = 0;
  char v70 = 2;
  uint64_t v71 = 0;
  char v72 = 2;
  uint64_t v73 = 0;
  swift_retain();
  sub_1B6294BE0(1, (uint64_t)v17);
  swift_release();
  long long v1 = v17[1];
  *(_OWORD *)(v0 + 16) = v17[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = v18;
  uint64_t v62 = qword_1EB997A18;
  int v63 = 0;
  char v64 = 2;
  uint64_t v65 = 0;
  char v66 = 2;
  uint64_t v67 = 0;
  swift_retain();
  sub_1B62A068C(1, (uint64_t)v19);
  swift_release();
  sub_1B62E0A98(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for EmitterRuntime;
  *(void *)(inited + 40) = &off_1F0F63FA8;
  sub_1B62AD184(v20);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v19);
  long long v3 = v20[1];
  *(_OWORD *)(v0 + 56) = v20[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(void *)(v0 + 88) = v21;
  uint64_t v56 = qword_1EB997A18;
  int v57 = 0;
  char v58 = 2;
  uint64_t v59 = 0;
  char v60 = 2;
  uint64_t v61 = 0;
  swift_retain();
  sub_1B62A068C(1, (uint64_t)&v22);
  swift_release();
  int v4 = v23;
  char v5 = v24;
  uint64_t v6 = v26;
  uint64_t v7 = v25 | 4;
  *(void *)(v0 + 96) = v22;
  *(_DWORD *)(v0 + 104) = v4;
  *(unsigned char *)(v0 + 108) = v5;
  *(void *)(v0 + 112) = v7;
  *(unsigned char *)(v0 + 120) = 2;
  *(void *)(v0 + 128) = v6;
  uint64_t v50 = qword_1EB997A18;
  int v51 = 0;
  char v52 = 2;
  uint64_t v53 = 0;
  char v54 = 2;
  uint64_t v55 = 0;
  swift_retain();
  sub_1B629AD2C(1, 2, (uint64_t)v27);
  swift_release();
  long long v8 = v27[1];
  *(_OWORD *)(v0 + 136) = v27[0];
  *(_OWORD *)(v0 + 152) = v8;
  *(void *)(v0 + 168) = v28;
  uint64_t v44 = qword_1EB997A18;
  int v45 = 0;
  char v46 = 2;
  uint64_t v47 = 0;
  char v48 = 2;
  uint64_t v49 = 0;
  swift_retain();
  sub_1B62945C8(2, (uint64_t)&v29);
  swift_release();
  int v9 = v30;
  char v10 = v31;
  char v11 = v33;
  uint64_t v12 = v34;
  uint64_t v13 = v32 | 1;
  *(void *)(v0 + 176) = v29;
  *(_DWORD *)(v0 + 184) = v9;
  *(unsigned char *)(v0 + 188) = v10;
  *(void *)(v0 + 192) = v13;
  *(unsigned char *)(v0 + 200) = v11;
  *(void *)(v0 + 208) = v12;
  uint64_t v38 = qword_1EB997A18;
  int v39 = 0;
  char v40 = 2;
  uint64_t v41 = 0;
  char v42 = 2;
  uint64_t v43 = 0;
  swift_retain();
  sub_1B63A65C8((uint64_t)v35);
  swift_release();
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
  *(void *)(v14 + 32) = &type metadata for EmitterDescription;
  *(void *)(v14 + 40) = &off_1F0F76688;
  sub_1B62AD184(v36);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v35);
  long long v15 = v36[1];
  *(_OWORD *)(v0 + 216) = v36[0];
  *(_OWORD *)(v0 + 232) = v15;
  *(void *)(v0 + 248) = v37;
  return v0;
}

uint64_t sub_1B62A068C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  long long v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for EmitterDescription;
  *(void *)(inited + 40) = &off_1F0F76688;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  uint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  uint64_t v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  uint64_t v22 = v3[4];
  int v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B62A0894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B62A08B4(a1, a2, a3, (uint64_t)&unk_1F0FBADE0);
}

uint64_t sub_1B62A08B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B62A08E0(a1, *v4, v4[1], v4[2], *(void *)(a2 + 16), *(void *)(a2 + 24), a4);
}

uint64_t sub_1B62A08E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1B62A091C(a1, a7, &v9);
  if (!v7) {
    return v9;
  }
  return result;
}

uint64_t sub_1B62A091C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v3)
  {
    int v7 = sub_1B62A0988(a2);
    uint64_t result = swift_release();
    *a3 = v7;
  }
  return result;
}

uint64_t sub_1B62A0988(uint64_t a1)
{
  uint64_t result = sub_1B62C4258();
  if (!v1)
  {
    char v4 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v4 & 0x10) == 0) {
        return result;
      }
      if (result == 2) {
        return bswap32(sub_1B62AB020());
      }
      uint64_t v8 = (result << 8) | 2;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v5 = 0;
      *(void *)uint64_t v6 = v8;
      char v7 = 5;
    }
    else
    {
      uint64_t v5 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v6 = a1;
      char v7 = 3;
    }
    *(void *)(v6 + 8) = v5;
    *(unsigned char *)(v6 + 16) = v7;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B62A0A70()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v74 = qword_1EB997A18;
  int v75 = 0;
  char v76 = 2;
  uint64_t v77 = 0;
  char v78 = 2;
  uint64_t v79 = 0;
  swift_retain();
  sub_1B62A0EB4(1, (uint64_t)v13);
  swift_release();
  sub_1B62F6E08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 56) = &type metadata for DrawCallLayer;
  *(void *)(inited + 64) = &off_1F0F5E758;
  *(unsigned char *)(inited + 32) = 0;
  sub_1B62A1250(inited, (uint64_t)v14);
  swift_setDeallocating();
  sub_1B63B8BE4();
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v13);
  long long v2 = v14[1];
  *(_OWORD *)(v0 + 16) = v14[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v15;
  uint64_t v68 = qword_1EB997A18;
  int v69 = 0;
  char v70 = 2;
  uint64_t v71 = 0;
  char v72 = 2;
  uint64_t v73 = 0;
  swift_retain();
  sub_1B62A0EB4(1, (uint64_t)v16);
  swift_release();
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  *(void *)(v3 + 56) = &type metadata for DrawCallLayer;
  *(void *)(v3 + 64) = &off_1F0F5E758;
  *(unsigned char *)(v3 + 32) = 1;
  sub_1B62A1250(v3, (uint64_t)v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v16);
  long long v4 = v17[1];
  *(_OWORD *)(v0 + 56) = v17[0];
  *(_OWORD *)(v0 + 72) = v4;
  *(void *)(v0 + 88) = v18;
  uint64_t v62 = qword_1EB997A18;
  int v63 = 0;
  char v64 = 2;
  uint64_t v65 = 0;
  char v66 = 2;
  uint64_t v67 = 0;
  swift_retain();
  sub_1B62A0EB4(1, (uint64_t)v19);
  swift_release();
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  *(void *)(v5 + 56) = &type metadata for DrawCallLayer;
  *(void *)(v5 + 64) = &off_1F0F5E758;
  *(unsigned char *)(v5 + 32) = 2;
  sub_1B62A1250(v5, (uint64_t)v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v19);
  long long v6 = v20[1];
  *(_OWORD *)(v0 + 96) = v20[0];
  *(_OWORD *)(v0 + 112) = v6;
  *(void *)(v0 + 128) = v21;
  uint64_t v56 = qword_1EB997A18;
  int v57 = 0;
  char v58 = 2;
  uint64_t v59 = 0;
  char v60 = 2;
  uint64_t v61 = 0;
  swift_retain();
  sub_1B6291F14((uint64_t)v22);
  swift_release();
  long long v7 = v22[1];
  *(_OWORD *)(v0 + 136) = v22[0];
  *(_OWORD *)(v0 + 152) = v7;
  *(void *)(v0 + 168) = v23;
  uint64_t v50 = qword_1EB997A18;
  int v51 = 0;
  char v52 = 2;
  uint64_t v53 = 0;
  char v54 = 2;
  uint64_t v55 = 0;
  swift_retain();
  sub_1B629214C((uint64_t)v24);
  swift_release();
  long long v8 = v24[1];
  *(_OWORD *)(v0 + 176) = v24[0];
  *(_OWORD *)(v0 + 192) = v8;
  *(void *)(v0 + 208) = v25;
  uint64_t v44 = qword_1EB997A18;
  int v45 = 0;
  char v46 = 2;
  uint64_t v47 = 0;
  char v48 = 2;
  uint64_t v49 = 0;
  swift_retain();
  sub_1B6291CDC((uint64_t)v26);
  swift_release();
  long long v9 = v26[1];
  *(_OWORD *)(v0 + 216) = v26[0];
  *(_OWORD *)(v0 + 232) = v9;
  *(void *)(v0 + 248) = v27;
  uint64_t v38 = qword_1EB997A18;
  int v39 = 0;
  char v40 = 2;
  uint64_t v41 = 0;
  char v42 = 2;
  uint64_t v43 = 0;
  swift_retain();
  sub_1B6291ABC((uint64_t)v28);
  swift_release();
  long long v10 = v28[1];
  *(_OWORD *)(v0 + 256) = v28[0];
  *(_OWORD *)(v0 + 272) = v10;
  *(void *)(v0 + 288) = v29;
  uint64_t v32 = qword_1EB997A18;
  int v33 = 0;
  char v34 = 2;
  uint64_t v35 = 0;
  char v36 = 2;
  uint64_t v37 = 0;
  swift_retain();
  sub_1B63A6A54((uint64_t)v30);
  swift_release();
  long long v11 = v30[1];
  *(_OWORD *)(v0 + 296) = v30[0];
  *(_OWORD *)(v0 + 312) = v11;
  *(void *)(v0 + 328) = v31;
  return v0;
}

uint64_t sub_1B62A0EB4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  long long v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for DrawCallComponent;
  *(void *)(inited + 40) = &off_1F0F70A08;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  uint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  uint64_t v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  uint64_t v22 = v3[4];
  uint64_t v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

double sub_1B62A10BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v2 + 28);
  unsigned int v7 = *(unsigned __int16 *)(*(void *)v2 + 30);
  uint64_t v8 = sub_1B62F712C(a1);
  uint64_t v9 = v8;
  if (v7 >= 0x18)
  {
    uint64_t v11 = (char *)(v5 + v6 + 41);
    uint64_t v12 = *(void *)(v9 + 16);
    uint64_t v13 = sub_1B69FF104(v11, (178956971 * (unint64_t)v7) >> 32);
    uint64_t v10 = v13;
    if (v12)
    {
      *(void *)&v16[0] = v13;
      sub_1B6641928(v9);
      uint64_t v10 = *(void *)&v16[0];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v10 = v8;
  }
  sub_1B62A11A4((char *)(v10 + 32), *(void *)(v10 + 16), v3, (uint64_t)v16);
  swift_bridgeObjectRelease();
  double result = *(double *)v16;
  long long v15 = v16[1];
  *(_OWORD *)a2 = v16[0];
  *(_OWORD *)(a2 + 16) = v15;
  *(void *)(a2 + 32) = v17;
  return result;
}

uint64_t sub_1B62A11A4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a3 + 8);
  char v6 = *(unsigned char *)(a3 + 12);
  uint64_t v7 = *(void *)(a3 + 16);
  char v8 = *(unsigned char *)(a3 + 24);
  uint64_t v9 = *(void *)(a3 + 32);
  uint64_t result = sub_1B62C8668((char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 16)), (unint64_t)*(unsigned __int16 *)(*(void *)a3 + 18) >> 4, (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 20)), *(unsigned __int16 *)(*(void *)a3 + 22), (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 24)), (unint64_t)*(unsigned __int16 *)(*(void *)a3 + 26) >> 4, a1, a2);
  *(void *)a4 = result;
  *(_DWORD *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 12) = v6;
  *(void *)(a4 + 16) = v7;
  *(unsigned char *)(a4 + 24) = v8;
  *(void *)(a4 + 32) = v9;
  return result;
}

uint64_t sub_1B62A1254()
{
  uint64_t v1 = v0;
  uint64_t v253 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1B6E32228();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  char v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B6E321F8();
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v9 = sub_1B6E31418();
  MEMORY[0x1F4188790](v9 - 8, v10);
  sub_1B63989B8(0, (unint64_t *)&qword_1EB97D1B0);
  sub_1B6E31408();
  sub_1B6E321E8();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4FBCC58], v2);
  *(void *)(v1 + 16) = sub_1B6E32258();
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v247 = qword_1EB997A18;
  int v248 = 0;
  char v249 = 2;
  uint64_t v250 = 0;
  char v251 = 2;
  uint64_t v252 = 0;
  swift_retain();
  sub_1B63A7A98(1, (uint64_t)&v80);
  swift_release();
  int v11 = v81;
  char v12 = v82;
  uint64_t v13 = v84;
  uint64_t v14 = v83 | 4;
  *(void *)(v1 + 24) = v80;
  *(_DWORD *)(v1 + 32) = v11;
  *(unsigned char *)(v1 + 36) = v12;
  *(void *)(v1 + 40) = v14;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)(v1 + 56) = v13;
  uint64_t v241 = qword_1EB997A18;
  int v242 = 0;
  char v243 = 2;
  uint64_t v244 = 0;
  char v245 = 2;
  uint64_t v246 = 0;
  swift_retain();
  sub_1B62A1E28(1, (uint64_t)v85);
  swift_release();
  sub_1B638C1B8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  long long v79 = xmmword_1B6E77050;
  *(_OWORD *)(v15 + 16) = xmmword_1B6E77050;
  *(void *)(v15 + 32) = &type metadata for FileWatcher;
  *(void *)(v15 + 40) = &off_1F0F55168;
  sub_1B62AD184(v86);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v85);
  long long v16 = v86[1];
  *(_OWORD *)(v1 + 64) = v86[0];
  *(_OWORD *)(v1 + 80) = v16;
  *(void *)(v1 + 96) = v87;
  uint64_t v17 = qword_1EB997A18;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v79;
  *(void *)(v18 + 32) = &type metadata for TextureFileAsset;
  *(void *)(v18 + 40) = &off_1F0F6F940;
  uint64_t v235 = v17;
  int v236 = 0;
  char v237 = 2;
  uint64_t v238 = 0;
  char v239 = 2;
  uint64_t v240 = 0;
  swift_retain();
  sub_1B62F776C(v18, 1, (uint64_t)&v88);
  swift_setDeallocating();
  swift_deallocClassInstance();
  swift_release();
  uint64_t v19 = v92;
  uint64_t v20 = v91 | 4;
  int v21 = v89;
  char v22 = v90;
  *(void *)(v1 + 104) = v88;
  *(_DWORD *)(v1 + 112) = v21;
  *(unsigned char *)(v1 + 116) = v22;
  *(void *)(v1 + 120) = v20;
  *(unsigned char *)(v1 + 128) = 2;
  *(void *)(v1 + 136) = v19;
  uint64_t v23 = qword_1EB997A18;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v79;
  *(void *)(v24 + 32) = &type metadata for TextureFileAsset;
  *(void *)(v24 + 40) = &off_1F0F6F940;
  uint64_t v229 = v23;
  int v230 = 0;
  char v231 = 2;
  uint64_t v232 = 0;
  char v233 = 2;
  uint64_t v234 = 0;
  swift_retain();
  sub_1B62F776C(v24, 1, (uint64_t)v93);
  swift_setDeallocating();
  swift_deallocClassInstance();
  swift_release();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v79;
  *(void *)(v25 + 32) = &type metadata for TextureGPURepresentationDoNotUpload;
  *(void *)(v25 + 40) = &off_1F0F9C868;
  sub_1B628A080(v25, (uint64_t)&v94);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v93);
  uint64_t v26 = v98;
  uint64_t v27 = v97 | 4;
  int v28 = v95;
  char v29 = v96;
  *(void *)(v1 + 144) = v94;
  *(_DWORD *)(v1 + 152) = v28;
  *(unsigned char *)(v1 + 156) = v29;
  *(void *)(v1 + 160) = v27;
  *(unsigned char *)(v1 + 168) = 2;
  *(void *)(v1 + 176) = v26;
  uint64_t v30 = qword_1EB997A18;
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v79;
  *(void *)(v31 + 32) = &type metadata for TextureArrayFileAsset;
  *(void *)(v31 + 40) = &off_1F0F8B560;
  uint64_t v223 = v30;
  int v224 = 0;
  char v225 = 2;
  uint64_t v226 = 0;
  char v227 = 2;
  uint64_t v228 = 0;
  swift_retain();
  sub_1B62F776C(v31, 1, (uint64_t)&v99);
  swift_setDeallocating();
  swift_deallocClassInstance();
  swift_release();
  uint64_t v32 = v103;
  uint64_t v33 = v102 | 4;
  int v34 = v100;
  char v35 = v101;
  *(void *)(v1 + 184) = v99;
  *(_DWORD *)(v1 + 192) = v34;
  *(unsigned char *)(v1 + 196) = v35;
  *(void *)(v1 + 200) = v33;
  *(unsigned char *)(v1 + 208) = 2;
  *(void *)(v1 + 216) = v32;
  uint64_t v217 = qword_1EB997A18;
  int v218 = 0;
  char v219 = 2;
  uint64_t v220 = 0;
  char v221 = 2;
  uint64_t v222 = 0;
  swift_retain();
  sub_1B62A1E28(1, (uint64_t)&v104);
  swift_release();
  int v36 = v105;
  char v37 = v106;
  uint64_t v38 = v108;
  uint64_t v39 = v107 | 4;
  *(void *)(v1 + 224) = v104;
  *(_DWORD *)(v1 + 232) = v36;
  *(unsigned char *)(v1 + 236) = v37;
  *(void *)(v1 + 240) = v39;
  *(unsigned char *)(v1 + 248) = 2;
  *(void *)(v1 + 256) = v38;
  uint64_t v211 = qword_1EB997A18;
  int v212 = 0;
  char v213 = 2;
  uint64_t v214 = 0;
  char v215 = 2;
  uint64_t v216 = 0;
  swift_retain();
  sub_1B63A7CA0(1, (uint64_t)&v109);
  swift_release();
  int v40 = v110;
  char v41 = v111;
  uint64_t v42 = v113;
  uint64_t v43 = v112 | 4;
  *(void *)(v1 + 264) = v109;
  *(_DWORD *)(v1 + 272) = v40;
  *(unsigned char *)(v1 + 276) = v41;
  *(void *)(v1 + 280) = v43;
  *(unsigned char *)(v1 + 288) = 2;
  *(void *)(v1 + 296) = v42;
  uint64_t v205 = qword_1EB997A18;
  int v206 = 0;
  char v207 = 2;
  uint64_t v208 = 0;
  char v209 = 2;
  uint64_t v210 = 0;
  swift_retain();
  sub_1B63A2574(1, 2, (uint64_t)&v114);
  swift_release();
  int v44 = v115;
  char v45 = v116;
  uint64_t v46 = v118;
  uint64_t v47 = v117 | 4;
  *(void *)(v1 + 304) = v114;
  *(_DWORD *)(v1 + 312) = v44;
  *(unsigned char *)(v1 + 316) = v45;
  *(void *)(v1 + 320) = v47;
  *(unsigned char *)(v1 + 328) = 2;
  *(void *)(v1 + 336) = v46;
  uint64_t v199 = qword_1EB997A18;
  int v200 = 0;
  char v201 = 2;
  uint64_t v202 = 0;
  char v203 = 2;
  uint64_t v204 = 0;
  swift_retain();
  sub_1B63A9E4C(1, (uint64_t)&v119);
  swift_release();
  int v48 = v120;
  char v49 = v121;
  uint64_t v50 = v123;
  uint64_t v51 = v122 | 4;
  *(void *)(v1 + 344) = v119;
  *(_DWORD *)(v1 + 352) = v48;
  *(unsigned char *)(v1 + 356) = v49;
  *(void *)(v1 + 360) = v51;
  *(unsigned char *)(v1 + 368) = 2;
  *(void *)(v1 + 376) = v50;
  uint64_t v193 = qword_1EB997A18;
  int v194 = 0;
  char v195 = 2;
  uint64_t v196 = 0;
  char v197 = 2;
  uint64_t v198 = 0;
  swift_retain();
  sub_1B63AA464(1, (uint64_t)&v124);
  swift_release();
  int v52 = v125;
  char v53 = v126;
  uint64_t v54 = v128;
  uint64_t v55 = v127 | 4;
  *(void *)(v1 + 384) = v124;
  *(_DWORD *)(v1 + 392) = v52;
  *(unsigned char *)(v1 + 396) = v53;
  *(void *)(v1 + 400) = v55;
  *(unsigned char *)(v1 + 408) = 2;
  *(void *)(v1 + 416) = v54;
  uint64_t v187 = qword_1EB997A18;
  int v188 = 0;
  char v189 = 2;
  uint64_t v190 = 0;
  char v191 = 2;
  uint64_t v192 = 0;
  swift_retain();
  sub_1B63A7688(1, (uint64_t)&v129);
  swift_release();
  int v56 = v130;
  char v57 = v131;
  uint64_t v58 = v133;
  uint64_t v59 = v132 | 4;
  *(void *)(v1 + 424) = v129;
  *(_DWORD *)(v1 + 432) = v56;
  *(unsigned char *)(v1 + 436) = v57;
  *(void *)(v1 + 440) = v59;
  *(unsigned char *)(v1 + 448) = 2;
  *(void *)(v1 + 456) = v58;
  uint64_t v181 = qword_1EB997A18;
  int v182 = 0;
  char v183 = 2;
  uint64_t v184 = 0;
  char v185 = 2;
  uint64_t v186 = 0;
  swift_retain();
  sub_1B63A6348((uint64_t)v134);
  swift_release();
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v79;
  *(void *)(v60 + 32) = &type metadata for TextureGPURuntime;
  *(void *)(v60 + 40) = &off_1F0F74BD8;
  sub_1B62AD184(v135);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v134);
  long long v61 = v135[1];
  *(_OWORD *)(v1 + 464) = v135[0];
  *(_OWORD *)(v1 + 480) = v61;
  *(void *)(v1 + 496) = v136;
  uint64_t v175 = qword_1EB997A18;
  int v176 = 0;
  char v177 = 2;
  uint64_t v178 = 0;
  char v179 = 2;
  uint64_t v180 = 0;
  swift_retain();
  sub_1B636DA60(1, (uint64_t)v137);
  swift_release();
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = v79;
  *(void *)(v62 + 32) = &type metadata for TextureGPURuntime;
  *(void *)(v62 + 40) = &off_1F0F74BD8;
  sub_1B62AD184(v138);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v137);
  long long v63 = v138[1];
  *(_OWORD *)(v1 + 504) = v138[0];
  *(_OWORD *)(v1 + 520) = v63;
  *(void *)(v1 + 536) = v139;
  uint64_t v169 = qword_1EB997A18;
  int v170 = 0;
  char v171 = 2;
  uint64_t v172 = 0;
  char v173 = 2;
  uint64_t v174 = 0;
  swift_retain();
  sub_1B63A20CC(4, 2, (uint64_t)&v140);
  swift_release();
  int v64 = v141;
  char v65 = v142;
  uint64_t v66 = v144;
  uint64_t v67 = v143 | 4;
  *(void *)(v1 + 544) = v140;
  *(_DWORD *)(v1 + 552) = v64;
  *(unsigned char *)(v1 + 556) = v65;
  *(void *)(v1 + 560) = v67;
  *(unsigned char *)(v1 + 568) = 2;
  *(void *)(v1 + 576) = v66;
  uint64_t v163 = qword_1EB997A18;
  int v164 = 0;
  char v165 = 2;
  uint64_t v166 = 0;
  char v167 = 2;
  uint64_t v168 = 0;
  swift_retain();
  sub_1B62947D0(2, (uint64_t)v145);
  swift_release();
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = v79;
  *(void *)(v68 + 32) = &type metadata for TextureRequireCubemap;
  *(void *)(v68 + 40) = &off_1F0F8BB80;
  sub_1B63B9C40(v68, 1, (uint64_t)&v146);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v145);
  int v69 = v147;
  char v70 = v148;
  uint64_t v71 = v150;
  uint64_t v72 = v149 | 4;
  *(void *)(v1 + 584) = v146;
  *(_DWORD *)(v1 + 592) = v69;
  *(unsigned char *)(v1 + 596) = v70;
  *(void *)(v1 + 600) = v72;
  *(unsigned char *)(v1 + 608) = 2;
  *(void *)(v1 + 616) = v71;
  uint64_t v157 = qword_1EB997A18;
  int v158 = 0;
  char v159 = 2;
  uint64_t v160 = 0;
  char v161 = 2;
  uint64_t v162 = 0;
  swift_retain();
  sub_1B63A2320(1, 1, (uint64_t)v151);
  swift_release();
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = v79;
  *(void *)(v73 + 32) = &type metadata for TextureGPURepresentationDoNotUpload;
  *(void *)(v73 + 40) = &off_1F0F9C868;
  sub_1B62AD184(&v152);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v151);
  int v74 = v153;
  char v75 = v154;
  uint64_t v76 = v156;
  uint64_t v77 = v155 | 4;
  *(void *)(v1 + 624) = v152;
  *(_DWORD *)(v1 + 632) = v74;
  *(unsigned char *)(v1 + 636) = v75;
  *(void *)(v1 + 640) = v77;
  *(unsigned char *)(v1 + 648) = 2;
  *(void *)(v1 + 656) = v76;
  return v1;
}

uint64_t sub_1B62A1E28@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  char v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for TextureFileAsset;
  *(void *)(inited + 40) = &off_1F0F6F940;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  long long v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  uint64_t v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  char v22 = v3[4];
  uint64_t v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B62A2030@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B62A205C(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1B62A205C(void *a1)
{
  sub_1B62A22C4(0, &qword_1EB980A98, (uint64_t (*)(void))sub_1B62A232C, (uint64_t)&type metadata for AABB.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A232C();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62A22C4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    LOBYTE(v11) = 0;
    sub_1B62AAD08((unint64_t *)&qword_1EB97D210);
    sub_1B6E32DF8();
    v10[1] = v12;
    char v13 = 1;
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v10[0] = v11;
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

void sub_1B62A22C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B62A232C()
{
  unint64_t result = qword_1EB97FC10;
  if (!qword_1EB97FC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC10);
  }
  return result;
}

uint64_t sub_1B62A2380@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62A23B4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B62A23B4(void *a1)
{
  sub_1B62BAC28(0, &qword_1EB980A88, (uint64_t (*)(void))sub_1B62A26DC, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A26DC();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_1B62A2730();
    sub_1B6E32DF8();
    uint64_t v9 = v11;
    sub_1B62D85D4(0, &qword_1EB980280, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBB320]);
    char v12 = 1;
    sub_1B62A2648();
    swift_retain();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v9;
}

unint64_t sub_1B62A2648()
{
  unint64_t result = qword_1EB980288;
  if (!qword_1EB980288)
  {
    sub_1B62D85D4(255, &qword_1EB980280, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBB320]);
    sub_1B62A2730();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980288);
  }
  return result;
}

unint64_t sub_1B62A26DC()
{
  unint64_t result = qword_1EB97FBC8;
  if (!qword_1EB97FBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBC8);
  }
  return result;
}

unint64_t sub_1B62A2730()
{
  unint64_t result = qword_1EB97F7F8;
  if (!qword_1EB97F7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F7F8);
  }
  return result;
}

uint64_t sub_1B62A2784()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 5056);
  uint64_t v2 = *(void *)(v0 + 5040);
  uint64_t v3 = *(void *)(v0 + 5024);
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(v3);
  sub_1B62C6A50(v2);
  sub_1B62C6A50(v1);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1B62A2858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for ShaderScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B62A2FE0(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AB074(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = &off_1F0F5C080;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A45A0((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = &off_1F0F5C080;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A57E0((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = &off_1F0F5C080;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63ABBE8(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B62A2FE0(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B62A2FE0@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for ShaderScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F4C0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F5C080;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t type metadata accessor for ShaderScript(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1EB97E2C8);
}

uint64_t sub_1B62A3298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for MetalFunctionScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B62A3A20(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AB1E8(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = &off_1F0F7CE60;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A4C78((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = &off_1F0F7CE60;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A5EB8((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = &off_1F0F7CE60;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63A8D54(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B62A3A20(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B62A3A20@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for MetalFunctionScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB981120, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F7CE60;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t type metadata accessor for MetalFunctionScript(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1EB981110);
}

uint64_t sub_1B62A3CD8(uint64_t a1)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_1EB997A18;
  int v38 = 0;
  char v39 = 2;
  uint64_t v40 = 0;
  char v41 = 2;
  uint64_t v42 = 0;
  swift_retain();
  sub_1B636B668(1, 1, 1, (uint64_t)v16);
  swift_release();
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v3 = sub_1B62B6A60();
  uint64_t v4 = v16[0];
  uint64_t v5 = *(os_unfair_lock_s **)(v2 + 40);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v3, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 40));
  sub_1B62CA064((uint64_t)v16);
  sub_1B62CA064((uint64_t)v16);
  uint64_t v31 = qword_1EB997A18;
  int v32 = 0;
  char v33 = 2;
  uint64_t v34 = 0;
  char v35 = 2;
  uint64_t v36 = 0;
  swift_retain();
  sub_1B62A411C(1, 1, 1, (uint64_t (*)(void))sub_1B63B8DA4, (uint64_t (*)(void))sub_1B63B13F0, (uint64_t)v17);
  swift_release();
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = v17[0];
  uint64_t v8 = *(os_unfair_lock_s **)(v2 + 40);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_1B62B6A68(a1, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 40));
  sub_1B62CA064((uint64_t)v17);
  sub_1B62CA064((uint64_t)v17);
  uint64_t v25 = qword_1EB997A18;
  int v26 = 0;
  char v27 = 2;
  uint64_t v28 = 0;
  char v29 = 2;
  uint64_t v30 = 0;
  swift_retain();
  sub_1B62A411C(1, 1, 1, (uint64_t (*)(void))sub_1B63B8CF0, (uint64_t (*)(void))sub_1B63B133C, (uint64_t)v18);
  swift_release();
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = v18[0];
  uint64_t v11 = *(os_unfair_lock_s **)(v2 + 40);
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_1B62B6A68(a1, v10);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v10);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 40));
  sub_1B62CA064((uint64_t)v18);
  sub_1B62CA064((uint64_t)v18);
  v19[5] = qword_1EB997A18;
  int v20 = 0;
  char v21 = 2;
  uint64_t v22 = 0;
  char v23 = 2;
  uint64_t v24 = 0;
  swift_retain();
  sub_1B62A411C(1, 1, 1, (uint64_t (*)(void))sub_1B63B8C3C, (uint64_t (*)(void))sub_1B63B1288, (uint64_t)v19);
  swift_release();
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = v19[0];
  uint64_t v14 = *(os_unfair_lock_s **)(v2 + 40);
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_1B62B6A68(a1, v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v13);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 40));
  sub_1B62CA064((uint64_t)v19);
  return sub_1B62CA064((uint64_t)v19);
}

uint64_t sub_1B62A411C@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = v6;
  uint64_t v11 = a4(0);
  uint64_t v12 = a5(0);
  uint64_t v13 = *v8;
  uint64_t v14 = *v8 + 41;
  uint64_t v15 = *(unsigned __int16 *)(*v8 + 16);
  unint64_t v16 = *(unsigned __int16 *)(*v8 + 18);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = &off_1F0F62CB8;
  *(void *)(inited + 48) = v12;
  *(void *)(inited + 56) = &off_1F0F84790;
  *(void *)(inited + 64) = &type metadata for AnimationTimeSource;
  *(void *)(inited + 72) = &off_1F0F7C308;
  if (v16 > 0xF)
  {
    uint64_t v36 = sub_1B62F79D4((char *)(v14 + v15), v16 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v36;
  }
  uint64_t v18 = *(unsigned __int16 *)(v13 + 20);
  int64_t v19 = *(unsigned __int16 *)(v13 + 22);
  sub_1B62D8328(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_1B6E77D10;
  *(unsigned char *)(v20 + 32) = a1;
  *(unsigned char *)(v20 + 33) = a2;
  *(unsigned char *)(v20 + 34) = a3;
  if (v19)
  {
    uint64_t v36 = sub_1B62F7C94((char *)(v14 + v18), v19);
    sub_1B62F81D8(v20);
    uint64_t v20 = v36;
    unint64_t v21 = *(void *)(v36 + 16);
  }
  else
  {
    unint64_t v21 = 3;
  }
  uint64_t v22 = *v8 + 41;
  char v23 = (char *)(v22 + *(unsigned __int16 *)(*v8 + 24));
  unint64_t v24 = (unint64_t)*(unsigned __int16 *)(*v8 + 26) >> 4;
  uint64_t v25 = (char *)(v22 + *(unsigned __int16 *)(*v8 + 28));
  uint64_t v26 = *(unsigned __int16 *)(*v8 + 30) / 0x18u;
  int v27 = *((_DWORD *)v8 + 2);
  char v28 = *((unsigned char *)v8 + 12);
  uint64_t v29 = v8[4];
  uint64_t v30 = v8[2];
  char v31 = *((unsigned char *)v8 + 24);
  uint64_t v32 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v20 + 32), v21, v23, v24, v25, v26);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a6 = v32;
  *(_DWORD *)(a6 + 8) = v27;
  *(unsigned char *)(a6 + 12) = v28;
  *(_WORD *)(a6 + 13) = v37;
  *(unsigned char *)(a6 + 15) = v38;
  *(void *)(a6 + 16) = v30;
  *(unsigned char *)(a6 + 24) = v31;
  *(_DWORD *)(a6 + 25) = v36;
  *(_DWORD *)(a6 + 28) = *(_DWORD *)((char *)&v36 + 3);
  *(void *)(a6 + 32) = v29;
  return result;
}

uint64_t sub_1B62A4374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for GraphScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B62A4AFC(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AB0F0(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = &off_1F0F55688;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A47E8((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = &off_1F0F55688;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A5A28((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = &off_1F0F55688;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63ABE64(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B62A4AFC(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B62A4AFC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for GraphScript(0);
  sub_1B63396FC(0, &qword_1EB97F4B8, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F55688;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B62A4D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B62A551C(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AB264(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = inited;
  *(void *)(v6 + 40) = &off_1F0F79748;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A4EC0((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = inited;
  *(void *)(v7 + 40) = &off_1F0F79748;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A6100((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = inited;
  *(void *)(v8 + 40) = &off_1F0F79748;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63A93E0(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B62A551C(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = inited;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B62A551C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F4A0, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E76B30;
  *(void *)(v14 + 32) = inited;
  *(void *)(v14 + 40) = &off_1F0F79748;
  *(void *)(v14 + 48) = v9;
  *(void *)(v14 + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(v14);
    uint64_t v14 = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(v14 + 32), *(void *)(v14 + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B62A57B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for EmitterScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B62A5F3C(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AAF7C(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = &off_1F0F5EC90;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A4110((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = &off_1F0F5EC90;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A5350((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = &off_1F0F5EC90;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63AB6F0(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B62A5F3C(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B62A5F3C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for EmitterScript(0);
  sub_1B63396FC(0, &qword_1EB97F4E0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F5EC90;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B62A61D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62A61EC(a1, a2);
}

uint64_t sub_1B62A61EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_1B62A65E0(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  unint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  int64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = type metadata accessor for VFXObjectTag();
  MEMORY[0x1F4188790](v17 - 8, v18);
  char v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E31108();
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  sub_1B62C14BC(a1, v21);
  if (sub_1B62B8F14(2000, v21, v22))
  {
    sub_1B62C14BC(a1, a1[3]);
    uint64_t v23 = v35;
    sub_1B6E33A28();
    if (!v23)
    {
      sub_1B62C14BC(&v31, v34);
      sub_1B62A6EB0(&qword_1EB97D9B8);
      uint64_t v24 = v30;
      sub_1B6E33518();
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v20, v16, v24);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v31);
LABEL_6:
      sub_1B62A66A4((uint64_t)v20, v28);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B62B1B2C();
    uint64_t v25 = v35;
    sub_1B6E33A48();
    if (!v25)
    {
      uint64_t v31 = 0;
      char v32 = 1;
      uint64_t v33 = 6580597;
      uint64_t v34 = 0xE300000000000000;
      sub_1B62A6EB0(&qword_1EB97D9B8);
      uint64_t v26 = v30;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v20, v13, v26);
      goto LABEL_6;
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B62A6648((uint64_t)v20);
}

void sub_1B62A65E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62A6648(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VFXObjectTag();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B62A66A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VFXObjectTag();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VFXObjectTag()
{
  uint64_t result = qword_1EB97D5D8;
  if (!qword_1EB97D5D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B62A6754@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62A6780(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B62A6780(void *a1)
{
  sub_1B62A72FC();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62B8F14(2000, v9, v10))
  {
    uint64_t v11 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(v14, v14[3]);
      uint64_t v11 = sub_1B6E334C8();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
    }
  }
  else
  {
    uint64_t v11 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
    sub_1B6AAF8B4();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = sub_1B6E32D98();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v11;
}

void *sub_1B62A698C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B62A69C4(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

void *sub_1B62A69C4(void *a1)
{
  sub_1B62B57B8(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v21 = sub_1B62A6EF4(MEMORY[0x1E4FBC860]);
  char v22 = 1;
  uint64_t v23 = sub_1B62A6F14(v9);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1B62C14BC(a1, v10);
  if (sub_1B62BF5E0(2010, v10, v11))
  {
    uint64_t v12 = sub_1B62C14BC(a1, a1[3]);
    sub_1B62B1B2C();
    sub_1B6E33A48();
    if (!v1)
    {
      sub_1B69143AC(0, &qword_1E9DD2770, (uint64_t (*)(uint64_t))type metadata accessor for Bindings.Value, MEMORY[0x1E4FBAEA0]);
      uint64_t v17 = 0;
      char v18 = 1;
      uint64_t v19 = 1952672100;
      uint64_t v20 = 0xE400000000000000;
      sub_1B6914288();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v14 = v16;
      swift_bridgeObjectRelease();
      uint64_t v21 = v14;
LABEL_8:
      sub_1B62B2474();
      uint64_t v12 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  else
  {
    uint64_t v12 = sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(&v17, v20);
      sub_1B62A6F34();
      sub_1B62A6E68(&qword_1EB97E580, (void (*)(uint64_t))sub_1B62A6F34);
      sub_1B6E33518();
      swift_bridgeObjectRelease();
      uint64_t v21 = v16;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v17);
      goto LABEL_8;
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_1B62A6D54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F78A0(0, a2, a3);
    uint64_t v4 = (void *)sub_1B6E32C58();
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      swift_retain();
      uint64_t v6 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v7 = *(v6 - 2);
        uint64_t v8 = *(v6 - 1);
        uint64_t v9 = *v6;
        v6 += 3;
        swift_bridgeObjectRetain();
        swift_retain();
        unint64_t v10 = sub_1B62B2CE0(v7, v8);
        *(void *)((char *)v4 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
        uint64_t v11 = (uint64_t *)(v4[6] + 16 * v10);
        *uint64_t v11 = v7;
        v11[1] = v8;
        *(void *)(v4[7] + 8 * v10) = v9;
        ++v4[2];
        --v5;
      }
      while (v5);
      swift_release();
    }
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B62A6E68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62A6EB0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6E31118();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B62A6EF4(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1EB980770, (void (*)(uint64_t))type metadata accessor for Bindings.Value);
}

void *sub_1B62A6F14(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1EB980758, (void (*)(uint64_t))type metadata accessor for PropertyDescription);
}

void sub_1B62A6F34()
{
  if (!qword_1EB97E588)
  {
    type metadata accessor for Bindings.Value();
    sub_1B62A6E68(&qword_1EB97FED0, (void (*)(uint64_t))type metadata accessor for Bindings.Value);
    sub_1B62A6E68(&qword_1EB97FEC8, (void (*)(uint64_t))type metadata accessor for Bindings.Value);
    unint64_t v0 = type metadata accessor for FastDictCoder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E588);
    }
  }
}

uint64_t sub_1B62A7030@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B62C47C4(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B62A706C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B62A7084(a1, a2);
}

uint64_t sub_1B62A7084@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B62A70B0(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1B62A70B0(void *a1)
{
  sub_1B62A72FC();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62B8F14(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(&v16, *((uint64_t *)&v17 + 1));
      sub_1B62A7358();
      sub_1B6E33518();
      long long v12 = v15;
      long long v13 = v14;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v16);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6AAF8B4();
    sub_1B6E33A48();
    if (!v1)
    {
      sub_1B62A7358();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      long long v12 = v17;
      long long v13 = v16;
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

void sub_1B62A72FC()
{
  if (!qword_1EB980930)
  {
    sub_1B6AAF8B4();
    unint64_t v0 = sub_1B6E32EA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980930);
    }
  }
}

unint64_t sub_1B62A7358()
{
  unint64_t result = qword_1EB97FC28;
  if (!qword_1EB97FC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC28);
  }
  return result;
}

__n128 sub_1B62A73AC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62A7408(a1, (int *)v8);
  if (!v2)
  {
    long long v5 = v9[0];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 123) = *(_OWORD *)((char *)v9 + 11);
    long long v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1B62A7408@<X0>(void *a1@<X0>, int *a2@<X8>)
{
  sub_1B62A7E20(0, &qword_1EB980A78, (uint64_t (*)(void))sub_1B62A8444, (uint64_t)&type metadata for ParticleDefaultRendererableCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v50 - v9;
  int v67 = 1;
  char v68 = 1;
  int v69 = -1082130432;
  uint64_t v70 = 0;
  char v71 = 0;
  *(void *)&_Q0 = 0xFFFFFFFFLL;
  *((void *)&_Q0 + 1) = 0xFFFFFFFFLL;
  long long v72 = _Q0;
  __int16 v73 = 256;
  __asm { FMOV            V0.2S, #1.0 }
  uint64_t v74 = _Q0;
  uint64_t v75 = 0;
  int v76 = 256;
  __int16 v77 = 256;
  int v78 = 0;
  unsigned __int8 v79 = 0;
  long long v63 = xmmword_1B6E4F320;
  long long v80 = xmmword_1B6E4F320;
  unsigned __int8 v81 = 0;
  int v82 = 0;
  __int16 v83 = 256;
  float v84 = 0.0;
  unsigned __int8 v85 = 0;
  int v86 = 1065353216;
  *(void *)uint64_t v87 = 0xFFFFFFFFLL;
  *(_DWORD *)&v87[15] = 0;
  *(_DWORD *)&unsigned char v87[8] = -1;
  *(_DWORD *)&v87[12] = 0;
  sub_1B62A7EF0(a1);
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_1B62C14BC(a1, v16);
  if (sub_1B62B8F14(1046, v16, v17))
  {
    char v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
    sub_1B62A7E20(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    char v66 = 11;
    sub_1B62AF038((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v18);
    sub_1B6E32DF8();
    uint64_t v74 = v64;
    char v66 = 12;
    sub_1B6E32DF8();
    uint64_t v75 = v64;
  }
  char v66 = 13;
  sub_1B62A8498();
  sub_1B6E32DF8();
  uint64_t v62 = a2;
  unsigned __int8 v79 = v64;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  sub_1B62A7E20(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  char v66 = 14;
  sub_1B62AF038((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v19);
  sub_1B6E32D78();
  long long v20 = v63;
  if ((v65 & 1) == 0) {
    long long v20 = v64;
  }
  long long v80 = v20;
  char v66 = 15;
  sub_1B62A8540();
  sub_1B6E32DF8();
  unsigned __int8 v81 = v64;
  LOBYTE(v64) = 25;
  LOBYTE(v83) = sub_1B6E32D38() & 1;
  LOBYTE(v64) = 16;
  sub_1B6E32DC8();
  int v82 = v21;
  LOBYTE(v64) = 17;
  uint64_t v22 = sub_1B6E32D58();
  float v23 = *(float *)&v22;
  if ((v22 & 0x100000000) != 0) {
    float v23 = 0.0;
  }
  float v84 = v23;
  LOBYTE(v64) = 18;
  uint64_t v24 = sub_1B6E32D58();
  float v25 = *(float *)&v24;
  if ((v24 & 0x100000000) != 0) {
    float v25 = 1.0;
  }
  int v86 = LODWORD(v25);
  LOBYTE(v64) = 19;
  unsigned __int8 v85 = sub_1B6E32D38() & 1;
  char v66 = 20;
  sub_1B62B1EA8();
  sub_1B6E32D78();
  int v26 = DWORD1(v64);
  if (BYTE8(v64)) {
    int v27 = -1;
  }
  else {
    int v27 = v64;
  }
  if (BYTE8(v64)) {
    int v26 = 0;
  }
  *(_DWORD *)uint64_t v87 = v27;
  *(_DWORD *)&v87[4] = v26;
  char v66 = 21;
  sub_1B6E32D78();
  int v29 = DWORD1(v64);
  if (BYTE8(v64)) {
    int v30 = -1;
  }
  else {
    int v30 = v64;
  }
  if (BYTE8(v64)) {
    int v29 = 0;
  }
  *(_DWORD *)&unsigned char v87[8] = v30;
  *(_DWORD *)&v87[12] = v29;
  uint64_t v31 = a1[3];
  uint64_t v32 = a1[4];
  sub_1B62C14BC(a1, v31);
  if (sub_1B62B8F14(1077, v31, v32))
  {
    LOBYTE(v64) = 22;
    v87[16] = sub_1B6E32DA8() & 1;
  }
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  sub_1B62C14BC(a1, v33);
  if (sub_1B62B8F14(1076, v33, v34))
  {
    LOBYTE(v64) = 23;
    v87[17] = sub_1B6E32DA8() & 1;
    char v66 = 24;
    sub_1B62A85E8();
    sub_1B6E32DF8();
    v87[18] = v64;
  }
  LOBYTE(v64) = 26;
  char v35 = sub_1B6E32D38();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  char v36 = (v35 == 2) | v35 & 1;
  HIBYTE(v83) = v36;
  int v37 = v67;
  int v38 = v69;
  uint64_t v39 = v70;
  char v40 = v71;
  char v41 = v73;
  char v42 = HIBYTE(v73);
  uint64_t v43 = v74;
  uint64_t v44 = v75;
  int v58 = v76;
  int v57 = v77;
  int v56 = HIBYTE(v77);
  int v45 = v78;
  int v55 = v79;
  long long v54 = v80;
  int v53 = v81;
  int v46 = v82;
  int v52 = v83;
  float v47 = v84;
  int v59 = v85;
  int v48 = v86;
  LODWORD(v63) = v87[16];
  int v61 = v87[17];
  int v60 = v87[18];
  LOBYTE(v64) = v68;
  long long v50 = v72;
  long long v51 = *(_OWORD *)v87;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t v49 = v62;
  *uint64_t v62 = v37;
  *((unsigned char *)v49 + 4) = v64;
  v49[2] = v38;
  *((void *)v49 + 2) = v39;
  *((unsigned char *)v49 + 24) = v40;
  *(_OWORD *)(v49 + 7) = v50;
  *((unsigned char *)v49 + 44) = v41;
  *((unsigned char *)v49 + 45) = v42;
  *((void *)v49 + 6) = v43;
  *((void *)v49 + 7) = v44;
  v49[16] = v58;
  *((unsigned char *)v49 + 68) = v57;
  *((unsigned char *)v49 + 69) = v56;
  v49[18] = v45;
  *((unsigned char *)v49 + 76) = v55;
  *((_OWORD *)v49 + 5) = v54;
  *((unsigned char *)v49 + 96) = v53;
  v49[25] = v46;
  *((unsigned char *)v49 + 104) = v52;
  *((unsigned char *)v49 + 105) = v36;
  *((float *)v49 + 27) = v47;
  *((unsigned char *)v49 + 112) = v59;
  v49[29] = v48;
  *(_OWORD *)(v49 + 30) = v51;
  *((unsigned char *)v49 + 136) = v63;
  *((unsigned char *)v49 + 137) = v61;
  *((unsigned char *)v49 + 138) = v60;
  return result;
}

void sub_1B62A7DBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B62A8444();
    unint64_t v7 = a3(a1, &type metadata for ParticleDefaultRendererableCodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1B62A7E20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B62A7E88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62A7EF0(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  uint64_t result = sub_1B6E33A48();
  if (v2) {
    return result;
  }
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1B62C14BC(a1, v6);
  if (sub_1B62BF5E0(2022, v6, v7))
  {
    *(void *)(v3 + 28) = 0xFFFFFFFFLL;
LABEL_4:
    sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
    sub_1B62B1EA8();
    sub_1B6E32D78();
    int v8 = v24;
    if (v26)
    {
      int v8 = -1;
      int v9 = 0;
    }
    else
    {
      int v9 = v25;
    }
    goto LABEL_7;
  }
  sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  int v9 = 0;
  *(_DWORD *)(v3 + 28) = v24;
  *(_DWORD *)(v3 + 32) = v25;
  int v8 = -1;
  if (v24 == -1 && !v25) {
    goto LABEL_4;
  }
LABEL_7:
  *(_DWORD *)(v3 + 36) = v8;
  *(_DWORD *)(v3 + 40) = v9;
  LOBYTE(v24) = 1;
  sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
  *(unsigned char *)(v3 + 44) = sub_1B6E32DA8() & 1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1B62C14BC(a1, v10);
  if (sub_1B62BF5E0(1075, v10, v11))
  {
    char v12 = 1;
  }
  else
  {
    LOBYTE(v24) = 2;
    char v12 = sub_1B6E32DA8() & 1;
  }
  *(unsigned char *)(v3 + 45) = v12;
  sub_1B62A83F0();
  sub_1B6E32DF8();
  *(_DWORD *)uint64_t v3 = v24;
  *(unsigned char *)(v3 + 4) = v25;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_1B62C14BC(a1, v13);
  if (sub_1B62BF5E0(2047, v13, v14))
  {
    if (v25)
    {
      *(_DWORD *)(v3 + 8) = -1082130432;
    }
    else
    {
      *(_DWORD *)(v3 + 8) = v24;
      *(_DWORD *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 4) = 1;
    }
  }
  else
  {
    LOBYTE(v24) = 4;
    sub_1B6E32DC8();
    *(_DWORD *)(v3 + 8) = v15;
  }
  sub_1B62A8594();
  sub_1B6E32D78();
  if (v24 == 7) {
    char v16 = 0;
  }
  else {
    char v16 = v24;
  }
  *(unsigned char *)(v3 + 24) = v16;
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_1B62C14BC(a1, v17);
  if (sub_1B62BF5E0(2023, v17, v18))
  {
    if (((v16 - 3) & 0xFC) != 0) {
      char v19 = v16;
    }
    else {
      char v19 = 0x5060304u >> (8 * (v16 - 3));
    }
    *(unsigned char *)(v3 + 24) = v19;
  }
  *(_DWORD *)(v3 + 64) = sub_1B6E32E68();
  sub_1B62A84EC();
  sub_1B6E32DF8();
  *(unsigned char *)(v3 + 68) = 6;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  sub_1B62C14BC(a1, v20);
  if (sub_1B62BF5E0(1079, v20, v21)) {
    char v22 = 1;
  }
  else {
    char v22 = sub_1B6E32DA8() & 1;
  }
  *(unsigned char *)(v3 + 69) = v22;
  uint64_t result = sub_1B6E32DC8();
  *(_DWORD *)(v3 + 72) = v23;
  return result;
}

unint64_t sub_1B62A83F0()
{
  unint64_t result = qword_1EB97FFA0;
  if (!qword_1EB97FFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FFA0);
  }
  return result;
}

unint64_t sub_1B62A8444()
{
  unint64_t result = qword_1EB97FB80;
  if (!qword_1EB97FB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FB80);
  }
  return result;
}

unint64_t sub_1B62A8498()
{
  unint64_t result = qword_1EB97F878;
  if (!qword_1EB97F878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F878);
  }
  return result;
}

unint64_t sub_1B62A84EC()
{
  unint64_t result = qword_1EB97F690;
  if (!qword_1EB97F690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F690);
  }
  return result;
}

unint64_t sub_1B62A8540()
{
  unint64_t result = qword_1EB97F458;
  if (!qword_1EB97F458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F458);
  }
  return result;
}

unint64_t sub_1B62A8594()
{
  unint64_t result = qword_1EB97ECA8;
  if (!qword_1EB97ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ECA8);
  }
  return result;
}

unint64_t sub_1B62A85E8()
{
  unint64_t result = qword_1EB97EA10;
  if (!qword_1EB97EA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EA10);
  }
  return result;
}

uint64_t sub_1B62A863C()
{
  return sub_1B62C2DD4();
}

uint64_t sub_1B62A8660(uint64_t a1)
{
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
}

uint64_t sub_1B62A8688(uint64_t a1, uint64_t a2)
{
  return sub_1B62A86BC(a1, a2, (void (*)(void))sub_1B62A87A8, MEMORY[0x1E4FBC150]);
}

uint64_t sub_1B62A86BC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = *(void *)(v8 + 48);
  sub_1B62C14BC((void *)(v8 + 16), v9);
  uint64_t result = sub_1B62A8738(v9, v10, a3, a4);
  if (!v5) {
    ++*(_DWORD *)(v8 + 80);
  }
  return result;
}

uint64_t sub_1B62A8738(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  a3();
  uint64_t result = sub_1B62AFEC4(a4, a1, a4, a2);
  if (!v4) {
    return v9;
  }
  return result;
}

unint64_t sub_1B62A87A8()
{
  unint64_t result = qword_1EB980E50;
  if (!qword_1EB980E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980E50);
  }
  return result;
}

uint64_t sub_1B62A87FC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_1B62C14BC(v0 + 2, v1);
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(1, v1, v2)) {
    return 0;
  }
  uint64_t v5 = v0[5];
  uint64_t v4 = v0[6];
  sub_1B62C14BC(v0 + 2, v5);
  (*(void (**)(void, uint64_t, uint64_t))(v4 + 8))(0, v5, v4);
  return 1;
}

double sub_1B62A88CC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62A8928(a1, v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_DWORD *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B62A8928@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v98 = a2;
  sub_1B6297594(0, &qword_1EB9809C8, (uint64_t (*)(void))sub_1B62A9A88, (uint64_t)&type metadata for EmitterDescription.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  unsigned int v9 = (char *)&v84 - v8;
  char v107 = 0;
  char v106 = 0;
  char v105 = 0;
  unsigned __int8 v104 = 1;
  unsigned __int8 v103 = 0;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A9A88();
  sub_1B6E33A48();
  if (v2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v95 = v9;
    uint64_t v96 = v6;
    uint64_t v97 = v5;
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_1B62C14BC(a1, v10);
    if (sub_1B62BF5E0(1036, v10, v11))
    {
      sub_1B6317658(0, &qword_1E9DD29C8, (uint64_t)&type metadata for EntityComponentReference, MEMORY[0x1E4FBB320]);
      char v102 = 16;
      sub_1B691F3CC();
      sub_1B6E32DF8();
      uint64_t v12 = v99;
      char v102 = 17;
      sub_1B6E32DF8();
      uint64_t v13 = v99;
      char v102 = 18;
      sub_1B6E32DF8();
      uint64_t v93 = v13;
      uint64_t v15 = v99;
      char v102 = 19;
      sub_1B6E32DF8();
      uint64_t v91 = v15;
      uint64_t v92 = v99;
      int64_t v18 = *(void *)(v12 + 16);
      if (v18)
      {
        uint64_t v99 = MEMORY[0x1E4FBC860];
        sub_1B62E1D20(0, v18, 0);
        uint64_t v19 = v99;
        unint64_t v20 = *(void *)(v99 + 16);
        uint64_t v21 = 32;
        do
        {
          uint64_t v22 = *(void *)(v12 + v21);
          uint64_t v99 = v19;
          unint64_t v23 = *(void *)(v19 + 24);
          if (v20 >= v23 >> 1)
          {
            sub_1B62E1D20(v23 > 1, v20 + 1, 1);
            uint64_t v19 = v99;
          }
          *(void *)(v19 + 16) = v20 + 1;
          *(void *)(v19 + 8 * v20 + 32) = v22;
          v21 += 16;
          ++v20;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = MEMORY[0x1E4FBC860];
      }
      uint64_t v94 = v19;
      int64_t v25 = *(void *)(v93 + 16);
      if (v25)
      {
        uint64_t v99 = MEMORY[0x1E4FBC860];
        sub_1B62E1D20(0, v25, 0);
        uint64_t v26 = v93;
        uint64_t v14 = v99;
        unint64_t v27 = *(void *)(v99 + 16);
        uint64_t v28 = 32;
        do
        {
          uint64_t v29 = *(void *)(v26 + v28);
          uint64_t v99 = v14;
          unint64_t v30 = *(void *)(v14 + 24);
          if (v27 >= v30 >> 1)
          {
            sub_1B62E1D20(v30 > 1, v27 + 1, 1);
            uint64_t v26 = v93;
            uint64_t v14 = v99;
          }
          *(void *)(v14 + 16) = v27 + 1;
          *(void *)(v14 + 8 * v27 + 32) = v29;
          v28 += 16;
          ++v27;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = MEMORY[0x1E4FBC860];
      }
      int64_t v31 = *(void *)(v91 + 16);
      if (v31)
      {
        uint64_t v99 = MEMORY[0x1E4FBC860];
        sub_1B62E1D20(0, v31, 0);
        uint64_t v32 = v91;
        uint64_t v33 = v99;
        unint64_t v34 = *(void *)(v99 + 16);
        uint64_t v35 = 32;
        do
        {
          uint64_t v36 = *(void *)(v32 + v35);
          uint64_t v99 = v33;
          unint64_t v37 = *(void *)(v33 + 24);
          if (v34 >= v37 >> 1)
          {
            sub_1B62E1D20(v37 > 1, v34 + 1, 1);
            uint64_t v32 = v91;
            uint64_t v33 = v99;
          }
          *(void *)(v33 + 16) = v34 + 1;
          *(void *)(v33 + 8 * v34 + 32) = v36;
          v35 += 16;
          ++v34;
          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease();
        uint64_t v17 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = MEMORY[0x1E4FBC860];
      }
      int64_t v38 = *(void *)(v92 + 16);
      if (v38)
      {
        uint64_t v93 = v17;
        uint64_t v91 = v14;
        uint64_t v99 = MEMORY[0x1E4FBC860];
        sub_1B62E1D20(0, v38, 0);
        uint64_t v39 = v92;
        uint64_t v24 = v99;
        unint64_t v40 = *(void *)(v99 + 16);
        uint64_t v41 = 32;
        do
        {
          uint64_t v42 = *(void *)(v39 + v41);
          uint64_t v99 = v24;
          unint64_t v43 = *(void *)(v24 + 24);
          if (v40 >= v43 >> 1)
          {
            sub_1B62E1D20(v43 > 1, v40 + 1, 1);
            uint64_t v39 = v92;
            uint64_t v24 = v99;
          }
          *(void *)(v24 + 16) = v40 + 1;
          *(void *)(v24 + 8 * v40 + 32) = v42;
          v41 += 16;
          ++v40;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
        uint64_t v14 = v91;
        uint64_t v17 = v93;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      sub_1B6317658(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
      char v102 = 0;
      sub_1B62E1EA8((unint64_t *)&unk_1EB9802D0, (void (*)(void))sub_1B62B1EA8);
      sub_1B6E32DF8();
      uint64_t v94 = v99;
      char v102 = 1;
      sub_1B6E32DF8();
      uint64_t v14 = v99;
      char v102 = 2;
      sub_1B6E32DF8();
      uint64_t v17 = v99;
      char v102 = 3;
      sub_1B6E32DF8();
      uint64_t v24 = v99;
    }
    sub_1B6317658(0, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    char v102 = 4;
    sub_1B62A98A8((unint64_t *)&qword_1EB9803F0);
    sub_1B6E32D78();
    uint64_t v93 = v17;
    uint64_t v44 = v99;
    int v90 = v100;
    int v45 = v101;
    if (v101) {
      uint64_t v44 = 0;
    }
    uint64_t v92 = v44;
    uint64_t v46 = a1[3];
    uint64_t v47 = a1[4];
    sub_1B62C14BC(a1, v46);
    if (sub_1B62BF5E0(1087, v46, v47))
    {
      uint64_t v48 = a1[3];
      uint64_t v49 = a1[4];
      sub_1B62C14BC(a1, v48);
      if (sub_1B62BF5E0(1071, v48, v49))
      {
        char v50 = 0;
      }
      else
      {
        LOBYTE(v99) = 22;
        char v50 = sub_1B6E32DA8() & 1;
      }
      char v105 = v50;
      uint64_t v56 = a1[3];
      uint64_t v57 = a1[4];
      sub_1B62C14BC(a1, v56);
      if (sub_1B62BF5E0(1051, v56, v57))
      {
        sub_1B6317658(0, &qword_1E9DD29B8, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBB718]);
        char v102 = 21;
        sub_1B691F340();
        sub_1B6E32D78();
        uint64_t v51 = v96;
        if (v101 & 1) != 0 || (v100)
        {
          uint64_t v89 = 0;
          char v105 = 1;
        }
        else
        {
          uint64_t v89 = v99;
        }
      }
      else
      {
        LOBYTE(v99) = 21;
        uint64_t v58 = sub_1B6E32E78();
        uint64_t v51 = v96;
        uint64_t v89 = v58;
      }
    }
    else
    {
      uint64_t v89 = 0;
      uint64_t v51 = v96;
    }
    LOBYTE(v99) = 5;
    int v88 = sub_1B6E32DA8();
    LOBYTE(v99) = 6;
    int v86 = sub_1B6E32DA8();
    LOBYTE(v99) = 7;
    int v85 = sub_1B6E32DA8();
    uint64_t v91 = v14;
    uint64_t v52 = v51;
    uint64_t v53 = a1[3];
    uint64_t v54 = a1[4];
    uint64_t v87 = a1;
    sub_1B62C14BC(a1, v53);
    if (sub_1B62BF5E0(1002, v53, v54))
    {
      char v55 = 1;
    }
    else
    {
      char v102 = 8;
      sub_1B62A9A34();
      sub_1B6E32DF8();
      char v55 = v99;
    }
    unsigned __int8 v104 = v55;
    uint64_t v59 = v87[3];
    uint64_t v60 = v87[4];
    sub_1B62C14BC(v87, v59);
    if (sub_1B62BF5E0(1032, v59, v60))
    {
      char v61 = 0;
    }
    else
    {
      LOBYTE(v99) = 9;
      char v61 = sub_1B6E32DA8() & 1;
    }
    char v107 = v61;
    uint64_t v62 = v87[3];
    uint64_t v63 = v87[4];
    sub_1B62C14BC(v87, v62);
    int v64 = 0;
    if (!sub_1B62BF5E0(1064, v62, v63))
    {
      LOBYTE(v99) = 10;
      sub_1B6E32DC8();
      int v64 = v65;
    }
    uint64_t v66 = v87[3];
    uint64_t v67 = v87[4];
    sub_1B62C14BC(v87, v66);
    if (sub_1B62BF5E0(1069, v66, v67))
    {
      char v68 = 0;
    }
    else
    {
      LOBYTE(v99) = 11;
      char v68 = sub_1B6E32DA8() & 1;
    }
    char v106 = v68;
    uint64_t v69 = v87[3];
    uint64_t v70 = v87[4];
    sub_1B62C14BC(v87, v69);
    if (sub_1B62B8F14(2016, v69, v70))
    {
      LOBYTE(v99) = 12;
      unsigned __int8 v103 = sub_1B6E32DA8() & 1;
      LOBYTE(v99) = 13;
      sub_1B6E32DC8();
      int v72 = v71;
    }
    else
    {
      int v72 = 1036831949;
    }
    LOBYTE(v99) = 14;
    char v73 = sub_1B6E32D38();
    LOBYTE(v99) = 15;
    uint64_t v74 = sub_1B6E32D58();
    HIDWORD(v84) = v45 | v90;
    char v75 = v88 & 1;
    int v90 = v86 & 1;
    int v88 = v85 & 1;
    int v86 = v73 & 1;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v95, v97);
    if ((v74 & 0x100000000) != 0) {
      float v76 = 1.0;
    }
    else {
      float v76 = *(float *)&v74;
    }
    char v77 = v107;
    char v78 = v106;
    char v79 = v105;
    LODWORD(v97) = v104;
    LODWORD(v96) = v103;
    uint64_t v80 = v94;
    swift_bridgeObjectRetain();
    uint64_t v81 = v91;
    swift_bridgeObjectRetain();
    uint64_t v82 = v93;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v87);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __int16 v83 = v98;
    void *v98 = v80;
    v83[1] = v81;
    v83[2] = v82;
    v83[3] = v24;
    v83[4] = v92;
    *((unsigned char *)v83 + 40) = BYTE4(v84) & 1;
    *((unsigned char *)v83 + 41) = v86;
    *((unsigned char *)v83 + 42) = v75;
    *((unsigned char *)v83 + 43) = v90;
    *((unsigned char *)v83 + 44) = v88;
    *((unsigned char *)v83 + 45) = v77;
    *((_DWORD *)v83 + 12) = v64;
    *((float *)v83 + 13) = v76;
    *((unsigned char *)v83 + 56) = v78;
    *(_WORD *)((char *)v83 + 57) = 0;
    v83[8] = v89;
    *((unsigned char *)v83 + 72) = v79;
    *((_WORD *)v83 + 37) = 0;
    *((unsigned char *)v83 + 76) = v97;
    *((unsigned char *)v83 + 77) = v96;
    *((_DWORD *)v83 + 20) = v72;
  }
  return result;
}

uint64_t sub_1B62A98A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6317658(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62A992C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62F7EBC(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62A99B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6355C68(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B62A9A34()
{
  unint64_t result = qword_1EB97F080;
  if (!qword_1EB97F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F080);
  }
  return result;
}

unint64_t sub_1B62A9A88()
{
  unint64_t result = qword_1EB97F050;
  if (!qword_1EB97F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F050);
  }
  return result;
}

double sub_1B62A9ADC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62A9B50(a1, v11);
  if (!v2)
  {
    long long v5 = v11[11];
    *(_OWORD *)(a2 + 160) = v11[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v11[12];
    *(unsigned char *)(a2 + 208) = v12;
    long long v6 = v11[7];
    *(_OWORD *)(a2 + 96) = v11[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v11[9];
    *(_OWORD *)(a2 + 128) = v11[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v11[3];
    *(_OWORD *)(a2 + 32) = v11[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v11[5];
    *(_OWORD *)(a2 + 64) = v11[4];
    *(_OWORD *)(a2 + 80) = v9;
    double result = *(double *)v11;
    long long v10 = v11[1];
    *(_OWORD *)a2 = v11[0];
    *(_OWORD *)(a2 + 16) = v10;
  }
  return result;
}

uint64_t sub_1B62A9B50@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_1B62AA450(0, &qword_1EB9808B0, (uint64_t (*)(void))sub_1B62AAA98, (uint64_t)&type metadata for EmitterShape.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  long long v10 = (char *)&v52 - v9;
  uint64_t v11 = a1[3];
  uint64_t v66 = a1;
  sub_1B62C14BC(a1, v11);
  sub_1B62AAA98();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v66);
  }
  int v65 = a2;
  char v67 = 1;
  sub_1B62AAA44();
  sub_1B6E32DF8();
  uint64_t v12 = v6;
  long long v13 = v68;
  int v14 = v69;
  LOBYTE(v68) = 3;
  int v15 = sub_1B6E32DA8();
  uint64_t v61 = v13;
  int v62 = v15;
  int v63 = v14;
  uint64_t v64 = *((void *)&v13 + 1);
  sub_1B62AA5A0(0, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction, MEMORY[0x1E4FBB718]);
  char v67 = 4;
  sub_1B62AA9B4(&qword_1EB97DE88, (void (*)(void))sub_1B62AAA44);
  sub_1B6E32DF8();
  long long v16 = v68;
  int v60 = v69;
  char v67 = 5;
  sub_1B62AAAEC();
  sub_1B6E32DF8();
  uint64_t v58 = *((void *)&v16 + 1);
  uint64_t v59 = v16;
  int v18 = v68;
  int v19 = BYTE4(v68);
  sub_1B62AA858();
  char v67 = 6;
  uint64_t v20 = sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  *(void *)&long long v57 = v20;
  int v55 = v19;
  int v56 = v18;
  uint64_t v21 = v68;
  sub_1B62AA450(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  char v67 = 7;
  sub_1B62AF09C((unint64_t *)&qword_1EB97D1F0);
  sub_1B6E32DF8();
  long long v54 = v68;
  char v67 = 8;
  sub_1B6E32DF8();
  uint64_t v22 = v68;
  LOBYTE(v68) = 9;
  sub_1B6E32DC8();
  int v24 = v23;
  char v67 = 0;
  sub_1B6E32D78();
  if (BYTE8(v68)) {
    float v25 = 6.2832;
  }
  else {
    float v25 = *((float *)&v68 + 1);
  }
  if (BYTE8(v68)) {
    float v26 = 0.0;
  }
  else {
    float v26 = *(float *)&v68;
  }
  char v67 = 2;
  sub_1B62AA90C();
  sub_1B6E32D78();
  unint64_t v27 = v10;
  uint64_t v28 = v12;
  if (v69 == 255)
  {
    LOBYTE(v68) = 18;
    char v31 = sub_1B6E32D38();
    uint64_t v32 = 100;
    if (v31)
    {
      char v33 = 1;
    }
    else
    {
      uint64_t v32 = 0;
      char v33 = 2;
    }
    if (v31 == 2) {
      uint64_t v34 = 0;
    }
    else {
      uint64_t v34 = v32;
    }
    long long v53 = (unint64_t)v34;
    if (v31 == 2) {
      char v29 = 2;
    }
    else {
      char v29 = v33;
    }
  }
  else
  {
    char v29 = v69;
    long long v53 = v68;
  }
  char v67 = 10;
  sub_1B6E32DF8();
  uint64_t v30 = v68;
  char v67 = 11;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  uint64_t v35 = v68;
  char v67 = 12;
  sub_1B62AAB40();
  sub_1B6E32D78();
  if (v68 == 4) {
    char v36 = 2;
  }
  else {
    char v36 = v68;
  }
  char v67 = 13;
  sub_1B6E32D78();
  if (v69) {
    __asm { FMOV            V0.4S, #1.0 }
  }
  else {
    _Q0 = v68;
  }
  long long v57 = _Q0;
  char v67 = 14;
  sub_1B6E32D78();
  long long v52 = 0u;
  if ((v69 & 1) == 0) {
    long long v52 = v68;
  }
  LOBYTE(v68) = 15;
  char v42 = sub_1B6E32DA8();
  char v67 = 16;
  sub_1B62AA960();
  sub_1B6E32D78();
  int v43 = v68;
  char v67 = 17;
  sub_1B62AA8B8();
  sub_1B6E32D78();
  if (v43 == 4) {
    LOBYTE(v43) = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v28);
  if (v68 == 3) {
    char v44 = 2;
  }
  else {
    char v44 = v68;
  }
  char v67 = v55;
  char v45 = v62 & 1;
  char v46 = v42 & 1;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v66);
  uint64_t v47 = v65;
  *int v65 = v56;
  *((unsigned char *)v47 + 4) = v67;
  *((float *)v47 + 2) = v26;
  *((float *)v47 + 3) = v25;
  uint64_t v48 = *((void *)&v53 + 1);
  *((void *)v47 + 2) = v53;
  *((void *)v47 + 3) = v48;
  *((unsigned char *)v47 + 32) = v29;
  *((unsigned char *)v47 + 33) = v43;
  *((unsigned char *)v47 + 34) = v45;
  uint64_t v49 = v64;
  *((void *)v47 + 6) = v61;
  *((void *)v47 + 7) = v49;
  *((unsigned char *)v47 + 64) = v63;
  uint64_t v50 = v58;
  *((void *)v47 + 10) = v59;
  *((void *)v47 + 11) = v50;
  *((unsigned char *)v47 + 96) = v60;
  *((unsigned char *)v47 + 97) = v44;
  v47[25] = v24;
  *((void *)v47 + 13) = v30;
  *((void *)v47 + 14) = v21;
  *((_OWORD *)v47 + 8) = v54;
  *((void *)v47 + 18) = v22;
  *((void *)v47 + 19) = v35;
  *((unsigned char *)v47 + 160) = v36;
  long long v51 = v52;
  *((_OWORD *)v47 + 11) = v57;
  *((_OWORD *)v47 + 12) = v51;
  *((unsigned char *)v47 + 208) = v46;
  return result;
}

void sub_1B62AA450(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B62AA4B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62AA520(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62AA5A0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B62AA5A0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62AA5EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62AA858();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AA64C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B68E2CC0(255, (unint64_t *)&qword_1EB980410);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AA6C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6A49C08(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AA750(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6C2F19C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AA7D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6C61954(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B62AA858()
{
  if (!qword_1EB980410)
  {
    unint64_t v0 = sub_1B6E320E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980410);
    }
  }
}

unint64_t sub_1B62AA8B8()
{
  unint64_t result = qword_1EB97F0C8;
  if (!qword_1EB97F0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F0C8);
  }
  return result;
}

unint64_t sub_1B62AA90C()
{
  unint64_t result = qword_1EB97EFC8;
  if (!qword_1EB97EFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EFC8);
  }
  return result;
}

unint64_t sub_1B62AA960()
{
  unint64_t result = qword_1EB97E3D0;
  if (!qword_1EB97E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E3D0);
  }
  return result;
}

uint64_t sub_1B62AA9B4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62AA5A0(255, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction, MEMORY[0x1E4FBB718]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B62AAA44()
{
  unint64_t result = qword_1EB97DE78;
  if (!qword_1EB97DE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DE78);
  }
  return result;
}

unint64_t sub_1B62AAA98()
{
  unint64_t result = qword_1EB97DE48;
  if (!qword_1EB97DE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DE48);
  }
  return result;
}

unint64_t sub_1B62AAAEC()
{
  unint64_t result = qword_1EB97DE40;
  if (!qword_1EB97DE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DE40);
  }
  return result;
}

unint64_t sub_1B62AAB40()
{
  unint64_t result = qword_1EB97DAA0;
  if (!qword_1EB97DAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DAA0);
  }
  return result;
}

uint64_t sub_1B62AAB94@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B62AABC0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B62AABC0(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v1)
  {
    sub_1B62C14BC(v4, v4[3]);
    sub_1B62AADE8();
    sub_1B62AACC4((unint64_t *)&qword_1EB97D210);
    sub_1B6E33518();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

uint64_t sub_1B62AACC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62AADE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AAD08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62A22C4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AAD84(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6D38FC4(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B62AADE8()
{
  if (!qword_1EB980EF0)
  {
    sub_1B6645830();
    unint64_t v0 = sub_1B6E338C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980EF0);
    }
  }
}

float sub_1B62AAE44(uint64_t a1)
{
  return sub_1B62AAE6C(a1);
}

float sub_1B62AAE6C(uint64_t a1)
{
  sub_1B62AAEA4(a1, &v3);
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t sub_1B62AAEA4@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v2)
  {
    if (sub_1B62AAF3C())
    {
      unsigned int v5 = sub_1B62AB020();
      uint64_t result = swift_release();
      *a2 = bswap32(v5);
    }
    else
    {
      uint64_t result = swift_release();
      *a2 = 0;
    }
  }
  return result;
}

uint64_t sub_1B62AAF3C()
{
  uint64_t result = sub_1B62C4258();
  if (!v0)
  {
    if ((result & 0xE0) == 0x40)
    {
      if (result == 64) {
        return result != 64;
      }
      uint64_t v2 = result & 0xF;
      if (v2 == 2) {
        return result != 64;
      }
      uint64_t v6 = (v2 << 8) | 2;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v3 = 0;
      *(void *)uint64_t v4 = v6;
      char v5 = 5;
    }
    else
    {
      uint64_t v3 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v4 = &unk_1F0F51EE8;
      char v5 = 3;
    }
    *(void *)(v4 + 8) = v3;
    *(unsigned char *)(v4 + 16) = v5;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B62AB020()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = v0[3];
  uint64_t v3 = v0[4] + 4;
  uint64_t v4 = v0[2];
  unint64_t v5 = v2 >> 62;
  uint64_t v6 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      if ((uint64_t)(0xFFFFFFFF00000001 * v4) >> 32 >= v3) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 2uLL:
      if (*(void *)(v4 + 24) - *(void *)(v4 + 16) >= v3) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_9;
      }
      unsigned int v13 = 0;
      memset(v12, 0, 14);
      uint64_t v7 = (char *)v12;
      goto LABEL_15;
    default:
      if (BYTE6(v2) < v3)
      {
LABEL_9:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v8 = xmmword_1B6E50D30;
        *(unsigned char *)(v8 + 16) = 6;
        return swift_willThrow();
      }
LABEL_10:
      unsigned int v13 = 0;
      if (!v5)
      {
        v12[0] = v4;
        LOWORD(v12[1]) = v2;
        BYTE2(v12[1]) = BYTE2(v2);
        BYTE3(v12[1]) = BYTE3(v2);
        BYTE4(v12[1]) = BYTE4(v2);
        BYTE5(v12[1]) = BYTE5(v2);
        uint64_t v7 = (char *)v12 + BYTE6(v2);
LABEL_15:
        sub_1B62C2840(&v13, (uint64_t)&v14, (uint64_t)v12, (int)v7, (uint64_t)v0, 4);
        goto LABEL_18;
      }
      if (v5 == 1)
      {
        swift_retain();
        sub_1B62FFBB0(v4, v2);
        sub_1B6B17C88((int)v4, v4 >> 32, v2 & 0x3FFFFFFFFFFFFFFFLL, &v13, (uint64_t)v0, 4);
        if (!v1)
        {
          sub_1B62C2360(v4, v2);
LABEL_18:
          v0[4] += 4;
          return v13;
        }
        sub_1B62C2360(v4, v2);
        __break(1u);
      }
      else
      {
        uint64_t v10 = *(void *)(v4 + 16);
        uint64_t v11 = *(void *)(v4 + 24);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B6B17C88(v10, v11, v2 & 0x3FFFFFFFFFFFFFFFLL, &v13, (uint64_t)v0, 4);
        if (!v6)
        {
          swift_release();
          swift_release();
          goto LABEL_18;
        }
      }
      swift_release();
      uint64_t result = swift_release();
      __break(1u);
      return result;
  }
}

uint64_t sub_1B62AB2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B62C2F50(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B62C40F4) & 1;
}

unint64_t sub_1B62AB31C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1B62AB350(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  }
  return result;
}

unint64_t sub_1B62AB350(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C550C((uint64_t)v9, v10);
  uint64_t v3 = sub_1B6E33148();
  uint64_t v5 = v3;
  unsigned __int8 v6 = 1;
  switch(v3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      break;
    case 5:
    case 6:
      uint64_t v5 = 4;
      break;
    case 7:
      sub_1B62C550C((uint64_t)v9, v10);
      sub_1B6E33138();
      unsigned __int8 v6 = 0;
      uint64_t v5 = v7;
      break;
    case 8:
      uint64_t v5 = 5;
      break;
    default:
      sub_1B62C1550((uint64_t)v9, (uint64_t)v8);
      sub_1B6E32998();
      swift_allocError();
      sub_1B6E32958();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
      swift_willThrow();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v5 | ((unint64_t)v6 << 32);
}

uint64_t sub_1B62AB4FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for TriggerScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B62ABC84(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AAF00(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = &off_1F0F625E0;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A3EC8((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = &off_1F0F625E0;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A5108((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = &off_1F0F625E0;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63AAC84(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B62ABC84(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B62ABC84@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for TriggerScript(0);
  sub_1B63396FC(0, &qword_1EB981130, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F625E0;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B62ABF1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B62AC77C(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AB16C(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = updated;
  *(void *)(v6 + 40) = &off_1F0F83030;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A4A30((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = updated;
  *(void *)(v7 + 40) = &off_1F0F83030;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A5C70((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = updated;
  *(void *)(v8 + 40) = &off_1F0F83030;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63A84C0(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B62AC77C(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = updated;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

void sub_1B62AC6A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B62AC710(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62AC77C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  sub_1B63396FC(0, &qword_1EB97F4B0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = updated;
  *(void *)(inited + 40) = &off_1F0F83030;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B62ACA14()
{
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v107 = qword_1EB997A18;
  int v108 = 0;
  char v109 = 2;
  uint64_t v110 = 0;
  char v111 = 2;
  uint64_t v112 = 0;
  swift_retain();
  sub_1B63A0D08((uint64_t)v29);
  swift_release();
  sub_1B636E080();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B6E77050;
  *(void *)(v1 + 32) = &type metadata for ParticleGPU;
  *(void *)(v1 + 40) = &off_1F0F56480;
  sub_1B62AD184(v30);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v29);
  long long v2 = v30[1];
  *(_OWORD *)(v0 + 16) = v30[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v31;
  uint64_t v101 = qword_1EB997A18;
  int v102 = 0;
  char v103 = 2;
  uint64_t v104 = 0;
  char v105 = 2;
  uint64_t v106 = 0;
  swift_retain();
  sub_1B63A0AE8((uint64_t)v32);
  swift_release();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  *(void *)(v3 + 32) = &type metadata for ParticleGPU;
  *(void *)(v3 + 40) = &off_1F0F56480;
  sub_1B62AD184(v33);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v32);
  *(_OWORD *)(v0 + 56) = v33[0];
  *(_OWORD *)(v0 + 72) = v33[1];
  *(void *)(v0 + 88) = v34;
  uint64_t v95 = qword_1EB997A18;
  int v96 = 0;
  char v97 = 2;
  uint64_t v98 = 0;
  char v99 = 2;
  uint64_t v100 = 0;
  swift_retain();
  sub_1B62AD5C8((uint64_t)v35);
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  *(void *)(v4 + 32) = &type metadata for ParticleGPU;
  *(void *)(v4 + 40) = &off_1F0F56480;
  sub_1B62AD184(&v36);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v35);
  int v5 = v37;
  char v6 = v38;
  char v7 = v40;
  uint64_t v8 = v41;
  uint64_t v9 = v39 | 8;
  *(void *)(v0 + 96) = v36;
  *(_DWORD *)(v0 + 104) = v5;
  *(unsigned char *)(v0 + 108) = v6;
  *(void *)(v0 + 112) = v9;
  *(unsigned char *)(v0 + 120) = v7;
  *(void *)(v0 + 128) = v8;
  uint64_t v89 = qword_1EB997A18;
  int v90 = 0;
  char v91 = 2;
  uint64_t v92 = 0;
  char v93 = 2;
  uint64_t v94 = 0;
  swift_retain();
  sub_1B62AD5C8((uint64_t)v42);
  swift_release();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B6E77050;
  *(void *)(v10 + 32) = &type metadata for ParticleGPU;
  *(void *)(v10 + 40) = &off_1F0F56480;
  sub_1B62AD184(v43);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v42);
  long long v11 = v43[1];
  *(_OWORD *)(v0 + 136) = v43[0];
  *(_OWORD *)(v0 + 152) = v11;
  *(void *)(v0 + 168) = v44;
  uint64_t v83 = qword_1EB997A18;
  int v84 = 0;
  char v85 = 2;
  uint64_t v86 = 0;
  char v87 = 2;
  uint64_t v88 = 0;
  swift_retain();
  sub_1B62AD3A8((uint64_t)v45);
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B6E77050;
  *(void *)(v12 + 32) = &type metadata for ParticleGPU;
  *(void *)(v12 + 40) = &off_1F0F56480;
  sub_1B62AD184(&v46);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v45);
  int v13 = v47;
  char v14 = v48;
  char v15 = v50;
  uint64_t v16 = v51;
  uint64_t v17 = v49 | 8;
  *(void *)(v0 + 176) = v46;
  *(_DWORD *)(v0 + 184) = v13;
  *(unsigned char *)(v0 + 188) = v14;
  *(void *)(v0 + 192) = v17;
  *(unsigned char *)(v0 + 200) = v15;
  *(void *)(v0 + 208) = v16;
  uint64_t v77 = qword_1EB997A18;
  int v78 = 0;
  char v79 = 2;
  uint64_t v80 = 0;
  char v81 = 2;
  uint64_t v82 = 0;
  swift_retain();
  sub_1B62AD3A8((uint64_t)v52);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B6E77050;
  *(void *)(v18 + 32) = &type metadata for ParticleGPU;
  *(void *)(v18 + 40) = &off_1F0F56480;
  sub_1B62AD184(v53);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v52);
  long long v19 = v53[1];
  *(_OWORD *)(v0 + 216) = v53[0];
  *(_OWORD *)(v0 + 232) = v19;
  *(void *)(v0 + 248) = v54;
  uint64_t v71 = qword_1EB997A18;
  int v72 = 0;
  char v73 = 2;
  uint64_t v74 = 0;
  char v75 = 2;
  uint64_t v76 = 0;
  swift_retain();
  sub_1B62AD188((uint64_t)v55);
  swift_release();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1B6E77050;
  *(void *)(v20 + 32) = &type metadata for ParticleGPU;
  *(void *)(v20 + 40) = &off_1F0F56480;
  sub_1B62AD184(&v56);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v55);
  int v21 = v57;
  char v22 = v58;
  char v23 = v60;
  uint64_t v24 = v61;
  uint64_t v25 = v59 | 8;
  *(void *)(v0 + 256) = v56;
  *(_DWORD *)(v0 + 264) = v21;
  *(unsigned char *)(v0 + 268) = v22;
  *(void *)(v0 + 272) = v25;
  *(unsigned char *)(v0 + 280) = v23;
  *(void *)(v0 + 288) = v24;
  uint64_t v65 = qword_1EB997A18;
  int v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  char v69 = 2;
  uint64_t v70 = 0;
  swift_retain();
  sub_1B62AD188((uint64_t)v62);
  swift_release();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1B6E77050;
  *(void *)(v26 + 32) = &type metadata for ParticleGPU;
  *(void *)(v26 + 40) = &off_1F0F56480;
  sub_1B62AD184(v63);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v62);
  long long v27 = v63[1];
  *(_OWORD *)(v0 + 296) = v63[0];
  *(_OWORD *)(v0 + 312) = v27;
  *(void *)(v0 + 328) = v64;
  return v0;
}

double sub_1B62AD00C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  uint64_t v6 = *(void *)v2;
  unint64_t v7 = *(unsigned __int16 *)(*(void *)v2 + 26);
  if (v7 > 0xF)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = sub_1B62F79D4((char *)(v6 + *(unsigned __int16 *)(v6 + 24) + 41), v7 >> 4);
    if (v8)
    {
      *(void *)&v13[0] = v9;
      uint64_t v10 = swift_bridgeObjectRetain();
      sub_1B62F8084(v10);
      uint64_t v4 = *(void *)&v13[0];
    }
    else
    {
      uint64_t v4 = v9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1B62AD0D0((char *)(v4 + 32), *(void *)(v4 + 16), v3, (uint64_t)v13);
  swift_bridgeObjectRelease();
  double result = *(double *)v13;
  long long v12 = v13[1];
  *(_OWORD *)a2 = v13[0];
  *(_OWORD *)(a2 + 16) = v12;
  *(void *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_1B62AD0D0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a3 + 8);
  char v6 = *(unsigned char *)(a3 + 12);
  uint64_t v7 = *(void *)(a3 + 16);
  char v8 = *(unsigned char *)(a3 + 24);
  uint64_t v9 = *(void *)(a3 + 32);
  uint64_t result = sub_1B62C8668((char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 16)), (unint64_t)*(unsigned __int16 *)(*(void *)a3 + 18) >> 4, (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 20)), *(unsigned __int16 *)(*(void *)a3 + 22), a1, a2, (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 28)), *(unsigned __int16 *)(*(void *)a3 + 30) / 0x18u);
  *(void *)a4 = result;
  *(_DWORD *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 12) = v6;
  *(void *)(a4 + 16) = v7;
  *(unsigned char *)(a4 + 24) = v8;
  *(void *)(a4 + 32) = v9;
  return result;
}

uint64_t sub_1B62AD188@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F9218(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Scale3;
  *(void *)(inited + 40) = &off_1F0FA1118;
  *(void *)(inited + 48) = &type metadata for TransientOriginScale;
  *(void *)(inited + 56) = &off_1F0F843D8;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 2;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 2;
  *(_WORD *)(v12 + 32) = 771;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  int v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B62AD3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F9218(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Scale2;
  *(void *)(inited + 40) = &off_1F0FA0FB0;
  *(void *)(inited + 48) = &type metadata for TransientOriginScale;
  *(void *)(inited + 56) = &off_1F0F843D8;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 2;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 2;
  *(_WORD *)(v12 + 32) = 771;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  int v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B62AD5C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F9218(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Scale1;
  *(void *)(inited + 40) = &off_1F0FA0E48;
  *(void *)(inited + 48) = &type metadata for TransientOriginScale;
  *(void *)(inited + 56) = &off_1F0F843D8;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 2;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 2;
  *(_WORD *)(v12 + 32) = 771;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  int v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B62AD7E8()
{
  return sub_1B62AD818((uint64_t)&unk_1F0F9C908, MEMORY[0x1E4FBC098], MEMORY[0x1E4FBC0E0]);
}

uint64_t sub_1B62AD818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[5];
  uint64_t v9 = v3[6];
  sub_1B62C14BC(v3 + 2, v8);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v9 + 8))(0, v8, v9);
  if (!v4)
  {
    char v11 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v11 & 0x10) == 0) {
        return result;
      }
      if (!result)
      {
        uint64_t v16 = v3[5];
        uint64_t v17 = v3[6];
        sub_1B62C14BC(v3 + 2, v16);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 32))(&v18, a2, a3, v16, v17);
        return v18;
      }
      unint64_t v12 = (unint64_t)(v11 & 0xF) << 8;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v13 = v12;
      *(void *)(v13 + 8) = 0;
      char v14 = 5;
    }
    else
    {
      uint64_t v15 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v13 = a1;
      *(void *)(v13 + 8) = v15;
      char v14 = 3;
    }
    *(unsigned char *)(v13 + 16) = v14;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B62AD988@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B62AD9B4(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B62AD9B4(void *a1)
{
  sub_1B62ADBF8();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62B8F14(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(&v13, v14);
      sub_1B62ADC54();
      sub_1B6E33518();
      v12[0] = v12[1];
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v13);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B67AF01C();
    sub_1B6E33A48();
    if (!v1)
    {
      sub_1B62ADC54();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v12[0] = v13;
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

void sub_1B62ADBF8()
{
  if (!qword_1EB980898)
  {
    sub_1B67AF01C();
    unint64_t v0 = sub_1B6E32EA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980898);
    }
  }
}

unint64_t sub_1B62ADC54()
{
  unint64_t result = qword_1EB97ECF8;
  if (!qword_1EB97ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ECF8);
  }
  return result;
}

void *sub_1B62ADCA8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, void *a4@<X8>)
{
  unint64_t result = sub_1B62ADCE4(a1, a2[2], a2[3], a2[4], a3, a2[6], a2[7]);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void *sub_1B62ADCE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a7;
  uint64_t v32 = a4;
  uint64_t v33 = a6;
  uint64_t v11 = sub_1B6E324B8();
  uint64_t v13 = MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v15 = (char *)v28 - v14;
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v7) {
    goto LABEL_7;
  }
  _OWORD v28[2] = v18;
  uint64_t v29 = v15;
  uint64_t v30 = a1;
  uint64_t v20 = sub_1B6E31D18();
  sub_1B62C550C((uint64_t)v39, v40);
  uint64_t v41 = v32;
  swift_getWitnessTable();
  sub_1B6E33168();
  v28[1] = v20;
  uint64_t v21 = v35;
  sub_1B6E31D18();
  sub_1B62C550C((uint64_t)v39, v40);
  uint64_t v38 = v31;
  swift_getWitnessTable();
  sub_1B6E33168();
  uint64_t v22 = v35;
  char v19 = (void *)MEMORY[0x1BA9B3940](v21, a2);
  if (v19 != (void *)MEMORY[0x1BA9B3940](v22, a3))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v26 = 0xD000000000000017;
    *(void *)(v26 + 8) = 0x80000001B6F4F7F0;
    *(unsigned char *)(v26 + 16) = 96;
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v39);
    a1 = v30;
LABEL_7:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v19;
  }
  swift_getTupleTypeMetadata2();
  sub_1B6E31C88();
  uint64_t v37 = sub_1B6E31508();
  uint64_t v34 = v21;
  uint64_t v32 = v22;
  swift_getWitnessTable();
  sub_1B6E31F78();
  uint64_t v23 = v35;
  uint64_t v24 = v36;
  uint64_t v31 = v21;
  for (uint64_t i = v29; v24 != v23; ++v23)
  {
    sub_1B6E31D78();
    sub_1B6E31D78();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(i, 0, 1, a3);
    sub_1B6E31568();
    sub_1B6E31588();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v19 = (void *)v37;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v39);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v30);
  return v19;
}

void sub_1B62AE0F4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 <= 3)
  {
    unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      int v6 = 4;
      if (v9 < a2) {
        goto LABEL_14;
      }
      goto LABEL_21;
    }
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 1;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        break;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        break;
      default:
        return;
    }
    return;
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (a2) {
        goto LABEL_26;
      }
      break;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (a2) {
        goto LABEL_26;
      }
      break;
    case 3:
LABEL_39:
      __break(1u);
      break;
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      break;
  }
}

void *sub_1B62AE330(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *initializeBufferWithCopyOfBuffer for VertexLayout(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1B62AE45C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B62AE5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EntityInstance(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B62AE6F8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B62AE724(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B62AE724(void *a1)
{
  sub_1B62AEA74(0, (unint64_t *)&qword_1EB980930, (uint64_t (*)(void))sub_1B6AAF8B4, (uint64_t)&type metadata for ValueCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  int v8 = (char *)v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62B8F14(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(&v15, v16);
      unsigned int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B62AEA74(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      sub_1B62AF28C((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v11);
      sub_1B6E33518();
      v14[0] = v14[1];
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v15);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6AAF8B4();
    sub_1B6E33A48();
    if (!v1)
    {
      int v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B62AEA74(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      sub_1B62AF28C((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v12);
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v14[0] = v15;
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

void sub_1B62AEA74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B62AEADC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62AEB44@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B62AEB70(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B62AEB70(void *a1)
{
  sub_1B62AF4C8(0, &qword_1EB980AC8, (uint64_t (*)(void))sub_1B665846C, (uint64_t)&type metadata for Position.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  int v8 = (char *)v16 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62BF5E0(1018, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B665846C();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B62AF4C8(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      sub_1B62AEEDC((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v11);
      sub_1B6E32DF8();
      v16[0] = v17;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      long long v14 = v16[0];
      HIDWORD(v14) = 1.0;
      v16[0] = v14;
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(&v17, v18);
      int v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B62AF4C8(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      sub_1B62AEEDC((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v12);
      sub_1B6E33518();
      long long v15 = v16[1];
      HIDWORD(v15) = 1.0;
      v16[0] = v15;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v17);
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

uint64_t sub_1B62AEEDC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62AF4C8(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AEF40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B67AE294(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AEFBC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B67DC5A0(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF038(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62A7E20(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF09C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62AA450(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF118(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B69D5BD8(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF194(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6AA5EB0(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF210(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6B59204(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF28C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62AEA74(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF2F0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6C51964(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF354(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6C65C38(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF3D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6C85B80(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62AF44C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6D44AE8(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B62AF4C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62AF530@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62AF55C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B62AF55C(void *a1)
{
  sub_1B62AF7F4(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  int v8 = (char *)&v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (!sub_1B62B8F14(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B62B1B2C();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v14 = 0;
      char v15 = 1;
      uint64_t v16 = 0x797469746E65;
      uint64_t v17 = 0xE600000000000000;
      sub_1B62B1EA8();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      unsigned int v12 = v18;
      uint64_t v13 = v19;
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(&v14, v17);
  sub_1B62B1EA8();
  sub_1B6E33518();
  unsigned int v12 = v18;
  uint64_t v13 = v19;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v14);
LABEL_7:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v12 | (unint64_t)(v13 << 32);
}

void sub_1B62AF7F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62AF85C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B62AF87C(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1B62AF87C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v6 = sub_1B6E324B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  unint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = type metadata accessor for DecodeOrNil();
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v26 = a1;
  char v27 = (char *)&v26 - v13;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v3)
  {
    id v35 = v3;
    id v14 = v3;
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    int v15 = swift_dynamicCast();
    uint64_t v25 = (uint64_t)v26;
    if (v15)
    {
      unsigned __int8 v16 = v33;
      if ((v33 & 0xE0) == 0x20)
      {
        sub_1B68036F0(v31, v32, v33);
        if (v16)
        {

          uint64_t v21 = v27;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v27, 1, 1, a2);

LABEL_13:
          uint64_t v23 = v29;
          uint64_t v22 = v30;
          uint64_t v24 = v28;
          goto LABEL_14;
        }
      }
      else
      {
        sub_1B68036F0(v31, v32, v33);
      }
    }

    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v31 = 0;
    id v32 = (id)0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    id v35 = v3;
    sub_1B6E32B18();
    uint64_t v17 = (uint64_t)v31;
    uint64_t v18 = (uint64_t)v32;
    int v19 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v31 = 0;
    swift_retain();
    sub_1B6B33E34(v19, (uint64_t *)&v31, v17, v18);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    uint64_t v21 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v27, 1, 1, a2);
    goto LABEL_13;
  }
  sub_1B62C14BC(&v31, v34);
  sub_1B6E33518();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v10, 0, 1, a2);
  uint64_t v21 = v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v10, v6);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v31);
  uint64_t v23 = v29;
  uint64_t v22 = v30;
  uint64_t v24 = v28;
  uint64_t v25 = (uint64_t)v26;
LABEL_14:
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v22, v21, v23);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v25);
}

uint64_t storeEnumTagSinglePayload for EntityInstance(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for DecodeOrNil()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B62AFD80(uint64_t a1, uint64_t a2)
{
  return sub_1B62AFDAC(a1, a2, sub_1B62AFE20);
}

uint64_t sub_1B62AFDAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(v6 + 48);
  sub_1B62C14BC((void *)(v6 + 16), v7);
  uint64_t result = a3(v7, v8);
  if (!v4) {
    ++*(_DWORD *)(v6 + 80);
  }
  return result;
}

uint64_t sub_1B62AFE20(uint64_t a1, uint64_t a2)
{
  return sub_1B62AFE54(a1, a2, (void (*)(void))sub_1B62B00A8, MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_1B62AFE54(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  a3();
  uint64_t result = sub_1B62AFEC4(a4, a1, a4, a2);
  if (!v4) {
    return v9;
  }
  return result;
}

uint64_t sub_1B62AFEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a2, a4);
  if (!v4)
  {
    char v9 = result;
    if ((result & 0xE0) == 0x20)
    {
      if ((result & 0x10) == 0)
      {
        sub_1B62B0054();
        return sub_1B6E32708();
      }
      unsigned __int8 v13 = sub_1B62B00FC(a3);
      uint64_t v14 = v9 & 0xF;
      if (v14 == v13) {
        return sub_1B62B01B4(a1, a2, a3);
      }
      unint64_t v15 = v13 | (unint64_t)(v14 << 8);
      sub_1B6B17984();
      swift_allocError();
      uint64_t v10 = 0;
      *(void *)uint64_t v11 = v15;
      char v12 = 5;
    }
    else
    {
      uint64_t v10 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v11 = &unk_1F0F51DD8;
      char v12 = 3;
    }
    *(void *)(v11 + 8) = v10;
    *(unsigned char *)(v11 + 16) = v12;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1B62B0054()
{
  unint64_t result = qword_1EB980F10;
  if (!qword_1EB980F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980F10);
  }
  return result;
}

unint64_t sub_1B62B00A8()
{
  unint64_t result = qword_1EB980E78;
  if (!qword_1EB980E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980E78);
  }
  return result;
}

uint64_t sub_1B62B00FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 - 8) + 64);
  uint64_t result = 0;
  switch(v1)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 1;
      break;
    case 4:
      uint64_t result = 2;
      break;
    case 8:
      uint64_t result = 3;
      break;
    case 16:
      uint64_t result = 4;
      break;
    default:
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v3 = v1;
      *(void *)(v3 + 8) = 0;
      *(unsigned char *)(v3 + 16) = 0;
      uint64_t result = swift_willThrow();
      break;
  }
  return result;
}

uint64_t sub_1B62B01B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v12 + 32))(a3, *(void *)(*(void *)(*(void *)(v13 + 8) + 24) + 16));
  if (!v3)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, a3);
    sub_1B6E32B68();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, a3);
  }
  return result;
}

uint64_t sub_1B62B030C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62BE780(a1, a2);
}

uint64_t sub_1B62B0324@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62BE408(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B62B0350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B62B0368(a1, a2, a3);
}

uint64_t sub_1B62B0368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B62C11CC(*v3, (uint64_t)(v3 + 2), *v3, a1, (uint64_t)&type metadata for _BinaryDecoder.SingleValueStore, a2, (uint64_t)&off_1F0F679D0, a3);
}

uint64_t sub_1B62B03B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1B62B0408((uint64_t (*)(void))sub_1B62B071C, a1);
}

uint64_t sub_1B62B03DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B62B0408((uint64_t (*)(void))sub_1B62B043C, a1);
}

uint64_t sub_1B62B0408@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B62B043C(void *a1)
{
  uint64_t v3 = a1[3];
  sub_1B62C14BC(a1, v3);
  sub_1B6E33A18();
  if (v1)
  {
LABEL_4:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B62C550C((uint64_t)v6, v7);
    uint64_t v3 = 0;
    switch(sub_1B6E33148())
    {
      case 0:
        sub_1B62AA450(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        sub_1B62C550C((uint64_t)v6, v7);
        sub_1B62AF09C((unint64_t *)&qword_1EB97D1F0);
        sub_1B6E33168();
        uint64_t v3 = v5;
        break;
      case 1:
        sub_1B62AA450(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        sub_1B62C550C((uint64_t)v6, v7);
        sub_1B62AF09C((unint64_t *)&qword_1EB97D1F0);
        sub_1B6E33168();
        uint64_t v3 = v5;
        break;
      case 2:
        break;
      case 3:
        uint64_t v3 = 1;
        break;
      case 4:
        uint64_t v3 = 2;
        break;
      default:
        sub_1B62C1550((uint64_t)v6, (uint64_t)&v5);
        sub_1B6E32998();
        swift_allocError();
        sub_1B6E32958();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v5);
        swift_willThrow();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
        goto LABEL_4;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

unint64_t sub_1B62B071C(void *a1)
{
  unint64_t v3 = (unint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v7, v8);
    uint64_t v4 = sub_1B6E33148();
    unint64_t v3 = v4;
    switch(v4)
    {
      case 0:
        goto LABEL_11;
      case 2:
        sub_1B62C550C((uint64_t)v7, v8);
        unint64_t v3 = sub_1B6E33188();
        goto LABEL_11;
      case 1:
        sub_1B62AA450(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B69ACCF4((unint64_t *)&qword_1E9DD33E0);
        sub_1B6E33168();
        unint64_t v3 = (unint64_t)v6;
LABEL_11:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
        return v3;
    }
    sub_1B62C1550((uint64_t)v7, (uint64_t)&v6);
    sub_1B6E32998();
    swift_allocError();
    sub_1B6E32958();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v6);
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1B62B095C@<X0>(void *a1@<X8>)
{
  return sub_1B62B097C(*(void **)(v1 + 16), v1, a1);
}

uint64_t sub_1B62B097C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v8 = *(unsigned int *)(*(void *)(a2 + 16) + 80);
  *(void *)&long long v23 = 0x207865646E49;
  *((void *)&v23 + 1) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_1B62B0BD0(0, v7[2] + 1, 1, v7);
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1) {
    uint64_t v7 = sub_1B62B0BD0(v9 > 1, v10 + 1, 1, v7);
  }
  uint64_t v24 = &type metadata for _BinaryKey;
  unint64_t v25 = sub_1B62B0BEC();
  uint64_t v11 = swift_allocObject();
  *(void *)&long long v23 = v11;
  *(void *)(v11 + 16) = 0x207865646E49;
  *(void *)(v11 + 24) = 0xE600000000000000;
  *(void *)(v11 + 32) = v8;
  *(unsigned char *)(v11 + 40) = 0;
  _OWORD v7[2] = v10 + 1;
  sub_1B62C15C4(&v23, (uint64_t)&v7[5 * v10 + 4]);
  uint64_t v12 = a1 + 2;
  uint64_t v14 = a1[5];
  uint64_t v13 = a1[6];
  sub_1B62C14BC(v12, v14);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v13 + 64))(&v23, v14, v13);
  uint64_t v15 = *(void *)(a2 + 8);
  type metadata accessor for _BinaryDecoder.UnkeyedStore();
  swift_allocObject();
  uint64_t v16 = sub_1B62C0F28(&v23, v15);
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = v16;
  uint64_t v19 = *(void *)(a2 + 8);
  uint64_t v20 = swift_retain();
  MEMORY[0x1BA9B3870](v20);
  if (*(void *)((*(void *)(v19 + 112) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v19 + 112) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  sub_1B6E31C48();
  uint64_t v21 = *(void *)(a2 + 8);
  v22[3] = &type metadata for _BinaryUnkeyedDecodingContainer;
  v22[4] = sub_1B62C0EB0();
  uint64_t result = swift_release();
  *uint64_t v22 = v7;
  v22[1] = v21;
  _OWORD v22[2] = v18;
  return result;
}

void *sub_1B62B0BD0(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B62C5708(a1, a2, a3, a4, &qword_1EB980DD0, &qword_1EB980F38);
}

unint64_t sub_1B62B0BEC()
{
  unint64_t result = qword_1EB97DA80;
  if (!qword_1EB97DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DA80);
  }
  return result;
}

uint64_t sub_1B62B0C40@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B62B0C70(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_1B62B0C70(void *a1)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)&v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62BF5E0(2005, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B688FA08();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      LOBYTE(v18) = 0;
      sub_1B62B11C0((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v11);
      sub_1B6E32DF8();
      long long v17 = v19;
      LOBYTE(v18) = 1;
      sub_1B6E32DF8();
      long long v16 = v19;
      LOBYTE(v18) = 2;
      sub_1B6E32DF8();
      long long v15 = v19;
      LOBYTE(v18) = 3;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      long long v14 = v19;
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      sub_1B62C550C((uint64_t)&v19, v20);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v12);
      sub_1B6E33168();
      long long v17 = v18;
      sub_1B62C550C((uint64_t)&v19, v20);
      sub_1B6E33168();
      long long v16 = v18;
      sub_1B62C550C((uint64_t)&v19, v20);
      sub_1B6E33168();
      long long v15 = v18;
      sub_1B62C550C((uint64_t)&v19, v20);
      sub_1B6E33168();
      long long v14 = v18;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v19);
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

void sub_1B62B1158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62B11C0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62B1158(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62B1224(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6D52C68(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62B1288@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62B12B4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B62B12B4(void *a1)
{
  sub_1B62B1874(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)&v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (!sub_1B62B8F14(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B62B1B2C();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v14 = 0;
      char v15 = 1;
      uint64_t v16 = 0x797469746E65;
      uint64_t v17 = 0xE600000000000000;
      sub_1B62B1EA8();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      unsigned int v12 = v18;
      uint64_t v13 = v19;
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(&v14, v17);
  sub_1B62B1EA8();
  sub_1B6E33518();
  unsigned int v12 = v18;
  uint64_t v13 = v19;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v14);
LABEL_7:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v12 | (unint64_t)(v13 << 32);
}

uint64_t sub_1B62B154C@<X0>(_OWORD *a1@<X8>)
{
  return sub_1B62B15A4((uint64_t (*)(void))sub_1B62B1930, a1);
}

uint64_t sub_1B62B1578@<X0>(_OWORD *a1@<X8>)
{
  return sub_1B62B15A4((uint64_t (*)(void))sub_1B62B15D8, a1);
}

uint64_t sub_1B62B15A4@<X0>(uint64_t (*a1)(void)@<X3>, _OWORD *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_1B62B15D8(void *a1)
{
  sub_1B62B1874(0, (unint64_t *)&qword_1EB980930, (uint64_t (*)(void))sub_1B6AAF8B4, (uint64_t)&type metadata for ValueCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)&v12 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62B8F14(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(v16, v16[3]);
      sub_1B62B18DC();
      sub_1B6E33518();
      long long v14 = v18;
      long long v15 = v17;
      long long v12 = v20;
      long long v13 = v19;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6AAF8B4();
    sub_1B6E33A48();
    if (!v1)
    {
      sub_1B62B18DC();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      long long v14 = v18;
      long long v15 = v17;
      long long v12 = v20;
      long long v13 = v19;
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

void sub_1B62B1874(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B62B18DC()
{
  unint64_t result = qword_1EB97E590;
  if (!qword_1EB97E590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E590);
  }
  return result;
}

uint64_t sub_1B62B1930(void *a1)
{
  sub_1B62B1874(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62B1B2C();
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v11 = 0;
    char v12 = 1;
    uint64_t v13 = 0x65756C6176;
    unint64_t v14 = 0xE500000000000000;
    sub_1B62B18DC();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _OWORD v10[2] = v16;
    v10[3] = v15;
    v10[0] = v18;
    v10[1] = v17;
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

unint64_t sub_1B62B1B2C()
{
  unint64_t result = qword_1EB97ED20;
  if (!qword_1EB97ED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED20);
  }
  return result;
}

uint64_t sub_1B62B1B80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62B1BB4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B62B1BB4(void *a1)
{
  sub_1B62B8F68(0, &qword_1EB980A28, (void (*)(void))sub_1B6A5F1FC);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (!sub_1B62BF5E0(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      sub_1B62C550C((uint64_t)v15, v16);
      sub_1B62B1EA8();
      sub_1B6E33168();
      unsigned int v12 = v14[0];
      uint64_t v11 = v14[1];
      sub_1B62C550C((uint64_t)v15, v16);
      sub_1B62B1EFC();
      sub_1B6E33168();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v15);
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6A5F1FC();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v14[0]) = 0;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  unsigned int v12 = v15[0];
  uint64_t v11 = v15[1];
  LOBYTE(v14[0]) = 1;
  sub_1B62B1EFC();
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_7:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v12 | (unint64_t)(v11 << 32);
}

unint64_t sub_1B62B1EA8()
{
  unint64_t result = qword_1EB97FDC0;
  if (!qword_1EB97FDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FDC0);
  }
  return result;
}

unint64_t sub_1B62B1EFC()
{
  unint64_t result = qword_1EB97ED58;
  if (!qword_1EB97ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED58);
  }
  return result;
}

uint64_t sub_1B62B1F50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62B1F7C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B62B1F7C(void *a1)
{
  uint64_t v3 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1) {
    goto LABEL_9;
  }
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1B62C14BC(a1, v4);
  if (!sub_1B62BF5E0(2034, v4, v5))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B62BFBD8();
    sub_1B6C0C780();
    uint64_t v3 = v12;
    goto LABEL_12;
  }
  sub_1B62C14BC(v13, v13[3]);
  uint64_t v6 = sub_1B6E334C8();
  if (off_1EB97E350)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    swift_retain();
    uint64_t v3 = sub_1B62B2184(v8, v9, 0, 1);
    swift_release();
    if (v3)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v13);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
      return v3;
    }
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v11 = v8;
    *(void *)(v11 + 8) = v9;
    *(unsigned char *)(v11 + 16) = 0;
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v13);
LABEL_9:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v3;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62B2184(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = *(void *)(v4 + 24);
  if (!*(void *)(v7 + 16))
  {
LABEL_9:
    sub_1B633AF88();
    if ((sub_1B6E32678() & 1) == 0) {
      return 0;
    }
    sub_1B6E32688();
    sub_1B6655BC0(0, (unint64_t *)&qword_1E9DCDBF0, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBB908]);
    sub_1B665538C();
    sub_1B6655408();
    uint64_t v16 = sub_1B6E31AD8();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1B62B2184(v16, v18, 0, 1);
    swift_bridgeObjectRelease();
    if (v13 && !swift_conformsToProtocol2()) {
      return 0;
    }
    return v13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B62B2CE0(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(v7 + 56) + 24 * v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  char v15 = *(unsigned char *)(v12 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15) {
    return v13;
  }
  if ((a4 & 1) == 0)
  {
    if (v14 <= a3) {
      return 0;
    }
    return v13;
  }
  if (v14 <= 2048) {
    return v13;
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62B2474()
{
  uint64_t v1 = v0;
  uint64_t v77 = sub_1B6E31118();
  uint64_t v2 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77, v3);
  uint64_t v76 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0[2] + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    v94[0] = v0[2];
    v0[2] = 0x8000000000000000;
    sub_1B69143AC(0, (unint64_t *)&unk_1EB9806B0, (uint64_t (*)(uint64_t))type metadata accessor for PropertyDescription, MEMORY[0x1E4FBBCB8]);
    sub_1B6E32B78();
    v0[2] = v94[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *v0;
  uint64_t v6 = *(void *)(*v0 + 64);
  uint64_t v71 = *v0 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  unint64_t v10 = (unint64_t)(v7 + 63) >> 6;
  char v75 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v74 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  int64_t v72 = v10;
  unint64_t v70 = v10 - 5;
  uint64_t v79 = v11;
  uint64_t v69 = v11 + 104;
  int v78 = v1;
  while (1)
  {
    if (v9)
    {
      unint64_t v28 = __clz(__rbit64(v9));
      uint64_t v29 = (v9 - 1) & v9;
      unint64_t v30 = v28 | (v12 << 6);
      goto LABEL_22;
    }
    uint64_t v31 = v12 + 1;
    if (v12 + 1 >= v72) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v71 + 8 * v31);
    if (!v32)
    {
      uint64_t v31 = v12 + 2;
      if (v12 + 2 >= v72) {
        return swift_release();
      }
      unint64_t v32 = *(void *)(v71 + 8 * v31);
      if (!v32)
      {
        uint64_t v31 = v12 + 3;
        if (v12 + 3 >= v72) {
          return swift_release();
        }
        unint64_t v32 = *(void *)(v71 + 8 * v31);
        if (!v32)
        {
          uint64_t v31 = v12 + 4;
          if (v12 + 4 >= v72) {
            return swift_release();
          }
          unint64_t v32 = *(void *)(v71 + 8 * v31);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_21:
    uint64_t v29 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v31 << 6);
    uint64_t v12 = v31;
LABEL_22:
    unsigned __int8 v33 = (uint64_t *)(*(void *)(v79 + 48) + 16 * v30);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v36 = *(void *)(*(void *)(v79 + 56) + 8 * v30);
    uint64_t v37 = v76;
    uint64_t v38 = v77;
    (*v75)(v76, v36 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id, v77);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v39 = sub_1B6E310B8();
    uint64_t v89 = v40;
    uint64_t v90 = v39;
    (*v74)(v37, v38);
    uint64_t v41 = *v1;
    if (*(void *)(*v1 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1B62B2CE0(v34, v35);
      if (v43)
      {
        uint64_t v44 = *(void *)(*(void *)(v41 + 56) + 8 * v42);
        swift_retain();
        swift_bridgeObjectRelease();
        int v45 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility);
        swift_release();
        if (!*(void *)(v41 + 16)) {
          goto LABEL_31;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        int v45 = 0;
        if (!*(void *)(v41 + 16)) {
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1B62B2CE0(v34, v35);
      if (v47)
      {
        uint64_t v48 = *(void *)(*(void *)(v41 + 56) + 8 * v46);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v49 = *(void *)(v48 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
        uint64_t v50 = *(void *)(v48 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 16);
        uint64_t v83 = *(void *)(v48 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 8);
        uint64_t v84 = v49;
        uint64_t v82 = v50;
        sub_1B62B2DF0(v49, v83);
        swift_release();
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      int v45 = 0;
    }
LABEL_31:
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    uint64_t v82 = 0;
LABEL_32:
    uint64_t v51 = *(void *)(v36 + 32);
    uint64_t v53 = *(void *)(v36 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
    uint64_t v52 = *(void *)(v36 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic + 8);
    uint64_t v54 = *(void *)(v41 + 16);
    uint64_t v92 = v12;
    uint64_t v93 = v34;
    unint64_t v91 = v29;
    uint64_t v87 = v51;
    uint64_t v88 = v52;
    uint64_t v86 = v53;
    int v85 = v45;
    if (!v54)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      char v18 = 1;
      char v19 = 1;
      char v20 = 1;
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1B62B2CE0(v34, v35);
    if (v56)
    {
      uint64_t v57 = *(void *)(*(void *)(v41 + 56) + 8 * v55);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v81 = *(void *)(v57 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
      int v80 = *(unsigned __int8 *)(v57 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min + 8);
      uint64_t v34 = v93;
      swift_release();
      if (!*(void *)(v41 + 16)) {
        goto LABEL_41;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v81 = 0;
      int v80 = 1;
      if (!*(void *)(v41 + 16))
      {
LABEL_41:
        uint64_t v13 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        char v18 = 1;
        char v20 = 1;
        uint64_t v14 = v81;
        char v19 = v80;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1B62B2CE0(v34, v35);
    if (v59)
    {
      uint64_t v60 = *(void *)(*(void *)(v41 + 56) + 8 * v58);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v61 = *(void *)(v60 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
      int v73 = *(unsigned __int8 *)(v60 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max + 8);
      swift_release();
      if (!*(void *)(v41 + 16)) {
        goto LABEL_43;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v61 = 0;
      int v73 = 1;
      if (!*(void *)(v41 + 16))
      {
LABEL_43:
        uint64_t v13 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        char v18 = 1;
        goto LABEL_49;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1B62B2CE0(v34, v35);
    if (v63)
    {
      uint64_t v64 = *(void *)(*(void *)(v41 + 56) + 8 * v62);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(v64 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
      char v18 = *(unsigned char *)(v64 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step + 8);
      swift_release();
      if (!*(void *)(v41 + 16)) {
        goto LABEL_48;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      char v18 = 1;
      if (!*(void *)(v41 + 16)) {
        goto LABEL_48;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1B62B2CE0(v93, v35);
    if ((v66 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_48:
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      goto LABEL_49;
    }
    uint64_t v67 = *(void *)(*(void *)(v41 + 56) + 8 * v65);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v67 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
    uint64_t v17 = *(void *)(v67 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual + 8);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_49:
    uint64_t v15 = v61;
    uint64_t v14 = v81;
    char v19 = v80;
    char v20 = v73;
LABEL_7:
    v94[3] = &type metadata for BindingPropertyDescription.BindingInfo;
    uint64_t v21 = swift_allocObject();
    v94[0] = v21;
    uint64_t v22 = v89;
    *(void *)(v21 + 16) = v90;
    *(void *)(v21 + 24) = v22;
    *(unsigned char *)(v21 + 32) = v85;
    uint64_t v23 = v83;
    *(void *)(v21 + 40) = v84;
    *(void *)(v21 + 48) = v23;
    *(void *)(v21 + 56) = v82;
    uint64_t v24 = sub_1B62B2E34(v87, (uint64_t)v94, v93, v35, v14, v19, v15, v20, v13, v18, v86, v88, v16, v17, 0, (uint64_t)&type metadata for Bindings, v87, (uint64_t)&off_1F0FA34C0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62B32CC((uint64_t)v94);
    uint64_t v25 = *(void *)(v24 + 16);
    uint64_t v26 = *(void *)(v24 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v1 = v78;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v94[0] = v1[2];
    v1[2] = 0x8000000000000000;
    sub_1B62B34D0(v24, v25, v26, isUniquelyReferenced_nonNull_native);
    v1[2] = v94[0];
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v9 = v91;
    uint64_t v12 = v92;
  }
  while (v70 != v12)
  {
    unint64_t v32 = *(void *)(v69 + 8 * v12++);
    if (v32)
    {
      uint64_t v31 = v12 + 4;
      goto LABEL_21;
    }
  }
  return swift_release();
}

uint64_t sub_1B62B2C4C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_1B6E33918();
  a3(v10, a1, a2);
  uint64_t v7 = sub_1B6E33988();

  return a4(a1, a2, v7);
}

uint64_t sub_1B62B2CE0(uint64_t a1, uint64_t a2)
{
  return sub_1B62B2C4C(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B62B2D0C);
}

unint64_t sub_1B62B2D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B6E334B8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B6E334B8() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1B62B2DF0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B62B2E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  char v38 = a6 & 1;
  char v39 = a8 & 1;
  char v40 = a10 & 1;
  sub_1B62B31E8(a2, (uint64_t)&v43);
  if (*((void *)&v44 + 1))
  {
    sub_1B62B57A8(&v43, v47);
    uint64_t v20 = type metadata accessor for BindingPropertyDescription();
    MEMORY[0x1F4188790](v20, v21);
    KeyPath = (uint64_t *)swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v23);
    uint64_t v24 = (uint64_t *)swift_getKeyPath();
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_1B62B3514(a17, v24, a17, a18);
    swift_release();
    sub_1B62CAAD8((uint64_t)v47, (uint64_t)v46);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v26 = *(void *)(a18 + 16);
    char v27 = (_OWORD *)swift_allocObject();
    long long v28 = v44;
    v27[14] = v43;
    v27[15] = v28;
    v27[16] = v45;
    uint64_t v29 = sub_1B62B3628(a3, a4, a5, v38, a7, v39, a9, v40, KeyPath, v25, a11, a12, a13, a14, a15, v26);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v47);
  }
  else
  {
    sub_1B639553C((uint64_t)&v43, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62CB19C);
    uint64_t v30 = type metadata accessor for PropertyDescription();
    MEMORY[0x1F4188790](v30, v31);
    unint64_t v32 = (uint64_t *)swift_getKeyPath();
    MEMORY[0x1F4188790](v32, v33);
    uint64_t v34 = (uint64_t *)swift_getKeyPath();
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_1B62B3514(a17, v34, a17, a18);
    swift_release();
    uint64_t v36 = *(void *)(a18 + 16);
    swift_bridgeObjectRetain();
    return sub_1B684D0D8(a3, a4, a5, v38, a7, v39, a9, v40, v32, v35, a11, a12, a13, a14, a15, v36);
  }
  return v29;
}

uint64_t sub_1B62B31E8(uint64_t a1, uint64_t a2)
{
  sub_1B62B324C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B62B324C()
{
  if (!qword_1EB980F60)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980F60);
    }
  }
}

uint64_t type metadata accessor for BindingPropertyDescription()
{
  return self;
}

uint64_t sub_1B62B32CC(uint64_t a1)
{
  sub_1B62B324C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B62B3328(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v10 = v7;
  uint64_t v15 = *v7;
  uint64_t v16 = sub_1B62B2CE0(a2, a3);
  char v18 = v17;
  uint64_t v19 = *(void *)(v15 + 24);
  uint64_t v20 = *(void *)(v15 + 16) + ((v17 & 1) == 0);
  if (v19 >= v20 && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v21 = *v10;
    if (v18)
    {
LABEL_7:
      uint64_t v22 = *(void *)(v21 + 56);
      uint64_t result = swift_release();
      *(void *)(v22 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v19 >= v20 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_6;
  }
  a6();
  uint64_t v24 = sub_1B62B2CE0(a2, a3);
  if ((v18 & 1) != (v25 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  uint64_t v16 = v24;
  uint64_t v21 = *v10;
  if (v18) {
    goto LABEL_7;
  }
LABEL_10:
  a7(v16, a2, a3, a1, v21);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1B62B3490(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  ++a5[2];
  return result;
}

uint64_t sub_1B62B34D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6ACD41C, (void (*)(void))sub_1B62B3CB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

void *sub_1B62B3514(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  type metadata accessor for EntityGetSet();
  uint64_t v8 = sub_1B62B3810((uint64_t)a2, *(void *)(a4 + 16));
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = *(void *)(v7 + *MEMORY[0x1E4FBBC10]);
  _OWORD v9[2] = v10;
  v9[3] = a3;
  v9[4] = a4;
  v9[5] = v8;
  BOOL v11 = (void *)swift_allocObject();
  _OWORD v11[2] = v10;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = v8;
  uint64_t v12 = sub_1B62B37B4((uint64_t)sub_1B674DE14, (uint64_t)v9, (uint64_t)sub_1B636C1A0, (uint64_t)v11, v8[6]);
  swift_retain();
  return v12;
}

uint64_t sub_1B62B3628(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t *a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16)
{
  uint64_t v17 = *a9;
  uint64_t v18 = *a10;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(unsigned char *)(v16 + 112) = 1;
  *(void *)(v16 + 128) = 0;
  *(void *)(v16 + 136) = 0;
  *(void *)(v16 + 120) = 0;
  *(void *)(v16 + 160) = MEMORY[0x1E4FBC860];
  *(_DWORD *)(v16 + 205) = 16777472;
  *(void *)(v16 + 216) = 0;
  uint64_t v19 = *(void *)(v18 + 80);
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = a9;
  *(void *)(v16 + 40) = v19;
  *(void *)(v16 + 48) = 0;
  *(unsigned char *)(v16 + 56) = 1;
  *(_WORD *)(v16 + 58) = a15 | 0x480;
  *(void *)(v16 + 64) = 0;
  *(void *)(v16 + 72) = 0;
  *(void *)(v16 + 144) = a11;
  *(void *)(v16 + 152) = a12;
  float v20 = *(double *)&a3;
  float v21 = v20;
  if (a4) {
    float v21 = 0.0;
  }
  *(float *)(v16 + 184) = v21;
  *(unsigned char *)(v16 + 188) = a4 & 1;
  float v22 = *(double *)&a5;
  float v23 = v22;
  if (a6) {
    float v23 = 0.0;
  }
  *(float *)(v16 + 192) = v23;
  *(unsigned char *)(v16 + 196) = a6 & 1;
  float v24 = *(double *)&a7;
  float v25 = v24;
  if (a8) {
    float v25 = 0.0;
  }
  *(float *)(v16 + 200) = v25;
  *(unsigned char *)(v16 + 204) = a8 & 1;
  *(_WORD *)(v16 + 210) = a15 | 0x480;
  *(void *)(v16 + 168) = a13;
  *(void *)(v16 + 176) = a14;
  *(void *)(v16 + 80) = a10;
  *(void *)(v16 + 88) = &off_1F0F5A050;
  uint64_t v26 = (void *)swift_allocObject();
  _OWORD v26[2] = *(void *)(v17 + *MEMORY[0x1E4FBBAE0]);
  v26[3] = a16;
  v26[4] = a10;
  uint64_t v27 = *(void *)(v16 + 64);
  *(void *)(v16 + 64) = sub_1B684F884;
  *(void *)(v16 + 72) = v26;
  swift_retain();
  sub_1B62C6A50(v27);
  return v16;
}

void *sub_1B62B37B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (void *)swift_allocObject();
  result[4] = a1;
  result[5] = a2;
  result[2] = a3;
  result[3] = a4;
  result[6] = a5;
  return result;
}

void *sub_1B62B3810(uint64_t a1, uint64_t a2)
{
  type metadata accessor for EntityGetSet();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = *(void *)(v2 + 80);
  v5[2] = v6;
  v5[3] = a2;
  v5[4] = a1;
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  v7[3] = a2;
  v7[4] = a1;
  uint64_t v8 = (void *)swift_allocObject();
  v8[4] = sub_1B684F5A4;
  v8[5] = v5;
  _OWORD v8[2] = sub_1B636CBC0;
  v8[3] = v7;
  v8[6] = a1;
  swift_retain_n();
  return v8;
}

uint64_t type metadata accessor for EntityGetSet()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B62B3934(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v34 = a2;
  uint64_t v7 = sub_1B6E32C38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_34;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v33 = (void *)(v6 + 64);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  swift_retain();
  uint64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_21;
    }
    uint64_t v23 = v14 + 1;
    if (v14 + 1 >= v12) {
      goto LABEL_29;
    }
    unint64_t v24 = v33[v23];
    if (!v24)
    {
      uint64_t v23 = v14 + 2;
      if (v14 + 2 >= v12) {
        goto LABEL_29;
      }
      unint64_t v24 = v33[v23];
      if (!v24)
      {
        uint64_t v23 = v14 + 3;
        if (v14 + 3 >= v12) {
          goto LABEL_29;
        }
        unint64_t v24 = v33[v23];
        if (!v24) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v14 = v23;
LABEL_21:
    float v25 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v22);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v15 = sub_1B6E33988();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (v18 + 1 == v29) {
          unint64_t v18 = 0;
        }
        else {
          ++v18;
        }
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    float v20 = (void *)(*(void *)(v8 + 48) + 16 * v19);
    *float v20 = v27;
    v20[1] = v26;
    *(void *)(*(void *)(v8 + 56) + 8 * v19) = v28;
    ++*(void *)(v8 + 16);
  }
  while (v12 - 4 != v14)
  {
    unint64_t v24 = *(void *)(v6 + 8 * v14++ + 96);
    if (v24)
    {
      uint64_t v23 = v14 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  if (v34)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
    if (v31 >= 64) {
      bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v33 = -1 << v31;
    }
    *(void *)(v6 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

void sub_1B62B3C14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E32C68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B62B3C80(uint64_t a1)
{
}

uint64_t sub_1B62B3CB0(uint64_t a1, char a2)
{
  return sub_1B62B3934(a1, a2, sub_1B62B3C80);
}

uint64_t sub_1B62B3CC8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B62B3CE0(a1, a2);
}

uint64_t sub_1B62B3CE0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B62B3F7C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_1B62C14BC(a1, v11);
  if (sub_1B62BF5E0(2003, v11, v12))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6BEFDB8();
    sub_1B6E33A48();
    if (!v2)
    {
      LOBYTE(v16[0]) = 1;
      sub_1B62B48A4();
      sub_1B6E32DF8();
      sub_1B6BEEF58(v17[0], (uint64_t)v10, 0, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      sub_1B62B57A8(v17, v19);
LABEL_6:
      long long v13 = v19[1];
      *a2 = v19[0];
      a2[1] = v13;
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v2)
    {
      sub_1B62C550C((uint64_t)v17, v18);
      sub_1B62B48A4();
      sub_1B6E33168();
      sub_1B62B3FD8(*(uint64_t *)&v16[0], (uint64_t)v17, (uint64_t *)v16);
      sub_1B62B57A8(v16, v19);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v17);
      goto LABEL_6;
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

void sub_1B62B3F7C()
{
  if (!qword_1EB980AB0)
  {
    sub_1B6BEFDB8();
    unint64_t v0 = sub_1B6E32EA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980AB0);
    }
  }
}

uint64_t sub_1B62B3FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for TextureDescriptor(0);
  uint64_t v8 = v7;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B6BEFE5C();
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      __int16 v10 = WORD4(v54);
      char v11 = BYTE10(v54);
      long long v44 = v56;
      long long v48 = v55;
      long long v41 = v57;
      uint64_t v12 = v58;
      a3[3] = v8;
      uint64_t result = swift_allocObject();
      *a3 = result;
      *(void *)(result + 16) = v54;
      *(_WORD *)(result + 24) = v10;
      *(unsigned char *)(result + 26) = v11;
      *(_OWORD *)(result + 32) = v48;
      *(_OWORD *)(result + 48) = v44;
      *(_OWORD *)(result + 64) = v41;
      *(void *)(result + 80) = v12;
      *(_DWORD *)(result + 88) = v59;
    }
    return result;
  }
  type metadata accessor for simd_quatf(0);
  uint64_t v14 = v13;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B62ADC54();
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      long long v49 = v54;
      a3[3] = v14;
      uint64_t result = swift_allocObject();
      *a3 = result;
      *(_OWORD *)(result + 16) = v49;
    }
    return result;
  }
  type metadata accessor for simd_float2x2(0);
  uint64_t v16 = v15;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B6792244();
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      long long v17 = v54;
      a3[3] = v16;
      *(_OWORD *)a3 = v17;
    }
    return result;
  }
  type metadata accessor for simd_float2x3(0);
  uint64_t v19 = v18;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B67921F0();
    goto LABEL_14;
  }
  type metadata accessor for simd_float2x4(0);
  uint64_t v19 = v20;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B679219C();
LABEL_14:
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      long long v45 = v55;
      long long v50 = v54;
      a3[3] = v19;
      uint64_t result = swift_allocObject();
      *a3 = result;
      *(_OWORD *)(result + 16) = v50;
      *(_OWORD *)(result + 32) = v45;
    }
    return result;
  }
  type metadata accessor for simd_float3x2(0);
  uint64_t v22 = v21;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B6792148();
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      long long v23 = v54;
      uint64_t v24 = v55;
      a3[3] = v22;
      *(_OWORD *)a3 = v23;
      a3[2] = v24;
    }
    return result;
  }
  type metadata accessor for simd_float3x3(0);
  uint64_t v26 = v25;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B67920F4();
    goto LABEL_24;
  }
  type metadata accessor for simd_float3x4(0);
  uint64_t v26 = v27;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B67920A0();
LABEL_24:
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      long long v46 = v55;
      long long v51 = v54;
      long long v42 = v56;
      a3[3] = v26;
      uint64_t result = swift_allocObject();
      *a3 = result;
      *(_OWORD *)(result + 16) = v51;
      *(_OWORD *)(result + 32) = v46;
      *(_OWORD *)(result + 48) = v42;
    }
    return result;
  }
  type metadata accessor for simd_float4x2(0);
  uint64_t v29 = v28;
  if (swift_dynamicCastMetatype())
  {
    sub_1B62C550C(a2, *(void *)(a2 + 24));
    sub_1B679204C();
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      long long v52 = v54;
      long long v30 = v55;
      a3[3] = v29;
      uint64_t result = swift_allocObject();
      *a3 = result;
      *(_OWORD *)(result + 16) = v52;
      *(_OWORD *)(result + 32) = v30;
    }
  }
  else
  {
    type metadata accessor for simd_float4x3(0);
    uint64_t v32 = v31;
    if (swift_dynamicCastMetatype())
    {
      sub_1B62C550C(a2, *(void *)(a2 + 24));
      sub_1B6791FF8();
    }
    else
    {
      type metadata accessor for simd_float4x4(0);
      uint64_t v32 = v33;
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v34 = sub_1B62B4740(a1);
        if (v34)
        {
          *((void *)&v55 + 1) = v34;
          *(void *)&long long v56 = v35;
          *((void *)&v56 + 1) = v36;
          sub_1B62C12C4((uint64_t *)&v54);
          sub_1B62BFEA4(a2);
          if (v3)
          {
            return sub_1B6A4A85C((uint64_t)&v54);
          }
          else
          {
            uint64_t v37 = *((void *)&v55 + 1);
            char v38 = sub_1B62C14BC(&v54, *((uint64_t *)&v55 + 1));
            a3[3] = v37;
            char v39 = sub_1B62C12C4(a3);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v39, v38, v37);
            return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v54);
          }
        }
        else
        {
          sub_1B6E328C8();
          sub_1B6E33B48();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t result = sub_1B6E32BE8();
          __break(1u);
        }
        return result;
      }
      sub_1B62C550C(a2, *(void *)(a2 + 24));
      sub_1B62B18DC();
    }
    uint64_t result = sub_1B6E33168();
    if (!v3)
    {
      long long v47 = v55;
      long long v53 = v54;
      long long v40 = v57;
      long long v43 = v56;
      a3[3] = v32;
      uint64_t result = swift_allocObject();
      *a3 = result;
      *(_OWORD *)(result + 16) = v53;
      *(_OWORD *)(result + 32) = v47;
      *(_OWORD *)(result + 48) = v43;
      *(_OWORD *)(result + 64) = v40;
    }
  }
  return result;
}

void sub_1B62B46F8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1B62B4740(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for TextureDescriptor(uint64_t a1)
{
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

void type metadata accessor for simd_float4x3(uint64_t a1)
{
}

void type metadata accessor for simd_float4x2(uint64_t a1)
{
}

void type metadata accessor for simd_float3x4(uint64_t a1)
{
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
}

void type metadata accessor for simd_float3x2(uint64_t a1)
{
}

void type metadata accessor for simd_float2x4(uint64_t a1)
{
}

void type metadata accessor for simd_float2x3(uint64_t a1)
{
}

void type metadata accessor for simd_float2x2(uint64_t a1)
{
}

void type metadata accessor for simd_quatf(uint64_t a1)
{
}

unint64_t sub_1B62B48A4()
{
  unint64_t result = qword_1EB97F000;
  if (!qword_1EB97F000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F000);
  }
  return result;
}

uint64_t sub_1B62B48F8()
{
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1B62B4938@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = sub_1B62B4990(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_1B62B4990(char *a1)
{
  uint64_t v3 = v1;
  uint64_t v101 = *v1;
  sub_1B62B5820();
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8, v6);
  int v96 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v9);
  char v11 = (char *)&v91 - v10;
  uint64_t v12 = sub_1B6E31118();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v105 = v12;
  uint64_t v106 = v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12, v14);
  long long v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v18);
  uint64_t v20 = (char *)&v91 - v19;
  sub_1B62B57B8(0, &qword_1EB980AB8, (uint64_t (*)(void))sub_1B69135BC, (uint64_t)&type metadata for Bindings.Value.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v99 = *(void *)(v21 - 8);
  uint64_t v100 = v21;
  uint64_t v23 = MEMORY[0x1F4188790](v21, v22);
  uint64_t v98 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v25);
  uint64_t v27 = (char *)&v91 - v26;
  uint64_t v104 = (char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id;
  sub_1B6E31108();
  uint64_t v95 = OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility;
  *((unsigned char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility) = 0;
  uint64_t v97 = OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic;
  *(_OWORD *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic) = xmmword_1B6E50D30;
  uint64_t v28 = (void *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
  *uint64_t v28 = 0;
  uint64_t v94 = v28;
  *((unsigned char *)v28 + 8) = 1;
  uint64_t v29 = (void *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
  *uint64_t v29 = 0;
  uint64_t v93 = v29;
  *((unsigned char *)v29 + 8) = 1;
  long long v30 = (void *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
  *long long v30 = 0;
  uint64_t v92 = v30;
  *((unsigned char *)v30 + 8) = 1;
  uint64_t v31 = (void *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
  *uint64_t v31 = 0;
  v31[1] = 0;
  char v103 = v31;
  uint64_t v32 = (void *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
  v32[1] = 0;
  v32[2] = 0;
  int v102 = v32;
  uint64_t *v32 = 0;
  uint64_t v33 = *((void *)a1 + 3);
  uint64_t v34 = *((void *)a1 + 4);
  sub_1B62C14BC(a1, v33);
  if (!sub_1B62BF5E0(2003, v33, v34))
  {
    sub_1B62C14BC(a1, *((void *)a1 + 3));
    sub_1B6E33A18();
    if (v2) {
      goto LABEL_6;
    }
    sub_1B62C14BC(&v109, v111);
    uint64_t v36 = sub_1B6E330F8();
    char v38 = v37;
    sub_1B62C550C((uint64_t)&v109, v111);
    sub_1B62B58FC();
    sub_1B6E33168();
    sub_1B62B57A8(&v107, v112);
    if ((v38 & 1) == 0 && v36 >= 2)
    {
      uint64_t v43 = *((void *)a1 + 3);
      uint64_t v44 = *((void *)a1 + 4);
      sub_1B62C14BC(a1, v43);
      int v45 = *(unsigned __int8 *)(sub_1B62BE764(v43, v44) + 81);
      swift_release();
      sub_1B62C550C((uint64_t)&v109, v111);
      if (v45 == 1)
      {
        sub_1B69135BC();
        sub_1B6E330C8();
        LOBYTE(v107) = 0;
        sub_1B62A6E68(&qword_1EB97D9B8, MEMORY[0x1E4F27990]);
        uint64_t v62 = v105;
        sub_1B6E32D78();
        char v63 = v104;
        uint64_t v64 = v106;
        uint64_t v65 = (uint64_t)v96;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v96, 1, v62) == 1)
        {
          sub_1B6E31108();
          sub_1B678FF34(v65);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v17, v65, v62);
        }
        (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v63, v17, v62);
        char v113 = 2;
        sub_1B6913610();
        sub_1B6E32DF8();
        *(_OWORD *)((char *)v3 + v97) = v107;
        uint64_t v66 = *((void *)a1 + 3);
        uint64_t v67 = *((void *)a1 + 4);
        sub_1B62C14BC(a1, v66);
        if (sub_1B62BF5E0(2045, v66, v67))
        {
          LOBYTE(v107) = 7;
          char v68 = sub_1B6E32D38();
          BOOL v69 = v68 != 2 && (v68 & 1) == 0;
        }
        else
        {
          char v113 = 8;
          sub_1B6913664();
          sub_1B6E32DF8();
          BOOL v69 = v107;
        }
        *((unsigned char *)v3 + v95) = v69;
        LOBYTE(v107) = 3;
        uint64_t v70 = sub_1B6E32D48();
        uint64_t v71 = v94;
        *uint64_t v94 = v70;
        *((unsigned char *)v71 + 8) = v72 & 1;
        LOBYTE(v107) = 4;
        uint64_t v73 = sub_1B6E32D48();
        uint64_t v76 = v93;
        *uint64_t v93 = v73;
        *((unsigned char *)v76 + 8) = v77 & 1;
        LOBYTE(v107) = 5;
        uint64_t v78 = sub_1B6E32D48();
        uint64_t v79 = v92;
        *uint64_t v92 = v78;
        *((unsigned char *)v79 + 8) = v80 & 1;
        LOBYTE(v107) = 6;
        uint64_t v81 = sub_1B6E32D28();
        uint64_t v82 = v103;
        uint64_t *v103 = v81;
        v82[1] = v83;
        swift_bridgeObjectRelease();
        char v113 = 9;
        sub_1B69136B8();
        sub_1B6E32D78();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
        uint64_t v87 = v108;
        uint64_t v88 = v102;
        uint64_t v89 = *v102;
        uint64_t v90 = v102[1];
        *(_OWORD *)int v102 = v107;
        v88[2] = v87;
        sub_1B677C3D4(v89, v90);
      }
      else
      {
        sub_1B62B5878();
      }
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
LABEL_20:
    sub_1B62CAAD8((uint64_t)v112, (uint64_t)&v109);
    sub_1B62C14BC(&v109, v111);
    uint64_t DynamicType = swift_getDynamicType();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
    v3[4] = DynamicType;
    uint64_t v48 = sub_1B62B5950(DynamicType);
    long long v49 = (unsigned char *)swift_slowAlloc();
    v3[2] = v49;
    v3[3] = &v49[v48];
    sub_1B62CA888((uint64_t)v112, v49, DynamicType);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v112);
    goto LABEL_7;
  }
  uint64_t v35 = *((void *)a1 + 3);
  uint64_t v98 = a1;
  sub_1B62C14BC(a1, v35);
  sub_1B69135BC();
  sub_1B6E33A48();
  if (!v2)
  {
    LOBYTE(v109) = 0;
    sub_1B62A6E68(&qword_1EB97D9B8, MEMORY[0x1E4F27990]);
    uint64_t v41 = v105;
    sub_1B6E32D78();
    uint64_t v42 = v106;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v11, 1, v41) == 1)
    {
      sub_1B6E31108();
      sub_1B678FF34((uint64_t)v11);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v20, v11, v41);
    }
    (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v104, v20, v41);
    LOBYTE(v107) = 1;
    sub_1B62B58FC();
    sub_1B6E32DF8();
    sub_1B62B57A8(&v109, v112);
    LOBYTE(v107) = 2;
    sub_1B6913610();
    sub_1B6E32DF8();
    a1 = v98;
    long long v46 = v102;
    *(_OWORD *)((char *)v3 + v97) = v109;
    LOBYTE(v109) = 7;
    char v50 = sub_1B6E32D38();
    BOOL v51 = v50 != 2 && (v50 & 1) == 0;
    *((unsigned char *)v3 + v95) = v51;
    LOBYTE(v109) = 3;
    uint64_t v52 = sub_1B6E32D48();
    long long v53 = v94;
    *uint64_t v94 = v52;
    *((unsigned char *)v53 + 8) = v54 & 1;
    LOBYTE(v109) = 4;
    uint64_t v55 = sub_1B6E32D48();
    long long v56 = v93;
    *uint64_t v93 = v55;
    *((unsigned char *)v56 + 8) = v57 & 1;
    LOBYTE(v109) = 5;
    uint64_t v58 = sub_1B6E32D48();
    int v59 = v92;
    *uint64_t v92 = v58;
    *((unsigned char *)v59 + 8) = v60 & 1;
    LOBYTE(v109) = 6;
    uint64_t v61 = sub_1B6E32D28();
    uint64_t v74 = v103;
    uint64_t *v103 = v61;
    v74[1] = v75;
    swift_bridgeObjectRelease();
    LOBYTE(v107) = 9;
    sub_1B69136B8();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v27, v100);
    uint64_t v84 = v110;
    uint64_t v85 = *v46;
    uint64_t v86 = v46[1];
    *(_OWORD *)long long v46 = v109;
    v46[2] = v84;
    sub_1B677C3D4(v85, v86);
    goto LABEL_20;
  }
  a1 = v98;
LABEL_6:
  char v39 = v102;
  (*(void (**)(char *, uint64_t))(v106 + 8))(v104, v105);
  swift_bridgeObjectRelease();
  sub_1B677C3D4(*v39, v39[1]);
  swift_deallocPartialClassInstance();
LABEL_7:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

_OWORD *sub_1B62B57A8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1B62B57B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B62B5820()
{
  if (!qword_1EB97D9C0)
  {
    sub_1B6E31118();
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D9C0);
    }
  }
}

uint64_t sub_1B62B5878()
{
  return sub_1B6E33168();
}

unint64_t sub_1B62B58FC()
{
  unint64_t result = qword_1EB97FEA8;
  if (!qword_1EB97FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FEA8);
  }
  return result;
}

uint64_t sub_1B62B5950(uint64_t a1)
{
  return *(void *)(*(void *)(a1 - 8) + 64);
}

unint64_t sub_1B62B59B4()
{
  unint64_t result = qword_1EB97DE28;
  if (!qword_1EB97DE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DE28);
  }
  return result;
}

uint64_t sub_1B62B5A08(uint64_t a1)
{
  long long v2 = v1;
  uint64_t v4 = v1[5];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[10];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  unint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[15];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[25];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  uint64_t v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v17 = v2[30];
  swift_getObjectType();
  uint64_t v18 = sub_1B62B6A60();
  uint64_t v19 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v19);
  sub_1B62B6A68(a1, v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v18, v17);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v20 = v2[35];
  swift_getObjectType();
  uint64_t v21 = sub_1B62B6A60();
  uint64_t v22 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v22);
  sub_1B62B6A68(a1, v20);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v21, v20);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v23 = v2[20];
  swift_getObjectType();
  uint64_t v24 = sub_1B62B6A60();
  uint64_t v25 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v25);
  sub_1B62B6A68(a1, v23);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v24, v23);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v26 = v2[60];
  swift_getObjectType();
  uint64_t v27 = sub_1B62B6A60();
  uint64_t v28 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v28);
  sub_1B62B6A68(a1, v26);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v27, v26);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v29 = v2[45];
  swift_getObjectType();
  uint64_t v30 = sub_1B62B6A60();
  uint64_t v31 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v31);
  sub_1B62B6A68(a1, v29);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v30, v29);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v32 = v2[40];
  swift_getObjectType();
  uint64_t v33 = sub_1B62B6A60();
  uint64_t v34 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v34);
  sub_1B62B6A68(a1, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v33, v32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v35 = v2[55];
  swift_getObjectType();
  uint64_t v36 = sub_1B62B6A60();
  char v37 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v37);
  sub_1B62B6A68(a1, v35);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v36, v35);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v38 = v2[50];
  swift_getObjectType();
  uint64_t v39 = sub_1B62B6A60();
  long long v40 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v40);
  sub_1B62B6A68(a1, v38);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v39, v38);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B62B60BC(uint64_t a1)
{
  long long v2 = v1;
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[13];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  unint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[18];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[23];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  uint64_t v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v17 = v2[28];
  swift_getObjectType();
  uint64_t v18 = sub_1B62B6A60();
  uint64_t v19 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v19);
  sub_1B62B6A68(a1, v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v18, v17);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v20 = v2[33];
  swift_getObjectType();
  uint64_t v21 = sub_1B62B6A60();
  uint64_t v22 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v22);
  sub_1B62B6A68(a1, v20);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v21, v20);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v23 = v2[38];
  swift_getObjectType();
  uint64_t v24 = sub_1B62B6A60();
  uint64_t v25 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v25);
  sub_1B62B6A68(a1, v23);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v24, v23);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v26 = v2[43];
  swift_getObjectType();
  uint64_t v27 = sub_1B62B6A60();
  uint64_t v28 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v28);
  sub_1B62B6A68(a1, v26);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v27, v26);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v29 = v2[48];
  swift_getObjectType();
  uint64_t v30 = sub_1B62B6A60();
  uint64_t v31 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v31);
  sub_1B62B6A68(a1, v29);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v30, v29);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v32 = v2[53];
  swift_getObjectType();
  uint64_t v33 = sub_1B62B6A60();
  uint64_t v34 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v34);
  sub_1B62B6A68(a1, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v33, v32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v35 = v2[58];
  swift_getObjectType();
  uint64_t v36 = sub_1B62B6A60();
  char v37 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v37);
  sub_1B62B6A68(a1, v35);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v36, v35);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v38 = v2[63];
  swift_getObjectType();
  uint64_t v39 = sub_1B62B6A60();
  long long v40 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v40);
  sub_1B62B6A68(a1, v38);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v39, v38);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v41 = v2[68];
  swift_getObjectType();
  uint64_t v42 = sub_1B62B6A60();
  uint64_t v43 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v43);
  sub_1B62B6A68(a1, v41);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v42, v41);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v44 = v2[73];
  swift_getObjectType();
  uint64_t v45 = sub_1B62B6A60();
  long long v46 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v46);
  sub_1B62B6A68(a1, v44);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v45, v44);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v47 = v2[78];
  swift_getObjectType();
  uint64_t v48 = sub_1B62B6A60();
  long long v49 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v49);
  sub_1B62B6A68(a1, v47);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v48, v47);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v50 = v2[8];
  swift_getObjectType();
  uint64_t v51 = sub_1B62B6A60();
  uint64_t v52 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v52);
  sub_1B62B6A68(a1, v50);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v51, v50);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  uint64_t result = swift_release_n();
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    uint64_t v54 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
    if (v54)
    {
      uint64_t v55 = *(void *)(v54 + 232);
      uint64_t v56 = swift_allocObject();
      swift_weakInit();
      uint64_t v57 = v55 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
      uint64_t v58 = *(os_unfair_lock_s **)(v55 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
      swift_retain();
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v58);
      int v59 = (uint64_t (**)())(v55 + OBJC_IVAR____TtC3VFX11ShaderCache_reloadCallback);
      *int v59 = sub_1B6D0B198;
      v59[1] = (uint64_t (*)())v56;
      swift_retain();
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v57 + 24));
      swift_release();
      swift_release();
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_1B62B6A60()
{
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_1B62B6A68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(v2 + 48);
  if (*(void *)(v7 + 16))
  {
    unint64_t v8 = sub_1B62C1A30(*(void *)(a2 + 32));
    if (v9)
    {
      uint64_t v4 = *(void *)(*(void *)(v7 + 56) + 24 * v8);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v4;
    }
  }
  swift_retain();
  swift_retain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B62B6F44(v10, a1);
  swift_release();
  swift_release();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v35 = *(void *)(v3 + 48);
  *(void *)(v3 + 48) = 0x8000000000000000;
  sub_1B62B6DA8(v4, v11, MEMORY[0x1E4FBC860], v6, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 48) = v35;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v11 + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t v33 = v4;
  uint64_t v34 = v11;
  uint64_t v14 = 0;
  while (1)
  {
    unsigned int v15 = *(_DWORD *)(v11 + 4 * v14 + 32);
    uint64_t v16 = *(void *)(v3 + 56);
    if (*(void *)(v16 + 16))
    {
      unint64_t v17 = sub_1B62C5AB0(*(_DWORD *)(v11 + 4 * v14 + 32));
      uint64_t v18 = MEMORY[0x1E4FBC860];
      if (v19)
      {
        uint64_t v18 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
        swift_retain();
      }
    }
    else
    {
      uint64_t v18 = MEMORY[0x1E4FBC860];
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1B62B7EB4(0, *(void *)(v18 + 16) + 1, 1);
    }
    unint64_t v21 = *(void *)(v18 + 16);
    unint64_t v20 = *(void *)(v18 + 24);
    if (v21 >= v20 >> 1) {
      sub_1B62B7EB4(v20 > 1, v21 + 1, 1);
    }
    *(void *)(v18 + 16) = v21 + 1;
    uint64_t v22 = v6;
    *(void *)(v18 + 8 * v21 + 32) = v6;
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *(void **)(v3 + 56);
    *(void *)(v3 + 56) = 0x8000000000000000;
    unint64_t v25 = sub_1B62C5AB0(v15);
    char v27 = v26;
    uint64_t v28 = v24[2] + ((v26 & 1) == 0);
    if (v24[3] >= v28)
    {
      if ((v23 & 1) == 0) {
        sub_1B6ACB5A0();
      }
      goto LABEL_21;
    }
    sub_1B6AB5134(v28, v23);
    unint64_t v29 = sub_1B62C5AB0(v15);
    if ((v27 & 1) != (v30 & 1)) {
      break;
    }
    unint64_t v25 = v29;
LABEL_21:
    uint64_t v6 = v22;
    if (v27)
    {
      uint64_t v31 = v24[7];
      swift_release();
      *(void *)(v31 + 8 * v25) = v18;
    }
    else
    {
      v24[(v25 >> 6) + 8] |= 1 << v25;
      *(_DWORD *)(v24[6] + 4 * v25) = v15;
      *(void *)(v24[7] + 8 * v25) = v18;
      ++v24[2];
    }
    ++v14;
    *(void *)(v3 + 56) = v24;
    swift_bridgeObjectRelease();
    uint64_t v11 = v34;
    if (v13 == v14)
    {
      swift_bridgeObjectRelease();
      return v33;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

unint64_t sub_1B62B6DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v13 = sub_1B62C1A30(a4);
  char v15 = v14;
  uint64_t v16 = v12[3];
  uint64_t v17 = v12[2] + ((v14 & 1) == 0);
  if (v16 >= v17 && (a5 & 1) != 0)
  {
LABEL_6:
    uint64_t v18 = *v6;
    if (v15)
    {
LABEL_7:
      char v19 = (uint64_t *)(v18[7] + 24 * v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_release();
      *char v19 = a1;
      v19[1] = a2;
      _OWORD v19[2] = a3;
      return result;
    }
    goto LABEL_10;
  }
  if (v16 >= v17 && (a5 & 1) == 0)
  {
    sub_1B62B8194();
    goto LABEL_6;
  }
  sub_1B62B7180(v17, a5 & 1);
  unint64_t v21 = sub_1B62C1A30(a4);
  if ((v15 & 1) != (v22 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v13 = v21;
  uint64_t v18 = *v6;
  if (v15) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B62B6EFC(v13, a4, a1, a2, a3, v18);
}

unint64_t sub_1B62B6EFC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = (void *)(a6[7] + 24 * result);
  *uint64_t v6 = a3;
  v6[1] = a4;
  _OWORD v6[2] = a5;
  ++a6[2];
  return result;
}

uint64_t sub_1B62B6F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v21 = a1 + 112;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_20;
    }
    uint64_t v11 = v4 + 1;
    if (v4 + 1 >= v23) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    if (!v12)
    {
      uint64_t v11 = v4 + 2;
      if (v4 + 2 >= v23) {
        goto LABEL_28;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v11);
      if (!v12)
      {
        uint64_t v11 = v4 + 3;
        if (v4 + 3 >= v23) {
          goto LABEL_28;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v11);
        if (!v12)
        {
          uint64_t v11 = v4 + 4;
          if (v4 + 4 >= v23) {
            goto LABEL_28;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v11);
          if (!v12)
          {
            uint64_t v11 = v4 + 5;
            if (v4 + 5 >= v23) {
              goto LABEL_28;
            }
            unint64_t v12 = *(void *)(v5 + 8 * v11);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
    uint64_t v4 = v11;
LABEL_20:
    uint64_t v13 = *(int *)(*(void *)(a1 + 48) + 4 * v10);
    uint64_t v14 = *(void *)(*(void *)(a2 + 80) + 8 * v13 + 32);
    int v15 = sub_1B62B7B58(*(void *)(v14 + 16));
    if (v15 && (v15 != 1 || (sub_1B62B746C(v14) & 1) != 0))
    {
      uint64_t v16 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6397798(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v16 = v22;
      }
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        sub_1B6397798(v17 > 1, v18 + 1, 1);
        unint64_t v19 = v18 + 1;
        uint64_t v16 = v22;
      }
      *(void *)(v16 + 16) = v19;
      uint64_t v22 = v16;
      *(_DWORD *)(v16 + 4 * v18 + 32) = v13;
    }
  }
  while (v23 - 6 != v4)
  {
    unint64_t v12 = *(void *)(v21 + 8 * v4++);
    if (v12)
    {
      uint64_t v11 = v4 + 5;
      goto LABEL_19;
    }
  }
LABEL_28:
  swift_release();
  return v22;
}

uint64_t sub_1B62B7180(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807B0);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v9;
  uint64_t v30 = v9;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v31 = (uint64_t *)(v5 + 64);
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v32) {
      goto LABEL_29;
    }
    unint64_t v22 = v31[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_29;
      }
      unint64_t v22 = v31[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_29;
        }
        unint64_t v22 = v31[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v24 = *(void *)(v5 + 56) + 24 * v20;
    long long v33 = *(_OWORD *)v24;
    uint64_t v25 = *(void *)(v24 + 16);
    if ((a2 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = sub_1B6E33908();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v26) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v27 = *(void *)(v12 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v23;
    uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
    *(_OWORD *)uint64_t v18 = v33;
    *(void *)(v18 + 16) = v25;
    ++*(void *)(v7 + 16);
  }
  while (v32 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    if (v30 >= 64) {
      bzero(v31, 8 * v32);
    }
    else {
      *uint64_t v31 = v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B62B746C(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int16 *)(v1 + 30);
  if (v2 < 0x18) {
    return 1;
  }
  uint64_t v4 = v1;
  uint64_t v5 = *(void *)(a1 + 184);
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = (uint64_t *)(*(unsigned __int16 *)(v4 + 28) + v4 + 57);
    unint64_t v7 = 24 * ((178956971 * (unint64_t)v2) >> 32);
    while (1)
    {
      uint64_t v8 = *v6;
      unint64_t v9 = sub_1B62C1A30(*(v6 - 2));
      if ((v10 & 1) == 0 || v8 != *(void *)(*(void *)(v5 + 56) + 8 * v9)) {
        break;
      }
      v6 += 3;
      v7 -= 24;
      if (!v7) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_1B62B750C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 40));
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned int v61 = *(_DWORD *)(a2 + 204);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v71 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  uint64_t v63 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
  unint64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  int64_t v65 = v12;
  unint64_t v55 = v12 - 5;
  uint64_t v56 = v7 + 64;
  uint64_t v59 = a2;
  char v60 = v3;
  uint64_t v57 = v5;
  uint64_t v58 = v7;
  while (1)
  {
    do
    {
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        uint64_t v16 = v13 + 1;
        if (v13 + 1 >= v65) {
          goto LABEL_59;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v13 + 2;
          if (v13 + 2 >= v65) {
            goto LABEL_59;
          }
          unint64_t v17 = *(void *)(v8 + 8 * v16);
          if (!v17)
          {
            uint64_t v16 = v13 + 3;
            if (v13 + 3 >= v65) {
              goto LABEL_59;
            }
            unint64_t v17 = *(void *)(v8 + 8 * v16);
            if (!v17)
            {
              uint64_t v16 = v13 + 4;
              if (v13 + 4 >= v65)
              {
LABEL_59:
                swift_release();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v70 = v3[7];
                v3[7] = 0x8000000000000000;
                sub_1B62B803C(v6, v61, isUniquelyReferenced_nonNull_native);
                v3[7] = v70;
                swift_bridgeObjectRelease();
                uint64_t v54 = (os_unfair_lock_s *)v3[5];
                os_unfair_lock_unlock(v54);
                return;
              }
              unint64_t v17 = *(void *)(v8 + 8 * v16);
              if (!v17)
              {
                do
                {
                  if (v55 == v13) {
                    goto LABEL_59;
                  }
                  unint64_t v17 = *(void *)(v7 + 8 * v13++ + 104);
                }
                while (!v17);
                uint64_t v16 = v13 + 4;
              }
            }
          }
        }
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
        uint64_t v13 = v16;
      }
      uint64_t v18 = *(void *)(v7 + 56) + 24 * v15;
      uint64_t v66 = *(void *)(v18 + 8);
      uint64_t v67 = *(void *)(*(void *)(v7 + 48) + 8 * v15);
      uint64_t v68 = *(void *)(v18 + 16);
      int v19 = sub_1B62B7B58(v5);
    }
    while (!v19 || v19 == 1 && (sub_1B62B746C(a2) & 1) == 0);
    if (!*(void *)(v66 + 16))
    {
      uint64_t v20 = v68;
      uint64_t v62 = *(void *)(v68 + 16);
      if (v62) {
        break;
      }
    }
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
LABEL_34:
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = (void *)v3[6];
    BOOL v69 = v35;
    v3[6] = 0x8000000000000000;
    unint64_t v37 = sub_1B62C1A30(v67);
    char v38 = v36;
    uint64_t v39 = v35[2] + ((v36 & 1) == 0);
    if (v35[3] >= v39)
    {
      if (v34)
      {
        if (v36) {
          goto LABEL_40;
        }
      }
      else
      {
        sub_1B62B8194();
        if (v38) {
          goto LABEL_40;
        }
      }
    }
    else
    {
      sub_1B62B7180(v39, v34);
      unint64_t v40 = sub_1B62C1A30(v67);
      if ((v38 & 1) != (v41 & 1)) {
        goto LABEL_63;
      }
      unint64_t v37 = v40;
      if (v38)
      {
LABEL_40:
        uint64_t v42 = (uint64_t *)(v35[7] + 24 * v37);
        uint64_t v44 = *v42;
        uint64_t v43 = (char *)v42[1];
        uint64_t v45 = v42[2];
        goto LABEL_44;
      }
    }
    uint64_t v44 = 0;
    uint64_t v43 = 0;
    uint64_t v45 = 0;
LABEL_44:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_1B62B7EA0(0, *((void *)v43 + 2) + 1, 1, v43);
    }
    unint64_t v47 = *((void *)v43 + 2);
    unint64_t v46 = *((void *)v43 + 3);
    if (v47 >= v46 >> 1) {
      uint64_t v43 = sub_1B62B7EA0(v46 > 1, v47 + 1, 1, v43);
    }
    *((void *)v43 + 2) = v47 + 1;
    *(_DWORD *)&v43[4 * v47 + 32] = v61;
    if (v44)
    {
      uint64_t v48 = v69;
      uint64_t v8 = v56;
      if (v38)
      {
        long long v49 = (void *)(v69[7] + 24 * v37);
        void *v49 = v44;
        v49[1] = v43;
        v49[2] = v45;
      }
      else
      {
        v69[(v37 >> 6) + 8] |= 1 << v37;
        *(void *)(v69[6] + 8 * v37) = v67;
        uint64_t v50 = (void *)(v69[7] + 24 * v37);
        *uint64_t v50 = v44;
        v50[1] = v43;
        v50[2] = v45;
        ++v69[2];
      }
    }
    else
    {
      uint64_t v48 = v69;
      uint64_t v8 = v56;
      if (v38) {
        sub_1B6AC8184(v37, (uint64_t)v69);
      }
    }
    uint64_t v3 = v60;
    uint64_t v5 = v57;
    v60[6] = v48;
    uint64_t v6 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B62B7EB4(0, *(void *)(v71 + 16) + 1, 1);
      uint64_t v6 = v71;
    }
    unint64_t v52 = *(void *)(v6 + 16);
    unint64_t v51 = *(void *)(v6 + 24);
    if (v52 >= v51 >> 1)
    {
      sub_1B62B7EB4(v51 > 1, v52 + 1, 1);
      uint64_t v6 = v71;
    }
    *(void *)(v6 + 16) = v52 + 1;
    *(void *)(v6 + 8 * v52 + 32) = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v7 = v58;
    a2 = v59;
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  while (1)
  {
    uint64_t v22 = *(void *)(v20 + 8 * v21 + 32);
    uint64_t v23 = *(void *)(a1 + v63);
    uint64_t v24 = *(os_unfair_lock_s **)(v23 + 56);
    swift_retain();
    os_unfair_lock_lock(v24);
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *(void *)(v23 + 152);
    *(void *)(v23 + 152) = 0x8000000000000000;
    unint64_t v27 = sub_1B62C19C8(v22);
    char v29 = v28;
    uint64_t v30 = *(void *)(v26 + 16) + ((v28 & 1) == 0);
    if (*(void *)(v26 + 24) >= v30)
    {
      if ((v25 & 1) == 0) {
        sub_1B6ACB410((unint64_t *)&qword_1EB980810);
      }
      goto LABEL_31;
    }
    sub_1B62BBDC4(v30, v25);
    unint64_t v31 = sub_1B62C19C8(v22);
    if ((v29 & 1) != (v32 & 1)) {
      break;
    }
    unint64_t v27 = v31;
LABEL_31:
    uint64_t v20 = v68;
    *(void *)(v23 + 152) = v26;
    swift_bridgeObjectRelease();
    long long v33 = *(void **)(v23 + 152);
    if ((v29 & 1) == 0)
    {
      v33[(v27 >> 6) + 8] |= 1 << v27;
      *(void *)(v33[6] + 8 * v27) = v22;
      *(void *)(v33[7] + 8 * v27) = 0;
      ++v33[2];
    }
    ++v21;
    ++*(void *)(v33[7] + 8 * v27);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 56));
    swift_release();
    if (v62 == v21)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v60;
      goto LABEL_34;
    }
  }
  sub_1B6E33838();
  __break(1u);
LABEL_63:
  sub_1B6E33838();
  __break(1u);
}

uint64_t sub_1B62B7B58(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + 41;
  unint64_t v4 = v1[9];
  if (v4 >= 0x10)
  {
    uint64_t v7 = (uint64_t *)&v3[v1[8]];
    int v8 = v1[11];
    uint64_t v9 = 16 * (v4 >> 4);
    uint64_t v10 = (char *)v1 + 41;
    while (1)
    {
      if (!v8 || v10[v1[10]] != 5)
      {
        if (!*(void *)(*(void *)(a1 + 128) + 16)) {
          break;
        }
        sub_1B62C1A30(*v7);
        if ((v11 & 1) == 0) {
          break;
        }
      }
      v7 += 2;
      ++v10;
      v9 -= 16;
      if (!v9) {
        goto LABEL_2;
      }
    }
  }
  else
  {
LABEL_2:
    unint64_t v5 = v1[13];
    if (v5 >= 0x10)
    {
      unint64_t v12 = (uint64_t *)&v3[v1[12]];
      uint64_t v13 = *(void *)(*(void *)(a1 + 128) + 16);
      uint64_t v14 = 16 * (v5 >> 4);
      while (1)
      {
        if (v13)
        {
          sub_1B62C1A30(*v12);
          if (v15) {
            break;
          }
        }
        v12 += 2;
        v14 -= 16;
        if (!v14) {
          goto LABEL_3;
        }
      }
    }
    else
    {
LABEL_3:
      if (v1[15] < 0x18u) {
        return 2;
      }
      if (*(void *)(*(void *)(a1 + 128) + 16))
      {
        uint64_t v16 = (uint64_t *)&v3[v1[14]];
        unint64_t v17 = 24 * (v1[15] / 0x18uLL);
        while (1)
        {
          sub_1B62C1A30(*v16);
          if ((v18 & 1) == 0) {
            break;
          }
          v16 += 3;
          v17 -= 24;
          if (!v17) {
            return 1;
          }
        }
      }
    }
  }
  return 0;
}

char *sub_1B62B7CAC(char a1, uint64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    uint64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  uint64_t v11 = *((void *)a4 + 2);
  if (a2 <= v11) {
    uint64_t v12 = *((void *)a4 + 2);
  }
  else {
    uint64_t v12 = a2;
  }
  if (v12)
  {
    sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = (char *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 29;
    }
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = 2 * (v15 >> 2);
    uint64_t v16 = v13 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62B7DBC(0, v11, v16, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v16 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v13 != a4 || v16 >= &a4[4 * v11 + 32]) {
    memmove(v16, a4 + 32, 4 * v11);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_1B62B7DBC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((v6 = (char *)(a4 + 32 + 4 * a1), uint64_t v7 = &__dst[4 * v4], v8 = a4 + 32 + 4 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 4 * v4);
    return v7;
  }
  return result;
}

char *sub_1B62B7EA0(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B62B7CAC(a1, a2, a3, a4, (unint64_t *)&unk_1EB980D80, MEMORY[0x1E4FBC150]);
}

uint64_t sub_1B62B7EB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B62B7ED4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B62B7ED4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62D9BF8(0, &qword_1EB980D48, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v15 < &v14[8 * v9] && v14 < &v15[8 * v9])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v14, v15, 8 * v9);
  }
  swift_release();
  return (uint64_t)v11;
}

unint64_t sub_1B62B803C(uint64_t a1, unsigned int a2, char a3)
{
  uint64_t v4 = (void **)v3;
  int64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C5AB0(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    int64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_release();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACB5A0();
    goto LABEL_6;
  }
  sub_1B6AB5134(v13, a3 & 1);
  unint64_t v17 = sub_1B62C5AB0(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  int64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B62B8158(v9, a2, a1, v14);
}

unint64_t sub_1B62B8158(unint64_t result, int a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_1B62B8194()
{
  uint64_t v1 = v0;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  unint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_24;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v20;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  while (v13 - 4 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B62B8388@<X0>(void *a1@<X8>)
{
  return sub_1B62C0C00(a1);
}

uint64_t sub_1B62B83AC()
{
  sub_1B62C2360(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t sub_1B62B83E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62B8410(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B62B8410(void *a1)
{
  sub_1B62B8F68(0, &qword_1EB980968, (void (*)(void))sub_1B6A5F3EC);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  int64_t v8 = (char *)&v54 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  LOBYTE(v9) = sub_1B62B8F14(2002, v9, v10);
  sub_1B62C1550((uint64_t)a1, (uint64_t)v63);
  if (v9)
  {
    uint64_t v11 = v64;
    uint64_t v12 = v65;
    sub_1B62C14BC(v63, v64);
    LOBYTE(v11) = *(unsigned char *)(sub_1B62BE764(v11, v12) + 86);
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
    if (v11)
    {
      int64_t v8 = (char *)a1[4];
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v1)
      {
        sub_1B62C14BC(&v60, *((uint64_t *)&v61 + 1));
        int v13 = sub_1B6E33528();
        uint64_t v14 = a1[3];
        int64_t v8 = (char *)a1[4];
        sub_1B62C14BC(a1, v14);
        uint64_t v15 = sub_1B62BE764(v14, (uint64_t)v8);
        if (v13 < 0 || (uint64_t v16 = *(void *)(v15 + 136), *(void *)(v16 + 16) <= v13))
        {
          swift_release();
        }
        else
        {
          int64_t v8 = *(char **)(v16 + 8 * v13 + 32);
          swift_retain();
          swift_release();
          if (v8) {
            goto LABEL_38;
          }
        }
        unint64_t v58 = 0;
        unint64_t v59 = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        unint64_t v58 = 0xD000000000000015;
        unint64_t v59 = 0x80000001B6F43EE0;
        LODWORD(v66) = v13;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        unint64_t v31 = v58;
        unint64_t v32 = v59;
        sub_1B67CD358();
        swift_allocError();
        *(void *)uint64_t v33 = v31;
        *(void *)(v33 + 8) = v32;
        *(unsigned char *)(v33 + 16) = 0;
        swift_willThrow();
LABEL_38:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
      }
LABEL_39:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
      return (uint64_t)v8;
    }
  }
  else
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v63);
  }
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_1B62C14BC(a1, v17);
  if (sub_1B62BF5E0(2002, v17, v18))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6A5F3EC();
    sub_1B6E33A48();
    if (v1) {
      goto LABEL_39;
    }
    LOBYTE(v58) = 0;
    sub_1B62BFBD8();
    sub_1B6E32DF8();
    uint64_t v19 = v60;
    if (swift_conformsToProtocol2())
    {
      LOBYTE(v60) = 1;
      uint64_t v55 = sub_1B6E32D98();
      uint64_t v56 = v34;
      uint64_t v35 = swift_conformsToProtocol2();
      if (v35) {
        uint64_t v36 = v35;
      }
      else {
        uint64_t v36 = 0;
      }
      uint64_t v54 = v19;
      if (v35) {
        uint64_t v37 = v19;
      }
      else {
        uint64_t v37 = 0;
      }
      if (v37)
      {
        uint64_t v38 = a1[3];
        uint64_t v39 = a1[4];
        sub_1B62C14BC(a1, v38);
        uint64_t v40 = sub_1B6C70F80(v38, v39);
        char v41 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 16);
        uint64_t v42 = v37;
        uint64_t v57 = (char *)v36;
        if (v41(v40, 0, v37, v36))
        {
          LOBYTE(v60) = 2;
          sub_1B62B48A4();
          sub_1B6E32DF8();
          unint64_t v43 = v58;
          LOBYTE(v66) = 3;
          sub_1B6913610();
          sub_1B6E32DF8();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
          unint64_t v53 = *((void *)&v60 + 1);
          unint64_t v52 = v60;
          uint64_t v21 = v55;
          uint64_t v23 = v56;
          uint64_t v25 = v42;
LABEL_48:
          long long v60 = 0u;
          long long v61 = 0u;
          int64_t v8 = (char *)(*((uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, void, uint64_t, void, char, void, char, void, void, long long *, _WORD, uint64_t, char *))v57
                        + 8))(v21, v23, v43, v52, v53, 0, 1, 0, 1, 0, 1, 0, 0, &v60, 0, v25, v57);
          swift_bridgeObjectRelease();
          sub_1B62B32CC((uint64_t)&v60);
          goto LABEL_39;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        uint64_t v21 = v55;
        uint64_t v23 = v56;
        int64_t v8 = v57;
        uint64_t v25 = v37;
LABEL_43:
        *((void *)&v61 + 1) = v25;
        uint64_t v62 = v8;
        sub_1B62C12C4((uint64_t *)&v60);
        (*(void (**)(uint64_t))(*((void *)v8 + 1) + 8))(v25);
        if (sub_1B6A5DDA4(v21, v23, v25, (uint64_t)v8))
        {
          uint64_t v45 = a1[3];
          uint64_t v46 = a1[4];
          sub_1B62C14BC(a1, v45);
          uint64_t v47 = sub_1B6C70F80(v45, v46);
          int64_t v8 = (char *)sub_1B684F640(v47, 0);
          swift_retain();
          swift_release();
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
          if (v8[112])
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&long long v60 = 0;
            *((void *)&v60 + 1) = 0xE000000000000000;
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v60 = 0xD000000000000011;
            *((void *)&v60 + 1) = 0x80000001B6F43EC0;
            sub_1B6E33B48();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            long long v50 = v60;
            sub_1B67CD358();
            swift_allocError();
            *(_OWORD *)uint64_t v51 = v50;
            *(unsigned char *)(v51 + 16) = 33;
            swift_willThrow();
            swift_release();
          }
        }
        else
        {
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
          *(void *)&long long v60 = 0;
          *((void *)&v60 + 1) = 0xE000000000000000;
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          *(void *)&long long v60 = 0xD000000000000011;
          *((void *)&v60 + 1) = 0x80000001B6F43EA0;
          sub_1B6E33B48();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          long long v48 = v60;
          sub_1B67CD358();
          swift_allocError();
          *(_OWORD *)uint64_t v49 = v48;
          *(unsigned char *)(v49 + 16) = 32;
          swift_willThrow();
        }
        goto LABEL_39;
      }
      goto LABEL_51;
    }
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  int64_t v8 = (char *)a1[4];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1) {
    goto LABEL_39;
  }
  sub_1B62C550C((uint64_t)&v60, *((uint64_t *)&v61 + 1));
  sub_1B62BFBD8();
  sub_1B6E33168();
  unint64_t v20 = v58;
  if (!swift_conformsToProtocol2()) {
    goto LABEL_50;
  }
  sub_1B62C550C((uint64_t)&v60, *((uint64_t *)&v61 + 1));
  uint64_t v21 = sub_1B6E33108();
  uint64_t v23 = v22;
  uint64_t v24 = swift_conformsToProtocol2();
  if (v24) {
    int64_t v8 = (char *)v24;
  }
  else {
    int64_t v8 = 0;
  }
  if (v24) {
    uint64_t v25 = v20;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v25)
  {
    uint64_t v26 = a1[3];
    uint64_t v27 = a1[4];
    sub_1B62C14BC(a1, v26);
    if (sub_1B62BF5E0(2033, v26, v27))
    {
      uint64_t v28 = a1[3];
      uint64_t v29 = a1[4];
      sub_1B62C14BC(a1, v28);
      uint64_t v30 = sub_1B6C70F80(v28, v29);
      if (((*((uint64_t (**)(uint64_t, void, uint64_t, char *))v8 + 2))(v30, 0, v25, v8) & 1) == 0)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
        goto LABEL_43;
      }
      uint64_t v57 = v8;
    }
    else
    {
      uint64_t v57 = v8;
      sub_1B62C550C((uint64_t)&v60, *((uint64_t *)&v61 + 1));
      if ((sub_1B6E33118() & 1) == 0)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
        int64_t v8 = v57;
        goto LABEL_43;
      }
    }
    sub_1B62C550C((uint64_t)&v60, *((uint64_t *)&v61 + 1));
    sub_1B62B48A4();
    sub_1B6E33168();
    unint64_t v43 = v66;
    sub_1B62C550C((uint64_t)&v60, *((uint64_t *)&v61 + 1));
    sub_1B6913610();
    sub_1B6E33168();
    unint64_t v52 = v58;
    unint64_t v53 = v59;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
    goto LABEL_48;
  }
LABEL_51:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

BOOL sub_1B62B8F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(sub_1B62BF634(a2, a3, MEMORY[0x1E4FBC5C0]) + 24);
  swift_release();
  return v4 >= a1;
}

void sub_1B62B8F68(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1B6E32EA8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_1B62B8FC8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 48);
  sub_1B62C14BC((void *)(v2 + 16), v3);
  uint64_t result = sub_1B62B902C(v3, v4);
  if (!v1) {
    ++*(_DWORD *)(v2 + 80);
  }
  return result;
}

char *sub_1B62B902C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B6E31808();
  MEMORY[0x1F4188790](v5 - 8, v6);
  int64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v9 = sub_1B62C1C04(0x60u, a1, a2);
  if (!v2)
  {
    uint64_t v11 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 16))(v9, a1, a2);
    unint64_t v13 = v12;
    v17[0] = v11;
    v17[1] = v12;
    sub_1B6E317E8();
    sub_1B62B9338();
    uint64_t v14 = sub_1B6E317C8();
    if (v15)
    {
      int64_t v8 = (char *)v14;
    }
    else
    {
      sub_1B6B17984();
      swift_allocError();
      *(_OWORD *)uint64_t v16 = xmmword_1B6E78210;
      *(unsigned char *)(v16 + 16) = 6;
      swift_willThrow();
    }
    sub_1B62C2360(v11, v13);
  }
  return v8;
}

char *sub_1B62B919C()
{
  return sub_1B62B91C0();
}

char *sub_1B62B91C0()
{
  uint64_t v2 = sub_1B6E31808();
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = sub_1B62B938C(0x60u);
  if (!v1)
  {
    uint64_t v7 = v6;
    uint64_t v8 = v0[3];
    uint64_t v9 = v0[4];
    sub_1B62C14BC(v0, v8);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v9);
    uint64_t v13 = v10;
    unint64_t v14 = v11;
    v18[0] = v10;
    v18[1] = v11;
    sub_1B6E317E8();
    sub_1B62B9338();
    uint64_t v15 = sub_1B6E317C8();
    if (v16)
    {
      uint64_t v5 = (char *)v15;
    }
    else
    {
      sub_1B6B17984();
      swift_allocError();
      *(_OWORD *)uint64_t v17 = xmmword_1B6E78210;
      *(unsigned char *)(v17 + 16) = 6;
      swift_willThrow();
    }
    sub_1B62C2360(v13, v14);
  }
  return v5;
}

unint64_t sub_1B62B9338()
{
  unint64_t result = qword_1EB97D990;
  if (!qword_1EB97D990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D990);
  }
  return result;
}

uint64_t sub_1B62B938C(unsigned __int8 a1)
{
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  sub_1B62C14BC(v1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(1, v4, v5);
  if (!v2)
  {
    char v7 = result;
    if ((result & 0xE0) == a1)
    {
      uint64_t v8 = v1[3];
      uint64_t v9 = v1[4];
      sub_1B62C14BC(v1, v8);
      (*(void (**)(void, uint64_t, uint64_t))(v9 + 8))(0, v8, v9);
      uint64_t result = v7 & 0x1F;
      if (result == 31) {
        return (uint64_t)sub_1B62B94FC();
      }
    }
    else
    {
      unsigned __int8 v10 = result & 0xE0;
      sub_1B6B18018(0, (unint64_t *)&unk_1EB980DB0, MEMORY[0x1E4FBBE00]);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1B6E77050;
      *(unsigned char *)(v11 + 32) = a1;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v12 = v11;
      *(void *)(v12 + 8) = v10;
      *(unsigned char *)(v12 + 16) = 3;
      return swift_willThrow();
    }
  }
  return result;
}

void *sub_1B62B94FC()
{
  uint64_t v2 = v0;
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_1B62C14BC(v0, v3);
  unsigned __int8 v6 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v4 + 8))(0, v3, v4);
  if (!v1)
  {
    if ((v6 & 0xE0) != 0x20)
    {
      uint64_t v5 = (void *)(v6 & 0xE0);
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v9 = &unk_1F0F51E68;
      *(void *)(v9 + 8) = v5;
      *(unsigned char *)(v9 + 16) = 3;
      goto LABEL_10;
    }
    uint64_t v5 = (void *)(v6 & 0xF);
    if ((v6 & 0x10) == 0) {
      return v5;
    }
    if ((v6 & 0xF) != 0)
    {
      if (v5 != 1)
      {
        if (v5 == 2)
        {
          uint64_t v7 = v2[3];
          uint64_t v8 = v2[4];
          sub_1B62C14BC(v2, v7);
          (*(void (**)(char *__return_ptr, void, void, uint64_t, uint64_t))(v8 + 32))((char *)&v16 + 3, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC520], v7, v8);
          return (void *)bswap32(*(unsigned int *)((char *)&v16 + 3));
        }
        sub_1B6B17984();
        swift_allocError();
        *(void *)uint64_t v15 = v5;
        *(void *)(v15 + 8) = 0;
        *(unsigned char *)(v15 + 16) = 0;
LABEL_10:
        swift_willThrow();
        return v5;
      }
      uint64_t v13 = v2[3];
      uint64_t v14 = v2[4];
      sub_1B62C14BC(v2, v13);
      (*(void (**)(char *__return_ptr, void, void, uint64_t, uint64_t))(v14 + 32))((char *)&v16 + 1, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBC4A8], v13, v14);
      return (void *)(bswap32(*(unsigned __int16 *)((char *)&v16 + 1)) >> 16);
    }
    else
    {
      uint64_t v11 = v2[3];
      uint64_t v12 = v2[4];
      sub_1B62C14BC(v2, v11);
      (*(void (**)(uint64_t *__return_ptr, void, void, uint64_t, uint64_t))(v12 + 32))(&v16, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBC3A8], v11, v12);
      return (void *)v16;
    }
  }
  return v5;
}

uint64_t sub_1B62B9724(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_1B62C14BC(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
}

uint64_t sub_1B62B9790()
{
  return sub_1B62B97CC((uint64_t)&unk_1F0F51CF0, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBC1B0]);
}

uint64_t sub_1B62B97CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  sub_1B62C14BC(v3, v8);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v9 + 8))(0, v8, v9);
  if (!v4)
  {
    char v11 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v11 & 0x10) == 0) {
        return result;
      }
      if (result == 2)
      {
        uint64_t v12 = v3[3];
        uint64_t v13 = v3[4];
        sub_1B62C14BC(v3, v12);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32))(&v18, a2, a3, v12, v13);
        return bswap32(v18);
      }
      uint64_t v17 = (result << 8) | 2;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v15 = v17;
      *(void *)(v15 + 8) = 0;
      char v16 = 5;
    }
    else
    {
      uint64_t v14 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v15 = a1;
      *(void *)(v15 + 8) = v14;
      char v16 = 3;
    }
    *(unsigned char *)(v15 + 16) = v16;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B62B9944(uint64_t a1, uint64_t a2)
{
  return sub_1B62B995C(a1, a2);
}

uint64_t sub_1B62B995C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_1B62C14BC(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5, v6);
}

uint64_t sub_1B62B99E0()
{
  return sub_1B62B99F8();
}

uint64_t sub_1B62B99F8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t result = sub_1B62C1150((void *)(v2 + 16));
  if (!v1) {
    ++*(_DWORD *)(v2 + 80);
  }
  return result;
}

uint64_t sub_1B62B9A44()
{
  uint64_t v2 = v0;
  uint64_t v3 = (void *)(v0 + 16);
  uint64_t result = sub_1B62B9AF0();
  if (!v1 && (result & 1) != 0)
  {
    uint64_t v6 = *(void *)(v2 + 40);
    uint64_t v5 = *(void *)(v2 + 48);
    sub_1B62C14BC(v3, v6);
    return (uint64_t)(*(void *(**)(uint64_t *__return_ptr, void, void, uint64_t, uint64_t))(v5 + 32))(&v7, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC520], v6, v5);
  }
  return result;
}

uint64_t sub_1B62B9AF0()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_1B62C14BC(v0, v2);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v3 + 8))(0, v2, v3);
  if (!v1)
  {
    if ((result & 0xE0) == 0x40)
    {
      uint64_t v5 = result & 0xF;
      if (result == 64 || v5 == 2) {
        return result != 64;
      }
      uint64_t v7 = (v5 << 8) | 2;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v9 = 0;
      *(void *)uint64_t v8 = v7;
      char v10 = 5;
    }
    else
    {
      uint64_t v9 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v8 = &unk_1F0F51F38;
      char v10 = 3;
    }
    *(void *)(v8 + 8) = v9;
    *(unsigned char *)(v8 + 16) = v10;
    return swift_willThrow();
  }
  return result;
}

double sub_1B62B9C08@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B62B9C54(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1B62B9C54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int v96 = a2;
  sub_1B62BAC28(0, &qword_1EB980A90, (uint64_t (*)(void))sub_1B62BB590, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v97 = *(void *)(v3 - 8);
  uint64_t v98 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v84 - v5;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v101 = sub_1B62BAA04(MEMORY[0x1E4FBC860]);
  uint64_t v100 = sub_1B62BAA04(v7);
  uint64_t v8 = sub_1B62BAB24(v7);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B62BAB24(v7);
  swift_bridgeObjectRetain();
  char v10 = sub_1B62BAA04(v7);
  unsigned __int8 v103 = 1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62BB590();
  swift_bridgeObjectRetain();
  char v11 = v99;
  sub_1B6E33A48();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v94 = v10;
  uint64_t v95 = v6;
  uint64_t v12 = v9;
  uint64_t v99 = v8;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_1B62C14BC(a1, v13);
  BOOL v15 = sub_1B62BF5E0(1108, v13, v14);
  if (v15) {
    int v16 = 5;
  }
  else {
    int v16 = 11;
  }
  LODWORD(v90) = v16;
  if (v15) {
    int v17 = 4;
  }
  else {
    int v17 = 10;
  }
  LODWORD(v91) = v17;
  if (v15) {
    int v18 = 3;
  }
  else {
    int v18 = 9;
  }
  LODWORD(v92) = v18;
  if (v15) {
    int v19 = 2;
  }
  else {
    int v19 = 8;
  }
  LODWORD(v93) = v19;
  if (v15) {
    char v20 = 1;
  }
  else {
    char v20 = 7;
  }
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  if (v15) {
    char v23 = 0;
  }
  else {
    char v23 = 6;
  }
  sub_1B62C14BC(a1, a1[3]);
  uint64_t v24 = (uint64_t)a1;
  if (sub_1B62BF5E0(2010, v21, v22))
  {
    sub_1B6878B34();
    char v104 = v23;
    sub_1B6878BD4();
    sub_1B6E32D78();
    uint64_t v25 = v97;
    if (v102)
    {
      uint64_t v89 = sub_1B62BAF68((uint64_t)v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v101 = (void *)v89;
    }
    char v104 = v20;
    sub_1B6E32D78();
    uint64_t v26 = v100;
    if (v102)
    {
      uint64_t v27 = sub_1B62BAF68((uint64_t)v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)v27;
    }
    sub_1B62BACD8(0, &qword_1E9DD1688, (uint64_t)&type metadata for ComponentProperty, MEMORY[0x1E4FBAEA0]);
    char v104 = v93;
    sub_1B6878C4C();
  }
  else
  {
    sub_1B62BB720();
    char v104 = v23;
    sub_1B62BAC90(&qword_1EB97E550, (void (*)(uint64_t))sub_1B62BB720);
    sub_1B6E32D78();
    uint64_t v25 = v97;
    if (v102)
    {
      uint64_t v89 = sub_1B62BAF68((uint64_t)v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v101 = (void *)v89;
    }
    char v104 = v20;
    sub_1B6E32D78();
    uint64_t v26 = v100;
    if (v102)
    {
      uint64_t v29 = sub_1B62BAF68((uint64_t)v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)v29;
    }
    sub_1B62BB5E4(0, &qword_1EB97E568, (void (*)(void))sub_1B62B1EFC, (void (*)(void))sub_1B68789A4);
    char v104 = v93;
    sub_1B62BB690();
  }
  sub_1B6E32D78();
  uint64_t v30 = (uint64_t)v102;
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v99 = (void *)v30;
  }
  char v104 = v92;
  uint64_t v31 = v98;
  sub_1B6E32D78();
  uint64_t v32 = (uint64_t)v102;
  uint64_t v33 = (uint64_t)v12;
  swift_bridgeObjectRelease();
  if (v32)
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = v32;
  }
  uint64_t v34 = (uint64_t)v94;
  char v35 = v91;
  sub_1B62BAE70(0, &qword_1EB9802B0, &qword_1EB9802A0, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment, MEMORY[0x1E4FBB320]);
  char v104 = v35;
  sub_1B62BAD34(&qword_1EB9802B8, (void (*)(void))sub_1B68789F8);
  sub_1B6E32D78();
  uint64_t v36 = (uint64_t)v102;
  if (v102 == (void *)1) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = (uint64_t)v102;
  }
  uint64_t v93 = v37;
  sub_1B62D85D4(0, &qword_1EB980290, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment, MEMORY[0x1E4FBB320]);
  uint64_t v100 = v38;
  char v104 = v90;
  uint64_t v92 = v36;
  sub_1B62BADCC(v36);
  sub_1B62BADDC();
  sub_1B6E32D78();
  if (v102) {
    uint64_t v39 = v102;
  }
  else {
    uint64_t v39 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62BACD8(0, &qword_1EB9800D8, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBAEA0]);
  char v104 = 12;
  sub_1B62BAECC(&qword_1EB9800E0, (void (*)(void))sub_1B62A2730);
  swift_bridgeObjectRetain();
  sub_1B6E32D78();
  uint64_t v40 = (uint64_t)v102;
  swift_bridgeObjectRelease();
  if (v40)
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = v40;
  }
  uint64_t v41 = v93;
  uint64_t v88 = v24;
  uint64_t v89 = v33;
  uint64_t v94 = (void *)v34;
  if (v93)
  {
    uint64_t v42 = *(void *)(v93 + 16);
    sub_1B674C83C(v92);
    if (v42)
    {
      uint64_t v43 = v39[2];
      swift_bridgeObjectRelease();
      if (!v43)
      {
        uint64_t v100 = v26;
        swift_bridgeObjectRelease();
        uint64_t v85 = *(void *)(v93 + 16);
        if (v85)
        {
          uint64_t v44 = v92;
          uint64_t v45 = v93 + 32;
          sub_1B62BADCC(v92);
          sub_1B62BADCC(v44);
          uint64_t v46 = 0;
          uint64_t v39 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v47 = v100;
          uint64_t v48 = v85;
          uint64_t v84 = v45;
          do
          {
            if (v47[2])
            {
              uint64_t v49 = (uint64_t *)(v45 + 24 * v46);
              uint64_t v50 = v49[1];
              uint64_t v51 = v49[2];
              uint64_t v52 = *v49;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v53 = sub_1B62B2CE0(v52, v50);
              if (v54)
              {
                uint64_t v55 = (uint64_t *)(v47[7] + 16 * v53);
                uint64_t v56 = *v55;
                uint64_t v91 = v55[1];
                swift_retain();
                swift_bridgeObjectRelease();
                uint64_t v57 = *(void *)(v51 + 16);
                unint64_t v58 = v101;
                uint64_t v86 = v50;
                uint64_t v87 = v46;
                uint64_t v90 = v51;
                if (v57)
                {
                  swift_bridgeObjectRetain_n();
                  unint64_t v59 = (uint64_t *)(v51 + 40);
                  long long v60 = (void *)MEMORY[0x1E4FBC860];
                  do
                  {
                    if (v58[2])
                    {
                      uint64_t v61 = v57;
                      uint64_t v62 = *(v59 - 1);
                      uint64_t v63 = *v59;
                      swift_bridgeObjectRetain_n();
                      uint64_t v64 = sub_1B62B2CE0(v62, v63);
                      if (v65)
                      {
                        unint64_t v66 = (uint64_t *)(v58[7] + 16 * v64);
                        uint64_t v67 = *v66;
                        uint64_t v68 = v66[1];
                        swift_retain();
                        swift_bridgeObjectRelease_n();
                        BOOL v69 = v60;
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                          BOOL v69 = sub_1B68C3F64(0, v60[2] + 1, 1, v60);
                        }
                        unint64_t v71 = v69[2];
                        unint64_t v70 = v69[3];
                        if (v71 >= v70 >> 1) {
                          BOOL v69 = sub_1B68C3F64(v70 > 1, v71 + 1, 1, v69);
                        }
                        v69[2] = v71 + 1;
                        long long v60 = v69;
                        char v72 = &v69[2 * v71];
                        v72[4] = v67;
                        v72[5] = v68;
                        unint64_t v58 = v101;
                      }
                      else
                      {
                        swift_bridgeObjectRelease_n();
                      }
                      uint64_t v57 = v61;
                    }
                    v59 += 2;
                    --v57;
                  }
                  while (v57);
                  swift_bridgeObjectRelease_n();
                  uint64_t v47 = v100;
                }
                else
                {
                  long long v60 = (void *)MEMORY[0x1E4FBC860];
                }
                swift_retain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v74 = v84;
                uint64_t v48 = v85;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  uint64_t v39 = sub_1B68C3E34(0, v39[2] + 1, 1, v39);
                }
                unint64_t v76 = v39[2];
                unint64_t v75 = v39[3];
                if (v76 >= v75 >> 1) {
                  uint64_t v39 = sub_1B68C3E34(v75 > 1, v76 + 1, 1, v39);
                }
                void v39[2] = v76 + 1;
                char v77 = &v39[3 * v76];
                v77[4] = v56;
                v77[5] = v91;
                v77[6] = v60;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v46 = v87;
                uint64_t v45 = v74;
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
              }
            }
            ++v46;
          }
          while (v46 != v48);
          uint64_t v78 = v92;
          sub_1B674C83C(v92);
          sub_1B674C83C(v78);
        }
        else
        {
          uint64_t v39 = (void *)MEMORY[0x1E4FBC860];
        }
        unsigned __int8 v103 = 1;
        (*(void (**)(char *, uint64_t))(v97 + 8))(v95, v98);
        uint64_t v41 = v93;
        uint64_t v26 = v100;
        goto LABEL_79;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v95, v98);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v95, v31);
      swift_bridgeObjectRelease();
    }
    uint64_t v41 = v93;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v95, v31);
    swift_bridgeObjectRelease();
  }
LABEL_79:
  LODWORD(v100) = v103;
  uint64_t v79 = v101;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v80 = v99;
  swift_bridgeObjectRetain();
  uint64_t v81 = v89;
  swift_bridgeObjectRetain();
  uint64_t v82 = v94;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v83 = v96;
  void *v96 = v79;
  v83[1] = v26;
  v83[2] = v80;
  v83[3] = v81;
  v83[4] = v82;
  v83[5] = v41;
  v83[6] = v39;
  *((unsigned char *)v83 + 56) = (_BYTE)v100;
  return result;
}

void *sub_1B62BAA04(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F925C();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 56);
      do
      {
        uint64_t v5 = *(v4 - 3);
        uint64_t v6 = *(v4 - 2);
        uint64_t v7 = *v4;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v8 = *(v4 - 1);
        unint64_t v9 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
        char v10 = (uint64_t *)(v2[6] + 16 * v9);
        *char v10 = v5;
        v10[1] = v6;
        char v11 = (void *)(v2[7] + 16 * v9);
        *char v11 = v8;
        v11[1] = v7;
        ++v2[2];
        v4 += 4;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B62BAB24(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F91F4();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v5 = *(v4 - 2);
        uint64_t v6 = *(v4 - 1);
        uint64_t v7 = *v4;
        v4 += 3;
        swift_bridgeObjectRetain();
        swift_retain();
        unint64_t v8 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        unint64_t v9 = (uint64_t *)(v2[6] + 16 * v8);
        *unint64_t v9 = v5;
        v9[1] = v6;
        *(void *)(v2[7] + 8 * v8) = v7;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1B62BAC28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62BAC90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B62BACD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62BAD34(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62BAE70(255, &qword_1EB9802B0, &qword_1EB9802A0, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62BADCC(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1B62BADDC()
{
  unint64_t result = qword_1EB980298;
  if (!qword_1EB980298)
  {
    sub_1B62D85D4(255, &qword_1EB980290, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment, MEMORY[0x1E4FBB320]);
    sub_1B6878AE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980298);
  }
  return result;
}

void sub_1B62BAE70(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  if (!*a2)
  {
    sub_1B62D85D4(255, a3, a4, a5);
    unint64_t v6 = sub_1B6E324B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B62BAECC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62BACD8(255, &qword_1EB9800D8, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBAEA0]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62BAF68(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v3 = a1 + 64;
  uint64_t v37 = MEMORY[0x1E4FBC868];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t v8 = 0;
  uint64_t v35 = swift_bridgeObjectRetain() + 112;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v10);
    uint64_t v12 = v11[1];
    if (v12)
    {
      int v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      uint64_t v19 = *v11;
      unint64_t v20 = *(void *)(v2 + 16);
      uint64_t v36 = v19;
      if (*(void *)(v2 + 24) <= v20)
      {
        uint64_t v21 = v20 + 1;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1B62BB26C(v21, 1);
        uint64_t v2 = v37;
      }
      else
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
      }
      sub_1B6E33918();
      sub_1B6E318B8();
      uint64_t v22 = sub_1B6E33988();
      uint64_t v23 = v2 + 64;
      uint64_t v24 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v25 = v22 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v2 + 64 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v2 + 64 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v28 = v36;
      }
      else
      {
        unint64_t v29 = (unint64_t)(63 - v24) >> 6;
        uint64_t v28 = v36;
        do
        {
          if (v26 + 1 == v29) {
            unint64_t v26 = 0;
          }
          else {
            ++v26;
          }
          uint64_t v30 = *(void *)(v23 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v27 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t v31 = 16 * v27;
      uint64_t v32 = (void *)(*(void *)(v2 + 48) + v31);
      void *v32 = v17;
      v32[1] = v18;
      uint64_t v33 = (void *)(*(void *)(v2 + 56) + v31);
      void *v33 = v28;
      v33[1] = v12;
      ++*(void *)(v2 + 16);
      swift_release();
      if (v6) {
        goto LABEL_5;
      }
    }
    else if (v6)
    {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v13 = v8 + 1;
    if (v8 + 1 >= v7) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v8 + 2;
      if (v8 + 2 >= v7) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v8 + 3;
        if (v8 + 3 >= v7) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v8 + 4;
          if (v8 + 4 >= v7) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v8 + 5;
            if (v8 + 5 >= v7) {
              goto LABEL_36;
            }
            unint64_t v14 = *(void *)(v3 + 8 * v13);
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v8 = v13;
  }
  uint64_t v15 = v8;
  while (v7 - 6 != v15)
  {
    unint64_t v14 = *(void *)(v35 + 8 * v15++);
    if (v14)
    {
      uint64_t v13 = v15 + 5;
      goto LABEL_22;
    }
  }
LABEL_36:
  sub_1B62BB588();
  return v2;
}

uint64_t sub_1B62BB26C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980760);
  char v38 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_34;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v22 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v23 = v22 | (v13 << 6);
      goto LABEL_21;
    }
    uint64_t v24 = v13 + 1;
    if (v13 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v25 = v37[v24];
    if (!v25)
    {
      uint64_t v24 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v25 = v37[v24];
      if (!v25)
      {
        uint64_t v24 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v25 = v37[v24];
        if (!v25) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v13 = v24;
LABEL_21:
    uint64_t v26 = 16 * v23;
    unint64_t v27 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v23);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 56) + v26);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v33 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (v17 + 1 == v33) {
          unint64_t v17 = 0;
        }
        else {
          ++v17;
        }
        uint64_t v34 = *(void *)(v12 + 8 * v17);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    *unint64_t v20 = v29;
    v20[1] = v28;
    uint64_t v21 = (void *)(*(void *)(v7 + 56) + v19);
    *uint64_t v21 = v31;
    v21[1] = v32;
    ++*(void *)(v7 + 16);
  }
  while (v11 - 4 != v13)
  {
    unint64_t v25 = *(void *)(v5 + 8 * v13++ + 96);
    if (v25)
    {
      uint64_t v24 = v13 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  swift_release();
  if (v38)
  {
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    if (v35 >= 64) {
      bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v37 = -1 << v35;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_34:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B62BB588()
{
  return swift_release();
}

unint64_t sub_1B62BB590()
{
  unint64_t result = qword_1EB97FBF0;
  if (!qword_1EB97FBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBF0);
  }
  return result;
}

void sub_1B62BB5E4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = type metadata accessor for FastDictCoder();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1B62BB690()
{
  unint64_t result = qword_1EB97E560;
  if (!qword_1EB97E560)
  {
    sub_1B62BB5E4(255, &qword_1EB97E568, (void (*)(void))sub_1B62B1EFC, (void (*)(void))sub_1B68789A4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E560);
  }
  return result;
}

void sub_1B62BB720()
{
  if (!qword_1EB97E558)
  {
    sub_1B62BAC28(255, (unint64_t *)&unk_1EB97DB90, (uint64_t (*)(void))sub_1B62A2730, (uint64_t)&type metadata for EntityComponentProperty, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DecodeOrNil);
    sub_1B6878884();
    sub_1B6878914();
    unint64_t v0 = type metadata accessor for FastDictCoder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E558);
    }
  }
}

uint64_t sub_1B62BB800(uint64_t *a1)
{
  uint64_t v2 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v24 = sub_1B62BDDA8(MEMORY[0x1E4FBC860]);
  uint64_t v3 = *a1;
  uint64_t v4 = sub_1B636A21C(0, *(void *)(*a1 + 16), 0, v2);
  unint64_t v25 = v4;
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = v3 + 96 * v5 + 24;
    do
    {
      --v5;
      uint64_t v7 = *(void *)(v6 - 88);
      v6 -= 96;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1B62BBA68(v7, (uint64_t *)&v24, (unint64_t *)&v25);
      swift_release();
      swift_unknownObjectRelease();
    }
    while (v5);
    swift_bridgeObjectRelease();
    unint64_t v8 = (unint64_t)v25;
  }
  else
  {
    unint64_t v8 = (unint64_t)v4;
  }
  uint64_t v9 = sub_1B62BC484(MEMORY[0x1E4FBC860]);
  unint64_t v23 = v9;
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    int64_t v11 = v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v14 = *(void *)(v8 + 8 * v10 + 24);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v17 = sub_1B62C19C8(v14);
      char v18 = v16;
      uint64_t v19 = v11[2] + ((v16 & 1) == 0);
      if (v11[3] >= v19)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v16) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_1B6ACB3F4();
          if (v18) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_1B62BBDC4(v19, isUniquelyReferenced_nonNull_native);
        unint64_t v20 = sub_1B62C19C8(v14);
        if ((v18 & 1) != (v21 & 1))
        {
          uint64_t result = sub_1B6E33838();
          __break(1u);
          return result;
        }
        unint64_t v17 = v20;
        if (v18)
        {
LABEL_15:
          *(void *)(v11[7] + 8 * v17) = v12;
          goto LABEL_8;
        }
      }
      v11[(v17 >> 6) + 8] |= 1 << v17;
      uint64_t v13 = 8 * v17;
      *(void *)(v11[6] + v13) = v14;
      *(void *)(v11[7] + v13) = v12;
      ++v11[2];
LABEL_8:
      --v10;
      swift_bridgeObjectRelease();
      ++v12;
      if (!v10)
      {
        unint64_t v23 = v11;
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_1B62BC520((void **)a1, (uint64_t *)&v23);
  sub_1B62BC4B0((void **)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1B62BBA68(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *a2;
  if (*(void *)(*a2 + 16))
  {
    unint64_t result = sub_1B62C19C8(a1);
    if (v10)
    {
      if (*(unsigned char *)(*(void *)(v8 + 56) + result)) {
        return result;
      }
      sub_1B6E32BE8();
      __break(1u);
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *a2;
  *a2 = 0x8000000000000000;
  sub_1B62BBC74(0, a1, isUniquelyReferenced_nonNull_native);
  *a2 = v22;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v4 + 168);
  if (*(void *)(v12 + 16))
  {
    unint64_t v13 = sub_1B62C19C8(a1);
    if (v14)
    {
      uint64_t v15 = *(void *)(*(void *)(*(void *)(v12 + 56) + 8 * v13) + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = 32;
        do
        {
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          sub_1B62BBA68(ObjCClassFromMetadata, a2, a3);
          v16 += 16;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
      }
    }
  }
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *a2;
  *a2 = 0x8000000000000000;
  sub_1B62BBC74(1, a1, v18);
  *a2 = v23;
  swift_bridgeObjectRelease();
  unint64_t v19 = *a3;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    unint64_t result = (unint64_t)sub_1B636A21C(0, *(void *)(v19 + 16) + 1, 1, (char *)v19);
    unint64_t v19 = result;
  }
  unint64_t v21 = *(void *)(v19 + 16);
  unint64_t v20 = *(void *)(v19 + 24);
  if (v21 >= v20 >> 1)
  {
    unint64_t result = (unint64_t)sub_1B636A21C(v20 > 1, v21 + 1, 1, (char *)v19);
    unint64_t v19 = result;
  }
  *(void *)(v19 + 16) = v21 + 1;
  *(void *)(v19 + 8 * v21 + 32) = a1;
  *a3 = v19;
  return result;
}

uint64_t sub_1B62BBC74(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C19C8(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 < result || (a3 & 1) == 0)
  {
    if (v12 < result || (a3 & 1) != 0)
    {
      sub_1B62BC0E8(result, a3 & 1);
      uint64_t result = sub_1B62C19C8(a2);
      if ((v11 & 1) != (v14 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v9 = result;
    }
    else
    {
      uint64_t result = sub_1B6AD1658();
    }
  }
  char v15 = a1 & 1;
  uint64_t v16 = *v4;
  if (v11)
  {
    *(unsigned char *)(v16[7] + v9) = v15;
  }
  else
  {
    return sub_1B62BBDC0(v9, a2, v15, v16);
  }
  return result;
}

unint64_t sub_1B62BBD80(unint64_t result, uint64_t a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3 & 1;
  ++a4[2];
  return result;
}

uint64_t sub_1B62BBDC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB980810);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v30 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  uint64_t v31 = (void *)(v5 + 64);
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v12) {
      goto LABEL_27;
    }
    unint64_t v19 = v31[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_27;
      }
      unint64_t v19 = v31[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v12) {
          goto LABEL_27;
        }
        unint64_t v19 = v31[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v13 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(*(void *)(v7 + 48) + v15) = v20;
    *(void *)(*(void *)(v7 + 56) + v15) = v21;
    ++*(void *)(v7 + 16);
  }
  while (v12 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v30)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v28 >= 64) {
      bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v31 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

void sub_1B62BC098(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B6E32C68();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1B62BC0E8(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB97D8B0);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v29 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  char v30 = (void *)(v5 + 64);
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v17 = v8 + 1;
    if (v8 + 1 >= v12) {
      goto LABEL_27;
    }
    unint64_t v18 = v30[v17];
    if (!v18)
    {
      uint64_t v17 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_27;
      }
      unint64_t v18 = v30[v17];
      if (!v18)
      {
        uint64_t v17 = v8 + 3;
        if (v8 + 3 >= v12) {
          goto LABEL_27;
        }
        unint64_t v18 = v30[v17];
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v8 = v17;
LABEL_20:
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    char v20 = *(unsigned char *)(*(void *)(v5 + 56) + v16);
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v21 = sub_1B6E33988();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (v24 + 1 == v25) {
          unint64_t v24 = 0;
        }
        else {
          ++v24;
        }
        uint64_t v26 = *(void *)(v13 + 8 * v24);
      }
      while (v26 == -1);
      unint64_t v14 = __clz(__rbit64(~v26)) + (v24 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v19;
    *(unsigned char *)(*(void *)(v7 + 56) + v14) = v20;
    ++*(void *)(v7 + 16);
  }
  while (v12 - 4 != v8)
  {
    unint64_t v18 = *(void *)(v5 + 96 + 8 * v8++);
    if (v18)
    {
      uint64_t v17 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v29)
  {
    uint64_t v27 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v3 = v2;
    if (v27 >= 64) {
      bzero(v30, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *char v30 = -1 << v27;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    unint64_t v3 = v2;
  }
  *unint64_t v3 = v7;
  return result;
}

void *sub_1B62BC3B4(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  a2(0);
  uint64_t v6 = (void *)sub_1B6E32C58();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    unint64_t v10 = a3(v8);
    *(void *)((char *)v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
    uint64_t v11 = 8 * v10;
    *(void *)(v6[6] + v11) = v8;
    *(void *)(v6[7] + v11) = v9;
    ++v6[2];
    v7 += 2;
    --v3;
  }
  while (v3);
  return v6;
}

void *sub_1B62BC484(uint64_t a1)
{
  return sub_1B62BC3B4(a1, (void (*)(void))sub_1B67F9A08, (uint64_t (*)(uint64_t))sub_1B62C19C8);
}

uint64_t sub_1B62BC4B0(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B62BDEA0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1B62BD0EC(v5);
  *a1 = v2;
  return result;
}

int64_t sub_1B62BC520(void **a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1B62BDEA0(v4);
  }
  uint64_t v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  int64_t result = sub_1B62BC598(v7, a2);
  *a1 = v4;
  return result;
}

int64_t sub_1B62BC598(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1[1];
  int64_t result = sub_1B6E33068();
  if (result >= v5)
  {
    if (v5) {
      return sub_1B6C5DBCC(0, v5, 1, a1, a2);
    }
  }
  else
  {
    int64_t v103 = result;
    if (v5 >= 0) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v5 + 1;
    }
    if (v5 < -1)
    {
      int64_t result = sub_1B6E32BD8();
      __break(1u);
    }
    else
    {
      uint64_t v99 = a1;
      if (v5 >= 2)
      {
        uint64_t v8 = v7 >> 1;
        uint64_t v9 = sub_1B6E31C98();
        *(void *)(v9 + 16) = v8;
        uint64_t v102 = v9;
        uint64_t v116 = (uint64_t *)(v9 + 32);
LABEL_12:
        uint64_t v11 = 0;
        uint64_t v101 = *a1 + 96;
        uint64_t v118 = *a1;
        uint64_t v100 = *a1 + 80;
        int64_t v12 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v105 = v5;
        while (1)
        {
          uint64_t v14 = v11++;
          char v104 = v12;
          uint64_t v117 = v14;
          if (v11 >= v5) {
            goto LABEL_47;
          }
          uint64_t v15 = *(void *)(v118 + 96 * v14);
          uint64_t v16 = *a2;
          if (*(void *)(*a2 + 16) && (unint64_t v17 = sub_1B62C19C8(*(void *)(v118 + 96 * v11)), (v18 & 1) != 0)) {
            uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
          }
          else {
            uint64_t v19 = -1;
          }
          uint64_t v20 = *a2;
          if (*(void *)(*a2 + 16) && (unint64_t v21 = sub_1B62C19C8(v15), (v22 & 1) != 0)) {
            uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
          }
          else {
            uint64_t v23 = -1;
          }
          uint64_t v14 = v117;
          uint64_t v11 = v117 + 2;
          if (v117 + 2 < v105)
          {
            unint64_t v24 = (uint64_t *)(v101 + 96 * v117);
            do
            {
              uint64_t v25 = *v24;
              uint64_t v26 = *a2;
              if (*(void *)(*a2 + 16) && (unint64_t v27 = sub_1B62C19C8(v24[12]), (v28 & 1) != 0)) {
                uint64_t v29 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
              }
              else {
                uint64_t v29 = -1;
              }
              uint64_t v30 = *a2;
              if (*(void *)(*a2 + 16) && (unint64_t v31 = sub_1B62C19C8(v25), (v32 & 1) != 0))
              {
                if (v19 < v23 == v29 >= *(void *)(*(void *)(v30 + 56) + 8 * v31)) {
                  goto LABEL_37;
                }
              }
              else if (v19 < v23 == v29 > -2)
              {
                goto LABEL_37;
              }
              ++v11;
              v24 += 12;
            }
            while (v105 != v11);
            uint64_t v11 = v105;
LABEL_37:
            int64_t v12 = v104;
            uint64_t v14 = v117;
          }
          if (v19 >= v23)
          {
            uint64_t v5 = v105;
            if (v11 >= v105) {
              goto LABEL_66;
            }
            goto LABEL_48;
          }
          if (v14 >= v11) {
            break;
          }
          uint64_t v33 = 96 * v11;
          uint64_t v34 = 96 * v14;
          uint64_t v35 = v14;
          uint64_t v36 = v11;
          do
          {
            if (v35 != --v36)
            {
              uint64_t v37 = *(void *)(v118 + v34);
              uint64_t v38 = v118 + v33;
              uint64_t v39 = v3;
              char v40 = *(unsigned char *)(v118 + v34 + 32);
              char v114 = *(unsigned char *)(v118 + v34 + 72);
              char v111 = *(unsigned char *)(v118 + v34 + 74);
              char v112 = *(unsigned char *)(v118 + v34 + 73);
              int v110 = *(_DWORD *)(v118 + v34 + 76);
              long long v106 = *(_OWORD *)(v118 + v34 + 16);
              long long v107 = *(_OWORD *)(v118 + v34 + 56);
              uint64_t v41 = *(void *)(v118 + v34 + 8);
              long long v108 = *(_OWORD *)(v118 + v34 + 40);
              long long v109 = *(_OWORD *)(v118 + v34 + 80);
              memmove((void *)(v118 + v34), (const void *)(v118 + v33 - 96), 0x60uLL);
              *(void *)(v38 - 96) = v37;
              *(void *)(v38 - 88) = v41;
              *(_OWORD *)(v38 - 80) = v106;
              *(unsigned char *)(v38 - 64) = v40;
              uint64_t v3 = v39;
              *(_OWORD *)(v38 - 56) = v108;
              *(_OWORD *)(v38 - 40) = v107;
              *(unsigned char *)(v38 - 24) = v114;
              *(unsigned char *)(v38 - 23) = v112;
              *(unsigned char *)(v38 - 22) = v111;
              *(_DWORD *)(v38 - 20) = v110;
              *(_OWORD *)(v38 - 16) = v109;
              int64_t v12 = v104;
            }
            ++v35;
            v33 -= 96;
            v34 += 96;
          }
          while (v35 < v36);
          uint64_t v5 = v105;
          uint64_t v14 = v117;
          if (v11 >= v105) {
            goto LABEL_66;
          }
LABEL_48:
          if (v11 - v14 < v103)
          {
            uint64_t v42 = v14 + v103;
            if (v14 + v103 >= v5) {
              uint64_t v42 = v5;
            }
            uint64_t v115 = v42;
            if (v11 != v42)
            {
              uint64_t v113 = v3;
              uint64_t v43 = (_OWORD *)(v100 + 96 * v11);
              while (1)
              {
                uint64_t v44 = v14;
                uint64_t v45 = v43;
                do
                {
                  uint64_t v60 = *((void *)v45 - 22);
                  uint64_t v61 = (uint64_t *)(v45 - 5);
                  uint64_t v62 = *a2;
                  if (*(void *)(*a2 + 16) && (unint64_t v63 = sub_1B62C19C8(*v61), (v64 & 1) != 0)) {
                    uint64_t v65 = *(void *)(*(void *)(v62 + 56) + 8 * v63);
                  }
                  else {
                    uint64_t v65 = -1;
                  }
                  uint64_t v66 = *a2;
                  if (!*(void *)(*a2 + 16) || (unint64_t v67 = sub_1B62C19C8(v60), (v68 & 1) == 0))
                  {
                    if (v65 >= -1) {
                      break;
                    }
                    goto LABEL_56;
                  }
                  if (v65 >= *(void *)(*(void *)(v66 + 56) + 8 * v67)) {
                    break;
                  }
LABEL_56:
                  uint64_t v46 = *((void *)v45 - 10);
                  char v47 = *((unsigned char *)v45 - 48);
                  char v48 = *((unsigned char *)v45 - 8);
                  char v49 = *((unsigned char *)v45 - 7);
                  char v50 = *((unsigned char *)v45 - 6);
                  int v51 = *((_DWORD *)v45 - 1);
                  long long v52 = *(v45 - 4);
                  long long v53 = *(_OWORD *)((char *)v45 - 40);
                  long long v54 = *(_OWORD *)((char *)v45 - 24);
                  uint64_t v55 = *((void *)v45 - 9);
                  long long v56 = *v45;
                  long long v57 = *(v45 - 8);
                  *(v45 - 3) = *(v45 - 9);
                  *(v45 - 2) = v57;
                  long long v58 = *(v45 - 6);
                  *(v45 - 1) = *(v45 - 7);
                  *uint64_t v45 = v58;
                  long long v59 = *(v45 - 10);
                  *(_OWORD *)uint64_t v61 = *(v45 - 11);
                  *(v45 - 4) = v59;
                  *(v45 - 6) = v56;
                  v45 -= 6;
                  *((void *)v45 - 10) = v46;
                  *((void *)v45 - 9) = v55;
                  *(v45 - 4) = v52;
                  *((unsigned char *)v45 - 48) = v47;
                  *(_OWORD *)((char *)v45 - 40) = v53;
                  *(_OWORD *)((char *)v45 - 24) = v54;
                  *((unsigned char *)v45 - 8) = v48;
                  *((unsigned char *)v45 - 7) = v49;
                  *((unsigned char *)v45 - 6) = v50;
                  ++v44;
                  *((_DWORD *)v45 - 1) = v51;
                }
                while (v11 != v44);
                ++v11;
                v43 += 6;
                uint64_t v14 = v117;
                if (v11 == v115)
                {
                  uint64_t v3 = v113;
                  uint64_t v11 = v115;
                  int64_t v12 = v104;
                  break;
                }
              }
            }
          }
LABEL_66:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v12 = sub_1B62BD890(0, *((void *)v12 + 2) + 1, 1, v12);
          }
          unint64_t v70 = *((void *)v12 + 2);
          unint64_t v69 = *((void *)v12 + 3);
          unint64_t v13 = v70 + 1;
          if (v70 >= v69 >> 1) {
            int64_t v12 = sub_1B62BD890(v69 > 1, v70 + 1, 1, v12);
          }
          *((void *)v12 + 2) = v13;
          unint64_t v71 = v12 + 32;
          char v72 = &v12[16 * v70 + 32];
          *(void *)char v72 = v14;
          *((void *)v72 + 1) = v11;
          if (v70)
          {
            while (1)
            {
              uint64_t v73 = v13 - 1;
              if (v13 >= 4)
              {
                uint64_t v78 = &v71[16 * v13];
                uint64_t v79 = *((void *)v78 - 7) - *((void *)v78 - 8);
                uint64_t v76 = *((void *)v78 - 5) - *((void *)v78 - 6);
                uint64_t v77 = v13 - 2;
                char v80 = &v71[16 * v13 - 32];
                uint64_t v74 = *(void *)v80;
                uint64_t v75 = *((void *)v80 + 1);
                if (v76 - v74 + v75 >= v79)
                {
                  BOOL v83 = v76 < *(void *)&v71[16 * v73 + 8] - *(void *)&v71[16 * v73];
                  goto LABEL_81;
                }
              }
              else
              {
                if (v13 != 3)
                {
                  uint64_t v81 = *(void *)&v71[16 * v13 - 24] - *(void *)&v12[16 * v13];
                  uint64_t v82 = *(void *)&v71[16 * v73 + 8] - *(void *)&v71[16 * v73];
LABEL_78:
                  if (v82 < v81) {
                    goto LABEL_14;
                  }
                  goto LABEL_83;
                }
                uint64_t v74 = *((void *)v12 + 6);
                uint64_t v75 = *((void *)v12 + 7);
                uint64_t v76 = *((void *)v12 + 5) - *((void *)v12 + 4);
                uint64_t v77 = 1;
              }
              uint64_t v81 = v75 - v74;
              uint64_t v82 = *(void *)&v71[16 * v73 + 8] - *(void *)&v71[16 * v73];
              if (v81 + v82 < v76) {
                goto LABEL_78;
              }
              BOOL v83 = v76 < v82;
LABEL_81:
              if (v83) {
                uint64_t v73 = v77;
              }
LABEL_83:
              uint64_t v84 = &v71[16 * v73 - 16];
              uint64_t v85 = *(void *)v84;
              uint64_t v86 = &v71[16 * v73];
              uint64_t v87 = *((void *)v86 + 1);
              sub_1B62BCD88((uint64_t *)(v118 + 96 * *(void *)v84), (uint64_t *)(v118 + 96 * *(void *)v86), v118 + 96 * v87, v116, a2);
              if (v3) {
                goto LABEL_97;
              }
              *(void *)uint64_t v84 = v85;
              *((void *)v84 + 1) = v87;
              unint64_t v88 = *((void *)v12 + 2);
              unint64_t v13 = v88 - 1;
              memmove(&v71[16 * v73], v86 + 16, 16 * (v88 - 1 - v73));
              *((void *)v12 + 2) = v88 - 1;
              if (v88 <= 2) {
                goto LABEL_14;
              }
            }
          }
          unint64_t v13 = 1;
LABEL_14:
          uint64_t v5 = v105;
          if (v11 >= v105)
          {
            uint64_t v10 = v102;
            goto LABEL_90;
          }
        }
        uint64_t v5 = v105;
LABEL_47:
        if (v11 >= v5) {
          goto LABEL_66;
        }
        goto LABEL_48;
      }
      uint64_t v10 = MEMORY[0x1E4FBC860];
      uint64_t v116 = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
      if (v5 == 1)
      {
        uint64_t v102 = MEMORY[0x1E4FBC860];
        goto LABEL_12;
      }
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      int64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_90:
      uint64_t v89 = (uint64_t)v12;
      uint64_t v102 = v10;
      uint64_t v90 = v3;
      if (v13 < 2)
      {
LABEL_96:
        swift_bridgeObjectRelease();
        *(void *)(v102 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v91 = *v99;
        while (1)
        {
          uint64_t v92 = *(void *)(v89 + 32 + 16 * (v13 - 2));
          uint64_t v93 = (void *)(v89 + 32 + 16 * (v13 - 1));
          uint64_t v94 = v93[1];
          sub_1B62BCD88((uint64_t *)(v91 + 96 * v92), (uint64_t *)(v91 + 96 * *v93), v91 + 96 * v94, v116, a2);
          if (v90) {
            break;
          }
          uint64_t v95 = (char *)v89;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v95 = sub_1B6D671B8(v89);
          }
          uint64_t v89 = (uint64_t)v95;
          int v96 = v95 + 32;
          uint64_t v97 = &v95[16 * v13];
          *(void *)uint64_t v97 = v92;
          *((void *)v97 + 1) = v94;
          unint64_t v98 = *((void *)v95 + 2);
          memmove(&v96[16 * v13 - 16], &v96[16 * v13], 16 * (v98 - v13));
          *(void *)(v89 + 16) = v98 - 1;
          unint64_t v13 = v98 - 1;
          if (v98 <= 2) {
            goto LABEL_96;
          }
        }
LABEL_97:
        swift_bridgeObjectRelease();
        *(void *)(v102 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1B62BCD88(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst, uint64_t *a5)
{
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = ((char *)a2 - (char *)__src) / 96;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 96;
  uint64_t v41 = __src;
  char v40 = __dst;
  if (v10 >= v12)
  {
    if (v11 < -95) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[12 * v12] <= __dst) {
      memmove(__dst, a2, 96 * v12);
    }
    uint64_t v23 = &v5[12 * v12];
    uint64_t v39 = v23;
    uint64_t v41 = v7;
    if (v8 >= v7 || v11 < 96)
    {
LABEL_52:
      sub_1B62BDCD8((void **)&v41, (const void **)&v40, &v39);
      return 1;
    }
    unint64_t v24 = (char *)(a3 - 96);
    uint64_t v25 = v7;
    uint64_t v37 = v5;
    while (1)
    {
      uint64_t v27 = *(v25 - 12);
      v25 -= 12;
      uint64_t v26 = v27;
      uint64_t v28 = *a5;
      if (*(void *)(*a5 + 16) && (unint64_t v29 = sub_1B62C19C8(*(v23 - 12)), (v30 & 1) != 0)) {
        uint64_t v31 = *(void *)(*(void *)(v28 + 56) + 8 * v29);
      }
      else {
        uint64_t v31 = -1;
      }
      char v32 = (uint64_t *)(v24 + 96);
      uint64_t v33 = *a5;
      if (*(void *)(*a5 + 16) && (unint64_t v34 = sub_1B62C19C8(v26), (v35 & 1) != 0))
      {
        if (v31 < *(void *)(*(void *)(v33 + 56) + 8 * v34)) {
          goto LABEL_46;
        }
      }
      else if (v31 < -1)
      {
LABEL_46:
        if (v32 != v7 || v24 >= (char *)v7) {
          memmove(v24, v25, 0x60uLL);
        }
        uint64_t v41 = v25;
        goto LABEL_50;
      }
      uint64_t v39 = v23 - 12;
      if (v32 < v23 || v24 >= (char *)v23 || v32 != v23) {
        memmove(v24, v23 - 12, 0x60uLL);
      }
      uint64_t v25 = v7;
      v23 -= 12;
LABEL_50:
      if (v25 > v8)
      {
        v24 -= 96;
        uint64_t v7 = v25;
        if (v23 > v37) {
          continue;
        }
      }
      goto LABEL_52;
    }
  }
  if (v9 >= -95)
  {
    if (__dst != __src || &__src[12 * v10] <= __dst) {
      memmove(__dst, __src, 96 * v10);
    }
    unint64_t v13 = &v5[12 * v10];
    uint64_t v39 = v13;
    if ((unint64_t)v7 < a3 && v9 >= 96)
    {
      while (1)
      {
        uint64_t v14 = *v5;
        uint64_t v15 = *a5;
        if (*(void *)(*a5 + 16) && (unint64_t v16 = sub_1B62C19C8(*v7), (v17 & 1) != 0)) {
          uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
        }
        else {
          uint64_t v18 = -1;
        }
        uint64_t v19 = *a5;
        if (*(void *)(*a5 + 16) && (unint64_t v20 = sub_1B62C19C8(v14), (v21 & 1) != 0))
        {
          if (v18 < *(void *)(*(void *)(v19 + 56) + 8 * v20)) {
            goto LABEL_19;
          }
        }
        else if (v18 < -1)
        {
LABEL_19:
          char v22 = v7 + 12;
          if (v8 < v7 || v8 >= v22 || v8 != v7) {
            memmove(v8, v7, 0x60uLL);
          }
          goto LABEL_23;
        }
        if (v8 != v5) {
          memmove(v8, v5, 0x60uLL);
        }
        v5 += 12;
        char v40 = v5;
        char v22 = v7;
LABEL_23:
        v8 += 12;
        if (v5 < v13)
        {
          uint64_t v7 = v22;
          if ((unint64_t)v22 < a3) {
            continue;
          }
        }
        uint64_t v41 = v8;
        goto LABEL_52;
      }
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62BD0EC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v4)
  {
    if ((unint64_t)v4 >= 2)
    {
      uint64_t v9 = *a1;
      uint64_t v10 = *a1 + 176;
      uint64_t v11 = -1;
      for (uint64_t i = 1; i != v4; ++i)
      {
        uint64_t v13 = v9 + 96 * i;
        uint64_t v14 = *(void *)(v13 + 56);
        uint64_t v15 = *(void *)(v13 + 64);
        uint64_t v16 = v11;
        char v17 = (_OWORD *)v10;
        do
        {
          uint64_t v33 = *((void *)v17 - 15);
          if (v33 >= v14 && (v14 < v33 || v15 >= *((void *)v17 - 14))) {
            break;
          }
          uint64_t v18 = v17 - 5;
          uint64_t v19 = *((void *)v17 - 10);
          uint64_t result = (uint64_t)(v17 - 11);
          char v20 = *((unsigned char *)v17 - 48);
          char v21 = *((unsigned char *)v17 - 8);
          char v22 = *((unsigned char *)v17 - 7);
          char v23 = *((unsigned char *)v17 - 6);
          int v24 = *((_DWORD *)v17 - 1);
          long long v25 = *(v17 - 4);
          long long v26 = *(_OWORD *)((char *)v17 - 40);
          uint64_t v27 = *((void *)v17 - 9);
          long long v28 = *v17;
          long long v29 = *(v17 - 8);
          void v18[2] = *(v17 - 9);
          v18[3] = v29;
          long long v30 = *(v17 - 6);
          v18[4] = *(v17 - 7);
          _OWORD *v17 = v30;
          long long v31 = *(v17 - 10);
          _OWORD *v18 = *(v17 - 11);
          v18[1] = v31;
          *(v17 - 6) = v28;
          v17 -= 6;
          *((void *)v17 - 10) = v19;
          *((void *)v17 - 9) = v27;
          *(v17 - 4) = v25;
          *((unsigned char *)v17 - 48) = v20;
          *(_OWORD *)((char *)v17 - 40) = v26;
          *((void *)v17 - 3) = v14;
          *((void *)v17 - 2) = v15;
          *((unsigned char *)v17 - 8) = v21;
          *((unsigned char *)v17 - 7) = v22;
          *((unsigned char *)v17 - 6) = v23;
          *((_DWORD *)v17 - 1) = v24;
        }
        while (!__CFADD__(v16++, 1));
        v10 += 96;
        --v11;
      }
    }
    return result;
  }
  uint64_t v114 = result;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  int v110 = a1;
  if (v4 < 2)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    uint64_t v125 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v38 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v37 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_92;
    }
    uint64_t v113 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1B6E31C98();
    *(void *)(v8 + 16) = v7;
    uint64_t v113 = v8;
    uint64_t v125 = (char *)(v8 + 32);
  }
  uint64_t v36 = 0;
  uint64_t v112 = *a1 + 64;
  uint64_t v126 = *a1;
  uint64_t v111 = *a1 + 80;
  uint64_t v37 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v115 = v4;
  do
  {
    uint64_t v39 = v36++;
    if (v36 >= v4) {
      goto LABEL_52;
    }
    uint64_t v40 = v126 + 96 * v36;
    uint64_t v42 = *(void *)(v40 + 56);
    uint64_t v41 = *(void *)(v40 + 64);
    uint64_t v43 = v126 + 96 * v39;
    uint64_t v44 = *(void *)(v43 + 56);
    if (v44 >= v42)
    {
      if (v42 >= v44)
      {
        BOOL v45 = v41 < *(void *)(v43 + 64);
        uint64_t v36 = v39 + 2;
        if (v39 + 2 >= v4) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v36 = v39 + 2;
        if (v39 + 2 >= v4) {
          goto LABEL_52;
        }
        BOOL v45 = 0;
      }
LABEL_32:
      if (v4 <= v36 + 1) {
        uint64_t v46 = v36 + 1;
      }
      else {
        uint64_t v46 = v4;
      }
      char v47 = (uint64_t *)(v112 + 96 * v36);
      do
      {
        uint64_t v48 = *(v47 - 1);
        uint64_t v49 = *v47;
        if (v42 < v48)
        {
          if (!v45) {
            goto LABEL_52;
          }
        }
        else if (v48 >= v42)
        {
          if (((v45 ^ (v49 >= v41)) & 1) == 0) {
            goto LABEL_45;
          }
        }
        else if (v45)
        {
          goto LABEL_46;
        }
        v47 += 12;
        ++v36;
        uint64_t v41 = v49;
        uint64_t v42 = v48;
      }
      while (v36 < v4);
      uint64_t v36 = v46;
LABEL_45:
      if (!v45) {
        goto LABEL_52;
      }
      goto LABEL_46;
    }
    uint64_t v36 = v39 + 2;
    if (v39 + 2 < v4)
    {
      BOOL v45 = 1;
      goto LABEL_32;
    }
LABEL_46:
    if (v39 < v36)
    {
      uint64_t v50 = 96 * v36;
      uint64_t v51 = 96 * v39;
      uint64_t v52 = v36;
      uint64_t v109 = v39;
      do
      {
        if (v39 != --v52)
        {
          uint64_t v53 = v2;
          long long v54 = v37;
          uint64_t v55 = *(void *)(v126 + v51);
          uint64_t v56 = v126 + v50;
          char v57 = *(unsigned char *)(v126 + v51 + 32);
          uint64_t v124 = v53;
          char v122 = *(unsigned char *)(v126 + v51 + 73);
          char v123 = *(unsigned char *)(v126 + v51 + 72);
          int v120 = *(_DWORD *)(v126 + v51 + 76);
          char v121 = *(unsigned char *)(v126 + v51 + 74);
          long long v116 = *(_OWORD *)(v126 + v51 + 16);
          long long v117 = *(_OWORD *)(v126 + v51 + 56);
          uint64_t v58 = *(void *)(v126 + v51 + 8);
          long long v118 = *(_OWORD *)(v126 + v51 + 40);
          long long v119 = *(_OWORD *)(v126 + v51 + 80);
          memmove((void *)(v126 + v51), (const void *)(v126 + v50 - 96), 0x60uLL);
          *(void *)(v56 - 96) = v55;
          uint64_t v37 = v54;
          *(void *)(v56 - 88) = v58;
          *(_OWORD *)(v56 - 80) = v116;
          *(unsigned char *)(v56 - 64) = v57;
          *(_OWORD *)(v56 - 56) = v118;
          *(_OWORD *)(v56 - 40) = v117;
          *(unsigned char *)(v56 - 24) = v123;
          uint64_t v2 = v124;
          *(unsigned char *)(v56 - 23) = v122;
          *(unsigned char *)(v56 - 22) = v121;
          *(_DWORD *)(v56 - 20) = v120;
          *(_OWORD *)(v56 - 16) = v119;
        }
        ++v39;
        v50 -= 96;
        v51 += 96;
      }
      while (v39 < v52);
      uint64_t v4 = v115;
      uint64_t v39 = v109;
    }
LABEL_52:
    if (v36 < v4 && v36 - v39 < v114)
    {
      uint64_t v59 = v39 + v114;
      if (v39 + v114 >= v4) {
        uint64_t v59 = v4;
      }
      if (v36 != v59)
      {
        uint64_t v60 = (_OWORD *)(v111 + 96 * v36);
        do
        {
          uint64_t v61 = v126 + 96 * v36;
          uint64_t v62 = *(void *)(v61 + 56);
          uint64_t v63 = *(void *)(v61 + 64);
          uint64_t v64 = v39;
          uint64_t v65 = v60;
          do
          {
            uint64_t v80 = *((void *)v65 - 15);
            if (v80 >= v62 && (v62 < v80 || v63 >= *((void *)v65 - 14))) {
              break;
            }
            uint64_t v66 = v65 - 5;
            uint64_t v67 = *((void *)v65 - 10);
            char v68 = *((unsigned char *)v65 - 48);
            char v69 = *((unsigned char *)v65 - 8);
            char v70 = *((unsigned char *)v65 - 7);
            char v71 = *((unsigned char *)v65 - 6);
            int v72 = *((_DWORD *)v65 - 1);
            long long v73 = *(v65 - 4);
            long long v74 = *(_OWORD *)((char *)v65 - 40);
            uint64_t v75 = *((void *)v65 - 9);
            long long v76 = *v65;
            long long v77 = *(v65 - 8);
            v66[2] = *(v65 - 9);
            v66[3] = v77;
            long long v78 = *(v65 - 6);
            v66[4] = *(v65 - 7);
            *uint64_t v65 = v78;
            long long v79 = *(v65 - 10);
            *uint64_t v66 = *(v65 - 11);
            v66[1] = v79;
            *(v65 - 6) = v76;
            v65 -= 6;
            *((void *)v65 - 10) = v67;
            *((void *)v65 - 9) = v75;
            *(v65 - 4) = v73;
            *((unsigned char *)v65 - 48) = v68;
            *(_OWORD *)((char *)v65 - 40) = v74;
            *((void *)v65 - 3) = v62;
            *((void *)v65 - 2) = v63;
            *((unsigned char *)v65 - 8) = v69;
            *((unsigned char *)v65 - 7) = v70;
            *((unsigned char *)v65 - 6) = v71;
            ++v64;
            *((_DWORD *)v65 - 1) = v72;
          }
          while (v36 != v64);
          ++v36;
          v60 += 6;
        }
        while (v36 != v59);
        uint64_t v36 = v59;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_1B62BD890(0, *((void *)v37 + 2) + 1, 1, v37);
    }
    unint64_t v83 = *((void *)v37 + 2);
    unint64_t v82 = *((void *)v37 + 3);
    unint64_t v38 = v83 + 1;
    if (v83 >= v82 >> 1) {
      uint64_t v37 = sub_1B62BD890(v82 > 1, v83 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v38;
    uint64_t v84 = v37 + 32;
    uint64_t v85 = &v37[16 * v83 + 32];
    *(void *)uint64_t v85 = v39;
    *((void *)v85 + 1) = v36;
    if (v83)
    {
      while (1)
      {
        uint64_t v86 = v38 - 1;
        if (v38 >= 4)
        {
          uint64_t v91 = &v84[16 * v38];
          uint64_t v92 = *((void *)v91 - 7) - *((void *)v91 - 8);
          uint64_t v89 = *((void *)v91 - 5) - *((void *)v91 - 6);
          uint64_t v90 = v38 - 2;
          uint64_t v93 = &v84[16 * v38 - 32];
          uint64_t v87 = *(void *)v93;
          uint64_t v88 = *((void *)v93 + 1);
          if (v89 - v87 + v88 >= v92)
          {
            BOOL v96 = v89 < *(void *)&v84[16 * v86 + 8] - *(void *)&v84[16 * v86];
            goto LABEL_83;
          }
        }
        else
        {
          if (v38 != 3)
          {
            uint64_t v94 = *(void *)&v84[16 * v38 - 24] - *(void *)&v84[16 * v38 - 32];
            uint64_t v95 = *(void *)&v84[16 * v86 + 8] - *(void *)&v84[16 * v86];
LABEL_80:
            if (v95 < v94) {
              goto LABEL_23;
            }
            goto LABEL_85;
          }
          uint64_t v87 = *((void *)v37 + 6);
          uint64_t v88 = *((void *)v37 + 7);
          uint64_t v89 = *((void *)v37 + 5) - *((void *)v37 + 4);
          uint64_t v90 = 1;
        }
        uint64_t v94 = v88 - v87;
        uint64_t v95 = *(void *)&v84[16 * v86 + 8] - *(void *)&v84[16 * v86];
        if (v94 + v95 < v89) {
          goto LABEL_80;
        }
        BOOL v96 = v89 < v95;
LABEL_83:
        if (v96) {
          uint64_t v86 = v90;
        }
LABEL_85:
        uint64_t v97 = v37;
        unint64_t v98 = &v84[16 * v86 - 16];
        uint64_t v99 = *(void *)v98;
        uint64_t v100 = &v84[16 * v86];
        uint64_t v101 = *((void *)v100 + 1);
        sub_1B62BD9F4((char *)(v126 + 96 * *(void *)v98), (char *)(v126 + 96 * *(void *)v100), v126 + 96 * v101, v125);
        if (v2) {
          goto LABEL_88;
        }
        *(void *)unint64_t v98 = v99;
        *((void *)v98 + 1) = v101;
        uint64_t v37 = v97;
        unint64_t v102 = *((void *)v97 + 2);
        unint64_t v38 = v102 - 1;
        memmove(&v84[16 * v86], v100 + 16, 16 * (v102 - 1 - v86));
        *((void *)v37 + 2) = v102 - 1;
        if (v102 <= 2) {
          goto LABEL_23;
        }
      }
    }
    unint64_t v38 = 1;
LABEL_23:
    uint64_t v4 = v115;
  }
  while (v36 < v115);
  uint64_t v35 = v113;
LABEL_92:
  uint64_t v113 = v35;
  if (v38 >= 2)
  {
    uint64_t v103 = *v110;
    do
    {
      uint64_t v104 = *(void *)&v37[16 * v38];
      uint64_t v105 = &v37[16 * v38 + 16];
      uint64_t v106 = *((void *)v105 + 1);
      sub_1B62BD9F4((char *)(v103 + 96 * v104), (char *)(v103 + 96 * *(void *)v105), v103 + 96 * v106, v125);
      if (v2) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v37 = sub_1B6D671B8((uint64_t)v37);
      }
      long long v107 = &v37[16 * v38];
      *(void *)long long v107 = v104;
      *((void *)v107 + 1) = v106;
      unint64_t v108 = *((void *)v37 + 2);
      memmove(&v37[16 * v38 + 16], &v37[16 * v38 + 32], 16 * (v108 - v38));
      *((void *)v37 + 2) = v108 - 1;
      unint64_t v38 = v108 - 1;
    }
    while (v108 > 2);
  }
LABEL_88:
  swift_bridgeObjectRelease();
  *(void *)(v113 + 16) = 0;
  return swift_bridgeObjectRelease();
}

char *sub_1B62BD890(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62BD970();
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1B62BD970()
{
  if (!qword_1EB97D8E0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D8E0);
    }
  }
}

uint64_t sub_1B62BD9F4(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = __src;
  int64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 96;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 96;
  long long v29 = __dst;
  long long v28 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -95)
    {
      if (a4 != __src || &__src[96 * v11] <= a4) {
        memmove(a4, __src, 96 * v11);
      }
      uint64_t v19 = &v4[96 * v11];
      uint64_t v27 = v19;
      long long v29 = v6;
      if (v7 < v6 && v10 >= 96)
      {
        char v20 = (char *)(a3 - 96);
        do
        {
          char v21 = v20 + 96;
          uint64_t v22 = *((void *)v19 - 5);
          uint64_t v23 = *((void *)v6 - 5);
          if (v23 < v22 || (v22 >= v23 ? (BOOL v24 = *((void *)v19 - 4) < *((void *)v6 - 4)) : (BOOL v24 = 0), v24))
          {
            long long v25 = v6 - 96;
            if (v21 != v6 || v20 >= v6) {
              memmove(v20, v6 - 96, 0x60uLL);
            }
            long long v29 = v6 - 96;
            if (v25 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v27 = v19 - 96;
            if (v21 < v19 || v20 >= v19 || v21 != v19) {
              memmove(v20, v19 - 96, 0x60uLL);
            }
            long long v25 = v6;
            v19 -= 96;
            if (v6 <= v7) {
              break;
            }
          }
          v20 -= 96;
          unint64_t v6 = v25;
        }
        while (v19 > v4);
      }
LABEL_48:
      sub_1B62BDCD8((void **)&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -95)
  {
    if (a4 != __dst || &__dst[96 * v9] <= a4) {
      memmove(a4, __dst, 96 * v9);
    }
    int64_t v12 = &v4[96 * v9];
    uint64_t v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 96)
    {
      uint64_t v13 = v4;
      while (1)
      {
        uint64_t v14 = *((void *)v6 + 7);
        uint64_t v15 = *((void *)v13 + 7);
        if (v15 < v14 || (v14 >= v15 ? (BOOL v16 = *((void *)v6 + 8) < *((void *)v13 + 8)) : (BOOL v16 = 0), v16))
        {
          uint64_t v18 = v6 + 96;
          char v17 = v6;
          if (v7 == v6 && v7 < v18) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v4 = v13 + 96;
          char v17 = v13;
          uint64_t v18 = v6;
          if (v7 == v13)
          {
            v13 += 96;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v13 += 96;
          }
        }
        memmove(v7, v17, 0x60uLL);
LABEL_22:
        v7 += 96;
        if (v13 < v12)
        {
          unint64_t v6 = v18;
          if ((unint64_t)v18 < a3) {
            continue;
          }
        }
        long long v28 = v4;
        long long v29 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

char *sub_1B62BDCD8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -96)
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 96;
    if (result != v3 || result >= &v3[96 * v6])
    {
      return (char *)memmove(result, v3, 96 * v6);
    }
  }
  return result;
}

void *sub_1B62BDDA8(uint64_t a1)
{
  return sub_1B62BDDD4(a1, (void (*)(void))sub_1B67F9A70, (uint64_t (*)(uint64_t))sub_1B62C19C8);
}

void *sub_1B62BDDD4(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  a2(0);
  uint64_t v6 = (void *)sub_1B6E32C58();
  int64_t v7 = (unsigned char *)(a1 + 40);
  do
  {
    uint64_t v8 = *((void *)v7 - 1);
    char v9 = *v7;
    v7 += 16;
    unint64_t v10 = a3(v8);
    *(void *)((char *)v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
    *(void *)(v6[6] + 8 * v10) = v8;
    *(unsigned char *)(v6[7] + v10) = v9;
    ++v6[2];
    --v3;
  }
  while (v3);
  return v6;
}

void *sub_1B62BDEA0(void *a1)
{
  return sub_1B636A9C8(0, a1[2], 0, a1);
}

uint64_t sub_1B62BDEB4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B62BDEE0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B62BDEE0(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_1B62C14BC(a1, v3);
  if (sub_1B62BF5E0(2000, v3, v4))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      sub_1B62C550C((uint64_t)&v26, v28);
      unsigned int v5 = sub_1B6E33178();
      sub_1B62C550C((uint64_t)&v26, v28);
      uint64_t v6 = sub_1B6E33178();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
      goto LABEL_10;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1B62C14BC(a1, v7);
  LOBYTE(v7) = sub_1B62BF5E0(2008, v7, v8);
  sub_1B62C14BC(&v26, v28);
  if (v7)
  {
    unint64_t v9 = sub_1B6E33548();
    unsigned int v5 = v9;
    uint64_t v6 = HIDWORD(v9);
  }
  else
  {
    unsigned int v5 = sub_1B6E33528();
    uint64_t v6 = 0xFFFFFFFFLL;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
LABEL_10:
  if (v5 == -1)
  {
LABEL_21:
    uint64_t v19 = 0;
    uint64_t v17 = 0xFFFFFFFFLL;
    goto LABEL_22;
  }
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_1B62C14BC(a1, v11);
  uint64_t v13 = *(void *)(sub_1B62BE764(v11, v12) + 112);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v13 + 16) || (uint64_t v14 = sub_1B62BE38C(v5 | (unint64_t)(v6 << 32)), (v15 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    sub_1B62C14BC(a1, v20);
    uint64_t v22 = *(void *)(sub_1B62BE764(v20, v21) + 56);
    swift_release();
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    if (v22)
    {
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v23 = v26;
    uint64_t v24 = v27;
    int v25 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v26 = 0;
    swift_retain();
    sub_1B6B33E34(v25, &v26, v23, v24);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_21;
  }
  BOOL v16 = (unsigned int *)(*(void *)(v13 + 56) + 8 * v14);
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  swift_bridgeObjectRelease();
  uint64_t v19 = v18 << 32;
LABEL_22:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v19 | v17;
}

unint64_t sub_1B62BE314(uint64_t a1)
{
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B6E33958();
  uint64_t v2 = sub_1B6E33988();
  return sub_1B62BE390(a1, v2);
}

unint64_t sub_1B62BE390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = (int *)(*(void *)(v2 + 48) + 8 * result);
      int v9 = *v7;
      int v8 = v7[1];
      if (v9 == a1 && v8 == HIDWORD(a1)) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_1B62BE408(void *a1)
{
  uint64_t v3 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1) {
    goto LABEL_12;
  }
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1B62C14BC(a1, v4);
  LOBYTE(v4) = sub_1B62BF5E0(1107, v4, v5);
  sub_1B62C1550((uint64_t)a1, (uint64_t)&v22);
  if (v4)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
  }
  else
  {
    uint64_t v6 = v24;
    uint64_t v7 = v25;
    sub_1B62C14BC(&v22, v24);
    LOBYTE(v6) = *(unsigned char *)(sub_1B62BE764(v6, v7) + 85);
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
    if (v6)
    {
      sub_1B62C14BC(v26, v27);
      int v8 = sub_1B6E33528();
      uint64_t v9 = a1[3];
      uint64_t v10 = a1[4];
      sub_1B62C14BC(a1, v9);
      uint64_t v11 = sub_1B62BE764(v9, v10);
      if (v8 < 0 || (uint64_t v12 = *(void *)(v11 + 128), *(void *)(v12 + 16) <= v8))
      {
        swift_release();
        uint64_t v3 = 1;
        goto LABEL_20;
      }
      uint64_t v3 = *(void *)(v12 + 8 * v8 + 32);
      swift_release();
      if (v3)
      {
LABEL_20:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
        return v3;
      }
      unint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v22 = 0xD000000000000015;
      unint64_t v23 = 0x80000001B6F4A400;
      int v28 = v8;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v3 = v22;
      uint64_t v13 = v23;
      sub_1B67CD358();
      swift_allocError();
      *(void *)uint64_t v14 = v3;
      goto LABEL_18;
    }
  }
  sub_1B62C14BC(v26, v27);
  uint64_t v15 = sub_1B6E334C8();
  if (off_1EB97E350)
  {
    uint64_t v18 = v15;
    uint64_t v13 = v16;
    uint64_t v19 = a1[3];
    uint64_t v20 = a1[4];
    sub_1B62C14BC(a1, v19);
    swift_retain();
    uint64_t v21 = sub_1B6C70F80(v19, v20);
    uint64_t v3 = sub_1B62B2184(v18, v13, v21, 0);
    swift_release();
    if (v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v14 = v18;
LABEL_18:
    *(void *)(v14 + 8) = v13;
    *(unsigned char *)(v14 + 16) = 0;
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
LABEL_12:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v3;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62BE764(uint64_t a1, uint64_t a2)
{
  return sub_1B62BF634(a1, a2, MEMORY[0x1E4FBC5C0]);
}

uint64_t sub_1B62BE780@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  sub_1B62BF970();
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v47 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v12 = MEMORY[0x1F4188790](v8, v11);
  uint64_t v14 = (char *)&v47 - v13;
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v17 = (char *)&v47 - v16;
  sub_1B62BFA00(0, &qword_1EB9808D0, (uint64_t (*)(void))sub_1B6C7BE78, (uint64_t)&type metadata for ComponentCoder.CodingKeys_pre2000, MEMORY[0x1E4FBBDC0]);
  uint64_t v50 = *(void *)(v18 - 8);
  uint64_t v51 = v18;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 56);
  v19(v17, 1, 1);
  uint64_t v57 = 0;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  sub_1B62C14BC(a1, v20);
  uint64_t v22 = *(void *)(sub_1B62BF634(v20, v21, MEMORY[0x1E4FBC5C0]) + 24);
  swift_release();
  uint64_t v49 = v22;
  if (v22 > 1999)
  {
    uint64_t v52 = v17;
    sub_1B62C14BC(a1, a1[3]);
    uint64_t v26 = v53;
    sub_1B6E33A18();
    if (!v26)
    {
      sub_1B62BFA68((uint64_t)&v54, (uint64_t)&v55);
      sub_1B62C550C((uint64_t)&v55, *((uint64_t *)&v56 + 1));
      sub_1B62BFBD8();
      sub_1B6E33168();
      goto LABEL_10;
    }
    sub_1B62BFFD4((uint64_t)v52, (uint64_t (*)(void))sub_1B62BF970);
LABEL_6:
    sub_1B62BFB60((uint64_t)&v55, &qword_1EB980E38, &qword_1EB980E30, MEMORY[0x1E4FBBE10]);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C7BE78();
  uint64_t v23 = v53;
  sub_1B6E33A48();
  sub_1B62BFFD4((uint64_t)v17, (uint64_t (*)(void))sub_1B62BF970);
  if (v23) {
    goto LABEL_6;
  }
  uint64_t v24 = v51;
  ((void (*)(char *, void, uint64_t, uint64_t))v19)(v14, 0, 1, v51);
  sub_1B6C7BF30((uint64_t)v14, (uint64_t)v17);
  uint64_t v52 = v17;
  sub_1B6C7BECC((uint64_t)v17, (uint64_t)v10);
  uint64_t v25 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 48))(v10, 1, v24);
  LOBYTE(v60) = 0;
  sub_1B62BFBD8();
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  uint64_t v28 = v54;
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    goto LABEL_11;
  }
  __break(1u);
LABEL_10:
  uint64_t v28 = v54;
  uint64_t result = swift_conformsToProtocol2();
  if (!result)
  {
    __break(1u);
    return result;
  }
LABEL_11:
  uint64_t v29 = result;
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  sub_1B62C14BC(a1, v30);
  int v32 = *(unsigned __int8 *)(sub_1B62BF634(v30, v31, MEMORY[0x1E4FBC5C0]) + 84);
  swift_release();
  if (v32 == 1)
  {
    uint64_t v33 = a1;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v54 = 0x676E69646F636564;
    *((void *)&v54 + 1) = 0xE900000000000020;
    swift_retain();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v34 = v54;
    int v35 = sub_1B6E32138();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v54 = 0;
    swift_retain();
    sub_1B6B33E34(v35, (uint64_t *)&v54, v34, *((uint64_t *)&v34 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    a1 = v33;
  }
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[4];
  sub_1B62C14BC(a1, v36);
  uint64_t v38 = sub_1B62BF634(v36, v37, MEMORY[0x1E4FBC5C0]);
  *(void *)(v38 + 56) = v28;
  *(void *)(v38 + 64) = v29;
  swift_release();
  if (v49 > 1999)
  {
    sub_1B62BFC2C((uint64_t)&v55, v28, (uint64_t)&v54);
  }
  else
  {
    uint64_t v39 = v47;
    sub_1B6C7BECC((uint64_t)v52, v47);
    uint64_t v41 = v50;
    uint64_t v40 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v39, 1, v51);
    LOBYTE(v60) = 1;
    sub_1B6C7BE78();
    sub_1B6B3F880(v39, (uint64_t)&v60, v28, (uint64_t)&type metadata for ComponentCoder.CodingKeys_pre2000, (uint64_t)&v54);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
  }
  sub_1B62C15C4(&v54, (uint64_t)v58);
  uint64_t v42 = v48;
  uint64_t v43 = a1[3];
  uint64_t v44 = a1[4];
  sub_1B62C14BC(a1, v43);
  uint64_t v45 = sub_1B62BF634(v43, v44, MEMORY[0x1E4FBC5C0]);
  *(void *)(v45 + 56) = 0;
  *(void *)(v45 + 64) = 0;
  swift_release();
  sub_1B62BFFD4((uint64_t)v52, (uint64_t (*)(void))sub_1B62BF970);
  sub_1B62BFB60((uint64_t)&v55, &qword_1EB980E38, &qword_1EB980E30, MEMORY[0x1E4FBBE10]);
  long long v46 = v58[1];
  *(_OWORD *)uint64_t v42 = v58[0];
  *(_OWORD *)(v42 + 16) = v46;
  *(void *)(v42 + 32) = v59;
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

BOOL sub_1B62BF5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(sub_1B62BF634(a2, a3, MEMORY[0x1E4FBC5C0]) + 24);
  swift_release();
  return v4 < a1;
}

uint64_t sub_1B62BF634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  uint64_t v4 = sub_1B62BF6D0(v3);
  swift_bridgeObjectRelease();
  if (v4) {
    return v4;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62BF6D0(uint64_t a1)
{
  sub_1B62BF900(0, (unint64_t *)&qword_1EB9806A0, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)v14 - v4;
  uint64_t v6 = sub_1B6E32B48();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)thread_serialization_context()) {
    return swift_retain();
  }
  sub_1B6E32B38();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  if (*(void *)(a1 + 16) && (unint64_t v12 = sub_1B62FECE4((uint64_t)v10), (v13 & 1) != 0))
  {
    sub_1B62CAAD8(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (*((void *)&v16 + 1))
  {
    type metadata accessor for SerializationContext();
    if (swift_dynamicCast()) {
      return v14[1];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1B62B32CC((uint64_t)&v15);
    return 0;
  }
}

void sub_1B62BF900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B62BF964()
{
  return swift_bridgeObjectRetain();
}

void sub_1B62BF970()
{
  if (!qword_1EB9808D8)
  {
    sub_1B62BFA00(255, &qword_1EB9808D0, (uint64_t (*)(void))sub_1B6C7BE78, (uint64_t)&type metadata for ComponentCoder.CodingKeys_pre2000, MEMORY[0x1E4FBBDC0]);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9808D8);
    }
  }
}

void sub_1B62BFA00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62BFA68(uint64_t a1, uint64_t a2)
{
  sub_1B62BFAF8(0, &qword_1EB980E38, &qword_1EB980E30, MEMORY[0x1E4FBBE10], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1B62BFAF8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62C5560(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1B62BFB60(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62BFAF8(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t _s15RelationStorageVwxx()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B62BFBD8()
{
  unint64_t result = qword_1EB980040;
  if (!qword_1EB980040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980040);
  }
  return result;
}

uint64_t sub_1B62BFC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9)
  {
    v18[3] = v9;
    v18[4] = v8;
    sub_1B62C12C4(v18);
    sub_1B62BFEA4(a1);
    if (v3) {
      return sub_1B6A4A85C((uint64_t)v18);
    }
    sub_1B62C5560(0, (unint64_t *)&unk_1EB9803B8);
    sub_1B62C5560(0, (unint64_t *)&qword_1EB97FFF0);
    if (swift_dynamicCast()) {
      return sub_1B62C15C4(v16, a3);
    }
    uint64_t v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1B6B47510((uint64_t)v16, (uint64_t (*)(void))sub_1B6B47570);
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    v18[0] = 0xD000000000000010;
    v18[1] = 0x80000001B6F4A420;
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v14 = v18[0];
    uint64_t v15 = v18[1];
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v12 = v14;
    *(void *)(v12 + 8) = v15;
    char v13 = 32;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    strcpy((char *)v18, "can't decode ");
    HIWORD(v18[1]) = -4864;
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v11 = v18[1];
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v12 = v18[0];
    *(void *)(v12 + 8) = v11;
    char v13 = 64;
  }
  *(unsigned char *)(v12 + 16) = v13;
  return swift_willThrow();
}

uint64_t sub_1B62BFEA4(uint64_t a1)
{
  return sub_1B6E33168();
}

uint64_t sub_1B62BFF14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62BFF74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62BFFD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62C0034(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62C0094(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62C00F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62C0154(void *a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v96 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = type metadata accessor for _KeyBox();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2, v5);
  uint64_t v8 = (char *)v85 - v7;
  uint64_t v95 = v3;
  uint64_t v10 = MEMORY[0x1F4188790](v6, v9);
  uint64_t v12 = (char *)v85 - v11;
  uint64_t v90 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)v85 - v14;
  uint64_t v17 = a1[3];
  uint64_t v16 = a1[4];
  sub_1B62C14BC(a1, v17);
  uint64_t v18 = v94;
  unsigned __int8 v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 40))(v17, v16);
  uint64_t v94 = v18;
  if (v18)
  {
    uint64_t v20 = v1;
LABEL_34:
    type metadata accessor for _BinaryDecoder.KeyedStore();
    swift_deallocPartialClassInstance();
LABEL_35:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v20;
  }
  unsigned __int8 v21 = v19;
  uint64_t v88 = a1;
  uint64_t v89 = v15;
  uint64_t v87 = v12;
  uint64_t v91 = v1;
  uint64_t v92 = v8;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_1B62C14BC(a1, v22);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 64))(v99, v22, v23);
  if ((v21 & 0xE0) != 0xE0)
  {
    if ((v21 & 0xE0) != 0xC0)
    {
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v32 = &unk_1F0F67978;
      *(void *)(v32 + 8) = v21 & 0xE0;
      *(unsigned char *)(v32 + 16) = 3;
      swift_willThrow();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
      uint64_t v20 = v91;
      a1 = v88;
      goto LABEL_34;
    }
    uint64_t v24 = v88[3];
    uint64_t v25 = v88[4];
    sub_1B62C14BC(v88, v24);
    uint64_t v26 = v94;
    int v27 = sub_1B62C1C04(0xC0u, v24, v25);
    uint64_t v20 = v91;
    if (v26)
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
      a1 = v88;
      goto LABEL_34;
    }
    int v33 = v27;
    uint64_t v34 = type metadata accessor for _BinaryDecoder.DataStream();
    v85[1] = swift_getWitnessTable();
    v85[2] = v34;
    uint64_t v102 = sub_1B6E31498();
    uint64_t v98 = sub_1B6E314A8();
    int v86 = v33;
    if (v33)
    {
      uint64_t v35 = (uint64_t)v89;
      uint64_t v36 = (void (**)(char *, char *, uint64_t))(v90 + 16);
      uint64_t v94 = (void (**)(uint64_t, uint64_t))(v90 + 8);
      int v37 = v33;
      uint64_t v38 = v95;
      uint64_t v39 = (uint64_t)v87;
      do
      {
        uint64_t v40 = v100;
        uint64_t v41 = v101;
        sub_1B62C14BC(v99, v100);
        sub_1B6B13EC4(v40, v38, v41, v39);
        sub_1B6B370C0(v39, v38, v35);
        uint64_t v42 = v100;
        uint64_t v43 = v101;
        sub_1B62C14BC(v99, v100);
        uint64_t v44 = sub_1B62C1D44(v42, v43);
        uint64_t v45 = *(int *)(TupleTypeMetadata2 + 48);
        (*v36)(v92, v89, v4);
        *(void *)&v92[v45] = v44;
        uint64_t v35 = (uint64_t)v89;
        sub_1B6E31D18();
        sub_1B6E31CE8();
        (*v94)(v35, v4);
        --v37;
      }
      while (v37);
    }
    else
    {
      uint64_t v38 = v95;
    }
    sub_1B6E31568();
    uint64_t v77 = sub_1B6E314F8();
    uint64_t v97 = v98;
    uint64_t v79 = MEMORY[0x1F4188790](v77, v78);
    uint64_t v80 = v96;
    v85[-4] = v38;
    v85[-3] = v80;
    v85[-2] = &v102;
    v85[-1] = v99;
    MEMORY[0x1F4188790](v79, v81);
    v85[-4] = v38;
    v85[-3] = v82;
    v85[-2] = sub_1B6B17DA0;
    v85[-1] = v83;
    sub_1B6E31D18();
    swift_getWitnessTable();
    sub_1B6E31AA8();
    swift_bridgeObjectRelease();
    uint64_t v20 = v91;
    *(void *)(v91 + 16) = v102;
    *(unsigned char *)(v20 + 24) = 0;
    a1 = v88;
LABEL_38:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
    goto LABEL_35;
  }
  a1 = v88;
  uint64_t v28 = v88[3];
  uint64_t v29 = v88[4];
  sub_1B62C14BC(v88, v28);
  uint64_t v30 = v94;
  int v31 = sub_1B62C1C04(0xE0u, v28, v29);
  if (v30)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v99);
    uint64_t v20 = v91;
    goto LABEL_34;
  }
  uint64_t v102 = MEMORY[0x1E4FBC868];
  uint64_t v20 = v91;
  long long v46 = (char *)MEMORY[0x1E4FBC860];
  if (v31)
  {
    int v47 = v31;
    do
    {
      uint64_t v48 = v100;
      uint64_t v49 = v101;
      sub_1B62C14BC(v99, v100);
      int v50 = sub_1B62C1D44(v48, v49);
      uint64_t v51 = v100;
      uint64_t v52 = v101;
      sub_1B62C14BC(v99, v100);
      unsigned int v53 = sub_1B62C1D44(v51, v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v46 = sub_1B62CCC38(0, *((void *)v46 + 2) + 1, 1, v46);
      }
      unint64_t v55 = *((void *)v46 + 2);
      unint64_t v54 = *((void *)v46 + 3);
      if (v55 >= v54 >> 1) {
        long long v46 = sub_1B62CCC38(v54 > 1, v55 + 1, 1, v46);
      }
      *((void *)v46 + 2) = v55 + 1;
      long long v56 = &v46[16 * v55];
      *((void *)v56 + 4) = v50;
      *((void *)v56 + 5) = v53;
      --v47;
      uint64_t v20 = v91;
    }
    while (v47);
  }
  sub_1B62CCE80();
  sub_1B6E314F8();
  uint64_t v57 = (void (**)(uint64_t, uint64_t))*((void *)v46 + 2);
  if (!v57)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    *(void *)(v20 + 16) = v102;
    *(unsigned char *)(v20 + 24) = 1;
    goto LABEL_38;
  }
  uint64_t v58 = (void *)v102;
  swift_bridgeObjectRetain();
  uint64_t v59 = (uint64_t *)(v46 + 40);
  TupleTypeMetadata2 = (uint64_t)v46;
  while (1)
  {
    uint64_t v94 = v57;
    uint64_t v60 = *(v59 - 1);
    uint64_t v61 = *v59;
    uint64_t v62 = v100;
    uint64_t v63 = v101;
    sub_1B62C14BC(v99, v100);
    uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v61, v62, v63);
    uint64_t v66 = v65;
    type metadata accessor for _BinaryDecoder.DataStream();
    uint64_t v67 = (void *)swift_allocObject();
    v67[2] = v64;
    v67[3] = v66;
    v67[4] = 0;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v98 = (uint64_t)v58;
    uint64_t v102 = 0x8000000000000000;
    unint64_t v69 = sub_1B62C1A30(v60);
    char v71 = v70;
    uint64_t v72 = v58[2] + ((v70 & 1) == 0);
    if (v58[3] >= v72)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B6ACC0BC();
      }
      goto LABEL_30;
    }
    sub_1B6AB6324(v72, isUniquelyReferenced_nonNull_native);
    unint64_t v73 = sub_1B62C1A30(v60);
    if ((v71 & 1) != (v74 & 1)) {
      break;
    }
    unint64_t v69 = v73;
LABEL_30:
    uint64_t v75 = v94;
    uint64_t v58 = (void *)v98;
    if (v71)
    {
      uint64_t v76 = *(void *)(v98 + 56);
      swift_release();
      *(void *)(v76 + 8 * v69) = v67;
    }
    else
    {
      *(void *)(v98 + 8 * (v69 >> 6) + 64) |= 1 << v69;
      *(void *)(v58[6] + 8 * v69) = v60;
      *(void *)(v58[7] + 8 * v69) = v67;
      ++v58[2];
    }
    v59 += 2;
    uint64_t v102 = (uint64_t)v58;
    swift_bridgeObjectRelease();
    uint64_t v57 = (void (**)(uint64_t, uint64_t))((char *)v75 - 1);
    if (!v57)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = v91;
      a1 = v88;
      goto LABEL_37;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _BinaryDecoder.DataStream()
{
  return self;
}

uint64_t sub_1B62C0B00(uint64_t a1)
{
  return sub_1B62C0B24(a1);
}

uint64_t sub_1B62C0B24(uint64_t a1)
{
  unint64_t v3 = v1[3];
  uint64_t v4 = v1[4] + a1;
  uint64_t v5 = v1[2];
  switch(v3 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 >= v4) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 2uLL:
      if (*(void *)(v5 + 24) >= v4) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 3uLL:
      if (v4 > 0) {
        goto LABEL_7;
      }
      goto LABEL_5;
    default:
      if (BYTE6(v3) >= v4)
      {
LABEL_5:
        uint64_t result = sub_1B6E31008();
        v1[4] += a1;
      }
      else
      {
LABEL_7:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v7 = xmmword_1B6E50D30;
        *(unsigned char *)(v7 + 16) = 6;
        return swift_willThrow();
      }
      return result;
  }
}

uint64_t sub_1B62C0C00@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1;
  sub_1B62C1550((uint64_t)(v1 + 9), (uint64_t)v11);
  uint64_t v5 = sub_1B62C0DB8();
  type metadata accessor for _BinaryDecoder.UnkeyedStore();
  swift_allocObject();
  uint64_t result = sub_1B62C0F28(v11, v5);
  if (!v2)
  {
    uint64_t v7 = result;
    uint64_t v8 = swift_retain();
    MEMORY[0x1BA9B3870](v8);
    if (*(void *)((v3[14] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3[14] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    uint64_t v9 = v3[8];
    uint64_t v10 = v3[6];
    a1[3] = &type metadata for _BinaryUnkeyedDecodingContainer;
    a1[4] = sub_1B62C0EB0();
    swift_bridgeObjectRetain();
    uint64_t result = swift_release();
    *a1 = v10;
    a1[1] = v9;
    a1[2] = v7;
  }
  return result;
}

uint64_t sub_1B62C0D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  sub_1B62C1550(v3 + 72, (uint64_t)v8);
  uint64_t v4 = sub_1B62C0DB8();
  uint64_t v5 = *(void *)(v3 + 48);
  a1[3] = (uint64_t)&type metadata for _BinarySingleValueDecodingContainer;
  a1[4] = sub_1B62C0E5C();
  uint64_t v6 = swift_allocObject();
  *a1 = v6;
  sub_1B62C0DFC((uint64_t)v8, v6 + 32);
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  swift_bridgeObjectRetain();
  return sub_1B62C0DD4((uint64_t)v8);
}

uint64_t sub_1B62C0DB8()
{
  if (*(void *)(v0 + 64)) {
    return *(void *)(v0 + 64);
  }
  uint64_t result = v0;
  *(void *)(v0 + 64) = v0;
  return result;
}

uint64_t sub_1B62C0DD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62C0DFC(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1B62C0E5C()
{
  unint64_t result = qword_1EB97FB70;
  if (!qword_1EB97FB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FB70);
  }
  return result;
}

unint64_t sub_1B62C0EB0()
{
  unint64_t result = qword_1EB97FB68;
  if (!qword_1EB97FB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FB68);
  }
  return result;
}

uint64_t type metadata accessor for _BinaryDecoder.UnkeyedStore()
{
  return self;
}

uint64_t sub_1B62C0F28(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  *(_DWORD *)(v2 + 80) = 0;
  *(void *)(v2 + 72) = a2;
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1B62C14BC(a1, v6);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 64))(v23, v6, v7);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, v8);
  unsigned __int8 v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
  if (v3) {
    goto LABEL_2;
  }
  if ((v10 & 0xE0) == 0xA0)
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    int v19 = sub_1B62C1C04(0xA0u, v17, v18);
    uint64_t v16 = 0;
    *(_DWORD *)(v4 + 56) = v19;
    goto LABEL_8;
  }
  if ((v10 & 0xE0) == 0x80)
  {
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_1B62C14BC(a1, v12);
    unsigned int v14 = sub_1B62C1C04(0x80u, v12, v13);
    *(_DWORD *)(v4 + 56) = v14;
    uint64_t v22 = MEMORY[0x1F4188790](v14, v15);
    uint64_t v16 = sub_1B6B1788C(v22, (void (*)(void *, uint64_t *))sub_1B6B179D8);
LABEL_8:
    *(void *)(v4 + 64) = v16;
    sub_1B62C15C4(v23, v4 + 16);
    goto LABEL_3;
  }
  uint64_t v20 = v10 & 0xE0;
  sub_1B6B17984();
  swift_allocError();
  *(void *)uint64_t v21 = &unk_1F0F679A8;
  *(void *)(v21 + 8) = v20;
  *(unsigned char *)(v21 + 16) = 3;
  swift_willThrow();
LABEL_2:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v23);
  type metadata accessor for _BinaryDecoder.UnkeyedStore();
  swift_deallocPartialClassInstance();
LABEL_3:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1B62C1150(void *a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = sub_1B62C14BC(a1, v6);
  return sub_1B62C11CC(*(void *)(v5 + 8), (uint64_t)v8, *(void *)(v5 + 8), v4, v6, v2, v7, v3);
}

uint64_t sub_1B62C11CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v19[4] = a7;
  v19[3] = a5;
  uint64_t v16 = sub_1B62C12C4(v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v16, a2, a5);
  void v18[2] = a5;
  v18[3] = a6;
  v18[4] = a7;
  uint64_t v18[5] = a8;
  v18[6] = a1;
  v18[7] = a2;
  v18[8] = a3;
  v18[9] = a4;
  sub_1B62C1328(v19, (void (*)(void))sub_1B62C180C, (uint64_t)v18, a6);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v19);
}

uint64_t *sub_1B62C12C4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1B62C1328(uint64_t *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a4;
  uint64_t v8 = v4 + 72;
  sub_1B62C1550(v4 + 72, (uint64_t)v21);
  sub_1B62C15DC((uint64_t *)(v4 + 72), a1);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 56))(v9, v10);
  char v13 = v12;
  a2();
  if (v5) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v21);
  }
  if ((v13 & 1) == 0)
  {
    uint64_t v15 = a1[3];
    uint64_t v16 = a1[4];
    sub_1B62C14BC(a1, v15);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
    if ((v18 & 1) == 0 && v11 == v17)
    {
      uint64_t v19 = a1[3];
      uint64_t v20 = a1[4];
      sub_1B62C14BC(a1, v19);
      sub_1B62C2B48(v19, v20);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v8);
  return sub_1B62C15C4(v21, v8);
}

void *sub_1B62C14BC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1B62C1550(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B62C15B4()
{
  return *(void *)(*(void *)v0 + 32);
}

uint64_t sub_1B62C15C4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *sub_1B62C15DC(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1B62C180C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B62C1834(v1[6], v1[8], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1B62C1834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  if (*(unsigned char *)(a1 + 24) == 1)
  {
    if (*(void *)(a1 + 16))
    {
      uint64_t v11 = sub_1B62C1B08(a4, a4, a6);
      if (v11) {
        return sub_1B6B158B8(a2, a3, a4, v11, a5, a7, v12);
      }
    }
  }
  type metadata accessor for _BinaryDecoder();
  sub_1B62C1B0C();
  swift_retain();
  return sub_1B6E31E68();
}

uint64_t type metadata accessor for _BinaryDecoder()
{
  return self;
}

uint64_t sub_1B62C1970(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1B62C1A30(a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(v3 + 56) + 24 * v4);
  }
  else {
    return 0;
  }
}

unint64_t sub_1B62C19C8(uint64_t a1)
{
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v2 = sub_1B6E33988();
  return sub_1B62C1A6C(a1, v2);
}

unint64_t sub_1B62C1A30(uint64_t a1)
{
  uint64_t v2 = sub_1B6E33908();
  return sub_1B62C1A6C(a1, v2);
}

unint64_t sub_1B62C1A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B62C1B0C()
{
  unint64_t result = qword_1EB97EAB0;
  if (!qword_1EB97EAB0)
  {
    type metadata accessor for _BinaryDecoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EAB0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Query(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1B62C1B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = a1;
  a3[4] = a2;
  uint64_t v5 = sub_1B62C12C4(a3);
  uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16);

  return v6(v5, v3, a1);
}

uint64_t sub_1B62C1C04(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  if (!v3)
  {
    char v8 = result;
    if ((result & 0xE0) == a1)
    {
      (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
      uint64_t result = v8 & 0x1F;
      if (result == 31) {
        return sub_1B62C1D44(a2, a3);
      }
    }
    else
    {
      unsigned __int8 v9 = result & 0xE0;
      sub_1B6B18018(0, (unint64_t *)&unk_1EB980DB0, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1B6E77050;
      *(unsigned char *)(v10 + 32) = a1;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v11 = v10;
      *(void *)(v11 + 8) = v9;
      *(unsigned char *)(v11 + 16) = 3;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1B62C1D44(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v6 = (*(uint64_t (**)(void))(a2 + 48))();
  if (!v2)
  {
    if ((v6 & 0xE0) != 0x20)
    {
      uint64_t v7 = v6 & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v8 = &unk_1F0F51E98;
      *(void *)(v8 + 8) = v7;
      *(unsigned char *)(v8 + 16) = 3;
      goto LABEL_10;
    }
    uint64_t v3 = v6 & 0xF;
    if ((v6 & 0x10) == 0) {
      return v3;
    }
    if (v3 == 2)
    {
      (*(void (**)(char *__return_ptr, void, void, uint64_t, uint64_t))(a2 + 32))((char *)&v11 + 3, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC520], a1, a2);
      return bswap32(*(unsigned int *)((char *)&v11 + 3));
    }
    else
    {
      if (v3 != 1)
      {
        if ((v6 & 0xF) == 0)
        {
          (*(void (**)(uint64_t *__return_ptr, void, void, uint64_t, uint64_t))(a2 + 32))(&v11, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBC3A8], a1, a2);
          return v11;
        }
        sub_1B6B17984();
        swift_allocError();
        *(void *)uint64_t v10 = v3;
        *(void *)(v10 + 8) = 0;
        *(unsigned char *)(v10 + 16) = 0;
LABEL_10:
        swift_willThrow();
        return v3;
      }
      (*(void (**)(char *__return_ptr, void, void, uint64_t, uint64_t))(a2 + 32))((char *)&v11 + 1, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBC4A8], a1, a2);
      return bswap32(*(unsigned __int16 *)((char *)&v11 + 1)) >> 16;
    }
  }
  return v3;
}

uint64_t sub_1B62C1F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B62C1F30(a1, a2, a3);
}

uint64_t sub_1B62C1F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v4 = v3;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v8);
  uint64_t v9 = *(void *)(*(void *)(a1 - 8) + 64);
  unint64_t v10 = v3[3];
  uint64_t v11 = v3[4] + v9;
  uint64_t v12 = v3[2];
  switch(v10 >> 62)
  {
    case 1uLL:
      if ((uint64_t)(0xFFFFFFFF00000001 * v12) >> 32 >= v11) {
        goto LABEL_5;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v12 + 24) - *(void *)(v12 + 16) >= v11) {
        goto LABEL_5;
      }
      goto LABEL_8;
    case 3uLL:
      if (v11 > 0) {
        goto LABEL_8;
      }
      goto LABEL_5;
    default:
      if (BYTE6(v10) >= v11)
      {
LABEL_5:
        unint64_t v24 = v3[2];
        swift_getAssociatedConformanceWitness();
        sub_1B6E337E8();
        uint64_t v13 = v26;
        uint64_t v14 = sub_1B6E33488();
        MEMORY[0x1F4188790](v14, v15);
        *(&v23 - 6) = a1;
        *(&v23 - 5) = a2;
        *(&v23 - 4) = v13;
        *(&v23 - 3) = (uint64_t)v3;
        *(&v23 - 2) = v9;
        switch(v10 >> 62)
        {
          case 1uLL:
            a2 = v24;
            swift_retain();
            uint64_t v22 = v25;
            sub_1B62C2624((int)a2, a2 >> 32, (uint64_t (*)(uint64_t, uint64_t))sub_1B62C26BC);
            if (v22) {
              goto LABEL_20;
            }
            uint64_t result = sub_1B62C2360(a2, v10);
            goto LABEL_17;
          case 2uLL:
            unint64_t v10 = v24;
            uint64_t v19 = *(void *)(v24 + 16);
            uint64_t v20 = *(void *)(v24 + 24);
            swift_retain();
            swift_retain();
            uint64_t v21 = v25;
            sub_1B62C2624(v19, v20, (uint64_t (*)(uint64_t, uint64_t))sub_1B62C26BC);
            if (v21)
            {
              swift_release();
              swift_release();
              __break(1u);
LABEL_20:
              uint64_t result = sub_1B62C2360(a2, v10);
              __break(1u);
            }
            else
            {
              swift_release();
              uint64_t result = swift_release();
LABEL_17:
              v4[4] += v9;
            }
            break;
          case 3uLL:
            memset(v27, 0, 14);
            uint64_t v29 = v27;
            uint64_t v30 = (char *)v27;
            goto LABEL_14;
          default:
            v27[0] = v24;
            LOWORD(v27[1]) = v10;
            BYTE2(v27[1]) = BYTE2(v10);
            BYTE3(v27[1]) = BYTE3(v10);
            BYTE4(v27[1]) = BYTE4(v10);
            BYTE5(v27[1]) = BYTE5(v10);
            uint64_t v29 = v27;
            uint64_t v30 = (char *)v27 + BYTE6(v10);
LABEL_14:
            int v31 = v3;
            uint64_t v32 = v9;
            uint64_t result = sub_1B62C2728(v26, (uint64_t)sub_1B62C281C, (uint64_t)v28, a1, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC278], v16);
            goto LABEL_17;
        }
      }
      else
      {
LABEL_8:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v17 = xmmword_1B6E50D30;
        *(unsigned char *)(v17 + 16) = 6;
        return swift_willThrow();
      }
      return result;
  }
}

uint64_t sub_1B62C2360(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1B62C23B8(uint64_t a1, uint64_t a2)
{
  return sub_1B62C23D0(a1, a2);
}

uint64_t sub_1B62C23D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(1, a1);
}

uint64_t sub_1B62C2404(uint64_t a1, uint64_t a2)
{
  return sub_1B62C241C(a1, a2);
}

uint64_t sub_1B62C241C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t))(a2 + 8))(0, a1);
}

uint64_t sub_1B62C2450(char a1)
{
  return sub_1B62C2474(a1);
}

uint64_t sub_1B62C2474(char a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[2];
  switch(v2 >> 62)
  {
    case 1uLL:
      if (v3 < v4 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_5;
    case 2uLL:
      if (v3 < *(void *)(v4 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_5;
    case 3uLL:
      goto LABEL_5;
    default:
      if (v3 >= BYTE6(v2))
      {
LABEL_5:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v6 = xmmword_1B6E50D30;
        *(unsigned char *)(v6 + 16) = 6;
        return swift_willThrow();
      }
LABEL_7:
      if (v2 >> 62)
      {
        uint64_t v8 = sub_1B6E30B98();
        uint64_t result = *(unsigned __int8 *)(v8 + v3 - sub_1B6E30BC8());
        if (a1) {
          return result;
        }
        goto LABEL_9;
      }
      __int16 v9 = v1[2];
      char v10 = BYTE2(v4);
      char v11 = BYTE3(v4);
      char v12 = BYTE4(v4);
      char v13 = BYTE5(v4);
      char v14 = BYTE6(v4);
      char v15 = HIBYTE(v4);
      __int16 v16 = v2;
      char v17 = BYTE2(v2);
      char v18 = BYTE3(v2);
      char v19 = BYTE4(v2);
      char v20 = BYTE5(v2);
      uint64_t result = *((unsigned __int8 *)&v9 + v3);
      if ((a1 & 1) == 0) {
LABEL_9:
      }
        ++v1[4];
      return result;
  }
}

uint64_t sub_1B62C2624(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_1B6E30B98();
  if (v6) {
    v6 += a1 - sub_1B6E30BC8();
  }
  uint64_t v7 = sub_1B6E30BB8();
  uint64_t v8 = a2 - a1;
  if (v7 < a2 - a1) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = v6 + v8;
  if (v6) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  return a3(v6, v10);
}

uint64_t sub_1B62C26BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[2];
  uint64_t v10 = v8[4];
  uint64_t v11 = v8[5];
  uint64_t v12 = v8[6];
  void v14[2] = a1;
  v14[3] = a2;
  void v14[4] = v11;
  v14[5] = v12;
  return sub_1B62C2728(v10, (uint64_t)sub_1B62C281C, (uint64_t)v14, v9, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC278], a8);
}

uint64_t sub_1B62C2728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790]();
  char v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

void *sub_1B62C281C(void *a1, uint64_t a2)
{
  return sub_1B62C2840(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

void *sub_1B62C2840(void *result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int64_t __len)
{
  if (a3)
  {
    if (!result) {
      goto LABEL_10;
    }
    if (a2 - (uint64_t)result >= __len)
    {
      uint64_t v6 = (const void *)(a3 + *(void *)(a5 + 32));
      return memmove(result, v6, __len);
    }
  }
  else if (!result || ((a2 - (void)result) & 0x8000000000000000) == 0)
  {
    return result;
  }
  do
  {
    uint64_t result = (void *)sub_1B6E32C88();
    __break(1u);
LABEL_10:
    ;
  }
  while (__len > 0);
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for DirtyReadPolicy(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1B62C2904()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_1B62C14BC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

void *initializeBufferWithCopyOfBuffer for Entity(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1B62C2968()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_1B62C14BC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(1, v1, v2);
}

uint64_t initializeWithCopy for _BinaryDecoder.SingleValueStore(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t sub_1B62C2A20()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_1B62C14BC(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

uint64_t sub_1B62C2A7C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_1B62C14BC(v0, v1);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v2 + 8))(0, v1, v2);
}

uint64_t sub_1B62C2ADC(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_1B62C14BC(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1B62C2B48(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 40))();
  if (!v3)
  {
    switch((result >> 5) ^ 4)
    {
      case 1:
        uint64_t result = sub_1B62C1C04(0xA0u, a1, a2);
        for (int i = result; i; --i)
          uint64_t result = sub_1B62C2B48(a1, a2);
        break;
      case 2:
      case 3:
        v9[3] = a1;
        v9[4] = a2;
        uint64_t v7 = sub_1B62C12C4(v9);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(v7, v2, a1);
        sub_1B62C2D70(0, &qword_1EB97EAA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for _BinaryDecoder.KeyedStore);
        swift_allocObject();
        sub_1B62CC2E8(v9);
        uint64_t result = swift_release();
        break;
      case 4:
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
        break;
      case 5:
        uint64_t result = sub_1B6B152D4(a1, a2);
        break;
      case 6:
        uint64_t result = sub_1B6B15564(a1, a2);
        break;
      case 7:
        sub_1B62B902C(a1, a2);
        uint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        uint64_t result = sub_1B6E32BE8();
        __break(1u);
        break;
    }
  }
  return result;
}

void sub_1B62C2D70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B62B1B2C();
    unint64_t v7 = a3(a1, &type metadata for StringCodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B62C2DD4()
{
  type metadata accessor for _BinaryDecoder.KeyedStore();
  sub_1B62C1550(v0 + 72, (uint64_t)v7);
  swift_allocObject();
  uint64_t result = sub_1B62C0154(v7);
  if (!v1)
  {
    uint64_t v3 = result;
    uint64_t v4 = swift_retain();
    MEMORY[0x1BA9B3870](v4);
    if (*(void *)((*(void *)(v0 + 112) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 112) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    uint64_t v5 = sub_1B62C0DB8();
    uint64_t v6 = *(void *)(v0 + 48);
    v7[0] = v5;
    v7[1] = v6;
    uint64_t v7[2] = v3;
    type metadata accessor for _BinaryKeyedDecodingContainer();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1B6E32EB8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62C2F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B62C2F50(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B62C2F84) & 1;
}

uint64_t sub_1B62C2F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void))
{
  return a4(a1, *v4, v4[1], v4[2], *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1;
}

BOOL sub_1B62C2F84(uint64_t a1)
{
  sub_1B62C2FC0(a1, &v4);
  if (!v1) {
    return v4;
  }
  return v2;
}

uint64_t sub_1B62C2FC0@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v2)
  {
    char v5 = sub_1B62C3B5C();
    if (!v5) {
      sub_1B62C4258();
    }
    uint64_t result = swift_release();
    *a2 = v5 == 0;
  }
  return result;
}

uint64_t sub_1B62C305C(uint64_t a1, uint64_t a2)
{
  return sub_1B62C3084(a1, a2) & 1;
}

uint64_t sub_1B62C3084(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    MEMORY[0x1F4188790](a1, a2);
    MEMORY[0x1F4188790](v17, *(void *)(v16 + 80));
    type metadata accessor for _KeyBox();
    type metadata accessor for _BinaryDecoder.DataStream();
    swift_getWitnessTable();
    sub_1B6E31568();
    swift_getWitnessTable();
    char v18 = sub_1B6E31AB8();
    return v18 & 1;
  }
  int v4 = sub_1B62C371C();
  uint64_t v5 = 0;
  uint64_t v6 = v3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v5 << 6);
LABEL_6:
    if (*(void *)(*(void *)(v3 + 48) + 8 * v12) == v4)
    {
      char v18 = 1;
      return v18 & 1;
    }
  }
  uint64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  if (v14) {
    goto LABEL_21;
  }
  uint64_t v13 = v5 + 2;
  if (v5 + 2 >= v10) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  if (v14) {
    goto LABEL_21;
  }
  uint64_t v13 = v5 + 3;
  if (v5 + 3 >= v10) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  if (v14) {
    goto LABEL_21;
  }
  uint64_t v13 = v5 + 4;
  if (v5 + 4 >= v10) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  if (v14) {
    goto LABEL_21;
  }
  uint64_t v13 = v5 + 5;
  if (v5 + 5 >= v10) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  if (v14)
  {
LABEL_21:
    unint64_t v15 = __clz(__rbit64(v14));
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = v15 + (v13 << 6);
    uint64_t v5 = v13;
    goto LABEL_6;
  }
  while (v10 - 6 != v5)
  {
    unint64_t v14 = *(void *)(v3 + 112 + 8 * v5++);
    if (v14)
    {
      uint64_t v13 = v5 + 5;
      goto LABEL_21;
    }
  }
LABEL_24:
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_1B62C3310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B62C333C(a1, a2, a3, a4, a5, a6, sub_1B62C3380);
}

uint64_t sub_1B62C333C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, void, void, void, void, uint64_t, void, uint64_t))
{
  return a7(a1, a2, *v7, v7[1], v7[2], *(void *)(a5 + 16), a3, *(void *)(a5 + 24), a4);
}

uint64_t sub_1B62C3380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B62C33B0(a5, a2, a1, a3, a4, a5, a7, a9);
}

uint64_t sub_1B62C33B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_1B62C345C(a2, a2);
  if (!v8)
  {
    uint64_t v15 = result;
    uint64_t v14 = type metadata accessor for _BinaryDecoder.DataStream();
    sub_1B62C11CC(a4, (uint64_t)&v15, a4, a3, v14, a7, (uint64_t)&off_1F0F67898, a8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62C345C(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v3 = *(void *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for _KeyBox();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  unint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = *(void *)(v2 + 16);
  if (*(unsigned char *)(v2 + 24))
  {
    int v13 = sub_1B62C371C();
    if (*(void *)(v12 + 16))
    {
      sub_1B62C1A30(v13);
      if (v14) {
        return swift_retain();
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v23, v3);
    sub_1B6B370C0((uint64_t)v6, v3, (uint64_t)v11);
    uint64_t v16 = type metadata accessor for _BinaryDecoder.DataStream();
    uint64_t WitnessTable = swift_getWitnessTable();
    MEMORY[0x1BA9B31E0](&v24, v11, v12, v7, v16, WitnessTable);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t result = v24;
    if (v24) {
      return result;
    }
  }
  uint64_t v18 = sub_1B6E33AB8();
  uint64_t v20 = v19;
  sub_1B6B17984();
  swift_allocError();
  *(void *)uint64_t v21 = v18;
  *(void *)(v21 + 8) = v20;
  *(unsigned char *)(v21 + 16) = 2;
  return swift_willThrow();
}

uint64_t sub_1B62C36EC()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B62C371C()
{
  unint64_t v0 = sub_1B6E33AD8();
  if (v1)
  {
    uint64_t v3 = sub_1B6E33AB8();
    uint64_t v2 = sub_1B62C3814(v3, v4);
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v2 = v0;
  if ((v0 & 0x8000000000000000) == 0 && !HIDWORD(v0)) {
    return v2;
  }
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

uint64_t sub_1B62C3814(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      *(void *)__s = a1;
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFFFLL;
      int v4 = strlen(__s);
      uint64_t v5 = (unsigned __int8 *)__s;
      return MurmurHash2(v5, v4, 0);
    }
    if ((a1 & 0x1000000000000000) != 0)
    {
      uint64_t v3 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      int v4 = strlen(v3);
      uint64_t v5 = (unsigned __int8 *)v3;
      return MurmurHash2(v5, v4, 0);
    }
  }
  uint64_t result = sub_1B6E32898();
  if (!v2) {
    return v9;
  }
  return result;
}

uint64_t type metadata accessor for _KeyBox()
{
  return sub_1B62C36EC();
}

unint64_t sub_1B62C38E8()
{
  return sub_1B62C38F0(*v0);
}

unint64_t sub_1B62C38F0(char a1)
{
  unint64_t result = 0x4C72616C75676E61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F69746365726964;
      break;
    case 2:
      unint64_t result = 0x7562697274736964;
      break;
    case 3:
      unint64_t result = 0x75536E4F74696D65;
      break;
    case 4:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 5:
      unint64_t result = 0x6570616873;
      break;
    case 6:
      unint64_t result = 0x6E69646165727073;
      break;
    case 7:
      unint64_t result = 0x41746E65676E6174;
      break;
    case 8:
      unint64_t result = 0x46746E65676E6174;
      break;
    case 9:
      unint64_t result = 0x726F66736E617274;
      break;
    case 10:
      unint64_t result = 0x797469636F6C6576;
      break;
    case 11:
      unint64_t result = 0x65727574786574;
      break;
    case 12:
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0x5365727574786574;
      break;
    case 14:
      unint64_t result = 0x4265727574786574;
      break;
    case 15:
      unint64_t result = 0xD000000000000017;
      break;
    case 16:
      unint64_t result = 0x6E6F697373696D65;
      break;
    case 18:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B62C3B5C()
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  unint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  switch(v1 >> 62)
  {
    case 1uLL:
      if (v2 < v3 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_5;
    case 2uLL:
      if (v2 < *(void *)(v3 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_5;
    case 3uLL:
      goto LABEL_5;
    default:
      if (v2 >= BYTE6(v1))
      {
LABEL_5:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v4 = xmmword_1B6E50D30;
        *(unsigned char *)(v4 + 16) = 6;
        return swift_willThrow();
      }
      else
      {
LABEL_7:
        if (v1 >> 62)
        {
          uint64_t v6 = sub_1B6E30B98();
          return *(unsigned __int8 *)(v6 + v2 - sub_1B6E30BC8());
        }
        else
        {
          __int16 v7 = v0[2];
          char v8 = BYTE2(v3);
          char v9 = BYTE3(v3);
          char v10 = BYTE4(v3);
          char v11 = BYTE5(v3);
          char v12 = BYTE6(v3);
          char v13 = HIBYTE(v3);
          __int16 v14 = v1;
          char v15 = BYTE2(v1);
          char v16 = BYTE3(v1);
          char v17 = BYTE4(v1);
          char v18 = BYTE5(v1);
          return *((unsigned __int8 *)&v7 + v2);
        }
      }
  }
}

unint64_t sub_1B62C3CE8()
{
  return sub_1B62C3CF0(*v0);
}

unint64_t sub_1B62C3CF0(char a1)
{
  unint64_t result = 0x65727574786574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E69746867696CLL;
      break;
    case 2:
      unint64_t result = 0x72616C7563657073;
      break;
    case 3:
      unint64_t result = 0x646F4D646E656C62;
      break;
    case 4:
      unint64_t result = 0x66666F747563;
      break;
    case 5:
      unint64_t result = 0x65646F4D74726F73;
      break;
    case 6:
      unint64_t result = 0x647265764F78616DLL;
      break;
    case 7:
      unint64_t result = 0x6F6974616D696E61;
      break;
    case 8:
      unint64_t result = 0x7473694474666F73;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
    case 29:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0x5365727574786574;
      break;
    case 12:
      unint64_t result = 0x4265727574786574;
      break;
    case 13:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 14:
      unint64_t result = 0x736978417075;
      break;
    case 15:
      unint64_t result = 0x6570616873;
      break;
    case 16:
      unint64_t result = 0x4668637465727473;
      break;
    case 17:
      unint64_t result = 0x7275746176727563;
      break;
    case 18:
      unint64_t result = 0x73656E6B63696874;
      break;
    case 19:
      unint64_t result = 0xD000000000000018;
      break;
    case 20:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 21:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 22:
      unint64_t result = 0xD000000000000015;
      break;
    case 23:
      unint64_t result = 0xD000000000000019;
      break;
    case 24:
      unint64_t result = 0x6C656E6E616863;
      break;
    case 25:
      unint64_t result = 0xD000000000000013;
      break;
    case 26:
      unint64_t result = 0xD000000000000019;
      break;
    case 27:
      unint64_t result = 0xD000000000000011;
      break;
    case 28:
      unint64_t result = 0x6F436E6F62626972;
      break;
    case 30:
      unint64_t result = 0x656C69666F7270;
      break;
    case 31:
      unint64_t result = 0x4D65727574786574;
      break;
    case 32:
      unint64_t result = 0x65764F64696F7661;
      break;
    case 33:
      unint64_t result = 0x6143656C62616E65;
      break;
    case 34:
      unint64_t result = 0x6E69676542706163;
      break;
    case 35:
      unint64_t result = 0x6554646E45706163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B62C40F4(uint64_t a1)
{
  sub_1B62C4130(a1, &v4);
  if (!v1) {
    char v2 = v4;
  }
  return v2 & 1;
}

uint64_t sub_1B62C4130@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v2)
  {
    char v5 = sub_1B62C4198();
    uint64_t result = swift_release();
    *a2 = v5 & 1;
  }
  return result;
}

uint64_t sub_1B62C4198()
{
  unsigned __int8 v1 = sub_1B62C4258();
  if (!v0)
  {
    if ((v1 & 0xE0) != 0)
    {
      uint64_t v3 = v1 & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v4 = &unk_1F0F51F88;
      char v5 = 3;
    }
    else
    {
      if ((v1 & 0x10) != 0)
      {
        char v2 = v1 & 1;
        return v2 & 1;
      }
      sub_1B6B17984();
      swift_allocError();
      uint64_t v3 = 0;
      *(void *)uint64_t v4 = 16;
      char v5 = 4;
    }
    *(void *)(v4 + 8) = v3;
    *(unsigned char *)(v4 + 16) = v5;
    swift_willThrow();
  }
  return v2 & 1;
}

uint64_t sub_1B62C4258()
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  unint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  switch(v1 >> 62)
  {
    case 1uLL:
      if (v2 < v3 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_5;
    case 2uLL:
      if (v2 < *(void *)(v3 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_5;
    case 3uLL:
      goto LABEL_5;
    default:
      if (v2 >= BYTE6(v1))
      {
LABEL_5:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v4 = xmmword_1B6E50D30;
        *(unsigned char *)(v4 + 16) = 6;
        return swift_willThrow();
      }
      else
      {
LABEL_7:
        if (v1 >> 62)
        {
          uint64_t v6 = sub_1B6E30B98();
          uint64_t result = *(unsigned __int8 *)(v6 + v2 - sub_1B6E30BC8());
        }
        else
        {
          __int16 v7 = v0[2];
          char v8 = BYTE2(v3);
          char v9 = BYTE3(v3);
          char v10 = BYTE4(v3);
          char v11 = BYTE5(v3);
          char v12 = BYTE6(v3);
          char v13 = HIBYTE(v3);
          __int16 v14 = v1;
          char v15 = BYTE2(v1);
          char v16 = BYTE3(v1);
          char v17 = BYTE4(v1);
          char v18 = BYTE5(v1);
          uint64_t result = *((unsigned __int8 *)&v7 + v2);
        }
        ++v0[4];
      }
      return result;
  }
}

uint64_t sub_1B62C43FC()
{
  return sub_1B62C4404(*v0);
}

uint64_t sub_1B62C4404(char a1)
{
  uint64_t result = 0x746E456E77617073;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t v3 = 0x657461647075;
      goto LABEL_5;
    case 3:
      uint64_t v3 = 0x7265646E6572;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6E45000000000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
    case 12:
      uint64_t result = 0xD000000000000011;
      break;
    case 6:
      uint64_t result = 0xD000000000000018;
      break;
    case 7:
      uint64_t result = 0x6E756F42776F6873;
      break;
    case 8:
      uint64_t result = 0x6974616C756D6973;
      break;
    case 9:
      uint64_t result = 0x6E4F657461647075;
      break;
    case 10:
      uint64_t result = 0x754470756D726177;
      break;
    case 11:
      uint64_t result = 0x6C61636F4C7369;
      break;
    case 13:
      uint64_t result = 0xD000000000000017;
      break;
    case 14:
      uint64_t result = 0xD000000000000014;
      break;
    case 15:
      uint64_t result = 0x6974616C756D6973;
      break;
    case 16:
      uint64_t result = 0x6E77617073;
      break;
    case 17:
      uint64_t result = 0x696C616974696E69;
      break;
    case 18:
      uint64_t result = 0x657461647075;
      break;
    case 19:
      uint64_t result = 0x7265646E6572;
      break;
    case 20:
      uint64_t result = 6580597;
      break;
    case 21:
      uint64_t result = 1684366707;
      break;
    case 22:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for _BinaryKeyedDecodingContainer()
{
  return sub_1B62C36EC();
}

unint64_t sub_1B62C4694()
{
  return sub_1B62C469C(*v0);
}

unint64_t sub_1B62C469C(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    case 6:
      unint64_t result = 1953522533;
      break;
    case 7:
      unint64_t result = 0x7469706365;
      break;
    case 8:
      unint64_t result = 1953063792;
      break;
    case 9:
      unint64_t result = 0x7469636370;
      break;
    case 10:
      unint64_t result = 6385764;
      break;
    case 11:
      unint64_t result = 1634755685;
      break;
    case 12:
      unint64_t result = 0x7469647065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for _BinaryDecoder.KeyedStore()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B62C47C4(void *a1)
{
  sub_1B62BFA00(0, &qword_1EB980890, (uint64_t (*)(void))sub_1B6C7B2FC, (uint64_t)&type metadata for EntityCoder.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  char v8 = (char *)&v72 - v7;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v85 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1B62C14BC(a1, v10);
  uint64_t v12 = *(void *)(sub_1B62BF634(v10, v11, MEMORY[0x1E4FBC5C0]) + 24);
  swift_release();
  if (v12 > 1999)
  {
    uint64_t v13 = a1[4];
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      sub_1B62C14BC(&v81, v82);
      uint64_t v15 = sub_1B6E330F8();
      char v17 = v16;
      sub_1B62C550C((uint64_t)&v81, v82);
      unsigned int v14 = sub_1B6E33178();
      if ((v17 & 1) != 0 || v15 != 3)
      {
        int v73 = 1;
      }
      else
      {
        sub_1B62C550C((uint64_t)&v81, v82);
        int v73 = sub_1B6E33118();
      }
      sub_1B62C550C((uint64_t)&v81, v82);
      sub_1B6E330D8();
      sub_1B62C15C4(&v78, (uint64_t)v83);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v81);
      goto LABEL_12;
    }
LABEL_10:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return v13;
  }
  uint64_t v13 = a1[3];
  sub_1B62C14BC(a1, v13);
  sub_1B6C7B2FC();
  sub_1B6E33A48();
  if (v1) {
    goto LABEL_10;
  }
  LOBYTE(v81) = 0;
  unsigned int v14 = sub_1B6E32E28();
  LOBYTE(v78) = 1;
  sub_1B6E32CE8();
  sub_1B62C15C4(&v81, (uint64_t)v83);
  LOBYTE(v81) = 2;
  int v19 = sub_1B6E32D38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  int v73 = (v19 == 2) | v19;
LABEL_12:
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  sub_1B62C14BC(a1, v20);
  uint64_t v22 = *(void *)(sub_1B62BF634(v20, v21, MEMORY[0x1E4FBC5C0]) + 104);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_1B62C5AB0(v14), (v24 & 1) != 0))
  {
    uint64_t v25 = (unsigned int *)(*(void *)(v22 + 56) + 8 * v23);
    unsigned int v26 = *v25;
    uint64_t v27 = v25[1];
  }
  else
  {
    uint64_t v27 = 0;
    unsigned int v26 = -1;
  }
  swift_bridgeObjectRelease();
  if (v26 != -1 || v27)
  {
    uint64_t v28 = a1[3];
    uint64_t v29 = a1[4];
    sub_1B62C14BC(a1, v28);
    uint64_t v30 = (uint64_t (*)(void))MEMORY[0x1E4FBC5C0];
    uint64_t v31 = sub_1B62BF634(v28, v29, MEMORY[0x1E4FBC5C0]);
    uint64_t v13 = v26 | (unint64_t)(v27 << 32);
    *(void *)(v31 + 40) = v13;
    *(unsigned char *)(v31 + 48) = 0;
    swift_release();
    uint64_t v32 = a1[3];
    uint64_t v33 = a1[4];
    sub_1B62C14BC(a1, v32);
    *(void *)(sub_1B62BF634(v32, v33, v30) + 72) = v9;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B62C14BC(v83, v84);
    uint64_t v34 = sub_1B6E330F8();
    if ((v35 & 1) == 0)
    {
      for (uint64_t i = v34; i; --i)
      {
        sub_1B62C550C((uint64_t)v83, v84);
        sub_1B62C56A0();
        sub_1B6E33168();
        sub_1B62C15C4(&v77, (uint64_t)&v78);
        sub_1B62C5560(0, (unint64_t *)&qword_1EB97FFF0);
        sub_1B62C5560(0, (unint64_t *)&qword_1EB97EAE0);
        swift_dynamicCast();
        sub_1B62C15C4(&v76, (uint64_t)&v81);
        sub_1B62C1550((uint64_t)&v81, (uint64_t)&v78);
        uint64_t v43 = v85;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v43 = sub_1B62C5898(0, v43[2] + 1, 1, v43);
          uint64_t v85 = v43;
        }
        unint64_t v45 = v43[2];
        unint64_t v44 = v43[3];
        if (v45 >= v44 >> 1) {
          uint64_t v85 = sub_1B62C5898(v44 > 1, v45 + 1, 1, v43);
        }
        uint64_t v37 = v79;
        uint64_t v38 = v80;
        uint64_t v39 = sub_1B62C550C((uint64_t)&v78, v79);
        MEMORY[0x1F4188790](v39, v39);
        uint64_t v41 = (char *)&v72 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v42 + 16))(v41);
        sub_1B62C5608(v45, (uint64_t)v41, (uint64_t *)&v85, v37, v38);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v78);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v81);
      }
      uint64_t v46 = a1[3];
      uint64_t v47 = a1[4];
      sub_1B62C14BC(a1, v46);
      uint64_t v48 = *(void *)(sub_1B62BF634(v46, v47, MEMORY[0x1E4FBC5C0]) + 72);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v72 = v48;
      uint64_t v75 = *(void *)(v48 + 16);
      if (v75)
      {
        uint64_t v49 = 0;
        uint64_t v74 = v72 + 32;
        do
        {
          sub_1B62C1550(v74 + 40 * v49, (uint64_t)&v81);
          sub_1B62C14BC(&v81, v82);
          uint64_t DynamicType = swift_getDynamicType();
          uint64_t v51 = v85;
          uint64_t v52 = v85[2];
          if (v52)
          {
            uint64_t v53 = DynamicType;
            uint64_t v54 = (uint64_t)(v85 + 4);
            swift_bridgeObjectRetain();
            do
            {
              sub_1B62C1550(v54, (uint64_t)&v78);
              sub_1B62C14BC(&v78, v79);
              uint64_t v55 = swift_getDynamicType();
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v78);
              if (v55 == v53)
              {
                swift_bridgeObjectRelease();
                goto LABEL_30;
              }
              v54 += 40;
              --v52;
            }
            while (v52);
            swift_bridgeObjectRelease();
          }
          sub_1B62C1550((uint64_t)&v81, (uint64_t)&v78);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v51 = sub_1B62C5898(0, v51[2] + 1, 1, v51);
            uint64_t v85 = v51;
          }
          unint64_t v57 = v51[2];
          unint64_t v56 = v51[3];
          if (v57 >= v56 >> 1) {
            uint64_t v85 = sub_1B62C5898(v56 > 1, v57 + 1, 1, v51);
          }
          uint64_t v58 = v79;
          uint64_t v59 = v80;
          uint64_t v60 = sub_1B62C550C((uint64_t)&v78, v79);
          MEMORY[0x1F4188790](v60, v60);
          uint64_t v62 = (char *)&v72 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v63 + 16))(v62);
          sub_1B62C5608(v57, (uint64_t)v62, (uint64_t *)&v85, v58, v59);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v78);
LABEL_30:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v81);
          ++v49;
        }
        while (v49 != v75);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v64 = a1[3];
    uint64_t v65 = a1[4];
    sub_1B62C14BC(a1, v64);
    uint64_t v66 = sub_1B62BF634(v64, v65, MEMORY[0x1E4FBC5C0]);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = *(void *)(v66 + 72);
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_1B68EAD48(0, *(void *)(v68 + 16));
      swift_release();
    }
    else
    {
      *(void *)(v66 + 72) = sub_1B62C5BA0(0, *(void *)(v68 + 24) >> 1);
      swift_release();
      swift_bridgeObjectRelease();
    }
    uint64_t v69 = a1[3];
    uint64_t v70 = a1[4];
    sub_1B62C14BC(a1, v69);
    uint64_t v71 = sub_1B62BF634(v69, v70, MEMORY[0x1E4FBC5C0]);
    *(void *)(v71 + 40) = 0;
    *(unsigned char *)(v71 + 48) = 1;
    swift_release();
  }
  else
  {
    uint64_t v13 = 0xFFFFFFFFLL;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v83);
  swift_bridgeObjectRetain();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B62C550C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1B62C5560(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B62C55B0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t destroy for RenderGraph.RenderTargetDesc()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62C5608(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_1B62C12C4((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1B62C15C4(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_1B62C56A0()
{
  unint64_t result = qword_1EB97E890;
  if (!qword_1EB97E890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97E890);
  }
  return result;
}

__n128 initializeWithCopy for WorldTransform(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *sub_1B62C5708(char a1, uint64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    uint64_t v10 = v9 >> 1;
    int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (v11 <= a2) {
      int64_t v11 = a2;
    }
    if (v10 < a2) {
      a2 = v11;
    }
    else {
      a2 = v10;
    }
  }
  uint64_t v12 = a4[2];
  if (a2 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = a2;
  }
  if (!v13)
  {
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    char v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B62C590C(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
    goto LABEL_21;
  }
  sub_1B62C5838(0, a5, a6);
  uint64_t v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  void v14[2] = v12;
  v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  char v16 = v14 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
    memmove(v16, a4 + 4, 40 * v12);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1B62C5838(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B62C55B0(255, a3);
    unint64_t v4 = sub_1B6E330A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_1B62C5898(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B62C5708(a1, a2, a3, a4, &qword_1EB980B98, (unint64_t *)&qword_1EB97EAE0);
}

__n128 initializeWithCopy for EmitterShape(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

__n128 _s15RelationStorageVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1B62C590C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  if (a2 - a1 < 0
    || ((unint64_t v5 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v5) ? (v6 = a4 + 32 + 40 * a2 > a3) : (v6 = 0), v6))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62C55B0(0, a5);
    swift_arrayInitWithCopy();
    return v5;
  }
  return result;
}

void *sub_1B62C5A14(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  if (a2 <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = a2;
  }
  if (!v6) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B6786100(0, a3, a4, a5, a6);
  long long v8 = (void *)swift_allocObject();
  size_t v9 = j__malloc_size(v8);
  _OWORD v8[2] = a1;
  v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
  return v8;
}

__n128 initializeBufferWithCopyOfBuffer for UnsafeFixedBitSet(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

unint64_t sub_1B62C5AB0(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x1BA9B5560](*(void *)(v1 + 40), a1, 4);

  return sub_1B62C5AF8(a1, v3);
}

unint64_t sub_1B62C5AF8(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

__n128 initializeWithCopy for RotateAction(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *sub_1B62C5BA0(uint64_t a1, uint64_t a2)
{
  return sub_1B62C5A14(a1, a2, &qword_1EB980B98, (uint64_t)&qword_1EB97EAE0, (uint64_t)&protocol descriptor for EntityComponent, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B62C5560);
}

uint64_t sub_1B62C5BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *), uint64_t a6, unint64_t *a7, uint64_t a8, void (*a9)(_OWORD *, unsigned char *), unint64_t *a10)
{
  uint64_t result = *(void *)(*(void *)(a2 + 80) + 8 * (SHIDWORD(a3) >> 16) + 32);
  uint64_t v12 = *(void *)(*(void *)(result + 16) + 32);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v34 = v12 + 32;
    uint64_t v15 = a3 << 16 >> 48;
    swift_retain();
    swift_retain();
    uint64_t v16 = 0;
    while (1)
    {
      uint64_t v17 = *(void *)(a1 + 48);
      uint64_t v18 = *(void *)(v17 + 16);
      if (!v18) {
        break;
      }
      long long v19 = *(_OWORD *)(v34 + 16 * v16++);
      uint64_t v20 = v19;
      uint64_t v21 = v17 + 56;
      while (*(void *)(v21 - 24) != (void)v19)
      {
        v21 += 40;
        if (!--v18) {
          goto LABEL_16;
        }
      }
      uint64_t v24 = v21 - 8;
      uint64_t v23 = *(void *)(v21 - 8);
      uint64_t v22 = *(void *)(v24 + 8);
      if (v23 <= 1) {
        uint64_t v23 = 1;
      }
      uint64_t v25 = *(void *)(a1 + 128) + v22 + v23 * v15;
      long long v33 = v19;
      unsigned int v26 = sub_1B62C12C4(v32);
      sub_1B62C5E18(v25, v20, (uint64_t)v26);
      sub_1B62C1550((uint64_t)v32, (uint64_t)v30);
      sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
      sub_1B62C55B0(0, a7);
      if (swift_dynamicCast())
      {
        a9(v28, v31);
        a5(v31);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
      }
      else
      {
        uint64_t v29 = 0;
        memset(v28, 0, sizeof(v28));
        sub_1B62C5E50((uint64_t)v28, a10, a7);
      }
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v32);
      if (v16 == v13)
      {
        swift_release();
        return swift_release();
      }
    }
LABEL_16:
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62C5E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_1B62C5E50(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1B62C5FD4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B62C5EB0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1B6A6AA3C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B62C5F0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1B62C5F6C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62C5560(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1B62C5FD4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B62C55B0(255, a3);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B62C6034(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62C5560(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1B62C609C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62C6100(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62C55B0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t initializeWithCopy for GraphEntityComponentPropertyReferences(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for EmitterDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)(a2 + 41);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 74) = *(_WORD *)(a2 + 74);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B62C62C4()
{
  if (*v0) {
    return 0x657A6953666C6168;
  }
  else {
    return 0x7265746E6563;
  }
}

uint64_t sub_1B62C62FC()
{
  if (*v0) {
    return 0x73746567726174;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_1B62C6334(void *a1)
{
  return sub_1B62C6340(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B62C6340(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1B62C14BC(a1, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(a3, a4, v6, v7);
  sub_1B62C63D0(v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62C63D0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = *v1;
    do
    {
      uint64_t v6 = *((void *)v5 + 2);
      if (v6)
      {
        uint64_t v7 = 32;
        uint64_t v8 = *((void *)v5 + 2);
        while (*(void *)&v5[v7] != *(void *)(v3 + 16 * v4))
        {
          v7 += 16;
          if (!--v8) {
            goto LABEL_9;
          }
        }
      }
      else
      {
LABEL_9:
        long long v13 = *(_OWORD *)(v3 + 16 * v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1B62D1B88(0, v6 + 1, 1, v5);
        }
        unint64_t v10 = *((void *)v5 + 2);
        unint64_t v9 = *((void *)v5 + 3);
        long long v11 = v13;
        if (v10 >= v9 >> 1)
        {
          uint64_t v12 = sub_1B62D1B88(v9 > 1, v10 + 1, 1, v5);
          long long v11 = v13;
          uint64_t v5 = v12;
        }
        *((void *)v5 + 2) = v10 + 1;
        *(_OWORD *)&v5[16 * v10 + 32] = v11;
        *uint64_t v1 = v5;
      }
      ++v4;
    }
    while (v4 != v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B62C650C()
{
  if (*v0) {
    return 0x7A696D6F646E6172;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_1B62C6548(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = 8 * *(void *)(v1[1] + 16);
  swift_retain();
  *uint64_t v1 = ecs_stack_allocator_allocate(v3, v4, 8);
  uint64_t v5 = OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  uint64_t v6 = type metadata accessor for ScriptingConfiguration();
  uint64_t v7 = v1[1];
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_45:
    swift_release();
    return 1;
  }
  uint64_t v58 = *(void *)(v2 + v5 + *(int *)(v6 + 36));
  unint64_t v9 = (void *)v1[5];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v9 = sub_1B62CADAC(v9);
  }
  uint64_t v10 = 0;
  v1[5] = v9;
  long long v11 = (char *)(v7 + 40);
  uint64_t v12 = 4;
  uint64_t v62 = v1;
  uint64_t v59 = v8;
  while (1)
  {
    unint64_t v16 = *((void *)v11 - 1);
    if ((v16 >> 60) - 9 < 2) {
      goto LABEL_7;
    }
    char v17 = *v11;
    uint64_t v63 = (void *)v1[5];
    uint64_t v18 = (uint64_t (**)(uint64_t))&v63[v12];
    uint64_t v19 = v63[v12 + 3];
    unint64_t v67 = *((void *)v11 - 1);
    if ((~LODWORD(v63[v12 + 3]) & 0xFCLL) != 0)
    {
      uint64_t v14 = *v18;
      uint64_t v20 = (uint64_t)v18[1];
      uint64_t v21 = (uint64_t)v18[2];
      uint64_t v22 = (uint64_t)v18[4];
      char v23 = v19 & 0x3F;
      uint64_t v65 = v21;
      if (v19 >> 6 != 1) {
        char v23 = v21;
      }
      char v24 = v19 >> 6 ? v23 : v63[v12 + 3];
      if (v24 && (v24 == 1 || v22 >= v58))
      {
        sub_1B62C6AA8(v16);
        uint64_t v15 = v65;
        sub_1B62C7CE8((uint64_t)v14, v20, v65, v19);
        goto LABEL_24;
      }
    }
    uint64_t v25 = v1;
    uint64_t v26 = v1[2];
    char v27 = *((unsigned char *)v25 + 24);
    unint64_t v28 = *(void *)((char *)v25 + 28);
    char v29 = *((unsigned char *)v25 + 36);
    sub_1B62C6AA8(v16);
    sub_1B62C6AA8(v16);
    uint64_t v14 = (uint64_t (*)(uint64_t))sub_1B62C6B10(v16, v17, v26, v27, v28, v29, a1, 0);
    uint64_t v20 = v30;
    uint64_t v15 = v31;
    LOBYTE(v19) = v32;
    unsigned int v33 = v32;
    sub_1B62C6A70(v16);
    if (v33 > 0xFB) {
      break;
    }
    if (!(v19 >> 6))
    {
      char v34 = v19;
      uint64_t v1 = v62;
      if (!(_BYTE)v19)
      {
        LOBYTE(v19) = 0;
        goto LABEL_39;
      }
LABEL_27:
      if (v34)
      {
        if (v34 == 1) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v58;
        }
      }
      else
      {
        uint64_t v36 = -1;
      }
      sub_1B62C7CB8((uint64_t)v14, v20, v15, v19);
      sub_1B62C7CB8((uint64_t)v14, v20, v15, v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v63 = sub_1B62CADAC(v63);
      }
      uint64_t v37 = (uint64_t (**)(uint64_t))&v63[v12];
      uint64_t v38 = v63[v12];
      uint64_t v39 = v63[v12 + 1];
      uint64_t v40 = v63[v12 + 2];
      uint64_t v41 = v63[v12 + 3];
      *uint64_t v37 = v14;
      v37[1] = (uint64_t (*)(uint64_t))v20;
      v37[2] = (uint64_t (*)(uint64_t))v15;
      v37[3] = (uint64_t (*)(uint64_t))v19;
      void v37[4] = (uint64_t (*)(uint64_t))v36;
      sub_1B66456E4(v38, v39, v40, v41);
      sub_1B62CCEE8((uint64_t)v14, v20, v15, v19);
      v1[5] = v63;
      int v35 = v19 >> 6;
      if (!(v19 >> 6)) {
        goto LABEL_39;
      }
      goto LABEL_35;
    }
    uint64_t v1 = v62;
    if (v19 >> 6 == 1) {
      goto LABEL_39;
    }
    if ((_BYTE)v15)
    {
      char v34 = v15;
      goto LABEL_27;
    }
LABEL_24:
    int v35 = v19 >> 6;
    if (!(v19 >> 6)) {
      goto LABEL_39;
    }
LABEL_35:
    if (v35 != 1)
    {
      swift_retain();
      uint64_t v1 = v62;
      uint64_t v42 = v14(a1);
      uint64_t v44 = v43;
      uint64_t v45 = v20;
      uint64_t v47 = v46;
      uint64_t v64 = v45;
      sub_1B62C6AE0((uint64_t)v14, v45, v15, v19);
      if (v44) {
        goto LABEL_40;
      }
      goto LABEL_6;
    }
LABEL_39:
    sub_1B62C6A60(v20);
    uint64_t v42 = (uint64_t)v14;
    uint64_t v64 = v20;
    uint64_t v44 = v20;
    uint64_t v47 = v15;
    if (v44)
    {
LABEL_40:
      uint64_t v66 = v15;
      uint64_t v61 = v14;
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v44;
      *(void *)(v48 + 24) = v47;
      uint64_t v49 = (void *)v1[6];
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v49 = sub_1B62CACA8(0, v49[2] + 1, 1, v49);
      }
      unint64_t v51 = v49[2];
      unint64_t v50 = v49[3];
      if (v51 >= v50 >> 1) {
        uint64_t v49 = sub_1B62CACA8(v50 > 1, v51 + 1, 1, v49);
      }
      v49[2] = v51 + 1;
      long long v13 = &v49[2 * v51];
      void v13[4] = sub_1B6377A84;
      v13[5] = v48;
      uint64_t v14 = v61;
      uint64_t v1 = v62;
      v62[6] = v49;
      uint64_t v15 = v66;
    }
LABEL_6:
    *(void *)(*v1 + 8 * v10) = v42;
    sub_1B62C6AE0((uint64_t)v14, v64, v15, v19);
    sub_1B62C6A50(v44);
    sub_1B62C6A70(v67);
    uint64_t v8 = v59;
LABEL_7:
    ++v10;
    v11 += 32;
    v12 += 5;
    if (v8 == v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
  }
  swift_bridgeObjectRelease();
  sub_1B62C6A70(v16);
  uint64_t v53 = v62[6];
  uint64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = v53 + 40;
    do
    {
      unint64_t v56 = *(void (**)(uint64_t))(v55 - 8);
      uint64_t v57 = swift_retain();
      v56(v57);
      swift_release();
      v55 += 16;
      --v54;
    }
    while (v54);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return 0;
}

uint64_t sub_1B62C6A50(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62C6A60(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1B62C6A70(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B62C6AA8(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B62C6AE0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unsigned int v4 = a4 >> 6;
  if (v4 == 2) {
    return swift_release();
  }
  if (v4 <= 1) {
    return sub_1B62C6A50(a2);
  }
  return result;
}

uint64_t sub_1B62C6B10(unint64_t a1, char a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  char v9 = a4 & 1;
  int v10 = a6 & 1;
  uint64_t v13 = 0;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x48);
      sub_1B664D9F0((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v158);
      if (a7)
      {
        uint64_t v18 = MEMORY[0x1BA9B8670](&v158);
        if (v18)
        {
          uint64_t v19 = v18;
          uint64_t v20 = *((void *)&v158 + 1);
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v13 = (uint64_t)sub_1B6A9566C(v19, v20, v15, v16, a2, a7);
          swift_release();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_1B66490B8((uint64_t)&v158);
          return v13;
        }
      }
      sub_1B66490B8((uint64_t)&v158);
      return 0;
    case 2uLL:
      sub_1B664D9F0((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v158);
      uint64_t v58 = MEMORY[0x1BA9B8670](&v158);
      sub_1B66490B8((uint64_t)&v158);
      if (!v58) {
        return 0;
      }
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      swift_unknownObjectRelease();
      if (!v13) {
        return 0;
      }
      return v13;
    case 3uLL:
      unint64_t v76 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v77 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      long long v158 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(_OWORD *)char v159 = v77;
      *(_OWORD *)&v159[12] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x34);
      if (!a7) {
        return 0;
      }
      *(_OWORD *)uint64_t v151 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      sub_1B62C7C20((uint64_t)v151);
      swift_retain();
      uint64_t v13 = (uint64_t)sub_1B62C7CFC(v76, &v158, a2, a3, v9, a7);
      sub_1B62C7BF4((uint64_t)v151);
      swift_release();
      return v13;
    case 4uLL:
      uint64_t v72 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v73 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      char v74 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x44);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v13 = (uint64_t)sub_1B62CF8B4(v72, v73, v74, a5, v10, a7);
      swift_release();
      swift_bridgeObjectRelease();
      return v13;
    case 5uLL:
      return *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    case 6uLL:
      if (!a7) {
        return 0;
      }
      uint64_t v55 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v54 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B633AF88();
      uint64_t v56 = sub_1B6E325F8();
      *(void *)char v144 = v56;
      *(void *)&long long v158 = v55;
      *((void *)&v158 + 1) = v54;
      strcpy(v151, "$emitter.");
      *(_WORD *)&v151[10] = 0;
      *(_DWORD *)&v151[12] = -385875968;
      sub_1B666BDC4();
      sub_1B666BE18();
      if ((sub_1B6E31618() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        if (v10)
        {
          uint64_t v86 = 0;
          LOBYTE(v85) = 1;
          uint64_t v83 = v8;
        }
        else
        {
          uint64_t v83 = v8;
          unint64_t v84 = sub_1B69DE4C4(a5);
          uint64_t v85 = HIDWORD(v84) & 1;
          uint64_t v86 = v84;
        }
        uint64_t v123 = *(void *)(*(void *)(v83 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                         + 8 * *(void *)thread_worker_index()
                         + 8);
        uint64_t v101 = *(void *)(v123 + 32);
        ecs_stack_allocator_push_snapshot(v101);
        LOBYTE(v158) = v85;
        sub_1B6A04C28(v55, v54, v83, v86 | ((unint64_t)v85 << 32), (uint64_t)v151);
        uint64_t v102 = *(void *)&v151[8];
        a5 = *(void *)v151;
        uint64_t v103 = *(void *)&v151[16];
        uint64_t v124 = *(void *)&v151[24];
        uint64_t v105 = *((void *)&v152 + 1);
        uint64_t v104 = v152;
        unsigned int v106 = v153;
        sub_1B62D03E8((uint64_t)v151, (uint64_t)&v158, &qword_1E9DD4DA0, (uint64_t (*)(uint64_t))sub_1B688A9F8);
        if (!*(void *)v159)
        {
          uint64_t v111 = *(void *)(v83 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          v138.i64[0] = 0xD000000000000017;
          v138.i64[1] = 0x80000001B6F3B020;
          sub_1B6E31948();
          int64x2_t v112 = v138;
          uint64_t v113 = sub_1B6E32148();
          v138.i64[0] = 0;
          (*(void (**)(uint64_t, int64x2_t *, uint64_t, uint64_t))(*(void *)v111 + 88))(v113, &v138, v112.i64[0], v112.i64[1]);
          swift_release();
          swift_bridgeObjectRelease();
          ecs_stack_allocator_pop_snapshot(*(void *)(v123 + 32));
          return 0;
        }
        ecs_stack_allocator_pop_snapshot(v101);
        char v107 = v106 & 1;
        unsigned int v108 = HIWORD(v106);
        uint64_t v109 = v104;
        goto LABEL_81;
      }
      if (!v10)
      {
        uint64_t v57 = *(void *)(v56 + 16);
        if (v57) {
          swift_bridgeObjectRetain();
        }
        sub_1B68E95BC(0, v57 != 0);
        swift_bridgeObjectRelease();
        *(void *)&long long v158 = *(void *)v144;
        sub_1B6A97C0C(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1B6646D3C();
        uint64_t v119 = sub_1B6E31638();
        uint64_t v121 = v120;
        swift_bridgeObjectRelease();
        sub_1B6A04940(v119, v121, (uint64_t)v151);
        sub_1B6381688((uint64_t)v151, (uint64_t)&v158, (unint64_t *)&unk_1EB97E6F0, (uint64_t)&type metadata for ScriptKeyPath);
        uint64_t v103 = *((void *)&v158 + 1);
        if (*((void *)&v158 + 1))
        {
          uint64_t v102 = v158;
          uint64_t v109 = *(void *)&v159[8];
          uint64_t v124 = *(void *)v159;
          uint64_t v105 = *(void *)&v159[16];
          char v150 = v159[24];
          LOWORD(v108) = *(_WORD *)&v159[26];
          swift_bridgeObjectRelease();
          char v107 = v150;
LABEL_81:
          v138.i64[0] = v102;
          v138.i64[1] = v103;
          uint64_t v139 = v124;
          uint64_t v140 = v109;
          uint64_t v141 = v105;
          char v142 = v107;
          __int16 v143 = v108;
          uint64_t v13 = (uint64_t)sub_1B62C7CFC(a5, &v138, a2, a3, v9, a7);
          swift_release();
          swift_bridgeObjectRelease();
          return v13;
        }
      }
      goto LABEL_82;
    case 7uLL:
      if (!a7) {
        return 0;
      }
      unint64_t v45 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v46 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      int v47 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x21);
      char v48 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x22);
      char v49 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x23);
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
      {
        unint64_t v50 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        if (v46 != 1 || (v51 = a7, LOBYTE(v158) = 1, uint64_t v52 = sub_1B6A041D8(v45, v50, v8, 0x100000000), (v53 & 1) != 0))
        {
          *(void *)&long long v158 = 0;
          *((void *)&v158 + 1) = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          *(_OWORD *)uint64_t v151 = v158;
          sub_1B6E31948();
          *(void *)&long long v158 = v45;
          *((void *)&v158 + 1) = v50;
          v159[0] = v46;
          sub_1B6E32B18();
          uint64_t v82 = *(void *)&v151[8];
          uint64_t v81 = *(void *)v151;
          goto LABEL_72;
        }
        unint64_t v45 = v52;
      }
      else
      {
        uint64_t v51 = a7;
      }
      sub_1B6CEE8E8(v45, &v138);
      sub_1B6381688((uint64_t)&v138, (uint64_t)v151, (unint64_t *)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime);
      if (v157)
      {
        *(_OWORD *)&v159[48] = v154;
        long long v160 = v155;
        long long v161 = v156;
        uint64_t v162 = v157;
        long long v158 = *(_OWORD *)v151;
        *(_OWORD *)char v159 = *(_OWORD *)&v151[16];
        *(_OWORD *)&v159[16] = v152;
        *(_OWORD *)&v159[32] = v153;
        switch(v47)
        {
          case 2:
            uint64_t v13 = (uint64_t)ecs_stack_allocator_allocate(*(void *)(v51 + 32), 96, 16);
            sub_1B6A95B10(&v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6A95AC8);
            sub_1B6AFF208((uint64_t)&v158, v48, v49, (uint64_t)v144);
            long long v133 = *(_OWORD *)&v144[16];
            long long v137 = *(_OWORD *)v144;
            long long v128 = v146;
            long long v131 = v145;
            long long v125 = v147;
            uint64_t v114 = v148;
            uint64_t v115 = v149;
            sub_1B6A95B10(&v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6657748);
            *(_OWORD *)uint64_t v13 = v137;
            *(_OWORD *)(v13 + 16) = v133;
            *(_OWORD *)(v13 + 32) = v131;
            *(_OWORD *)(v13 + 48) = v128;
            *(_OWORD *)(v13 + 64) = v125;
            *(void *)(v13 + 80) = v114;
            *(void *)(v13 + 88) = v115;
            goto LABEL_77;
          case 1:
            uint64_t v13 = (uint64_t)ecs_stack_allocator_allocate(*(void *)(v51 + 32), 56, 8);
            sub_1B6A95B10(&v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6A95AC8);
            sub_1B6AFEFC8((uint64_t)&v158, v48, v49, (uint64_t)v144);
            long long v136 = *(_OWORD *)&v144[8];
            uint64_t v87 = *(void *)v144;
            uint64_t v88 = *(void *)&v144[24];
            long long v89 = v145;
            uint64_t v90 = v146;
            sub_1B6A95B10(&v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6657748);
            *(void *)uint64_t v13 = v87;
            *(_OWORD *)(v13 + 8) = v136;
            *(void *)(v13 + 24) = v88;
            *(_OWORD *)(v13 + 32) = v89;
            *(void *)(v13 + 48) = v90;
LABEL_77:
            sub_1B6A95B10(&v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6657748);
            return v13;
          case 0:
            uint64_t v13 = (uint64_t)ecs_stack_allocator_allocate(*(void *)(v51 + 32), 40, 8);
            sub_1B6A95B10(&v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6A95AC8);
            sub_1B6AFF0F4((uint64_t)&v158, v48, v49, (uint64_t)v144);
            long long v116 = *(_OWORD *)v144;
            long long v117 = *(_OWORD *)&v144[16];
            int v118 = v145;
            sub_1B6A95B10(&v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6657748);
            *(_OWORD *)uint64_t v13 = v116;
            *(_OWORD *)(v13 + 16) = v117;
            *(_DWORD *)(v13 + 32) = v118;
            goto LABEL_77;
        }
        *(void *)char v144 = 0;
        *(void *)&v144[8] = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        char v150 = v47;
        sub_1B6E32B18();
        while (1)
        {
LABEL_88:
          sub_1B6E32BE8();
          __break(1u);
        }
      }
      *(void *)&long long v158 = 0;
      *((void *)&v158 + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v158 = 0xD000000000000023;
      *((void *)&v158 + 1) = 0x80000001B6F45A30;
      sub_1B681F698();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v82 = *((void *)&v158 + 1);
      uint64_t v81 = v158;
LABEL_72:
      uint64_t v110 = sub_1B6E32148();
      uint64_t v13 = 1;
      *(void *)&long long v158 = 1;
      sub_1B6B33B70(v110, v81, v82, (uint64_t *)&v158);
      swift_release();
      swift_bridgeObjectRelease();
      return v13;
    case 8uLL:
      if (!a7) {
        return 0;
      }
      uint64_t v66 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v67 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      if (!*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
      {
        uint64_t v68 = a7;
        a5 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        goto LABEL_59;
      }
      uint64_t v68 = a7;
      unint64_t v69 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (v67 == 1)
      {
        LOBYTE(v158) = 1;
        uint64_t v70 = sub_1B6A041D8(v66, v69, v8, 0x100000000);
        if ((v71 & 1) == 0)
        {
          a5 = v70;
LABEL_59:
          uint64_t v91 = sub_1B6A94C38(a5, v8);
          uint64_t v92 = *(void *)(v68 + 32);
          uint64_t v13 = (uint64_t)ecs_stack_allocator_allocate(v92, 32, 8);
          *(void *)uint64_t v13 = v8;
          *(void *)(v13 + 8) = v92;
          *(void *)(v13 + 16) = a5;
          *(void *)(v13 + 24) = v91;
          return v13;
        }
      }
      else if ((a6 & 1) == 0)
      {
        goto LABEL_59;
      }
      *(void *)&long long v158 = 0;
      *((void *)&v158 + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      *(_OWORD *)uint64_t v151 = v158;
      sub_1B6E31948();
      *((void *)&v158 + 1) = v69;
      v159[0] = v67;
      sub_1B6E32B18();
      uint64_t v93 = sub_1B6E32148();
      *(void *)&long long v158 = 1;
      sub_1B6B33B70(v93, *(uint64_t *)v151, *(uint64_t *)&v151[8], (uint64_t *)&v158);
      swift_release();
LABEL_82:
      swift_bridgeObjectRelease();
      return 0;
    case 9uLL:
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v32 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v158 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(_OWORD *)char v159 = v32;
      *(_OWORD *)&v159[12] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x2C);
      if (!a8 || !a7) {
        return 0;
      }
      long long v132 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v33 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v34 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      int v35 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      int v36 = *(unsigned __int16 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x3A);
      int64x2_t v138 = *(int64x2_t *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B62C7C20((uint64_t)&v138);
      swift_retain();
      swift_retain();
      if (sub_1B62CD05C())
      {
        uint64_t v37 = *(void *)&v159[8];
        sub_1B62CB508(*(uint64_t *)&v159[8], *(uint64_t *)&v159[8]);
        uint64_t v129 = v38;
        uint64_t v126 = v39;
        uint64_t v40 = sub_1B6E32738();
        uint64_t v41 = swift_conformsToProtocol2();
        if (v41)
        {
          uint64_t v42 = *(void *)(v41 + 8);
          *(_OWORD *)&v151[8] = v132;
          *(void *)uint64_t v151 = v31;
          *(void *)&v151[24] = v33;
          *(void *)&long long v152 = v34;
          DWORD2(v152) = v35 | (v36 << 16);
          sub_1B62C7C20((uint64_t)&v138);
          swift_retain();
          uint64_t v13 = sub_1B62CDCF0(v40, v42, v37, v126, v129, (uint64_t *)v151, 0, 0, 0, a7);
          int v44 = v43;
          sub_1B62C7BF4((uint64_t)&v138);
          swift_release();
          swift_release();
          if (v44 != 2)
          {
            sub_1B62C7BF4((uint64_t)&v138);
            swift_release();
            return v13;
          }
          goto LABEL_66;
        }
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      uint64_t v94 = *(void *)&v159[16];
      int v95 = v159[24];
      uint64_t v96 = sub_1B6E32738();
      uint64_t v97 = swift_conformsToProtocol2();
      if (!v97) {
        goto LABEL_87;
      }
      uint64_t v98 = sub_1B62C9024(v96, v97, 0, 0, 0, a7);
      char v100 = v99;
      swift_release();
      if ((v100 & 1) == 0)
      {
        if (v95) {
          uint64_t v94 = 0;
        }
        sub_1B62C7BF4((uint64_t)&v138);
        swift_release();
        return v98 + v94;
      }
LABEL_66:
      sub_1B62C7BF4((uint64_t)&v138);
      swift_release();
      return 0;
    case 0xAuLL:
      if (!a8) {
        return 0;
      }
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v59 = sub_1B6E32738();
      if (swift_conformsToProtocol2())
      {
        uint64_t v60 = *(void *)(a8 + 40);
        uint64_t v61 = *(void *)(v60 + 128);
        uint64_t v62 = *(void *)(v60 + 168);
        char v63 = *(unsigned char *)(v60 + 176);
        uint64_t v64 = *(void *)(v60 + 184);
        long long v65 = *(_OWORD *)(v60 + 112);
        long long v158 = *(_OWORD *)(v60 + 96);
        *(_OWORD *)char v159 = v65;
        *(_OWORD *)&v159[24] = *(_OWORD *)(v60 + 136);
        *(_OWORD *)&v159[40] = *(_OWORD *)(v60 + 152);
        *(void *)&v159[16] = v61;
        *(void *)&v159[56] = v62;
        LOBYTE(v160) = v63;
        *((void *)&v160 + 1) = v64;
        uint64_t v13 = sub_1B62CDBDC(v59);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      __break(1u);
      goto LABEL_86;
    case 0xBuLL:
      if (!a7) {
        return 0;
      }
      unint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = (uint64_t)ecs_stack_allocator_allocate(*(void *)(a7 + 32), 4, 4);
      uint64_t v22 = sub_1B62CACC8(v21);
      if ((v22 & 0xFF00000000) == 0x200000000) {
        int v23 = 0;
      }
      else {
        int v23 = v22;
      }
      *(_DWORD *)uint64_t v13 = v23;
      return v13;
    case 0xCuLL:
      if (!a7) {
        return 0;
      }
      uint64_t v24 = *(void *)(a7 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_clock;
      int v25 = *(_DWORD *)(v24 + 8);
      int v26 = *(_DWORD *)(v24 + 16);
      uint64_t v28 = sub_1B62CACC8(*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10));
      if ((v28 & 0xFF00000000) == 0x200000000) {
        int v29 = 0;
      }
      else {
        int v29 = v28;
      }
      int v30 = v26 + v25 + v29;
      uint64_t v13 = (uint64_t)ecs_stack_allocator_allocate(*(void *)(a7 + 32), 4, 4);
      *(_DWORD *)uint64_t v13 = v30;
      return v13;
    case 0xEuLL:
      return v13;
    case 0xFuLL:
      if (a1 != 0xF000000000000000) {
        goto LABEL_88;
      }
      return 0;
    default:
      goto LABEL_88;
  }
}

uint64_t sub_1B62C7BF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62C7C20(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for CachedLocationMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_1B62C7CB8(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_1B62C7CB8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unsigned int v4 = a4 >> 6;
  if (v4 == 2) {
    return swift_retain();
  }
  if (v4 <= 1) {
    return sub_1B62C6A60(a2);
  }
  return result;
}

uint64_t sub_1B62C7CE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if ((~a4 & 0xFC) != 0) {
    return sub_1B62C7CB8(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t (*sub_1B62C7CFC(unint64_t a1, void *a2, char a3, uint64_t a4, char a5, uint64_t a6))(uint64_t a1)
{
  uint64_t v7 = v6;
  uint64_t v8 = a6;
  char v11 = a3;
  unint64_t v69 = HIDWORD(a1);
  if (a5)
  {
    uint64_t v15 = a2[4];
    if (*((unsigned char *)a2 + 40) != 1) {
      goto LABEL_16;
    }
    uint64_t v17 = a6;
    uint64_t v18 = v6;
    char v19 = a3;
    char v16 = 0;
    BOOL v20 = 0;
    BOOL v68 = 0;
  }
  else if (a4 > 1049)
  {
    uint64_t v17 = a6;
    uint64_t v18 = v6;
    char v19 = a3;
    BOOL v20 = (unint64_t)a4 < 0x425;
    uint64_t v15 = a2[4];
    if ((a2[5] & 1) == 0)
    {
      char v11 = a3;
      uint64_t v7 = v6;
      uint64_t v8 = a6;
      goto LABEL_16;
    }
    BOOL v68 = (unint64_t)a4 < 0x7DE;
    char v16 = 0;
  }
  else
  {
    char v13 = sub_1B6A94630(a2[3], 2u);
    uint64_t v14 = a2;
    uint64_t v15 = a2[4];
    if ((a2[5] & 1) == 0)
    {
      if (v13)
      {
        char v16 = 1;
        BOOL v68 = 1;
        goto LABEL_33;
      }
      goto LABEL_16;
    }
    char v16 = v13;
    uint64_t v17 = v8;
    uint64_t v18 = v6;
    char v19 = v11;
    BOOL v20 = 1;
    BOOL v68 = 1;
  }
  if ((sub_1B62CA0BC() & 1) == 0 || v20)
  {
    char v11 = v19;
    uint64_t v7 = v18;
    uint64_t v8 = v17;
    uint64_t v14 = a2;
    goto LABEL_33;
  }
  char v11 = v19;
  uint64_t v7 = v18;
  uint64_t v8 = v17;
  uint64_t v14 = a2;
  if (v16)
  {
LABEL_33:
    char v67 = v16;
    uint64_t v38 = v14[2];
    uint64_t v39 = v14;
    uint64_t v40 = (ValueMetadata *)sub_1B6E32738();
    uint64_t result = (uint64_t (*)(uint64_t))swift_conformsToProtocol2();
    if (result)
    {
      if ((*((_WORD *)v39 + 21) & 0x400) == 0)
      {
LABEL_35:
        if ((v11 & 1) == 0)
        {
          unint64_t v41 = sub_1B69B1CC4(v39[3]);
          if ((~v41 & 0xF000000000000007) != 0)
          {
            unint64_t v47 = v41;
            sub_1B69AFB0C(v41, (uint64_t)v73, 0.0);
            sub_1B6827B68(v47);
          }
          else
          {
            memset(v73, 0, 32);
          }
          sub_1B6381688((uint64_t)v73, (uint64_t)&v74, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
          if (v75) {
            goto LABEL_58;
          }
          sub_1B62B32CC((uint64_t)&v74);
        }
        if (v40 == &type metadata for TextureFileAsset)
        {
          sub_1B6E32768();
          uint64_t KeyPath = swift_getKeyPath();
          char v49 = MEMORY[0x1BA9B43C0](v38, KeyPath);
          swift_release();
          if (v49)
          {
            uint64_t v50 = sub_1B62CB6A8(a1, v7);
            if (v51)
            {
              uint64_t v78 = MEMORY[0x1E4FBB1A0];
              *(void *)&long long v77 = v50;
              *((void *)&v77 + 1) = v51;
LABEL_59:
              uint64_t v52 = a2[3];
              uint64_t DynamicType = MEMORY[0x1E4FBC840] + 8;
              if ((v52 == MEMORY[0x1E4FBC840] + 8) | v67 & 1)
              {
                uint64_t v54 = *(void *)(v8 + 32);
                uint64_t v55 = 32;
                uint64_t v56 = 8;
              }
              else
              {
                sub_1B62CAAD8((uint64_t)&v77, (uint64_t)&v74);
                sub_1B62C14BC(&v74, v75);
                uint64_t DynamicType = swift_getDynamicType();
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v74);
                uint64_t v57 = sub_1B62CB508(v52, v52);
                uint64_t v59 = v58;
                uint64_t v54 = *(void *)(v8 + 32);
                uint64_t v55 = v57;
                uint64_t v56 = v59;
              }
              char v27 = ecs_stack_allocator_allocate(v54, v55, v56);
              sub_1B62CA888((uint64_t)&v77, v27, DynamicType);
              if ((v11 & 2) != 0)
              {
                long long v74 = *(_OWORD *)a2;
                swift_retain();
                sub_1B62C7C20((uint64_t)&v74);
                swift_retain();
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v77);
                swift_release();
                uint64_t v61 = swift_allocObject();
                long long v62 = *((_OWORD *)a2 + 1);
                *(_OWORD *)(v61 + 24) = *(_OWORD *)a2;
                *(unsigned char *)(v61 + 16) = v11;
                *(_OWORD *)(v61 + 40) = v62;
                *(_OWORD *)(v61 + 52) = *(_OWORD *)((char *)a2 + 28);
                *(void *)(v61 + 72) = v27;
                *(void *)(v61 + 80) = v7;
                *(_DWORD *)(v61 + 88) = a1;
                *(_DWORD *)(v61 + 92) = v69;
                *(void *)(v61 + 96) = DynamicType;
              }
              else
              {
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v77);
                uint64_t v60 = swift_allocObject();
                *(void *)(v60 + 16) = DynamicType;
                *(void *)(v60 + 24) = v27;
              }
              return (uint64_t (*)(uint64_t))v27;
            }
            return 0;
          }
        }
        sub_1B62CD2F0(a1, (uint64_t)v40, v38, &v74);
        if (v75)
        {
LABEL_58:
          sub_1B62B57A8(&v74, &v77);
          goto LABEL_59;
        }
        sub_1B62B32CC((uint64_t)&v74);
        return 0;
      }
      uint64_t v66 = result;
      sub_1B6BF85D0((uint64_t)v40, (uint64_t)result, a1, (uint64_t)&v74);
      if (!v75)
      {
        sub_1B6A95E3C((uint64_t)&v74, (unint64_t *)&qword_1EB97EAF0, (unint64_t *)&qword_1EB97EAE0, (uint64_t)&protocol descriptor for EntityComponent);
        return 0;
      }
      sub_1B62C15C4(&v74, (uint64_t)&v77);
      sub_1B62C1550((uint64_t)&v77, (uint64_t)v73);
      sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
      sub_1B62C55B0(0, &qword_1EB97E3B0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v72 = 0;
        memset(v71, 0, sizeof(v71));
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v77);
        sub_1B6A95E3C((uint64_t)v71, (unint64_t *)&unk_1E9DD3AA8, &qword_1EB97E3B0, (uint64_t)&protocol descriptor for ComponentMeta);
        return 0;
      }
      sub_1B62C15C4(v71, (uint64_t)&v74);
      if ((a5 & 1) == 0 && a4 < 1053
        || v68 && a2[3] == MEMORY[0x1E4FBC840] + 8
        || (uint64_t v42 = v75,
            uint64_t v43 = v76,
            sub_1B62C14BC(&v74, v75),
            (uint64_t v44 = (*(uint64_t (**)(void, void, void, BOOL, uint64_t))(*(void *)(v43 + 8) + 56))(*a2, a2[1], a2[3], (v11 & 2) == 0, v42)) == 0))
      {
        uint64_t v63 = v75;
        uint64_t v64 = v76;
        sub_1B62C14BC(&v74, v75);
        uint64_t v39 = a2;
        LOBYTE(v63) = sub_1B666ECCC(*a2, a2[1], a2[3], v63, v64);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v77);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v74);
        if ((v63 & 1) == 0) {
          return 0;
        }
        goto LABEL_35;
      }
      char v27 = (unsigned char *)v44;
      if ((v11 & 2) != 0)
      {
        uint64_t v45 = *((void *)v66 + 1);
        if ((*(uint64_t (**)(ValueMetadata *, uint64_t))(v45 + 48))(v40, v45))
        {
          swift_retain();
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v77);
          swift_release();
          uint64_t v46 = swift_allocObject();
          *(void *)(v46 + 16) = v7;
          *(_DWORD *)(v46 + 24) = a1;
          *(_DWORD *)(v46 + 28) = v69;
LABEL_72:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v74);
          return (uint64_t (*)(uint64_t))v27;
        }
        if ((*(uint64_t (**)(ValueMetadata *, uint64_t))(v45 + 56))(v40, v45))
        {
          swift_retain();
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v77);
          swift_release();
          uint64_t v65 = swift_allocObject();
          *(void *)(v65 + 16) = v7;
          *(void *)(v65 + 24) = v40;
          *(void *)(v65 + 32) = v66;
          *(_DWORD *)(v65 + 40) = a1;
          *(_DWORD *)(v65 + 44) = v69;
          goto LABEL_72;
        }
      }
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v77);
      goto LABEL_72;
    }
    goto LABEL_75;
  }
LABEL_16:
  uint64_t v21 = sub_1B6E32738();
  uint64_t result = (uint64_t (*)(uint64_t))swift_conformsToProtocol2();
  if (!result)
  {
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v23 = sub_1B62CB3E0(v21, (uint64_t)result, a1);
  if (v23)
  {
    uint64_t v24 = v23;
    if (sub_1B62CA0BC()) {
      uint64_t v25 = 0;
    }
    else {
      uint64_t v25 = v15;
    }
    uint64_t v26 = sub_1B6E32738();
    uint64_t result = (uint64_t (*)(uint64_t))swift_conformsToProtocol2();
    if (result)
    {
      char v27 = (unsigned char *)(v24 + v25);
      if ((v11 & 2) != 0)
      {
        uint64_t v28 = result;
        if (((*(uint64_t (**)(uint64_t))(*((void *)result + 1) + 48))(v26) & 1) != 0
          && (*((_WORD *)a2 + 21) & 0x200) == 0)
        {
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = v26;
          *(void *)(v29 + 24) = v28;
          *(void *)(v29 + 32) = v24;
          *(void *)(v29 + 40) = v27;
          *(void *)(v29 + 48) = v7;
          *(_DWORD *)(v29 + 56) = a1;
          *(_DWORD *)(v29 + 60) = v69;
          swift_retain();
          return sub_1B62CCEFC;
        }
      }
      return (uint64_t (*)(uint64_t))v27;
    }
    goto LABEL_74;
  }
  uint64_t v30 = sub_1B6E32738();
  uint64_t result = (uint64_t (*)(uint64_t))swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = *(void *)(v8 + 32);
    uint64_t v33 = sub_1B62CD034(v30);
    uint64_t v34 = sub_1B62CD004(v30);
    int v35 = ecs_stack_allocator_allocate(v32, v33, v34);
    sub_1B636E480((uint64_t)v35, 1, v30);
    if (sub_1B62CA0BC()) {
      uint64_t v36 = 0;
    }
    else {
      uint64_t v36 = v15;
    }
    char v27 = (char *)v35 + v36;
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = v30;
    v37[3] = v31;
    void v37[4] = v35;
    return (uint64_t (*)(uint64_t))v27;
  }
LABEL_76:
  __break(1u);
  return result;
}

uint64_t sub_1B62C8668(char *a1, uint64_t a2, char *a3, unint64_t a4, char *a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v13 = 16 * a2;
  uint64_t v14 = a4 + 16 * a2 + 7;
  unint64_t v25 = v14 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = 16 * a6;
  unint64_t v16 = (16 * a6 + v14) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = 24 * a8;
  type metadata accessor for QueryBuffer();
  uint64_t v18 = swift_allocObject();
  sub_1B62C8C80(0, v13, v13, a4, v25, v15, v16, (uint64_t)&v29, v17, (uint64_t)a1, a2, a3, a4, (uint64_t)a5, a6, (uint64_t)a7, a8);
  uint64_t v19 = v30;
  char v20 = v31;
  *(_OWORD *)(v18 + 16) = v29;
  *(void *)(v18 + 32) = v19;
  *(unsigned char *)(v18 + 40) = v20;
  sub_1B62C87FC(v18 + 41, 0, v13, a1, a2, v13, a4, a3, a4, v25, v15, a5, a6, v16, v17, a7, a8);
  return v18;
}

uint64_t type metadata accessor for QueryBuffer()
{
  uint64_t result = qword_1EB97DC30;
  if (!qword_1EB97DC30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B62C87FC(uint64_t a1, uint64_t a2, uint64_t a3, char *__src, uint64_t a5, uint64_t a6, int64_t a7, char *a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, uint64_t a17)
{
  sub_1B62C8910(v22, __src, a5, (char *)(a1 + a2), a3 / 16);
  sub_1B62C8B5C(v22, a8, a9, (char *)(a1 + a6), a7);
  sub_1B62C8910(v22, a12, a13, (char *)(a1 + a10), a11 / 16);
  return sub_1B62C8A30(v22, a16, a17, (char *)(a1 + a14), a15 / 24);
}

uint64_t sub_1B62C8910(char **a1, char *__src, uint64_t a3, char *__dst, uint64_t a5)
{
  uint64_t v6 = __src;
  if (!a3 || !a5)
  {
    uint64_t v8 = 0;
    int v10 = &__src[16 * a3];
    if (!__src) {
      int v10 = 0;
    }
    goto LABEL_14;
  }
  if (a3 >= a5) {
    uint64_t v8 = a5;
  }
  else {
    uint64_t v8 = a3;
  }
  if ((v8 & 0x8000000000000000) == 0 && (&__dst[16 * v8] <= __src || &__src[16 * v8] <= __dst))
  {
    memcpy(__dst, __src, 16 * v8);
    int v10 = &v6[16 * a3];
    v6 += 16 * v8;
LABEL_14:
    *a1 = v6;
    a1[1] = v10;
    return v8;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62C8A30(char **a1, char *__src, uint64_t a3, char *__dst, uint64_t a5)
{
  uint64_t v6 = __src;
  if (!a3 || !a5)
  {
    uint64_t v8 = 0;
    int v10 = &__src[24 * a3];
    if (!__src) {
      int v10 = 0;
    }
    goto LABEL_14;
  }
  if (a3 >= a5) {
    uint64_t v8 = a5;
  }
  else {
    uint64_t v8 = a3;
  }
  if ((v8 & 0x8000000000000000) == 0 && (&__dst[24 * v8] <= __src || &__src[24 * v8] <= __dst))
  {
    memcpy(__dst, __src, 24 * v8);
    int v10 = &v6[24 * a3];
    v6 += 24 * v8;
LABEL_14:
    *a1 = v6;
    a1[1] = v10;
    return v8;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

size_t sub_1B62C8B5C(char **a1, char *__src, int64_t a3, char *__dst, int64_t a5)
{
  uint64_t v6 = __src;
  if (!a3 || !a5)
  {
    size_t v8 = 0;
    char v9 = &__src[a3];
    if (!__src) {
      char v9 = 0;
    }
    goto LABEL_12;
  }
  if (a3 >= a5) {
    size_t v8 = a5;
  }
  else {
    size_t v8 = a3;
  }
  if ((v8 & 0x8000000000000000) == 0 && (&__dst[v8] <= __src || &__src[v8] <= __dst))
  {
    memcpy(__dst, __src, v8);
    char v9 = &v6[a3];
    v6 += v8;
LABEL_12:
    *a1 = v6;
    a1[1] = v9;
    return v8;
  }
  size_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62C8C80@<X0>(unint64_t a1@<X1>, unint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t a4@<X4>, unint64_t a5@<X5>, unint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10, uint64_t a11, unsigned char *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if ((a1 & 0x8000000000000000) != 0
    || (__int16 v17 = a1, a1 >= 0x10000)
    || (__int16 v18 = a2, (a2 & 0x8000000000000000) != 0)
    || a2 >= 0x10000
    || (a3 & 0x8000000000000000) != 0
    || a3 >= 0x10000
    || (a4 & 0x8000000000000000) != 0
    || a4 >= 0x10000
    || (a5 & 0x8000000000000000) != 0
    || a5 >= 0x10000
    || (a6 & 0x8000000000000000) != 0
    || a6 >= 0x10000
    || (a7 & 0x8000000000000000) != 0
    || a7 >= 0x10000
    || (a9 & 0x8000000000000000) != 0
    || (__int16 v22 = a3, v23 = a4, v24 = a5, v25 = a6, v26 = a7, a9 >= 0x10000))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    uint64_t v20 = sub_1B62C8E44(a10, a11, (uint64_t)a12, a13, a14, a15, a16, a17);
    uint64_t result = sub_1B62C8F8C(a12, a13, a10, a11);
    *(_WORD *)a8 = v17;
    *(_WORD *)(a8 + 2) = v18;
    *(_WORD *)(a8 + 4) = v22;
    *(_WORD *)(a8 + 6) = v23;
    *(_WORD *)(a8 + 8) = v24;
    *(_WORD *)(a8 + 10) = v25;
    *(_WORD *)(a8 + 12) = v26;
    *(_WORD *)(a8 + 14) = a9;
    *(void *)(a8 + 16) = v20;
    *(unsigned char *)(a8 + 24) = result & 1;
  }
  return result;
}

uint64_t sub_1B62C8E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1B6E33998();
  sub_1B6E33928();
  if (a1 && a2)
  {
    uint64_t v16 = 16 * a2;
    do
    {
      a1 += 16;
      sub_1B6E33928();
      v16 -= 16;
    }
    while (v16);
  }
  sub_1B6E33928();
  if (a3 && a4)
  {
    do
    {
      ++a3;
      sub_1B6E33928();
      --a4;
    }
    while (a4);
  }
  sub_1B6E33928();
  if (a5 && a6)
  {
    uint64_t v17 = 16 * a6;
    do
    {
      a5 += 16;
      sub_1B6E33928();
      v17 -= 16;
    }
    while (v17);
  }
  sub_1B6E33928();
  if (a7 && a8)
  {
    uint64_t v18 = a7 + 16;
    uint64_t v19 = 24 * a8;
    do
    {
      v18 += 24;
      sub_1B6E33928();
      v19 -= 24;
    }
    while (v19);
  }
  return sub_1B6E33978();
}

uint64_t sub_1B62C8F8C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = 0;
  if (a2)
  {
    uint64_t v6 = a3;
    if (a3)
    {
      if (a4)
      {
        uint64_t v7 = a3 + 16 * a4;
        while (((*(uint64_t (**)(void))(*(void *)(v6 + 8) + 48))() & 1) == 0 || (*a1 & 0xFA) == 0)
        {
          ++a1;
          v6 += 16;
          if (v6 == v7) {
            return 0;
          }
        }
        return 1;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B62C9024(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = a1;
  uint64_t v13 = *(void *)(a2 + 8);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(a1, v13))
  {
    uint64_t v14 = *(void *)(*(void *)(*(void *)(v6 + 40) + 16) + 48);
    sub_1B62CD2A4(v14 + 32, *(void *)(v14 + 16), a1, v22);
    uint64_t v12 = v22[0];
    if (!v22[0]) {
      return 0;
    }
    uint64_t v13 = v22[1];
  }
  if (!a3)
  {
    if (v12 == a1) {
      return sub_1B62C91B8(v12);
    }
    uint64_t v21 = sub_1B62CD034(a1);
    if (v21 == sub_1B62CD034(v12)) {
      return sub_1B62C91B8(v12);
    }
  }
  uint64_t v15 = sub_1B62F238C(a1);
  uint64_t v16 = sub_1B62CD004(a1);
  if (v12 == a1) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = v12;
  }
  if (v12 == a1) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v13;
  }
  uint64_t result = sub_1B62CE7D4(v12, v13, a1, v15, v16, v17, v18, a3, a4, a5, a6);
  if (v20 == 2) {
    return 0;
  }
  return result;
}

uint64_t sub_1B62C91B0()
{
  return 0;
}

uint64_t sub_1B62C91B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  for (uint64_t i = (void *)(v2 + 56); *(i - 3) != a1; i += 5)
  {
    if (!--v3) {
      return 0;
    }
  }
  return *(void *)(v1 + 128) + *i;
}

uint64_t sub_1B62C9214()
{
  return 1;
}

uint64_t sub_1B62C921C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v86 = (void *)result;
  uint64_t v6 = 0;
  long long v7 = 0uLL;
  if (!a4 || !a5)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    long long v27 = 0uLL;
    uint64_t v28 = 0;
    goto LABEL_47;
  }
  size_t v8 = a4;
  uint64_t v9 = a3;
  uint64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 16);
  unint64_t v12 = *(void *)(a3 + 32);
  int64_t v13 = __clz(__rbit64(v12));
  uint64_t v14 = *(void *)(result + 96) + 32;
  uint64_t v15 = 4 * a5;
  uint64_t v16 = a4;
  do
  {
    int v18 = *v16;
    if (v12)
    {
      uint64_t v19 = *(void *)(v14 + 40 * v18 + 16);
      if (v13 >= *(void *)(v19 + 16)) {
        uint64_t v17 = 0;
      }
      else {
        uint64_t v17 = *(void *)(*(void *)(v19 + 8 * v13 + 32) + 16);
      }
    }
    else
    {
      uint64_t v20 = *(void *)(v14 + 40 * v18);
      if (v11) {
        uint64_t v17 = *(void *)(v20 + 16);
      }
      else {
        uint64_t v17 = *(void *)(v20 + 16) - *(void *)(v14 + 40 * v18 + 8);
      }
    }
    v10 += v17;
    ++v16;
    v15 -= 4;
  }
  while (v15);
  if (v10 <= 0)
  {
    uint64_t v6 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v28 = 0;
    long long v27 = 0uLL;
    goto LABEL_47;
  }
  uint64_t v74 = a6;
  uint64_t v29 = *(void *)(a2 + 32);
  uint64_t v78 = *(void *)(a3 + 32);
  uint64_t v79 = &a4[a5];
  int64_t v77 = v13;
  ecs_stack_allocator_push_snapshot(v29);
  uint64_t v72 = v10;
  uint64_t v30 = v29;
  char v31 = ecs_stack_allocator_allocate(v29, 48 * v10, 8);
  int64_t v33 = v77;
  uint64_t v32 = v78;
  uint64_t v34 = v79;
  uint64_t v84 = (uint64_t)v31;
  uint64_t v35 = 0;
  unint64_t v87 = 0;
  uint64_t v75 = v9;
  do
  {
    uint64_t v36 = *v8;
    if ((v11 & 2) != 0 || (*(unsigned char *)(*(void *)(v86[10] + 8 * v36 + 32) + 209) & 1) == 0)
    {
      uint64_t v37 = v86[12] + 32;
      if (v32)
      {
        uint64_t v38 = *(void *)(v37 + 40 * (int)v36 + 16);
        if (v33 < *(void *)(v38 + 16))
        {
          uint64_t v39 = *(void *)(*(void *)(v38 + 8 * v33 + 32) + 16);
          if (v39)
          {
            uint64_t v81 = v8;
            char v40 = *(unsigned char *)(v9 + 24);
            unint64_t v41 = *(unsigned int *)(v9 + 8) | ((unint64_t)*(unsigned __int8 *)(v9 + 12) << 32);
            uint64_t v42 = (uint64_t *)(swift_retain() + 48);
            do
            {
              uint64_t v43 = (const void *)*(v42 - 1);
              uint64_t v44 = *v42;
              uint64_t v45 = *(void *)(v86[17] + 8 * *((int *)v42 - 4) + 32);
              swift_retain_n();
              sub_1B62C97FC(v41, v11, v40, &v87, v45, v43, v44, v30, (uint64_t)v89);
              sub_1B62CA37C((uint64_t)v89, (uint64_t)v106, (unint64_t *)&unk_1EB97DC40, (uint64_t)&type metadata for QueryResult.ChunkResult);
              if (*((void *)&v107 + 1))
              {
                uint64_t v46 = (_OWORD *)(v84 + 48 * v35);
                long long v47 = v106[0];
                long long v48 = v107;
                v46[1] = v106[1];
                v46[2] = v48;
                _OWORD *v46 = v47;
                swift_release();
                ++v35;
              }
              else
              {
                swift_release();
              }
              v42 += 3;
              --v39;
            }
            while (v39);
            swift_release();
            uint64_t v9 = v75;
            size_t v8 = v81;
LABEL_16:
            uint64_t v32 = v78;
            uint64_t v34 = v79;
            int64_t v33 = v77;
          }
        }
      }
      else
      {
        char v49 = (void *)(v37 + 40 * (int)v36);
        uint64_t v50 = *v49;
        uint64_t v51 = v49[1];
        uint64_t v52 = *(void *)(*v49 + 16);
        if (v51 != v52)
        {
          int v76 = *v8;
          uint64_t v82 = v8;
          char v53 = *(unsigned char *)(v9 + 24);
          unint64_t v54 = *(unsigned int *)(v9 + 8) | ((unint64_t)*(unsigned __int8 *)(v9 + 12) << 32);
          swift_bridgeObjectRetain();
          do
          {
            uint64_t v55 = *(void *)(v86[17] + 8 * *(int *)(v50 + 4 * v51 + 32) + 32);
            swift_retain_n();
            sub_1B62C97FC(v54, v11, v53, &v87, v55, 0, 0, v30, (uint64_t)v88);
            sub_1B62CA37C((uint64_t)v88, (uint64_t)v104, (unint64_t *)&unk_1EB97DC40, (uint64_t)&type metadata for QueryResult.ChunkResult);
            if (*((void *)&v105 + 1))
            {
              uint64_t v56 = (_OWORD *)(v84 + 48 * v35);
              long long v57 = v104[0];
              long long v58 = v105;
              v56[1] = v104[1];
              v56[2] = v58;
              *uint64_t v56 = v57;
              swift_release();
              ++v35;
            }
            else
            {
              swift_release();
            }
            ++v51;
          }
          while (v52 != v51);
          swift_bridgeObjectRelease();
          size_t v8 = v82;
          uint64_t v32 = v78;
          uint64_t v34 = v79;
          LODWORD(v36) = v76;
          int64_t v33 = v77;
        }
        if (v11)
        {
          uint64_t v59 = v86[12] + 40 * (int)v36;
          uint64_t v60 = *(void *)(v59 + 40) & 0x7FFFFFFFFFFFFFFFLL;
          if (v60)
          {
            uint64_t v61 = v8;
            uint64_t v62 = *(void *)(v59 + 32);
            char v63 = *(unsigned char *)(v9 + 24);
            unint64_t v64 = *(unsigned int *)(v9 + 8) | ((unint64_t)*(unsigned __int8 *)(v9 + 12) << 32);
            swift_bridgeObjectRetain();
            for (uint64_t i = 0; i != v60; ++i)
            {
              uint64_t v66 = *(void *)(v86[17] + 8 * *(int *)(v62 + 4 * i + 32) + 32);
              swift_retain_n();
              sub_1B62C97FC(v64, v11, v63, &v87, v66, 0, 0, v30, (uint64_t)v90);
              sub_1B62CA37C((uint64_t)v90, (uint64_t)v102, (unint64_t *)&unk_1EB97DC40, (uint64_t)&type metadata for QueryResult.ChunkResult);
              if (*((void *)&v103 + 1))
              {
                char v67 = (_OWORD *)(v84 + 48 * v35);
                long long v68 = v102[0];
                long long v69 = v103;
                v67[1] = v102[1];
                v67[2] = v69;
                *char v67 = v68;
                swift_release();
                ++v35;
              }
              else
              {
                swift_release();
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v9 = v75;
            size_t v8 = v61;
            goto LABEL_16;
          }
        }
      }
    }
    ++v8;
  }
  while (v8 != v34);
  if (v35)
  {
    swift_retain();
    sub_1B62CA090(v9);
    sub_1B62CB7E0((uint64_t)v86, a2, v9, v84, v72, v35, (uint64_t)&v91);
    uint64_t v6 = v91;
    uint64_t v85 = v92;
    uint64_t v70 = v93;
    uint64_t v22 = v94;
    uint64_t v23 = v95;
    uint64_t v71 = v9;
    uint64_t v24 = v96;
    uint64_t v25 = v97;
    long long v80 = v99;
    long long v83 = v98;
    uint64_t v26 = v100;
    uint64_t v28 = v101;
    sub_1B62CA064(v71);
    swift_release();
    uint64_t result = ecs_stack_allocator_pop_snapshot(v30);
    long long v27 = v80;
    long long v7 = v83;
    uint64_t v21 = v85 | (v70 << 32);
    a6 = v74;
  }
  else
  {
    uint64_t result = ecs_stack_allocator_pop_snapshot(v30);
    uint64_t v6 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v28 = 0;
    long long v27 = 0uLL;
    a6 = v74;
    long long v7 = 0uLL;
  }
LABEL_47:
  *(void *)a6 = v6;
  *(void *)(a6 + 8) = v21;
  *(void *)(a6 + 16) = v22;
  *(void *)(a6 + 24) = v23;
  *(void *)(a6 + 32) = v24;
  *(void *)(a6 + 40) = v25;
  *(_OWORD *)(a6 + 48) = v7;
  *(_OWORD *)(a6 + 64) = v27;
  *(void *)(a6 + 80) = v26;
  *(void *)(a6 + 88) = v28;
  return result;
}

void sub_1B62C97FC(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, const void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9 = (uint64_t *)a5;
  uint64_t v11 = *(void *)(a5 + 256);
  uint64_t v12 = *(void *)(a5 + 240);
  if (v12 == v11) {
    goto LABEL_2;
  }
  uint64_t v18 = a7;
  int v23 = *(_DWORD *)(a5 + 28);
  if (BYTE4(a1))
  {
    if (BYTE4(a1) == 1)
    {
      int v24 = v23 == a1 ? 1 : *(unsigned __int8 *)(a5 + 32);
      if (v24 != 1) {
        goto LABEL_2;
      }
    }
  }
  else if ((*(unsigned char *)(a5 + 32) & 1) != 0 || v23 != a1)
  {
    goto LABEL_2;
  }
  if ((a2 & 8) != 0 && v12 == *(void *)(a5 + 248) || (a2 & 0x10) != 0 && *(void *)(a5 + 232) == v11) {
    goto LABEL_2;
  }
  if (a6)
  {
    uint64_t v25 = (a7 + 63) >> 6;
    if (v25 <= 1) {
      uint64_t v25 = 1;
    }
    size_t v26 = 8 * v25;
    long long v27 = (int8x16_t *)ecs_stack_allocator_allocate(a8, 8 * v25, 8);
    memcpy(v27, a6, v26);
  }
  else
  {
    long long v27 = 0;
    uint64_t v18 = 0;
  }
  if ((a2 & 0x24) == 0) {
    goto LABEL_44;
  }
  uint64_t v28 = (int8x16_t *)sub_1B62CB318(a3);
  if (!v28)
  {
LABEL_2:
    swift_release();
    unint64_t v13 = 0;
    LODWORD(v14) = 0;
    unint64_t v15 = 0;
    uint64_t v9 = 0;
LABEL_3:
    long long v16 = 0uLL;
LABEL_4:
    *(void *)a9 = v13;
    *(void *)(a9 + 8) = v14;
    *(_OWORD *)(a9 + 16) = v16;
    *(void *)(a9 + 32) = v15;
    *(void *)(a9 + 40) = v9;
    return;
  }
  uint64_t v30 = v28;
  uint64_t v31 = v29;
  if (v27)
  {
    if ((a2 & 4) == 0)
    {
      sub_1B6647114((unint64_t)v28, v29, (unint64_t)v27, v18);
      goto LABEL_43;
    }
    if (v18 + 63 <= 127) {
      unint64_t v33 = 1;
    }
    else {
      unint64_t v33 = (v18 + 63) >> 6;
    }
    if (v33 < 6 || (int8x16_t *)((char *)v28 + 8 * v33) > v27 && (int8x16_t *)((char *)v27 + 8 * v33) > v28)
    {
      unint64_t v34 = 0;
LABEL_37:
      unint64_t v35 = v33 - v34;
      uint64_t v36 = v34;
      uint64_t v37 = &v28->i64[v34];
      uint64_t v38 = &v27->i64[v36];
      do
      {
        uint64_t v39 = *v37++;
        *v38++ &= v39;
        --v35;
      }
      while (v35);
      goto LABEL_43;
    }
    unint64_t v34 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v64 = v27 + 1;
    uint64_t v65 = v28 + 1;
    unint64_t v66 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      int8x16_t v67 = vandq_s8(*v65, *v64);
      v64[-1] = vandq_s8(v65[-1], v64[-1]);
      *unint64_t v64 = v67;
      v64 += 2;
      v65 += 2;
      v66 -= 4;
    }
    while (v66);
    if (v33 != v34) {
      goto LABEL_37;
    }
  }
  else if ((a2 & 4) != 0)
  {
    uint64_t v40 = (v29 + 63) >> 6;
    if (v40 <= 1) {
      uint64_t v40 = 1;
    }
    size_t v41 = 8 * v40;
    long long v27 = (int8x16_t *)ecs_stack_allocator_allocate(a8, 8 * v40, 8);
    memcpy(v27, v30, v41);
    uint64_t v18 = v31;
  }
  else
  {
    long long v27 = sub_1B62D2830(a8, v28, v29);
    uint64_t v18 = v32;
  }
LABEL_43:
  if ((a2 & 0x20) != 0)
  {
    if (!v27) {
      goto LABEL_60;
    }
    uint64_t v42 = v9[30];
    sub_1B62C9D00(0, v9[29], (uint64_t)v27);
    sub_1B62C9D00(v42, v18, (uint64_t)v27);
    goto LABEL_48;
  }
LABEL_44:
  if (!v27) {
    goto LABEL_60;
  }
LABEL_48:
  if (v18 + 63 <= 127) {
    unint64_t v43 = 1;
  }
  else {
    unint64_t v43 = (v18 + 63) >> 6;
  }
  if (v43 >= 4)
  {
    unint64_t v45 = v43 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v46 = v27 + 1;
    int64x2_t v47 = 0uLL;
    unint64_t v48 = v43 & 0xFFFFFFFFFFFFFFFCLL;
    int64x2_t v49 = 0uLL;
    do
    {
      int64x2_t v47 = (int64x2_t)vpadalq_u32((uint64x2_t)v47, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(v46[-1]))));
      int64x2_t v49 = (int64x2_t)vpadalq_u32((uint64x2_t)v49, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*v46))));
      v46 += 2;
      v48 -= 4;
    }
    while (v48);
    uint64_t v44 = vaddvq_s64(vaddq_s64(v49, v47));
    if (v43 == v45) {
      goto LABEL_58;
    }
  }
  else
  {
    uint64_t v44 = 0;
    unint64_t v45 = 0;
  }
  unint64_t v50 = v43 - v45;
  uint64_t v51 = (int8x8_t *)v27 + v45;
  do
  {
    int8x8_t v52 = *v51++;
    uint8x8_t v53 = (uint8x8_t)vcnt_s8(v52);
    v53.i16[0] = vaddlv_u8(v53);
    v44 += v53.u32[0];
    --v50;
  }
  while (v50);
LABEL_58:
  uint64_t v54 = v9[29];
  uint64_t v55 = v9[30];
  if (v44 != v55 - v54)
  {
    if ((a2 & 8) != 0)
    {
      uint64_t v60 = v9[31];
    }
    else if ((a2 & 0x10) != 0)
    {
      uint64_t v60 = v9[32];
      uint64_t v55 = v9[29];
    }
    else
    {
      uint64_t v60 = v9[29];
    }
    sub_1B62C9D00(0, v60, (uint64_t)v27);
    sub_1B62C9D00(v55, v18, (uint64_t)v27);
    if (!sub_1B62CB4AC(v27, v18))
    {
      uint64_t v61 = sub_1B62CE430(v27, v18, a8);
      sub_1B62CE5A8((uint64_t)v9, (uint64_t)v61, v62, v63, a4, (uint64_t)&v68);
      unint64_t v13 = v68;
      LODWORD(v14) = v69;
      long long v16 = v70;
      unint64_t v15 = v71;
      uint64_t v9 = v72;
      goto LABEL_4;
    }
    goto LABEL_2;
  }
  sub_1B62C9D00(0, v54, (uint64_t)v27);
  sub_1B62C9D00(v55, v18, (uint64_t)v27);
LABEL_60:
  uint64_t v56 = 32;
  uint64_t v57 = 29;
  if ((a2 & 0x10) == 0)
  {
    uint64_t v56 = 29;
    uint64_t v57 = 30;
  }
  if ((a2 & 8) != 0)
  {
    uint64_t v56 = 31;
    uint64_t v57 = 30;
  }
  uint64_t v58 = v9[v57];
  uint64_t v59 = v9[v56];
  if (v58 == v59) {
    goto LABEL_2;
  }
  unint64_t v14 = *a4;
  if ((*a4 & 0x8000000000000000) == 0)
  {
    unint64_t v15 = HIDWORD(v14);
    if (!HIDWORD(v14))
    {
      *a4 = v58 - v59 + v14;
      unint64_t v13 = v59 | ((unint64_t)v58 << 32);
      goto LABEL_3;
    }
  }
  sub_1B6E32BD8();
  __break(1u);
}

void sub_1B62C9D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a1)
  {
    uint64_t v4 = a1 >> 6;
    uint64_t v5 = a2 >> 6;
    uint64_t v6 = ~(-1 << a1);
    uint64_t v7 = -1 << a2;
    if (a2 >> 6 == a1 >> 6)
    {
      v7 ^= v6;
      uint64_t v5 = a1 >> 6;
    }
    else
    {
      if ((a2 >> 6) - (a1 >> 6) >= 2) {
        bzero((void *)(a3 + 8 * v4 + 8), 8 * (v5 + ~v4));
      }
      *(void *)(a3 + 8 * v4) &= v6;
    }
    *(void *)(a3 + 8 * v5) &= v7;
  }
}

uint64_t sub_1B62C9DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 40));
  uint64_t v9 = *(void *)a2;
  if (!sub_1B62C9FE4(*(void *)(*(void *)a2 + 32), *(void *)(v4 + 48))) {
    sub_1B62B6A68(a1, v9);
  }
  uint64_t v11 = v10;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    if (BYTE4(a3) == 2 && !a3) {
      LODWORD(a3) = *(_DWORD *)(a2 + 8);
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                    + 8 * *(void *)thread_worker_index()
                    + 8);
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) == 4)
    {
      uint64_t v15 = *(void *)(a1 + 216);
      if (*(unsigned char *)(a1 + 225) == 1) {
        BOOL v16 = v15 <= 1;
      }
      else {
        BOOL v16 = v15 <= 0;
      }
      char v25 = !v16;
    }
    else
    {
      char v25 = 1;
    }
    if (*(unsigned char *)(a2 + 24) != 2) {
      char v25 = *(unsigned char *)(a2 + 24);
    }
    uint64_t v26 = *(void *)(a2 + 16);
    uint64_t v27 = *(void *)(a2 + 32);
    uint64_t v35 = v9;
    int v36 = a3;
    char v37 = v13;
    uint64_t v38 = v26;
    char v39 = v25;
    uint64_t v40 = v27;
    swift_retain();
    sub_1B62CA090(a2);
    sub_1B62C921C(a1, v14, (uint64_t)&v35, (int *)(v11 + 32), v12, (uint64_t)v34);
    uint64_t v30 = v34[0];
    uint64_t v19 = v34[2];
    uint64_t v32 = v34[4];
    uint64_t v33 = v34[3];
    uint64_t v20 = v34[6];
    uint64_t v31 = v34[5];
    uint64_t v21 = v34[7];
    uint64_t v22 = v34[8];
    uint64_t v12 = v34[9];
    uint64_t v23 = v34[10];
    uint64_t v24 = v34[11];
    uint64_t v28 = a2;
    uint64_t v18 = v34[1];
    sub_1B62CA064(v28);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v30;
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v31 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v17;
  a4[1] = v18;
  a4[2] = v19;
  a4[3] = v33;
  a4[4] = v32;
  a4[5] = v31;
  a4[6] = v20;
  a4[7] = v21;
  a4[8] = v22;
  a4[9] = v12;
  a4[10] = v23;
  a4[11] = v24;
  return result;
}

uint64_t sub_1B62C9FE4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1B62C1A30(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 24 * v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1B62CA064(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62CA090(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62CA0BC()
{
  if ((*(_WORD *)(v0 + 42) & 0x80) == 0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = MEMORY[0x1E4FBB550];
    sub_1B6381688(v0 + 32, (uint64_t)v10, &qword_1EB9803E0, MEMORY[0x1E4FBB550]);
    sub_1B6381688((uint64_t)v10, (uint64_t)v11, &qword_1EB9803E0, v2);
    if (v11[8] == 1)
    {
      uint64_t v3 = sub_1B6E32738();
      if (swift_conformsToProtocol2() ? v3 : 0)
      {
        uint64_t v5 = sub_1B6E32738();
        uint64_t result = swift_conformsToProtocol2();
        if (!result)
        {
          __break(1u);
LABEL_14:
          __break(1u);
          return result;
        }
        if (sub_1B62CA808(v5))
        {
          uint64_t v7 = sub_1B6E32738();
          uint64_t result = swift_conformsToProtocol2();
          if (result)
          {
            uint64_t v8 = sub_1B62CD84C(v7);
            sub_1B62CB508(*(void *)(v1 + 24), *(void *)(v1 + 24));
            return v8 == v9;
          }
          goto LABEL_14;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1B62CA210(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1B62D82E0(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B62CA27C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8374(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA2FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B67C5C0C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA37C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62CA770(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA3FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D83C0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA47C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B69D5C40(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA4FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62CA83C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA57C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6B95068(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA5FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62CF1CC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA67C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6D1FBB4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62CA6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_1B62CA770(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62CA7BC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

BOOL sub_1B62CA808(uint64_t a1)
{
  return (*(unsigned char *)(*(void *)(a1 - 8) + 82) & 1) == 0;
}

void sub_1B62CA83C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62CA888(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B6E324B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = &v24[-v10];
  uint64_t v12 = *(void *)(a3 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v9, v13);
  BOOL v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = &v24[-v18];
  sub_1B62CAAD8(a1, (uint64_t)v24);
  int v20 = swift_dynamicCast();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v20)
  {
    v21(v11, 0, 1, a3);
    uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32);
    v22(v19, v11, a3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v16, v19, a3);
    v22(a2, v16, a3);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v19, a3);
  }
  else
  {
    v21(v11, 1, 1, a3);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v6);
  }
}

uint64_t sub_1B62CAAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_1B62CAB34(char a1, uint64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  if (a3)
  {
    unint64_t v8 = a4[3];
    uint64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  uint64_t v11 = a4[2];
  if (a2 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = a2;
  }
  if (v12)
  {
    sub_1B62CAC44(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    _OWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
    BOOL v16 = v13 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CB56C(0, v11, (unint64_t)v16, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  BOOL v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
    memmove(v16, a4 + 4, 16 * v11);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v13;
}

void sub_1B62CAC44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_1B62CACA8(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B62CAB34(a1, a2, a3, a4, (unint64_t *)&qword_1EB980E18, (uint64_t (*)(uint64_t))sub_1B62CB664);
}

uint64_t sub_1B62CACC8(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x200000000;
  }
  uint64_t result = 0x200000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a1);
      uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32);
      uint64_t v8 = *(void *)(v7 + 48);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = *((__int16 *)v6 + 2);
        for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Seed; i += 5)
        {
          if (!--v9) {
            return 0x200000000;
          }
        }
        uint64_t v12 = (unsigned int *)(*(void *)(v7 + 128) + *i + 8 * v10);
        uint64_t v13 = *v12;
        BOOL v14 = *((unsigned char *)v12 + 4) == 0;
        uint64_t v15 = 0x100000000;
        if (v14) {
          uint64_t v15 = 0;
        }
        return v15 | v13;
      }
    }
  }
  return result;
}

void *sub_1B62CADAC(void *a1)
{
  return sub_1B62CADC0(0, a1[2], 0, a1);
}

void *sub_1B62CADC0(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B62CAF44(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CAEC8();
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  _OWORD v11[2] = v9;
  v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1B62CAEC8()
{
  if (!qword_1EB980C10)
  {
    sub_1B62CB1E8(255, &qword_1EB97F650, (uint64_t)&type metadata for CachedLocationMapping, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980C10);
    }
  }
}

uint64_t sub_1B62CAF44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62CB1E8(0, &qword_1EB97F650, (uint64_t)&type metadata for CachedLocationMapping, MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

void *sub_1B62CB064(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6, void (*a7)(void, int64_t, void *, void *))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= a2) {
      int64_t v12 = a2;
    }
    if (v11 < a2) {
      a2 = v12;
    }
    else {
      a2 = v11;
    }
  }
  int64_t v13 = a4[2];
  if (a2 <= v13) {
    int64_t v14 = a4[2];
  }
  else {
    int64_t v14 = a2;
  }
  if (!v14)
  {
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    a7(0, v13, v17, a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = (void *)swift_allocObject();
  size_t v16 = j__malloc_size(v15);
  _OWORD v15[2] = v13;
  v15[3] = 2 * ((uint64_t)(v16 - 32) / 112);
  uint64_t v17 = v15 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v15 != a4 || v17 >= &a4[14 * v13 + 4]) {
    memmove(v17, a4 + 4, 112 * v13);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1B62CB19C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62CB1E8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62CB234(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62CB280(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for ScriptingConfiguration()
{
  uint64_t result = qword_1EB97F7C8;
  if (!qword_1EB97F7C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1B62CB318(char a1)
{
  unint64_t result = v1[24];
  if (result && a1 == 1)
  {
    unint64_t v4 = v1[26];
    uint64_t v5 = v1[27] + 63;
    if (v5 <= 127) {
      unint64_t v6 = 1;
    }
    else {
      unint64_t v6 = v5 >> 6;
    }
    if (v6 < 6 || (result + 8 * v6 > v4 ? (BOOL v7 = v4 + 8 * v6 > result) : (BOOL v7 = 0), v7))
    {
      unint64_t v8 = 0;
    }
    else
    {
      unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v9 = (int8x16_t *)(v4 + 16);
      unint64_t v10 = (int8x16_t *)(result + 16);
      unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        int8x16_t v12 = vorrq_s8(*v10, *v9);
        v9[-1] = vorrq_s8(v10[-1], v9[-1]);
        *uint64_t v9 = v12;
        v9 += 2;
        v10 += 2;
        v11 -= 4;
      }
      while (v11);
      if (v6 == v8) {
        return result;
      }
    }
    unint64_t v13 = v6 - v8;
    uint64_t v14 = 8 * v8;
    uint64_t v15 = (uint64_t *)(result + 8 * v8);
    size_t v16 = (void *)(v4 + v14);
    do
    {
      uint64_t v17 = *v15++;
      *v16++ |= v17;
      --v13;
    }
    while (v13);
  }
  return result;
}

uint64_t sub_1B62CB3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 == 0xFFFFFFFFLL) {
    return 0;
  }
  if (a3 << 32 < (uint64_t)0xFFFFFFFF00000001) {
    return 0;
  }
  if ((int)a3 >= *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    return 0;
  }
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (HIDWORD(a3) != -1 && *(_DWORD *)(v5 + 12 * (int)a3 + 8) != HIDWORD(a3)) {
    return 0;
  }
  unint64_t v6 = (int *)(v5 + 12 * (int)a3);
  uint64_t v7 = *(void *)(*(void *)(v3 + 136) + 8 * *v6 + 32);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = *((__int16 *)v6 + 2);
  for (uint64_t i = v8 + 56; *(void *)(i - 24) != a1; i += 40)
  {
    if (!--v9) {
      return 0;
    }
  }
  uint64_t v14 = i - 8;
  uint64_t v13 = *(void *)(i - 8);
  uint64_t v12 = *(void *)(v14 + 8);
  if (v13 <= 1) {
    uint64_t v13 = 1;
  }
  return *(void *)(v7 + 128) + v12 + v13 * v10;
}

BOOL sub_1B62CB4AC(void *a1, uint64_t a2)
{
  if (a2 + 63 <= 127)
  {
    if (*a1) {
      return 0;
    }
    unint64_t v3 = 1;
  }
  else
  {
    if (*a1) {
      return 0;
    }
    unint64_t v3 = (unint64_t)(a2 + 63) >> 6;
  }
  unint64_t v4 = a1 + 1;
  unint64_t v5 = v3 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v6 = *v4++;
    --v5;
  }
  while (!v6);
  return result;
}

uint64_t sub_1B62CB508(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 - 8) + 64);
}

uint64_t sub_1B62CB56C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62CB664();
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

unint64_t sub_1B62CB664()
{
  unint64_t result = qword_1EB980FA0;
  if (!qword_1EB980FA0)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EB980FA0);
  }
  return result;
}

uint64_t sub_1B62CB6A8(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 != -1 && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != v3) {
      return 0;
    }
    return sub_1B62CB760(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 48);
  }
  return result;
}

uint64_t sub_1B62CB760(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureFileAsset; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  uint64_t v6 = *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
  swift_bridgeObjectRetain();
  return v6;
}

void *sub_1B62CB7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v134 = *(void *)(a2 + 32);
  ecs_stack_allocator_push_snapshot(v134);
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v135 = a1;
  uint64_t v133 = *(void *)a3;
  char v131 = *(unsigned char *)(a3 + 12);
  int v132 = *(_DWORD *)(a3 + 8);
  char v130 = *(unsigned char *)(a3 + 24);
  uint64_t v129 = *(void *)(a3 + 32);
  if (*(unsigned char *)(*(void *)a3 + 40) != 1)
  {
    uint64_t v127 = a5;
    uint64_t v128 = a7;
    swift_retain();
    sub_1B62CA090(a3);
LABEL_120:
    uint64_t v109 = a6;
    a5 = v127;
    a7 = v128;
    uint64_t v110 = v135;
    if (a6)
    {
      if (a6 == 1)
      {
        uint64_t v109 = 0;
        unint64_t v111 = 0;
      }
      else
      {
        uint64_t v112 = 0;
        uint64_t v113 = 0;
        unint64_t v111 = a6 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v114 = (unsigned int *)(a4 + 56);
        unint64_t v115 = a6 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          uint64_t v116 = *(v114 - 12);
          int v117 = *(v114 - 13) - *(v114 - 14);
          int v118 = *(v114 - 1) - *(v114 - 2);
          unsigned int v119 = *v114;
          v114 += 24;
          uint64_t v112 = v112 - v116 + (v117 + v116);
          uint64_t v113 = v113 - v119 + v118 + v119;
          v115 -= 2;
        }
        while (v115);
        uint64_t v109 = v113 + v112;
        if (v111 == a6) {
          goto LABEL_130;
        }
      }
      uint64_t v120 = a6 - v111;
      uint64_t v121 = (unsigned int *)(a4 + 48 * v111 + 8);
      do
      {
        int v122 = *(v121 - 2);
        int v123 = *(v121 - 1);
        unsigned int v124 = *v121;
        v121 += 12;
        uint64_t v109 = v109 - v124 + v123 - v122 + v124;
        --v120;
      }
      while (v120);
    }
LABEL_130:
    type metadata accessor for QueryResult.Deallocator();
    uint64_t result = (void *)swift_allocObject();
    result[4] = a5;
    result[5] = a6;
    result[2] = v134;
    result[3] = a4;
    *(void *)a7 = v133;
    *(_DWORD *)(a7 + 8) = v132;
    *(unsigned char *)(a7 + 12) = v131;
    *(void *)(a7 + 16) = v13;
    *(unsigned char *)(a7 + 24) = v130;
    *(void *)(a7 + 32) = v129;
    *(void *)(a7 + 40) = a4;
    *(void *)(a7 + 48) = a5;
    *(void *)(a7 + 56) = a6;
    *(void *)(a7 + 64) = v110;
    *(void *)(a7 + 72) = a2;
    *(void *)(a7 + 80) = v109;
    *(void *)(a7 + 88) = result;
    return result;
  }
  if (!a6)
  {
    swift_retain();
    uint64_t v125 = a3;
    uint64_t v110 = a1;
    sub_1B62CA090(v125);
    uint64_t v109 = 0;
    goto LABEL_130;
  }
  uint64_t v127 = a5;
  uint64_t v128 = a7;
  swift_retain();
  sub_1B62CA090(a3);
  uint64_t v14 = 0;
  uint64_t v136 = a4;
  uint64_t v137 = a6;
  uint64_t v141 = v13;
  while (1)
  {
    uint64_t v15 = (void *)(a4 + 48 * v14);
    size_t v16 = (uint64_t *)v15[2];
    uint64_t v17 = v15[5];
    uint64_t v146 = v17;
    if (!v16)
    {
      uint64_t v23 = *(void *)(v17 + 232);
      uint64_t v147 = *(void *)(v17 + 240);
      if (v147 != v23)
      {
        uint64_t v24 = *(void *)(v17 + 192);
        swift_retain();
        if (v24)
        {
          uint64_t v25 = *(void *)(v17 + 208);
          sub_1B63B52E8(v23, v147, v24);
          if ((v13 & 4) != 0) {
            sub_1B63B52E8(v23, v147, v25);
          }
          else {
            sub_1B62C9D00(v23, v147, v25);
          }
          uint64_t v17 = v146;
        }
        if (*(unsigned char *)(*(void *)(v17 + 40) + 213) == 1)
        {
          uint64_t v85 = *(void *)(v17 + 48);
          uint64_t v86 = *(void *)(v85 + 16);
          uint64_t v138 = v14;
          if (v86)
          {
            unint64_t v87 = (uint64_t *)(v85 + 56);
            uint64_t v88 = v147;
            while ((ValueMetadata *)*(v87 - 3) != &type metadata for PropagateDirtiness)
            {
              v87 += 5;
              if (!--v86) {
                goto LABEL_102;
              }
            }
            uint64_t v86 = *v87;
          }
          else
          {
            uint64_t v88 = v147;
          }
LABEL_102:
          uint64_t v89 = *(void *)(v17 + 128) + v86;
          uint64_t v90 = *(void *)(v17 + 16);
          do
          {
            swift_retain();
            if (*(unsigned char *)(v17 + 184)) {
              goto LABEL_132;
            }
            unsigned int v92 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v23);
            unsigned __int8 v93 = (unsigned int *)(v89 + 8 * v23);
            uint64_t v94 = *(unsigned int *)(*(void *)(v90 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v92 + 8);
            swift_release();
            uint64_t v95 = *v93;
            uint64_t v96 = v93[1];
            if (v95 != -1 || v96 != 0)
            {
              uint64_t v98 = *(void *)(a2 + 88);
              sub_1B6E33918();
              sub_1B6E33958();
              sub_1B6E33958();
              uint64_t v99 = sub_1B6E33988();
              uint64_t v100 = -1 << *(unsigned char *)(v98 + 32);
              unint64_t v101 = v99 & ~v100;
              uint64_t v102 = v98 + 56;
              if ((*(void *)(v98 + 56 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101))
              {
                uint64_t v103 = ~v100;
                uint64_t v104 = *(void *)(v98 + 48);
                uint64_t v88 = v147;
                while (1)
                {
                  uint64_t v105 = v104 + 16 * v101;
                  int v107 = *(_DWORD *)(v105 + 8);
                  int v106 = *(_DWORD *)(v105 + 12);
                  if (v107 == v95 && v106 == v96) {
                    break;
                  }
                  unint64_t v101 = (v101 + 1) & v103;
                  if (((*(void *)(v102 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101) & 1) == 0) {
                    goto LABEL_103;
                  }
                }
              }
              else
              {
LABEL_103:
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v153 = *(void *)(a2 + 88);
                *(void *)(a2 + 88) = 0x8000000000000000;
                sub_1B6397A60(v92 | (unint64_t)(v94 << 32), v95 | (v96 << 32), v101, isUniquelyReferenced_nonNull_native);
                *(void *)(a2 + 88) = v153;
                uint64_t v88 = v147;
                swift_bridgeObjectRelease();
              }
            }
            ++v23;
            uint64_t v17 = v146;
          }
          while (v23 != v88);
LABEL_118:
          swift_release();
          a4 = v136;
          a6 = v137;
          uint64_t v13 = v141;
          uint64_t v14 = v138;
        }
        else
        {
          swift_release();
        }
      }
      goto LABEL_5;
    }
    uint64_t v18 = v15[4];
    if (v18) {
      break;
    }
LABEL_5:
    if (++v14 == a6) {
      goto LABEL_120;
    }
  }
  uint64_t v138 = v14;
  uint64_t v19 = *v16;
  uint64_t v20 = *v16 + 1;
  if (v18 == 1)
  {
    swift_retain();
LABEL_10:
    uint64_t v21 = *(void *)(v17 + 192);
    if (v21)
    {
      uint64_t v22 = *(void *)(v17 + 208);
      sub_1B63B52E8(v19, v20, v21);
      if ((v13 & 4) != 0) {
        sub_1B63B52E8(v19, v20, v22);
      }
      else {
        sub_1B62C9D00(v19, v20, v22);
      }
      uint64_t v17 = v146;
    }
    if (*(unsigned char *)(*(void *)(v17 + 40) + 213) == 1)
    {
      uint64_t v59 = *(void *)(v17 + 48);
      uint64_t v60 = *(void *)(v59 + 16);
      if (v60)
      {
        uint64_t v61 = (uint64_t *)(v59 + 56);
        while ((ValueMetadata *)*(v61 - 3) != &type metadata for PropagateDirtiness)
        {
          v61 += 5;
          if (!--v60) {
            goto LABEL_71;
          }
        }
        uint64_t v60 = *v61;
        if (v19 != v20)
        {
LABEL_74:
          uint64_t v62 = *(void *)(v17 + 128) + v60;
          uint64_t v63 = *(void *)(v17 + 16);
          while (1)
          {
            swift_retain();
            if (*(unsigned char *)(v17 + 184)) {
              goto LABEL_132;
            }
            unsigned int v66 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v19);
            int8x16_t v67 = (unsigned int *)(v62 + 8 * v19);
            uint64_t v68 = *(unsigned int *)(*(void *)(v63 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v66 + 8);
            swift_release();
            uint64_t v69 = *v67;
            uint64_t v70 = v67[1];
            if (v69 != -1 || v70 != 0)
            {
              uint64_t v149 = v68;
              uint64_t v72 = v62;
              uint64_t v73 = v20;
              uint64_t v74 = *(void *)(a2 + 88);
              sub_1B6E33918();
              sub_1B6E33958();
              sub_1B6E33958();
              uint64_t v75 = sub_1B6E33988();
              uint64_t v76 = -1 << *(unsigned char *)(v74 + 32);
              unint64_t v77 = v75 & ~v76;
              uint64_t v78 = v74 + 56;
              if ((*(void *)(v74 + 56 + ((v77 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v77))
              {
                uint64_t v79 = ~v76;
                uint64_t v80 = *(void *)(v74 + 48);
                uint64_t v20 = v73;
                uint64_t v62 = v72;
                uint64_t v64 = v149;
                while (1)
                {
                  uint64_t v81 = v80 + 16 * v77;
                  int v83 = *(_DWORD *)(v81 + 8);
                  int v82 = *(_DWORD *)(v81 + 12);
                  if (v83 == v69 && v82 == v70) {
                    break;
                  }
                  unint64_t v77 = (v77 + 1) & v79;
                  if (((*(void *)(v78 + ((v77 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v77) & 1) == 0) {
                    goto LABEL_76;
                  }
                }
              }
              else
              {
                uint64_t v20 = v73;
                uint64_t v62 = v72;
                uint64_t v64 = v149;
LABEL_76:
                char v65 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v152 = *(void *)(a2 + 88);
                *(void *)(a2 + 88) = 0x8000000000000000;
                sub_1B6397A60(v66 | (unint64_t)(v64 << 32), v69 | (v70 << 32), v77, v65);
                *(void *)(a2 + 88) = v152;
                swift_bridgeObjectRelease();
              }
            }
            ++v19;
            uint64_t v17 = v146;
            if (v19 == v20) {
              goto LABEL_118;
            }
          }
        }
      }
      else
      {
LABEL_71:
        if (v19 != v20) {
          goto LABEL_74;
        }
      }
    }
    swift_release();
    a4 = v136;
    a6 = v137;
    uint64_t v14 = v138;
    goto LABEL_5;
  }
  uint64_t v26 = v18;
  swift_retain();
  uint64_t v27 = 1;
  uint64_t v139 = v26;
  uint64_t v140 = v16;
  while (1)
  {
    uint64_t v28 = v16[v27];
    if (v20 == v28) {
      goto LABEL_19;
    }
    uint64_t v29 = *(void *)(v17 + 192);
    if (v29)
    {
      uint64_t v30 = *(void *)(v17 + 208);
      sub_1B63B52E8(v19, v20, v29);
      if ((v13 & 4) != 0)
      {
        sub_1B63B52E8(v19, v20, v30);
        uint64_t v17 = v146;
      }
      else
      {
        uint64_t v17 = v146;
        if (v20 != v19)
        {
          uint64_t v31 = v28;
          uint64_t v143 = v27;
          uint64_t v32 = v19 >> 6;
          uint64_t v33 = v20 >> 6;
          uint64_t v34 = ~(-1 << v19);
          uint64_t v35 = -1 << v20;
          if (v20 >> 6 == v19 >> 6)
          {
            *(void *)(v30 + 8 * v32) &= v35 ^ v34;
          }
          else
          {
            if ((v20 >> 6) - (v19 >> 6) >= 2) {
              bzero((void *)(v30 + 8 * v32 + 8), 8 * (v33 + ~v32));
            }
            *(void *)(v30 + 8 * v32) &= v34;
            *(void *)(v30 + 8 * v33) &= v35;
          }
          uint64_t v17 = v146;
          size_t v16 = v140;
          uint64_t v27 = v143;
          uint64_t v28 = v31;
          uint64_t v13 = v141;
        }
      }
    }
    if (*(unsigned char *)(*(void *)(v17 + 40) + 213) == 1)
    {
      uint64_t v36 = *(void *)(v17 + 48);
      uint64_t v37 = *(void *)(v36 + 16);
      if (!v37)
      {
LABEL_36:
        if (v19 != v20) {
          break;
        }
        goto LABEL_18;
      }
      uint64_t v38 = (uint64_t *)(v36 + 56);
      while ((ValueMetadata *)*(v38 - 3) != &type metadata for PropagateDirtiness)
      {
        v38 += 5;
        if (!--v37) {
          goto LABEL_36;
        }
      }
      uint64_t v37 = *v38;
      if (v19 != v20) {
        break;
      }
    }
LABEL_18:
    uint64_t v19 = v28;
LABEL_19:
    ++v27;
    uint64_t v20 = v28 + 1;
    if (v27 == v26) {
      goto LABEL_10;
    }
  }
  uint64_t v142 = v28;
  uint64_t v144 = v27;
  uint64_t v145 = *(void *)(v17 + 128) + v37;
  uint64_t v39 = *(void *)(v17 + 16);
  while (1)
  {
    swift_retain();
    if (*(unsigned char *)(v17 + 184)) {
      break;
    }
    unsigned int v42 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v19);
    unsigned int v43 = *(_DWORD *)(*(void *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v42 + 8);
    swift_release();
    if (*(void *)(v145 + 8 * v19) != -1 || HIDWORD(*(void *)(v145 + 8 * v19)) != 0)
    {
      int32x2_t v148 = *(int32x2_t *)(v145 + 8 * v19);
      uint64_t v45 = *(void *)(a2 + 88);
      sub_1B6E33918();
      sub_1B6E33958();
      sub_1B6E33958();
      uint64_t v46 = sub_1B6E33988();
      uint64_t v47 = -1 << *(unsigned char *)(v45 + 32);
      unint64_t v48 = v46 & ~v47;
      uint64_t v49 = v45 + 56;
      if ((*(void *)(v45 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48))
      {
        uint64_t v50 = ~v47;
        uint64_t v51 = *(void *)(v45 + 48);
        uint64_t v17 = v146;
        while (1)
        {
          int32x2_t v52 = vceq_s32(*(int32x2_t *)(v51 + 16 * v48 + 8), v148);
          if (v52.i32[0] & v52.i32[1]) {
            break;
          }
          unint64_t v48 = (v48 + 1) & v50;
          if (((*(void *)(v49 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
            goto LABEL_54;
          }
        }
      }
      else
      {
LABEL_54:
        int v53 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v151 = *(void *)(a2 + 88);
        uint64_t v58 = (void *)v151;
        *(void *)(a2 + 88) = 0x8000000000000000;
        if (v58[3] > v58[2])
        {
          if ((v53 & 1) == 0)
          {
            sub_1B67EFB5C();
            uint64_t v58 = (void *)v151;
          }
        }
        else
        {
          if (v53) {
            sub_1B67EB3C8();
          }
          else {
            sub_1B67F1964();
          }
          uint64_t v58 = (void *)v151;
          sub_1B6E33918();
          sub_1B6E33958();
          sub_1B6E33958();
          uint64_t v54 = sub_1B6E33988();
          uint64_t v55 = -1 << *(unsigned char *)(v151 + 32);
          unint64_t v48 = v54 & ~v55;
          if ((*(void *)(v151 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48))
          {
            uint64_t v56 = ~v55;
            int32x2_t v40 = v148;
            while (1)
            {
              int32x2_t v57 = vceq_s32(*(int32x2_t *)(*(void *)(v151 + 48) + 16 * v48 + 8), v148);
              if (v57.i32[0] & v57.i32[1]) {
                break;
              }
              unint64_t v48 = (v48 + 1) & v56;
              if (((*(void *)(v151 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
                goto LABEL_43;
              }
            }
            sub_1B6E33828();
            __break(1u);
            break;
          }
        }
        int32x2_t v40 = v148;
LABEL_43:
        *(void *)((char *)v58 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v48;
        *(void *)&long long v41 = __PAIR64__(v43, v42);
        *((int32x2_t *)&v41 + 1) = v40;
        *(_OWORD *)(v58[6] + 16 * v48) = v41;
        ++v58[2];
        *(void *)(a2 + 88) = v58;
        swift_bridgeObjectRelease();
        uint64_t v17 = v146;
      }
    }
    if (++v19 == v20)
    {
      uint64_t v13 = v141;
      uint64_t v28 = v142;
      uint64_t v19 = v142;
      uint64_t v26 = v139;
      size_t v16 = v140;
      uint64_t v27 = v144;
      goto LABEL_19;
    }
  }
LABEL_132:
  uint64_t result = (void *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for QueryResult.Deallocator()
{
  return self;
}

uint64_t sub_1B62CC2E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = a1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_1B62C14BC(a1, v5);
  unsigned __int8 v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
  if (v2) {
    goto LABEL_21;
  }
  unsigned __int8 v8 = v7;
  uint64_t v9 = v4[3];
  uint64_t v10 = v4[4];
  sub_1B62C14BC(v4, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 64))(v106, v9, v10);
  if ((v8 & 0xE0) == 0xC0)
  {
    uint64_t v27 = v4[3];
    uint64_t v28 = v4[4];
    sub_1B62C14BC(v4, v27);
    int v29 = sub_1B62C1C04(0xC0u, v27, v28);
    unsigned __int8 v93 = v4;
    uint64_t v95 = v3;
    unint64_t v109 = MEMORY[0x1E4FBC868];
    uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
    if (v29)
    {
      int v31 = v29;
      do
      {
        uint64_t v32 = v107;
        uint64_t v33 = v108;
        sub_1B62C14BC(v106, v107);
        sub_1B62B1B2C();
        sub_1B6B13EC4(v32, (uint64_t)&type metadata for StringCodingKeys, v33, (uint64_t)&v102);
        unint64_t v34 = v102;
        char v35 = v103;
        uint64_t v37 = v104;
        uint64_t v36 = v105;
        uint64_t v38 = v107;
        uint64_t v39 = v108;
        sub_1B62C14BC(v106, v107);
        unsigned int v40 = sub_1B62C1D44(v38, v39);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v30 = sub_1B68C61FC(0, v30[2] + 1, 1, v30);
        }
        long long v41 = v30;
        unint64_t v42 = v30[2];
        unsigned int v43 = v41;
        unint64_t v44 = v41[3];
        if (v42 >= v44 >> 1) {
          unsigned int v43 = sub_1B68C61FC(v44 > 1, v42 + 1, 1, v43);
        }
        _OWORD v43[2] = v42 + 1;
        uint64_t v45 = &v43[5 * v42];
        uint64_t v30 = v43;
        v45[4] = v34;
        *((unsigned char *)v45 + 40) = v35;
        v45[6] = v37;
        v45[7] = v36;
        v45[8] = v40;
        swift_bridgeObjectRelease();
        --v31;
      }
      while (v31);
    }
    sub_1B6B17F80();
    sub_1B6E314F8();
    uint64_t v68 = v30[2];
    if (!v68)
    {
LABEL_49:
      swift_bridgeObjectRelease();
      uint64_t v4 = v93;
      uint64_t v3 = v95;
      *(void *)(v95 + 16) = v109;
      *(unsigned char *)(v95 + 24) = 0;
      goto LABEL_50;
    }
    uint64_t v69 = (void *)v109;
    uint64_t v70 = (void *)(swift_bridgeObjectRetain() + 64);
    while (1)
    {
      uint64_t v97 = v70;
      uint64_t v98 = v68;
      uint64_t v72 = *(v70 - 4);
      char v99 = *((unsigned char *)v70 - 24);
      uint64_t v73 = *(v70 - 1);
      uint64_t v101 = *(v70 - 2);
      uint64_t v74 = *v70;
      uint64_t v75 = v107;
      uint64_t v76 = v108;
      sub_1B62C14BC(v106, v107);
      unint64_t v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 16);
      swift_bridgeObjectRetain_n();
      uint64_t v78 = v77(v74, v75, v76);
      uint64_t v80 = v79;
      type metadata accessor for _BinaryDecoder.DataStream();
      uint64_t v81 = (void *)swift_allocObject();
      v81[2] = v78;
      v81[3] = v80;
      v81[4] = 0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v102 = (unint64_t)v69;
      unint64_t v109 = 0x8000000000000000;
      unint64_t v83 = sub_1B69FB7AC(v72, v99, v101, v73);
      char v85 = v84;
      uint64_t v86 = v69[2] + ((v84 & 1) == 0);
      if (v69[3] >= v86)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1B6AD597C();
        }
        uint64_t v91 = v97;
        uint64_t v90 = v98;
        uint64_t v89 = v101;
        uint64_t v69 = (void *)v102;
        if (v85) {
          goto LABEL_45;
        }
      }
      else
      {
        sub_1B6AC5868(v86, isUniquelyReferenced_nonNull_native);
        unint64_t v87 = sub_1B69FB7AC(v72, v99, v101, v73);
        if ((v85 & 1) != (v88 & 1)) {
          goto LABEL_52;
        }
        unint64_t v83 = v87;
        uint64_t v89 = v101;
        uint64_t v91 = v97;
        uint64_t v90 = v98;
        uint64_t v69 = (void *)v102;
        if (v85)
        {
LABEL_45:
          uint64_t v92 = v69[7];
          swift_release();
          *(void *)(v92 + 8 * v83) = v81;
          goto LABEL_37;
        }
      }
      v69[(v83 >> 6) + 8] |= 1 << v83;
      uint64_t v71 = v69[6] + 32 * v83;
      *(void *)uint64_t v71 = v72;
      *(unsigned char *)(v71 + 8) = v99;
      *(void *)(v71 + 16) = v89;
      *(void *)(v71 + 24) = v73;
      *(void *)(v69[7] + 8 * v83) = v81;
      ++v69[2];
      swift_bridgeObjectRetain();
LABEL_37:
      uint64_t v70 = v91 + 5;
      unint64_t v109 = (unint64_t)v69;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v68 = v90 - 1;
      if (!v68)
      {
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
    }
  }
  if ((v8 & 0xE0) != 0xE0)
  {
    sub_1B6B17984();
    swift_allocError();
    *(void *)uint64_t v46 = &unk_1F0F67950;
    *(void *)(v46 + 8) = v8 & 0xE0;
    *(unsigned char *)(v46 + 16) = 3;
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v106);
LABEL_21:
    sub_1B62C2D70(0, &qword_1EB97EAA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for _BinaryDecoder.KeyedStore);
    swift_deallocPartialClassInstance();
LABEL_22:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
    return v3;
  }
  uint64_t v11 = v4[3];
  uint64_t v12 = v4[4];
  sub_1B62C14BC(v4, v11);
  int v13 = sub_1B62C1C04(0xE0u, v11, v12);
  unint64_t v102 = MEMORY[0x1E4FBC868];
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  if (v13)
  {
    int v15 = v13;
    do
    {
      uint64_t v16 = v107;
      uint64_t v17 = v108;
      sub_1B62C14BC(v106, v107);
      int v18 = sub_1B62C1D44(v16, v17);
      uint64_t v19 = v107;
      uint64_t v20 = v108;
      sub_1B62C14BC(v106, v107);
      unsigned int v21 = sub_1B62C1D44(v19, v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_1B62CCC38(0, *((void *)v14 + 2) + 1, 1, v14);
      }
      uint64_t v22 = v14;
      unint64_t v23 = *((void *)v14 + 2);
      uint64_t v24 = v22;
      unint64_t v25 = *((void *)v22 + 3);
      if (v23 >= v25 >> 1) {
        uint64_t v24 = sub_1B62CCC38(v25 > 1, v23 + 1, 1, v24);
      }
      *((void *)v24 + 2) = v23 + 1;
      uint64_t v26 = &v24[16 * v23];
      uint64_t v14 = v24;
      *((void *)v26 + 4) = v18;
      *((void *)v26 + 5) = v21;
      --v15;
    }
    while (v15);
  }
  sub_1B62CCE80();
  sub_1B6E314F8();
  uint64_t v48 = *((void *)v14 + 2);
  if (!v48)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    *(void *)(v3 + 16) = v102;
    *(unsigned char *)(v3 + 24) = 1;
LABEL_50:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v106);
    goto LABEL_22;
  }
  uint64_t v94 = v4;
  uint64_t v49 = (void *)v102;
  swift_bridgeObjectRetain();
  uint64_t v50 = (uint64_t *)(v14 + 40);
  uint64_t v96 = v3;
  while (1)
  {
    uint64_t v100 = v48;
    uint64_t v53 = *(v50 - 1);
    uint64_t v52 = *v50;
    uint64_t v54 = v107;
    uint64_t v55 = v108;
    sub_1B62C14BC(v106, v107);
    uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v52, v54, v55);
    uint64_t v58 = v57;
    type metadata accessor for _BinaryDecoder.DataStream();
    uint64_t v59 = (void *)swift_allocObject();
    v59[2] = v56;
    v59[3] = v58;
    v59[4] = 0;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v109 = (unint64_t)v49;
    unint64_t v102 = 0x8000000000000000;
    unint64_t v61 = sub_1B62C1A30(v53);
    char v63 = v62;
    uint64_t v64 = v49[2] + ((v62 & 1) == 0);
    if (v49[3] >= v64)
    {
      if ((v60 & 1) == 0) {
        sub_1B6ACC0BC();
      }
      goto LABEL_32;
    }
    sub_1B6AB6324(v64, v60);
    unint64_t v65 = sub_1B62C1A30(v53);
    if ((v63 & 1) != (v66 & 1)) {
      break;
    }
    unint64_t v61 = v65;
LABEL_32:
    uint64_t v3 = v96;
    uint64_t v49 = (void *)v109;
    if (v63)
    {
      uint64_t v67 = *(void *)(v109 + 56);
      swift_release();
      *(void *)(v67 + 8 * v61) = v59;
    }
    else
    {
      *(void *)(v109 + 8 * (v61 >> 6) + 64) |= 1 << v61;
      uint64_t v51 = 8 * v61;
      *(void *)(v49[6] + v51) = v53;
      *(void *)(v49[7] + v51) = v59;
      ++v49[2];
    }
    v50 += 2;
    unint64_t v102 = (unint64_t)v49;
    swift_bridgeObjectRelease();
    uint64_t v48 = v100 - 1;
    if (v100 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v94;
      goto LABEL_47;
    }
  }
  sub_1B6E33838();
  __break(1u);
LABEL_52:
  sub_1B62C2D70(0, (unint64_t *)&unk_1E9DD1F50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for _KeyBox);
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

char *sub_1B62CCC38(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CCD30();
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1B62CCD30()
{
  if (!qword_1EB980D60)
  {
    sub_1B67FB8C0(255, &qword_1EB980408);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980D60);
    }
  }
}

char *sub_1B62CCD9C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((v6 = (char *)(a4 + 32 + 16 * a1), uint64_t v7 = &__dst[16 * v4], v8 = a4 + 32 + 16 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 16 * v4);
    return v7;
  }
  return result;
}

void sub_1B62CCE80()
{
  if (!qword_1EB9800E8)
  {
    type metadata accessor for _BinaryDecoder.DataStream();
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9800E8);
    }
  }
}

uint64_t sub_1B62CCEE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu) {
    return sub_1B62C6AE0(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_1B62CCEFC(uint64_t a1)
{
  return sub_1B62CCF0C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1B62CCF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int v7 = a7;
  unint64_t v13 = HIDWORD(a7);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = sub_1B62CD034(a2);
  uint64_t v16 = sub_1B62CD004(a2);
  uint64_t v17 = ecs_stack_allocator_allocate(v14, v15, v16);
  sub_1B62CD04C();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a6;
  *(_DWORD *)(v18 + 24) = v7;
  *(_DWORD *)(v18 + 28) = v13;
  *(void *)(v18 + 32) = v17;
  *(void *)(v18 + 40) = a4;
  *(void *)(v18 + 48) = a2;
  *(void *)(v18 + 56) = a3;
  *(void *)(v18 + 64) = a1;
  return a5;
}

uint64_t sub_1B62CD004(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(a1 - 8) + 80) + 1;
}

uint64_t sub_1B62CD034(uint64_t a1)
{
  return *(void *)(*(void *)(a1 - 8) + 64);
}

uint64_t sub_1B62CD04C()
{
  return sub_1B6E32448();
}

uint64_t sub_1B62CD05C()
{
  uint64_t v1 = v0;
  if ((*(_WORD *)(v0 + 42) & 0x80) == 0)
  {
    uint64_t v2 = MEMORY[0x1E4FBB550];
    sub_1B6381688(v0 + 32, (uint64_t)v10, &qword_1EB9803E0, MEMORY[0x1E4FBB550]);
    sub_1B6381688((uint64_t)v10, (uint64_t)v11, &qword_1EB9803E0, v2);
    if (v11[8] == 1)
    {
      uint64_t v3 = sub_1B6E32738();
      if (swift_conformsToProtocol2() ? v3 : 0)
      {
        uint64_t v5 = sub_1B6E32738();
        uint64_t result = swift_conformsToProtocol2();
        if (!result)
        {
          __break(1u);
          goto LABEL_15;
        }
        if (sub_1B62CA808(v5))
        {
          uint64_t v7 = sub_1B6E32738();
          uint64_t result = swift_conformsToProtocol2();
          if (result)
          {
            uint64_t v8 = sub_1B62CD84C(v7);
            sub_1B62CB508(*(void *)(v1 + 24), *(void *)(v1 + 24));
            if (v8 == v9) {
              return 0;
            }
            return *(unsigned __int8 *)(v1 + 40);
          }
LABEL_15:
          __break(1u);
          return result;
        }
      }
    }
  }
  return *(unsigned __int8 *)(v1 + 40);
}

uint64_t sub_1B62CD1B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2 - a1;
  if (a2 - a1 < 0
    || ((v6 = a4 + 112 * a1 + 32, unint64_t v7 = a3 + 112 * v5, v6 < v7) ? (v8 = v6 + 112 * v5 > a3) : (v8 = 0), v8))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v7;
  }
  return result;
}

uint64_t sub_1B62CD2A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (result && a2)
  {
    uint64_t v4 = (uint64_t *)(result + 8);
    while (1)
    {
      uint64_t v5 = v4 - 1;
      uint64_t v6 = *(v4 - 1);
      if (v6 == a3 || v4[1] == a3) {
        break;
      }
      v4 += 4;
      if (v5 + 4 == (uint64_t *)(result + 32 * a2)) {
        goto LABEL_9;
      }
    }
    uint64_t v8 = *v4;
    *a4 = v6;
    a4[1] = v8;
  }
  else
  {
LABEL_9:
    *a4 = 0;
    a4[1] = 0;
  }
  return result;
}

uint64_t sub_1B62CD2F0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v5 = v4;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v9 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v9 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v10 = (unsigned int *)(v9 + 12 * (int)result);
      sub_1B62CD3E0(*(void *)(*(void *)(v5 + 136) + 8 * (int)*v10 + 32), a2, *v10 | ((unint64_t)*((unsigned __int16 *)v10 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v10+ 2) << 32), v5, &v11);
      uint64_t result = v11;
      if (v11) {
        return sub_1B62CD444(v11, a3, a2);
      }
    }
  }
  *a4 = 0u;
  a4[1] = 0u;
  return result;
}

uint64_t sub_1B62CD3E0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, void *a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 56;
    while (*(void *)(v7 - 24) != a2)
    {
      v7 += 40;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v10 = v7 - 8;
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v8 = *(void *)(v10 + 8);
    if (v9 <= 1) {
      uint64_t v9 = 1;
    }
    *a5 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a3 + 32) + 128) + v8 + v9 * (a3 << 16 >> 48);
  }
  else
  {
LABEL_5:
    *a5 = v6;
  }
  return result;
}

uint64_t sub_1B62CD444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E329F8();
  if (swift_dynamicCastClass())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
    swift_retain();
    swift_getAtPartialKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
  }
  else
  {
    _OWORD v10[2] = 0;
    v10[3] = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E31948();
    v10[1] = a2;
    sub_1B6E32768();
    sub_1B6E32B18();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62CD618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = v3[3];
  uint64_t v9 = sub_1B62CD004(a1);
  uint64_t v10 = (v8 + v9 - 1) & -v9;
  v3[3] = v10 + sub_1B62CD84C(a1);
  uint64_t v11 = sub_1B62CD84C(a1);
  BOOL v12 = sub_1B62CA808(a1);
  uint64_t v13 = *v3;
  uint64_t v14 = *(void *)(*v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1B62CEF5C(0, v14 + 1, 1);
    uint64_t v13 = *v4;
  }
  uint64_t v28 = v14;
  unint64_t v17 = *(void *)(v13 + 16);
  unint64_t v16 = *(void *)(v13 + 24);
  if (v17 >= v16 >> 1)
  {
    sub_1B62CEF5C(v16 > 1, v17 + 1, 1);
    uint64_t v13 = *v4;
  }
  *(void *)(v13 + 16) = v17 + 1;
  uint64_t v18 = v13 + 40 * v17;
  *(void *)(v18 + 32) = a1;
  *(void *)(v18 + 40) = a2;
  *(void *)(v18 + 48) = v11;
  *(void *)(v18 + 56) = v10;
  BOOL v19 = v12;
  *(unsigned char *)(v18 + 64) = v12;
  *uint64_t v4 = v13;
  uint64_t result = sub_1B62CD84C(a1);
  if (result >= 1)
  {
    if (v12)
    {
      uint64_t v23 = v4[2];
      uint64_t v22 = v4 + 2;
      uint64_t v21 = v23;
    }
    else
    {
      uint64_t v24 = v4[1];
      uint64_t v22 = v4 + 1;
      uint64_t v21 = v24;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v22 = v21;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1B62CEF5C(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v21 = *v22;
    }
    unint64_t v26 = *(void *)(v21 + 16);
    unint64_t v25 = *(void *)(v21 + 24);
    if (v26 >= v25 >> 1)
    {
      uint64_t result = sub_1B62CEF5C(v25 > 1, v26 + 1, 1);
      uint64_t v21 = *v22;
    }
    *(void *)(v21 + 16) = v26 + 1;
    uint64_t v27 = v21 + 40 * v26;
    *(void *)(v27 + 32) = a1;
    *(void *)(v27 + 40) = a2;
    *(void *)(v27 + 48) = v11;
    *(void *)(v27 + 56) = v10;
    *(unsigned char *)(v27 + 64) = v19;
    *uint64_t v22 = v21;
  }
  *(void *)a3 = v28;
  *(void *)(a3 + 8) = a1;
  *(void *)(a3 + 16) = a2;
  *(void *)(a3 + 24) = v11;
  *(void *)(a3 + 32) = v10;
  *(unsigned char *)(a3 + 40) = v19;
  return result;
}

uint64_t sub_1B62CD7F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 - 8);
  if (*(void *)(v1 + 64)) {
    return *(void *)(v1 + 72);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B62CD850()
{
  uint64_t result = 0x7355736772416E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736772416E69;
      break;
    case 2:
      uint64_t result = 0x67724174754F6E69;
      break;
    case 3:
      uint64_t result = 0x6E49747069726373;
      break;
    default:
      return result;
  }
  return result;
}

__n128 sub_1B62CD8E4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v8 = *(__n128 *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 80);
  uint64_t v6 = *(void *)(*(void *)(*(void *)(*(void *)(a1 + 40) + 16) + 32) + 16) + 1;
  *(void *)(a2 + 48) = ecs_stack_allocator_allocate(*(void *)(a2 + 32), 48 * v6, 8);
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 64) = 0;
  __n128 result = v8;
  *(_OWORD *)a3 = v9;
  *(__n128 *)(a3 + 16) = v8;
  *(void *)(a3 + 32) = v5;
  return result;
}

uint64_t destroy for Bindings()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GraphScriptingConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s3VFX8BindingsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for MaterialRuntime(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v8;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for RenderGraph.Features(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1B62CDBDC(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = *v1;
    uint64_t v5 = (void *)(v2 + 56);
    while (*(v5 - 3) != a1)
    {
      v5 += 5;
      if (!--v3) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E32BE8();
    __break(1u);
  }
  return v4 + *v5;
}

uint64_t sub_1B62CDCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  sub_1B6381688((uint64_t)a6, (uint64_t)v41, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
  uint64_t v37 = v42;
  uint64_t v36 = v43;
  uint64_t v18 = sub_1B62C91B8(a1);
  if (v20) {
    return 0;
  }
  uint64_t v21 = v18;
  uint64_t v22 = v19;
  if (!a7)
  {
    sub_1B6381688((uint64_t)a6, (uint64_t)v46, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
    if (!v47) {
      return v21;
    }
    uint64_t v30 = *(void *)(v10 + 240) * a4;
    uint64_t v24 = ecs_stack_allocator_allocate(*(void *)(a10 + 32), v30, a5);
    sub_1B6381688((uint64_t)a6, (uint64_t)v44, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
    if (v45)
    {
      unint64_t v34 = (char *)v24 + v30;
      uint64_t v35 = a10;
      uint64_t v31 = *(void *)(v10 + 240);
      uint64_t v33 = *(void *)(v11 + 232);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B62CE09C(v21, (uint64_t)v24, v33, v31, 0, v37, v36);
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v26 = 0;
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v35 = a10;
  uint64_t v23 = a9 * a4;
  uint64_t v24 = ecs_stack_allocator_allocate(*(void *)(a10 + 32), v23, a5);
  sub_1B6381688((uint64_t)a6, (uint64_t)v46, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
  if (!v47)
  {
    uint64_t v25 = (uint64_t)v24 + v23;
    unint64_t v26 = a7;
    unint64_t v34 = (char *)v25;
    sub_1B62CEA48(a7, a8, a9, v21, v22, (uint64_t)v24, v25, a1);
LABEL_5:
    sub_1B6381688((uint64_t)a6, (uint64_t)v40, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
    swift_unownedRetainStrong();
    sub_1B62CE020(a6);
    swift_unownedRetain();
    swift_release();
    uint64_t v27 = (void *)swift_allocObject();
    void v27[2] = v26;
    v27[3] = a8;
    v27[4] = a9;
    sub_1B6381688((uint64_t)v40, (uint64_t)(v27 + 5), &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
    v27[13] = v21;
    v27[14] = v22;
    v27[17] = a3;
    v27[18] = v11;
    uint64_t v28 = *(void *)(v35 + 64);
    int v29 = (uint64_t *)(*(void *)(v35 + 48) + 48 * v28);
    v27[11] = v24;
    v27[12] = v34;
    v27[15] = a1;
    v27[16] = a2;
    *int v29 = a1;
    v29[1] = a2;
    v29[2] = a3;
    v29[3] = (uint64_t)v24;
    v29[4] = (uint64_t)sub_1B6345D24;
    v29[5] = (uint64_t)v27;
    *(void *)(v35 + 64) = v28 + 1;
    return (uint64_t)v24;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t *sub_1B62CE020(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B62CE058(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B62CE09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1B6E32738();
  uint64_t result = swift_conformsToProtocol2();
  if (!result)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v47 = a1;
  uint64_t v15 = sub_1B6E32738();
  uint64_t result = swift_conformsToProtocol2();
  if (!result)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v16 = sub_1B62CD84C(v15);
  uint64_t result = sub_1B62CB508(a7, a7);
  uint64_t v18 = v17;
  uint64_t v49 = v16;
  if (a5)
  {
    uint64_t v19 = a6;
    uint64_t v20 = a4 - a3;
    if (a4 == a3) {
      return result;
    }
    swift_retain();
    uint64_t v21 = v47 + v16 * a3;
    do
    {
      sub_1B62CD444(v21, v19, v13);
      sub_1B629E0D8((uint64_t)v50, a2, a7);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v50);
      a2 += v18;
      v21 += v16;
      --v20;
    }
    while (v20);
    return swift_release();
  }
  uint64_t v22 = a3;
  sub_1B6E32768();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = swift_retain();
  char v25 = MEMORY[0x1BA9B43C0](v24, KeyPath);
  swift_release();
  if (v25)
  {
    uint64_t v27 = a4 - v22;
    if (a4 != v22)
    {
      uint64_t v28 = (float32x4_t *)(a2 + v18 * v22);
      v29.i64[0] = 0x3F0000003F000000;
      v29.i64[1] = 0x3F0000003F000000;
      uint64_t v30 = (float32x4_t *)(v47 + v16 * v22);
      do
      {
        float32x4_t v31 = vmulq_f32(*v30, v29);
        v31.i32[3] = v26;
        *uint64_t v28 = v31;
        uint64_t v28 = (float32x4_t *)((char *)v28 + v18);
        uint64_t v30 = (float32x4_t *)((char *)v30 + v16);
        --v27;
      }
      while (v27);
    }
  }
  else
  {
    uint64_t v32 = swift_getKeyPath();
    char v33 = MEMORY[0x1BA9B43C0](a6, v32);
    swift_release();
    if (v33)
    {
      uint64_t v34 = a4 - v22;
      if (a4 != v22)
      {
        uint64_t v35 = (float32x2_t *)(a2 + v18 * v22);
        uint64_t v36 = (float32x2_t *)(v47 + v16 * v22);
        do
        {
          *uint64_t v35 = vmul_f32(*v36, (float32x2_t)0x3F0000003F000000);
          uint64_t v35 = (float32x2_t *)((char *)v35 + v18);
          uint64_t v36 = (float32x2_t *)((char *)v36 + v16);
          --v34;
        }
        while (v34);
      }
    }
    else
    {
      uint64_t v37 = swift_getKeyPath();
      char v38 = MEMORY[0x1BA9B43C0](a6, v37);
      swift_release();
      if (v38)
      {
        uint64_t v39 = a4 - v22;
        if (a4 != v22)
        {
          unsigned int v40 = (float *)(a2 + v18 * v22);
          long long v41 = (float *)(v47 + v49 * v22);
          do
          {
            *unsigned int v40 = *v41 * 0.5;
            unsigned int v40 = (float *)((char *)v40 + v18);
            long long v41 = (float *)((char *)v41 + v49);
            --v39;
          }
          while (v39);
        }
      }
      else
      {
        uint64_t v42 = a6;
        uint64_t v43 = a4 - v22;
        if (a4 != v22)
        {
          uint64_t v44 = a2 + v18 * v22;
          uint64_t v45 = v47 + v49 * v22;
          uint64_t v46 = v42;
          do
          {
            sub_1B62CD444(v45, v46, v13);
            sub_1B629E0D8((uint64_t)v50, v44, a7);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v50);
            v44 += v18;
            v45 += v49;
            --v43;
          }
          while (v43);
          return swift_release();
        }
      }
    }
  }

  return swift_release();
}

unint64_t *sub_1B62CE430(int8x16_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 63;
  uint64_t v6 = (a2 + 63) >> 6;
  if (a2 + 63 <= 127) {
    unint64_t v7 = 1;
  }
  else {
    unint64_t v7 = (a2 + 63) >> 6;
  }
  if (v7 < 4)
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
LABEL_9:
    unint64_t v14 = v7 - v9;
    uint64_t v15 = (int8x8_t *)a1 + v9;
    do
    {
      int8x8_t v16 = *v15++;
      uint8x8_t v17 = (uint8x8_t)vcnt_s8(v16);
      v17.i16[0] = vaddlv_u8(v17);
      v8 += v17.u32[0];
      --v14;
    }
    while (v14);
    goto LABEL_11;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v10 = a1 + 1;
  int64x2_t v11 = 0uLL;
  unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v13 = 0uLL;
  do
  {
    int64x2_t v11 = (int64x2_t)vpadalq_u32((uint64x2_t)v11, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(v10[-1]))));
    int64x2_t v13 = (int64x2_t)vpadalq_u32((uint64x2_t)v13, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*v10))));
    v10 += 2;
    v12 -= 4;
  }
  while (v12);
  uint64_t v8 = vaddvq_s64(vaddq_s64(v13, v11));
  if (v7 != v9) {
    goto LABEL_9;
  }
LABEL_11:
  uint64_t result = ecs_stack_allocator_allocate(a3, 8 * v8, 8);
  if (a2 >= 1)
  {
    uint64_t v19 = 0;
    unint64_t v20 = 0;
    char v21 = 0;
    for (uint64_t i = result; ; ++i)
    {
      unint64_t v23 = (unint64_t)a1->i64[v20] >> v21;
      if (!v23)
      {
        uint64_t v19 = v20 << 6;
        do
        {
          if (v5 < 128)
          {
            if (v20 < 0x7FFFFFFFFFFFFFFFLL) {
              return result;
            }
          }
          else if ((uint64_t)(v20 + 1) >= v6)
          {
            return result;
          }
          unint64_t v23 = a1->u64[v20 + 1];
          v19 += 64;
          ++v20;
        }
        while (!v23);
      }
      unint64_t v24 = __clz(__rbit64(v23)) + v19;
      *uint64_t i = v24;
      uint64_t v19 = v24 + 1;
      if ((uint64_t)(v24 + 1) >= a2) {
        break;
      }
      unint64_t v20 = v19 >> 6;
      char v21 = v19 & 0x3F;
    }
  }
  return result;
}

uint64_t sub_1B62CE5A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  if ((a4 & 0x8000000000000000) != 0 || HIDWORD(a4) || (unint64_t v6 = *a5, (*a5 & 0x8000000000000000) != 0) || HIDWORD(v6))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    *a5 = v6 + a4;
    *(_DWORD *)a6 = 0;
    *(_DWORD *)(a6 + 4) = a4;
    *(_DWORD *)(a6 + 8) = v6;
    *(void *)(a6 + 16) = a2;
    *(void *)(a6 + 24) = a3;
    *(void *)(a6 + 32) = a4;
    *(void *)(a6 + 40) = result;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TextureClient(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

__n128 initializeWithTake for ReplicationEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1B62CE6C8()
{
  return *v0 + 0x65676E615278;
}

unint64_t sub_1B62CE6E4()
{
  return sub_1B62CE6EC(*v0);
}

unint64_t sub_1B62CE6EC(char a1)
{
  unint64_t result = 1701080941;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000023;
      break;
    case 2:
    case 4:
    case 7:
      unint64_t result = 0x65746172656E6567;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x65676175676E616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B62CE7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t result = sub_1B62C91B8(a1);
  if (v23) {
    return 0;
  }
  uint64_t v43 = a3;
  uint64_t v44 = a8;
  if (a8)
  {
    uint64_t v45 = v22;
    uint64_t v24 = result;
    uint64_t v42 = a11;
    char v25 = ecs_stack_allocator_allocate(*(void *)(a11 + 32), a10 * a4, a5);
    uint64_t v26 = (uint64_t)v25 + a10 * a4;
    uint64_t v27 = a6;
    uint64_t v40 = v24;
    long long v41 = (char *)v26;
    uint64_t v39 = a9;
    if (a6)
    {
      uint64_t v28 = v44;
      uint64_t v29 = v27;
      sub_1B6660040(v24, v45, v44, a9, a10, (uint64_t)v25, v26, v27, a7);
      uint64_t v30 = v43;
      uint64_t v31 = a1;
    }
    else
    {
      uint64_t v28 = v44;
      uint64_t v35 = v24;
      uint64_t v31 = a1;
      uint64_t v29 = 0;
      sub_1B62CEA48(v44, a9, a10, v35, v45, (uint64_t)v25, v26, a1);
      uint64_t v30 = v43;
    }
  }
  else
  {
    if (!a6) {
      return result;
    }
    uint64_t v42 = a11;
    uint64_t v32 = result;
    uint64_t v29 = a6;
    uint64_t v33 = *(void *)(v11 + 240) * a4;
    uint64_t v34 = v22;
    uint64_t v39 = a9;
    char v25 = ecs_stack_allocator_allocate(*(void *)(a11 + 32), v33, a5);
    uint64_t v40 = v32;
    long long v41 = (char *)v25 + v33;
    uint64_t v45 = v34;
    (*(void (**)(uint64_t, uint64_t))(a7 + 40))(v32, v34);
    uint64_t v30 = v43;
    uint64_t v31 = a1;
    uint64_t v28 = 0;
  }
  v46[0] = v29;
  v46[1] = a7;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  uint64_t v36 = (void *)swift_allocObject();
  _OWORD v36[2] = v28;
  v36[3] = v39;
  v36[4] = a10;
  sub_1B6381688((uint64_t)v46, (uint64_t)(v36 + 5), (unint64_t *)&unk_1EB97E910, (uint64_t)&type metadata for PackedRewriter);
  v36[9] = v40;
  v36[10] = v45;
  v36[13] = v30;
  v36[14] = v12;
  uint64_t v37 = *(void *)(v42 + 64);
  char v38 = (uint64_t *)(*(void *)(v42 + 48) + 48 * v37);
  v36[7] = v25;
  v36[8] = v41;
  v36[11] = v31;
  v36[12] = a2;
  *char v38 = v31;
  v38[1] = a2;
  _OWORD v38[2] = v30;
  v38[3] = (uint64_t)v25;
  v38[4] = (uint64_t)sub_1B6A97C58;
  v38[5] = (uint64_t)v36;
  *(void *)(v42 + 64) = v37 + 1;
  return (uint64_t)v25;
}

uint64_t sub_1B62CEA48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_1B62CD034(a8);
  if (result >= 1 && a3 != 0)
  {
    uint64_t v15 = 0;
    uint64_t v16 = -1;
    uint64_t v17 = -1;
    do
    {
      uint64_t v19 = *a1++;
      uint64_t v18 = v19;
      if (v19 != v16)
      {
        uint64_t v20 = v16 - v17;
        if (v16 > v17)
        {
          uint64_t result = sub_1B62CEB54(a4, v17, a6, v15, v16 - v17, a8);
          v15 += v20;
        }
        uint64_t v17 = v18;
      }
      uint64_t v16 = v18 + 1;
      --a3;
    }
    while (a3);
    if (v16 > v17)
    {
      return sub_1B62CEB54(a4, v17, a6, v15, v16 - v17, a8);
    }
  }
  return result;
}

uint64_t sub_1B62CEB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x1F4184600](a1 + *(void *)(*(void *)(a6 - 8) + 72) * a2, a5, a3 + *(void *)(*(void *)(a6 - 8) + 72) * a4, a6);
}

uint64_t sub_1B62CEB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a1;
  if ((a3 & 0x100) != 0)
  {
    uint64_t v10 = sub_1B62CF0F0(a1);
    uint64_t v12 = v15;
    uint64_t v14 = -1;
    if ((a4 & 1) == 0)
    {
      uint64_t v16 = 0;
      char v17 = 1;
      uint64_t v13 = -1;
      uint64_t v18 = *(void *)(v6 + 16);
      if (v18) {
        goto LABEL_17;
      }
      goto LABEL_44;
    }
    uint64_t v13 = -1;
    goto LABEL_16;
  }
  uint64_t v54 = a1;
  swift_bridgeObjectRetain();
  sub_1B62D0744(&v54);
  swift_bridgeObjectRelease();
  uint64_t v6 = v54;
  uint64_t v9 = sub_1B62CF0F0(v54);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  if (a3) {
    uint64_t v13 = v9;
  }
  else {
    uint64_t v13 = a2;
  }
  if (a4)
  {
    if (v9 + 4 < 1) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = v13 / (v9 + 4);
    }
LABEL_16:
    char v17 = 0;
    uint64_t v16 = 4 * v14;
    uint64_t v18 = *(void *)(v6 + 16);
    if (v18) {
      goto LABEL_17;
    }
LABEL_44:
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t v39 = MEMORY[0x1E4FBC860];
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_45;
  }
  if (v9 >= 1)
  {
    uint64_t v16 = 0;
    char v17 = 1;
    uint64_t v14 = v13 / v9;
    uint64_t v18 = *(void *)(v6 + 16);
    if (v18) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
  uint64_t v16 = 0;
  char v17 = 1;
  uint64_t v14 = v13;
  uint64_t v18 = *(void *)(v6 + 16);
  if (!v18) {
    goto LABEL_44;
  }
LABEL_17:
  char v42 = v17;
  uint64_t v49 = v14;
  uint64_t v43 = v13;
  uint64_t v44 = v12;
  uint64_t v45 = v10;
  uint64_t v46 = a5;
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  uint64_t v20 = (uint64_t *)(v6 + 40);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v47 = MEMORY[0x1E4FBC860];
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v22 = v16;
  do
  {
    uint64_t v27 = *(v20 - 1);
    uint64_t v28 = sub_1B62CD84C(v27);
    uint64_t v29 = sub_1B62CD004(v27);
    if (v28 <= 0)
    {
      uint64_t v30 = v22;
    }
    else
    {
      uint64_t v19 = (v29 - 1 + v19) & -v29;
      uint64_t v30 = (v29 - 1 + v22) & -v29;
    }
    uint64_t v52 = *v20;
    uint64_t v53 = *(v20 - 1);
    BOOL v31 = sub_1B62CA808(v27);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B62CEF5C(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v21 = v54;
    }
    unint64_t v34 = *(void *)(v21 + 16);
    unint64_t v33 = *(void *)(v21 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1B62CEF5C(v33 > 1, v34 + 1, 1);
      uint64_t v21 = v54;
    }
    *(void *)(v21 + 16) = v34 + 1;
    uint64_t v35 = v21 + 40 * v34;
    *(void *)(v35 + 32) = v53;
    *(void *)(v35 + 40) = v52;
    *(void *)(v35 + 48) = v28;
    *(void *)(v35 + 56) = v30;
    BOOL v36 = v31;
    *(unsigned char *)(v35 + 64) = v31;
    v19 += v28;
    if ((a3 & 0x100) != 0) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = v30 + v28 * v49;
    }
    if (v28 >= 1)
    {
      uint64_t v51 = v22;
      if (v31)
      {
        uint64_t v38 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B62CEF5C(0, *(void *)(v47 + 16) + 1, 1);
          uint64_t v38 = v47;
        }
        unint64_t v24 = *(void *)(v38 + 16);
        unint64_t v23 = *(void *)(v38 + 24);
        unint64_t v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          sub_1B62CEF5C(v23 > 1, v24 + 1, 1);
          uint64_t v38 = v47;
        }
        uint64_t v47 = v38;
      }
      else
      {
        uint64_t v38 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B62CEF5C(0, *(void *)(v48 + 16) + 1, 1);
          uint64_t v38 = v48;
        }
        unint64_t v24 = *(void *)(v38 + 16);
        unint64_t v37 = *(void *)(v38 + 24);
        unint64_t v25 = v24 + 1;
        if (v24 >= v37 >> 1)
        {
          sub_1B62CEF5C(v37 > 1, v24 + 1, 1);
          uint64_t v38 = v48;
        }
        else
        {
          uint64_t v48 = v38;
        }
      }
      *(void *)(v38 + 16) = v25;
      uint64_t v26 = v38 + 40 * v24;
      uint64_t v22 = v51;
      *(void *)(v26 + 32) = v53;
      *(void *)(v26 + 40) = v52;
      *(void *)(v26 + 48) = v28;
      *(void *)(v26 + 56) = v30;
      *(unsigned char *)(v26 + 64) = v36;
    }
    v20 += 2;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  a5 = v46;
  uint64_t v39 = v47;
  uint64_t v12 = v44;
  uint64_t v10 = v45;
  uint64_t v13 = v43;
  uint64_t v40 = v48;
  uint64_t v14 = v49;
  char v17 = v42;
LABEL_45:
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a5 = v21;
  *(void *)(a5 + 8) = v40;
  *(void *)(a5 + 16) = v39;
  *(void *)(a5 + 24) = v10;
  *(void *)(a5 + 32) = v12;
  *(void *)(a5 + 40) = v14;
  *(void *)(a5 + 48) = v13;
  *(void *)(a5 + 56) = 0;
  *(unsigned char *)(a5 + 64) = v17;
  return result;
}

uint64_t sub_1B62CEF5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B62CEF7C(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_1B62CEF7C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62D9BF8(0, (unint64_t *)&unk_1EB980AE8, (uint64_t)&type metadata for ComponentStorageLayout.ComponentLayout, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 40 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v14 < &v13[v15] && v13 < &v14[v15])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v13, v14, v15);
  }
  swift_release();
  return (uint64_t)v11;
}

uint64_t sub_1B62CF0F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = a1 + 40;
    uint64_t v4 = 1;
    do
    {
      uint64_t v5 = *(void *)(v3 - 8);
      uint64_t v6 = sub_1B62CD84C(v5);
      uint64_t v7 = sub_1B62CD004(v5);
      if (v7 > v4) {
        uint64_t v4 = v7;
      }
      uint64_t v8 = (v2 + v7 - 1) & -v7;
      if (v6 <= 0) {
        uint64_t v8 = v2;
      }
      uint64_t v2 = v8 + v6;
      v3 += 16;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 1;
  }
  return (v4 + v2 - 1) & -v4;
}

__n128 initializeWithTake for EmitterDescription(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void sub_1B62CF1CC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62CF218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  int64_t v10 = (void *)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (v8 + 17) & 0xFFFFFFFFFFFFFFF8;
  size_t v12 = *(void **)v11;
  v11 += 15;
  id v13 = v12;
  *int64_t v10 = v12;
  uint64_t v14 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *(void *)(v11 & 0xFFFFFFFFFFFFFFF8);
  v14[1] = *(void *)((v11 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1B62CF300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
    *(void *)unint64_t v10 = v12;
    *(unsigned char *)(v10 + 9) = *(unsigned char *)(v11 + 9);
    id v13 = (void *)((v10 + 17) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v14 = (v11 + 17) & 0xFFFFFFFFFFFFFFF8;
    size_t v15 = *(void **)v14;
    v14 += 15;
    id v16 = v15;
    *id v13 = v15;
    char v17 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v17 = *(void *)(v14 & 0xFFFFFFFFFFFFFFF8);
    v17[1] = *(void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8);
    *(void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B62CF47C(void *a1)
{
  return sub_1B62CF488(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B62CF488(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1B62C14BC(a1, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  uint64_t v9 = *(void *)(a2 + 32);
  swift_retain();
  uint64_t v10 = sub_1B62DE2C8(v9);
  uint64_t result = swift_release();
  if (v8 == v10) {
    return sub_1B63BAF34(a4);
  }
  return result;
}

uint64_t *sub_1B62CF52C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v11 = *(void *)(v9 + 64) + 1;
  }
  unsigned int v12 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  BOOL v13 = v12 <= 7 && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) == 0;
  if (v13
    && (unint64_t v14 = (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8,
        uint64_t v15 = v10 + 9,
        ((v10
        + 9
        + ((((((((v14 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)) & ~v10)
      + v11 <= 0x18))
  {
    uint64_t v16 = AssociatedTypeWitness;
    size_t v44 = v11;
    uint64_t v46 = ~v10;
    unint64_t v17 = v14 + 8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v47 = a1;
    unint64_t v18 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)v19;
    *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
    *(void *)unint64_t v18 = v20;
    *(unsigned char *)(v18 + 9) = *(unsigned char *)(v19 + 9);
    uint64_t v21 = (void *)((v18 + 17) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v22 = (v19 + 17) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = *(void **)v22;
    v22 += 15;
    id v24 = v23;
    *uint64_t v21 = v23;
    unint64_t v25 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v25 = *(void *)(v22 & 0xFFFFFFFFFFFFFFF8);
    v25[1] = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
    *(void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v22 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (void *)(((unint64_t)a2 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)(((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v27 = *v26;
    uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v29 = *v28;
    uint64_t v30 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
    BOOL v31 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v30 = *v31;
    unint64_t v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = v16;
    uint64_t v35 = *(void **)v33;
    *(void *)unint64_t v32 = *(void *)v33;
    *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
    unint64_t v36 = ((unint64_t)v30 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = ((unint64_t)v31 + 31) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v33) = *(unsigned char *)(v37 + 8);
    *(void *)unint64_t v36 = *(void *)v37;
    *(unsigned char *)(v36 + 8) = v33;
    uint64_t v45 = (void *)((v15 + v36) & v46);
    uint64_t v38 = (const void *)((v15 + v37) & v46);
    uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v40 = v35;
    if (v39(v38, 1, v34))
    {
      memcpy(v45, v38, v44);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v45, v38, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v45, 0, 1, v34);
    }
    return v47;
  }
  else
  {
    uint64_t v41 = *a2;
    *a1 = *a2;
    uint64_t v42 = v41 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7));
    swift_retain();
  }
  return (uint64_t *)v42;
}

float32x4_t *sub_1B62CF8B4(void *a1, uint64_t a2, char a3, unint64_t a4, char a5, uint64_t a6)
{
  if (a6)
  {
    uint64_t v11 = (float32x4_t *)ecs_stack_allocator_allocate(*(void *)(a6 + 32), 16, 16);
    switch(a3)
    {
      case 1:
        sub_1B62E9D50(a1, (uint64_t)&v109);
        sub_1B6381688((uint64_t)&v109, (uint64_t)&v114, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
        if (v118) {
          return 0;
        }
        float32x4_t v90 = v114;
        float32x4_t v92 = v115;
        float32x4_t v94 = v116;
        float32x4_t v96 = v117;
        sub_1B6E32738();
        if (!swift_conformsToProtocol2()) {
          goto LABEL_56;
        }
        if (swift_dynamicCastMetatype()) {
          goto LABEL_22;
        }
        if (swift_dynamicCastMetatype()) {
          goto LABEL_24;
        }
        if (swift_dynamicCastMetatype()) {
          goto LABEL_33;
        }
        goto LABEL_59;
      case 2:
        sub_1B62E9D50(a1, (uint64_t)&v100);
        sub_1B6381688((uint64_t)&v100, (uint64_t)&v114, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
        if (v118) {
          return 0;
        }
        float32x4_t v90 = v114;
        float32x4_t v92 = v115;
        float32x4_t v94 = v116;
        float32x4_t v96 = v117;
        uint64_t v23 = swift_retain();
        sub_1B6335480(v23, v107);
        swift_release();
        sub_1B62D03E8((uint64_t)v107, (uint64_t)&v109, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
        if ((v113 & 1) == 0)
        {
          float32x4_t v90 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v109, v90.f32[0]), v110, *(float32x2_t *)v90.f32, 1), v111, v90, 2), v112, v90, 3);
          float32x4_t v92 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v109, v92.f32[0]), v110, *(float32x2_t *)v92.f32, 1), v111, v92, 2), v112, v92, 3);
          float32x4_t v94 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v109, v94.f32[0]), v110, *(float32x2_t *)v94.f32, 1), v111, v94, 2), v112, v94, 3);
          float32x4_t v96 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v109, v96.f32[0]), v110, *(float32x2_t *)v96.f32, 1), v111, v96, 2), v112, v96, 3);
        }
        sub_1B6E32738();
        if (swift_conformsToProtocol2())
        {
          if (swift_dynamicCastMetatype())
          {
LABEL_22:
            float32x4_t v24 = v96;
            goto LABEL_53;
          }
          if (!swift_dynamicCastMetatype())
          {
            if (!swift_dynamicCastMetatype())
            {
              sub_1B6E328C8();
              swift_bridgeObjectRelease();
              v99.columns[0].i64[0] = 0xD000000000000018;
              v99.columns[0].i64[1] = 0x80000001B6F45A80;
              sub_1B6E33B48();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              goto LABEL_58;
            }
LABEL_33:
            float32x4_t v35 = v90;
            float32x4_t v34 = v92;
            int32x4_t v36 = (int32x4_t)vmulq_f32(v35, v35);
            int32x4_t v37 = (int32x4_t)vmulq_f32(v34, v34);
            float32x4_t v38 = v94;
            goto LABEL_34;
          }
LABEL_24:
          float32x4_t v25 = vmulq_f32(v90, v90);
          float32x4_t v26 = vmulq_f32(v92, v92);
          float v27 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v25, 2), vaddq_f32(v25, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v25.f32, 1))).f32[0]);
          float v28 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v26, 2), vaddq_f32(v26, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v26.f32, 1))).f32[0]);
          float32x4_t v29 = v94;
LABEL_25:
          float32x4_t v30 = vmulq_f32(v29, v29);
          v24.i64[0] = __PAIR64__(LODWORD(v28), LODWORD(v27));
          v24.i64[1] = COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0]));
          goto LABEL_53;
        }
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        break;
      case 3:
      case 4:
        goto LABEL_58;
      default:
        if (a5) {
          return 0;
        }
        sub_1B62E9D50(a1, (uint64_t)v98);
        sub_1B6381688((uint64_t)v98, (uint64_t)&v114, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
        if (v118) {
          return 0;
        }
        float32x4_t v82 = v114;
        float32x4_t v84 = v115;
        float32x4_t v85 = v116;
        float32x4_t v86 = v117;
        if (a4 != 0xFFFFFFFF)
        {
          swift_retain();
          unint64_t v12 = sub_1B62D054C(a4);
          char v14 = v13;
          swift_release();
          if ((v14 & 1) == 0)
          {
            sub_1B6311B64(v12, v6, &v99);
            uint64_t v16 = v99.columns[0].i64[1];
            uint64_t v15 = v99.columns[0].i64[0];
            uint64_t v17 = v99.columns[1].i64[1];
            uint64_t v18 = v99.columns[1].i64[0];
            uint64_t v19 = v99.columns[2].i64[1];
            uint64_t v20 = v99.columns[2].i64[0];
            uint64_t v88 = v99.columns[3].i64[1];
            uint64_t v21 = v99.columns[3].i64[0];
            sub_1B62D03E8((uint64_t)&v99, (uint64_t)&v109, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
            if ((v113 & 1) == 0) {
              goto LABEL_26;
            }
          }
        }
        uint64_t v22 = swift_retain();
        sub_1B6335480(v22, &v100);
        uint64_t v16 = v100.i64[1];
        uint64_t v15 = v100.i64[0];
        uint64_t v18 = v101;
        uint64_t v17 = v102;
        uint64_t v20 = v103;
        uint64_t v19 = v104;
        uint64_t v21 = v105;
        uint64_t v88 = v106;
        swift_release();
        sub_1B62D03E8((uint64_t)&v100, (uint64_t)v107, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
        if (v108)
        {
          float32x4_t v89 = (float32x4_t)xmmword_1B6E4F370;
          float32x4_t v91 = (float32x4_t)xmmword_1B6E4F2E0;
          float32x4_t v93 = (float32x4_t)xmmword_1B6E4F320;
          float32x4_t v95 = (float32x4_t)xmmword_1B6E4F300;
        }
        else
        {
LABEL_26:
          v31.i64[0] = v15;
          v31.i64[1] = v16;
          float32x4_t v95 = v31;
          v31.i64[0] = v18;
          v31.i64[1] = v17;
          float32x4_t v93 = v31;
          v31.i64[0] = v20;
          v31.i64[1] = v19;
          float32x4_t v91 = v31;
          v31.i64[0] = v21;
          v31.i64[1] = v88;
          float32x4_t v89 = v31;
        }
        sub_1B6E32738();
        if (!swift_conformsToProtocol2()) {
          goto LABEL_57;
        }
        if (swift_dynamicCastMetatype())
        {
          float32x4_t v24 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v95, v86.f32[0]), v93, *(float32x2_t *)v86.f32, 1), v91, v86, 2), v89, v86, 3);
          goto LABEL_53;
        }
        float32x4_t v83 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v95, v82.f32[0]), v93, *(float32x2_t *)v82.f32, 1), v91, v82, 2), v89, v82, 3);
        float32x4_t v87 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v95, v84.f32[0]), v93, *(float32x2_t *)v84.f32, 1), v91, v84, 2), v89, v84, 3);
        float32x4_t v97 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v95, v85.f32[0]), v93, *(float32x2_t *)v85.f32, 1), v91, v85, 2), v89, v85, 3);
        if (swift_dynamicCastMetatype())
        {
          float32x4_t v32 = vmulq_f32(v83, v83);
          float32x4_t v33 = vmulq_f32(v87, v87);
          float v27 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).f32[0]);
          float v28 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v33, 2), vaddq_f32(v33, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v33.f32, 1))).f32[0]);
          float32x4_t v29 = v97;
          goto LABEL_25;
        }
        if (swift_dynamicCastMetatype())
        {
          float32x4_t v35 = v83;
          int32x4_t v36 = (int32x4_t)vmulq_f32(v35, v35);
          float32x4_t v34 = v87;
          int32x4_t v37 = (int32x4_t)vmulq_f32(v34, v34);
          float32x4_t v38 = v97;
LABEL_34:
          int32x4_t v39 = (int32x4_t)vmulq_f32(v38, v38);
          int32x4_t v40 = vzip2q_s32(v36, v39);
          float32x4_t v41 = (float32x4_t)vzip1q_s32(vzip1q_s32(v36, v39), v37);
          float32x4_t v42 = (float32x4_t)vtrn2q_s32(v36, v37);
          v42.i32[2] = v39.i32[1];
          float32x4_t v43 = vaddq_f32((float32x4_t)vzip1q_s32(v40, vdupq_laneq_s32(v37, 2)), vaddq_f32(v41, v42));
          v44.i64[0] = 0x80000000800000;
          v44.i64[1] = 0x80000000800000;
          int32x4_t v45 = vcgeq_f32(v44, v43);
          v43.i32[3] = 0;
          float32x4_t v46 = vrsqrteq_f32(v43);
          float32x4_t v47 = vmulq_f32(v46, vrsqrtsq_f32(v43, vmulq_f32(v46, v46)));
          int32x4_t v48 = v45;
          v48.i32[3] = 0;
          float32x4_t v49 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v48), (int8x16_t)v43, (int8x16_t)vmulq_f32(v47, vrsqrtsq_f32(v43, vmulq_f32(v47, v47))));
          float32x4_t v50 = vmulq_n_f32(v35, v49.f32[0]);
          float32x4_t v51 = vmulq_lane_f32(v34, *(float32x2_t *)v49.f32, 1);
          float32x4_t v52 = vmulq_laneq_f32(v38, v49, 2);
          int8x16_t v53 = (int8x16_t)vuzp1q_s32((int32x4_t)v52, (int32x4_t)v52);
          int8x16_t v54 = (int8x16_t)vuzp1q_s32((int32x4_t)v51, (int32x4_t)v51);
          int32x4_t v55 = (int32x4_t)v50;
          if (v45.i32[0])
          {
            int32x4_t v56 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v53, (int8x16_t)v52, 0xCuLL), vnegq_f32(v51)), v52, (float32x4_t)vextq_s8(v54, (int8x16_t)v51, 0xCuLL));
            int32x4_t v55 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v56, v56), (int8x16_t)v56, 0xCuLL);
          }
          int8x16_t v57 = (int8x16_t)vuzp1q_s32((int32x4_t)v50, (int32x4_t)v50);
          float32x4_t v58 = v51;
          if (v45.i32[1])
          {
            int32x4_t v59 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v57, (int8x16_t)v50, 0xCuLL), vnegq_f32(v52)), v50, (float32x4_t)vextq_s8(v53, (int8x16_t)v52, 0xCuLL));
            float32x4_t v58 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v59, v59), (int8x16_t)v59, 0xCuLL);
          }
          if (v45.i32[2])
          {
            int32x4_t v60 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v54, (int8x16_t)v51, 0xCuLL), vnegq_f32(v50)), v51, (float32x4_t)vextq_s8(v57, (int8x16_t)v50, 0xCuLL));
            float32x4_t v52 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v60, v60), (int8x16_t)v60, 0xCuLL);
          }
          float v61 = (float)(*(float *)v55.i32 + v58.f32[1]) + v52.f32[2];
          if (v61 <= 0.0)
          {
            if (*(float *)v55.i32 >= v58.f32[1] && *(float *)v55.i32 >= v52.f32[2])
            {
              float v70 = sqrtf((float)((float)(*(float *)v55.i32 + 1.0) - v58.f32[1]) - v52.f32[2]);
              float32x2_t v71 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v58.f32, 0);
              float32x2_t v72 = vadd_f32(*(float32x2_t *)v55.i8, v71);
              v71.f32[0] = v70;
              v73.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v55.u32[1], LODWORD(v70)), v71).u32[0];
              v73.i32[1] = v72.i32[1];
              float32x2_t v74 = (float32x2_t)vzip2q_s32(v55, (int32x4_t)v58).u64[0];
              LODWORD(v75) = vadd_f32(v74, *(float32x2_t *)v52.f32).u32[0];
              HIDWORD(v75) = vsub_f32(v74, *(float32x2_t *)&v52).i32[1];
              v73.i64[1] = v75;
              float32x4_t v24 = vmulq_n_f32(v73, 0.5 / v70);
              goto LABEL_53;
            }
            if (v58.f32[1] <= v52.f32[2])
            {
              float32x2_t v76 = (float32x2_t)vzip2q_s32(v55, (int32x4_t)v58).u64[0];
              float32x2_t v77 = (float32x2_t)__PAIR64__(v55.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v52.f32[2] + 1.0) - *(float *)v55.i32) - v58.f32[1])));
              float32x2_t v78 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v58.f32, 0);
              float32x2_t v79 = vsub_f32(*(float32x2_t *)v55.i8, v78);
              v78.i32[0] = v77.i32[0];
              v78.i32[0] = vmul_f32(v77, v78).u32[0];
              v78.i32[1] = v79.i32[1];
              *(float32x2_t *)v80.f32 = vadd_f32(v76, *(float32x2_t *)v52.f32);
              *(float32x2_t *)&v80.u32[2] = v78;
              float32x4_t v24 = vmulq_n_f32(v80, 0.5 / v77.f32[0]);
              goto LABEL_53;
            }
            float v62 = sqrtf((float)((float)(v58.f32[1] + 1.0) - *(float *)v55.i32) - v52.f32[2]);
            int8x16_t v67 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v55.i8, 1), v58);
            *(int32x2_t *)v58.f32 = vdup_laneq_s32((int32x4_t)v58, 2);
            float32x2_t v68 = vadd_f32(*(float32x2_t *)v58.f32, *(float32x2_t *)v52.f32);
            v58.f32[0] = v62;
            v58.i32[0] = vmul_f32(*(float32x2_t *)v58.f32, (float32x2_t)__PAIR64__(v52.u32[1], LODWORD(v62))).u32[0];
            v58.i32[1] = v68.i32[1];
            unsigned __int32 v69 = vsubq_f32(v52, (float32x4_t)vdupq_laneq_s32(v55, 2)).u32[0];
            float32x4_t v65 = (float32x4_t)vextq_s8(vextq_s8(v67, v67, 4uLL), (int8x16_t)v58, 0xCuLL);
            v65.i32[3] = v69;
          }
          else
          {
            float v62 = sqrtf(v61 + 1.0);
            float32x4_t v63 = (float32x4_t)vzip2q_s32((int32x4_t)v58, vuzp1q_s32((int32x4_t)v58, (int32x4_t)v52));
            v63.i32[2] = v55.i32[1];
            float32x4_t v64 = (float32x4_t)vtrn2q_s32((int32x4_t)v52, vzip2q_s32((int32x4_t)v52, v55));
            v64.i32[2] = v58.i32[0];
            float32x4_t v65 = vsubq_f32(v63, v64);
            v63.f32[3] = v62;
            v64.f32[3] = v62;
            v65.i32[3] = vmulq_f32(v63, v64).i32[3];
          }
          float32x4_t v24 = vmulq_n_f32(v65, 0.5 / v62);
LABEL_53:
          *uint64_t v11 = v24;
          return v11;
        }
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        sub_1B6E33B48();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        break;
    }
    while (1)
    {
LABEL_58:
      sub_1B6E32BE8();
      __break(1u);
LABEL_59:
      v107[0].i64[0] = 0;
      v107[0].i64[1] = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      v107[0].i64[0] = 0xD000000000000018;
      v107[0].i64[1] = 0x80000001B6F45A80;
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_1B62D02FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B62F927C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D037C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1B62F6F28(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D03E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B62D04E8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D0468(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B62D2E40(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B62D04E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B62D054C(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Parent; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B62D062C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 initializeWithCopy for ParticleBoxCollider(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for TextureCPURuntime.Slice(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

uint64_t initializeWithCopy for ParticleColorInit(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

__n128 initializeWithCopy for ParticleSpawnState(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_1B62D0744(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B62D07B0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1B62D07DC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B62D07B0(uint64_t a1)
{
  return sub_1B62D07C4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B62D07C4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1B637EDB8(a1, a2, a3, a4, (void (*)(void))sub_1B636E080);
}

uint64_t sub_1B62D07DC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v4)
  {
    if (v4) {
      return sub_1B637F4B4(0, v4, 1, a1);
    }
    return result;
  }
  uint64_t v72 = result;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  int8x16_t v67 = a1;
  if (v4 >= 2)
  {
    uint64_t v7 = v6 >> 1;
    sub_1B6642FC0();
    uint64_t v8 = sub_1B6E31C98();
    *(void *)(v8 + 16) = v7;
    uint64_t v70 = v8;
    uint64_t v9 = v8 + 32;
    goto LABEL_12;
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  float32x2_t v78 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if (v4 == 1)
  {
    uint64_t v70 = MEMORY[0x1E4FBC860];
    uint64_t v9 = MEMORY[0x1E4FBC860] + 32;
LABEL_12:
    uint64_t v11 = 0;
    uint64_t v68 = *a1 + 40;
    uint64_t v79 = *a1;
    uint64_t v69 = *a1 - 16;
    unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
    float32x2_t v78 = (char *)v9;
    uint64_t v75 = v4;
    do
    {
      uint64_t v14 = v11++;
      if (v11 < v4)
      {
        uint64_t v15 = (uint64_t *)(v79 + 16 * v14);
        uint64_t v16 = *v15;
        uint64_t v17 = v15[1];
        uint64_t v73 = (*(uint64_t (**)(void))(*(void *)(v79 + 16 * v11 + 8) + 72))();
        uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 72))(v16, v17);
        uint64_t v11 = v14 + 2;
        if (v14 + 2 < v4)
        {
          uint64_t v76 = v14;
          uint64_t v19 = v68 + 16 * v14;
          while (1)
          {
            uint64_t v20 = *(void *)(v19 - 24);
            uint64_t v21 = *(void *)(v19 - 16);
            uint64_t v22 = (*(uint64_t (**)(void))(*(void *)v19 + 72))();
            if (v73 < v18 == v22 >= (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72))(v20, v21)) {
              break;
            }
            ++v11;
            v19 += 16;
            uint64_t v4 = v75;
            if (v75 == v11)
            {
              uint64_t v11 = v75;
              goto LABEL_22;
            }
          }
          uint64_t v4 = v75;
LABEL_22:
          uint64_t v14 = v76;
        }
        if (v73 < v18 && v14 < v11)
        {
          uint64_t v23 = (long long *)(v69 + 16 * v11);
          uint64_t v24 = v11;
          uint64_t v25 = v14;
          float32x4_t v26 = (long long *)(v79 + 16 * v14);
          do
          {
            if (v25 != --v24)
            {
              long long v27 = *v26;
              *float32x4_t v26 = *v23;
              *uint64_t v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
      if (v11 < v4 && v11 - v14 < v72)
      {
        uint64_t v77 = v14;
        if (v14 + v72 >= v4) {
          uint64_t v28 = v4;
        }
        else {
          uint64_t v28 = v14 + v72;
        }
        if (v11 != v28)
        {
          float32x2_t v71 = v12;
          uint64_t v74 = v2;
          uint64_t v29 = v69 + 16 * v11;
          do
          {
            long long v30 = *(_OWORD *)(v79 + 16 * v11);
            uint64_t v31 = v77;
            uint64_t v32 = v29;
            do
            {
              uint64_t v33 = *(void *)v32;
              uint64_t v34 = *(void *)(v32 + 8);
              uint64_t v35 = (*(uint64_t (**)(void))(*((void *)&v30 + 1) + 72))();
              if (v35 >= (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 72))(v33, v34)) {
                break;
              }
              long long v36 = *(_OWORD *)v32;
              long long v30 = *(_OWORD *)(v32 + 16);
              *(_OWORD *)uint64_t v32 = v30;
              *(_OWORD *)(v32 + 16) = v36;
              v32 -= 16;
              ++v31;
            }
            while (v11 != v31);
            ++v11;
            v29 += 16;
          }
          while (v11 != v28);
          uint64_t v11 = v28;
          uint64_t v2 = v74;
          unint64_t v12 = v71;
        }
        uint64_t v14 = v77;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v12 = sub_1B62BD890(0, *((void *)v12 + 2) + 1, 1, v12);
      }
      unint64_t v38 = *((void *)v12 + 2);
      unint64_t v37 = *((void *)v12 + 3);
      unint64_t v13 = v38 + 1;
      if (v38 >= v37 >> 1) {
        unint64_t v12 = sub_1B62BD890(v37 > 1, v38 + 1, 1, v12);
      }
      *((void *)v12 + 2) = v13;
      int32x4_t v39 = v12 + 32;
      int32x4_t v40 = &v12[16 * v38 + 32];
      *(void *)int32x4_t v40 = v14;
      *((void *)v40 + 1) = v11;
      if (v38)
      {
        while (1)
        {
          uint64_t v41 = v13 - 1;
          if (v13 >= 4)
          {
            float32x4_t v46 = &v39[16 * v13];
            uint64_t v47 = *((void *)v46 - 7) - *((void *)v46 - 8);
            uint64_t v44 = *((void *)v46 - 5) - *((void *)v46 - 6);
            uint64_t v45 = v13 - 2;
            int32x4_t v48 = &v39[16 * v13 - 32];
            uint64_t v42 = *(void *)v48;
            uint64_t v43 = *((void *)v48 + 1);
            if (v44 - v42 + v43 >= v47)
            {
              BOOL v51 = v44 < *(void *)&v39[16 * v41 + 8] - *(void *)&v39[16 * v41];
              goto LABEL_58;
            }
          }
          else
          {
            if (v13 != 3)
            {
              uint64_t v49 = *(void *)&v39[16 * v13 - 24] - *(void *)&v39[16 * v13 - 32];
              uint64_t v50 = *(void *)&v39[16 * v41 + 8] - *(void *)&v39[16 * v41];
LABEL_55:
              if (v50 < v49) {
                goto LABEL_14;
              }
              goto LABEL_60;
            }
            uint64_t v42 = *((void *)v12 + 6);
            uint64_t v43 = *((void *)v12 + 7);
            uint64_t v44 = *((void *)v12 + 5) - *((void *)v12 + 4);
            uint64_t v45 = 1;
          }
          uint64_t v49 = v43 - v42;
          uint64_t v50 = *(void *)&v39[16 * v41 + 8] - *(void *)&v39[16 * v41];
          if (v49 + v50 < v44) {
            goto LABEL_55;
          }
          BOOL v51 = v44 < v50;
LABEL_58:
          if (v51) {
            uint64_t v41 = v45;
          }
LABEL_60:
          float32x4_t v52 = v12;
          int8x16_t v53 = &v39[16 * v41 - 16];
          uint64_t v54 = *(void *)v53;
          int32x4_t v55 = &v39[16 * v41];
          uint64_t v56 = *((void *)v55 + 1);
          sub_1B6D666D8((char *)(v79 + 16 * *(void *)v53), (char *)(v79 + 16 * *(void *)v55), v79 + 16 * v56, v78);
          if (v2) {
            goto LABEL_71;
          }
          *(void *)int8x16_t v53 = v54;
          *((void *)v53 + 1) = v56;
          unint64_t v12 = v52;
          unint64_t v57 = *((void *)v52 + 2);
          unint64_t v13 = v57 - 1;
          memmove(&v39[16 * v41], v55 + 16, 16 * (v57 - 1 - v41));
          *((void *)v52 + 2) = v57 - 1;
          if (v57 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v13 = 1;
LABEL_14:
      uint64_t v4 = v75;
    }
    while (v11 < v75);
    uint64_t v10 = v70;
    goto LABEL_65;
  }
  unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_65:
  uint64_t v70 = v10;
  if (v13 >= 2)
  {
    uint64_t v58 = *v67;
    do
    {
      int32x4_t v59 = v12 + 32;
      uint64_t v60 = (uint64_t)v12;
      uint64_t v61 = *(void *)&v12[16 * v13];
      float v62 = &v59[16 * v13 - 16];
      uint64_t v63 = *((void *)v62 + 1);
      sub_1B6D666D8((char *)(v58 + 16 * v61), (char *)(v58 + 16 * *(void *)v62), v58 + 16 * v63, v78);
      if (v2) {
        break;
      }
      float32x4_t v64 = (char *)v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        float32x4_t v64 = sub_1B6D671B8(v60);
      }
      float32x4_t v65 = &v64[16 * v13];
      *(void *)float32x4_t v65 = v61;
      *((void *)v65 + 1) = v63;
      unint64_t v66 = *((void *)v64 + 2);
      memmove(&v64[16 * v13 + 16], &v64[16 * v13 + 32], 16 * (v66 - v13));
      *((void *)v64 + 2) = v66 - 1;
      unint64_t v13 = v66 - 1;
      unint64_t v12 = v64;
    }
    while (v66 > 2);
  }
LABEL_71:
  swift_bridgeObjectRelease();
  *(void *)(v70 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62D0E28()
{
  uint64_t v1 = 0x73656D6974;
  if (*v0 != 1) {
    uint64_t v1 = 1701080941;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73726F6C6F63;
  }
}

uint64_t sub_1B62D0E74(uint64_t a1)
{
  return sub_1B62D0E8C(a1);
}

uint64_t sub_1B62D0E8C(uint64_t a1)
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (a1 == 0xFFFFFFFFLL) {
    return v8;
  }
  swift_retain();
  sub_1B62D2EA4(a1, (uint64_t)&v6);
  swift_release();
  uint64_t v2 = v7;
  if ((v7 & 0xFF00000000) == 0x200000000) {
    goto LABEL_8;
  }
  if ((v7 & 0x100000000) != 0)
  {
    sub_1B62E1844((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8);
    if ((v2 & 0x10000000000) == 0)
    {
LABEL_5:
      if ((v2 & 0x1000000000000) == 0) {
        goto LABEL_6;
      }
LABEL_14:
      sub_1B62E1844((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8);
      if ((v2 & 0x100000000000000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  else if ((v7 & 0x10000000000) == 0)
  {
    goto LABEL_5;
  }
  sub_1B62E1844((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08);
  if ((v2 & 0x1000000000000) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x100000000000000) != 0) {
LABEL_7:
  }
    sub_1B62E1844((uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA10A0);
LABEL_8:
  swift_retain();
  BOOL v3 = sub_1B62EC0CC((uint64_t)&type metadata for ParticleRespawn, (uint64_t)&off_1F0F697D8, a1);
  swift_release();
  if (v3)
  {
    swift_retain();
    BOOL v4 = sub_1B62EC0CC((uint64_t)&type metadata for ParticleSpawnOverDistance, (uint64_t)&off_1F0F95B80, a1);
    swift_release();
    if (v4) {
      sub_1B62E1844((uint64_t)&type metadata for ParticleParentID, (uint64_t)&off_1F0F6E0C8);
    }
  }
  return v8;
}

uint64_t sub_1B62D1010()
{
  uint64_t v1 = 1886216562;
  if (*v0 != 1) {
    uint64_t v1 = 0x4173746365666661;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7469736F706D6F63;
  }
}

void *sub_1B62D1074(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  BOOL v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *BOOL v3 = *a2;
    BOOL v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)a2 + v6;
    uint64_t v8 = (void *)(a1 + v6);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v9 = type metadata accessor for ScriptIndex();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v7, 1, v9))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(v8, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_1B6E31118();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v7, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v7, *(void *)(v10 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1B62D12A0(unint64_t a1)
{
  return sub_1B62D12B8(a1);
}

uint64_t sub_1B62D12B8(unint64_t a1)
{
  sub_1B62D1BAC(0, (unint64_t *)&qword_1EB97E718, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - v4;
  if (a1 == 0xFFFFFFFF)
  {
    sub_1B6339768(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  else
  {
    swift_retain();
    sub_1B62D3048(a1, (uint64_t)v5);
    swift_release();
    sub_1B6339768(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v8 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    {
      uint64_t v10 = *(void *)&v5[*(int *)(v8 + 60)];
      sub_1B62D19E4(v10);
      sub_1B6339544((uint64_t)v5, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
      uint64_t v9 = sub_1B62D1A28(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  sub_1B6907358((uint64_t)v5, (unint64_t *)&qword_1EB97E718, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B62D151C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B68FE864);
}

void *sub_1B62D1530(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)a2 + v7;
    uint64_t v9 = (void *)(a1 + v7);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v10 = type metadata accessor for ScriptIndex();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v8, 1, v10))
    {
      sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
      memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v15 = sub_1B6E31118();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v8, v15);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v8, *(void *)(v11 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1B62D1754(unint64_t a1)
{
  return sub_1B62D176C(a1);
}

uint64_t sub_1B62D176C(unint64_t a1)
{
  sub_1B62D1BAC(0, (unint64_t *)&qword_1EB97E708, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - v4;
  if (a1 == 0xFFFFFFFF)
  {
    sub_1B6339768(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  else
  {
    swift_retain();
    sub_1B62D3084(a1, (uint64_t)v5);
    swift_release();
    sub_1B6339768(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    uint64_t v8 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    {
      uint64_t v10 = *(void *)&v5[*(int *)(v8 + 60)];
      sub_1B62D19E4(v10);
      sub_1B6339544((uint64_t)v5, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
      uint64_t v9 = sub_1B62D1A28(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  sub_1B6907358((uint64_t)v5, (unint64_t *)&qword_1EB97E708, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B62D19D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B68FF23C);
}

uint64_t sub_1B62D19E4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B62D1A28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (char *)MEMORY[0x1E4FBC860];
    for (uint64_t i = 32; ; i += 32)
    {
      unint64_t v6 = *(void *)(a1 + i);
      if (v6 >> 60 == 9)
      {
        swift_retain();
        uint64_t v7 = sub_1B6E32738();
        uint64_t result = swift_conformsToProtocol2();
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = result;
        sub_1B62C6A70(v6);
        if (v7)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v3 = sub_1B62D1B88(0, *((void *)v3 + 2) + 1, 1, v3);
          }
          unint64_t v11 = *((void *)v3 + 2);
          unint64_t v10 = *((void *)v3 + 3);
          if (v11 >= v10 >> 1) {
            uint64_t v3 = sub_1B62D1B88(v10 > 1, v11 + 1, 1, v3);
          }
          *((void *)v3 + 2) = v11 + 1;
          uint64_t v5 = &v3[16 * v11];
          *((void *)v5 + 4) = v7;
          *((void *)v5 + 5) = v9;
        }
      }
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v3;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

char *sub_1B62D1B88(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B62F9114(a1, a2, a3, a4, (unint64_t *)&qword_1EB980BA0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
}

void sub_1B62D1BAC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  if (!*a2)
  {
    sub_1B6339768(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    unint64_t v6 = sub_1B6E324B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B62D1C1C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= v8) {
    unsigned int v13 = v8;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(void *)(v6 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  if (v11) {
    uint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  unint64_t v17 = (((((((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (a2 <= v13) {
    goto LABEL_34;
  }
  unint64_t v18 = v16
      + ((v15
        + ((((((((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
        + 9) & ~v15);
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v22 = ((a2 - v13 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v22 < 2)
    {
LABEL_34:
      if (v8 >= v12)
      {
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v28 = *(void *)((((((((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8)
                            + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 8);
          if (v28 >= 0xFFFFFFFF) {
            LODWORD(v28) = -1;
          }
          return (v28 + 1);
        }
        else
        {
          long long v27 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v27(a1, v7, v5);
        }
      }
      else
      {
        unsigned int v26 = (*(uint64_t (**)(unint64_t))(v10 + 48))((v15
                                                                      + (((((((((unint64_t)a1 + v17 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                            + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                          + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 25) & ~v15);
        if (v26 >= 2) {
          return v26 - 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_34;
  }
LABEL_24:
  int v23 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v23 = 0;
  }
  if (v18)
  {
    if (v18 <= 3) {
      int v24 = v18;
    }
    else {
      int v24 = 4;
    }
    switch(v24)
    {
      case 2:
        int v25 = *a1;
        break;
      case 3:
        int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v25 = *(_DWORD *)a1;
        break;
      default:
        int v25 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v25 = 0;
  }
  return v13 + (v25 | v23) + 1;
}

uint64_t sub_1B62D1F5C@<X0>(unint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  unint64_t v13 = HIDWORD(a1);
  sub_1B62D229C(0, a2, a3, a4, a5);
  uint64_t v15 = *(void **)(v14 - 8);
  if (v15[8])
  {
    uint64_t v16 = v15[9];
    if (a1 == -1)
    {
LABEL_5:
      if (!v13) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v16 = 0;
    if (a1 == -1) {
      goto LABEL_5;
    }
  }
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v17 = *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v13 == -1 || *(_DWORD *)(v17 + 12 * (int)a1 + 8) == v13)
    {
      int v20 = (unsigned int *)(v17 + 12 * (int)a1);
      return sub_1B62D2100(*(void *)(*(void *)(v6 + 136) + 8 * (int)*v20 + 32), *v20 | ((unint64_t)*((unsigned __int16 *)v20 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v20 + 2) << 32), v16, v6, a2, a3, a4, a6, a5);
    }
  }
LABEL_10:
  unint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15[7];

  return v18(a6, 1, 1, v14);
}

uint64_t sub_1B62D2100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t *a5@<X5>, uint64_t (*a6)(uint64_t)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = *(void *)(a1 + 48);
  sub_1B62D229C(0, a5, a6, a7, a9);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v14 + 16);
  if (v17)
  {
    unint64_t v18 = (void *)(v14 + 56);
    while (*(v18 - 3) != v15)
    {
      v18 += 5;
      if (!--v17) {
        goto LABEL_5;
      }
    }
    sub_1B62D2308(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v18 + (a2 << 16 >> 48) * a3, a8, a5, a6, a7, a9);
    uint64_t v19 = 0;
  }
  else
  {
LABEL_5:
    uint64_t v19 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a8, v19, 1, v16);
}

void sub_1B62D2230(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B62D229C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B62D2308(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1B62D229C(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1B62D237C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v35 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  int v11 = 0;
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v15 <= v10) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(void *)(v8 + 64);
  unint64_t v18 = (((((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(unsigned __int8 *)(v12 + 80);
  size_t v20 = *(void *)(v12 + 64);
  if (v14) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  unint64_t v22 = ((v19
        + ((((((((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
        + 9) & ~v19)
      + v21;
  if (a3 <= v16) {
    goto LABEL_20;
  }
  if (v22 <= 3)
  {
    unsigned int v23 = ((a3 - v16 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
    if (HIWORD(v23))
    {
      int v11 = 4;
      if (v16 >= a2) {
        goto LABEL_28;
      }
      goto LABEL_21;
    }
    if (v23 >= 0x100) {
      int v11 = 2;
    }
    else {
      int v11 = v23 > 1;
    }
LABEL_20:
    if (v16 >= a2) {
      goto LABEL_28;
    }
    goto LABEL_21;
  }
  int v11 = 1;
  if (v16 >= a2)
  {
LABEL_28:
    switch(v11)
    {
      case 1:
        a1[v22] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      case 2:
        *(_WORD *)&a1[v22] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      case 3:
        goto LABEL_69;
      case 4:
        *(_DWORD *)&a1[v22] = 0;
        goto LABEL_32;
      default:
LABEL_32:
        if (a2)
        {
LABEL_33:
          if (v10 >= v15)
          {
            if (v10 >= a2)
            {
              if (v9 < 0x7FFFFFFF)
              {
                uint64_t v34 = (void *)((((((unint64_t)&a1[v17 + 7] & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8)
                                + 15) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  *uint64_t v34 = a2 ^ 0x80000000;
                  v34[1] = 0;
                }
                else
                {
                  v34[1] = (a2 - 1);
                }
              }
              else
              {
                uint64_t v33 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
                v33(a1, a2, v9, v7);
              }
            }
            else if (v18 != -8)
            {
              bzero(a1, v18 + 8);
              *(_DWORD *)a1 = ~v10 + a2;
            }
          }
          else
          {
            unint64_t v27 = v19
                + ((((((((unint64_t)&a1[v18 + 15] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 25;
            unint64_t v28 = (unsigned char *)(v27 & ~v19);
            if (v15 >= a2)
            {
              uint64_t v32 = *(void (**)(unint64_t, void))(v13 + 56);
              v32(v27 & ~v19, (a2 + 1));
            }
            else
            {
              if (v21 <= 3) {
                int v29 = ~(-1 << (8 * v21));
              }
              else {
                int v29 = -1;
              }
              if (v21)
              {
                int v30 = v29 & (~v15 + a2);
                if (v21 <= 3) {
                  int v31 = v21;
                }
                else {
                  int v31 = 4;
                }
                bzero(v28, v21);
                switch(v31)
                {
                  case 2:
                    *(_WORD *)unint64_t v28 = v30;
                    break;
                  case 3:
                    *(_WORD *)unint64_t v28 = v30;
                    _OWORD v28[2] = BYTE2(v30);
                    break;
                  case 4:
                    *(_DWORD *)unint64_t v28 = v30;
                    break;
                  default:
                    *unint64_t v28 = v30;
                    break;
                }
              }
            }
          }
        }
        break;
    }
    return;
  }
LABEL_21:
  unsigned int v24 = ~v16 + a2;
  if (v22 < 4)
  {
    int v25 = (v24 >> (8 * v22)) + 1;
    if (v22)
    {
      int v26 = v24 & ~(-1 << (8 * v22));
      bzero(a1, ((v19+ ((((((((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 9) & ~v19)+ v21);
      if (v22 == 3)
      {
        *(_WORD *)a1 = v26;
        a1[2] = BYTE2(v26);
      }
      else if (v22 == 2)
      {
        *(_WORD *)a1 = v26;
      }
      else
      {
        *a1 = v26;
      }
    }
  }
  else
  {
    bzero(a1, ((v19+ ((((((((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 9) & ~v19)+ v21);
    *(_DWORD *)a1 = v24;
    int v25 = 1;
  }
  switch(v11)
  {
    case 1:
      a1[v22] = v25;
      break;
    case 2:
      *(_WORD *)&a1[v22] = v25;
      break;
    case 3:
LABEL_69:
      __break(1u);
      break;
    case 4:
      *(_DWORD *)&a1[v22] = v25;
      break;
    default:
      return;
  }
}

int8x16_t *sub_1B62D2830(uint64_t a1, int8x16_t *a2, uint64_t a3)
{
  char v3 = a3;
  uint64_t v5 = a3 + 63;
  uint64_t v6 = (a3 + 63) >> 6;
  if (a3 + 63 <= 127) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = 8 * v6;
  }
  if (a3 + 63 <= 127) {
    unint64_t v8 = 1;
  }
  else {
    unint64_t v8 = (a3 + 63) >> 6;
  }
  uint64_t v9 = (int8x16_t *)ecs_stack_allocator_allocate(a1, v7, 8);
  bzero(v9, v7);
  unint64_t v10 = 0;
  if (v8 < 4) {
    goto LABEL_12;
  }
  if ((unint64_t)((char *)v9 - (char *)a2) < 0x20) {
    goto LABEL_12;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  int v11 = a2 + 1;
  uint64_t v12 = v9 + 1;
  unint64_t v13 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    int8x16_t v14 = vmvnq_s8(*v11);
    v12[-1] = vmvnq_s8(v11[-1]);
    *uint64_t v12 = v14;
    v11 += 2;
    v12 += 2;
    v13 -= 4;
  }
  while (v13);
  if (v8 != v10)
  {
LABEL_12:
    unint64_t v15 = v8 - v10;
    uint64_t v16 = v10;
    uint64_t v17 = &v9->i64[v10];
    unint64_t v18 = &a2->i64[v16];
    do
    {
      uint64_t v19 = *v18++;
      *v17++ = ~v19;
      --v15;
    }
    while (v15);
  }
  uint64_t v20 = v6 - 1;
  if (v5 <= 127) {
    uint64_t v20 = 0;
  }
  v9->i64[v20] &= ~(-1 << v3);
  return v9;
}

uint64_t sub_1B62D2940()
{
  uint64_t result = 1701080941;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65646F4D757063;
      break;
    case 2:
      uint64_t result = 0x65646F4D757067;
      break;
    case 3:
      uint64_t result = 0x6B6361626C6C6166;
      break;
    case 4:
      uint64_t result = 0x6F7268636E797361;
      break;
    default:
      return result;
  }
  return result;
}

double sub_1B62D29DC()
{
  sub_1B62D2AB8(0, (unint64_t *)&qword_1EB980BA0, (uint64_t (*)(uint64_t))sub_1B663C11C, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for Color;
  *(void *)(v0 + 40) = &off_1F0F9ECD8;
  return result;
}

void sub_1B62D2A54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62D2AB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_1B62D2B1C()
{
  sub_1B62D2B64();
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for ParticleAngle;
  *(void *)(v0 + 40) = &off_1F0F608D0;
  return result;
}

void sub_1B62D2B64()
{
  if (!qword_1EB980BA0)
  {
    sub_1B663C11C();
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980BA0);
    }
  }
}

double sub_1B62D2BBC()
{
  return sub_1B62D2BF0();
}

double sub_1B62D2BF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = off_1E6146438[v1];
  char v3 = off_1E6146450[v1];
  sub_1B62D2D24(0, (unint64_t *)&qword_1EB980BA0, (void (*)(uint64_t))sub_1B663C11C);
  uint64_t v4 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  return result;
}

void sub_1B62D2C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62D2CD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E330A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B62D2D24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E330A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B62D2D78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62D2DDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62D2E40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B62D2EA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B62D2F70(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 24, v2, a2);
  }
  else
  {
    *(_OWORD *)a2 = xmmword_1B6E95E80;
    *(unsigned char *)(a2 + 20) = 0;
    *(_DWORD *)(a2 + 16) = 0;
  }
  return result;
}

uint64_t sub_1B62D2F70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSubSpawn)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v6 = *(void *)v10;
    uint64_t v11 = 0x100000000;
    if (!*(unsigned char *)(v10 + 12)) {
      uint64_t v11 = 0;
    }
    uint64_t v12 = v11 | *(unsigned int *)(v10 + 8);
    uint64_t v13 = 0x10000000000;
    if (!*(unsigned char *)(v10 + 13)) {
      uint64_t v13 = 0;
    }
    uint64_t v14 = 0x1000000000000;
    if (!*(unsigned char *)(v10 + 14)) {
      uint64_t v14 = 0;
    }
    uint64_t v15 = v12 | v13 | v14;
    uint64_t v16 = 0x100000000000000;
    if (!*(unsigned char *)(v10 + 15)) {
      uint64_t v16 = 0;
    }
    uint64_t v9 = v15 | v16;
    unint64_t v8 = *(unsigned int *)(v10 + 16) | ((unint64_t)*(unsigned __int8 *)(v10 + 20) << 32);
  }
  else
  {
LABEL_5:
    unint64_t v8 = 0;
    uint64_t v9 = 0x200000000;
  }
  *(void *)a5 = v6;
  *(void *)(a5 + 8) = v9;
  *(_DWORD *)(a5 + 16) = v8;
  *(unsigned char *)(a5 + 20) = BYTE4(v8);
  return result;
}

uint64_t sub_1B62D3048@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62D1F5C(a1, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime, a2);
}

uint64_t sub_1B62D3084@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62D1F5C(a1, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime, a2);
}

uint64_t sub_1B62D30C0()
{
  return sub_1B62D312C();
}

uint64_t sub_1B62D312C()
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if ((*(float *)(v0 + 104) != 0.0 || *(float *)(v0 + 108) != 0.0)
    && (*(float *)(v0 + 144) != 0.0 || *(float *)(v0 + 148) != 0.0))
  {
    sub_1B62E1844((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08);
  }
  sub_1B62AA520(v0 + 80, (uint64_t)v3, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction);
  sub_1B62AA520((uint64_t)v3, (uint64_t)v4, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction);
  if (v4[16] != 255) {
    sub_1B62E1844((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8);
  }
  if (*(unsigned char *)(v0 + 208)) {
    sub_1B62E1844((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8);
  }
  return v2;
}

uint64_t sub_1B62D3230@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  unint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Material;
  *(void *)(inited + 40) = &off_1F0FA6678;
  *(void *)(inited + 48) = &type metadata for MaterialRuntime;
  *(void *)(inited + 56) = &off_1F0F68EA8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  unint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  unsigned int v24 = v4[4];
  int v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B62D3484(void *a1, uint64_t a2)
{
  uint64_t v97 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B62D41FC(0, &qword_1EB97DBF0, type metadata accessor for GraphScript, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v94 = (uint64_t)&v89 - v6;
  uint64_t v7 = type metadata accessor for GraphScript(0);
  uint64_t v93 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v96 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62D41FC(0, (unint64_t *)&unk_1EB97E3E8, type metadata accessor for EmitterScript, v3);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v89 - v12;
  uint64_t v14 = type metadata accessor for EmitterScript(0);
  uint64_t v95 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63396FC(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v92 = v18;
  uint64_t v20 = MEMORY[0x1F4188790](v18, v19);
  int v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v20, v23);
  uint64_t v89 = (uint64_t)&v89 - v25;
  MEMORY[0x1F4188790](v24, v26);
  unint64_t v28 = (char *)&v89 - v27;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  MEMORY[0x1F4188790](updated, v30);
  uint64_t v91 = (uint64_t)&v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a1;
  uint64_t v32 = *a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  int v33 = *(unsigned __int8 *)(v32 + 96);
  uint64_t v34 = swift_retain();
  if (v33 != 1) {
    goto LABEL_12;
  }
  uint64_t v90 = v34;
  if (*(unsigned char *)(v32 + 99)) {
    goto LABEL_12;
  }
  uint64_t v35 = swift_dynamicCastMetatype();
  uint64_t v36 = v90;
  if (!v35)
  {
    if (swift_dynamicCastMetatype())
    {
      unint64_t v46 = v98[1];
      swift_retain();
      sub_1B695DB40(v46, (uint64_t)v13);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v13, 1, v14) == 1)
      {
        char *v17 = 0;
        v17[32] = 0;
        uint64_t v47 = &v17[*(int *)(v14 + 32)];
        uint64_t v48 = type metadata accessor for ScriptIndex();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
        *((void *)v17 + 1) = 0xD0000000000000C0;
        *((void *)v17 + 2) = 0x80000001B6F33C80;
        *((void *)v17 + 3) = &unk_1F0F84840;
        sub_1B6785F00((uint64_t)v13, (unint64_t *)&unk_1EB97E3E8, type metadata accessor for EmitterScript);
      }
      else
      {
        sub_1B6785F70((uint64_t)v13, (uint64_t)v17, type metadata accessor for EmitterScript);
      }
      sub_1B63396FC(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      uint64_t v55 = sub_1B62CB3E0(v54, (uint64_t)&off_1F0F61BF0, v46);
      if (!v55)
      {
        uint64_t v43 = type metadata accessor for EmitterScript;
        uint64_t v44 = (uint64_t)v17;
        goto LABEL_30;
      }
      uint64_t v56 = v55;
      uint64_t v57 = v98[4];
      sub_1B633A8FC(MEMORY[0x1E4FBC860]);
      sub_1B690297C(v56, v36, v46, v57);
      swift_bridgeObjectRelease();
      uint64_t v58 = swift_bridgeObjectRetain();
      sub_1B633B868(v58);
      swift_bridgeObjectRelease();
      swift_release();
      int32x4_t v59 = type metadata accessor for EmitterScript;
      uint64_t v60 = (uint64_t)v17;
    }
    else
    {
      if (!swift_dynamicCastMetatype()) {
        goto LABEL_55;
      }
      unint64_t v49 = v98[1];
      swift_retain();
      uint64_t v50 = v94;
      sub_1B695DB00(v49, v94);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v50, 1, v7) == 1)
      {
        uint64_t v51 = v96;
        *(void *)uint64_t v96 = MEMORY[0x1E4FBC860];
        *(void *)(v51 + 8) = 0;
        *(void *)(v51 + 16) = 0xE000000000000000;
        *(unsigned char *)(v51 + 24) = 2;
        *(void *)(v51 + 32) = &unk_1F0F84810;
        *(_WORD *)(v51 + 40) = 0;
        uint64_t v52 = v51 + *(int *)(v7 + 40);
        uint64_t v53 = type metadata accessor for ScriptIndex();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
        sub_1B6785F00(v50, &qword_1EB97DBF0, type metadata accessor for GraphScript);
      }
      else
      {
        sub_1B6785F70(v50, v96, type metadata accessor for GraphScript);
      }
      if (*(unsigned char *)(v96 + 41) != 1
        || (sub_1B63396FC(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime), (uint64_t v62 = sub_1B62CB3E0(v61, (uint64_t)&off_1F0F61BF0, v49)) == 0))
      {
        uint64_t v43 = type metadata accessor for GraphScript;
        uint64_t v44 = v96;
        goto LABEL_30;
      }
      uint64_t v63 = v62;
      uint64_t v64 = v98[4];
      sub_1B633A8FC(MEMORY[0x1E4FBC860]);
      sub_1B633908C(v63, v36, v49, v64);
      swift_bridgeObjectRelease();
      uint64_t v65 = swift_bridgeObjectRetain();
      sub_1B633B868(v65);
      swift_bridgeObjectRelease();
      swift_release();
      int32x4_t v59 = type metadata accessor for GraphScript;
      uint64_t v60 = v96;
    }
    return sub_1B62D4C9C(v60, v59);
  }
  if ((v37 = *((unsigned int *)v98 + 3), uint64_t v38 = *((int *)v98 + 2), __PAIR64__(v37, v38) == 0xFFFFFFFF)
    || (v38 & 0x80000000) != 0
    || *(void *)(v90 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v38
    || (uint64_t v39 = *(void *)(v90 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v37 != -1)
    && *(_DWORD *)(v39 + 12 * (int)v38 + 8) != v37
    || (int32x4_t v40 = (unsigned int *)(v39 + 12 * (int)v38),
        sub_1B62CD3E0(*(void *)(*(void *)(v90 + 136) + 8 * (int)*v40 + 32), v92, *v40 | ((unint64_t)*((unsigned __int16 *)v40 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v40+ 2) << 32), v90, &v101), (uint64_t v41 = v101) == 0))
  {
LABEL_12:
    return swift_release();
  }
  uint64_t v96 = 0;
  sub_1B63395F4(v101, (uint64_t)v28, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  uint64_t v42 = v91;
  sub_1B633A164((uint64_t)v28, v91, type metadata accessor for ParticleUpdateScript);
  sub_1B633A914((uint64_t)v28, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  if (*(unsigned char *)(v42 + 24) == 1)
  {
LABEL_11:
    uint64_t v43 = type metadata accessor for ParticleUpdateScript;
    uint64_t v44 = v42;
LABEL_30:
    sub_1B62D4C9C(v44, v43);
    return swift_release();
  }
  uint64_t v97 = v41;
  uint64_t v66 = v41;
  uint64_t v67 = v89;
  sub_1B63395F4(v66, v89, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  uint64_t v68 = v92;
  uint64_t v69 = *(void *)(v67 + *(int *)(v92 + 40));
  sub_1B63395F4(v67, (uint64_t)v22, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  if (v69)
  {
    sub_1B633A914((uint64_t)v22, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  }
  else
  {
    uint64_t v70 = *(void *)&v22[*(int *)(v68 + 44)];
    swift_bridgeObjectRetain();
    sub_1B633A914((uint64_t)v22, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
    if (!v70)
    {
      sub_1B633A914(v67, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
      uint64_t v42 = v91;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v71 = v90;
  sub_1B633A914(v67, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  unint64_t v72 = v38 | (unint64_t)(v37 << 32);
  if (*(unsigned char *)(v71 + 48)) {
    sub_1B6BF9FC4(v38 | (unint64_t)(v37 << 32), v90);
  }
  uint64_t v73 = *(void *)(v97 + *(int *)(v68 + 60));
  uint64_t v74 = *(void *)(v73 + 16);
  if (!v74)
  {
    uint64_t v75 = (char *)MEMORY[0x1E4FBC860];
LABEL_49:
    float32x4_t v85 = v98;
    long long v86 = *(_OWORD *)(v98 + 13);
    v103[0] = *(_OWORD *)(v98 + 11);
    v103[1] = v86;
    uint64_t v104 = v98[15];
    swift_retain();
    sub_1B62F75EC((uint64_t)v75, (uint64_t)v99);
    swift_bridgeObjectRelease();
    sub_1B62CA064((uint64_t)v103);
    uint64_t v87 = v90;
    sub_1B62C9DA8(v90, (uint64_t)v99, 0x200000000, v100);
    sub_1B62CA27C((uint64_t)v100, (uint64_t)&v101, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    uint64_t v88 = v85[4];
    if (!v101) {
      sub_1B62F94F4(v85[4], (uint64_t)v99);
    }
    sub_1B62D42D4(v99, (uint64_t)v100, v72, v88, v97, v87);
    sub_1B632F170(v100);
    sub_1B62CA064((uint64_t)v99);
    swift_release();
    int32x4_t v59 = type metadata accessor for ParticleUpdateScript;
    uint64_t v60 = v91;
    return sub_1B62D4C9C(v60, v59);
  }
  swift_bridgeObjectRetain();
  uint64_t v75 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v76 = 32;
  while (1)
  {
    unint64_t v79 = *(void *)(v73 + v76);
    if (v79 >> 60 == 9) {
      break;
    }
LABEL_40:
    v76 += 32;
    if (!--v74)
    {
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
  }
  swift_retain();
  uint64_t v80 = sub_1B6E32738();
  sub_1B62C6A70(v79);
  uint64_t v81 = swift_conformsToProtocol2();
  if (v81)
  {
    uint64_t v82 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v75 = sub_1B62F94D0(0, *((void *)v75 + 2) + 1, 1, v75);
    }
    unint64_t v84 = *((void *)v75 + 2);
    unint64_t v83 = *((void *)v75 + 3);
    if (v84 >= v83 >> 1) {
      uint64_t v75 = sub_1B62F94D0(v83 > 1, v84 + 1, 1, v75);
    }
    uint64_t v77 = *(void *)(v82 + 8);
    *((void *)v75 + 2) = v84 + 1;
    float32x2_t v78 = &v75[16 * v84];
    *((void *)v78 + 4) = v80;
    *((void *)v78 + 5) = v77;
    goto LABEL_40;
  }
  __break(1u);
LABEL_55:
  uint64_t v101 = 0;
  unint64_t v102 = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v101 = 0xD000000000000011;
  unint64_t v102 = 0x80000001B6F34770;
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B62D41FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62D4260(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for EmitterScript(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1EB97E3D8);
}

uint64_t sub_1B62D42D4(unsigned __int16 **a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v101 = a3;
  uint64_t v104 = a1;
  uint64_t v146 = *MEMORY[0x1E4F143B8];
  sub_1B6339768(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v88 - v13;
  sub_1B6339678(a5, (uint64_t)&v88 - v13, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  uint64_t v15 = *(void *)&v14[v11[10]];
  if (v15)
  {
    simd_float4x4 v99 = *(void (**)(uint64_t *))(v15 + 32);
    sub_1B6339544((uint64_t)v14, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
    uint64_t v16 = v11[14];
    uint64_t v17 = (uint64_t *)(a5 + v11[15]);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void *)(a5 + v16);
    char v21 = *(unsigned char *)(a5 + v16 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B633A2F4(v18, v19, v20, v21, a4, 0, (uint64_t)v134);
    long long v130 = v134[3];
    long long v131 = v134[4];
    long long v132 = v134[5];
    long long v128 = v134[0];
    uint64_t v133 = v135;
    v129[0] = v134[1];
    v129[1] = v134[2];
    int v22 = (void *)thread_worker_index();
    int v90 = sub_1B62C6548(*(void *)(*(void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v22 + 8));
    if (v90)
    {
      sub_1B62D7890(a2, (uint64_t)v136, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (*(void *)&v136[0])
      {
        if (v142 >= 1)
        {
          uint64_t v100 = v139;
          if (v139)
          {
            uint64_t v23 = 0;
            uint64_t v24 = 0;
            unint64_t v92 = HIDWORD(v101);
            uint64_t v25 = v141[4];
            uint64_t v91 = v140;
            int v26 = *(unsigned __int8 *)(v140 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            v117[0] = v136[0];
            v117[1] = v136[1];
            uint64_t v95 = v138;
            uint64_t v96 = &v131;
            uint64_t v118 = v137;
            float32x4_t v115 = v141;
            uint64_t v93 = v141 + 8;
            uint64_t v94 = v141 + 6;
            uint64_t v102 = a5;
            int v97 = v26;
            uint64_t v98 = v25;
            while (1)
            {
              uint64_t v27 = (unsigned int *)(v95 + 48 * v23);
              uint64_t v106 = *v27;
              uint64_t v107 = v24;
              uint64_t v105 = v27[1];
              uint64_t v28 = *((void *)v27 + 5);
              if (v26)
              {
                uint64_t v29 = *(os_unfair_lock_s **)(v28 + 376);
                swift_retain();
                os_unfair_lock_lock(v29);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 344));
              }
              else
              {
                swift_retain();
              }
              uint64_t v108 = v23;
              ecs_stack_allocator_push_snapshot(v25);
              sub_1B62D7890((uint64_t)v94, (uint64_t)v143, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v30 = v28;
              uint64_t v31 = v115;
              uint64_t v32 = v115[4];
              uint64_t v33 = *(void *)(*(void *)(*(void *)(*(void *)(v28 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v31[6] = ecs_stack_allocator_allocate(v32, 48 * v33, 8);
              v31[7] = v33;
              uint64_t v34 = v93;
              v93[1] = 0;
              v34[2] = 0;
              *uint64_t v34 = 0;
              swift_release();
              uint64_t v35 = v31[2];
              long long v116 = *((_OWORD *)v31 + 3);
              long long v114 = *((_OWORD *)v31 + 4);
              uint64_t v36 = v31[10];
              uint64_t v37 = v31[4];
              uint64_t v38 = *(void *)(*(void *)(*(void *)(*(void *)(v30 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              uint64_t v113 = v35;
              swift_retain();
              v31[6] = ecs_stack_allocator_allocate(v37, 48 * v38, 8);
              v31[7] = v38;
              v34[1] = 0;
              v34[2] = 0;
              *uint64_t v34 = 0;
              long long v131 = v116;
              long long v132 = v114;
              uint64_t v133 = v36;
              uint64_t v39 = *((void *)&v128 + 1);
              uint64_t v40 = *(void *)(*((void *)&v128 + 1) + 16);
              *(void *)&long long v114 = v30;
              if (v40) {
                break;
              }
              swift_bridgeObjectRetain();
              swift_release();
LABEL_29:
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v71 = v115;
              uint64_t v72 = v115[4];
              uint64_t v73 = v128;
              uint64_t v74 = sub_1B633A8FC(MEMORY[0x1E4FBC860]);
              uint64_t v119 = v91;
              int v120 = v101;
              int v121 = v92;
              uint64_t v122 = v72;
              uint64_t v123 = v106;
              uint64_t v124 = v105;
              char v125 = 0;
              uint64_t v126 = v73;
              uint64_t v127 = v74;
              v99(&v119);
              swift_bridgeObjectRelease();
              uint64_t v75 = *((void *)&v130 + 1);
              sub_1B62D7890((uint64_t)v96, (uint64_t)v144, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v24 = v107;
              sub_1B6345178(v71, v104, (uint64_t)v144);
              uint64_t v76 = *(void *)(v75 + 16);
              if (v76)
              {
                swift_bridgeObjectRetain();
                uint64_t v77 = v75 + 40;
                do
                {
                  float32x2_t v78 = *(void (**)(uint64_t))(v77 - 8);
                  uint64_t v79 = swift_retain();
                  v78(v79);
                  swift_release();
                  v77 += 16;
                  --v76;
                }
                while (v76);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                a5 = v102;
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v80 = v108;
              uint64_t v81 = v114;
LABEL_35:
              sub_1B6345178(v115, (unsigned __int16 **)v117, (uint64_t)v143);
              sub_1B634507C((char *)v81);
              uint64_t v25 = v98;
              ecs_stack_allocator_pop_snapshot(v98);
              int v26 = v97;
              if (v97)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 376));
              }
              swift_release();
              uint64_t v23 = v80 + 1;
              if (v23 == v100) {
                goto LABEL_42;
              }
            }
            swift_bridgeObjectRetain();
            uint64_t v41 = 0;
            uint64_t v103 = v39;
            uint64_t v42 = (char *)(v39 + 40);
            uint64_t v109 = v40;
            while (1)
            {
              unint64_t v48 = *((void *)v42 - 1);
              if ((v48 >> 60) - 9 > 1) {
                goto LABEL_15;
              }
              uint64_t v49 = *(void *)&v129[0];
              char v50 = BYTE8(v129[0]);
              unint64_t v51 = *(void *)((char *)v129 + 12);
              char v52 = BYTE4(v129[1]);
              char v53 = *v42;
              sub_1B62C6AA8(*((void *)v42 - 1));
              uint64_t v54 = v114;
              swift_retain();
              sub_1B62C6AA8(v48);
              uint64_t v45 = (uint64_t (*)(void *))sub_1B62C6B10(v48, v53, v49, v50, v51, v52, (uint64_t)v115, v54);
              uint64_t v56 = v55;
              uint64_t v58 = v57;
              unsigned __int8 v60 = v59;
              unsigned int v61 = v59;
              swift_release();
              sub_1B62C6A70(v48);
              if (v61 > 0xFB)
              {
                swift_bridgeObjectRelease();
                sub_1B62C6A70(v48);
                uint64_t v82 = *((void *)&v130 + 1);
                sub_1B62D7890((uint64_t)v96, (uint64_t)v145, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
                uint64_t v24 = v107;
                sub_1B6345178(v115, v104, (uint64_t)v145);
                uint64_t v83 = *(void *)(v82 + 16);
                if (v83)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v84 = v82 + 40;
                  a5 = v102;
                  uint64_t v80 = v108;
                  do
                  {
                    float32x4_t v85 = *(void (**)(uint64_t))(v84 - 8);
                    uint64_t v86 = swift_retain();
                    v85(v86);
                    swift_release();
                    v84 += 16;
                    --v83;
                  }
                  while (v83);
                  swift_release();
                  uint64_t v81 = v114;
                  swift_release();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_release();
                  uint64_t v81 = v114;
                  swift_release();
                  a5 = v102;
                  uint64_t v80 = v108;
                }
                goto LABEL_35;
              }
              if (v60 >> 6 && v60 >> 6 != 1)
              {
                swift_retain();
                uint64_t v46 = v45(v115);
                uint64_t v47 = v62;
                *(void *)&long long v116 = v63;
                sub_1B62CCEE8((uint64_t)v45, v56, v58, v60);
                if (v47)
                {
LABEL_23:
                  uint64_t v112 = v46;
                  uint64_t v64 = swift_allocObject();
                  uint64_t v110 = v64;
                  uint64_t v111 = v47;
                  *(void *)(v64 + 16) = v47;
                  *(void *)(v64 + 24) = v116;
                  uint64_t v65 = (void *)*((void *)&v130 + 1);
                  swift_retain();
                  uint64_t v66 = v45;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v65 = sub_1B62CACA8(0, v65[2] + 1, 1, v65);
                  }
                  unint64_t v68 = v65[2];
                  unint64_t v67 = v65[3];
                  unint64_t v69 = v68 + 1;
                  if (v68 >= v67 >> 1)
                  {
                    unint64_t v89 = v68 + 1;
                    uint64_t v70 = sub_1B62CACA8(v67 > 1, v68 + 1, 1, v65);
                    unint64_t v69 = v89;
                    uint64_t v65 = v70;
                  }
                  v65[2] = v69;
                  uint64_t v43 = &v65[2 * v68];
                  uint64_t v44 = v110;
                  v43[4] = sub_1B633A544;
                  v43[5] = v44;
                  *((void *)&v130 + 1) = v65;
                  uint64_t v45 = v66;
                  uint64_t v47 = v111;
                  uint64_t v46 = v112;
                }
              }
              else
              {
                sub_1B62C6A60(v56);
                uint64_t v46 = (uint64_t)v45;
                uint64_t v47 = v56;
                *(void *)&long long v116 = v58;
                if (v56) {
                  goto LABEL_23;
                }
              }
              *(void *)(v128 + 8 * v41) = v46;
              sub_1B62C6A50(v47);
              sub_1B62CCEE8((uint64_t)v45, v56, v58, v60);
              sub_1B62C6A70(v48);
              uint64_t v40 = v109;
LABEL_15:
              ++v41;
              v42 += 32;
              if (v40 == v41)
              {
                swift_release();
                a5 = v102;
                goto LABEL_29;
              }
            }
          }
        }
      }
LABEL_42:
      sub_1B633A414((uint64_t)&v128, a5, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v90 & 1;
  }
  else
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62D4C9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62D4CFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1B62D4D5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35238]), sel_init);
  uint64_t v11 = (void *)sub_1B6E31768();
  objc_msgSend(v10, sel_setName_, v11);

  if ((a4 & 1) == 0)
  {
    sub_1B62DADA8(a3);
    sub_1B638491C();
    sub_1B6E31A38();
    *(void *)&v24[0] = a1;
    *((void *)&v24[0] + 1) = a2;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setSpecializedName_, v12, v24[0]);
  }
  uint64_t v13 = *(void *)(a3 + 16);
  if (v13)
  {
    id v14 = objc_allocWithZone(MEMORY[0x1E4F35228]);
    swift_bridgeObjectRetain();
    id v15 = objc_msgSend(v14, sel_init);
    swift_bridgeObjectRetain();
    uint64_t v16 = 32;
    do
    {
      long long v17 = *(_OWORD *)(a3 + v16 + 80);
      v24[4] = *(_OWORD *)(a3 + v16 + 64);
      void v24[5] = v17;
      char v25 = *(unsigned char *)(a3 + v16 + 96);
      long long v18 = *(_OWORD *)(a3 + v16 + 16);
      v24[0] = *(_OWORD *)(a3 + v16);
      v24[1] = v18;
      long long v19 = *(_OWORD *)(a3 + v16 + 48);
      _OWORD v24[2] = *(_OWORD *)(a3 + v16 + 32);
      v24[3] = v19;
      sub_1B62D56C0((uint64_t)v24, (uint64_t)v26);
      sub_1B62D5764((uint64_t)v26);
      sub_1B62D4FD0((uint64_t)v24);
      sub_1B62D5730((uint64_t)v24);
      v16 += 112;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease_n();
    objc_msgSend(v10, sel_setConstantValues_, v15);
  }
  unint64_t v20 = *(void *)(v5 + 152);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (!v23) {
      return v10;
    }
    goto LABEL_9;
  }
  if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    sub_1B62F3064(0, &qword_1E9DCFF70);
    swift_bridgeObjectRetain();
    char v21 = (void *)sub_1B6E31C18();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setBinaryArchives_, v21);
  }
  return v10;
}

void sub_1B62D4FD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  sub_1B62D56C0(a1, (uint64_t)v11);
  sub_1B62D56C0((uint64_t)v11, (uint64_t)&v12);
  if (v13)
  {
    sub_1B68D840C();
    sub_1B62D6998(a1 + 32, (uint64_t)v10);
    sub_1B62D6998((uint64_t)v10, (uint64_t)&v14);
    switch(v18)
    {
      case 1:
        *(void *)&long long v6 = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 4, v4, v6, v7, v8, v9);
        break;
      case 2:
        long long v6 = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 5, v4, v6, v7, v8, v9);
        break;
      case 3:
        long long v6 = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 6, v4, v6, v7, v8, v9);
        break;
      case 4:
        long long v6 = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 7, v4, v6, v7, v8, v9);
        break;
      case 5:
        long long v6 = v14;
        long long v7 = v15;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 8, v4, v6, v7, v8, v9);
        break;
      case 6:
        long long v6 = v14;
        long long v7 = v15;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 9, v4, v6, v7, v8, v9);
        break;
      case 7:
        long long v6 = v14;
        *(void *)&long long v7 = v15;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 10, v4, v6, v7, v8, v9);
        break;
      case 8:
        long long v6 = v14;
        long long v7 = v15;
        long long v8 = v16;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 11, v4, v6, v7, v8, v9);
        break;
      case 9:
        long long v6 = v14;
        long long v7 = v15;
        long long v8 = v16;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 12, v4, v6, v7, v8, v9);
        break;
      case 10:
        long long v6 = v14;
        long long v7 = v15;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 13, v4, v6, v7, v8, v9);
        break;
      case 11:
        long long v6 = v14;
        long long v7 = v15;
        long long v8 = v16;
        long long v9 = v17;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 14, v4, v6, v7, v8, v9);
        break;
      case 12:
        long long v6 = v14;
        long long v7 = v15;
        long long v8 = v16;
        long long v9 = v17;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 15, v4, v6, v7, v8, v9);
        break;
      case 13:
        LOBYTE(v6) = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 53, v4, v6, v7, v8, v9);
        break;
      case 14:
        LODWORD(v6) = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 29, v4, v6, v7, v8, v9);
        break;
      case 15:
        LODWORD(v6) = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 33, v4, v6, v7, v8, v9);
        break;
      default:
        LODWORD(v6) = v14;
        uint64_t v4 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, sel_setConstantValue_type_withName_, &v6, 3, v4, v6, v7, v8, v9);
        break;
    }
  }
  else
  {
    uint64_t v5 = v12;
    sub_1B62D6998(a1 + 32, (uint64_t)v10);
    sub_1B62D6998((uint64_t)v10, (uint64_t)&v14);
    switch(v18)
    {
      case 1:
        *(void *)&long long v6 = v14;
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 4, v5, v6, v7, v8, v9);
        break;
      case 2:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 5, v5, v14, v7, v8, v9);
        break;
      case 3:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 6, v5, v14, v7, v8, v9);
        break;
      case 4:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 7, v5, v14, v7, v8, v9);
        break;
      case 5:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 8, v5, v14, v15, v8, v9);
        break;
      case 6:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 9, v5, v14, v15, v8, v9);
        break;
      case 7:
        *(void *)&long long v7 = v15;
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 10, v5, v14, v7, v8, v9);
        break;
      case 8:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 11, v5, v14, v15, v16, v9);
        break;
      case 9:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 12, v5, v14, v15, v16, v9);
        break;
      case 10:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 13, v5, v14, v15, v8, v9);
        break;
      case 11:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 14, v5, v14, v15, v16, v17);
        break;
      case 12:
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 15, v5, v14, v15, v16, v17);
        break;
      case 13:
        LOBYTE(v6) = v14;
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 53, v5, v6, v7, v8, v9);
        break;
      case 14:
        LODWORD(v6) = v14;
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 29, v5, v6, v7, v8, v9);
        break;
      case 15:
        LODWORD(v6) = v14;
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 33, v5, v6, v7, v8, v9);
        break;
      default:
        LODWORD(v6) = v14;
        objc_msgSend(v2, sel_setConstantValue_type_atIndex_, &v6, 3, v5, v6, v7, v8, v9);
        break;
    }
  }
}

uint64_t sub_1B62D56C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for FunctionConstant.Key(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_1B62D5730(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62D5764(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62D5798(uint64_t a1)
{
  if (!a1) {
    return 16718;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 64;
  do
  {
    uint64_t v5 = *(void *)(v4 - 32);
    uint64_t v6 = *(void *)(v4 - 24);
    int v7 = *(unsigned __int8 *)(v4 - 16);
    sub_1B62D6998(v4, (uint64_t)v10);
    swift_bridgeObjectRetain();
    sub_1B62D5A18(v5, v6, v7);
    sub_1B6E31948();
    if (v7 == 1) {
      goto LABEL_4;
    }
    if (qword_1EB97D7A0 != -1) {
      swift_once();
    }
    if (*((void *)off_1EB97F978 + 2) && (sub_1B62C1A30(v5), (v8 & 1) != 0)) {
LABEL_4:
    }
      swift_bridgeObjectRetain();
    else {
      sub_1B6E33098();
    }
    v4 += 112;
    sub_1B6E31948();
    sub_1B62D5A28();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62D66CC(v5, v6, v7);
    swift_bridgeObjectRelease();
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease_n();
  return v3;
}

uint64_t initializeWithCopy for FunctionConstant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1B62D5A18(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  return a1;
}

uint64_t sub_1B62D5A18(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B62D5A28()
{
  sub_1B62D6998(v0, (uint64_t)&v5);
  switch(v6)
  {
    case 1:
      uint64_t v1 = &qword_1EB980E90;
      uint64_t v2 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
      sub_1B63958F8(0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
      uint64_t v3 = (unint64_t *)&unk_1E9DCFE30;
      goto LABEL_6;
    case 2:
      uint64_t v1 = (unint64_t *)&qword_1EB980EB0;
      uint64_t v2 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B63958F8(0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
      uint64_t v3 = (unint64_t *)&unk_1E9DCFE28;
      goto LABEL_6;
    case 3:
      uint64_t v1 = (unint64_t *)&qword_1EB980EF0;
      uint64_t v2 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B63958F8(0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
      uint64_t v3 = (unint64_t *)&unk_1E9DCFE20;
LABEL_6:
      sub_1B6666340(v3, v1, v2);
      return sub_1B6E33808();
    case 4:
      type metadata accessor for simd_float2x2(0);
      sub_1B6E32B18();
      return 0;
    case 5:
      type metadata accessor for simd_float2x3(0);
      goto LABEL_16;
    case 6:
      type metadata accessor for simd_float2x4(0);
      goto LABEL_16;
    case 7:
      type metadata accessor for simd_float3x2(0);
      goto LABEL_16;
    case 8:
      type metadata accessor for simd_float3x3(0);
      goto LABEL_16;
    case 9:
      type metadata accessor for simd_float3x4(0);
      goto LABEL_16;
    case 10:
      type metadata accessor for simd_float4x2(0);
      goto LABEL_16;
    case 11:
      type metadata accessor for simd_float4x3(0);
      goto LABEL_16;
    case 12:
      type metadata accessor for simd_float4x4(0);
LABEL_16:
      sub_1B6E32B18();
      return 0;
    case 13:
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      return 0;
    case 14:
    case 15:
      return sub_1B6E33098();
    default:
      sub_1B6E31EA8();
      return 0;
  }
}

uint64_t sub_1B62D5DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B6E33918();
  sub_1B6E318B8();
  uint64_t v5 = *(void *)(a4 + 16);
  sub_1B6E33928();
  if (v5)
  {
    uint64_t v6 = a4 + 64;
    do
    {
      uint64_t v7 = *(void *)(v6 - 32);
      uint64_t v8 = *(void *)(v6 - 24);
      int v9 = *(unsigned __int8 *)(v6 - 16);
      sub_1B62D6998(v6, (uint64_t)v11);
      sub_1B6E33928();
      if (v9 == 1)
      {
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
      }
      else
      {
        sub_1B6E33928();
      }
      v6 += 112;
      sub_1B62D66DC();
      sub_1B62D66CC(v7, v8, v9);
      --v5;
    }
    while (v5);
  }
  sub_1B6E33928();
  return sub_1B6E33988();
}

double sub_1B62D5ED4@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11)
{
  uint64_t v54 = a2[2];
  uint64_t v55 = a2[1];
  uint64_t v52 = a2[4];
  uint64_t v53 = a2[3];
  uint64_t v50 = a2[6];
  uint64_t v51 = a2[5];
  uint64_t v18 = a2[8];
  uint64_t v48 = *a2;
  uint64_t v49 = a2[7];
  uint64_t v65 = a2[10];
  uint64_t v66 = a2[9];
  long long v19 = *((_OWORD *)a1 + 1);
  long long v147 = *(_OWORD *)a1;
  long long v148 = v19;
  long long v20 = *((_OWORD *)a1 + 2);
  long long v21 = *((_OWORD *)a1 + 3);
  long long v22 = *((_OWORD *)a1 + 5);
  long long v151 = *((_OWORD *)a1 + 4);
  long long v152 = v22;
  long long v149 = v20;
  long long v150 = v21;
  long long v23 = *((_OWORD *)a1 + 6);
  long long v24 = *((_OWORD *)a1 + 7);
  long long v25 = *((_OWORD *)a1 + 10);
  long long v156 = *((_OWORD *)a1 + 9);
  long long v157 = v25;
  long long v26 = *((_OWORD *)a1 + 8);
  long long v154 = v24;
  long long v155 = v26;
  long long v153 = v23;
  sub_1B62CA210(a8, (uint64_t)v92, &qword_1EB97F6C8);
  uint64_t v67 = v92[0];
  uint64_t v59 = v92[2];
  uint64_t v60 = v92[1];
  uint64_t v57 = v92[4];
  uint64_t v58 = v92[3];
  uint64_t v56 = v92[5];
  sub_1B62CA210(a6, (uint64_t)v90, qword_1EB97D690);
  uint64_t v73 = v90[1];
  uint64_t v74 = v90[0];
  uint64_t v68 = v90[4];
  uint64_t v69 = v90[2];
  uint64_t v71 = v90[5];
  uint64_t v72 = v90[3];
  char v70 = v91;
  if (a5)
  {
    v104[0] = a5;
    swift_bridgeObjectRetain();
    sub_1B63129D0(a1);
    swift_bridgeObjectRetain();
    sub_1B62D9984(v104);
    swift_bridgeObjectRelease();
    uint64_t v46 = v104[0];
  }
  else
  {
    sub_1B63129D0(a1);
    uint64_t v46 = 0;
  }
  sub_1B62CA210(a6, (uint64_t)v94, qword_1EB97D690);
  if (v94[49])
  {
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    uint64_t v71 = 0;
    uint64_t v72 = 0;
    char v70 = 15;
    uint64_t v69 = 1;
    uint64_t v68 = 1;
  }
  sub_1B6E33998();
  swift_retain();
  sub_1B63125E8();
  uint64_t v63 = a4;
  uint64_t v64 = a3;
  uint64_t v62 = v18;
  if (a5)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    uint64_t v27 = *(void *)(a5 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = a5 + 64;
      do
      {
        uint64_t v29 = *(void *)(v28 - 32);
        uint64_t v30 = *(void *)(v28 - 24);
        int v31 = *(unsigned __int8 *)(v28 - 16);
        sub_1B62D6998(v28, (uint64_t)v146);
        sub_1B6E33928();
        if (v31 == 1)
        {
          swift_bridgeObjectRetain();
          sub_1B6E318B8();
        }
        else
        {
          sub_1B6E33928();
        }
        v28 += 112;
        sub_1B62D66DC();
        sub_1B62D66CC(v29, v30, v31);
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease_n();
      a4 = v63;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B6E33938();
  }
  long long v32 = *((_OWORD *)a2 + 1);
  long long v95 = *(_OWORD *)a2;
  long long v96 = v32;
  long long v33 = *((_OWORD *)a2 + 3);
  long long v97 = *((_OWORD *)a2 + 2);
  long long v98 = v33;
  sub_1B62D69C0();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  v104[0] = v74;
  v104[1] = v73;
  _OWORD v104[2] = v69;
  v104[3] = v72;
  v104[4] = v68;
  v104[5] = v71;
  char v105 = v70;
  uint64_t v107 = 0;
  uint64_t v106 = 0;
  long long v108 = xmmword_1B6E50D30;
  long long v109 = xmmword_1B6E50D30;
  char v110 = 15;
  uint64_t v112 = 0;
  uint64_t v111 = 0;
  long long v113 = xmmword_1B6E50D30;
  long long v114 = xmmword_1B6E50D30;
  char v115 = 15;
  uint64_t v117 = 0;
  uint64_t v116 = 0;
  long long v118 = xmmword_1B6E50D30;
  long long v119 = xmmword_1B6E50D30;
  char v120 = 15;
  uint64_t v122 = 0;
  uint64_t v121 = 0;
  long long v123 = xmmword_1B6E50D30;
  long long v124 = xmmword_1B6E50D30;
  char v125 = 15;
  *(_DWORD *)uint64_t v126 = *(_DWORD *)v89;
  *(_DWORD *)&v126[3] = *(_DWORD *)&v89[3];
  uint64_t v127 = 0;
  uint64_t v128 = 0;
  long long v130 = xmmword_1B6E4F270;
  uint64_t v129 = 1;
  uint64_t v131 = 0;
  char v132 = 15;
  *(_DWORD *)uint64_t v133 = *(_DWORD *)v88;
  *(_DWORD *)&v133[3] = *(_DWORD *)&v88[3];
  uint64_t v134 = 0;
  uint64_t v135 = 0;
  long long v136 = xmmword_1B6E50D30;
  long long v137 = xmmword_1B6E50D30;
  char v138 = 15;
  *(_DWORD *)uint64_t v139 = *(_DWORD *)v87;
  *(_DWORD *)&v139[3] = *(_DWORD *)&v87[3];
  uint64_t v140 = 0;
  uint64_t v141 = 0;
  long long v143 = xmmword_1B6E4F270;
  uint64_t v142 = 1;
  uint64_t v144 = 0;
  char v145 = 15;
  sub_1B62D6A50();
  sub_1B6E33938();
  if (a4) {
    sub_1B6E33928();
  }
  sub_1B62CA210(a8, (uint64_t)v93, &qword_1EB97F6C8);
  if (v93[16] == 2)
  {
    sub_1B6E33938();
    uint64_t v35 = v58;
    uint64_t v34 = v59;
    uint64_t v36 = v60;
    uint64_t v38 = v56;
    uint64_t v37 = v57;
  }
  else
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    uint64_t v34 = v59;
    sub_1B6E33938();
    uint64_t v35 = v58;
    sub_1B6E33928();
    uint64_t v36 = v60;
    uint64_t v37 = v57;
    sub_1B6E33928();
    uint64_t v38 = v56;
    sub_1B6E33928();
  }
  sub_1B6E33928();
  sub_1B6E33938();
  long long v101 = v77;
  long long v102 = v78;
  uint64_t v103 = v79;
  long long v99 = v75;
  long long v100 = v76;
  uint64_t v39 = sub_1B6E33978();
  *(void *)(a9 + 176) = v46;
  *(void *)(a9 + 184) = v48;
  *(_DWORD *)(a9 + 321) = *(_DWORD *)v86;
  *(_DWORD *)(a9 + 377) = *(_DWORD *)v85;
  *(_DWORD *)(a9 + 433) = *(_DWORD *)v84;
  *(_DWORD *)(a9 + 492) = *(_DWORD *)&v83[3];
  *(_DWORD *)(a9 + 489) = *(_DWORD *)v83;
  *(_DWORD *)(a9 + 548) = *(_DWORD *)&v82[3];
  *(_DWORD *)(a9 + 545) = *(_DWORD *)v82;
  *(_DWORD *)(a9 + 601) = *(_DWORD *)v81;
  *(_DWORD *)(a9 + 657) = *(_DWORD *)v80;
  long long v40 = v156;
  *(_OWORD *)(a9 + 128) = v155;
  *(_OWORD *)(a9 + 144) = v40;
  *(_OWORD *)(a9 + 160) = v157;
  long long v41 = v152;
  *(_OWORD *)(a9 + 64) = v151;
  *(_OWORD *)(a9 + 80) = v41;
  long long v42 = v154;
  *(_OWORD *)(a9 + 96) = v153;
  *(_OWORD *)(a9 + 112) = v42;
  long long v43 = v148;
  *(_OWORD *)a9 = v147;
  *(_OWORD *)(a9 + 16) = v43;
  long long v44 = v150;
  *(_OWORD *)(a9 + 32) = v149;
  *(_OWORD *)(a9 + 48) = v44;
  *(_DWORD *)(a9 + 324) = *(_DWORD *)&v86[3];
  *(_DWORD *)(a9 + 380) = *(_DWORD *)&v85[3];
  *(_DWORD *)(a9 + 436) = *(_DWORD *)&v84[3];
  *(_DWORD *)(a9 + 604) = *(_DWORD *)&v81[3];
  *(_DWORD *)(a9 + 660) = *(_DWORD *)&v80[3];
  *(void *)(a9 + 192) = v55;
  *(void *)(a9 + 200) = v54;
  *(void *)(a9 + 208) = v53;
  *(void *)(a9 + 216) = v52;
  *(void *)(a9 + 224) = v51;
  *(void *)(a9 + 232) = v50;
  *(void *)(a9 + 240) = v49;
  *(void *)(a9 + 248) = v62;
  *(void *)(a9 + 256) = v66;
  *(void *)(a9 + 264) = v65;
  *(void *)(a9 + 272) = v74;
  *(void *)(a9 + 280) = v73;
  *(void *)(a9 + 288) = v69;
  *(void *)(a9 + 296) = v72;
  *(void *)(a9 + 304) = v68;
  *(void *)(a9 + 312) = v71;
  *(unsigned char *)(a9 + 320) = v70;
  double result = 0.0;
  *(_OWORD *)(a9 + 328) = 0u;
  *(void *)(a9 + 344) = 1;
  *(_OWORD *)(a9 + 352) = xmmword_1B6E4F270;
  *(void *)(a9 + 368) = 0;
  *(unsigned char *)(a9 + 376) = 15;
  *(_OWORD *)(a9 + 384) = 0u;
  *(_OWORD *)(a9 + 400) = xmmword_1B6E50D30;
  *(_OWORD *)(a9 + 416) = xmmword_1B6E50D30;
  *(unsigned char *)(a9 + 432) = 15;
  *(_OWORD *)(a9 + 440) = 0u;
  *(void *)(a9 + 456) = 1;
  *(_OWORD *)(a9 + 464) = xmmword_1B6E4F270;
  *(void *)(a9 + 480) = 0;
  *(unsigned char *)(a9 + 488) = 15;
  *(_OWORD *)(a9 + 496) = 0u;
  *(_OWORD *)(a9 + 512) = xmmword_1B6E50D30;
  *(_OWORD *)(a9 + 528) = xmmword_1B6E50D30;
  *(unsigned char *)(a9 + 544) = 15;
  *(_OWORD *)(a9 + 552) = 0u;
  *(void *)(a9 + 568) = 1;
  *(_OWORD *)(a9 + 576) = xmmword_1B6E4F270;
  *(void *)(a9 + 592) = 0;
  *(unsigned char *)(a9 + 600) = 15;
  *(_OWORD *)(a9 + 608) = 0u;
  *(_OWORD *)(a9 + 624) = xmmword_1B6E50D30;
  *(_OWORD *)(a9 + 640) = xmmword_1B6E50D30;
  *(unsigned char *)(a9 + 656) = 15;
  *(_OWORD *)(a9 + 664) = 0u;
  *(void *)(a9 + 680) = 1;
  *(_OWORD *)(a9 + 688) = xmmword_1B6E4F270;
  *(void *)(a9 + 704) = 0;
  *(unsigned char *)(a9 + 712) = 15;
  *(void *)(a9 + 720) = v64;
  *(void *)(a9 + 728) = v63;
  *(void *)(a9 + 736) = a7;
  *(void *)(a9 + 744) = v67;
  *(void *)(a9 + 752) = v36;
  *(void *)(a9 + 760) = v34;
  *(void *)(a9 + 768) = v35;
  *(void *)(a9 + 776) = v37;
  *(void *)(a9 + 784) = v38;
  *(unsigned char *)(a9 + 792) = a10 & 1;
  *(unsigned char *)(a9 + 793) = a11;
  *(void *)(a9 + 800) = v39;
  return result;
}

uint64_t sub_1B62D66CC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B62D66DC()
{
  sub_1B62D6998(v0, (uint64_t)&v2);
  switch(v3)
  {
    case 1:
      sub_1B6E33928();
      return sub_1B688CE58();
    case 2:
      sub_1B6E33928();
      goto LABEL_15;
    case 3:
      sub_1B6E33928();
      goto LABEL_19;
    case 4:
      sub_1B6E33928();
      sub_1B688CE58();
      return sub_1B688CE58();
    case 5:
      sub_1B6E33928();
      goto LABEL_14;
    case 6:
      sub_1B6E33928();
      goto LABEL_18;
    case 7:
      sub_1B6E33928();
      sub_1B688CE58();
      sub_1B688CE58();
      return sub_1B688CE58();
    case 8:
      sub_1B6E33928();
      goto LABEL_13;
    case 9:
      sub_1B6E33928();
      goto LABEL_17;
    case 10:
      sub_1B6E33928();
      sub_1B688CE58();
      sub_1B688CE58();
      sub_1B688CE58();
      return sub_1B688CE58();
    case 11:
      sub_1B6E33928();
      sub_1B688CDF4();
LABEL_13:
      sub_1B688CDF4();
LABEL_14:
      sub_1B688CDF4();
LABEL_15:
      uint64_t result = sub_1B688CDF4();
      break;
    case 12:
      sub_1B6E33928();
      sub_1B688CD7C();
LABEL_17:
      sub_1B688CD7C();
LABEL_18:
      sub_1B688CD7C();
LABEL_19:
      uint64_t result = sub_1B688CD7C();
      break;
    case 13:
      sub_1B6E33928();
      uint64_t result = sub_1B6E33938();
      break;
    default:
      sub_1B6E33928();
      uint64_t result = sub_1B6E33958();
      break;
  }
  return result;
}

uint64_t sub_1B62D6998(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t sub_1B62D69C0()
{
  return sub_1B6E33928();
}

uint64_t sub_1B62D6A50()
{
  return sub_1B6E33938();
}

uint64_t sub_1B62D6D98(void *a1)
{
  sub_1B6E33998();
  long long v3 = *(_OWORD *)(v1 + 144);
  v57[6] = *(_OWORD *)(v1 + 128);
  v57[7] = v3;
  v57[8] = *(_OWORD *)(v1 + 160);
  long long v4 = *(_OWORD *)(v1 + 80);
  v57[2] = *(_OWORD *)(v1 + 64);
  v57[3] = v4;
  long long v5 = *(_OWORD *)(v1 + 112);
  v57[4] = *(_OWORD *)(v1 + 96);
  v57[5] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v56[0] = *(_OWORD *)v1;
  v56[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  v57[0] = *(_OWORD *)(v1 + 32);
  v57[1] = v7;
  sub_1B62CA210((uint64_t)v56, (uint64_t)v59, (unint64_t *)&qword_1EB97D6F0);
  sub_1B62CA210((uint64_t)v59, (uint64_t)v67, (unint64_t *)&qword_1EB97D6F0);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v67[1])
  {
    int v9 = (void *)v67[3];
    uint64_t v10 = *(void *)(v1 + 176) ? *(void *)(v1 + 176) : MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B62D8C68(v10, a1, v9, v33);
    swift_bridgeObjectRelease();
    sub_1B62CA210((uint64_t)v33, (uint64_t)v40, (unint64_t *)&qword_1EB97D6F0);
    if (*((void *)&v40[0] + 1))
    {
      long long v42 = v40[0];
      long long v43 = v40[1];
      uint64_t v44 = v41;
      sub_1B6E318B8();
      uint64_t v11 = v44;
      uint64_t v47 = v44;
      sub_1B6E33928();
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v13 = v11 + 64;
        do
        {
          uint64_t v14 = *(void *)(v13 - 32);
          uint64_t v15 = *(void *)(v13 - 24);
          int v16 = *(unsigned __int8 *)(v13 - 16);
          sub_1B62D6998(v13, (uint64_t)v66);
          sub_1B6E33928();
          if (v16 == 1)
          {
            swift_bridgeObjectRetain();
            sub_1B6E318B8();
          }
          else
          {
            sub_1B6E33928();
          }
          v13 += 112;
          sub_1B62D66DC();
          sub_1B62D66CC(v14, v15, v16);
          --v12;
        }
        while (v12);
      }
      sub_1B62D8AE0((uint64_t)&v43 + 8, (uint64_t)v46, (unint64_t *)&qword_1EB980450, (unint64_t *)&qword_1EB980440);
      sub_1B62D8AE0((uint64_t)v46, (uint64_t)v70, (unint64_t *)&qword_1EB980450, (unint64_t *)&qword_1EB980440);
      sub_1B6E33928();
      swift_bridgeObjectRelease();
      sub_1B62D8AE0((uint64_t)&v43, (uint64_t)v45, (unint64_t *)&unk_1EB9804D0, (unint64_t *)&unk_1EB9804C0);
      sub_1B62D8C10((uint64_t)v45);
      sub_1B62D8C10((uint64_t)v46);
      sub_1B62D8C3C((uint64_t)&v47);
    }
  }
  sub_1B62CA210((uint64_t)v57 + 8, (uint64_t)v58, (unint64_t *)&qword_1EB97D6F0);
  sub_1B62CA210((uint64_t)v58, (uint64_t)v68, (unint64_t *)&qword_1EB97D6F0);
  if (v68[1])
  {
    long long v17 = (void *)v68[3];
    uint64_t v18 = *(void *)(v1 + 176) ? *(void *)(v1 + 176) : v8;
    swift_bridgeObjectRetain();
    sub_1B62D8C68(v18, a1, v17, v34);
    swift_bridgeObjectRelease();
    sub_1B62CA210((uint64_t)v34, (uint64_t)v35, (unint64_t *)&qword_1EB97D6F0);
    if (*((void *)&v35[0] + 1))
    {
      long long v37 = v35[0];
      long long v38 = v35[1];
      uint64_t v39 = v36;
      sub_1B6E318B8();
      uint64_t v19 = v39;
      uint64_t v50 = v39;
      sub_1B6E33928();
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        uint64_t v21 = v19 + 64;
        do
        {
          uint64_t v22 = *(void *)(v21 - 32);
          uint64_t v23 = *(void *)(v21 - 24);
          int v24 = *(unsigned __int8 *)(v21 - 16);
          sub_1B62D6998(v21, (uint64_t)v65);
          sub_1B6E33928();
          if (v24 == 1)
          {
            swift_bridgeObjectRetain();
            sub_1B6E318B8();
          }
          else
          {
            sub_1B6E33928();
          }
          v21 += 112;
          sub_1B62D66DC();
          sub_1B62D66CC(v22, v23, v24);
          --v20;
        }
        while (v20);
      }
      sub_1B62D8AE0((uint64_t)&v38 + 8, (uint64_t)v49, (unint64_t *)&qword_1EB980450, (unint64_t *)&qword_1EB980440);
      sub_1B62D8AE0((uint64_t)v49, (uint64_t)&v69, (unint64_t *)&qword_1EB980450, (unint64_t *)&qword_1EB980440);
      sub_1B6E33928();
      swift_bridgeObjectRelease();
      sub_1B62D8AE0((uint64_t)&v38, (uint64_t)v48, (unint64_t *)&unk_1EB9804D0, (unint64_t *)&unk_1EB9804C0);
      sub_1B62D8C10((uint64_t)v48);
      sub_1B62D8C10((uint64_t)v49);
      sub_1B62D8C3C((uint64_t)&v50);
    }
  }
  long long v25 = *(_OWORD *)(v1 + 200);
  long long v52 = *(_OWORD *)(v1 + 184);
  long long v53 = v25;
  long long v26 = *(_OWORD *)(v1 + 232);
  long long v54 = *(_OWORD *)(v1 + 216);
  long long v55 = v26;
  sub_1B62D69C0();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  memcpy(__dst, (const void *)(v1 + 272), sizeof(__dst));
  sub_1B62D6A50();
  if (*(void *)(v1 + 728))
  {
    sub_1B6E33938();
    sub_1B6E33928();
  }
  else
  {
    sub_1B6E33938();
  }
  if (*(unsigned char *)(v1 + 760) == 2)
  {
    sub_1B6E33938();
  }
  else
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33928();
  }
  sub_1B6E33928();
  sub_1B6E33938();
  long long v62 = v30;
  long long v63 = v31;
  uint64_t v64 = v32;
  long long v61 = v29;
  long long v60 = v28;
  return sub_1B6E33978();
}

uint64_t sub_1B62D739C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1B62D7410(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8328(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7490(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D840C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7510(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8458(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7590(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D84A4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7610(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D84F0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7690(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8588(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7710(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D85D4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7790(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8620(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7810(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D866C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7890(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D86B8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7910(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62CA7BC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7990(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8704(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7A10(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8750(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7A90(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62F7E24(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7B10(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B631424C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7B90(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D87E8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B62D7C78(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8834(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7CF8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8880(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B62D7DE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D88CC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7E68(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B63176A4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7EE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8918(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7F68(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8964(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D7FE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D89B0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D8068(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D89FC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D80E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B63176F0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D8168(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D8A48(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62D81E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, void))
{
  uint64_t v7 = a5(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B62D826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_1B62D82E0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B6E324B8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1B62D8328(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8374(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D83C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D840C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8458(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D84A4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D84F0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D853C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8588(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D85D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8620(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D866C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D86B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8704(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8750(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D879C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D87E8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8834(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8880(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D88CC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8918(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8964(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D89B0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D89FC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8A48(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62D8A94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62D8AE0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1B62D8BB8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B62D8B50(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62F3064(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1B62D8BB8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B62F3064(255, a3);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B62D8C10(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62D8C3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62D8C68@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6 = a3;
  if (!a3)
  {
    swift_unknownObjectRetain();
    uint64_t v6 = a2;
  }
  swift_unknownObjectRetain();
  uint64_t v8 = (void *)sub_1B6E31768();
  id v9 = objc_msgSend(v6, sel_newFunctionWithName_, v8);

  if (v9)
  {
    swift_unknownObjectRetain();
    sub_1B62D8D6C(v9, (uint64_t)v6, a1, v16);
    uint64_t v10 = v16[0];
    uint64_t v11 = v16[1];
    uint64_t v12 = v16[2];
    uint64_t v13 = v16[3];
    uint64_t v14 = v16[4];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  uint64_t result = swift_unknownObjectRelease();
  *a4 = v10;
  a4[1] = v11;
  a4[2] = v12;
  a4[3] = v13;
  a4[4] = v14;
  return result;
}

uint64_t sub_1B62D8D6C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = a1;
  id v8 = objc_msgSend(a1, sel_functionConstantsDictionary);
  sub_1B62D8F08();
  uint64_t v9 = sub_1B6E314C8();

  if (*(void *)(v9 + 16))
  {
    MEMORY[0x1F4188790](v10, v11);
    _OWORD v19[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1B62D8F48((void (*)(long long *__return_ptr, id *))sub_1B62D921C, (uint64_t)v19, v9);
    swift_bridgeObjectRelease();
    uint64_t v20 = v12;
    swift_bridgeObjectRetain();
    sub_1B62D99F0((uint64_t *)&v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t)v20;
    id v14 = objc_msgSend(v6, sel_name);
    uint64_t v15 = sub_1B6E31798();
    uint64_t v17 = v16;

    swift_unknownObjectRetain();
    uint64_t result = swift_unknownObjectRetain();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    uint64_t v6 = 0;
    a2 = 0;
    uint64_t v13 = 0;
  }
  *a4 = v15;
  a4[1] = v17;
  a4[2] = (uint64_t)v6;
  a4[3] = a2;
  a4[4] = v13;
  return result;
}

unint64_t sub_1B62D8F08()
{
  unint64_t result = qword_1EB9805F0;
  if (!qword_1EB9805F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9805F0);
  }
  return result;
}

void *sub_1B62D8F48(void (*a1)(long long *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  uint64_t v27 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  long long v33 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v26 = v5;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_20;
    }
    uint64_t v14 = v11 + 1;
    if (v11 + 1 >= v10) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    if (!v15)
    {
      uint64_t v14 = v11 + 2;
      if (v11 + 2 >= v10) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v14);
      if (!v15)
      {
        uint64_t v14 = v11 + 3;
        if (v11 + 3 >= v10) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v14);
        if (!v15)
        {
          uint64_t v14 = v11 + 4;
          if (v11 + 4 >= v10) {
            goto LABEL_28;
          }
          unint64_t v15 = *(void *)(v27 + 8 * v14);
          if (!v15)
          {
            uint64_t v14 = v11 + 5;
            if (v11 + 5 >= v10) {
              goto LABEL_28;
            }
            unint64_t v15 = *(void *)(v27 + 8 * v14);
            if (!v15) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v11 = v14;
LABEL_20:
    id v41 = *(id *)(*(void *)(v5 + 56) + 8 * v13);
    id v16 = v41;
    a1(&v34, &v41);
    if (v4)
    {
      int v24 = v33;
      swift_bridgeObjectRelease();
      swift_release();

      return v24;
    }

    unsigned __int8 v17 = v35;
    if (v35 != 255)
    {
      long long v31 = v37;
      long long v32 = v36;
      long long v30 = v38;
      long long v28 = v34;
      long long v29 = v39;
      char v18 = v40;
      uint64_t v19 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_1B62D96F4(0, v33[2] + 1, 1, v33);
      }
      uint64_t v20 = v19;
      unint64_t v21 = v19[2];
      long long v33 = v20;
      unint64_t v22 = v20[3];
      if (v21 >= v22 >> 1) {
        long long v33 = sub_1B62D96F4(v22 > 1, v21 + 1, 1, v33);
      }
      _OWORD v33[2] = v21 + 1;
      uint64_t v23 = &v33[14 * v21];
      *((_OWORD *)v23 + 2) = v28;
      *((unsigned char *)v23 + 48) = v17 & 1;
      *((_OWORD *)v23 + 4) = v32;
      *((_OWORD *)v23 + 5) = v31;
      *((_OWORD *)v23 + 6) = v30;
      *((_OWORD *)v23 + 7) = v29;
      *((unsigned char *)v23 + 128) = v18;
      uint64_t v5 = v26;
    }
  }
  while (v10 - 6 != v11)
  {
    unint64_t v15 = *(void *)(v5 + 8 * v11++ + 112);
    if (v15)
    {
      uint64_t v14 = v11 + 5;
      goto LABEL_19;
    }
  }
LABEL_28:
  swift_release();
  return v33;
}

uint64_t sub_1B62D921C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B62D9238(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1B62D9238@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v3 = *a1;
  if (!a2 || (uint64_t v4 = *(void *)(a2 + 16)) == 0)
  {
LABEL_20:
    uint64_t result = (uint64_t)objc_msgSend(v3, sel_required);
    if (result)
    {
      id v20 = v3;
      id v44 = objc_msgSend(v20, sel_index);
      sub_1B62D97D8((uint64_t)objc_msgSend(v20, sel_type), (uint64_t)v38);
      uint64_t v21 = v38[1];
      uint64_t v37 = v38[0];
      uint64_t v22 = v38[2];
      uint64_t v23 = v38[3];
      uint64_t v24 = v38[4];
      uint64_t v25 = v38[5];
      uint64_t v27 = v38[6];
      uint64_t v26 = v38[7];
      char v28 = v39;

      uint64_t result = sub_1B62D971C((uint64_t)v38, (uint64_t)&v40);
      if (v41 == 255)
      {
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
        uint64_t v27 = 0;
        uint64_t v26 = 0;
        char v28 = 14;
        uint64_t v29 = 0xFFFFFFFFLL;
      }
      else
      {
        uint64_t result = sub_1B62D6998((uint64_t)&v40, (uint64_t)v42);
        uint64_t v29 = v37;
      }
      *(void *)a3 = v44;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 32) = v29;
      *(void *)(a3 + 40) = v21;
      *(void *)(a3 + 48) = v22;
      *(void *)(a3 + 56) = v23;
      *(void *)(a3 + 64) = v24;
      *(void *)(a3 + 72) = v25;
      *(void *)(a3 + 80) = v27;
      *(void *)(a3 + 88) = v26;
      *(unsigned char *)(a3 + 96) = v28;
    }
    else
    {
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 255;
      *(_OWORD *)(a3 + 24) = 0u;
      *(_OWORD *)(a3 + 40) = 0u;
      *(_OWORD *)(a3 + 56) = 0u;
      *(_OWORD *)(a3 + 72) = 0u;
      *(_OWORD *)(a3 + 81) = 0u;
    }
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v31 = a2;
  uint64_t v6 = a2 + 64;
  id v44 = v3;
  while (1)
  {
    id v7 = *(id *)(v6 - 32);
    uint64_t v8 = *(void *)(v6 - 24);
    uint64_t v9 = *(unsigned __int8 *)(v6 - 16);
    long long v35 = *(_OWORD *)(v6 + 16);
    long long v36 = *(_OWORD *)v6;
    long long v33 = *(_OWORD *)(v6 + 48);
    long long v34 = *(_OWORD *)(v6 + 32);
    uint64_t v10 = *(char *)(v6 + 64);
    if (v9 != 1) {
      break;
    }
    swift_bridgeObjectRetain_n();
    id v11 = objc_msgSend(v3, sel_name);
    uint64_t v12 = sub_1B6E31798();
    uint64_t v14 = v13;

    if ((id)v12 == v7 && v8 == v14)
    {
      sub_1B62D66CC((uint64_t)v7, v8, 1);
      swift_bridgeObjectRelease();
LABEL_16:
      id v3 = v44;
      id v18 = objc_msgSend(v44, sel_type);
      goto LABEL_17;
    }
    char v16 = sub_1B6E334B8();
    char v17 = 1;
    sub_1B62D66CC((uint64_t)v7, v8, 1);
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_16;
    }
LABEL_4:
    sub_1B62D66CC((uint64_t)v7, v8, v17);
    id v3 = v44;
LABEL_5:
    v6 += 112;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_20;
    }
  }
  if (objc_msgSend(v3, sel_index) != v7) {
    goto LABEL_5;
  }
  id v18 = objc_msgSend(v3, sel_type);
LABEL_17:
  if (v18 != qword_1B6E902A8[v10])
  {
    char v17 = v9;
    goto LABEL_4;
  }
  uint64_t result = swift_bridgeObjectRelease_n();
  if (!v9)
  {
    if (v7 != 606) {
      goto LABEL_37;
    }
    uint64_t result = sub_1B62DACD8(601, 1, v31);
    if (result) {
      goto LABEL_37;
    }
    uint64_t result = sub_1B62DACD8(602, 1, v31);
    if (result) {
      goto LABEL_37;
    }
    uint64_t result = sub_1B62DACD8(603, 1, v31);
    if (result) {
      goto LABEL_37;
    }
    uint64_t result = sub_1B62DACD8(604, 1, v31);
    if (result) {
      goto LABEL_37;
    }
    goto LABEL_20;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  v42[0] = (uint64_t)v7;
  v42[1] = v8;
  char v43 = 1;
  sub_1B6E32B18();
  int v30 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v42[0] = 0;
  swift_retain();
  sub_1B6B33E34(v30, v42, 0, 0xE000000000000000);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
LABEL_37:
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v9;
  *(void *)(a3 + 24) = 0;
  *(_OWORD *)(a3 + 32) = v36;
  *(_OWORD *)(a3 + 48) = v35;
  *(_OWORD *)(a3 + 64) = v34;
  *(_OWORD *)(a3 + 80) = v33;
  *(unsigned char *)(a3 + 96) = v10;
  return result;
}

void *sub_1B62D96F4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1B62CB064(a1, a2, a3, a4, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, (void (*)(void, int64_t, void *, void *))sub_1B62CD1B4);
}

uint64_t sub_1B62D971C(uint64_t a1, uint64_t a2)
{
  sub_1B62D9780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B62D9780()
{
  if (!qword_1EB980018)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980018);
    }
  }
}

uint64_t sub_1B62D97D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  long long v2 = 0uLL;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  char v6 = 0;
  switch(result)
  {
    case 3:
      break;
    case 4:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 1;
      break;
    case 5:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 2;
      break;
    case 6:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 3;
      break;
    case 7:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      long long v2 = xmmword_1B6E4F390;
      char v6 = 4;
      break;
    case 8:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 5;
      break;
    case 9:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 6;
      break;
    case 10:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 7;
      break;
    case 11:
      uint64_t v5 = 0;
      long long v2 = xmmword_1B6E4F300;
      char v6 = 8;
      uint64_t v3 = 0x3F80000000000000;
      uint64_t v4 = 1065353216;
      break;
    case 12:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 9;
      break;
    case 13:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 10;
      break;
    case 14:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 11;
      break;
    case 15:
      long long v2 = xmmword_1B6E4F300;
      char v6 = 12;
      uint64_t v3 = 0x3F80000000000000;
      uint64_t v4 = 1065353216;
      uint64_t v5 = 0x3F80000000000000;
      break;
    case 29:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 14;
      break;
    case 33:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 15;
      break;
    case 53:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = 13;
      break;
    default:
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      char v6 = -1;
      break;
  }
  *(_OWORD *)a2 = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v5;
  *(unsigned char *)(a2 + 64) = v6;
  return result;
}

uint64_t sub_1B62D9984(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B62D9A5C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1B62DA340(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B62D99F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B62D9A5C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1B62D9C58(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B62D9A5C(uint64_t a1)
{
  return sub_1B62D9C44(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B62D9A70(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  int64_t v11 = *((void *)a4 + 2);
  if (a2 <= v11) {
    int64_t v12 = *((void *)a4 + 2);
  }
  else {
    int64_t v12 = a2;
  }
  if (v12)
  {
    sub_1B62D9BF8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = (char *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - 32) / 112);
  }
  else
  {
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = v13 + 32;
  char v16 = a4 + 32;
  size_t v17 = 112 * v11;
  if (a1)
  {
    if (v13 != a4 || v15 >= &v16[v17]) {
      memmove(v15, v16, v17);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v16 < &v15[v17] && v15 < &v16[v17])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (uint64_t)v13;
}

void sub_1B62D9BF8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62D9C44(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1B62D9A70(a1, a2, a3, a4, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant);
}

uint64_t sub_1B62D9C58(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v3)
  {
    if (v3) {
      return sub_1B62DA284(0, v3, 1, a1);
    }
    return result;
  }
  uint64_t v79 = result;
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  long long v76 = a1;
  if (v3 >= 2)
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1B6E31C98();
    *(void *)(v7 + 16) = v6;
    uint64_t v78 = v7;
    uint64_t v87 = (char *)(v7 + 32);
    goto LABEL_12;
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v87 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if (v3 == 1)
  {
    uint64_t v78 = MEMORY[0x1E4FBC860];
LABEL_12:
    uint64_t v9 = 0;
    uint64_t v10 = *a1;
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v80 = v3;
    do
    {
      uint64_t v13 = v9++;
      if (v9 < v3)
      {
        size_t v14 = (uint64_t *)(v10 + 112 * v9);
        unint64_t v15 = (uint64_t *)(v10 + 112 * v13);
        uint64_t v16 = *v15;
        int v17 = *((unsigned __int8 *)v15 + 16);
        if (*((unsigned char *)v14 + 16)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = *v14;
        }
        if (v17) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = v16;
        }
        uint64_t v9 = v13 + 2;
        if (v13 + 2 < v3)
        {
          uint64_t v20 = v10 + 128 + 112 * v13;
          while (1)
          {
            uint64_t v21 = *(void *)(v20 + 96);
            if (*(unsigned char *)(v20 + 112)) {
              uint64_t v21 = 0;
            }
            uint64_t v22 = *(unsigned char *)v20 ? 0 : *(void *)(v20 - 16);
            if (v18 < v19 == v21 >= v22) {
              break;
            }
            v20 += 112;
            if (v3 == ++v9)
            {
              uint64_t v9 = v3;
              break;
            }
          }
        }
        if (v18 < v19 && v13 < v9)
        {
          uint64_t v23 = 112 * v9;
          uint64_t v24 = v9;
          uint64_t v25 = v13;
          uint64_t v77 = v13;
          uint64_t v26 = 112 * v13;
          uint64_t v81 = v11;
          do
          {
            if (v25 != --v24)
            {
              uint64_t v27 = v10 + v23;
              char v28 = *(unsigned char *)(v10 + v26 + 16);
              char v29 = *(unsigned char *)(v10 + v26 + 96);
              long long v82 = *(_OWORD *)(v10 + v26);
              long long v85 = *(_OWORD *)(v10 + v26 + 48);
              long long v86 = *(_OWORD *)(v10 + v26 + 32);
              long long v83 = *(_OWORD *)(v10 + v26 + 80);
              long long v84 = *(_OWORD *)(v10 + v26 + 64);
              memmove((void *)(v10 + v26), (const void *)(v10 + v23 - 112), 0x70uLL);
              *(_OWORD *)(v27 - 112) = v82;
              *(unsigned char *)(v27 - 96) = v28;
              *(_OWORD *)(v27 - 80) = v86;
              *(_OWORD *)(v27 - 64) = v85;
              *(_OWORD *)(v27 - 48) = v84;
              *(_OWORD *)(v27 - 32) = v83;
              *(unsigned char *)(v27 - 16) = v29;
              int64_t v11 = v81;
            }
            ++v25;
            v23 -= 112;
            v26 += 112;
          }
          while (v25 < v24);
          uint64_t v3 = v80;
          uint64_t v13 = v77;
        }
      }
      if (v9 < v3 && v9 - v13 < v79)
      {
        uint64_t v30 = v13 + v79;
        if (v13 + v79 >= v3) {
          uint64_t v30 = v3;
        }
        if (v9 != v30)
        {
          uint64_t v31 = v10 - 112 + 112 * v9;
          do
          {
            uint64_t v32 = v13;
            uint64_t v33 = v31;
            do
            {
              long long v34 = (_OWORD *)(v33 + 112);
              uint64_t v35 = *(void *)(v33 + 112);
              char v36 = *(unsigned char *)(v33 + 128);
              uint64_t v37 = *(void *)v33;
              if (v36) {
                uint64_t v38 = 0;
              }
              else {
                uint64_t v38 = *(void *)(v33 + 112);
              }
              if (*(unsigned char *)(v33 + 16)) {
                uint64_t v37 = 0;
              }
              if (v38 >= v37) {
                break;
              }
              uint64_t v39 = *(void *)(v33 + 120);
              char v40 = *(unsigned char *)(v33 + 208);
              long long v41 = *(_OWORD *)(v33 + 144);
              long long v42 = *(_OWORD *)(v33 + 160);
              long long v43 = *(_OWORD *)(v33 + 176);
              long long v44 = *(_OWORD *)(v33 + 192);
              long long v45 = *(_OWORD *)(v33 + 80);
              *(_OWORD *)(v33 + 176) = *(_OWORD *)(v33 + 64);
              *(_OWORD *)(v33 + 192) = v45;
              *(_OWORD *)(v33 + 208) = *(_OWORD *)(v33 + 96);
              long long v46 = *(_OWORD *)(v33 + 16);
              *long long v34 = *(_OWORD *)v33;
              *(_OWORD *)(v33 + 128) = v46;
              long long v48 = *(_OWORD *)(v33 + 32);
              long long v47 = *(_OWORD *)(v33 + 48);
              *(void *)uint64_t v33 = v35;
              *(void *)(v33 + 8) = v39;
              *(unsigned char *)(v33 + 16) = v36;
              *(_OWORD *)(v33 + 32) = v41;
              *(_OWORD *)(v33 + 48) = v42;
              *(_OWORD *)(v33 + 64) = v43;
              *(_OWORD *)(v33 + 80) = v44;
              *(unsigned char *)(v33 + 96) = v40;
              v33 -= 112;
              ++v32;
              v34[2] = v48;
              v34[3] = v47;
            }
            while (v9 != v32);
            ++v9;
            v31 += 112;
          }
          while (v9 != v30);
          uint64_t v9 = v30;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v11 = sub_1B62BD890(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v50 = *((void *)v11 + 2);
      unint64_t v49 = *((void *)v11 + 3);
      unint64_t v12 = v50 + 1;
      if (v50 >= v49 >> 1) {
        int64_t v11 = sub_1B62BD890(v49 > 1, v50 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v12;
      uint64_t v51 = v11 + 32;
      long long v52 = &v11[16 * v50 + 32];
      *(void *)long long v52 = v13;
      *((void *)v52 + 1) = v9;
      if (v50)
      {
        while (1)
        {
          uint64_t v53 = v12 - 1;
          if (v12 >= 4)
          {
            uint64_t v58 = &v51[16 * v12];
            uint64_t v59 = *((void *)v58 - 7) - *((void *)v58 - 8);
            uint64_t v56 = *((void *)v58 - 5) - *((void *)v58 - 6);
            uint64_t v57 = v12 - 2;
            long long v60 = &v51[16 * v12 - 32];
            uint64_t v54 = *(void *)v60;
            uint64_t v55 = *((void *)v60 + 1);
            if (v56 - v54 + v55 >= v59)
            {
              BOOL v63 = v56 < *(void *)&v51[16 * v53 + 8] - *(void *)&v51[16 * v53];
              goto LABEL_71;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v61 = *(void *)&v51[16 * v12 - 24] - *(void *)&v51[16 * v12 - 32];
              uint64_t v62 = *(void *)&v51[16 * v53 + 8] - *(void *)&v51[16 * v53];
LABEL_68:
              if (v62 < v61) {
                goto LABEL_14;
              }
              goto LABEL_73;
            }
            uint64_t v54 = *((void *)v11 + 6);
            uint64_t v55 = *((void *)v11 + 7);
            uint64_t v56 = *((void *)v11 + 5) - *((void *)v11 + 4);
            uint64_t v57 = 1;
          }
          uint64_t v61 = v55 - v54;
          uint64_t v62 = *(void *)&v51[16 * v53 + 8] - *(void *)&v51[16 * v53];
          if (v61 + v62 < v56) {
            goto LABEL_68;
          }
          BOOL v63 = v56 < v62;
LABEL_71:
          if (v63) {
            uint64_t v53 = v57;
          }
LABEL_73:
          uint64_t v64 = v11;
          uint64_t v65 = &v51[16 * v53 - 16];
          uint64_t v66 = *(void *)v65;
          uint64_t v67 = &v51[16 * v53];
          uint64_t v68 = *((void *)v67 + 1);
          sub_1B682EC18((char *)(v10 + 112 * *(void *)v65), (char *)(v10 + 112 * *(void *)v67), v10 + 112 * v68, v87);
          if (v1) {
            goto LABEL_76;
          }
          *(void *)uint64_t v65 = v66;
          *((void *)v65 + 1) = v68;
          int64_t v11 = v64;
          unint64_t v69 = *((void *)v64 + 2);
          unint64_t v12 = v69 - 1;
          memmove(&v51[16 * v53], v67 + 16, 16 * (v69 - 1 - v53));
          *((void *)v11 + 2) = v69 - 1;
          if (v69 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_14:
      uint64_t v3 = v80;
    }
    while (v9 < v80);
    uint64_t v8 = v78;
    goto LABEL_80;
  }
  unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_80:
  uint64_t v78 = v8;
  if (v12 >= 2)
  {
    uint64_t v70 = *v76;
    do
    {
      uint64_t v71 = *(void *)&v11[16 * v12];
      uint64_t v72 = &v11[16 * v12 + 16];
      uint64_t v73 = *((void *)v72 + 1);
      sub_1B682EC18((char *)(v70 + 112 * v71), (char *)(v70 + 112 * *(void *)v72), v70 + 112 * v73, v87);
      if (v1) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v11 = sub_1B6D671B8((uint64_t)v11);
      }
      uint64_t v74 = &v11[16 * v12];
      *(void *)uint64_t v74 = v71;
      *((void *)v74 + 1) = v73;
      unint64_t v75 = *((void *)v11 + 2);
      memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v75 - v12));
      *((void *)v11 + 2) = v75 - 1;
      unint64_t v12 = v75 - 1;
    }
    while (v75 > 2);
  }
LABEL_76:
  swift_bridgeObjectRelease();
  *(void *)(v78 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62DA284(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4 + 112 * a3 - 112;
    do
    {
      uint64_t v5 = result;
      uint64_t v6 = v4;
      do
      {
        uint64_t v7 = (_OWORD *)(v6 + 112);
        uint64_t v8 = *(void *)(v6 + 112);
        char v9 = *(unsigned char *)(v6 + 128);
        uint64_t v10 = *(void *)v6;
        if (v9) {
          uint64_t v11 = 0;
        }
        else {
          uint64_t v11 = *(void *)(v6 + 112);
        }
        if (*(unsigned char *)(v6 + 16)) {
          uint64_t v10 = 0;
        }
        if (v11 >= v10) {
          break;
        }
        uint64_t v12 = *(void *)(v6 + 120);
        char v13 = *(unsigned char *)(v6 + 208);
        long long v14 = *(_OWORD *)(v6 + 144);
        long long v15 = *(_OWORD *)(v6 + 160);
        long long v16 = *(_OWORD *)(v6 + 176);
        long long v17 = *(_OWORD *)(v6 + 192);
        long long v18 = *(_OWORD *)(v6 + 80);
        *(_OWORD *)(v6 + 176) = *(_OWORD *)(v6 + 64);
        *(_OWORD *)(v6 + 192) = v18;
        *(_OWORD *)(v6 + 208) = *(_OWORD *)(v6 + 96);
        long long v19 = *(_OWORD *)(v6 + 16);
        *uint64_t v7 = *(_OWORD *)v6;
        *(_OWORD *)(v6 + 128) = v19;
        long long v21 = *(_OWORD *)(v6 + 32);
        long long v20 = *(_OWORD *)(v6 + 48);
        *(void *)uint64_t v6 = v8;
        *(void *)(v6 + 8) = v12;
        *(unsigned char *)(v6 + 16) = v9;
        *(_OWORD *)(v6 + 32) = v14;
        *(_OWORD *)(v6 + 48) = v15;
        *(_OWORD *)(v6 + 64) = v16;
        *(_OWORD *)(v6 + 80) = v17;
        *(unsigned char *)(v6 + 96) = v13;
        v6 -= 112;
        ++v5;
        uint64_t v7[2] = v21;
        v7[3] = v20;
      }
      while (a3 != v5);
      ++a3;
      v4 += 112;
    }
    while (a3 != a2);
  }
  return result;
}

uint64_t sub_1B62DA340(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v4)
  {
    if (v4) {
      return sub_1B62DAB70(0, v4, 1, a1);
    }
    return result;
  }
  uint64_t v93 = result;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  unint64_t v89 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v103 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_111;
    }
    uint64_t v92 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1B6E31C98();
    *(void *)(v8 + 16) = v7;
    uint64_t v92 = v8;
    uint64_t v103 = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v91 = *a1 + 16;
  uint64_t v105 = *a1;
  uint64_t v90 = *a1 - 112;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v94 = v4;
  while (2)
  {
    uint64_t v13 = v10++;
    uint64_t v104 = v13;
    long long v95 = v11;
    if (v10 >= v4)
    {
LABEL_61:
      if (v10 >= v4) {
        goto LABEL_84;
      }
      goto LABEL_62;
    }
    uint64_t v14 = v2;
    long long v15 = (uint64_t *)(v105 + 112 * v10);
    uint64_t v16 = *v15;
    int v17 = *((unsigned __int8 *)v15 + 16);
    long long v18 = (uint64_t *)(v105 + 112 * v13);
    uint64_t v19 = *v18;
    int v20 = *((unsigned __int8 *)v18 + 16);
    if (v17 != 1)
    {
      if ((v20 & 1) == 0)
      {
        if (v16 == v19)
        {
          uint64_t v22 = v104 + 2;
          uint64_t v2 = v14;
          if (v104 + 2 >= v4)
          {
            uint64_t v10 = v104 + 2;
            goto LABEL_107;
          }
          int v23 = 0;
          goto LABEL_28;
        }
        int v23 = v16 < v19;
        goto LABEL_27;
      }
      goto LABEL_26;
    }
    if ((v20 & 1) == 0)
    {
LABEL_26:
      int v23 = v20 & (v17 ^ 1);
      goto LABEL_27;
    }
    BOOL v21 = v16 == v19 && v15[1] == v18[1];
    if (v21 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v22 = v104 + 2;
      if (v104 + 2 >= v4)
      {
        uint64_t v10 = v104 + 2;
        uint64_t v2 = v14;
        goto LABEL_107;
      }
      int v23 = 0;
      uint64_t v2 = v14;
      goto LABEL_28;
    }
    int v23 = sub_1B6E334B8();
LABEL_27:
    uint64_t v2 = v14;
    uint64_t v13 = v104;
    uint64_t v22 = v104 + 2;
    if (v104 + 2 >= v4) {
      goto LABEL_50;
    }
LABEL_28:
    uint64_t v24 = (unsigned __int8 *)(v91 + 112 * v22);
    uint64_t v25 = v22;
    do
    {
      uint64_t v26 = v2;
      uint64_t v22 = v25;
      uint64_t v27 = *((void *)v24 - 2);
      int v28 = *v24;
      char v29 = (uint64_t *)(v105 + 112 * v10);
      uint64_t v30 = *v29;
      int v31 = *((unsigned __int8 *)v29 + 16);
      if (v28 != 1)
      {
        if (v31)
        {
LABEL_40:
          int v33 = v31 & (v28 ^ 1);
        }
        else
        {
          if (v27 == v30) {
            goto LABEL_29;
          }
          int v33 = v27 < v30;
        }
LABEL_41:
        uint64_t v2 = v26;
        if ((v23 ^ v33)) {
          goto LABEL_49;
        }
        goto LABEL_30;
      }
      if ((v31 & 1) == 0) {
        goto LABEL_40;
      }
      BOOL v32 = v27 == v30 && *((void *)v24 - 1) == v29[1];
      if (!v32 && (sub_1B6E334B8() & 1) == 0)
      {
        int v33 = sub_1B6E334B8();
        goto LABEL_41;
      }
LABEL_29:
      uint64_t v2 = v26;
      if (v23)
      {
        uint64_t v13 = v104;
        if (v104 < v22) {
          goto LABEL_52;
        }
LABEL_60:
        uint64_t v10 = v22;
        goto LABEL_61;
      }
LABEL_30:
      v24 += 112;
      uint64_t v25 = v22 + 1;
      uint64_t v10 = v22;
    }
    while (v22 + 1 < v4);
    ++v22;
LABEL_49:
    uint64_t v13 = v104;
LABEL_50:
    uint64_t v10 = v22;
    if ((v23 & 1) == 0) {
      goto LABEL_61;
    }
    if (v13 >= v22) {
      goto LABEL_60;
    }
LABEL_52:
    uint64_t v34 = 112 * v22;
    uint64_t v35 = v22;
    uint64_t v36 = v13;
    uint64_t v37 = 112 * v13;
    do
    {
      if (v36 != --v35)
      {
        uint64_t v38 = v105 + v34;
        char v39 = *(unsigned char *)(v105 + v37 + 16);
        char v40 = *(unsigned char *)(v105 + v37 + 96);
        long long v96 = *(_OWORD *)(v105 + v37);
        long long v101 = *(_OWORD *)(v105 + v37 + 32);
        long long v98 = *(_OWORD *)(v105 + v37 + 64);
        long long v99 = *(_OWORD *)(v105 + v37 + 48);
        long long v97 = *(_OWORD *)(v105 + v37 + 80);
        memmove((void *)(v105 + v37), (const void *)(v105 + v34 - 112), 0x70uLL);
        *(_OWORD *)(v38 - 112) = v96;
        *(unsigned char *)(v38 - 96) = v39;
        *(_OWORD *)(v38 - 80) = v101;
        *(_OWORD *)(v38 - 64) = v99;
        *(_OWORD *)(v38 - 48) = v98;
        *(_OWORD *)(v38 - 32) = v97;
        *(unsigned char *)(v38 - 16) = v40;
      }
      ++v36;
      v34 -= 112;
      v37 += 112;
    }
    while (v36 < v35);
    uint64_t v10 = v22;
    uint64_t v4 = v94;
LABEL_107:
    uint64_t v13 = v104;
    if (v10 >= v4)
    {
LABEL_84:
      uint64_t v11 = v95;
      goto LABEL_85;
    }
LABEL_62:
    uint64_t v11 = v95;
    if (v10 - v13 < v93)
    {
      uint64_t v41 = v13 + v93;
      if (v13 + v93 >= v4) {
        uint64_t v41 = v4;
      }
      uint64_t v102 = v41;
      if (v10 != v41)
      {
        uint64_t v100 = v2;
        uint64_t v42 = v90 + 112 * v10;
        while (1)
        {
          uint64_t v43 = v104;
          uint64_t v44 = v42;
          while (1)
          {
            uint64_t v56 = (_OWORD *)(v44 + 112);
            uint64_t v57 = *(void *)(v44 + 112);
            uint64_t v58 = *(void *)(v44 + 120);
            uint64_t v59 = *(void *)v44;
            char v45 = *(unsigned char *)(v44 + 16);
            if (*(unsigned char *)(v44 + 128) != 1) {
              break;
            }
            if ((*(unsigned char *)(v44 + 16) & 1) == 0) {
              goto LABEL_67;
            }
            BOOL v60 = v57 == v59 && v58 == *(void *)(v44 + 8);
            if (v60 || (sub_1B6E334B8() & 1) != 0 || (sub_1B6E334B8() & 1) == 0) {
              goto LABEL_67;
            }
            uint64_t v57 = *(void *)(v44 + 112);
            uint64_t v58 = *(void *)(v44 + 120);
            char v46 = *(unsigned char *)(v44 + 128);
LABEL_73:
            char v47 = *(unsigned char *)(v44 + 208);
            long long v48 = *(_OWORD *)(v44 + 144);
            long long v49 = *(_OWORD *)(v44 + 160);
            long long v50 = *(_OWORD *)(v44 + 176);
            long long v51 = *(_OWORD *)(v44 + 192);
            long long v52 = *(_OWORD *)(v44 + 80);
            *(_OWORD *)(v44 + 176) = *(_OWORD *)(v44 + 64);
            *(_OWORD *)(v44 + 192) = v52;
            *(_OWORD *)(v44 + 208) = *(_OWORD *)(v44 + 96);
            long long v53 = *(_OWORD *)(v44 + 16);
            *uint64_t v56 = *(_OWORD *)v44;
            *(_OWORD *)(v44 + 128) = v53;
            long long v55 = *(_OWORD *)(v44 + 32);
            long long v54 = *(_OWORD *)(v44 + 48);
            *(void *)uint64_t v44 = v57;
            *(void *)(v44 + 8) = v58;
            *(unsigned char *)(v44 + 16) = v46;
            *(_OWORD *)(v44 + 32) = v48;
            *(_OWORD *)(v44 + 48) = v49;
            *(_OWORD *)(v44 + 64) = v50;
            *(_OWORD *)(v44 + 80) = v51;
            *(unsigned char *)(v44 + 96) = v47;
            v44 -= 112;
            ++v43;
            _OWORD v56[2] = v55;
            v56[3] = v54;
            if (v10 == v43) {
              goto LABEL_67;
            }
          }
          if (v57 < v59) {
            char v45 = 1;
          }
          if (v45) {
            break;
          }
LABEL_67:
          ++v10;
          v42 += 112;
          if (v10 == v102)
          {
            uint64_t v10 = v102;
            uint64_t v2 = v100;
            goto LABEL_84;
          }
        }
        char v46 = 0;
        goto LABEL_73;
      }
    }
LABEL_85:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1B62BD890(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v62 = *((void *)v11 + 2);
    unint64_t v61 = *((void *)v11 + 3);
    unint64_t v12 = v62 + 1;
    if (v62 >= v61 >> 1) {
      uint64_t v11 = sub_1B62BD890(v61 > 1, v62 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    BOOL v63 = v11 + 32;
    uint64_t v64 = &v11[16 * v62 + 32];
    *(void *)uint64_t v64 = v104;
    *((void *)v64 + 1) = v10;
    if (v62)
    {
      while (2)
      {
        uint64_t v65 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v70 = &v63[16 * v12];
          uint64_t v71 = *((void *)v70 - 7) - *((void *)v70 - 8);
          uint64_t v68 = *((void *)v70 - 5) - *((void *)v70 - 6);
          uint64_t v69 = v12 - 2;
          uint64_t v72 = &v63[16 * v12 - 32];
          uint64_t v66 = *(void *)v72;
          uint64_t v67 = *((void *)v72 + 1);
          if (v68 - v66 + v67 >= v71)
          {
            BOOL v75 = v68 < *(void *)&v63[16 * v65 + 8] - *(void *)&v63[16 * v65];
          }
          else
          {
LABEL_94:
            uint64_t v73 = v67 - v66;
            uint64_t v74 = *(void *)&v63[16 * v65 + 8] - *(void *)&v63[16 * v65];
            if (v73 + v74 < v68) {
              goto LABEL_97;
            }
            BOOL v75 = v68 < v74;
          }
          if (v75) {
            uint64_t v65 = v69;
          }
        }
        else
        {
          if (v12 == 3)
          {
            uint64_t v66 = *((void *)v11 + 6);
            uint64_t v67 = *((void *)v11 + 7);
            uint64_t v68 = *((void *)v11 + 5) - *((void *)v11 + 4);
            uint64_t v69 = 1;
            goto LABEL_94;
          }
          uint64_t v73 = *(void *)&v63[16 * v12 - 24] - *(void *)&v63[16 * v12 - 32];
          uint64_t v74 = *(void *)&v63[16 * v65 + 8] - *(void *)&v63[16 * v65];
LABEL_97:
          if (v74 < v73) {
            goto LABEL_14;
          }
        }
        long long v76 = v11;
        uint64_t v77 = &v63[16 * v65 - 16];
        uint64_t v78 = *(void *)v77;
        uint64_t v79 = &v63[16 * v65];
        uint64_t v80 = *((void *)v79 + 1);
        sub_1B6BED244((char *)(v105 + 112 * *(void *)v77), (char *)(v105 + 112 * *(void *)v79), v105 + 112 * v80, v103);
        if (v2) {
          goto LABEL_117;
        }
        *(void *)uint64_t v77 = v78;
        *((void *)v77 + 1) = v80;
        uint64_t v11 = v76;
        unint64_t v81 = *((void *)v76 + 2);
        unint64_t v12 = v81 - 1;
        memmove(&v63[16 * v65], v79 + 16, 16 * (v81 - 1 - v65));
        *((void *)v11 + 2) = v81 - 1;
        if (v81 <= 2) {
          goto LABEL_14;
        }
        continue;
      }
    }
    unint64_t v12 = 1;
LABEL_14:
    uint64_t v4 = v94;
    if (v10 < v94) {
      continue;
    }
    break;
  }
  uint64_t v9 = v92;
LABEL_111:
  uint64_t v92 = v9;
  if (v12 >= 2)
  {
    uint64_t v82 = *v89;
    do
    {
      uint64_t v83 = *(void *)&v11[16 * v12];
      long long v84 = &v11[16 * v12 + 16];
      uint64_t v85 = *((void *)v84 + 1);
      sub_1B6BED244((char *)(v82 + 112 * v83), (char *)(v82 + 112 * *(void *)v84), v82 + 112 * v85, v103);
      if (v2) {
        break;
      }
      long long v86 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v86 = sub_1B6D671B8((uint64_t)v11);
      }
      uint64_t v87 = &v86[16 * v12];
      *(void *)uint64_t v87 = v83;
      *((void *)v87 + 1) = v85;
      uint64_t v11 = v86;
      unint64_t v88 = *((void *)v86 + 2);
      memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v88 - v12));
      *((void *)v86 + 2) = v88 - 1;
      unint64_t v12 = v88 - 1;
    }
    while (v88 > 2);
  }
LABEL_117:
  swift_bridgeObjectRelease();
  *(void *)(v92 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62DAB70(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v24 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    for (uint64_t i = *a4 + 112 * a3 - 112; ; i += 112)
    {
      uint64_t v6 = v24;
      uint64_t v7 = i;
      while (1)
      {
        uint64_t v19 = (_OWORD *)(v7 + 112);
        uint64_t v20 = *(void *)(v7 + 112);
        uint64_t v21 = *(void *)(v7 + 120);
        uint64_t v22 = *(void *)v7;
        char v8 = *(unsigned char *)(v7 + 16);
        if (*(unsigned char *)(v7 + 128) != 1) {
          break;
        }
        if ((*(unsigned char *)(v7 + 16) & 1) == 0) {
          goto LABEL_4;
        }
        if (v20 == v22 && v21 == *(void *)(v7 + 8)) {
          goto LABEL_4;
        }
        uint64_t result = sub_1B6E334B8();
        if (result) {
          goto LABEL_4;
        }
        uint64_t result = sub_1B6E334B8();
        if ((result & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v20 = *(void *)(v7 + 112);
        uint64_t v21 = *(void *)(v7 + 120);
        char v9 = *(unsigned char *)(v7 + 128);
LABEL_10:
        char v10 = *(unsigned char *)(v7 + 208);
        long long v11 = *(_OWORD *)(v7 + 144);
        long long v12 = *(_OWORD *)(v7 + 160);
        long long v13 = *(_OWORD *)(v7 + 176);
        long long v14 = *(_OWORD *)(v7 + 192);
        long long v15 = *(_OWORD *)(v7 + 80);
        *(_OWORD *)(v7 + 176) = *(_OWORD *)(v7 + 64);
        *(_OWORD *)(v7 + 192) = v15;
        *(_OWORD *)(v7 + 208) = *(_OWORD *)(v7 + 96);
        long long v16 = *(_OWORD *)(v7 + 16);
        *uint64_t v19 = *(_OWORD *)v7;
        *(_OWORD *)(v7 + 128) = v16;
        long long v18 = *(_OWORD *)(v7 + 32);
        long long v17 = *(_OWORD *)(v7 + 48);
        *(void *)uint64_t v7 = v20;
        *(void *)(v7 + 8) = v21;
        *(unsigned char *)(v7 + 16) = v9;
        *(_OWORD *)(v7 + 32) = v11;
        *(_OWORD *)(v7 + 48) = v12;
        *(_OWORD *)(v7 + 64) = v13;
        *(_OWORD *)(v7 + 80) = v14;
        *(unsigned char *)(v7 + 96) = v10;
        v7 -= 112;
        ++v6;
        _OWORD v19[2] = v18;
        v19[3] = v17;
        if (v4 == v6) {
          goto LABEL_4;
        }
      }
      if (v20 < v22) {
        char v8 = 1;
      }
      if (v8) {
        break;
      }
LABEL_4:
      if (++v4 == a2) {
        return result;
      }
    }
    char v9 = 0;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B62DACD8(int a1, char a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    goto LABEL_7;
  }
  uint64_t v4 = (unsigned char *)(a3 + 64);
  while ((*(v4 - 16) & 1) != 0 || *((void *)v4 - 4) != a1)
  {
    v4 += 112;
    if (!--v3) {
      goto LABEL_7;
    }
  }
  int v5 = v4[64];
  if (v5 == 14)
  {
LABEL_7:
    char v6 = 0;
    return v6 & 1;
  }
  if (v5 == 13)
  {
    char v6 = ((*v4 & 1) == 0) ^ a2;
    return v6 & 1;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

unint64_t sub_1B62DADA8(uint64_t a1)
{
  uint64_t v30 = sub_1B6E31028();
  uint64_t v2 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30, v3);
  int v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1B6E31808();
  MEMORY[0x1F4188790](v29, v6);
  int v28 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v31 = 0;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = a1 + 32;
  uint64_t v24 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v25 = (void (**)(char *, uint64_t))(v7 + 8);
  v23[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v26 = a1 + 32;
  uint64_t v27 = v9;
  do
  {
    uint64_t v12 = v10 + 112 * v11;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    int v15 = *(unsigned __int8 *)(v12 + 16);
    sub_1B62D6998(v12 + 32, (uint64_t)v32);
    if (v15 == 1)
    {
      swift_bridgeObjectRetain_n();
      long long v16 = v28;
      sub_1B6E317E8();
      uint64_t v17 = sub_1B6E317A8();
      unint64_t v19 = v18;
      (*v25)(v16, v29);
      switch(v19 >> 62)
      {
        case 1uLL:
        case 2uLL:
          sub_1B62FFBB0(v17, v19);
          break;
        default:
          break;
      }
      sub_1B6E31038();
      for (unint64_t i = v31; ; i ^= v21 - 0x61C8864680B583EBLL + (i << 6) + (i >> 2))
      {
        __int16 v21 = sub_1B6E31018();
        if ((v21 & 0x100) != 0) {
          break;
        }
      }
      unint64_t v31 = i;
      (*v24)(v5, v30);
      sub_1B665D488(v17, v19);
      sub_1B62D66CC(v13, v14, 1);
      uint64_t v10 = v26;
      uint64_t v9 = v27;
    }
    else
    {
      v31 ^= v13 - 0x61C8864680B583EBLL + (v31 << 6) + (v31 >> 2);
    }
    ++v11;
    sub_1B62DB0B0(&v31);
    sub_1B62D66CC(v13, v14, v15);
  }
  while (v11 != v9);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1B62DB0B0(unint64_t *a1)
{
  uint64_t result = sub_1B62D6998(v1, (uint64_t)&v45);
  switch(v53)
  {
    case 1:
      uint64_t v4 = v45;
      unint64_t v5 = *a1;
      uint64_t v6 = (*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583EALL;
      goto LABEL_24;
    case 2:
      uint64_t v7 = v45;
      unint64_t v8 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E9) ^ *a1;
      uint64_t v9 = v46;
      goto LABEL_6;
    case 3:
      uint64_t v7 = v45;
      unint64_t v8 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E8) ^ *a1;
      uint64_t v9 = v46;
LABEL_6:
      uint64_t v10 = v7;
      goto LABEL_17;
    case 4:
      unint64_t v11 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E7) ^ *a1;
      unint64_t v12 = (v45 + (v11 << 6) + (v11 >> 2) - 0x61C8864680B583EBLL) ^ v11;
      unint64_t v13 = v46 - 0x61C8864680B583EBLL;
      goto LABEL_25;
    case 5:
      unint64_t v14 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E6) ^ *a1;
      unint64_t v15 = (v45 + (v14 << 6) + (v14 >> 2) - 0x61C8864680B583EBLL) ^ v14;
      unint64_t v8 = (v46 + (v15 << 6) + (v15 >> 2) - 0x61C8864680B583EBLL) ^ v15;
      uint64_t v9 = v48;
      uint64_t v10 = v47;
      goto LABEL_17;
    case 6:
      unint64_t v16 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E5) ^ *a1;
      unint64_t v17 = (v45 + (v16 << 6) + (v16 >> 2) - 0x61C8864680B583EBLL) ^ v16;
      unint64_t v8 = (v46 + (v17 << 6) + (v17 >> 2) - 0x61C8864680B583EBLL) ^ v17;
      uint64_t v9 = v48;
      uint64_t v10 = v47;
      goto LABEL_17;
    case 7:
      unint64_t v18 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E4) ^ *a1;
      unint64_t v19 = (v45 + (v18 << 6) + (v18 >> 2) - 0x61C8864680B583EBLL) ^ v18;
      unint64_t v12 = (v46 + (v19 << 6) + (v19 >> 2) - 0x61C8864680B583EBLL) ^ v19;
      unint64_t v13 = v47 - 0x61C8864680B583EBLL;
      goto LABEL_25;
    case 8:
      unint64_t v20 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E3) ^ *a1;
      unint64_t v21 = (v45 + (v20 << 6) + (v20 >> 2) - 0x61C8864680B583EBLL) ^ v20;
      unint64_t v22 = (v46 + (v21 << 6) + (v21 >> 2) - 0x61C8864680B583EBLL) ^ v21;
      unint64_t v23 = (v47 + (v22 << 6) + (v22 >> 2) - 0x61C8864680B583EBLL) ^ v22;
      unint64_t v8 = (v48 + (v23 << 6) + (v23 >> 2) - 0x61C8864680B583EBLL) ^ v23;
      uint64_t v9 = v50;
      uint64_t v10 = v49;
      goto LABEL_17;
    case 9:
      unint64_t v24 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E2) ^ *a1;
      unint64_t v25 = (v45 + (v24 << 6) + (v24 >> 2) - 0x61C8864680B583EBLL) ^ v24;
      unint64_t v26 = (v46 + (v25 << 6) + (v25 >> 2) - 0x61C8864680B583EBLL) ^ v25;
      unint64_t v27 = (v47 + (v26 << 6) + (v26 >> 2) - 0x61C8864680B583EBLL) ^ v26;
      unint64_t v8 = (v48 + (v27 << 6) + (v27 >> 2) - 0x61C8864680B583EBLL) ^ v27;
      uint64_t v9 = v50;
      uint64_t v10 = v49;
      goto LABEL_17;
    case 10:
      unint64_t v28 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E1) ^ *a1;
      unint64_t v29 = (v45 + (v28 << 6) + (v28 >> 2) - 0x61C8864680B583EBLL) ^ v28;
      unint64_t v30 = (v46 + (v29 << 6) + (v29 >> 2) - 0x61C8864680B583EBLL) ^ v29;
      unint64_t v12 = (v47 + (v30 << 6) + (v30 >> 2) - 0x61C8864680B583EBLL) ^ v30;
      unint64_t v13 = v48 - 0x61C8864680B583EBLL;
      goto LABEL_25;
    case 11:
      uint64_t v31 = v51;
      unint64_t v32 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583E0) ^ *a1;
      unint64_t v33 = (v45 + (v32 << 6) + (v32 >> 2) - 0x61C8864680B583EBLL) ^ v32;
      unint64_t v34 = (v46 + (v33 << 6) + (v33 >> 2) - 0x61C8864680B583EBLL) ^ v33;
      unint64_t v35 = (v47 + (v34 << 6) + (v34 >> 2) - 0x61C8864680B583EBLL) ^ v34;
      unint64_t v36 = (v48 + (v35 << 6) + (v35 >> 2) - 0x61C8864680B583EBLL) ^ v35;
      uint64_t v37 = v49 + (v36 << 6) + (v36 >> 2) - 0x61C8864680B583EBLL;
      unint64_t v8 = (v50 + ((v37 ^ v36) << 6) + ((v37 ^ v36) >> 2) - 0x61C8864680B583EBLL) ^ v37 ^ v36;
      uint64_t v9 = v52;
      goto LABEL_16;
    case 12:
      uint64_t v31 = v51;
      unint64_t v38 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583DFLL) ^ *a1;
      unint64_t v39 = (v45 + (v38 << 6) + (v38 >> 2) - 0x61C8864680B583EBLL) ^ v38;
      unint64_t v40 = (v46 + (v39 << 6) + (v39 >> 2) - 0x61C8864680B583EBLL) ^ v39;
      unint64_t v41 = (v47 + (v40 << 6) + (v40 >> 2) - 0x61C8864680B583EBLL) ^ v40;
      unint64_t v42 = (v48 + (v41 << 6) + (v41 >> 2) - 0x61C8864680B583EBLL) ^ v41;
      uint64_t v43 = v49 + (v42 << 6) + (v42 >> 2) - 0x61C8864680B583EBLL;
      unint64_t v8 = (v50 + ((v43 ^ v42) << 6) + ((v43 ^ v42) >> 2) - 0x61C8864680B583EBLL) ^ v43 ^ v42;
      uint64_t v9 = v52;
LABEL_16:
      uint64_t v10 = v31;
LABEL_17:
      unint64_t v12 = (v10 + (v8 << 6) + (v8 >> 2) - 0x61C8864680B583EBLL) ^ v8;
      unint64_t v13 = v9 - 0x61C8864680B583EBLL;
      goto LABEL_25;
    case 13:
      unint64_t v12 = ((*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583DCLL) ^ *a1;
      if (v45) {
        unint64_t v44 = 0x9E3779B97F4A7C16;
      }
      else {
        unint64_t v44 = 0x9E3779B97F4A7C15;
      }
      unint64_t v13 = v12 << 6;
      goto LABEL_26;
    case 14:
      uint64_t v4 = (int)v45;
      unint64_t v5 = *a1;
      uint64_t v6 = (*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583DELL;
      goto LABEL_24;
    case 15:
      uint64_t v4 = v45;
      unint64_t v5 = *a1;
      uint64_t v6 = (*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583DDLL;
      goto LABEL_24;
    default:
      uint64_t v4 = v45;
      unint64_t v5 = *a1;
      uint64_t v6 = (*a1 << 6) + (*a1 >> 2) - 0x61C8864680B583EBLL;
LABEL_24:
      unint64_t v12 = v6 ^ v5;
      unint64_t v13 = v4 - 0x61C8864680B583EBLL;
LABEL_25:
      unint64_t v44 = v12 << 6;
LABEL_26:
      *a1 = (v13 + v44 + (v12 >> 2)) ^ v12;
      return result;
  }
}

uint64_t sub_1B62DB6C8(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v421 = v6;
  ++*(void *)(v6 + 480);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = v7[4];
  swift_retain();
  swift_retain();
  uint64_t v11 = sub_1B62DE2C8(v10);
  swift_release();
  swift_retain();
  uint64_t v314 = v10;
  unint64_t v12 = sub_1B62DE2C8(v10);
  uint64_t v315 = v8;
  swift_release();
  uint64_t v385 = swift_allocObject();
  *(void *)(v385 + 16) = MEMORY[0x1E4FBC860];
  unint64_t v13 = (uint64_t *)(v385 + 16);
  sub_1B62E2B20(16);
  unint64_t v386 = sub_1B6350008(v12, v9);
  unint64_t v422 = v12;
  uint64_t v423 = v9;
  uint64_t v411 = sub_1B635A454(v12);
  v389 = v5;
  if (v14)
  {
    uint64_t v411 = 0;
    if ((v5[57] & 1) == 0) {
      goto LABEL_3;
    }
  }
  else if (v5[57] != 1)
  {
LABEL_3:
    sub_1B62C5F6C(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1B6E77D10;
    *(void *)(v15 + 56) = &type metadata for EmitterReference;
    *(void *)(v15 + 64) = &off_1F0F6BD40;
    uint64_t v16 = v15;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 96) = &type metadata for AnonymousEntity;
    *(void *)(v15 + 104) = &off_1F0F67E08;
    *(void *)(v15 + 136) = &type metadata for UnstableOrdering;
    *(void *)(v15 + 144) = &off_1F0F6FAC0;
    goto LABEL_6;
  }
  sub_1B62C5F6C(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E85730;
  *(void *)(v17 + 56) = &type metadata for EmitterReference;
  *(void *)(v17 + 64) = &off_1F0F6BD40;
  uint64_t v16 = v17;
  *(void *)(v17 + 32) = v11;
  *(void *)(v17 + 96) = &type metadata for AnonymousEntity;
  *(void *)(v17 + 104) = &off_1F0F67E08;
  *(void *)(v17 + 136) = &type metadata for UnstableOrdering;
  *(void *)(v17 + 144) = &off_1F0F6FAC0;
  *(void *)(v17 + 176) = &type metadata for MonoChunk;
  *(void *)(v17 + 184) = &off_1F0FA9178;
LABEL_6:
  sub_1B62E1844((uint64_t)&type metadata for Particle, (uint64_t)&off_1F0FA6CC0);
  sub_1B62E1844((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0);
  unint64_t v18 = v5;
  int v388 = v5[45];
  uint64_t v19 = v421;
  unint64_t v20 = v422;
  if (v388 == 1) {
    sub_1B62E1844((uint64_t)&type metadata for ParticleGPU, (uint64_t)&off_1F0F56450);
  }
  if (v5[76] == 1) {
    sub_1B62E1844((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08);
  }
  uint64_t v21 = *(void *)(v423 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  uint64_t v22 = *(void *)v389;
  swift_retain();
  sub_1B62E0B64(v22, 1, v423, v21, v422, v385);
  sub_1B62E0B64(*((void *)v389 + 1), 2, v423, v21, v422, v385);
  sub_1B62E0B64(*((void *)v389 + 2), 3, v423, v21, v422, v385);
  uint64_t v387 = v21;
  sub_1B62E0B64(*((void *)v389 + 3), 4, v423, v21, v422, v385);
  char v23 = sub_1B6317B78(v22, v423);
  *(unsigned char *)(v421 + 50) = v23 & 1;
  if (v23)
  {
    unint64_t v24 = (char *)*v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v24 = sub_1B62D1B88(0, *((void *)v24 + 2) + 1, 1, v24);
    }
    unint64_t v26 = *((void *)v24 + 2);
    unint64_t v25 = *((void *)v24 + 3);
    if (v26 >= v25 >> 1) {
      unint64_t v24 = sub_1B62D1B88(v25 > 1, v26 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v26 + 1;
    unint64_t v27 = &v24[16 * v26];
    *((void *)v27 + 4) = &type metadata for ParticleParentID;
    *((void *)v27 + 5) = &off_1F0F6E0C8;
    *unint64_t v13 = (uint64_t)v24;
  }
  long long v28 = *(_OWORD *)(v3 + 32);
  v495[0] = *(_OWORD *)(v3 + 16);
  v495[1] = v28;
  uint64_t v496 = *(void *)(v3 + 48);
  sub_1B62C9DA8(v423, (uint64_t)v495, 0x200000000, v427);
  sub_1B63175D8((uint64_t)v427, (uint64_t)v467, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v467[0])
  {
    if (v473 >= 1)
    {
      uint64_t v397 = v470;
      if (v470)
      {
        uint64_t v414 = v472[4];
        int v408 = *(unsigned __int8 *)(v471 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v474[0] = v467[0];
        v474[1] = v467[1];
        uint64_t v394 = v469;
        uint64_t v475 = v468;
        uint64_t v392 = (uint64_t)(v472 + 6);
        v418 = v472;
        v390 = v472 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v29 = 0;
        uint64_t v30 = 0;
        do
        {
          uint64_t v31 = (unsigned int *)(v394 + 48 * v29);
          uint64_t v32 = *v31;
          uint64_t v33 = v31[1];
          uint64_t v35 = *((void *)v31 + 4);
          uint64_t v34 = *((void *)v31 + 5);
          uint64_t v412 = v30;
          uint64_t v405 = v29;
          v400 = (uint64_t *)*((void *)v31 + 2);
          uint64_t v402 = *((void *)v31 + 3);
          if (v408)
          {
            unint64_t v36 = *(os_unfair_lock_s **)(v34 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v36);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v414);
          sub_1B63175D8(v392, (uint64_t)v494, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v37 = v418[4];
          uint64_t v38 = v34;
          uint64_t v39 = *(void *)(*(void *)(*(void *)(*(void *)(v34 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v418[6] = ecs_stack_allocator_allocate(v37, 48 * v39, 8);
          v418[7] = v39;
          v390[1] = 0;
          v390[2] = 0;
          void *v390 = 0;
          swift_release();
          uint64_t v40 = v402;
          uint64_t v403 = v38;
          uint64_t v41 = sub_1B62C9024((uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, v400, v40, v35, (uint64_t)v418);
          if (v400)
          {
            unint64_t v20 = v422;
            if (v35)
            {
              uint64_t v42 = 0;
              int v43 = HIDWORD(v422);
              do
              {
                uint64_t v46 = (int *)(v41 + 24 * v42);
                int v48 = *v46;
                int v47 = v46[1];
                if (v48 == v422 && v47 == v43)
                {
                  uint64_t v50 = *v13;
                  uint64_t v51 = sub_1B6355ED4(*v13);
                  if (v51)
                  {
                    uint64_t v52 = (ValueMetadata **)(v50 + 32);
                    while (*v52 != &type metadata for ParticleID)
                    {
                      v52 += 2;
                      if (!--v51) {
                        goto LABEL_27;
                      }
                    }
                  }
                  else
                  {
LABEL_27:
                    sub_1B69FFBBC();
                    uint64_t v44 = *(void *)(*v13 + 16);
                    sub_1B69FFCC0(v44);
                    int v43 = HIDWORD(v422);
                    uint64_t v45 = sub_1B69FFDB4(v44, (uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8);
                    nullsub_1(v45);
                  }
                }
                ++v42;
              }
              while (v42 != v35);
            }
          }
          else
          {
            unint64_t v20 = v422;
            if (v32 != v33)
            {
              int v53 = HIDWORD(v422);
              do
              {
                uint64_t v57 = (int *)(v41 + 24 * v32);
                int v59 = *v57;
                int v58 = v57[1];
                if (v59 == v422 && v58 == v53)
                {
                  uint64_t v61 = *v13;
                  uint64_t v62 = sub_1B6355ED4(*v13);
                  if (v62)
                  {
                    BOOL v63 = (ValueMetadata **)(v61 + 32);
                    while (*v63 != &type metadata for ParticleID)
                    {
                      v63 += 2;
                      if (!--v62) {
                        goto LABEL_43;
                      }
                    }
                  }
                  else
                  {
LABEL_43:
                    sub_1B69FFBBC();
                    uint64_t v54 = *(void *)(*v13 + 16);
                    sub_1B69FFCC0(v54);
                    uint64_t v55 = v54;
                    int v53 = HIDWORD(v422);
                    uint64_t v56 = sub_1B69FFDB4(v55, (uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8);
                    nullsub_1(v56);
                  }
                }
                ++v32;
              }
              while (v32 != v33);
            }
          }
          uint64_t v30 = v412;
          sub_1B6345178(v418, (unsigned __int16 **)v474, (uint64_t)v494);
          sub_1B634507C((char *)v403);
          ecs_stack_allocator_pop_snapshot(v414);
          if (v408)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v403 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v403 + 376));
          }
          swift_release();
          uint64_t v29 = v405 + 1;
        }
        while (v405 + 1 != v397);
        sub_1B632F170(v427);
        uint64_t v19 = v421;
        unint64_t v18 = v389;
      }
    }
    sub_1B632F170(v427);
  }
  uint64_t v64 = swift_bridgeObjectRetain();
  uint64_t v65 = sub_1B6357D30(v64, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = swift_retain();
  uint64_t v404 = v65;
  char v67 = sub_1B63177A0(v66, v20, v18, (uint64_t *)v19, v65);
  swift_release();
  if (v67 != 2)
  {
    swift_retain();
    uint64_t v68 = sub_1B62DE2C8(v314);
    swift_release();
    uint64_t v69 = *(unsigned int *)(v315 + 28);
    unsigned __int8 v70 = *(unsigned char *)(v315 + 32);
    swift_retain();
    v493[0] = v70;
    sub_1B6919AD4(v68, v69 | ((unint64_t)v70 << 32), v18, v19, v423, 1);
    swift_release();
    if (v67)
    {
      uint64_t v71 = *((void *)v18 + 3);
      uint64_t v72 = *(void *)(v71 + 16);
      if (v72)
      {
        uint64_t v73 = (void *)(v423 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v74 = v71 + 32;
        swift_bridgeObjectRetain();
        uint64_t v75 = 0;
        long long v76 = &thread_worker_index;
        uint64_t v77 = (void (*)(uint64_t (**)(void, double)))thread_worker_index;
        v415 = thread_worker_index;
        do
        {
          uint64_t v78 = (int *)(v74 + 8 * v75);
          int v79 = *v78;
          int v80 = v78[1];
          BOOL v81 = v79 == -1 && v80 == 0;
          if (!v81
            && (v79 & 0x80000000) == 0
            && v73[1] > v79
            && (v80 == -1 || *(_DWORD *)(*v73 + 12 * v79 + 8) == v80))
          {
            uint64_t v83 = (int *)(*v73 + 12 * v79);
            uint64_t v84 = *((__int16 *)v83 + 2);
            uint64_t v85 = *(void *)(*(void *)(v423 + 136) + 8 * *v83 + 32);
            v77(v76);
            uint64_t v86 = *(void *)(v85 + 192);
            if (v86)
            {
              uint64_t v87 = *(void *)(v85 + 208);
              uint64_t v88 = 8 * (v84 >> 6);
              *(void *)(v86 + v88) |= 1 << v84;
              *(void *)(v87 + v88) &= ~(1 << v84);
            }
            if (*(unsigned char *)(*(void *)(v85 + 40) + 213) == 1)
            {
              uint64_t v89 = *(void *)(v85 + 48);
              uint64_t v90 = *(void *)(v89 + 16);
              if (v90)
              {
                uint64_t v91 = (uint64_t *)(v89 + 56);
                while ((ValueMetadata *)*(v91 - 3) != &type metadata for PropagateDirtiness)
                {
                  v91 += 5;
                  if (!--v90) {
                    goto LABEL_83;
                  }
                }
                uint64_t v92 = *v91;
              }
              else
              {
LABEL_83:
                uint64_t v92 = 0;
              }
              uint64_t v93 = *(void *)(v85 + 128);
              char v94 = *(unsigned char *)(v85 + 184);
              uint64_t v95 = swift_retain();
              if (v94) {
                goto LABEL_243;
              }
              uint64_t v96 = *(unsigned int *)(*(void *)(v85 + 168) + 4 * v84);
              uint64_t v97 = *(unsigned int *)(*(void *)(v95 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                    + 12 * (int)v96
                                    + 8);
              swift_release();
              sub_1B6B1D170(v96 | (v97 << 32), *(void *)(v93 + v92 + 8 * v84));
              uint64_t v19 = v421;
              long long v76 = &thread_worker_index;
              uint64_t v77 = (void (*)(uint64_t (**)(void, double)))v415;
            }
            else
            {
              uint64_t v19 = v421;
            }
          }
          ++v75;
        }
        while (v75 != v72);
        swift_bridgeObjectRelease();
      }
      unint64_t v18 = v389;
    }
  }
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_1B636E9A8((uint64_t)&type metadata for WorldFromScene);
  char v419 = v98 & 1;
  os_unfair_recursive_lock_unlock();
  swift_release();
  *(void *)uint64_t v19 = v404;
  uint64_t v416 = *((void *)v18 + 4);
  unsigned __int8 v99 = v18[40];
  unsigned __int8 v409 = v99;
  *(void *)(v19 + 120) = v416;
  *(unsigned char *)(v19 + 128) = v99;
  uint64_t v398 = *(void *)(v19 + 8);
  uint64_t v381 = *(void *)(v19 + 16);
  uint64_t v379 = *(void *)(v19 + 24);
  uint64_t v377 = *(void *)(v19 + 32);
  uint64_t v374 = *(void *)(v19 + 40);
  char v372 = *(unsigned char *)(v19 + 48);
  char v370 = *(unsigned char *)(v19 + 49);
  char v369 = *(unsigned char *)(v19 + 50);
  uint64_t v368 = *(void *)(v19 + 56);
  int v367 = *(_DWORD *)(v19 + 64);
  char v366 = *(unsigned char *)(v19 + 68);
  uint64_t v364 = *(void *)(v19 + 72);
  char v362 = *(unsigned char *)(v19 + 80);
  uint64_t v361 = *(void *)(v19 + 88);
  int v100 = *(_DWORD *)(v19 + 96);
  uint64_t v357 = *(void *)(v19 + 112);
  uint64_t v358 = *(void *)(v19 + 104);
  char v353 = *(unsigned char *)(v19 + 129);
  char v351 = *(unsigned char *)(v19 + 130);
  uint64_t v348 = *(void *)(v19 + 136);
  uint64_t v346 = *(void *)(v19 + 144);
  uint64_t v344 = *(void *)(v19 + 152);
  char v342 = *(unsigned char *)(v19 + 160);
  uint64_t v336 = *(void *)(v19 + 176);
  char v334 = *(unsigned char *)(v19 + 184);
  uint64_t v332 = *(void *)(v19 + 192);
  uint64_t v338 = *(void *)(v19 + 200);
  uint64_t v339 = *(void *)(v19 + 168);
  uint64_t v406 = *(void *)(v19 + 208);
  char v401 = *(unsigned char *)(v19 + 216);
  __src[0] = v404;
  __src[1] = v398;
  __src[2] = v381;
  __src[3] = v379;
  __src[4] = v377;
  __src[5] = v374;
  LOBYTE(__src[6]) = v372;
  BYTE1(__src[6]) = v370;
  BYTE2(__src[6]) = v369;
  __src[7] = v368;
  LODWORD(__src[8]) = v367;
  BYTE4(__src[8]) = v366;
  __src[9] = v364;
  LOBYTE(__src[10]) = v362;
  __src[11] = v361;
  LODWORD(__src[12]) = v100;
  __src[13] = v358;
  __src[14] = v357;
  __src[15] = v416;
  LOBYTE(__src[16]) = v99;
  BYTE1(__src[16]) = v353;
  BYTE2(__src[16]) = v351;
  __src[17] = v348;
  __src[18] = v346;
  __src[19] = v344;
  LOBYTE(__src[20]) = v342;
  __src[21] = v339;
  __src[22] = v336;
  LOBYTE(__src[23]) = v334;
  __src[24] = v332;
  __src[25] = v338;
  __src[26] = v406;
  LOBYTE(__src[27]) = v401;
  int v330 = *(_DWORD *)(v19 + 224);
  HIDWORD(__src[27]) = *(_DWORD *)(v19 + 220);
  int v331 = HIDWORD(__src[27]);
  LODWORD(__src[28]) = v330;
  __src[29] = *(void *)(v19 + 232);
  uint64_t v329 = __src[29];
  LOBYTE(__src[30]) = *(unsigned char *)(v19 + 240);
  char v328 = __src[30];
  uint64_t v395 = *(void *)(v19 + 256);
  __src[31] = *(void *)(v19 + 248);
  __src[32] = v395;
  __src[33] = *(void *)(v19 + 264);
  uint64_t v327 = __src[33];
  LOBYTE(__src[34]) = *(unsigned char *)(v19 + 272);
  char v326 = __src[34];
  uint64_t v324 = *(void *)(v19 + 288);
  __src[35] = *(void *)(v19 + 280);
  uint64_t v325 = __src[35];
  __src[36] = v324;
  uint64_t v322 = *(void *)(v19 + 304);
  __src[37] = *(void *)(v19 + 296);
  uint64_t v323 = __src[37];
  __src[38] = v322;
  uint64_t v320 = *(void *)(v19 + 320);
  __src[39] = *(void *)(v19 + 312);
  uint64_t v321 = __src[39];
  __src[40] = v320;
  uint64_t v318 = *(void *)(v19 + 336);
  __src[41] = *(void *)(v19 + 328);
  uint64_t v319 = __src[41];
  __src[42] = v318;
  uint64_t v316 = *(void *)(v19 + 352);
  __src[43] = *(void *)(v19 + 344);
  uint64_t v317 = __src[43];
  __src[44] = v316;
  uint64_t v102 = *(void *)(v19 + 368);
  __src[45] = *(void *)(v19 + 360);
  uint64_t v101 = __src[45];
  __src[46] = v102;
  uint64_t v103 = *(void *)(v19 + 376);
  uint64_t v104 = *(void *)(v19 + 384);
  __src[47] = v103;
  __src[48] = v104;
  uint64_t v106 = *(void *)(v421 + 400);
  __src[49] = *(void *)(v421 + 392);
  uint64_t v105 = __src[49];
  __src[50] = v106;
  uint64_t v108 = *(void *)(v421 + 416);
  __src[51] = *(void *)(v421 + 408);
  uint64_t v107 = __src[51];
  __src[52] = v108;
  uint64_t v391 = *(void *)(v421 + 432);
  __src[53] = *(void *)(v421 + 424);
  uint64_t v393 = __src[53];
  __src[54] = v391;
  uint64_t v383 = *(void *)(v421 + 448);
  __src[55] = *(void *)(v421 + 440);
  uint64_t v382 = __src[55];
  __src[56] = v383;
  LODWORD(__src[57]) = *(_DWORD *)(v421 + 456);
  int v384 = __src[57];
  uint64_t v380 = *(void *)(v421 + 472);
  __src[58] = *(void *)(v421 + 464);
  uint64_t v378 = __src[58];
  __src[59] = v380;
  uint64_t v376 = *(void *)(v421 + 488);
  __src[60] = *(void *)(v421 + 480);
  uint64_t v375 = __src[60];
  __src[61] = v376;
  uint64_t v373 = *(void *)(v421 + 504);
  __src[62] = *(void *)(v421 + 496);
  uint64_t v371 = __src[62];
  __src[63] = v373;
  __src[64] = *(void *)(v421 + 512);
  uint64_t v365 = __src[64];
  __src[65] = *(void *)(v421 + 520);
  uint64_t v363 = __src[65];
  __src[66] = *(void *)(v421 + 528);
  uint64_t v360 = __src[66];
  __src[67] = *(void *)(v421 + 536);
  uint64_t v359 = __src[67];
  __src[68] = *(void *)(v421 + 544);
  uint64_t v356 = __src[68];
  __src[69] = *(void *)(v421 + 552);
  uint64_t v355 = __src[69];
  __src[70] = *(void *)(v421 + 560);
  uint64_t v354 = __src[70];
  __src[71] = *(void *)(v421 + 568);
  uint64_t v352 = __src[71];
  __src[72] = *(void *)(v421 + 576);
  uint64_t v350 = __src[72];
  __src[73] = *(void *)(v421 + 584);
  uint64_t v349 = __src[73];
  __src[74] = *(void *)(v421 + 592);
  uint64_t v347 = __src[74];
  __src[75] = *(void *)(v421 + 600);
  uint64_t v345 = __src[75];
  __src[76] = *(void *)(v421 + 608);
  uint64_t v343 = __src[76];
  __src[77] = *(void *)(v421 + 616);
  uint64_t v341 = __src[77];
  __src[78] = *(void *)(v421 + 624);
  uint64_t v340 = __src[78];
  __src[79] = *(void *)(v421 + 632);
  uint64_t v337 = __src[79];
  __src[80] = *(void *)(v421 + 640);
  uint64_t v335 = __src[80];
  __src[81] = *(void *)(v421 + 648);
  uint64_t v333 = __src[81];
  memcpy(v493, __src, sizeof(v493));
  sub_1B62EEA00((uint64_t)__src);
  uint64_t v109 = sub_1B62FA36C((uint64_t)v493, 0, v419);
  sub_1B62E20E8((uint64_t)__src);
  swift_bridgeObjectRelease();
  v426[2] = v381;
  v426[3] = v379;
  v426[4] = v377;
  v426[5] = v374;
  LOBYTE(v426[6]) = v372;
  BYTE1(v426[6]) = v370;
  BYTE2(v426[6]) = v369;
  v426[7] = v368;
  LODWORD(v426[8]) = v367;
  BYTE4(v426[8]) = v366;
  v426[9] = v364;
  LOBYTE(v426[10]) = v362;
  v426[11] = v361;
  v426[13] = v358;
  v426[14] = v357;
  v426[15] = v416;
  LOBYTE(v426[16]) = v409;
  BYTE1(v426[16]) = v353;
  BYTE2(v426[16]) = v351;
  v426[17] = v348;
  v426[18] = v346;
  v426[19] = v344;
  LOBYTE(v426[20]) = v342;
  v426[21] = v339;
  v426[22] = v336;
  LOBYTE(v426[23]) = v334;
  v426[24] = v332;
  v426[25] = v338;
  v426[26] = v406;
  LOBYTE(v426[27]) = v401;
  HIDWORD(v426[27]) = v331;
  LODWORD(v426[28]) = v330;
  v426[29] = v329;
  LOBYTE(v426[30]) = v328;
  v426[33] = v327;
  LOBYTE(v426[34]) = v326;
  v426[35] = v325;
  v426[36] = v324;
  v426[37] = v323;
  v426[38] = v322;
  v426[39] = v321;
  v426[40] = v320;
  v426[41] = v319;
  v426[42] = v318;
  v426[43] = v317;
  v426[44] = v316;
  v426[45] = v101;
  v426[46] = v102;
  v426[47] = v103;
  v426[48] = v104;
  v426[49] = v105;
  v426[50] = v106;
  v426[51] = v107;
  v426[52] = v108;
  *(void *)(v421 + 248) = v109;
  v426[0] = v404;
  v426[1] = v398;
  LODWORD(v426[12]) = v100;
  v426[31] = v109;
  char v110 = v389;
  v426[32] = v395;
  v426[53] = v393;
  v426[54] = v391;
  v426[55] = v382;
  v426[56] = v383;
  LODWORD(v426[57]) = v384;
  v426[58] = v378;
  v426[59] = v380;
  v426[60] = v375;
  v426[61] = v376;
  v426[62] = v371;
  v426[63] = v373;
  v426[64] = v365;
  v426[65] = v363;
  v426[66] = v360;
  v426[67] = v359;
  v426[68] = v356;
  v426[69] = v355;
  v426[70] = v354;
  v426[71] = v352;
  v426[72] = v350;
  v426[73] = v349;
  v426[74] = v347;
  v426[75] = v345;
  v426[76] = v343;
  v426[77] = v341;
  v426[78] = v340;
  v426[79] = v337;
  v426[80] = v335;
  v426[81] = v333;
  memcpy(v492, v426, sizeof(v492));
  sub_1B62EEA00((uint64_t)v426);
  uint64_t v111 = sub_1B62FA36C((uint64_t)v492, 1, v419);
  sub_1B62E20E8((uint64_t)v426);
  swift_bridgeObjectRelease();
  *(void *)(v421 + 256) = v111;
  *(void *)(v421 + 168) = 0;
  *(unsigned char *)(v421 + 184) = 0;
  uint64_t v112 = *(void *)(*((void *)v389 + 3) + 16);
  if (v112)
  {
    long long v113 = (uint64_t *)(v423 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    long long v114 = (unsigned int *)(swift_bridgeObjectRetain() + 36);
    while (1)
    {
      uint64_t v115 = (int)*(v114 - 1);
      uint64_t v116 = *v114;
      uint64_t v117 = *(v114 - 1);
      if (v115 == -1 && v116 == 0) {
        goto LABEL_141;
      }
      uint64_t v119 = v113[1];
      if ((v117 & 0x80000000) == 0 && v119 > v115)
      {
        uint64_t v120 = *v113;
        uint64_t v121 = *(unsigned int *)(*v113 + 12 * (int)v115 + 8);
        if (v116 == -1 || v121 == v116)
        {
          uint64_t v123 = *(void *)(*(void *)(v423 + 136) + 8 * *(int *)(v120 + 12 * (int)v115) + 32);
          if ((*(unsigned char *)(v123 + 120) & 1) == 0)
          {
            uint64_t v145 = v423;
            goto LABEL_144;
          }
          sub_1B62E24BC(v123, v423, *(unsigned int *)(v120 + 12 * (int)v115) | ((unint64_t)*(unsigned __int16 *)(v120+ 12 * (int)v115+ 6) << 48) | ((unint64_t)*(unsigned __int16 *)(v120 + 12 * (int)v115 + 4) << 32), v121, v421);
          uint64_t v119 = v113[1];
        }
      }
      if ((v117 & 0x80000000) != 0 || v119 <= v115)
      {
        if (v115 == -1) {
          goto LABEL_141;
        }
      }
      else if (v116 == -1 || *(_DWORD *)(*v113 + 12 * (int)v115 + 8) == v116)
      {
        uint64_t v125 = *(void *)(*(void *)(*(void *)(v423 + 80) + 8 * *(__int16 *)(*v113 + 12 * (int)v115 + 6) + 32)
                         + 16);
        uint64_t v126 = *(void *)(v125 + 128);
        if (*(void *)(v126 + 16))
        {
          unint64_t v127 = sub_1B62C1A30((uint64_t)&type metadata for Position);
          if ((v128 & 1) != 0
            && *(ValueMetadata **)(*(void *)(v125 + 24) + 16 * *(void *)(*(void *)(v126 + 56) + 8 * v127) + 32) == &type metadata for Position)
          {
            goto LABEL_149;
          }
        }
      }
      if ((v117 & 0x80000000) == 0 && v113[1] > v115)
      {
        uint64_t v129 = *v113;
        if (v116 == -1 || *(_DWORD *)(v129 + 12 * (int)v115 + 8) == v116)
        {
          uint64_t v130 = *(void *)(*(void *)(*(void *)(v423 + 80) + 8 * *(__int16 *)(v129 + 12 * (int)v115 + 6) + 32)
                           + 16);
          uint64_t v131 = *(void *)(v130 + 128);
          if (*(void *)(v131 + 16))
          {
            unint64_t v132 = sub_1B62C1A30((uint64_t)&type metadata for Orientation);
            if ((v133 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v130 + 24) + 16 * *(void *)(*(void *)(v131 + 56) + 8 * v132) + 32) == &type metadata for Orientation)
            {
              goto LABEL_149;
            }
          }
        }
      }
      if ((v117 & 0x80000000) == 0 && v113[1] > v115)
      {
        uint64_t v134 = *v113;
        if (v116 == -1 || *(_DWORD *)(v134 + 12 * (int)v115 + 8) == v116)
        {
          uint64_t v135 = *(void *)(*(void *)(*(void *)(v423 + 80) + 8 * *(__int16 *)(v134 + 12 * (int)v115 + 6) + 32)
                           + 16);
          uint64_t v136 = *(void *)(v135 + 128);
          if (*(void *)(v136 + 16))
          {
            unint64_t v137 = sub_1B62C1A30((uint64_t)&type metadata for Scale1);
            if ((v138 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v135 + 24) + 16 * *(void *)(*(void *)(v136 + 56) + 8 * v137) + 32) == &type metadata for Scale1)
            {
              goto LABEL_149;
            }
          }
        }
      }
      if ((v117 & 0x80000000) == 0 && v113[1] > v115)
      {
        uint64_t v139 = *v113;
        if (v116 == -1 || *(_DWORD *)(v139 + 12 * (int)v115 + 8) == v116)
        {
          uint64_t v140 = *(void *)(*(void *)(*(void *)(v423 + 80) + 8 * *(__int16 *)(v139 + 12 * (int)v115 + 6) + 32)
                           + 16);
          uint64_t v141 = *(void *)(v140 + 128);
          if (*(void *)(v141 + 16))
          {
            unint64_t v142 = sub_1B62C1A30((uint64_t)&type metadata for Scale2);
            if ((v143 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v140 + 24) + 16 * *(void *)(*(void *)(v141 + 56) + 8 * v142) + 32) == &type metadata for Scale2)
            {
LABEL_149:
              uint64_t v146 = v117 | (v116 << 32);
              uint64_t v145 = v423;
              sub_1B62E364C((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v146);
              sub_1B62E364C((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1F0F64B60, v146);
              goto LABEL_143;
            }
          }
        }
      }
      if ((v115 & 0x80000000) == 0 && v113[1] > v115)
      {
        uint64_t v144 = *v113;
        if (v116 == -1 || *(_DWORD *)(v144 + 12 * (int)v115 + 8) == v116)
        {
          uint64_t v148 = *(__int16 *)(v144 + 12 * (int)v115 + 6);
          uint64_t v145 = v423;
          uint64_t v149 = *(void *)(*(void *)(*(void *)(v423 + 80) + 8 * v148 + 32) + 16);
          uint64_t v150 = *(void *)(v149 + 128);
          if (!*(void *)(v150 + 16)) {
            goto LABEL_142;
          }
          unint64_t v151 = sub_1B62C1A30((uint64_t)&type metadata for Scale3);
          if ((v152 & 1) == 0) {
            goto LABEL_142;
          }
          if (*(ValueMetadata **)(*(void *)(v149 + 24) + 16 * *(void *)(*(void *)(v150 + 56) + 8 * v151) + 32) == &type metadata for Scale3) {
            goto LABEL_149;
          }
        }
      }
LABEL_141:
      uint64_t v145 = v423;
LABEL_142:
      uint64_t v146 = v117 | (v116 << 32);
      sub_1B62E280C((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v146, 0);
      sub_1B62E280C((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1F0F64B60, v146, 0);
LABEL_143:
      sub_1B62E22D8((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v146, 0);
LABEL_144:
      unint64_t v147 = v422;
      v114 += 2;
      if (!--v112)
      {
        swift_bridgeObjectRelease();
        char v110 = v389;
        goto LABEL_153;
      }
    }
  }
  uint64_t v145 = v423;
  unint64_t v147 = v422;
LABEL_153:
  uint64_t v153 = *(void *)(v145 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler);
  swift_retain();
  uint64_t v417 = v153;
  sub_1B62E2F60(v147);
  LODWORD(v154) = v386;
  uint64_t v155 = HIDWORD(v386) & 1;
  uint64_t v156 = v411;
  uint64_t v420 = v155;
  if (v388) {
    goto LABEL_161;
  }
  swift_retain();
  BOOL v157 = sub_1B62FACF8((uint64_t)&type metadata for ParticleLifetime);
  swift_release();
  if (v157 || (swift_retain(), BOOL v158 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAge), swift_release(), v158))
  {
    uint64_t v159 = swift_conformsToProtocol2();
    if (!v159)
    {
      __break(1u);
      goto LABEL_233;
    }
    uint64_t v160 = v159;
    uint64_t v161 = swift_retain();
    sub_1B62F67B0(v161, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleLifeAndDeath, v160, v147, v386 | (unint64_t)(v155 << 32), 1u, (uint64_t)v428);
    uint64_t v162 = type metadata accessor for ParticleLifeAndDeath.System();
    uint64_t v163 = swift_allocObject();
    long long v489 = v428[3];
    long long v490 = v428[4];
    uint64_t v491 = v429;
    sub_1B663DDD8((uint64_t)v487);
    long long v164 = v487[1];
    *(_OWORD *)(v163 + 16) = v487[0];
    *(_OWORD *)(v163 + 32) = v164;
    *(void *)(v163 + 48) = v488;
    char v165 = sub_1B62F6AD0(v428, v162, (uint64_t)&off_1F0F80FA0);
    LODWORD(v154) = v386;
    uint64_t v312 = v162;
    uint64_t v155 = HIDWORD(v386) & 1;
    sub_1B62F6538(v163, (uint64_t)v165, v166, qword_1E9DD2FC8, v411, 1, v147, v417, v312, (uint64_t)off_1F0F80FA8);
    swift_release();
    swift_release();
    sub_1B62F648C((uint64_t)v428);
    char v110 = v389;
  }
  swift_retain();
  BOOL v167 = sub_1B62FACF8((uint64_t)&type metadata for ParticleRibbonLength);
  swift_release();
  if (v167)
  {
    uint64_t v168 = swift_conformsToProtocol2();
    if (v168)
    {
      uint64_t v169 = v168;
      uint64_t v170 = swift_retain();
      sub_1B62F67B0(v170, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleRibbonLengthUpdate, v169, v147, v154 | (unint64_t)(v155 << 32), 3u, (uint64_t)v430);
      uint64_t v171 = type metadata accessor for ParticleRibbonLengthUpdate.System();
      uint64_t v172 = swift_allocObject();
      char v173 = sub_1B62F6AD0(v430, v171, (uint64_t)&off_1F0F968F0);
      uint64_t v155 = HIDWORD(v386) & 1;
      sub_1B62F6538(v172, (uint64_t)v173, v174, qword_1E9DD2FD8, v411, 1, v147, v417, v171, (uint64_t)off_1F0F968F8);
      swift_release();
      swift_release();
      sub_1B62F648C((uint64_t)v430);
      char v110 = v389;
      goto LABEL_161;
    }
LABEL_233:
    __break(1u);
    goto LABEL_234;
  }
LABEL_161:
  *(void *)&v466[0] = *(void *)v110;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B62DE37C((uint64_t *)v466, v145);
  swift_release();
  uint64_t v175 = *(void *)(*(void *)&v466[0] + 16);
  if (!v175)
  {
    swift_release();
    if (v388) {
      goto LABEL_190;
    }
    goto LABEL_191;
  }
  v407 = (uint64_t *)(v145 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v176 = *(void *)&v466[0] + 32;
  uint64_t v410 = v154;
  swift_retain();
  uint64_t v177 = v176;
  uint64_t v178 = 0;
  uint64_t v399 = v175;
  uint64_t v396 = v176;
  while (1)
  {
    char v179 = (unsigned int *)(v177 + 8 * v178);
    uint64_t v180 = *v179;
    uint64_t v181 = v179[1];
    BOOL v182 = v180 == -1 && v181 == 0;
    if (!v182 && (v180 & 0x80000000) == 0 && v407[1] > (int)v180)
    {
      uint64_t v183 = *v407;
      if ((v181 == -1 || *(_DWORD *)(*v407 + 12 * (int)v180 + 8) == v181)
        && (*(unsigned char *)(*(void *)(*(void *)(v145 + 136) + 8 * *(int *)(v183 + 12 * (int)v180) + 32) + 120) & 1) != 0)
      {
        uint64_t v185 = *(void *)(*(void *)(*(void *)(*(void *)(v145 + 80)
                                                 + 8 * *(__int16 *)(v183 + 12 * (int)v180 + 6)
                                                 + 32)
                                     + 16)
                         + 32);
        uint64_t v186 = *(void *)(v185 + 16);
        if (v186) {
          break;
        }
      }
    }
LABEL_164:
    if (++v178 == v175) {
      goto LABEL_189;
    }
  }
  unint64_t v413 = v180 | (v181 << 32);
  swift_retain();
  swift_retain();
  uint64_t v155 = 32;
  while (1)
  {
    uint64_t v197 = *(void *)(v185 + v155);
    uint64_t v198 = swift_conformsToProtocol2();
    if (v198) {
      uint64_t v154 = v198;
    }
    else {
      uint64_t v154 = 0;
    }
    if (!v198) {
      uint64_t v197 = 0;
    }
    if (!v197) {
      goto LABEL_180;
    }
    uint64_t v199 = swift_conformsToProtocol2();
    if (!v199) {
      break;
    }
    uint64_t v187 = v199;
    uint64_t v188 = swift_retain();
    sub_1B62F67B0(v188, v413, v197, v187, v147, v410 | (v420 << 32), 1u, (uint64_t)v431);
    uint64_t v189 = (*(uint64_t (**)(uint64_t, uint64_t))(v154 + 8))(v197, v154);
    uint64_t v191 = v190;
    uint64_t v192 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v190 + 16);
    sub_1B62F6B80((uint64_t)v431);
    uint64_t v193 = v192(v431, v189, v191);
    unint64_t v147 = v422;
    uint64_t v194 = v193;
    char v195 = sub_1B62F6AD0(v431, v189, v191);
    uint64_t v313 = *(void *)(v191 + 8);
    uint64_t v156 = v411;
    sub_1B62F6538(v194, (uint64_t)v195, v196, qword_1E9DD2FC8, v411, 1, v422, v417, v189, v313);
    swift_unknownObjectRelease();
    uint64_t v145 = v423;
    swift_release();
    sub_1B62F648C((uint64_t)v431);
LABEL_180:
    v155 += 16;
    if (!--v186)
    {
      swift_release();
      swift_release();
      LODWORD(v154) = v386;
      uint64_t v155 = HIDWORD(v386) & 1;
      uint64_t v175 = v399;
      uint64_t v177 = v396;
      goto LABEL_164;
    }
  }
  __break(1u);
LABEL_189:
  swift_release_n();
  char v110 = v389;
  if (v388)
  {
LABEL_190:
    uint64_t v200 = swift_retain();
    sub_1B62F67B0(v200, 0xFFFFFFFFuLL, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v147, v154 | (unint64_t)(v155 << 32), 2u, (uint64_t)v432);
    uint64_t v201 = type metadata accessor for ParticlePrepareGPUSystem();
    uint64_t v202 = qword_1E9DD2FD0 - 2;
    char v203 = (_OWORD *)swift_allocObject();
    long long v204 = v432[5];
    v203[5] = v432[4];
    v203[6] = v204;
    long long v205 = v432[7];
    v203[7] = v432[6];
    v203[8] = v205;
    long long v206 = v432[1];
    v203[1] = v432[0];
    v203[2] = v206;
    long long v207 = v432[3];
    v203[3] = v432[2];
    v203[4] = v207;
    sub_1B62F6B80((uint64_t)v432);
    sub_1B6C5CC74(v201, (uint64_t)&off_1F0F936B8, v202, v156, 1, v147, (uint64_t)sub_1B691FFC0, (uint64_t)v203);
    uint64_t v155 = HIDWORD(v386) & 1;
    swift_release();
    sub_1B62F648C((uint64_t)v432);
  }
LABEL_191:
  swift_retain();
  BOOL v208 = sub_1B62FACF8((uint64_t)&type metadata for ParticleID);
  swift_release();
  if (v208)
  {
    swift_retain();
    uint64_t v209 = swift_bridgeObjectRetain();
    char v210 = sub_1B62E2B38(v209, v145);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v210 & 1) == 0)
    {
      uint64_t v211 = swift_conformsToProtocol2();
      uint64_t v212 = v211;
      if (v388)
      {
        if (v211)
        {
          uint64_t v213 = swift_retain();
          sub_1B62F67B0(v213, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleSetID, v212, v147, v154 | (unint64_t)(v155 << 32), 2u, (uint64_t)v433);
          uint64_t v214 = type metadata accessor for ParticleSetID.GPUSystem();
          char v215 = off_1F0F613A0;
          uint64_t v216 = qword_1E9DD2FD0;
          uint64_t v217 = swift_allocObject();
          long long v218 = v436;
          *(_OWORD *)(v217 + 104) = v435;
          *(_OWORD *)(v217 + 120) = v218;
          long long v219 = v438;
          *(_OWORD *)(v217 + 136) = v437;
          *(_OWORD *)(v217 + 152) = v219;
          long long v220 = v433[1];
          *(_OWORD *)(v217 + 40) = v433[0];
          *(_OWORD *)(v217 + 56) = v220;
          long long v221 = v434;
          *(_OWORD *)(v217 + 72) = v433[2];
          *(void *)(v217 + 16) = v387;
          *(_DWORD *)(v217 + 24) = v147;
          *(_DWORD *)(v217 + 28) = HIDWORD(v422);
          *(unsigned char *)(v217 + 32) = 2;
          *(_OWORD *)(v217 + 88) = v221;
          swift_retain();
          sub_1B62F6B80((uint64_t)v433);
          sub_1B6C5CC74(v214, (uint64_t)v215, v216, v156, 1, v147, (uint64_t)sub_1B691FFC4, v217);
          goto LABEL_200;
        }
LABEL_239:
        __break(1u);
LABEL_240:
        __break(1u);
LABEL_241:
        __break(1u);
LABEL_242:
        __break(1u);
        swift_release();
        __break(1u);
LABEL_243:
        uint64_t result = sub_1B6E32BE8();
        __break(1u);
        return result;
      }
      if (!v211) {
        goto LABEL_240;
      }
      uint64_t v222 = swift_retain();
      sub_1B62F67B0(v222, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleSetID, v212, v147, v154 | (unint64_t)(v155 << 32), 2u, (uint64_t)v433);
      uint64_t v223 = type metadata accessor for ParticleSetID.System();
      uint64_t v224 = swift_allocObject();
      long long v484 = v434;
      long long v485 = v435;
      uint64_t v486 = v436;
      sub_1B62E3324((uint64_t)&v439);
      int v225 = v440;
      char v226 = v441;
      char v227 = v443;
      uint64_t v228 = v444;
      uint64_t v229 = v442 | 0x10;
      *(void *)(v224 + 16) = v439;
      *(_DWORD *)(v224 + 24) = v225;
      *(unsigned char *)(v224 + 28) = v226;
      *(void *)(v224 + 32) = v229;
      *(unsigned char *)(v224 + 40) = v227;
      *(void *)(v224 + 48) = v228;
      int v230 = sub_1B62F6AD0(v433, v223, (uint64_t)&off_1F0F61340);
      sub_1B62F6538(v224, (uint64_t)v230, v231, qword_1E9DD2FD0, v156, 1, v147, v417, v223, (uint64_t)off_1F0F61348);
      swift_release();
LABEL_200:
      swift_release();
      sub_1B62F648C((uint64_t)v433);
      char v110 = v389;
      LODWORD(v154) = v386;
      uint64_t v155 = HIDWORD(v386) & 1;
    }
  }
  *(void *)&v466[0] = *((void *)v110 + 1);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B62DE37C((uint64_t *)v466, v145);
  swift_release();
  uint64_t v232 = v154;
  sub_1B62F5ED8(*(uint64_t *)&v466[0], 2u, v388, v145, v387, v422, v154 | (unint64_t)(v155 << 32), v417, v156);
  swift_release();
  if (v388)
  {
    uint64_t v233 = swift_retain();
    sub_1B62F67B0(v233, 0xFFFFFFFFuLL, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v422, v154 | (unint64_t)(v155 << 32), 2u, (uint64_t)&v445);
    uint64_t inited = type metadata accessor for ParticlePostInitGPUSystem();
    uint64_t v235 = qword_1E9DD2FD0;
    int v236 = (_OWORD *)swift_allocObject();
    long long v237 = v450;
    v236[5] = v449;
    v236[6] = v237;
    long long v238 = v452;
    v236[7] = v451;
    v236[8] = v238;
    long long v239 = v446;
    v236[1] = v445;
    v236[2] = v239;
    long long v240 = v448;
    v236[3] = v447;
    v236[4] = v240;
    sub_1B62F6B80((uint64_t)&v445);
    sub_1B6C5CC74(inited, (uint64_t)&off_1F0F95320, v235, v156, 1, v422, (uint64_t)sub_1B691F618, (uint64_t)v236);
    swift_release();
    sub_1B62F648C((uint64_t)&v445);
    uint64_t v241 = v389;
    unint64_t v242 = sub_1B691B85C((uint64_t)&type metadata for PointCacheSpawner, (uint64_t)&off_1F0F74200, *(void *)v389, v145);
    if ((v243 & 1) == 0)
    {
      unint64_t v244 = v242;
      uint64_t v245 = swift_conformsToProtocol2();
      if (v245)
      {
        uint64_t v246 = v245;
        uint64_t v247 = swift_retain();
        sub_1B62F67B0(v247, v244, (uint64_t)&type metadata for PointCacheSpawner, v246, v422, v154 | (unint64_t)(v420 << 32), 2u, (uint64_t)v455);
        uint64_t v248 = type metadata accessor for PointCacheSpawner.GPUSystem();
        char v249 = off_1F0F74160;
        uint64_t v250 = qword_1E9DD2FD0;
        uint64_t v251 = swift_allocObject();
        long long v252 = v458;
        *(_OWORD *)(v251 + 104) = v457;
        *(_OWORD *)(v251 + 120) = v252;
        long long v253 = v460;
        *(_OWORD *)(v251 + 136) = v459;
        *(_OWORD *)(v251 + 152) = v253;
        long long v254 = v455[1];
        *(_OWORD *)(v251 + 40) = v455[0];
        *(_OWORD *)(v251 + 56) = v254;
        long long v255 = v456;
        *(_OWORD *)(v251 + 72) = v455[2];
        *(void *)(v251 + 16) = v387;
        *(void *)(v251 + 24) = v422;
        *(unsigned char *)(v251 + 32) = 2;
        *(_OWORD *)(v251 + 88) = v255;
        swift_retain();
        sub_1B62F6B80((uint64_t)v455);
        sub_1B6C5CC74(v248, (uint64_t)v249, v250, v411, 1, v422, (uint64_t)sub_1B691FFC4, v251);
        goto LABEL_208;
      }
LABEL_234:
      __break(1u);
LABEL_235:
      __break(1u);
LABEL_236:
      __break(1u);
LABEL_237:
      __break(1u);
LABEL_238:
      __break(1u);
      goto LABEL_239;
    }
  }
  else
  {
    uint64_t v241 = v389;
    if (v389[77] == 1)
    {
      uint64_t v256 = swift_conformsToProtocol2();
      if (!v256) {
        goto LABEL_235;
      }
      uint64_t v257 = v256;
      uint64_t v258 = swift_retain();
      sub_1B62F67B0(v258, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleGenerateGrid, v257, v422, v154 | (unint64_t)(v420 << 32), 2u, (uint64_t)v455);
      uint64_t v259 = type metadata accessor for ParticleGenerateGrid.System();
      uint64_t v260 = swift_allocObject();
      long long v445 = v456;
      long long v446 = v457;
      *(void *)&long long v447 = v458;
      sub_1B6A6ED00(1, (uint64_t)v453);
      long long v261 = v453[1];
      *(_OWORD *)(v260 + 16) = v453[0];
      *(_OWORD *)(v260 + 32) = v261;
      *(void *)(v260 + 48) = v454;
      unint64_t v262 = sub_1B62F6AD0(v455, v259, (uint64_t)&off_1F0F80CA8);
      sub_1B62F6538(v260, (uint64_t)v262, v263, qword_1E9DD2FD0, v411, 1, v422, v417, v259, (uint64_t)off_1F0F80CB0);
      swift_release();
LABEL_208:
      swift_release();
      sub_1B62F648C((uint64_t)v455);
      uint64_t v241 = v389;
      uint64_t v156 = v411;
    }
  }
  *(void *)&v466[0] = *((void *)v241 + 2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B62DE37C((uint64_t *)v466, v145);
  swift_release();
  uint64_t v264 = v417;
  sub_1B62F5ED8(*(uint64_t *)&v466[0], 3u, v388, v145, v387, v422, v232 | (v420 << 32), v417, v156);
  swift_release();
  if (v241[76])
  {
    uint64_t v265 = swift_conformsToProtocol2();
    uint64_t v266 = v265;
    if (v388)
    {
      uint64_t v267 = v423;
      if (!v265) {
        goto LABEL_236;
      }
      uint64_t v268 = swift_retain();
      sub_1B62F67B0(v268, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrate, v266, v422, v232 | (v420 << 32), 3u, (uint64_t)v466);
      uint64_t v269 = type metadata accessor for ParticleIntegrate.GPUSystem();
      uint64_t v270 = off_1F0F72EA0;
      uint64_t v271 = qword_1E9DD2FD8;
      uint64_t v272 = swift_allocObject();
      long long v273 = v466[5];
      *(_OWORD *)(v272 + 104) = v466[4];
      *(_OWORD *)(v272 + 120) = v273;
      long long v274 = v466[7];
      *(_OWORD *)(v272 + 136) = v466[6];
      *(_OWORD *)(v272 + 152) = v274;
      long long v275 = v466[1];
      *(_OWORD *)(v272 + 40) = v466[0];
      *(_OWORD *)(v272 + 56) = v275;
      long long v276 = v466[3];
      *(_OWORD *)(v272 + 72) = v466[2];
      *(void *)(v272 + 16) = v387;
      *(void *)(v272 + 24) = v422;
      *(unsigned char *)(v272 + 32) = 3;
      *(_OWORD *)(v272 + 88) = v276;
      swift_retain();
      sub_1B62F6B80((uint64_t)v466);
      uint64_t v264 = v417;
      sub_1B6C5CC74(v269, (uint64_t)v270, v271, v156, 1, v422, (uint64_t)sub_1B691F600, v272);
      swift_release();
      sub_1B62F648C((uint64_t)v466);
      uint64_t v241 = v389;
      if ((v389[42] & 1) == 0) {
        goto LABEL_227;
      }
LABEL_223:
      uint64_t v299 = sub_1B62C91B8((uint64_t)&type metadata for LocalAABB);
      if ((v300 & 1) == 0)
      {
        uint64_t v301 = (_OWORD *)(v299 + 32 * v314);
        *uint64_t v301 = xmmword_1B6E4F370;
        v301[1] = xmmword_1B6E94FB0;
      }
      goto LABEL_227;
    }
    if (!v265) {
      goto LABEL_237;
    }
    uint64_t v277 = swift_retain();
    sub_1B62F67B0(v277, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrate, v266, v422, v232 | (v420 << 32), 3u, (uint64_t)v461);
    uint64_t v278 = type metadata accessor for ParticleIntegrate.System();
    swift_allocObject();
    sub_1B62F6B80((uint64_t)v461);
    uint64_t v279 = sub_1B6B5A72C((uint64_t)v461);
    uint64_t v280 = sub_1B62F6AD0(v461, v278, (uint64_t)&off_1F0F72E40);
    sub_1B62F6538(v279, (uint64_t)v280, v281, qword_1E9DD2FD8, v411, 1, v422, v417, v278, (uint64_t)off_1F0F72E48);
    swift_release();
    swift_release();
    sub_1B62F648C((uint64_t)v461);
    swift_retain();
    LOBYTE(v279) = sub_1B62FACF8((uint64_t)&type metadata for AngularVelocity);
    swift_release();
    if (v279)
    {
      uint64_t v282 = swift_conformsToProtocol2();
      if (!v282) {
        goto LABEL_241;
      }
      uint64_t v283 = v282;
      uint64_t v284 = swift_retain();
      sub_1B62F67B0(v284, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrateOrientation, v283, v422, v232 | (v420 << 32), 3u, (uint64_t)v462);
      uint64_t v285 = type metadata accessor for ParticleIntegrateOrientation.System();
      uint64_t v286 = swift_allocObject();
      long long v481 = *(_OWORD *)&v462[11];
      long long v482 = *(_OWORD *)&v462[13];
      uint64_t v483 = v462[15];
      sub_1B663C678((uint64_t)v463);
      long long v287 = v463[1];
      *(_OWORD *)(v286 + 16) = v463[0];
      *(_OWORD *)(v286 + 32) = v287;
      *(void *)(v286 + 48) = v464;
      __int16 v288 = sub_1B62F6AD0(v462, v285, (uint64_t)&off_1F0F993E0);
      sub_1B62F6538(v286, (uint64_t)v288, v289, qword_1E9DD2FD8, v411, 1, v422, v417, v285, (uint64_t)off_1F0F993E8);
      swift_release();
      swift_release();
      sub_1B62F648C((uint64_t)v462);
    }
    swift_retain();
    BOOL v290 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAngleVelocity);
    swift_release();
    uint64_t v241 = v389;
    uint64_t v156 = v411;
    uint64_t v264 = v417;
    if (v290)
    {
      uint64_t v291 = swift_conformsToProtocol2();
      if (!v291) {
        goto LABEL_242;
      }
      uint64_t v292 = v291;
      uint64_t v293 = swift_retain();
      sub_1B62F67B0(v293, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrateAngle, v292, v422, v232 | (v420 << 32), 3u, (uint64_t)v465);
      uint64_t v294 = type metadata accessor for ParticleIntegrateAngle.System();
      uint64_t v295 = swift_allocObject();
      long long v478 = *(_OWORD *)&v465[11];
      long long v479 = *(_OWORD *)&v465[13];
      uint64_t v480 = v465[15];
      sub_1B663E218((uint64_t)v476);
      long long v296 = v476[1];
      *(_OWORD *)(v295 + 16) = v476[0];
      *(_OWORD *)(v295 + 32) = v296;
      *(void *)(v295 + 48) = v477;
      uint64_t v297 = sub_1B62F6AD0(v465, v294, (uint64_t)&off_1F0F8D1E0);
      uint64_t v264 = v417;
      sub_1B62F6538(v295, (uint64_t)v297, v298, qword_1E9DD2FD8, v411, 1, v422, v417, v294, (uint64_t)off_1F0F8D1E8);
      swift_release();
      swift_release();
      sub_1B62F648C((uint64_t)v465);
      uint64_t v241 = v389;
    }
  }
  uint64_t v267 = v423;
  if ((v241[42] & 1) == 0) {
    goto LABEL_227;
  }
  if (v388) {
    goto LABEL_223;
  }
  uint64_t v302 = swift_conformsToProtocol2();
  if (!v302) {
    goto LABEL_238;
  }
  uint64_t v303 = v302;
  uint64_t v304 = swift_retain();
  sub_1B62F67B0(v304, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleUpdateAABB, v303, v422, v232 | (v420 << 32), 3u, (uint64_t)v466);
  uint64_t updated = type metadata accessor for ParticleUpdateAABB.System();
  uint64_t v306 = swift_allocObject();
  v307 = sub_1B62F6AD0(v466, updated, (uint64_t)&off_1F0F79C78);
  uint64_t v264 = v417;
  sub_1B62F6538(v306, (uint64_t)v307, v308, qword_1E9DD2FD8, v156, 1, v422, v417, updated, (uint64_t)off_1F0F79C80);
  swift_release();
  swift_release();
  sub_1B62F648C((uint64_t)v466);
  uint64_t v241 = v389;
LABEL_227:
  v424[0] = *((void *)v241 + 3);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B62DE37C(v424, v267);
  swift_release();
  sub_1B62F5ED8(v424[0], 4u, 0, v267, v387, v422, v232 | (v420 << 32), v264, v156);
  swift_release();
  if (v388)
  {
    if (v387)
    {
      int v309 = *(unsigned __int8 *)(v267 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare);
      uint64_t v310 = swift_retain();
      sub_1B6C52E90(v310, v309);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release_n();
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B62DE2C8(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 184);
  uint64_t v4 = swift_retain();
  if (v3)
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(unsigned int *)(*(void *)(v1 + 168) + 4 * a1);
    uint64_t v6 = *(unsigned int *)(*(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v5 + 8);
    swift_release();
    return v5 | (v6 << 32);
  }
  return result;
}

uint64_t sub_1B62DE37C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1B62DE420(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_1B62DE434(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t sub_1B62DE420(uint64_t a1)
{
  return sub_1B62E1D40(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B62DE434(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B62E0A98(0, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v236 = (uint64_t)&v213 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v235 = (uint64_t)&v213 - v10;
  MEMORY[0x1F4188790](v11, v12);
  char v14 = (char *)&v213 - v13;
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v224 = (uint64_t)&v213 - v17;
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v220 = (uint64_t)&v213 - v20;
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v219 = (uint64_t)&v213 - v23;
  sub_1B62E0A98(0, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript, v4);
  MEMORY[0x1F4188790](v24 - 8, v25);
  uint64_t v239 = (uint64_t)&v213 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v238 = (uint64_t)&v213 - v29;
  MEMORY[0x1F4188790](v30, v31);
  int v225 = (char *)&v213 - v32;
  MEMORY[0x1F4188790](v33, v34);
  unint64_t v36 = (char *)&v213 - v35;
  MEMORY[0x1F4188790](v37, v38);
  long long v221 = (char *)&v213 - v39;
  MEMORY[0x1F4188790](v40, v41);
  int v43 = (char *)&v213 - v42;
  uint64_t v44 = a1[1];
  uint64_t v242 = a2;
  swift_retain_n();
  uint64_t v45 = sub_1B6E33068();
  if (v45 >= v44)
  {
    if (v44)
    {
      uint64_t v49 = v242;
      swift_retain();
      uint64_t v50 = v237;
      sub_1B62DFF54(0, v44, 1, a1, v49);
      swift_release_n();
      uint64_t v237 = v50;
    }
    else
    {
      swift_release_n();
    }
    return swift_release();
  }
  uint64_t v218 = v45;
  if (v44 >= 0) {
    uint64_t v46 = v44;
  }
  else {
    uint64_t v46 = v44 + 1;
  }
  if (v44 < -1)
  {
    swift_release_n();
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  uint64_t v222 = v14;
  uint64_t v223 = v36;
  uint64_t v227 = v44;
  uint64_t v217 = v43;
  uint64_t v213 = a1;
  if (v44 < 2)
  {
    uint64_t v51 = MEMORY[0x1E4FBC860];
    uint64_t v229 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v44 != 1)
    {
      unint64_t v56 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v54 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_228;
    }
    uint64_t v216 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v47 = v46 >> 1;
    uint64_t v48 = sub_1B6E31C98();
    *(void *)(v48 + 16) = v47;
    uint64_t v216 = v48;
    uint64_t v229 = (char *)(v48 + 32);
  }
  uint64_t v52 = 0;
  uint64_t v53 = *a1;
  uint64_t v232 = (void *)(v242 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v214 = v53 + 20;
  uint64_t v234 = v53;
  uint64_t v215 = v53 - 8;
  uint64_t v54 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v55 = v227;
  while (2)
  {
    uint64_t v57 = v52 + 1;
    uint64_t v230 = v52;
    if (v52 + 1 >= v55) {
      goto LABEL_158;
    }
    int v58 = (int *)(v234 + 8 * v57);
    int v59 = v58[1];
    uint64_t v60 = *v58;
    uint64_t v61 = (int *)(v234 + 8 * v52);
    int v62 = v61[1];
    uint64_t v63 = *v61;
    if (v60 == -1 && v59 == 0)
    {
      uint64_t v65 = (uint64_t)v221;
      goto LABEL_31;
    }
    uint64_t v65 = (uint64_t)v221;
    if ((v60 & 0x80000000) != 0
      || v232[1] <= v60
      || (v59 != -1 ? (BOOL v66 = *(_DWORD *)(*v232 + 12 * (int)v60 + 8) == v59) : (BOOL v66 = 1),
          !v66
       || (char v67 = (unsigned int *)(*v232 + 12 * (int)v60),
           uint64_t v68 = v237,
           sub_1B6963C10(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v67 + 32), *v67 | ((unint64_t)*((unsigned __int16 *)v67 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v67+ 2) << 32), 32, v242, (uint64_t)&v240), uint64_t v237 = v68, !v241)))
    {
LABEL_31:
      uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
      uint64_t v71 = *(void *)(updated - 8);
      if (*(void *)(v71 + 64))
      {
        if (v60 == -1) {
          goto LABEL_40;
        }
        uint64_t v72 = *(void *)(v71 + 72);
        if ((v60 & 0x80000000) != 0) {
          goto LABEL_40;
        }
      }
      else
      {
        if (v60 == -1) {
          goto LABEL_40;
        }
        uint64_t v72 = 0;
        if ((v60 & 0x80000000) != 0) {
          goto LABEL_40;
        }
      }
      if (v232[1] > v60 && (v59 == -1 || *(_DWORD *)(*v232 + 12 * (int)v60 + 8) == v59))
      {
        uint64_t v185 = (unsigned int *)(*v232 + 12 * (int)v60);
        uint64_t v73 = (uint64_t)v217;
        uint64_t v186 = v237;
        sub_1B69643DC(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v185 + 32), *v185 | ((unint64_t)*((unsigned __int16 *)v185 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v185+ 2) << 32), v72, v242, (uint64_t)v217);
        uint64_t v237 = v186;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v73, 1, updated) != 1)
        {
          uint64_t v187 = type metadata accessor for ParticleUpdateScript;
          uint64_t v188 = v73;
          uint64_t v189 = &qword_1EB97F498;
          goto LABEL_217;
        }
LABEL_41:
        sub_1B62E0A28(v73, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
        uint64_t inited = type metadata accessor for ParticleInitScript(0);
        uint64_t v75 = *(void *)(inited - 8);
        if (*(void *)(v75 + 64))
        {
          if (v60 == -1) {
            goto LABEL_50;
          }
          uint64_t v76 = *(void *)(v75 + 72);
          if ((v60 & 0x80000000) != 0) {
            goto LABEL_50;
          }
        }
        else
        {
          if (v60 == -1) {
            goto LABEL_50;
          }
          uint64_t v76 = 0;
          if ((v60 & 0x80000000) != 0) {
            goto LABEL_50;
          }
        }
        if (v232[1] <= v60 || v59 != -1 && *(_DWORD *)(*v232 + 12 * (int)v60 + 8) != v59)
        {
LABEL_50:
          uint64_t v77 = v220;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v220, 1, 1, inited);
LABEL_51:
          sub_1B62E0A28(v77, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
          uint64_t v228 = 0;
          goto LABEL_52;
        }
        char v195 = (unsigned int *)(*v232 + 12 * (int)v60);
        uint64_t v77 = v220;
        uint64_t v196 = v237;
        sub_1B696439C(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v195 + 32), *v195 | ((unint64_t)*((unsigned __int16 *)v195 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v195+ 2) << 32), v76, v242, v220);
        uint64_t v237 = v196;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v77, 1, inited) == 1) {
          goto LABEL_51;
        }
        uint64_t v187 = type metadata accessor for ParticleInitScript;
        uint64_t v188 = v77;
        uint64_t v189 = &qword_1EB97F1C0;
LABEL_217:
        sub_1B62E0A28(v188, v189, v187);
        uint64_t v228 = 1;
        goto LABEL_52;
      }
LABEL_40:
      uint64_t v73 = (uint64_t)v217;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v217, 1, 1, updated);
      goto LABEL_41;
    }
    if (v240 >= 7u) {
      uint64_t v69 = 1;
    }
    else {
      uint64_t v69 = qword_1B6E958F0[(char)v240];
    }
    uint64_t v228 = v69;
    sub_1B677C3D4(v240, v241);
LABEL_52:
    if ((v63 != -1 || v62)
      && (v63 & 0x80000000) == 0
      && v232[1] > v63
      && (v62 == -1 || *(_DWORD *)(*v232 + 12 * (int)v63 + 8) == v62))
    {
      uint64_t v78 = (unsigned int *)(*v232 + 12 * (int)v63);
      uint64_t v79 = v237;
      sub_1B6963C10(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v78 + 32), *v78 | ((unint64_t)*((unsigned __int16 *)v78 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v78+ 2) << 32), 32, v242, (uint64_t)&v240);
      uint64_t v237 = v79;
      if (v241)
      {
        if (v240 >= 7u) {
          uint64_t v80 = 1;
        }
        else {
          uint64_t v80 = qword_1B6E958F0[(char)v240];
        }
        uint64_t v226 = v80;
        sub_1B677C3D4(v240, v241);
        goto LABEL_82;
      }
    }
    uint64_t v81 = type metadata accessor for ParticleUpdateScript(0);
    uint64_t v82 = *(void *)(v81 - 8);
    if (*(void *)(v82 + 64))
    {
      if (v63 == -1) {
        goto LABEL_70;
      }
      uint64_t v83 = *(void *)(v82 + 72);
      if ((v63 & 0x80000000) != 0) {
        goto LABEL_70;
      }
    }
    else
    {
      if (v63 == -1) {
        goto LABEL_70;
      }
      uint64_t v83 = 0;
      if ((v63 & 0x80000000) != 0) {
        goto LABEL_70;
      }
    }
    if (v232[1] <= v63 || v62 != -1 && *(_DWORD *)(*v232 + 12 * (int)v63 + 8) != v62)
    {
LABEL_70:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v65, 1, 1, v81);
      goto LABEL_71;
    }
    uint64_t v190 = (unsigned int *)(*v232 + 12 * (int)v63);
    uint64_t v191 = v237;
    sub_1B69643DC(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v190 + 32), *v190 | ((unint64_t)*((unsigned __int16 *)v190 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v190+ 2) << 32), v83, v242, v65);
    uint64_t v237 = v191;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v65, 1, v81) != 1)
    {
      uint64_t v192 = type metadata accessor for ParticleUpdateScript;
      uint64_t v193 = v65;
      uint64_t v194 = &qword_1EB97F498;
      goto LABEL_220;
    }
LABEL_71:
    sub_1B62E0A28(v65, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
    uint64_t v84 = type metadata accessor for ParticleInitScript(0);
    uint64_t v85 = *(void *)(v84 - 8);
    if (*(void *)(v85 + 64))
    {
      uint64_t v86 = v232;
      if (v63 == -1) {
        goto LABEL_80;
      }
      uint64_t v87 = *(void *)(v85 + 72);
      if ((v63 & 0x80000000) != 0) {
        goto LABEL_80;
      }
    }
    else
    {
      uint64_t v86 = v232;
      if (v63 == -1) {
        goto LABEL_80;
      }
      uint64_t v87 = 0;
      if ((v63 & 0x80000000) != 0) {
        goto LABEL_80;
      }
    }
    if (v86[1] > v63 && (v62 == -1 || *(_DWORD *)(*v86 + 12 * (int)v63 + 8) == v62))
    {
      uint64_t v197 = (unsigned int *)(*v86 + 12 * (int)v63);
      uint64_t v88 = v219;
      uint64_t v198 = v237;
      sub_1B696439C(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v197 + 32), *v197 | ((unint64_t)*((unsigned __int16 *)v197 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v197+ 2) << 32), v87, v242, v219);
      uint64_t v237 = v198;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v88, 1, v84) == 1) {
        goto LABEL_81;
      }
      uint64_t v192 = type metadata accessor for ParticleInitScript;
      uint64_t v193 = v88;
      uint64_t v194 = &qword_1EB97F1C0;
LABEL_220:
      sub_1B62E0A28(v193, v194, v192);
      uint64_t v226 = 1;
      goto LABEL_82;
    }
LABEL_80:
    uint64_t v88 = v219;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v219, 1, 1, v84);
LABEL_81:
    sub_1B62E0A28(v88, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
    uint64_t v226 = 0;
LABEL_82:
    uint64_t v57 = v230 + 2;
    if (v230 + 2 >= v227) {
      goto LABEL_152;
    }
    uint64_t v89 = (int *)(v214 + 8 * v230);
    uint64_t v90 = (uint64_t)v225;
    uint64_t v231 = v54;
    do
    {
      uint64_t v233 = (unsigned int *)v57;
      uint64_t v91 = *(v89 - 2);
      uint64_t v92 = *(v89 - 1);
      int v93 = *v89;
      uint64_t v94 = *(v89 - 3);
      BOOL v95 = v92 == -1 && v93 == 0;
      if (!v95
        && (v92 & 0x80000000) == 0
        && v232[1] > v92
        && (v93 == -1 || *(_DWORD *)(*v232 + 12 * (int)v92 + 8) == v93))
      {
        uint64_t v96 = (unsigned int *)(*v232 + 12 * (int)v92);
        uint64_t v97 = v237;
        sub_1B6963C10(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v96 + 32), *v96 | ((unint64_t)*((unsigned __int16 *)v96 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v96+ 2) << 32), 32, v242, (uint64_t)&v240);
        uint64_t v237 = v97;
        if (v241)
        {
          if (v240 >= 7u) {
            uint64_t v98 = 1;
          }
          else {
            uint64_t v98 = qword_1B6E958F0[(char)v240];
          }
          sub_1B677C3D4(v240, v241);
          goto LABEL_116;
        }
      }
      uint64_t v99 = type metadata accessor for ParticleUpdateScript(0);
      uint64_t v100 = *(void *)(v99 - 8);
      if (*(void *)(v100 + 64))
      {
        if (v92 == -1) {
          goto LABEL_104;
        }
        uint64_t v101 = *(void *)(v100 + 72);
        if ((v92 & 0x80000000) != 0) {
          goto LABEL_104;
        }
      }
      else
      {
        if (v92 == -1) {
          goto LABEL_104;
        }
        uint64_t v101 = 0;
        if ((v92 & 0x80000000) != 0) {
          goto LABEL_104;
        }
      }
      if (v232[1] > v92 && (v93 == -1 || *(_DWORD *)(*v232 + 12 * (int)v92 + 8) == v93))
      {
        uint64_t v102 = v90;
        uint64_t v103 = v91;
        uint64_t v120 = (unsigned int *)(*v232 + 12 * (int)v92);
        uint64_t v104 = (uint64_t)v223;
        uint64_t v121 = v237;
        sub_1B69643DC(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v120 + 32), *v120 | ((unint64_t)*((unsigned __int16 *)v120 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v120+ 2) << 32), v101, v242, (uint64_t)v223);
        uint64_t v237 = v121;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v104, 1, v99) != 1)
        {
          sub_1B62E0A28(v104, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
          uint64_t v98 = 1;
          uint64_t v91 = v103;
          uint64_t v90 = v102;
          uint64_t v54 = v231;
          goto LABEL_116;
        }
        goto LABEL_105;
      }
LABEL_104:
      uint64_t v102 = v90;
      uint64_t v103 = v91;
      uint64_t v104 = (uint64_t)v223;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v223, 1, 1, v99);
LABEL_105:
      sub_1B62E0A28(v104, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
      uint64_t v105 = type metadata accessor for ParticleInitScript(0);
      uint64_t v106 = *(void *)(v105 - 8);
      if (*(void *)(v106 + 64))
      {
        uint64_t v91 = v103;
        uint64_t v90 = v102;
        uint64_t v54 = v231;
        if (v92 == -1) {
          goto LABEL_114;
        }
        uint64_t v107 = *(void *)(v106 + 72);
        if ((v92 & 0x80000000) != 0) {
          goto LABEL_114;
        }
      }
      else
      {
        uint64_t v91 = v103;
        uint64_t v90 = v102;
        uint64_t v54 = v231;
        if (v92 == -1 || (uint64_t v107 = 0, (v92 & 0x80000000) != 0))
        {
LABEL_114:
          uint64_t v108 = (uint64_t)v222;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56))(v222, 1, 1, v105);
LABEL_115:
          sub_1B62E0A28(v108, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
          uint64_t v98 = 0;
          goto LABEL_116;
        }
      }
      if (v232[1] <= v92 || v93 != -1 && *(_DWORD *)(*v232 + 12 * (int)v92 + 8) != v93) {
        goto LABEL_114;
      }
      uint64_t v125 = (unsigned int *)(*v232 + 12 * (int)v92);
      uint64_t v108 = (uint64_t)v222;
      uint64_t v126 = v237;
      sub_1B696439C(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v125 + 32), *v125 | ((unint64_t)*((unsigned __int16 *)v125 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v125+ 2) << 32), v107, v242, (uint64_t)v222);
      uint64_t v237 = v126;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v108, 1, v105) == 1) {
        goto LABEL_115;
      }
      sub_1B62E0A28(v108, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
      uint64_t v98 = 1;
LABEL_116:
      if (v94 == -1 && !v91
        || (v94 & 0x80000000) != 0
        || v232[1] <= v94
        || v91 != -1 && *(_DWORD *)(*v232 + 12 * (int)v94 + 8) != v91
        || (uint64_t v112 = (unsigned int *)(*v232 + 12 * (int)v94),
            uint64_t v113 = v237,
            sub_1B6963C10(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v112 + 32), *v112 | ((unint64_t)*((unsigned __int16 *)v112 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v112 + 2) << 32), 32, v242, (uint64_t)&v240), uint64_t v237 = v113, !v241))
      {
        uint64_t v109 = type metadata accessor for ParticleUpdateScript(0);
        uint64_t v110 = *(void *)(v109 - 8);
        if (*(void *)(v110 + 64))
        {
          if (v94 == -1) {
            goto LABEL_134;
          }
          uint64_t v111 = *(void *)(v110 + 72);
          if ((v94 & 0x80000000) != 0) {
            goto LABEL_134;
          }
        }
        else
        {
          if (v94 == -1) {
            goto LABEL_134;
          }
          uint64_t v111 = 0;
          if ((v94 & 0x80000000) != 0) {
            goto LABEL_134;
          }
        }
        if (v232[1] > v94 && (v91 == -1 || *(_DWORD *)(*v232 + 12 * (int)v94 + 8) == v91))
        {
          uint64_t v122 = (unsigned int *)(*v232 + 12 * (int)v94);
          uint64_t v123 = v237;
          sub_1B69643DC(*(void *)(*(void *)(v242 + 136) + 8 * (int)*v122 + 32), *v122 | ((unint64_t)*((unsigned __int16 *)v122 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v122 + 2) << 32), v111, v242, v90);
          uint64_t v237 = v123;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v90, 1, v109) != 1)
          {
            BOOL v124 = v228 < v226;
            sub_1B62E0A28(v90, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
            char v119 = v124 ^ (v98 > 0);
            goto LABEL_139;
          }
          goto LABEL_135;
        }
LABEL_134:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v90, 1, 1, v109);
LABEL_135:
        sub_1B62E0A28(v90, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
        uint64_t v115 = v224;
        sub_1B695F564(v94 | (unint64_t)(v91 << 32), v224);
        uint64_t v116 = type metadata accessor for ParticleInitScript(0);
        int v117 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 48))(v115, 1, v116);
        sub_1B62E0A28(v115, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
        if (v117 == 1) {
          BOOL v118 = v98 >= 0;
        }
        else {
          BOOL v118 = v98 > 0;
        }
        char v119 = (v228 < v226) ^ v118;
        uint64_t v90 = (uint64_t)v225;
        goto LABEL_139;
      }
      if (v240 >= 7u) {
        uint64_t v114 = 1;
      }
      else {
        uint64_t v114 = qword_1B6E958F0[(char)v240];
      }
      BOOL v127 = v228 < v226;
      sub_1B677C3D4(v240, v241);
      char v119 = v127 ^ (v98 >= v114);
LABEL_139:
      uint64_t v57 = (uint64_t)v233;
      if ((v119 & 1) == 0) {
        goto LABEL_152;
      }
      v89 += 2;
      uint64_t v57 = (uint64_t)v233 + 1;
    }
    while ((unsigned int *)v227 != (unsigned int *)((char *)v233 + 1));
    uint64_t v57 = v227;
LABEL_152:
    if (v228 < v226 && v230 < v57)
    {
      char v128 = (uint64_t *)(v215 + 8 * v57);
      uint64_t v129 = v57;
      uint64_t v130 = v230;
      uint64_t v131 = (uint64_t *)(v234 + 8 * v230);
      do
      {
        if (v130 != --v129)
        {
          uint64_t v132 = *v131;
          uint64_t *v131 = *v128;
          *char v128 = v132;
        }
        ++v130;
        --v128;
        ++v131;
      }
      while (v130 < v129);
    }
LABEL_158:
    if (v57 < v227 && v57 - v230 < v218)
    {
      uint64_t v133 = v230 + v218;
      if (v230 + v218 >= v227) {
        uint64_t v133 = v227;
      }
      uint64_t v228 = v133;
      if (v57 != v133)
      {
        uint64_t v231 = v54;
        uint64_t v134 = (unsigned int *)(v215 + 8 * v57);
        while (1)
        {
          uint64_t v136 = *(void *)(v234 + 8 * v57);
          uint64_t v137 = v230;
          uint64_t v233 = v134;
          uint64_t v138 = v57;
          while (1)
          {
            uint64_t v140 = *v134;
            uint64_t v141 = v134[1];
            unint64_t v142 = v136;
            sub_1B695E090(v136, (uint64_t)&v240);
            if (v241)
            {
              uint64_t v143 = v240 > 6u ? 1 : qword_1B6E958F0[(char)v240];
              sub_1B677C3D4(v240, v241);
            }
            else
            {
              uint64_t v144 = v238;
              sub_1B695F524(v142, v238);
              uint64_t v145 = type metadata accessor for ParticleUpdateScript(0);
              int v146 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 48))(v144, 1, v145);
              sub_1B62E0A28(v144, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
              if (v146 == 1)
              {
                uint64_t v147 = v236;
                sub_1B695F564(v142, v236);
                uint64_t v148 = type metadata accessor for ParticleInitScript(0);
                uint64_t v143 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 48))(v147, 1, v148) != 1;
                sub_1B62E0A28(v147, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
              }
              else
              {
                uint64_t v143 = 1;
              }
            }
            unint64_t v149 = v140 | (v141 << 32);
            sub_1B695E090(v149, (uint64_t)&v240);
            if (v241) {
              break;
            }
            uint64_t v150 = v239;
            sub_1B695F524(v149, v239);
            uint64_t v151 = type metadata accessor for ParticleUpdateScript(0);
            int v152 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 48))(v150, 1, v151);
            sub_1B62E0A28(v150, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
            if (v152 == 1)
            {
              uint64_t v153 = v235;
              sub_1B695F564(v149, v235);
              uint64_t v154 = type metadata accessor for ParticleInitScript(0);
              int v155 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 48))(v153, 1, v154);
              sub_1B62E0A28(v153, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
              if (v155 == 1)
              {
                if ((v143 & 0x8000000000000000) == 0) {
                  goto LABEL_164;
                }
              }
              else if (v143 >= 1)
              {
                goto LABEL_164;
              }
            }
            else if (v143 >= 1)
            {
              goto LABEL_164;
            }
LABEL_169:
            uint64_t v136 = *((void *)v134 + 1);
            *((void *)v134 + 1) = *(void *)v134;
            *(void *)uint64_t v134 = v136;
            v134 -= 2;
            ++v137;
            uint64_t v135 = v138;
            if (v138 == v137) {
              goto LABEL_165;
            }
          }
          if (v240 <= 6u) {
            uint64_t v139 = qword_1B6E958F0[(char)v240];
          }
          else {
            uint64_t v139 = 1;
          }
          sub_1B677C3D4(v240, v241);
          if (v143 < v139) {
            goto LABEL_169;
          }
LABEL_164:
          uint64_t v135 = v138;
LABEL_165:
          uint64_t v57 = v135 + 1;
          uint64_t v134 = v233 + 2;
          if (v57 == v228)
          {
            uint64_t v57 = v228;
            uint64_t v54 = v231;
            break;
          }
        }
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v157 = v230;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v54 = sub_1B62BD890(0, *((void *)v54 + 2) + 1, 1, v54);
    }
    unint64_t v159 = *((void *)v54 + 2);
    unint64_t v158 = *((void *)v54 + 3);
    unint64_t v56 = v159 + 1;
    if (v159 >= v158 >> 1) {
      uint64_t v54 = sub_1B62BD890(v158 > 1, v159 + 1, 1, v54);
    }
    *((void *)v54 + 2) = v56;
    uint64_t v160 = v54 + 32;
    uint64_t v161 = &v54[16 * v159 + 32];
    *(void *)uint64_t v161 = v157;
    *((void *)v161 + 1) = v57;
    uint64_t v233 = (unsigned int *)v57;
    if (v159)
    {
      uint64_t v231 = v54;
      while (1)
      {
        uint64_t v162 = v56 - 1;
        if (v56 >= 4)
        {
          BOOL v167 = &v160[16 * v56];
          uint64_t v168 = *((void *)v167 - 7) - *((void *)v167 - 8);
          uint64_t v165 = *((void *)v167 - 5) - *((void *)v167 - 6);
          uint64_t v166 = v56 - 2;
          uint64_t v169 = &v160[16 * v56 - 32];
          uint64_t v163 = *(void *)v169;
          uint64_t v164 = *((void *)v169 + 1);
          if (v165 - v163 + v164 >= v168)
          {
            BOOL v172 = v165 < *(void *)&v160[16 * v162 + 8] - *(void *)&v160[16 * v162];
            goto LABEL_206;
          }
        }
        else
        {
          if (v56 != 3)
          {
            uint64_t v170 = *(void *)&v160[16 * v56 - 24] - *(void *)&v160[16 * v56 - 32];
            uint64_t v171 = *(void *)&v160[16 * v162 + 8] - *(void *)&v160[16 * v162];
LABEL_203:
            if (v171 < v170) {
              goto LABEL_14;
            }
            goto LABEL_208;
          }
          uint64_t v163 = *((void *)v54 + 6);
          uint64_t v164 = *((void *)v54 + 7);
          uint64_t v165 = *((void *)v54 + 5) - *((void *)v54 + 4);
          uint64_t v166 = 1;
        }
        uint64_t v170 = v164 - v163;
        uint64_t v171 = *(void *)&v160[16 * v162 + 8] - *(void *)&v160[16 * v162];
        if (v170 + v171 < v165) {
          goto LABEL_203;
        }
        BOOL v172 = v165 < v171;
LABEL_206:
        if (v172) {
          uint64_t v162 = v166;
        }
LABEL_208:
        char v173 = &v160[16 * v162 - 16];
        uint64_t v174 = *(void *)v173;
        uint64_t v175 = v160;
        uint64_t v176 = &v160[16 * v162];
        uint64_t v177 = *((void *)v176 + 1);
        uint64_t v178 = (char *)(v234 + 8 * *(void *)v173);
        char v179 = (char *)(v234 + 8 * *(void *)v176);
        uint64_t v180 = v234 + 8 * v177;
        uint64_t v181 = v242;
        swift_retain();
        BOOL v182 = v178;
        uint64_t v183 = v237;
        sub_1B691DE64(v182, v179, v180, v229, v181);
        uint64_t v237 = v183;
        if (v183) {
          goto LABEL_236;
        }
        swift_release();
        *(void *)char v173 = v174;
        *((void *)v173 + 1) = v177;
        uint64_t v54 = v231;
        unint64_t v184 = *((void *)v231 + 2);
        unint64_t v56 = v184 - 1;
        memmove(v176, v176 + 16, 16 * (v184 - 1 - v162));
        *((void *)v54 + 2) = v184 - 1;
        uint64_t v160 = v175;
        if (v184 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v56 = 1;
LABEL_14:
    uint64_t v55 = v227;
    uint64_t v52 = (uint64_t)v233;
    if ((uint64_t)v233 < v227) {
      continue;
    }
    break;
  }
  uint64_t v51 = v216;
LABEL_228:
  uint64_t v216 = v51;
  if (v56 < 2)
  {
LABEL_234:
    swift_bridgeObjectRelease();
    *(void *)(v216 + 16) = 0;
  }
  else
  {
    uint64_t v239 = *v213;
    uint64_t v199 = v242;
    while (1)
    {
      uint64_t v200 = *(void *)&v54[16 * v56];
      uint64_t v201 = &v54[16 * v56 + 16];
      uint64_t v202 = *((void *)v201 + 1);
      char v203 = (char *)(v239 + 8 * v200);
      long long v204 = (char *)(v239 + 8 * *(void *)v201);
      uint64_t v205 = v239 + 8 * v202;
      swift_retain();
      long long v206 = v203;
      uint64_t v207 = v237;
      sub_1B691DE64(v206, v204, v205, v229, v199);
      uint64_t v237 = v207;
      if (v207) {
        break;
      }
      swift_release();
      BOOL v208 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v208 = sub_1B6D671B8((uint64_t)v54);
      }
      uint64_t v209 = v208 + 32;
      char v210 = &v208[16 * v56];
      *(void *)char v210 = v200;
      *((void *)v210 + 1) = v202;
      uint64_t v54 = v208;
      unint64_t v211 = *((void *)v208 + 2);
      memmove(&v209[16 * v56 - 16], &v209[16 * v56], 16 * (v211 - v56));
      *((void *)v54 + 2) = v211 - 1;
      unint64_t v56 = v211 - 1;
      if (v211 <= 2) {
        goto LABEL_234;
      }
    }
    uint64_t v231 = v54;
LABEL_236:
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v216 + 16) = 0;
  }
  swift_release_n();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1B62DFF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v109 = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B62E0A98(0, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v106 = (uint64_t)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v105 = (uint64_t)&v101 - v15;
  sub_1B62E0A98(0, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript, v9);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v108 = (uint64_t)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v107 = (uint64_t)&v101 - v21;
  uint64_t v102 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = *a4;
    uint64_t v104 = a5;
    uint64_t v110 = (void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    do
    {
      uint64_t v23 = *(void *)(v22 + 8 * a3);
      uint64_t v103 = a3;
      uint64_t v24 = a3;
      while (1)
      {
        uint64_t v112 = v24;
        uint64_t v111 = v24 - 1;
        uint64_t v25 = (int *)(v22 + 8 * (v24 - 1));
        int v26 = v25[1];
        uint64_t v27 = *v25;
        int v28 = v23;
        int v29 = HIDWORD(v23);
        BOOL v30 = v23 == -1 && HIDWORD(v23) == 0;
        BOOL v31 = v30;
        if (v30 || (v23 & 0x80000000) != 0 || v110[1] <= (int)v23) {
          break;
        }
        uint64_t v36 = *v110 + 12 * (int)v23;
        if (HIDWORD(v23) != -1 && *(_DWORD *)(v36 + 8) != HIDWORD(v23)) {
          break;
        }
        uint64_t v38 = *(void *)(*(void *)(v104 + 136) + 8 * *(int *)(*v110 + 12 * (int)v23) + 32);
        uint64_t v39 = *(void *)(v38 + 48);
        uint64_t v40 = *(void *)(v39 + 16);
        if (!v40) {
          break;
        }
        uint64_t v41 = *(__int16 *)(v36 + 4);
        uint64_t v42 = (void *)(v39 + 56);
        while ((ValueMetadata *)*(v42 - 3) != &type metadata for GraphScriptingConfig)
        {
          v42 += 5;
          if (!--v40) {
            goto LABEL_14;
          }
        }
        unint64_t v70 = *(char *)(*(void *)(v38 + 128) + *v42 + 32 * v41);
        if (v70 > 6) {
          uint64_t v57 = 1;
        }
        else {
          uint64_t v57 = qword_1B6E958F0[v70];
        }
        uint64_t v49 = v110;
        if (v27 != -1 || v26) {
          goto LABEL_48;
        }
LABEL_77:
        uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
        uint64_t v76 = updated;
        uint64_t v77 = *(void *)(updated - 8);
        uint64_t v78 = *(void *)(v77 + 64);
        if (v78) {
          uint64_t v78 = *(void *)(v77 + 72);
        }
        if (v27 == -1 && !v26
          || (v27 & 0x80000000) != 0
          || v49[1] <= v27
          || (uint64_t v79 = *v49 + 12 * (int)v27, v80 = *(__int16 *)(v79 + 4), v26 != -1) && *(_DWORD *)(v79 + 8) != v26
          || (uint64_t v81 = *(void *)(*(void *)(v104 + 136) + 8 * *(int *)(*v49 + 12 * (int)v27) + 32),
              uint64_t v82 = *(void *)(v81 + 48),
              (uint64_t v83 = *(void *)(v82 + 16)) == 0))
        {
LABEL_89:
          uint64_t v85 = v108;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v108, 1, 1, updated);
          sub_1B62E0A28(v85, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
          uint64_t inited = type metadata accessor for ParticleInitScript(0);
          uint64_t v87 = inited;
          uint64_t v88 = *(void *)(inited - 8);
          uint64_t v89 = *(void *)(v88 + 64);
          if (v89)
          {
            uint64_t v89 = *(void *)(v88 + 72);
            if (v27 != -1 || v26) {
              goto LABEL_95;
            }
          }
          else if (v27 != -1 || v26)
          {
LABEL_95:
            if ((v27 & 0x80000000) == 0 && v49[1] > v27)
            {
              uint64_t v90 = *v49 + 12 * (int)v27;
              uint64_t v91 = *(__int16 *)(v90 + 4);
              if (v26 == -1 || *(_DWORD *)(v90 + 8) == v26)
              {
                uint64_t v92 = *(void *)(*(void *)(v104 + 136) + 8 * *(int *)(*v49 + 12 * (int)v27) + 32);
                uint64_t v93 = *(void *)(v92 + 48);
                uint64_t v94 = *(void *)(v93 + 16);
                if (v94)
                {
                  BOOL v95 = (void *)(v93 + 56);
                  uint64_t v96 = v112;
                  while (*(v95 - 3) != inited)
                  {
                    v95 += 5;
                    if (!--v94) {
                      goto LABEL_105;
                    }
                  }
                  uint64_t v100 = v105;
                  sub_1B691F668(*(void *)(v92 + 128) + *v95 + v89 * v91, v105, type metadata accessor for ParticleInitScript);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56))(v100, 0, 1, v87);
                  sub_1B62E0A28(v100, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
                  if (v57 >= 1) {
                    goto LABEL_4;
                  }
                  goto LABEL_106;
                }
              }
            }
          }
          uint64_t v96 = v112;
LABEL_105:
          uint64_t v97 = v105;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v105, 1, 1, inited);
          sub_1B62E0A28(v97, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
          if ((v57 & 0x8000000000000000) == 0) {
            goto LABEL_4;
          }
          goto LABEL_106;
        }
        uint64_t v84 = (void *)(v82 + 56);
        while (*(v84 - 3) != updated)
        {
          v84 += 5;
          if (!--v83) {
            goto LABEL_89;
          }
        }
        uint64_t v99 = v108;
        sub_1B691F668(*(void *)(v81 + 128) + *v84 + v78 * v80, v108, type metadata accessor for ParticleUpdateScript);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v99, 0, 1, v76);
        sub_1B62E0A28(v99, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
        uint64_t v96 = v112;
        if (v57 >= 1) {
          goto LABEL_4;
        }
LABEL_106:
        uint64_t v98 = v111;
        uint64_t v23 = *(void *)(v22 + 8 * v96);
        *(void *)(v22 + 8 * v96) = *(void *)(v22 + 8 * v111);
        *(void *)(v22 + 8 * v98) = v23;
        uint64_t v24 = v98;
        if (v98 == v109) {
          goto LABEL_4;
        }
      }
LABEL_14:
      uint64_t v32 = type metadata accessor for ParticleUpdateScript(0);
      uint64_t v33 = v32;
      uint64_t v34 = *(void *)(v32 - 8);
      if (*(void *)(v34 + 64))
      {
        if (v31) {
          goto LABEL_39;
        }
        uint64_t v35 = *(void *)(v34 + 72);
        if (v28 < 0) {
          goto LABEL_39;
        }
      }
      else
      {
        if (v31) {
          goto LABEL_39;
        }
        uint64_t v35 = 0;
        if (v28 < 0) {
          goto LABEL_39;
        }
      }
      if (v110[1] > v28)
      {
        uint64_t v43 = *v110 + 12 * v28;
        uint64_t v44 = *(__int16 *)(v43 + 4);
        if (v29 == -1 || *(_DWORD *)(v43 + 8) == v29)
        {
          uint64_t v45 = *(void *)(*(void *)(v104 + 136) + 8 * *(int *)(*v110 + 12 * v28) + 32);
          uint64_t v46 = *(void *)(v45 + 48);
          uint64_t v47 = *(void *)(v46 + 16);
          if (v47)
          {
            uint64_t v48 = (void *)(v46 + 56);
            uint64_t v49 = v110;
            while (*(v48 - 3) != v32)
            {
              v48 += 5;
              if (!--v47) {
                goto LABEL_39;
              }
            }
            uint64_t v73 = v107;
            sub_1B691F668(*(void *)(v45 + 128) + *v48 + v35 * v44, v107, type metadata accessor for ParticleUpdateScript);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v73, 0, 1, v33);
            sub_1B62E0A28(v73, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
            uint64_t v57 = 1;
            if (v27 != -1) {
              goto LABEL_48;
            }
            goto LABEL_47;
          }
        }
      }
LABEL_39:
      uint64_t v50 = v22;
      uint64_t v51 = v107;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v107, 1, 1, v32);
      sub_1B62E0A28(v51, &qword_1EB97F498, type metadata accessor for ParticleUpdateScript);
      uint64_t v52 = type metadata accessor for ParticleInitScript(0);
      uint64_t v53 = v52;
      uint64_t v54 = *(void *)(v52 - 8);
      if (*(void *)(v54 + 64))
      {
        if (v31) {
          goto LABEL_44;
        }
        uint64_t v55 = *(void *)(v54 + 72);
        uint64_t v22 = v50;
        if (v28 < 0) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v31)
        {
LABEL_44:
          uint64_t v22 = v50;
LABEL_45:
          uint64_t v49 = v110;
          goto LABEL_46;
        }
        uint64_t v55 = 0;
        uint64_t v22 = v50;
        if (v28 < 0) {
          goto LABEL_45;
        }
      }
      uint64_t v49 = v110;
      if (v110[1] > v28)
      {
        uint64_t v64 = *v110 + 12 * v28;
        uint64_t v65 = *(__int16 *)(v64 + 4);
        if (v29 == -1 || *(_DWORD *)(v64 + 8) == v29)
        {
          uint64_t v66 = *(void *)(*(void *)(v104 + 136) + 8 * *(int *)(*v110 + 12 * v28) + 32);
          uint64_t v67 = *(void *)(v66 + 48);
          uint64_t v68 = *(void *)(v67 + 16);
          if (v68)
          {
            uint64_t v69 = (void *)(v67 + 56);
            while (*(v69 - 3) != v52)
            {
              v69 += 5;
              if (!--v68) {
                goto LABEL_46;
              }
            }
            uint64_t v74 = v106;
            sub_1B691F668(*(void *)(v66 + 128) + *v69 + v55 * v65, v106, type metadata accessor for ParticleInitScript);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v74, 0, 1, v53);
            sub_1B62E0A28(v74, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
            uint64_t v57 = 1;
            if (v27 != -1) {
              goto LABEL_48;
            }
            goto LABEL_47;
          }
        }
      }
LABEL_46:
      uint64_t v56 = v106;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v106, 1, 1, v52);
      sub_1B62E0A28(v56, &qword_1EB97F1C0, type metadata accessor for ParticleInitScript);
      uint64_t v57 = 0;
      if (v27 != -1) {
        goto LABEL_48;
      }
LABEL_47:
      if (!v26) {
        goto LABEL_77;
      }
LABEL_48:
      if ((v27 & 0x80000000) != 0) {
        goto LABEL_77;
      }
      if (v49[1] <= v27) {
        goto LABEL_77;
      }
      uint64_t v58 = *v49 + 12 * (int)v27;
      uint64_t v59 = *(__int16 *)(v58 + 4);
      if (v26 != -1 && *(_DWORD *)(v58 + 8) != v26) {
        goto LABEL_77;
      }
      uint64_t v60 = *(void *)(*(void *)(v104 + 136) + 8 * *(int *)(*v49 + 12 * (int)v27) + 32);
      uint64_t v61 = *(void *)(v60 + 48);
      uint64_t v62 = *(void *)(v61 + 16);
      if (!v62) {
        goto LABEL_77;
      }
      uint64_t v63 = (void *)(v61 + 56);
      while ((ValueMetadata *)*(v63 - 3) != &type metadata for GraphScriptingConfig)
      {
        v63 += 5;
        if (!--v62) {
          goto LABEL_77;
        }
      }
      unint64_t v71 = *(char *)(*(void *)(v60 + 128) + *v63 + 32 * v59);
      if (v71 > 6) {
        uint64_t v72 = 1;
      }
      else {
        uint64_t v72 = qword_1B6E958F0[v71];
      }
      uint64_t v96 = v112;
      if (v57 < v72) {
        goto LABEL_106;
      }
LABEL_4:
      a3 = v103 + 1;
    }
    while (v103 + 1 != v102);
  }
}

uint64_t sub_1B62E0A28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B62E0A98(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1B62E0A98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for ParticleUpdateScript(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1EB97F480);
}

uint64_t type metadata accessor for ParticleInitScript(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1EB97F1A8);
}

uint64_t sub_1B62E0B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B68FE944);
}

uint64_t sub_1B62E0B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B68FF31C);
}

void sub_1B62E0B64(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  int v119 = a2;
  sub_1B62E17B4();
  uint64_t v103 = v11;
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v102 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1B6E31098();
  MEMORY[0x1F4188790](v101, v14);
  uint64_t v100 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v118 = a4;
    unint64_t v95 = a5;
    unint64_t v94 = HIDWORD(a5);
    uint64_t v18 = a6 + 16;
    uint64_t v19 = (void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v99 = (void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v96 = a1;
    uint64_t v20 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v110 = 0;
    int v23 = 12;
    unint64_t v98 = 0x80000001B6F3E210;
    *((void *)&v24 + 1) = 2;
    long long v97 = xmmword_1B6E77050;
    uint64_t v109 = a3;
    uint64_t v113 = v17;
    uint64_t v114 = a6 + 16;
    uint64_t v116 = v19;
    uint64_t v111 = v20;
    while (1)
    {
      *(void *)&long long v24 = *(void *)(v20 + 8 * v22);
      uint64_t v25 = v24;
      uint64_t v26 = DWORD1(v24);
      BOOL v27 = v24 == -1 && DWORD1(v24) == 0;
      uint64_t v28 = v27;
      if (v27) {
        goto LABEL_94;
      }
      int v29 = *(void *)(v20 + 8 * v22);
      if ((v24 & 0x80000000) == 0 && v19[1] > (int)v24)
      {
        uint64_t v30 = *v19;
        if (DWORD1(v24) == -1 || *(_DWORD *)(*v19 + (int)v24 * (uint64_t)v23 + 8) == DWORD1(v24))
        {
          uint64_t v32 = v28;
          long long v117 = v24;
          uint64_t v33 = DWORD1(v24);
          uint64_t v34 = (int *)(v30 + (int)v24 * (uint64_t)v23);
          uint64_t v35 = *((__int16 *)v34 + 2);
          uint64_t v36 = *(void **)(*(void *)(a3 + 136) + 8 * *v34 + 32);
          int v37 = *(unsigned __int8 *)(v36[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
          uint64_t v38 = swift_retain();
          if (v37 == 4)
          {
            char v39 = *(unsigned char *)(v38 + 225);
            uint64_t v40 = *(void *)(v38 + 216);
            swift_release();
            BOOL v41 = v40 > 1;
            BOOL v42 = v40 <= 0;
            uint64_t v20 = v111;
            int v43 = !v42;
            if ((v39 & 1) == 0) {
              BOOL v41 = v43;
            }
          }
          else
          {
            swift_release();
            BOOL v41 = 1;
          }
          uint64_t v19 = v116;
          int v23 = 12;
          uint64_t v26 = v33;
          long long v24 = v117;
          uint64_t v28 = v32;
          uint64_t v17 = v113;
          uint64_t v18 = v114;
          uint64_t v44 = v36[24];
          if (v44)
          {
            if ((*(void *)(v44 + 8 * (v35 >> 6)) & (1 << v35)) == 0) {
              BOOL v41 = 0;
            }
            if (v41) {
              *(void *)(v36[26] + 8 * (v35 >> 6)) |= 1 << v35;
            }
          }
        }
      }
      if ((v25 & 0x80000000) != 0 || (uint64_t v45 = v19[1], v45 <= (int)v25))
      {
LABEL_66:
        if ((v25 & 0x80000000) != 0) {
          goto LABEL_94;
        }
        goto LABEL_67;
      }
      if (v26 != -1 && *(_DWORD *)(*v19 + v29 * (uint64_t)v23 + 8) != v26) {
        goto LABEL_56;
      }
      uint64_t v47 = *(void *)(*(void *)(a3 + 80) + 8 * *(__int16 *)(*v19 + v29 * (uint64_t)v23 + 6) + 32);
      uint64_t v48 = *(void *)(*(void *)(v47 + 16) + 32);
      uint64_t v49 = *(void *)(v48 + 16);
      if (!v49)
      {
        uint64_t v18 = v114;
LABEL_56:
        if (v45 <= (int)v25) {
          goto LABEL_94;
        }
        goto LABEL_68;
      }
      unsigned int v112 = v28;
      long long v117 = v24;
      uint64_t v115 = v26;
      swift_retain();
      swift_retain();
      uint64_t v50 = 0;
      int v51 = 0;
      char v52 = 0;
      uint64_t v53 = v48 + 40;
      uint64_t v108 = v47;
      uint64_t v105 = v48 + 40;
      uint64_t v106 = v48;
LABEL_39:
      int v107 = v51;
      for (uint64_t i = v53 + 16 * v50++; ; i += 16)
      {
        uint64_t v55 = *(void *)(i - 8);
        uint64_t v56 = *(void *)(*(void *)i + 8);
        char v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 48))(v55, v56);
        if ((v52 & 1) == 0)
        {
          char v52 = v57;
          if (v119 != 4) {
            goto LABEL_40;
          }
          goto LABEL_46;
        }
        if (v119 != 4) {
          break;
        }
        char v52 = 1;
LABEL_46:
        if (v118)
        {
          uint64_t v58 = swift_retain();
          BOOL v59 = sub_1B62F64C4(v58, v55, v56);
          swift_release();
          if (!v59)
          {
            int v51 = 1;
            uint64_t v53 = v105;
            if (v49 != v50) {
              goto LABEL_39;
            }
            swift_release();
            swift_release();
            goto LABEL_54;
          }
        }
LABEL_40:
        if (v49 == v50)
        {
          swift_release();
          swift_release();
          if (v107)
          {
LABEL_54:
            a3 = v109;
            uint64_t v17 = v113;
            uint64_t v18 = v114;
            uint64_t v19 = v116;
            uint64_t v20 = v111;
            int v23 = 12;
            goto LABEL_3;
          }
          uint64_t v18 = v114;
          uint64_t v19 = v116;
          uint64_t v20 = v111;
          int v23 = 12;
          if (v52) {
            goto LABEL_62;
          }
          a3 = v109;
          uint64_t v17 = v113;
          uint64_t v26 = v115;
LABEL_65:
          long long v24 = v117;
          uint64_t v28 = v112;
          goto LABEL_66;
        }
LABEL_41:
        ++v50;
      }
      if (v49 != v50)
      {
        char v52 = 1;
        goto LABEL_41;
      }
      swift_release();
      swift_release();
      uint64_t v18 = v114;
      uint64_t v19 = v116;
      uint64_t v20 = v111;
      int v23 = 12;
      if (v107)
      {
        a3 = v109;
        uint64_t v17 = v113;
        goto LABEL_3;
      }
LABEL_62:
      uint64_t v26 = v115;
      if (v25 == v95 && v115 == v94)
      {
        a3 = v109;
        uint64_t v17 = v113;
        goto LABEL_65;
      }
      a3 = v109;
      long long v24 = v117;
      uint64_t v28 = v112;
      if (v19[1] > (int)v25)
      {
        uint64_t v88 = *v19;
        if (v115 == -1 || *(_DWORD *)(v88 + 12 * v29 + 8) == v115)
        {
          uint64_t v89 = (int *)(v88 + 12 * v29);
          uint64_t v90 = *(void *)(*(void *)(v109 + 136) + 8 * *v89 + 32);
          __int16 v91 = *((_WORD *)v89 + 2);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v90 + 344));
          uint64_t v92 = v110;
          sub_1B62E15D4(v90, v91, v95, a3, v25 | (v115 << 32));
          uint64_t v110 = v92;
          uint64_t v19 = v116;
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v90 + 344));
          uint64_t v28 = v112;
          long long v24 = v117;
          uint64_t v26 = v115;
          int v23 = 12;
        }
      }
      uint64_t v17 = v113;
      if ((v25 & 0x80000000) != 0)
      {
LABEL_94:
        *(double *)&long long v24 = MEMORY[0x1F4188790](v28, v21);
        *(&v93 - 4) = v18;
        *(&v93 - 3) = v24;
        *(&v93 - 2) = a3;
        if (!v83 && (v25 & 0x80000000) == 0 && v19[1] > (int)v25)
        {
          uint64_t v84 = *(unsigned int *)(*v19 + (int)v25 * (uint64_t)v23 + 8);
          if (v82 == -1 || v84 == v82)
          {
            uint64_t v86 = (unsigned int *)(*v19 + (int)v25 * (uint64_t)v23);
            uint64_t v87 = v110;
            sub_1B62E1584(*(void *)(*(void *)(a3 + 136) + 8 * (int)*v86 + 32), a3, *v86 | ((unint64_t)*((unsigned __int16 *)v86 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v86 + 2) << 32), v84, (void (*)(unsigned char *))sub_1B62C6334, (uint64_t)(&v93 - 6));
            int v23 = 12;
            uint64_t v110 = v87;
            uint64_t v19 = v116;
          }
        }
        goto LABEL_3;
      }
LABEL_67:
      if (v19[1] <= (int)v25) {
        goto LABEL_94;
      }
LABEL_68:
      if (v26 == -1 || *(_DWORD *)(*v19 + v29 * (uint64_t)v23 + 8) == v26)
      {
        int v61 = *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 136) + 8 * *(int *)(*v19 + v29 * (uint64_t)v23) + 32)
                                 + 120);
        if ((v25 & 0x80000000) == 0) {
          goto LABEL_76;
        }
LABEL_85:
        int v69 = v61;
        goto LABEL_93;
      }
      int v61 = 1;
      if ((v25 & 0x80000000) != 0) {
        goto LABEL_85;
      }
LABEL_76:
      uint64_t v62 = *v19 + v29 * (uint64_t)v23;
      if (v26 != -1 && *(_DWORD *)(v62 + 8) != v26) {
        goto LABEL_85;
      }
      uint64_t v64 = *(void *)(*(void *)(a3 + 136) + 8 * *(int *)(*v19 + v29 * (uint64_t)v23) + 32);
      uint64_t v65 = *(void *)(v64 + 48);
      uint64_t v66 = *(void *)(v65 + 16);
      if (!v66) {
        goto LABEL_85;
      }
      uint64_t v67 = *(__int16 *)(v62 + 4);
      uint64_t v68 = (void *)(v65 + 56);
      while ((ValueMetadata *)*(v68 - 3) != &type metadata for SetActive)
      {
        v68 += 5;
        if (!--v66) {
          goto LABEL_85;
        }
      }
      int v69 = *(unsigned __int8 *)(*(void *)(v64 + 128) + *v68 + v67);
      if (v61 != v69)
      {
        int v107 = v69;
        LODWORD(v108) = v61;
        unsigned int v112 = v28;
        long long v117 = v24;
        uint64_t v115 = v26;
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        unint64_t v120 = 0;
        unint64_t v121 = 0xE000000000000000;
        uint64_t v106 = qword_1EB997FD0;
        swift_retain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        unint64_t v120 = 0xD000000000000021;
        unint64_t v121 = v98;
        sub_1B69DE61C(v25 | (v115 << 32));
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        unint64_t v70 = v120;
        unint64_t v71 = v121;
        char v72 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        uint64_t v73 = qword_1EB997FF0;
        uint64_t v74 = qword_1EB985528;
        swift_retain();
        if (v74 != -1) {
          swift_once();
        }
        sub_1B62C5F6C(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v75 = swift_allocObject();
        *(_OWORD *)(v75 + 16) = v97;
        *(void *)(v75 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v75 + 64) = sub_1B678615C();
        *(void *)(v75 + 32) = v70;
        *(void *)(v75 + 40) = v71;
        swift_bridgeObjectRetain();
        sub_1B6E31258();
        swift_bridgeObjectRelease();
        swift_retain();
        unint64_t v104 = v70;
        uint64_t v105 = v73;
        uint64_t v76 = v100;
        sub_1B6E31088();
        uint64_t v77 = v103[12];
        uint64_t v78 = v103[16];
        char v79 = v72;
        uint64_t v80 = (uint64_t)v102;
        uint64_t v81 = &v102[v103[20]];
        (*v99)(v102, v76, v101);
        *(unsigned char *)(v80 + v77) = v79;
        *(void *)(v80 + v78) = 0;
        *(void *)uint64_t v81 = v104;
        *((void *)v81 + 1) = v71;
        swift_bridgeObjectRetain();
        sub_1B6E31368();
        swift_release();
        sub_1B691F6D0(v80, (uint64_t (*)(void))sub_1B62E17B4);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        a3 = v109;
        uint64_t v17 = v113;
        uint64_t v18 = v114;
        uint64_t v19 = v116;
        uint64_t v20 = v111;
        int v23 = 12;
        *((void *)&v24 + 1) = *((void *)&v117 + 1);
        uint64_t v28 = v112;
        int v69 = v107;
        int v61 = v108;
      }
LABEL_93:
      if ((v61 | v69) == 1) {
        goto LABEL_94;
      }
LABEL_3:
      if (++v22 == v17)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B62E1584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *), uint64_t a6)
{
  return sub_1B62C5BD0(a1, a2, a3, a4, a5, a6, &qword_1EB97FAB8, (uint64_t)&protocol descriptor for ParticleComponentRequirement, (void (*)(_OWORD *, unsigned char *))sub_1B62C15C4, &qword_1EB97FAC0);
}

uint64_t sub_1B62E15D4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a3;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for PropagateDirtiness, v17);
  if (LOBYTE(v17[0]) == 1) {
    return sub_1B62E176C(a2, a3);
  }
  uint64_t v16 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for PropagateDirtiness, v17);
  if ((v17[0] & 1) == 0)
  {
    v17[0] = &type metadata for PropagateDirtiness;
    v17[1] = &off_1F0F7A5E0;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  _OWORD v15[2] = &v19;
  sub_1B69ECF2C(v16, (uint64_t)sub_1B68749A0, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B62E176C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for PropagateDirtiness)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    uint64_t v4 = *v5;
  }
LABEL_7:
  *(void *)(*(void *)(v2 + 128) + v4 + 8 * result) = a2;
  return result;
}

void sub_1B62E17B4()
{
  if (!qword_1EB985280)
  {
    sub_1B6E31098();
    type metadata accessor for OSLogType(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB985280);
    }
  }
}

uint64_t sub_1B62E1844(uint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 32);
    uint64_t v8 = *(void *)(*v2 + 16);
    while (*v7 != result)
    {
      v7 += 2;
      if (!--v8) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B62D1B88(0, v6 + 1, 1, (char *)v5);
      uint64_t v5 = result;
    }
    unint64_t v10 = *(void *)(v5 + 16);
    unint64_t v9 = *(void *)(v5 + 24);
    if (v10 >= v9 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B62D1B88(v9 > 1, v10 + 1, 1, (char *)v5);
      uint64_t v5 = result;
    }
    *(void *)(v5 + 16) = v10 + 1;
    unint64_t v11 = v5 + 16 * v10;
    *(void *)(v11 + 32) = v4;
    *(void *)(v11 + 40) = a2;
    *uint64_t v2 = v5;
  }
  return result;
}

void *sub_1B62E190C(void *a1)
{
  sub_1B62B1874(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62B8F14(2000, v9, v10))
  {
    unint64_t v11 = sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v1)
    {
      sub_1B62C14BC(&v21, v24);
      sub_1B62E9EB4(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
      sub_1B62E1F38((unint64_t *)&unk_1EB9802D0, (void (*)(void))sub_1B62B1EA8);
      sub_1B6E33518();
      uint64_t v14 = v25[2];
      if (v14)
      {
        uint64_t v15 = v25 + 4;
        unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if (*v15 != -1 || HIDWORD(*v15) != 0)
          {
            *(void *)&long long v12 = *v15;
            long long v20 = v12;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v25 = v11;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1B62E1D20(0, v11[2] + 1, 1);
              unint64_t v11 = v25;
            }
            unint64_t v17 = v11[2];
            unint64_t v16 = v11[3];
            long long v12 = v20;
            if (v17 >= v16 >> 1)
            {
              sub_1B62E1D20(v16 > 1, v17 + 1, 1);
              long long v12 = v20;
              unint64_t v11 = v25;
            }
            _OWORD v11[2] = v17 + 1;
            v11[v17 + 4] = v12;
          }
          ++v15;
          --v14;
        }
        while (v14);
      }
      else
      {
        unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v21);
    }
  }
  else
  {
    unint64_t v11 = sub_1B62C14BC(a1, a1[3]);
    sub_1B62B1B2C();
    sub_1B6E33A48();
    if (!v1)
    {
      sub_1B62E9EB4(0, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
      uint64_t v21 = 0;
      char v22 = 1;
      uint64_t v23 = 0x7365697469746E65;
      uint64_t v24 = 0xE800000000000000;
      sub_1B62E1F38((unint64_t *)&unk_1EB9802D0, (void (*)(void))sub_1B62B1EA8);
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      unint64_t v11 = v25;
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v11;
}

uint64_t sub_1B62E1D20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B62E1D40(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B62E1D40(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62D9BF8(0, &qword_1EB980C50, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v15 < &v14[8 * v9] && v14 < &v15[8 * v9])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v14, v15, 8 * v9);
  }
  swift_release();
  return (uint64_t)v11;
}

uint64_t sub_1B62E1EA8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6317658(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62E1F38(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62E9EB4(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62E1FC8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D83C0(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62E2058(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B63176F0(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B62E20E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62E22D8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = result;
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v8 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      int64_t v9 = (int *)(v8 + 12 * (int)a3);
      uint64_t v10 = *((__int16 *)v9 + 2);
      uint64_t v11 = *(void *)(*(void *)(v4 + 136) + 8 * *v9 + 32);
      if (*(void *)(v11 + 232) <= v10 && *(void *)(v11 + 240) > v10)
      {
        uint64_t v13 = **(void **)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v14 = *(os_unfair_lock_s **)(v11 + 344);
        swift_retain();
        os_unfair_lock_lock(v14);
        ecs_stack_allocator_push_snapshot(*(void *)(v13 + 32));
        char v15 = *(unsigned char *)(v13 + 112);
        *(unsigned char *)(v13 + 112) = 1;
        unint64_t v16 = sub_1B6345398(*(void *)(v11 + 40), v7, v18);
        if (LOBYTE(v18[0]) == 1)
        {
          v18[0] = v7;
          v18[1] = a2;
          char v19 = 1;
          MEMORY[0x1F4188790](v16, v17);
          swift_retain();
          sub_1B63932BC(a4 & 1, v11, (uint64_t (*)(uint64_t))sub_1B6393444);
          sub_1B6391400((uint64_t)v18);
        }
        else
        {
          swift_retain();
        }
        sub_1B634507C((char *)v11);
        *(unsigned char *)(v13 + 112) = v15;
        swift_release();
        ecs_stack_allocator_pop_snapshot(*(void *)(v13 + 32));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B62E24BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = *(void *)(*(void *)(a2 + 80) + 8 * (SHIDWORD(a3) >> 16) + 32);
  uint64_t v7 = *(void *)(*(void *)(result + 16) + 32);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v43 = v7 + 32;
    uint64_t v9 = a3 << 16 >> 48;
    swift_retain();
    swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = (unint64_t *)&unk_1EB97F9E8;
    uint64_t v31 = a1;
    while (1)
    {
      uint64_t v12 = *(void *)(a1 + 48);
      uint64_t v13 = *(void *)(v12 + 16);
      if (!v13) {
        break;
      }
      uint64_t v14 = v11;
      long long v15 = *(_OWORD *)(v43 + 16 * v10++);
      uint64_t v16 = v15;
      uint64_t v17 = v12 + 56;
      while (*(void *)(v17 - 24) != (void)v15)
      {
        v17 += 40;
        if (!--v13) {
          goto LABEL_33;
        }
      }
      uint64_t v20 = v17 - 8;
      uint64_t v19 = *(void *)(v17 - 8);
      uint64_t v18 = *(void *)(v20 + 8);
      if (v19 <= 1) {
        uint64_t v19 = 1;
      }
      uint64_t v21 = *(void *)(a1 + 128) + v18 + v19 * v9;
      long long v42 = v15;
      char v22 = sub_1B62C12C4(v41);
      sub_1B62C5E18(v21, v16, (uint64_t)v22);
      sub_1B62C1550((uint64_t)v41, (uint64_t)v33);
      sub_1B62C55B0(0, (unint64_t *)&qword_1EB97EAE0);
      sub_1B62C55B0(0, v11);
      if (swift_dynamicCast())
      {
        sub_1B62C15C4(v36, (uint64_t)v38);
        uint64_t v23 = v39;
        uint64_t v24 = v40;
        sub_1B62C14BC(v38, v39);
        unsigned __int8 v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 64))(v23, v24);
        if ((v25 - 65) > 0x7Eu)
        {
          uint64_t v27 = a5;
          if ((v25 & 0x80) != 0)
          {
            if (v25 <= 0xC0u) {
              unint64_t v26 = 0;
            }
            else {
              unint64_t v26 = 1uLL >> -v25;
            }
          }
          else
          {
            unint64_t v26 = 1 << v25;
            if (v25 >= 0x40u) {
              unint64_t v26 = 0;
            }
          }
        }
        else
        {
          unint64_t v26 = 0;
          uint64_t v27 = a5;
        }
        uint64_t v11 = v14;
        uint64_t v28 = *(void *)(v27 + 168);
        if ((v26 & ~v28) != 0) {
          *(void *)(v27 + 168) = v28 | v26;
        }
        sub_1B62C1550((uint64_t)v38, (uint64_t)v36);
        if (swift_dynamicCast())
        {
          a1 = v31;
          if (v35 <= 1 && !v34)
          {
            uint64_t v29 = *(void *)(v27 + 168);
            if ((v29 & 0x20) == 0) {
              *(void *)(v27 + 168) = v29 | 0x20;
            }
            char v30 = v33[20];
            *(unsigned char *)(v27 + 184) = 1;
            *(unsigned char *)(v27 + 216) = v30;
          }
        }
        else
        {
          a1 = v31;
        }
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
      }
      else
      {
        uint64_t v37 = 0;
        memset(v36, 0, sizeof(v36));
        sub_1B62C5E50((uint64_t)v36, &qword_1EB97F9F0, v11);
      }
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v41);
      if (v10 == v8)
      {
        swift_release();
        return swift_release();
      }
    }
LABEL_33:
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62E280C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = result;
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v8 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      uint64_t v9 = (int *)(v8 + 12 * (int)a3);
      uint64_t v10 = *((__int16 *)v9 + 2);
      uint64_t v11 = *(void *)(*(void *)(v4 + 136) + 8 * *v9 + 32);
      if (*(void *)(v11 + 232) <= v10 && *(void *)(v11 + 240) > v10)
      {
        uint64_t v13 = **(void **)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v14 = *(os_unfair_lock_s **)(v11 + 344);
        swift_retain();
        os_unfair_lock_lock(v14);
        ecs_stack_allocator_push_snapshot(*(void *)(v13 + 32));
        if (!sub_1B62FACF8(v7))
        {
          swift_retain();
LABEL_24:
          sub_1B634507C((char *)v11);
          swift_release();
          ecs_stack_allocator_pop_snapshot(*(void *)(v13 + 32));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
          return swift_release();
        }
        v26[0] = v7;
        v26[1] = a2;
        char v27 = 1;
        swift_retain();
        if ((a4 & 1) == 0)
        {
          sub_1B63B2A48(v13 + 104, (uint64_t)v26, v10, 0, v11, v13);
LABEL_23:
          sub_1B6391400((uint64_t)v26);
          goto LABEL_24;
        }
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = *(void *)(v13 + 96);
        uint64_t v16 = v25;
        *(void *)(v13 + 96) = 0x8000000000000000;
        unint64_t v17 = sub_1B69FA754(v11);
        char v19 = v18;
        uint64_t v20 = *(void *)(v16 + 16) + ((v18 & 1) == 0);
        if (*(void *)(v16 + 24) >= v20)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1B6ACB73C();
            uint64_t v16 = v25;
          }
          goto LABEL_20;
        }
        sub_1B6AB53C4(v20, isUniquelyReferenced_nonNull_native);
        uint64_t v16 = v25;
        unint64_t v21 = sub_1B69FA754(v11);
        if ((v19 & 1) == (v22 & 1))
        {
          unint64_t v17 = v21;
LABEL_20:
          *(void *)(v13 + 96) = v16;
          swift_bridgeObjectRelease();
          uint64_t v23 = *(void **)(v13 + 96);
          swift_bridgeObjectRetain();
          if ((v19 & 1) == 0)
          {
            sub_1B636EDF4(&v25);
            sub_1B636A55C(v17, v11, v25, v23);
            swift_retain();
          }
          uint64_t v24 = v23[7];
          swift_bridgeObjectRelease();
          sub_1B63B2A48(v24 + 8 * v17, (uint64_t)v26, v10, 1, v11, v13);
          swift_release();
          goto LABEL_23;
        }
        type metadata accessor for ComponentsDataChunk();
        uint64_t result = sub_1B6E33838();
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1B62E2AB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || a1 > *(void *)(v5 + 24) >> 1)
  {
    uint64_t result = a2();
    uint64_t v5 = result;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B62E2B20(uint64_t a1)
{
  return sub_1B62E2AB4(a1, (uint64_t (*)(void))sub_1B62D1B88);
}

uint64_t sub_1B62E2B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  uint64_t v26 = a2;
  uint64_t v4 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    unint64_t v6 = (int *)(v3 + 8 * v5);
    int v7 = *v6;
    int v8 = v6[1];
    BOOL v9 = v7 == -1 && v8 == 0;
    if (!v9 && (v7 & 0x80000000) == 0 && v4[1] > v7)
    {
      uint64_t v10 = *v4 + 12 * v7;
      if (v8 == -1 || *(_DWORD *)(v10 + 8) == v8)
      {
        uint64_t v12 = *(void *)(*(void *)(v26 + 136) + 8 * *(int *)(*v4 + 12 * v7) + 32);
        uint64_t v13 = *(void *)(v12 + 48);
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14) {
          break;
        }
      }
    }
LABEL_3:
    ++v5;
    uint64_t v25 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
    sub_1B62E2D70((uint64_t)&v23, (unint64_t *)&qword_1EB97EAF0, (unint64_t *)&qword_1EB97EAE0, (uint64_t)&protocol descriptor for EntityComponent);
    if (v5 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v15 = *(__int16 *)(v10 + 4);
  uint64_t v16 = v13 + 56;
  while (*(ValueMetadata **)(v16 - 24) != &type metadata for ParticleSetID)
  {
    v16 += 40;
    if (!--v14) {
      goto LABEL_3;
    }
  }
  uint64_t v20 = v16 - 8;
  uint64_t v19 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v20 + 8);
  if (v19 <= 1) {
    uint64_t v19 = 1;
  }
  uint64_t v21 = *(void *)(v12 + 128) + v18 + v19 * v15;
  *((void *)&v24 + 1) = &type metadata for ParticleSetID;
  uint64_t v25 = &off_1F0F61490;
  char v22 = sub_1B62C12C4((uint64_t *)&v23);
  sub_1B62C5E18(v21, (uint64_t)&type metadata for ParticleSetID, (uint64_t)v22);
  sub_1B62E2D70((uint64_t)&v23, (unint64_t *)&qword_1EB97EAF0, (unint64_t *)&qword_1EB97EAE0, (uint64_t)&protocol descriptor for EntityComponent);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1B62E2D10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62E2D70(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62C5F6C(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B62E2DE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62E2E40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62E2EA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B62E2F00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1B62E2F60(unint64_t a1)
{
  int v2 = a1;
  unint64_t v3 = HIDWORD(a1);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 56));
  uint64_t v4 = *(void **)(v1 + 96);
  uint64_t v54 = (void *)(v1 + 96);
  uint64_t v5 = v4[2];
  uint64_t v28 = v1;
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    int v8 = v4 + 5;
    while (1)
    {
      uint64_t v9 = v7 + 1;
      if (LODWORD(v8[v6]) == v2 && HIDWORD(v8[v6]) == v3) {
        break;
      }
      v6 += 12;
      ++v7;
      if (v5 == v9)
      {
        uint64_t v7 = v4[2];
        goto LABEL_11;
      }
    }
    if (v5 - 1 != v7)
    {
      uint64_t v17 = v6 * 8 + 216;
      uint64_t v5 = v7 + 1;
      do
      {
        if (*(void *)((char *)v4 + v17 - 80) != v2
          || HIDWORD(*(void *)((char *)v4 + v17 - 80)) != v3)
        {
          if (v5 != v7)
          {
            uint64_t v41 = *(void *)((char *)v4 + v17 - 80);
            uint64_t v21 = (uint64_t)&v4[12 * v7 + 4];
            uint64_t v22 = *(void *)(v21 + 8);
            uint64_t v52 = *(void *)(v21 + 16);
            uint64_t v53 = *(void *)v21;
            uint64_t v51 = *(void *)(v21 + 24);
            char v50 = *(unsigned char *)(v21 + 32);
            uint64_t v23 = *(void *)(v21 + 40);
            uint64_t v48 = *(void *)(v21 + 56);
            uint64_t v49 = *(void *)(v21 + 48);
            uint64_t v47 = *(void *)(v21 + 64);
            char v45 = *(unsigned char *)(v21 + 73);
            char v46 = *(unsigned char *)(v21 + 72);
            int v43 = *(_DWORD *)(v21 + 76);
            char v44 = *(unsigned char *)(v21 + 74);
            uint64_t v24 = *(void *)(v21 + 88);
            uint64_t v42 = *(void *)(v21 + 80);
            uint64_t v39 = *(void *)((char *)v4 + v17 - 72);
            uint64_t v40 = *(void *)((char *)v4 + v17 - 88);
            uint64_t v38 = *(void *)((char *)v4 + v17 - 64);
            char v37 = *((unsigned char *)v4 + v17 - 56);
            uint64_t v25 = *(void *)((char *)v4 + v17 - 48);
            uint64_t v35 = *(void *)((char *)v4 + v17 - 32);
            uint64_t v36 = *(void *)((char *)v4 + v17 - 40);
            uint64_t v34 = *(void *)((char *)v4 + v17 - 24);
            char v32 = *((unsigned char *)v4 + v17 - 15);
            char v33 = *((unsigned char *)v4 + v17 - 16);
            int v30 = *(_DWORD *)((char *)v4 + v17 - 12);
            char v31 = *((unsigned char *)v4 + v17 - 14);
            uint64_t v26 = *(void *)((char *)v4 + v17);
            uint64_t v29 = *(void *)((char *)v4 + v17 - 8);
            swift_unknownObjectRetain();
            swift_retain();
            swift_unknownObjectRetain();
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v54 = v4;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v4 = sub_1B62BDEA0(v4);
              *uint64_t v54 = v4;
            }
            uint64_t v18 = &v4[12 * v7];
            v18[4] = v40;
            void v18[5] = v41;
            v18[6] = v39;
            v18[7] = v38;
            *((unsigned char *)v18 + 64) = v37;
            v18[9] = v25;
            v18[10] = v36;
            void v18[11] = v35;
            v18[12] = v34;
            *((unsigned char *)v18 + 104) = v33;
            *((unsigned char *)v18 + 105) = v32;
            *((unsigned char *)v18 + 106) = v31;
            *((_DWORD *)v18 + 27) = v30;
            v18[14] = v29;
            v18[15] = v26;
            swift_release();
            swift_unknownObjectRelease();
            uint64_t v19 = (void *)(*v54 + v17);
            *(v19 - 11) = v53;
            *(v19 - 10) = v22;
            *(v19 - 9) = v52;
            *(v19 - 8) = v51;
            *((unsigned char *)v19 - 56) = v50;
            *(v19 - 6) = v23;
            *(v19 - 5) = v49;
            *(v19 - 4) = v48;
            *(v19 - 3) = v47;
            *((unsigned char *)v19 - 16) = v46;
            *((unsigned char *)v19 - 15) = v45;
            *((unsigned char *)v19 - 14) = v44;
            *((_DWORD *)v19 - 3) = v43;
            *(v19 - 1) = v42;
            *uint64_t v19 = v24;
            swift_release();
            swift_unknownObjectRelease();
            uint64_t v4 = (void *)*v54;
          }
          ++v7;
        }
        ++v5;
        v17 += 96;
      }
      while (v5 != v4[2]);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
LABEL_11:
  sub_1B62F43BC(v7, v5);
  uint64_t v11 = *(char **)(v28 + 144);
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v28 + 144) = v11;
  if ((v12 & 1) == 0)
  {
    uint64_t v11 = sub_1B633F784(0, *((void *)v11 + 2) + 1, 1, v11);
    *(void *)(v28 + 144) = v11;
  }
  unint64_t v14 = *((void *)v11 + 2);
  unint64_t v13 = *((void *)v11 + 3);
  if (v14 >= v13 >> 1) {
    uint64_t v11 = sub_1B633F784(v13 > 1, v14 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v14 + 1;
  uint64_t v15 = &v11[8 * v14];
  *((_DWORD *)v15 + 8) = v2;
  *((_DWORD *)v15 + 9) = v3;
  *(void *)(v28 + 144) = v11;
  *(_WORD *)(v28 + 160) = 257;
  uint64_t v16 = *(os_unfair_lock_s **)(v28 + 56);

  os_unfair_lock_unlock(v16);
}

uint64_t sub_1B62E3324@<X0>(uint64_t a1@<X8>)
{
  int v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleID;
  *(void *)(inited + 40) = &off_1F0F53320;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  unint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B62E3530(uint64_t a1, uint64_t a2)
{
  if (sub_1B62EC0CC((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6F58, a2)
    || sub_1B62EC0CC((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F56120, a2)
    || sub_1B62EC0CC((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0E48, a2)
    || sub_1B62EC0CC((uint64_t)&type metadata for Scale2, (uint64_t)&off_1F0FA0FB0, a2)
    || sub_1B62EC0CC((uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA1118, a2))
  {
    sub_1B62E364C((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, a2);
    return sub_1B62E364C((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1F0F64B60, a2);
  }
  else
  {
    sub_1B62E280C((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, a2, 0);
    return sub_1B62E280C((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1F0F64B60, a2, 0);
  }
}

uint64_t sub_1B62E364C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v6 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      unint64_t v7 = (int *)(v6 + 12 * (int)a3);
      uint64_t v8 = *((__int16 *)v7 + 2);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v7 + 32);
      if (*(void *)(v9 + 232) <= v8 && *(void *)(v9 + 240) > v8)
      {
        uint64_t v11 = **(void **)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v12 = *(os_unfair_lock_s **)(v9 + 344);
        swift_retain();
        os_unfair_lock_lock(v12);
        uint64_t v13 = *(void *)(v11 + 32);
        ecs_stack_allocator_push_snapshot(v13);
        uint64_t v14 = *(void *)(a2 + 8);
        if (sub_1B62FACF8(v5))
        {
LABEL_25:
          ecs_stack_allocator_pop_snapshot(*(void *)(v11 + 32));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 344));
          return swift_release();
        }
        swift_retain();
        unint64_t v15 = ecs_stack_allocator_allocate(v13, 8, 8);
        *unint64_t v15 = v8;
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(v5, v14))
        {
          uint64_t v16 = *(void *)(v9 + 192);
          if (v16)
          {
            uint64_t v17 = *(void *)(v9 + 208);
            *(void *)(v16 + 8 * (*v15 >> 6)) |= 1 << *v15;
            *(void *)(v17 + 8 * (*v15 >> 6)) &= (-1 << *v15) - 1;
          }
          sub_1B6BFB510(*(void *)(v9 + 40), v9, v15, 1, 1);
        }
        int v18 = *(_DWORD *)(v9 + 24);
        swift_retain();
        uint64_t v36 = 0;
        memset(v35, 0, sizeof(v35));
        uint64_t v34 = 0;
        memset(v33, 0, sizeof(v33));
        signed int v19 = sub_1B637F628(v18, v5, a2, 0, 0, (uint64_t)v35, (uint64_t)v33);
        swift_release();
        sub_1B62C5E50((uint64_t)v33, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840);
        sub_1B62C5E50((uint64_t)v35, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840);
        if ((uint64_t)(*(void *)(v9 + 240) - *(void *)(v9 + 232)) >= 2)
        {
          int v20 = *(unsigned __int8 *)(v9 + 120);
          uint64_t v21 = *(unsigned int *)(v9 + 28);
          LOBYTE(v35[0]) = *(unsigned char *)(v9 + 32);
          sub_1B6BF2AEC(v15, 1, 1, v19, v20, v21 | ((unint64_t)LOBYTE(v35[0]) << 32), 0, 0);
LABEL_24:
          swift_release();
          goto LABEL_25;
        }
        char v22 = *(void **)(*(void *)(*(void *)(v9 + 16) + 80) + 8 * v19 + 32);
        uint64_t v23 = *(void **)(v9 + 40);
        uint64_t v24 = v22[4];
        uint64_t v25 = v22[8];
        uint64_t v26 = v23[4];
        uint64_t v27 = v23[8];
        swift_retain();
        if (v25 == v27 && sub_1B6D663B8(v22[5], v23[5]))
        {
          BOOL v28 = sub_1B6D663B8(v24, v26);
          swift_release();
          if (v28)
          {
            sub_1B66603E4(v19);
            goto LABEL_24;
          }
        }
        else
        {
          swift_release();
        }
        uint64_t v29 = *(void *)(v9 + 232);
        uint64_t v30 = *(void *)(v9 + 240);
        char v31 = *(unsigned char *)(v9 + 120);
        uint64_t v32 = *(unsigned int *)(v9 + 28);
        LOBYTE(v35[0]) = *(unsigned char *)(v9 + 32);
        sub_1B628EEF4(v29, v30, v19, v31, v32 | ((unint64_t)LOBYTE(v35[0]) << 32));
        goto LABEL_24;
      }
    }
  }
  return result;
}

uint64_t sub_1B62E39E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v309 = a3;
  uint64_t v382 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = *(void *)(a6 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v293 = (char *)&v258 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  long long v287 = (char *)&v258 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v308 = (char *)&v258 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19, v21);
  v307 = (char *)&v258 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22, v24);
  uint64_t v313 = (uint64_t)&v258 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25, v27);
  uint64_t v290 = (uint64_t)&v258 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28, v30);
  uint64_t v310 = (char *)&v258 - v32;
  uint64_t v34 = MEMORY[0x1F4188790](v31, v33);
  uint64_t v312 = (uint64_t)&v258 - v35;
  uint64_t v37 = MEMORY[0x1F4188790](v34, v36);
  uint64_t v39 = (char *)&v258 - v38;
  MEMORY[0x1F4188790](v37, v40);
  uint64_t v42 = (char *)&v258 - v41;
  uint64_t v314 = v43;
  uint64_t v44 = *(void *)(*v43 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  uint64_t v301 = *v43;
  swift_retain();
  uint64_t v303 = v44;
  if (v44)
  {
    uint64_t v283 = a4;
    uint64_t v284 = a5;
    uint64_t v302 = a1;
    uint64_t v45 = *(void *)(a1 + 16);
    char v46 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
    uint64_t v315 = v12 + 16;
    uint64_t v316 = v46;
    ((void (*)(char *, uint64_t, uint64_t))v46)(v42, v317, a6);
    uint64_t v47 = v12;
    if (v45)
    {
      uint64_t v48 = v303;
      swift_retain();
      uint64_t v298 = v45;
    }
    else
    {
      char v50 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 72);
      uint64_t v48 = v303;
      swift_retain();
      uint64_t v298 = v50(a6, a7);
    }
    uint64_t v265 = v47;
    uint64_t v51 = *(void (**)(char *, uint64_t))(v47 + 8);
    swift_retain();
    uint64_t v300 = a6;
    uint64_t v294 = v51;
    uint64_t v295 = v47 + 8;
    v51(v42, a6);
    uint64_t v52 = (unsigned __int8 *)(v48 + 536);
    uint64_t v53 = v298;
    if (*(unsigned char *)(v48 + 537) == 1)
    {
      __int16 v54 = *(_WORD *)(v298 + 80);
      if ((v54 & 2) == 0) {
        *(_WORD *)(v298 + 80) = v54 | 2;
      }
    }
    uint64_t v55 = (unsigned char *)(v48 + 537);
    uint64_t v56 = v302;
    swift_retain();
    swift_release();
    uint64_t v57 = v53;
    *(void *)(v56 + 16) = v53;
    char v58 = *(unsigned char *)(v301 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare);
    uint64_t v60 = v316;
    uint64_t v59 = v317;
    uint64_t v280 = v52 + 1;
    if (v58 & 1) != 0 || (*v55 & 1) != 0 || (*(unsigned char *)(v303 + 539)) {
      int v61 = 1;
    }
    else {
      int v61 = *(unsigned __int8 *)(v303 + 540);
    }
    int v282 = v61;
    uint64_t v62 = v57;
    unint64_t v291 = v314[1];
    uint64_t v311 = sub_1B62EC0CC((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67798, v291);
    LODWORD(v276) = *v52;
    if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(a7 + 64))(v300, a7)) {
      uint64_t v281 = 1;
    }
    else {
      uint64_t v281 = sub_1B62FFC70();
    }
    double v63 = sub_1B6342918((uint64_t)v368);
    v60(v39, v59, v300, v63);
    sub_1B6303984();
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v367 = 0;
      memset(v366, 0, sizeof(v366));
    }
    type metadata accessor for RenderPipelineFactory();
    swift_allocObject();
    sub_1B62FFCAC(0);
    uint64_t v64 = sub_1B6335620(MEMORY[0x1E4FBC860]);
    v353[0] = 2;
    *(void *)((char *)&v355[1] + 4) = 0;
    *(void *)((char *)v355 + 4) = 0;
    LODWORD(v355[0]) = -1;
    HIDWORD(v355[2]) = 0;
    __int16 v359 = 3;
    uint64_t v360 = 7;
    char v361 = 0;
    uint64_t v304 = v64;
    uint64_t v364 = v64;
    uint64_t v299 = v65;
    uint64_t v365 = v65;
    swift_retain();
    swift_release();
    uint64_t v354 = v62;
    uint64_t v66 = v317;
    uint64_t v67 = v300;
    uint64_t v286 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 32);
    unint64_t v288 = v286(v300, a7);
    int v356 = v288;
    uint64_t v285 = HIDWORD(v288) & 1;
    char v357 = BYTE4(v288) & 1;
    uint64_t v306 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 48))(v67, a7);
    uint64_t v363 = v306;
    uint64_t v289 = *(void *)(a7 + 40);
    float v68 = ((float (*)(uint64_t, uint64_t))v289)(v67, a7);
    float v358 = v68;
    uint64_t v305 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 56))(v67, a7);
    uint64_t v362 = v305;
    ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v312, v66, v67);
    uint64_t v69 = v67;
    LODWORD(v297) = swift_dynamicCast();
    if (v297)
    {
      HIBYTE(v359) = 1;
      uint64_t v360 = 7;
      char v361 = 1;
    }
    uint64_t v70 = v317;
    unint64_t v296 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 24))(v67, a7);
    uint64_t v292 = HIDWORD(v296);
    sub_1B6303904((uint64_t)v366, (uint64_t)&v338);
    uint64_t v71 = v301;
    uint64_t v298 = v62;
    if (!*((void *)&v339 + 1))
    {
      sub_1B62FA294((uint64_t)&v338);
      int v83 = (void (*)(void))v316;
      ((void (*)(uint64_t, uint64_t, uint64_t))v316)(v290, v70, v67);
      uint64_t v312 = swift_dynamicCast();
      LODWORD(v280) = 0;
      uint64_t v84 = 0;
      uint64_t v289 = 0;
      uint64_t v290 = 0;
      unsigned int v278 = 0;
      id v279 = 0;
      uint64_t v277 = 0;
      int v85 = 1;
      uint64_t v86 = v302;
      uint64_t v87 = v71;
      goto LABEL_42;
    }
    sub_1B62C15C4(&v338, (uint64_t)v350);
    uint64_t v72 = v351;
    uint64_t v73 = v352;
    sub_1B62C14BC(v350, v351);
    unint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 32))(v72, v73);
    id v75 = sub_1B6359678(v74);
    unsigned int v77 = v76;
    uint64_t v78 = v351;
    uint64_t v79 = v352;
    sub_1B62C14BC(v350, v351);
    uint64_t v312 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 56))(v78, v79);
    uint64_t v80 = v351;
    uint64_t v81 = v352;
    sub_1B62C14BC(v350, v351);
    char v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 80))(v80, v81);
    sub_1B62C1550((uint64_t)v350, (uint64_t)&v338);
    id v279 = v75;
    if (v82)
    {
      uint64_t v290 = 0;
    }
    else
    {
      uint64_t v88 = *((void *)&v339 + 1);
      uint64_t v89 = v340;
      sub_1B62C14BC(&v338, *((uint64_t *)&v339 + 1));
      uint64_t v290 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 56))(v88, v89);
    }
    uint64_t v90 = v286;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v338);
    uint64_t v91 = v317;
    uint64_t v69 = v300;
    uint64_t v92 = v90(v300, a7);
    sub_1B62C1550((uint64_t)v350, (uint64_t)v335);
    if ((v92 & 0x1FFFFFFFFLL) == 0x100000000)
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v335);
      uint64_t v93 = v310;
      ((void (*)(char *, uint64_t, uint64_t))v316)(v310, v91, v69);
      uint64_t v94 = v301;
    }
    else
    {
      uint64_t v95 = v336;
      uint64_t v96 = v337;
      sub_1B62C14BC(v335, v336);
      uint64_t v97 = v95;
      uint64_t v69 = v300;
      float v98 = (*(float (**)(uint64_t, uint64_t))(v96 + 224))(v97, v96);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v335);
      uint64_t v93 = v310;
      ((void (*)(char *, uint64_t, uint64_t))v316)(v310, v91, v69);
      uint64_t v94 = v301;
      if (v98 > 0.0)
      {
        BOOL v99 = sub_1B6968EB8(v69, a7);
        v294(v93, v69);
        if (v99)
        {
          uint64_t v100 = (float (*)(uint64_t, uint64_t))v289;
          if (*v280) {
            int v101 = 1;
          }
          else {
            int v101 = *(unsigned __int8 *)(v303 + 539);
          }
          LODWORD(v280) = v101 ^ 1;
          goto LABEL_35;
        }
LABEL_34:
        LODWORD(v280) = 0;
        uint64_t v100 = (float (*)(uint64_t, uint64_t))v289;
LABEL_35:
        float v102 = v100(v69, a7);
        sub_1B62C1550((uint64_t)v350, (uint64_t)&v327);
        if (v102 >= 0.0)
        {
          uint64_t v289 = 1;
        }
        else
        {
          uint64_t v103 = *((void *)&v328 + 1);
          uint64_t v104 = v329;
          sub_1B62C14BC(&v327, *((uint64_t *)&v328 + 1));
          uint64_t v289 = sub_1B63039DC(v103, v104);
        }
        uint64_t v86 = v302;
        uint64_t v87 = v94;
        int v85 = v77 & 1;
        unsigned int v278 = (v77 >> 8) & 1;
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v327);
        uint64_t v105 = v351;
        uint64_t v106 = v352;
        sub_1B62C14BC(v350, v351);
        uint64_t v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 32))(v105, v106);
        if (sub_1B62EC0CC((uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1F0F9D488, v107))
        {
          uint64_t v108 = v351;
          uint64_t v109 = v352;
          sub_1B62C14BC(v350, v351);
          uint64_t v277 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 176))(v108, v109);
          uint64_t v110 = v351;
          uint64_t v111 = v352;
          sub_1B62C14BC(v350, v351);
          uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v111 + 200))(v110, v111);
        }
        else
        {
          uint64_t v84 = 0;
          uint64_t v277 = 255;
        }
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v350);
        int v83 = (void (*)(void))v316;
LABEL_42:
        uint64_t v112 = v313;
        v83();
        if (swift_dynamicCast())
        {
          unsigned int v113 = BYTE9(v344);
          unint64_t v114 = v346;
          uint64_t v273 = BYTE12(v342);
          uint64_t v274 = v344;
          if (BYTE1(v347) == 1)
          {
            uint64_t v276 = BYTE2(v347);
            uint64_t v311 = v347 | v311;
            if ((v312 & 1) == 0)
            {
LABEL_45:
              unsigned int v113 = 0;
              goto LABEL_54;
            }
          }
          else
          {
            uint64_t v311 = v347 | v311;
            uint64_t v276 = 5;
            if ((v312 & 1) == 0) {
              goto LABEL_45;
            }
          }
          uint64_t v119 = sub_1B62EBE70(*((unint64_t *)&v345 + 1), v335);
          swift_unknownObjectRelease();
          if (v119)
          {
            uint64_t v120 = sub_1B62EBE70(v114, v335);
            swift_unknownObjectRelease();
            BOOL v272 = v120 != 0;
            uint64_t v290 = v272 | v290;
LABEL_55:
            v294((char *)v313, v69);
            BOOL v121 = 0;
            unsigned int v117 = v296;
            if (v296 == -1)
            {
              uint64_t v118 = v292;
              if (!v292)
              {
                HIDWORD(v267) = v113;
                int v268 = v85;
                uint64_t v270 = v84;
                sub_1B62EAE14((uint64_t)v368, (uint64_t)v350, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
                unint64_t v263 = 0;
                unint64_t v296 = 0;
                uint64_t v266 = 0;
                LODWORD(v267) = 0;
                BOOL v269 = 0;
                BOOL v275 = 0;
                uint64_t v310 = 0;
                LODWORD(v286) = 0;
                goto LABEL_64;
              }
              BOOL v123 = 0;
              BOOL v275 = 0;
              uint64_t v310 = 0;
              LODWORD(v286) = 0;
LABEL_77:
              uint64_t v124 = v117 | (unint64_t)(v118 << 32);
              if ((sub_1B631EA84(v124) & 1) == 0) {
                uint64_t v124 = sub_1B6D28A5C();
              }
              sub_1B695E73C(v124, (uint64_t)&v369);
              uint64_t v313 = v370;
              if (v370)
              {
                int v268 = v85;
                BOOL v269 = v123;
                unint64_t v267 = __PAIR64__(v113, v121);
                uint64_t v125 = v369;
                uint64_t v126 = v372;
                uint64_t v292 = v371;
                unint64_t v127 = v374;
                unint64_t v296 = v373;
                unint64_t v128 = v375;
                uint64_t v270 = v84;
                uint64_t v271 = v376;
                uint64_t v260 = v377;
                uint64_t v129 = v380;
                uint64_t v305 = v378;
                uint64_t v306 = v379;
                uint64_t v130 = v381;
                sub_1B695DEC8(v124, (uint64_t)&v327);
                sub_1B62EAE14((uint64_t)&v327, (uint64_t)v335, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
                sub_1B62EAE14((uint64_t)v335, (uint64_t)&v338, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
                if (sub_1B6388C10((uint64_t *)&v338) != 1)
                {
                  unint64_t v258 = v128;
                  uint64_t v131 = HIDWORD(v128);
                  uint64_t v285 = HIDWORD(v127) & 1;
                  unint64_t v132 = v292;
                  uint64_t v312 = v125 == 0;
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v259 = v130;
                  uint64_t v133 = v129;
                  uint64_t v134 = v313;
                  swift_retain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v135 = v298;
                  swift_release();
                  unint64_t v263 = HIDWORD(v132);
                  uint64_t v264 = v125;
                  v353[0] = v125;
                  uint64_t v354 = v134;
                  v355[0] = v132;
                  uint64_t v266 = v126;
                  v355[1] = v126;
                  v355[2] = v296;
                  unint64_t v288 = v127;
                  int v356 = v127;
                  char v357 = v285;
                  float v136 = *(float *)&v258;
                  float v358 = *(float *)&v258;
                  LOBYTE(v359) = v131;
                  uint64_t v261 = (v258 >> 40) & 1;
                  uint64_t v262 = v131;
                  HIBYTE(v359) = BYTE5(v258) & 1;
                  uint64_t v360 = v271;
                  LODWORD(v297) = v260 & 1;
                  char v361 = v260 & 1;
                  uint64_t v362 = v305;
                  uint64_t v363 = v306;
                  uint64_t v304 = v133;
                  uint64_t v364 = v133;
                  uint64_t v137 = v259;
                  uint64_t v365 = v259;
                  uint64_t v138 = *(void *)(v135 + 88);
                  uint64_t v139 = *(void *)(v135 + 96);
                  uint64_t v141 = *(void *)(v134 + 88);
                  uint64_t v140 = *(void *)(v134 + 96);
                  unint64_t v142 = (void *)swift_allocObject();
                  v142[2] = v141;
                  v142[3] = v140;
                  v142[4] = v138;
                  v142[5] = v139;
                  *(void *)(v135 + 88) = sub_1B696C9D8;
                  *(void *)(v135 + 96) = v142;
                  swift_retain_n();
                  swift_retain_n();
                  sub_1B696CB34(v335, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B696C9E4);
                  swift_release();
                  __int16 v143 = *(_WORD *)(v134 + 80);
                  float v144 = v136;
                  if ((v143 & 0x20) != 0)
                  {
                    __int16 v145 = *(_WORD *)(v135 + 80);
                    if ((v145 & 0x20) == 0)
                    {
                      *(_WORD *)(v298 + 80) = v145 | 0x20;
                      __int16 v143 = *(_WORD *)(v313 + 80);
                    }
                  }
                  float v68 = v136;
                  sub_1B696CB34(v335, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B69164DC);
                  swift_release();
                  swift_release();
                  uint64_t v146 = v264;
                  if ((v143 & 0x10) != 0)
                  {
                    __int16 v147 = *(_WORD *)(v298 + 80);
                    if ((v147 & 0x10) == 0) {
                      *(_WORD *)(v298 + 80) = v147 | 0x10;
                    }
                  }
                  uint64_t v148 = v304;
                  sub_1B696C938(v146, v313);
                  uint64_t v289 = v289 | (v144 >= 0.0);
                  sub_1B62EAE14((uint64_t)v335, (uint64_t)v350, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
                  uint64_t v299 = v137;
                  uint64_t v304 = v148;
                  uint64_t v87 = v301;
                  uint64_t v86 = v302;
                  uint64_t v122 = v298;
                  uint64_t v69 = v300;
                  goto LABEL_91;
                }
                swift_release();
                sub_1B696C938(v125, v313);
                swift_release();
              }
              else
              {
                swift_release();
                swift_release();
              }
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              return sub_1B62FA294((uint64_t)v366);
            }
            BOOL v123 = 0;
            BOOL v275 = 0;
            uint64_t v310 = 0;
            LODWORD(v286) = 0;
LABEL_74:
            uint64_t v118 = v292;
            goto LABEL_77;
          }
LABEL_54:
          BOOL v272 = 0;
          goto LABEL_55;
        }
        if (swift_dynamicCast())
        {
          v115.n128_u32[0] = HIDWORD(v339);
          BOOL v116 = *((float *)&v339 + 3) > 0.0;
          ((void (*)(uint64_t, uint64_t, __n128))v294)(v112, v69, v115);
          unsigned int v113 = 0;
          unsigned int v117 = v296;
          BOOL v275 = v116;
          if (v296 == -1)
          {
            uint64_t v118 = v292;
            if (!v292)
            {
              int v268 = v85;
              uint64_t v270 = v84;
              sub_1B62EAE14((uint64_t)v368, (uint64_t)v350, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
              unint64_t v263 = 0;
              unint64_t v296 = 0;
              uint64_t v266 = 0;
              unint64_t v267 = 0;
              BOOL v269 = 0;
LABEL_50:
              uint64_t v310 = 0;
              LODWORD(v286) = 0;
              BOOL v272 = 0;
              uint64_t v273 = 0;
              uint64_t v274 = 0;
              uint64_t v276 = 5;
LABEL_64:
              uint64_t v264 = 2;
              uint64_t v292 = 0xFFFFFFFFLL;
              uint64_t v262 = 3;
              uint64_t v271 = 7;
              uint64_t v261 = v297;
              uint64_t v122 = v298;
              uint64_t v313 = v298;
LABEL_91:
              uint64_t v149 = sub_1B6358730(v314[4], v87);
              uint64_t v314 = 0;
              if (v149) {
                uint64_t v150 = v149;
              }
              else {
                uint64_t v150 = MEMORY[0x1E4FBC860];
              }
              __int16 v151 = *(_WORD *)(v122 + 80);
              uint64_t v153 = (void (*)(char *, uint64_t, uint64_t))v316;
              uint64_t v152 = v317;
              ((void (*)(char *, uint64_t, uint64_t))v316)(v307, v317, v69);
              int v154 = swift_dynamicCast();
              int v155 = v308;
              v153(v308, v152, v69);
              if (v154)
              {
                v294(v155, v69);
                uint64_t v156 = 1;
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v265 + 32))(v287, v155, v69);
                unsigned int v157 = swift_dynamicCast();
                if ((v151 & 0x30) == 0x10) {
                  uint64_t v156 = 1;
                }
                else {
                  uint64_t v156 = v157;
                }
              }
              uint64_t v158 = MEMORY[0x1E4FBC860];
              int v159 = v288;
              char v160 = v270;
              uint64_t v161 = v266;
              if (v266)
              {
                uint64_t ObjectType = swift_getObjectType();
                LOBYTE(v369) = v264;
                uint64_t v370 = v313;
                unint64_t v371 = __PAIR64__(v263, v292);
                uint64_t v372 = v161;
                unint64_t v373 = v296;
                LODWORD(v374) = v159;
                BYTE4(v374) = v285;
                *(float *)&unint64_t v375 = v68;
                BYTE4(v375) = v262;
                BYTE5(v375) = v261;
                uint64_t v376 = v271;
                LOBYTE(v377) = v297;
                uint64_t v378 = v305;
                uint64_t v379 = v306;
                uint64_t v380 = v304;
                uint64_t v381 = v299;
                uint64_t v163 = (*(uint64_t (**)(uint64_t *, uint64_t))(v296 + 32))(&v369, ObjectType);
              }
              else
              {
                uint64_t v163 = MEMORY[0x1E4FBC860];
              }
              uint64_t v164 = v317;
              uint64_t v165 = v283;
              *(void *)&long long v338 = v163;
              sub_1B630C530(v150);
              uint64_t v166 = v338;
              sub_1B62EAEE0(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
              uint64_t v167 = swift_allocObject();
              uint64_t v168 = v311 & 1;
              *(_OWORD *)(v167 + 16) = xmmword_1B6E8C6E0;
              *(_OWORD *)(v167 + 32) = xmmword_1B6E96210;
              *(unsigned char *)(v167 + 48) = 0;
              *(void *)(v167 + 64) = v168;
              *(_OWORD *)(v167 + 72) = 0u;
              *(_OWORD *)(v167 + 88) = 0u;
              *(_OWORD *)(v167 + 104) = 0u;
              *(void *)(v167 + 120) = 0;
              *(unsigned char *)(v167 + 128) = 13;
              id v169 = v279;
              LODWORD(v170) = v268 ^ 1;
              if (v279 == (id)2) {
                uint64_t v171 = v170;
              }
              else {
                uint64_t v171 = 0;
              }
              *(_OWORD *)(v167 + 144) = xmmword_1B6E96220;
              *(unsigned char *)(v167 + 160) = 0;
              *(void *)(v167 + 176) = v171;
              *(_OWORD *)(v167 + 184) = 0uLL;
              *(_OWORD *)(v167 + 200) = 0uLL;
              *(_OWORD *)(v167 + 216) = 0uLL;
              *(void *)(v167 + 232) = 0;
              *(unsigned char *)(v167 + 240) = 13;
              if (v169 == (id)7) {
                uint64_t v172 = v170;
              }
              else {
                uint64_t v172 = 0;
              }
              *(_OWORD *)(v167 + 256) = xmmword_1B6E96230;
              *(unsigned char *)(v167 + 272) = 0;
              *(void *)(v167 + 288) = v172;
              *(void *)(v167 + 344) = 0;
              *(_OWORD *)(v167 + 312) = 0uLL;
              *(_OWORD *)(v167 + 328) = 0uLL;
              *(_OWORD *)(v167 + 296) = 0uLL;
              *(unsigned char *)(v167 + 352) = 13;
              if (v169 == (id)3) {
                uint64_t v173 = v170;
              }
              else {
                uint64_t v173 = 0;
              }
              *(_OWORD *)(v167 + 368) = xmmword_1B6E96240;
              *(unsigned char *)(v167 + 384) = 0;
              *(void *)(v167 + 400) = v173;
              *(_OWORD *)(v167 + 408) = 0uLL;
              *(_OWORD *)(v167 + 424) = 0uLL;
              *(_OWORD *)(v167 + 440) = 0uLL;
              *(void *)(v167 + 456) = 0;
              *(unsigned char *)(v167 + 464) = 13;
              if (v169 == (id)5) {
                uint64_t v170 = v170;
              }
              else {
                uint64_t v170 = 0;
              }
              *(_OWORD *)(v167 + 480) = xmmword_1B6E96250;
              *(unsigned char *)(v167 + 496) = 0;
              *(void *)(v167 + 512) = v170;
              *(void *)(v167 + 568) = 0;
              *(_OWORD *)(v167 + 536) = 0uLL;
              *(_OWORD *)(v167 + 552) = 0uLL;
              *(_OWORD *)(v167 + 520) = 0uLL;
              *(unsigned char *)(v167 + 576) = 13;
              uint64_t v174 = v278;
              *(_OWORD *)(v167 + 592) = xmmword_1B6E96260;
              *(unsigned char *)(v167 + 608) = 0;
              *(void *)(v167 + 624) = v174;
              *(_OWORD *)(v167 + 632) = 0uLL;
              *(_OWORD *)(v167 + 648) = 0uLL;
              *(_OWORD *)(v167 + 664) = 0uLL;
              *(void *)(v167 + 680) = 0;
              *(unsigned char *)(v167 + 688) = 13;
              uint64_t v175 = v312 & 1;
              *(_OWORD *)(v167 + 704) = xmmword_1B6E96270;
              *(unsigned char *)(v167 + 720) = 0;
              *(void *)(v167 + 736) = v175;
              *(_OWORD *)(v167 + 744) = 0uLL;
              *(_OWORD *)(v167 + 760) = 0uLL;
              *(_OWORD *)(v167 + 776) = 0uLL;
              *(void *)(v167 + 792) = 0;
              *(unsigned char *)(v167 + 800) = 13;
              uint64_t v176 = v290 & 1;
              *(_OWORD *)(v167 + 816) = xmmword_1B6E96280;
              *(unsigned char *)(v167 + 832) = 0;
              *(void *)(v167 + 848) = v176;
              *(void *)(v167 + 904) = 0;
              *(_OWORD *)(v167 + 872) = 0uLL;
              *(_OWORD *)(v167 + 888) = 0uLL;
              *(_OWORD *)(v167 + 856) = 0uLL;
              *(unsigned char *)(v167 + 912) = 13;
              uint64_t v177 = (char)v277;
              *(_OWORD *)(v167 + 928) = xmmword_1B6E96290;
              *(unsigned char *)(v167 + 944) = 0;
              *(void *)(v167 + 960) = v177;
              *(void *)(v167 + 1016) = 0;
              *(_OWORD *)(v167 + 984) = 0uLL;
              *(_OWORD *)(v167 + 1000) = 0uLL;
              *(_OWORD *)(v167 + 968) = 0uLL;
              *(unsigned char *)(v167 + 1024) = 14;
              *(_OWORD *)(v167 + 1040) = xmmword_1B6E962A0;
              *(unsigned char *)(v167 + 1056) = 0;
              *(void *)(v167 + 1072) = v160 & 1;
              *(void *)(v167 + 1128) = 0;
              *(_OWORD *)(v167 + 1096) = 0uLL;
              *(_OWORD *)(v167 + 1112) = 0uLL;
              *(_OWORD *)(v167 + 1080) = 0uLL;
              *(unsigned char *)(v167 + 1136) = 13;
              unsigned int v178 = v280;
              *(_OWORD *)(v167 + 1152) = xmmword_1B6E962B0;
              *(unsigned char *)(v167 + 1168) = 0;
              *(void *)(v167 + 1184) = v178;
              *(void *)(v167 + 1240) = 0;
              *(_OWORD *)(v167 + 1208) = 0uLL;
              *(_OWORD *)(v167 + 1224) = 0uLL;
              *(_OWORD *)(v167 + 1192) = 0uLL;
              *(unsigned char *)(v167 + 1248) = 13;
              uint64_t v179 = v289 & 1;
              *(_OWORD *)(v167 + 1264) = xmmword_1B6E962C0;
              *(unsigned char *)(v167 + 1280) = 0;
              *(void *)(v167 + 1296) = v179;
              *(void *)(v167 + 1352) = 0;
              *(_OWORD *)(v167 + 1320) = 0uLL;
              *(_OWORD *)(v167 + 1336) = 0uLL;
              *(_OWORD *)(v167 + 1304) = 0uLL;
              *(unsigned char *)(v167 + 1360) = 13;
              uint64_t v180 = v281 & 1;
              *(_OWORD *)(v167 + 1376) = xmmword_1B6E962D0;
              *(unsigned char *)(v167 + 1392) = 0;
              *(void *)(v167 + 1408) = v180;
              *(void *)(v167 + 1464) = 0;
              *(_OWORD *)(v167 + 1432) = 0uLL;
              *(_OWORD *)(v167 + 1448) = 0uLL;
              *(_OWORD *)(v167 + 1416) = 0uLL;
              *(unsigned char *)(v167 + 1472) = 13;
              BOOL v181 = v272;
              *(_OWORD *)(v167 + 1488) = xmmword_1B6E962E0;
              *(unsigned char *)(v167 + 1504) = 0;
              *(void *)(v167 + 1520) = v181;
              *(void *)(v167 + 1576) = 0;
              *(_OWORD *)(v167 + 1544) = 0uLL;
              *(_OWORD *)(v167 + 1560) = 0uLL;
              *(_OWORD *)(v167 + 1528) = 0uLL;
              *(unsigned char *)(v167 + 1584) = 13;
              uint64_t v182 = (char)v276;
              *(_OWORD *)(v167 + 1600) = xmmword_1B6E962F0;
              *(unsigned char *)(v167 + 1616) = 0;
              *(void *)(v167 + 1632) = v182;
              *(void *)(v167 + 1688) = 0;
              *(_OWORD *)(v167 + 1656) = 0uLL;
              *(_OWORD *)(v167 + 1672) = 0uLL;
              *(_OWORD *)(v167 + 1640) = 0uLL;
              *(unsigned char *)(v167 + 1696) = 14;
              uint64_t v183 = (char)v273;
              *(_OWORD *)(v167 + 1712) = xmmword_1B6E96300;
              *(unsigned char *)(v167 + 1728) = 0;
              *(void *)(v167 + 1744) = v183;
              *(void *)(v167 + 1800) = 0;
              *(_OWORD *)(v167 + 1768) = 0uLL;
              *(_OWORD *)(v167 + 1784) = 0uLL;
              *(_OWORD *)(v167 + 1752) = 0uLL;
              *(unsigned char *)(v167 + 1808) = 14;
              uint64_t v184 = (char)v274;
              *(_OWORD *)(v167 + 1824) = xmmword_1B6E96310;
              *(unsigned char *)(v167 + 1840) = 0;
              *(void *)(v167 + 1856) = v184;
              *(void *)(v167 + 1912) = 0;
              *(_OWORD *)(v167 + 1880) = 0uLL;
              *(_OWORD *)(v167 + 1896) = 0uLL;
              *(_OWORD *)(v167 + 1864) = 0uLL;
              *(unsigned char *)(v167 + 1920) = 14;
              *(_OWORD *)(v167 + 1936) = xmmword_1B6E96320;
              *(unsigned char *)(v167 + 1952) = 0;
              *(_OWORD *)(v167 + 2016) = 0uLL;
              *(_OWORD *)(v167 + 2000) = 0uLL;
              *(_OWORD *)(v167 + 1984) = 0uLL;
              *(_OWORD *)(v167 + 1968) = 0uLL;
              *(unsigned char *)(v167 + 2032) = 13;
              uint64_t v185 = HIDWORD(v267);
              *(_OWORD *)(v167 + 2048) = xmmword_1B6E96330;
              *(unsigned char *)(v167 + 2064) = 0;
              *(void *)(v167 + 2080) = v185;
              *(void *)(v167 + 2136) = 0;
              *(_OWORD *)(v167 + 2104) = 0uLL;
              *(_OWORD *)(v167 + 2120) = 0uLL;
              *(_OWORD *)(v167 + 2088) = 0uLL;
              *(unsigned char *)(v167 + 2144) = 13;
              unsigned int v186 = v286;
              *(_OWORD *)(v167 + 2160) = xmmword_1B6E96340;
              *(unsigned char *)(v167 + 2176) = 0;
              *(void *)(v167 + 2192) = v186;
              *(void *)(v167 + 2248) = 0;
              *(_OWORD *)(v167 + 2216) = 0uLL;
              *(_OWORD *)(v167 + 2232) = 0uLL;
              *(_OWORD *)(v167 + 2200) = 0uLL;
              *(unsigned char *)(v167 + 2256) = 13;
              uint64_t v187 = v310 & 1;
              *(_OWORD *)(v167 + 2272) = xmmword_1B6E96350;
              *(unsigned char *)(v167 + 2288) = 0;
              *(void *)(v167 + 2304) = v187;
              *(void *)(v167 + 2360) = 0;
              *(_OWORD *)(v167 + 2328) = 0uLL;
              *(_OWORD *)(v167 + 2344) = 0uLL;
              *(_OWORD *)(v167 + 2312) = 0uLL;
              *(unsigned char *)(v167 + 2368) = 13;
              BOOL v188 = v275;
              *(_OWORD *)(v167 + 2384) = xmmword_1B6E96360;
              *(unsigned char *)(v167 + 2400) = 0;
              *(void *)(v167 + 2416) = v188;
              *(void *)(v167 + 2472) = 0;
              *(_OWORD *)(v167 + 2440) = 0uLL;
              *(_OWORD *)(v167 + 2456) = 0uLL;
              *(_OWORD *)(v167 + 2424) = 0uLL;
              *(unsigned char *)(v167 + 2480) = 13;
              BOOL v189 = v269;
              *(_OWORD *)(v167 + 2496) = xmmword_1B6E96370;
              *(unsigned char *)(v167 + 2512) = 0;
              *(void *)(v167 + 2528) = v189;
              *(void *)(v167 + 2584) = 0;
              *(_OWORD *)(v167 + 2552) = 0uLL;
              *(_OWORD *)(v167 + 2568) = 0uLL;
              *(_OWORD *)(v167 + 2536) = 0uLL;
              *(unsigned char *)(v167 + 2592) = 13;
              uint64_t v190 = v267;
              *(_OWORD *)(v167 + 2608) = xmmword_1B6E96380;
              *(unsigned char *)(v167 + 2624) = 0;
              *(void *)(v167 + 2640) = v190;
              *(void *)(v167 + 2696) = 0;
              *(_OWORD *)(v167 + 2664) = 0uLL;
              *(_OWORD *)(v167 + 2680) = 0uLL;
              *(_OWORD *)(v167 + 2648) = 0uLL;
              *(unsigned char *)(v167 + 2704) = 13;
              *(_OWORD *)(v167 + 2720) = xmmword_1B6E96390;
              *(unsigned char *)(v167 + 2736) = 0;
              *(void *)(v167 + 2752) = v156;
              *(void *)(v167 + 2808) = 0;
              *(_OWORD *)(v167 + 2776) = 0uLL;
              *(_OWORD *)(v167 + 2792) = 0uLL;
              *(_OWORD *)(v167 + 2760) = 0uLL;
              *(unsigned char *)(v167 + 2816) = 13;
              *(void *)&long long v338 = v166;
              sub_1B630C530(v167);
              if (v178)
              {
                __int16 v191 = *(_WORD *)(v86 + 130);
                if ((v191 & 4) == 0) {
                  *(_WORD *)(v86 + 130) = v191 | 4;
                }
              }
              uint64_t v192 = v301;
              uint64_t v193 = v303;
              if (v186)
              {
                __int16 v194 = *(_WORD *)(v86 + 130);
                if ((v194 & 2) == 0) {
                  *(_WORD *)(v86 + 130) = v194 | 2;
                }
              }
              uint64_t v195 = v338;
              if (v310)
              {
                __int16 v196 = *(_WORD *)(v86 + 130);
                if ((v196 & 1) == 0) {
                  *(_WORD *)(v86 + 130) = v196 | 1;
                }
              }
              if (v312)
              {
                __int16 v197 = *(_WORD *)(v298 + 80);
                if ((v197 & 8) == 0) {
                  *(_WORD *)(v298 + 80) = v197 | 8;
                }
              }
              uint64_t v198 = sub_1B6358600(v291, v192);
              if (v198) {
                uint64_t v199 = v198;
              }
              else {
                uint64_t v199 = v158;
              }
              LODWORD(v292) = sub_1B630A1B0((uint64_t)v353, v86, v199, v195, v309, v165, v284, v282);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v200 = v300;
              ((void (*)(char *, uint64_t, uint64_t))v316)(v293, v164, v300);
              if (swift_dynamicCast() && BYTE8(v344) == 1)
              {
                uint64_t v201 = *(void *)(v86 + 8);
                uint64_t v202 = *(void *)(v201 + 64);
                unint64_t v296 = v201 + 64;
                uint64_t v203 = 1 << *(unsigned char *)(v201 + 32);
                uint64_t v204 = -1;
                if (v203 < 64) {
                  uint64_t v204 = ~(-1 << v203);
                }
                unint64_t v205 = v204 & v202;
                unint64_t v206 = (unint64_t)(v203 + 63) >> 6;
                uint64_t v207 = swift_bridgeObjectRetain();
                uint64_t v208 = 0;
                int64_t v297 = v206;
                uint64_t v299 = v207;
                uint64_t v289 = v207 + 104;
                uint64_t v290 = v206 - 5;
                while (1)
                {
                  if (v205)
                  {
                    unint64_t v218 = __clz(__rbit64(v205));
                    v205 &= v205 - 1;
                    uint64_t v317 = v208;
                    unint64_t v219 = v218 | (v208 << 6);
                  }
                  else
                  {
                    uint64_t v220 = v208 + 1;
                    uint64_t v200 = v300;
                    if (v208 + 1 >= v297) {
                      goto LABEL_159;
                    }
                    unint64_t v221 = *(void *)(v296 + 8 * v220);
                    if (!v221)
                    {
                      uint64_t v220 = v208 + 2;
                      if (v208 + 2 >= v297) {
                        goto LABEL_159;
                      }
                      unint64_t v221 = *(void *)(v296 + 8 * v220);
                      if (!v221)
                      {
                        uint64_t v220 = v208 + 3;
                        if (v208 + 3 >= v297) {
                          goto LABEL_159;
                        }
                        unint64_t v221 = *(void *)(v296 + 8 * v220);
                        if (!v221)
                        {
                          uint64_t v220 = v208 + 4;
                          if (v208 + 4 >= v297) {
                            goto LABEL_159;
                          }
                          unint64_t v221 = *(void *)(v296 + 8 * v220);
                          if (!v221)
                          {
                            while (v290 != v208)
                            {
                              unint64_t v221 = *(void *)(v289 + 8 * v208++);
                              if (v221)
                              {
                                uint64_t v220 = v208 + 4;
                                goto LABEL_149;
                              }
                            }
LABEL_159:
                            swift_release();
                            break;
                          }
                        }
                      }
                    }
LABEL_149:
                    unint64_t v205 = (v221 - 1) & v221;
                    unint64_t v219 = __clz(__rbit64(v221)) + (v220 << 6);
                    uint64_t v317 = v220;
                  }
                  uint64_t v222 = *(void *)(v299 + 56);
                  uint64_t v223 = *(void *)(v299 + 48) + 96 * v219;
                  long long v224 = *(_OWORD *)(v223 + 48);
                  long long v320 = *(_OWORD *)(v223 + 32);
                  long long v321 = v224;
                  long long v225 = *(_OWORD *)(v223 + 80);
                  long long v322 = *(_OWORD *)(v223 + 64);
                  long long v323 = v225;
                  long long v226 = *(_OWORD *)(v223 + 16);
                  int64x2_t v318 = *(int64x2_t *)v223;
                  long long v319 = v226;
                  uint64_t v227 = *(void *)(v222 + 112 * v219);
                  uint64_t v228 = *(void *)(v193 + 248);
                  uint64_t v230 = *(void *)(v228 + 272);
                  uint64_t v229 = *(void *)(v228 + 280);
                  LODWORD(v304) = *(unsigned __int8 *)(v228 + 288);
                  uint64_t v231 = *(void *)(v228 + 304);
                  uint64_t v305 = *(void *)(v228 + 296);
                  uint64_t v306 = v231;
                  uint64_t v232 = *(char **)(v228 + 320);
                  v307 = *(char **)(v228 + 312);
                  uint64_t v308 = v232;
                  LODWORD(v309) = *(_DWORD *)(v228 + 328);
                  LODWORD(v310) = *(_DWORD *)(v228 + 332);
                  uint64_t v233 = *(void *)(v228 + 344);
                  uint64_t v311 = *(void *)(v228 + 336);
                  uint64_t v312 = v233;
                  uint64_t v234 = *(uint64_t **)(v228 + 360);
                  uint64_t v313 = *(void *)(v228 + 352);
                  uint64_t v314 = v234;
                  LODWORD(v315) = *(_DWORD *)(v228 + 368);
                  LODWORD(v316) = *(_DWORD *)(v228 + 372);
                  swift_unknownObjectRetain_n();
                  swift_unknownObjectRetain();
                  swift_unknownObjectRetain();
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v335[0] = *(void *)(v86 + 8);
                  uint64_t v236 = v335[0];
                  *(void *)(v86 + 8) = 0x8000000000000000;
                  sub_1B6311200(&v318);
                  unint64_t v239 = v238;
                  char v240 = v237;
                  uint64_t v241 = *(void *)(v236 + 16) + ((v237 & 1) == 0);
                  if (*(void *)(v236 + 24) >= v241)
                  {
                    if (isUniquelyReferenced_nonNull_native)
                    {
                      unint64_t v244 = (void *)v335[0];
                      if ((v237 & 1) == 0) {
                        goto LABEL_134;
                      }
                    }
                    else
                    {
                      sub_1B6AD2A6C();
                      unint64_t v244 = (void *)v335[0];
                      if ((v240 & 1) == 0) {
                        goto LABEL_134;
                      }
                    }
                  }
                  else
                  {
                    sub_1B63113C8(v241, isUniquelyReferenced_nonNull_native);
                    sub_1B6311200(&v318);
                    if ((v240 & 1) != (v243 & 1))
                    {
                      uint64_t result = sub_1B6E33838();
                      __break(1u);
                      return result;
                    }
                    unint64_t v239 = v242;
                    unint64_t v244 = (void *)v335[0];
                    if ((v240 & 1) == 0)
                    {
LABEL_134:
                      v244[(v239 >> 6) + 8] |= 1 << v239;
                      uint64_t v209 = v244[6] + 96 * v239;
                      long long v210 = v321;
                      *(_OWORD *)(v209 + 32) = v320;
                      *(_OWORD *)(v209 + 48) = v210;
                      long long v211 = v323;
                      *(_OWORD *)(v209 + 64) = v322;
                      *(_OWORD *)(v209 + 80) = v211;
                      long long v212 = v319;
                      *(int64x2_t *)uint64_t v209 = v318;
                      *(_OWORD *)(v209 + 16) = v212;
                      uint64_t v213 = v244[7] + 112 * v239;
                      *(void *)uint64_t v213 = v227;
                      *(void *)(v213 + 8) = v230;
                      *(void *)(v213 + 16) = v229;
                      *(unsigned char *)(v213 + 24) = v304;
                      uint64_t v214 = v306;
                      *(void *)(v213 + 32) = v305;
                      *(void *)(v213 + 40) = v214;
                      uint64_t v215 = v308;
                      *(void *)(v213 + 48) = v307;
                      *(void *)(v213 + 56) = v215;
                      LODWORD(v215) = v310;
                      *(_DWORD *)(v213 + 64) = v309;
                      *(_DWORD *)(v213 + 68) = v215;
                      uint64_t v216 = v312;
                      *(void *)(v213 + 72) = v311;
                      *(void *)(v213 + 80) = v216;
                      uint64_t v217 = v314;
                      *(void *)(v213 + 88) = v313;
                      *(void *)(v213 + 96) = v217;
                      LODWORD(v217) = v316;
                      *(_DWORD *)(v213 + 104) = v315;
                      *(_DWORD *)(v213 + 108) = v217;
                      ++v244[2];
                      goto LABEL_135;
                    }
                  }
                  uint64_t v245 = v244[7] + 112 * v239;
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  *(void *)uint64_t v245 = v227;
                  *(void *)(v245 + 8) = v230;
                  *(void *)(v245 + 16) = v229;
                  *(unsigned char *)(v245 + 24) = v304;
                  uint64_t v246 = v306;
                  *(void *)(v245 + 32) = v305;
                  *(void *)(v245 + 40) = v246;
                  uint64_t v247 = v308;
                  *(void *)(v245 + 48) = v307;
                  *(void *)(v245 + 56) = v247;
                  LODWORD(v247) = v310;
                  *(_DWORD *)(v245 + 64) = v309;
                  *(_DWORD *)(v245 + 68) = v247;
                  uint64_t v248 = v312;
                  *(void *)(v245 + 72) = v311;
                  *(void *)(v245 + 80) = v248;
                  char v249 = v314;
                  *(void *)(v245 + 88) = v313;
                  *(void *)(v245 + 96) = v249;
                  LODWORD(v249) = v316;
                  *(_DWORD *)(v245 + 104) = v315;
                  *(_DWORD *)(v245 + 108) = v249;
LABEL_135:
                  uint64_t v86 = v302;
                  *(void *)(v302 + 8) = v244;
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v193 = v303;
                  uint64_t v208 = v317;
                }
              }
              v294(v293, v200);
              if (v292)
              {
                sub_1B63BAF34(v291);
                sub_1B696CB34(v350, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B69164DC);
                swift_release();
                swift_release();
              }
              else
              {
                sub_1B62EAE14((uint64_t)v350, (uint64_t)&v338, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
                if (sub_1B6388C10((uint64_t *)&v338) != 1)
                {
                  *(_OWORD *)(v86 + 208) = v348;
                  *(unsigned char *)(v86 + 224) = v349;
                  long long v327 = v340;
                  long long v328 = v341;
                  long long v329 = v342;
                  long long v330 = v343;
                  long long v331 = v344;
                  long long v332 = v345;
                  int v333 = v346;
                  uint64_t v334 = v347;
                  sub_1B62EAE14((uint64_t)v350, (uint64_t)v335, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
                  sub_1B681C5EC((uint64_t)v335);
                  sub_1B62ED358((uint64_t)&v327);
                  sub_1B696CB34(v350, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B69164DC);
                  sub_1B696CB34(v350, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B69164DC);
                }
                swift_release();
                swift_release();
              }
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_unknownObjectRelease();
              return sub_1B62FA294((uint64_t)v366);
            }
            uint64_t v276 = 5;
            BOOL v121 = 0;
            BOOL v123 = 0;
            goto LABEL_71;
          }
          uint64_t v276 = 5;
          BOOL v121 = 0;
          BOOL v123 = 0;
          goto LABEL_69;
        }
        if ((swift_dynamicCast() & 1) != 0 || (swift_dynamicCast() & 1) != 0 || swift_dynamicCast())
        {
          uint64_t v310 = (char *)(v276 ^ 1);
          v294((char *)v112, v69);
          unsigned int v113 = 0;
          LODWORD(v286) = 1;
          unsigned int v117 = v296;
          if (v296 == -1)
          {
            uint64_t v118 = v292;
            if (!v292)
            {
              int v268 = v85;
              uint64_t v270 = v84;
              sub_1B62EAE14((uint64_t)v368, (uint64_t)v350, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
              unint64_t v263 = 0;
              unint64_t v296 = 0;
              uint64_t v266 = 0;
              unint64_t v267 = 0;
              BOOL v269 = 0;
              BOOL v275 = 0;
              BOOL v272 = 0;
              uint64_t v273 = 0;
              uint64_t v274 = 0;
              uint64_t v276 = 5;
              LODWORD(v286) = 1;
              goto LABEL_64;
            }
            uint64_t v276 = 5;
            BOOL v121 = 0;
            BOOL v123 = 0;
            BOOL v275 = 0;
            BOOL v272 = 0;
            goto LABEL_76;
          }
          uint64_t v276 = 5;
          BOOL v121 = 0;
          BOOL v123 = 0;
          BOOL v275 = 0;
          BOOL v272 = 0;
LABEL_73:
          uint64_t v273 = 0;
          uint64_t v274 = 0;
          goto LABEL_74;
        }
        if (!swift_dynamicCast())
        {
          if (swift_dynamicCast())
          {
            if ((_BYTE)v342)
            {
              BOOL v121 = 0;
              BOOL v269 = 0;
            }
            else
            {
              BOOL v256 = DWORD1(v342) != -1 || DWORD2(v342) != 0;
              BOOL v269 = v256;
              BOOL v121 = HIDWORD(v342) != -1 || v343 != 0;
            }
            v294((char *)v112, v69);
            unsigned int v113 = 0;
            unsigned int v117 = v296;
            if (v296 != -1)
            {
              uint64_t v276 = 5;
              BOOL v275 = 0;
              uint64_t v310 = 0;
              LODWORD(v286) = 0;
              BOOL v272 = 0;
              uint64_t v273 = 0;
              uint64_t v274 = 0;
              BOOL v123 = v269;
              goto LABEL_74;
            }
            uint64_t v118 = v292;
            if (v292)
            {
              uint64_t v276 = 5;
              BOOL v275 = 0;
              uint64_t v310 = 0;
              LODWORD(v286) = 0;
              BOOL v272 = 0;
              uint64_t v273 = 0;
              uint64_t v274 = 0;
              BOOL v123 = v269;
              goto LABEL_77;
            }
            LODWORD(v267) = v121;
            int v268 = v85;
            uint64_t v270 = v84;
            sub_1B62EAE14((uint64_t)v368, (uint64_t)v350, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
            unint64_t v263 = 0;
            unint64_t v296 = 0;
            uint64_t v266 = 0;
            HIDWORD(v267) = 0;
            goto LABEL_206;
          }
          v294((char *)v112, v69);
          unsigned int v113 = 0;
          unsigned int v117 = v296;
          if (v296 == -1)
          {
            uint64_t v118 = v292;
            if (!v292)
            {
              int v268 = v85;
              uint64_t v270 = v84;
LABEL_188:
              sub_1B62EAE14((uint64_t)v368, (uint64_t)v350, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
              unint64_t v263 = 0;
              unint64_t v296 = 0;
              uint64_t v266 = 0;
              unint64_t v267 = 0;
              BOOL v269 = 0;
LABEL_206:
              BOOL v275 = 0;
              goto LABEL_50;
            }
LABEL_190:
            uint64_t v276 = 5;
            BOOL v121 = 0;
            BOOL v123 = 0;
            BOOL v275 = 0;
LABEL_71:
            uint64_t v310 = 0;
            LODWORD(v286) = 0;
            BOOL v272 = 0;
LABEL_76:
            uint64_t v273 = 0;
            uint64_t v274 = 0;
            goto LABEL_77;
          }
LABEL_189:
          uint64_t v276 = 5;
          BOOL v121 = 0;
          BOOL v123 = 0;
          BOOL v275 = 0;
LABEL_69:
          uint64_t v310 = 0;
          LODWORD(v286) = 0;
          BOOL v272 = 0;
          goto LABEL_73;
        }
        uint64_t v270 = v84;
        long long v324 = v338;
        long long v325 = v339;
        uint64_t v326 = v340;
        uint64_t v250 = sub_1B695E724(v338);
        if (v251)
        {
          if (v250)
          {
            if (v296 == -1 && !v292)
            {
              unint64_t v252 = sub_1B6D422A0(v251);
              char v254 = v253;
              swift_bridgeObjectRelease();
              swift_release();
              if (v254)
              {
                uint64_t v292 = 0;
                unint64_t v296 = 0xFFFFFFFFLL;
              }
              else
              {
                unint64_t v296 = v252;
                uint64_t v292 = HIDWORD(v252);
              }
              uint64_t v69 = v300;
              goto LABEL_185;
            }
            swift_release();
          }
          swift_bridgeObjectRelease();
        }
LABEL_185:
        uint64_t v84 = v270;
        v294((char *)v112, v69);
        unsigned int v113 = 0;
        unsigned int v117 = v296;
        if (v296 == -1)
        {
          uint64_t v118 = v292;
          if (!v292)
          {
            int v268 = v85;
            goto LABEL_188;
          }
          goto LABEL_190;
        }
        goto LABEL_189;
      }
    }
    v294(v93, v69);
    goto LABEL_34;
  }

  return swift_release();
}

__n128 initializeWithCopy for ParticleQuadRenderer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 123) = *(_OWORD *)(a2 + 123);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_1B62E5CDC()
{
  return *(void *)(v0 + 36);
}

float sub_1B62E5CE4()
{
  return *(float *)(v0 + 8);
}

unint64_t sub_1B62E5CEC()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t sub_1B62E5D0C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a2;
  long long v6 = a1;
  if (a4)
  {
    uint64_t v122 = *a1;
    uint64_t v7 = *(void *)(v122 + 16);
    if (v7)
    {
      uint64_t v8 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
      do
      {
        while (1)
        {
          sub_1B62E6FCC((uint64_t)(v8 - 5), (uint64_t)v126);
          uint64_t v10 = *v8;
          v8 += 6;
          uint64_t v9 = v10;
          sub_1B62E6B94((uint64_t)v126, (void (*)(void, void, void, void, void))sub_1B62E9500);
          uint64_t v11 = sub_1B62E6BFC(a3);
          if (v11) {
            break;
          }
          objc_msgSend(v5, sel_setVertexBuffer_offset_atIndex_, 0, 0, v9);
          sub_1B62E6B94((uint64_t)v126, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
          if (!--v7) {
            goto LABEL_7;
          }
        }
        objc_msgSend(v5, sel_setVertexBuffer_offset_atIndex_, v11, v12, v9);
        sub_1B62E6B94((uint64_t)v126, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
        swift_unknownObjectRelease();
        --v7;
      }
      while (v7);
LABEL_7:
      sub_1B62D8C3C((uint64_t)&v122);
    }
    uint64_t v121 = v6[1];
    uint64_t v13 = *(void *)(v121 + 16);
    if (v13)
    {
      uint64_t v14 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      do
      {
        unint64_t v15 = *(v14 - 4);
        uint64_t v16 = *(v14 - 3);
        uint64_t v17 = *(v14 - 2);
        uint64_t v18 = *v14;
        char v19 = *((unsigned char *)v14 - 8);
        sub_1B6916440(v15, v16, v17, v19);
        objc_msgSend(v5, sel_setVertexTexture_atIndex_, sub_1B699E8B8(a3, v15, v16, v17, v19), v18);
        swift_unknownObjectRelease();
        sub_1B6916620(v15, v16, v17, v19);
        v14 += 5;
        --v13;
      }
      while (v13);
      sub_1B62D8C3C((uint64_t)&v121);
      long long v6 = a1;
      uint64_t v4 = a4;
    }
    uint64_t v120 = v6[2];
    uint64_t v20 = *(void *)(v120 + 16);
    if (v20)
    {
      uint64_t v21 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      do
      {
        uint64_t v24 = *(v21 - 4);
        uint64_t v23 = *(v21 - 3);
        uint64_t v25 = *(v21 - 2);
        int v26 = *((unsigned __int8 *)v21 - 8);
        uint64_t v27 = *v21;
        if (v26 == 1)
        {
          sub_1B69A1D74(a3 + 40, (uint64_t)&v106);
          if (!v107)
          {
LABEL_85:
            swift_bridgeObjectRetain_n();
            sub_1B69A1E04((uint64_t)&v106);
            goto LABEL_84;
          }
          sub_1B62C15C4(&v106, (uint64_t)&v108);
          if (!v25)
          {
LABEL_83:
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v108);
LABEL_84:
            uint64_t v108 = 0;
            unint64_t v109 = 0xE000000000000000;
            sub_1B6E328C8();
            sub_1B6E31948();
            LOBYTE(v106) = v24;
            sub_1B6E32B18();
            sub_1B6E31948();
            goto LABEL_90;
          }
          uint64_t v28 = (void *)*sub_1B62C14BC(&v108, v110);
          swift_bridgeObjectRetain_n();
          uint64_t v29 = (void *)sub_1B6E31768();
          id v22 = objc_msgSend(v28, sel_sampler::, v24, v29);

          sub_1B69A1E8C(v24, v23, v25, 1);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v108);
          LOBYTE(v26) = 1;
        }
        else
        {
          swift_unknownObjectRetain_n();
          id v22 = (id)v24;
        }
        v21 += 5;
        objc_msgSend(a2, sel_setVertexSamplerState_atIndex_, v22, v27);
        swift_unknownObjectRelease();
        sub_1B69A1E8C(v24, v23, v25, v26);
        --v20;
      }
      while (v20);
      sub_1B62D8C3C((uint64_t)&v120);
      uint64_t v5 = a2;
      long long v6 = a1;
      uint64_t v4 = a4;
    }
  }
  if ((v4 & 8) != 0)
  {
    uint64_t v119 = v6[6];
    uint64_t v30 = *(void *)(v119 + 16);
    if (v30)
    {
      uint64_t v31 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
      do
      {
        while (1)
        {
          sub_1B62E6FCC((uint64_t)(v31 - 5), (uint64_t)v125);
          uint64_t v33 = *v31;
          v31 += 6;
          uint64_t v32 = v33;
          sub_1B62E6B94((uint64_t)v125, (void (*)(void, void, void, void, void))sub_1B62E9500);
          uint64_t v34 = sub_1B62E6BFC(a3);
          if (v34) {
            break;
          }
          objc_msgSend(v5, sel_setObjectBuffer_offset_atIndex_, 0, 0, v32);
          sub_1B62E6B94((uint64_t)v125, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
          if (!--v30) {
            goto LABEL_27;
          }
        }
        objc_msgSend(v5, sel_setObjectBuffer_offset_atIndex_, v34, v35, v32);
        sub_1B62E6B94((uint64_t)v125, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
        swift_unknownObjectRelease();
        --v30;
      }
      while (v30);
LABEL_27:
      sub_1B62D8C3C((uint64_t)&v119);
    }
    uint64_t v118 = v6[7];
    uint64_t v36 = *(void *)(v118 + 16);
    if (v36)
    {
      uint64_t v37 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      do
      {
        unint64_t v38 = *(v37 - 4);
        uint64_t v39 = *(v37 - 3);
        uint64_t v40 = *(v37 - 2);
        uint64_t v41 = *v37;
        char v42 = *((unsigned char *)v37 - 8);
        sub_1B6916440(v38, v39, v40, v42);
        objc_msgSend(v5, sel_setObjectTexture_atIndex_, sub_1B699E8B8(a3, v38, v39, v40, v42), v41);
        swift_unknownObjectRelease();
        sub_1B6916620(v38, v39, v40, v42);
        v37 += 5;
        --v36;
      }
      while (v36);
      sub_1B62D8C3C((uint64_t)&v118);
      long long v6 = a1;
      uint64_t v4 = a4;
    }
    uint64_t v117 = v6[8];
    uint64_t v43 = *(void *)(v117 + 16);
    if (v43)
    {
      uint64_t v44 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      do
      {
        uint64_t v24 = *(v44 - 4);
        uint64_t v46 = *(v44 - 3);
        uint64_t v47 = *(v44 - 2);
        int v48 = *((unsigned __int8 *)v44 - 8);
        uint64_t v49 = *v44;
        if (v48 == 1)
        {
          sub_1B69A1D74(a3 + 40, (uint64_t)&v106);
          if (!v107) {
            goto LABEL_85;
          }
          sub_1B62C15C4(&v106, (uint64_t)&v108);
          if (!v47) {
            goto LABEL_83;
          }
          char v50 = (void *)*sub_1B62C14BC(&v108, v110);
          swift_bridgeObjectRetain_n();
          uint64_t v51 = (void *)sub_1B6E31768();
          id v45 = objc_msgSend(v50, sel_sampler::, v24, v51);

          sub_1B69A1E8C(v24, v46, v47, 1);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v108);
          LOBYTE(v48) = 1;
        }
        else
        {
          swift_unknownObjectRetain_n();
          id v45 = (id)v24;
        }
        v44 += 5;
        objc_msgSend(a2, sel_setObjectSamplerState_atIndex_, v45, v49);
        swift_unknownObjectRelease();
        sub_1B69A1E8C(v24, v46, v47, v48);
        --v43;
      }
      while (v43);
      sub_1B62D8C3C((uint64_t)&v117);
      uint64_t v5 = a2;
      long long v6 = a1;
      uint64_t v4 = a4;
    }
  }
  if ((v4 & 0x10) != 0)
  {
    uint64_t v116 = v6[9];
    uint64_t v52 = *(void *)(v116 + 16);
    if (v52)
    {
      uint64_t v53 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
      do
      {
        while (1)
        {
          sub_1B62E6FCC((uint64_t)(v53 - 5), (uint64_t)v124);
          uint64_t v55 = *v53;
          v53 += 6;
          uint64_t v54 = v55;
          sub_1B62E6B94((uint64_t)v124, (void (*)(void, void, void, void, void))sub_1B62E9500);
          uint64_t v56 = sub_1B62E6BFC(a3);
          if (v56) {
            break;
          }
          objc_msgSend(v5, sel_setMeshBuffer_offset_atIndex_, 0, 0, v54);
          sub_1B62E6B94((uint64_t)v124, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
          if (!--v52) {
            goto LABEL_47;
          }
        }
        objc_msgSend(v5, sel_setMeshBuffer_offset_atIndex_, v56, v57, v54);
        sub_1B62E6B94((uint64_t)v124, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
        swift_unknownObjectRelease();
        --v52;
      }
      while (v52);
LABEL_47:
      sub_1B62D8C3C((uint64_t)&v116);
    }
    uint64_t v115 = v6[10];
    uint64_t v58 = *(void *)(v115 + 16);
    if (v58)
    {
      uint64_t v59 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      do
      {
        unint64_t v60 = *(v59 - 4);
        uint64_t v61 = *(v59 - 3);
        uint64_t v62 = *(v59 - 2);
        uint64_t v63 = *v59;
        char v64 = *((unsigned char *)v59 - 8);
        sub_1B6916440(v60, v61, v62, v64);
        objc_msgSend(v5, sel_setMeshTexture_atIndex_, sub_1B699E8B8(a3, v60, v61, v62, v64), v63);
        swift_unknownObjectRelease();
        sub_1B6916620(v60, v61, v62, v64);
        v59 += 5;
        --v58;
      }
      while (v58);
      sub_1B62D8C3C((uint64_t)&v115);
      long long v6 = a1;
      uint64_t v4 = a4;
    }
    uint64_t v114 = v6[11];
    uint64_t v65 = *(void *)(v114 + 16);
    if (v65)
    {
      uint64_t v66 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      do
      {
        uint64_t v24 = *(v66 - 4);
        uint64_t v68 = *(v66 - 3);
        uint64_t v69 = *(v66 - 2);
        LODWORD(v70) = *((unsigned __int8 *)v66 - 8);
        uint64_t v71 = *v66;
        if (v70 == 1)
        {
          sub_1B69A1D74(a3 + 40, (uint64_t)&v106);
          if (!v107) {
            goto LABEL_85;
          }
          uint64_t v70 = v71;
          sub_1B62C15C4(&v106, (uint64_t)&v108);
          if (!v69) {
            goto LABEL_83;
          }
          uint64_t v72 = (void *)*sub_1B62C14BC(&v108, v110);
          swift_bridgeObjectRetain_n();
          uint64_t v73 = (void *)sub_1B6E31768();
          id v67 = objc_msgSend(v72, sel_sampler::, v24, v73);

          sub_1B69A1E8C(v24, v68, v69, 1);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v108);
          uint64_t v71 = v70;
          LOBYTE(v70) = 1;
        }
        else
        {
          swift_unknownObjectRetain_n();
          id v67 = (id)v24;
        }
        v66 += 5;
        objc_msgSend(a2, sel_setMeshSamplerState_atIndex_, v67, v71);
        swift_unknownObjectRelease();
        sub_1B69A1E8C(v24, v68, v69, v70);
        --v65;
      }
      while (v65);
      sub_1B62D8C3C((uint64_t)&v114);
      uint64_t v5 = a2;
      long long v6 = a1;
      uint64_t v4 = a4;
    }
  }
  if ((v4 & 2) == 0) {
    return sub_1B62E73B0(v6[13], 1, v4);
  }
  uint64_t v113 = v6[3];
  uint64_t v74 = *(void *)(v113 + 16);
  if (v74)
  {
    id v75 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
    do
    {
      while (1)
      {
        sub_1B62E6FCC((uint64_t)(v75 - 5), (uint64_t)v123);
        uint64_t v77 = *v75;
        v75 += 6;
        uint64_t v76 = v77;
        sub_1B62E6B94((uint64_t)v123, (void (*)(void, void, void, void, void))sub_1B62E9500);
        uint64_t v78 = sub_1B62E6BFC(a3);
        if (v78) {
          break;
        }
        objc_msgSend(v5, sel_setFragmentBuffer_offset_atIndex_, 0, 0, v76);
        sub_1B62E6B94((uint64_t)v123, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
        if (!--v74) {
          goto LABEL_67;
        }
      }
      objc_msgSend(v5, sel_setFragmentBuffer_offset_atIndex_, v78, v79, v76);
      sub_1B62E6B94((uint64_t)v123, (void (*)(void, void, void, void, void))sub_1B62E6BD4);
      swift_unknownObjectRelease();
      --v74;
    }
    while (v74);
LABEL_67:
    sub_1B62D8C3C((uint64_t)&v113);
  }
  uint64_t v112 = v6[4];
  uint64_t v80 = *(void *)(v112 + 16);
  if (v80)
  {
    uint64_t v81 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
    do
    {
      unint64_t v82 = *(v81 - 4);
      uint64_t v83 = *(v81 - 3);
      uint64_t v84 = *(v81 - 2);
      uint64_t v85 = *v81;
      char v86 = *((unsigned char *)v81 - 8);
      sub_1B6916440(v82, v83, v84, v86);
      objc_msgSend(v5, sel_setFragmentTexture_atIndex_, sub_1B699E8B8(a3, v82, v83, v84, v86), v85);
      swift_unknownObjectRelease();
      sub_1B6916620(v82, v83, v84, v86);
      v81 += 5;
      --v80;
    }
    while (v80);
    sub_1B62D8C3C((uint64_t)&v112);
    long long v6 = a1;
    uint64_t v4 = a4;
  }
  uint64_t v111 = v6[5];
  uint64_t v87 = *(void *)(v111 + 16);
  if (!v87) {
    return sub_1B62E73B0(v6[13], 1, v4);
  }
  uint64_t v88 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
  while (1)
  {
    uint64_t v91 = *(v88 - 4);
    uint64_t v90 = *(v88 - 3);
    uint64_t v92 = *(v88 - 2);
    int v93 = *((unsigned __int8 *)v88 - 8);
    uint64_t v94 = *v88;
    if (v93 == 1) {
      break;
    }
    swift_unknownObjectRetain_n();
    id v89 = (id)v91;
LABEL_75:
    v88 += 5;
    objc_msgSend(a2, sel_setFragmentSamplerState_atIndex_, v89, v94);
    swift_unknownObjectRelease();
    sub_1B69A1E8C(v91, v90, v92, v93);
    if (!--v87)
    {
      sub_1B62D8C3C((uint64_t)&v111);
      long long v6 = a1;
      uint64_t v4 = a4;
      return sub_1B62E73B0(v6[13], 1, v4);
    }
  }
  sub_1B69A1D74(a3 + 40, (uint64_t)&v106);
  if (!v107)
  {
    swift_bridgeObjectRetain_n();
    sub_1B69A1E04((uint64_t)&v106);
    goto LABEL_89;
  }
  sub_1B62C15C4(&v106, (uint64_t)&v108);
  if (v92)
  {
    uint64_t v95 = (void *)*sub_1B62C14BC(&v108, v110);
    uint64_t v96 = v91;
    swift_bridgeObjectRetain_n();
    uint64_t v104 = v91;
    uint64_t v97 = v92;
    uint64_t v98 = v90;
    BOOL v99 = (void *)sub_1B6E31768();
    id v89 = objc_msgSend(v95, sel_sampler::, v96, v99);

    uint64_t v90 = v98;
    uint64_t v92 = v97;
    uint64_t v91 = v104;
    sub_1B69A1E8C(v104, v90, v92, 1);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v108);
    goto LABEL_75;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v108);
LABEL_89:
  uint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  LOBYTE(v106) = v91;
  sub_1B6E32B18();
  sub_1B6E31948();
LABEL_90:
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62E6B94(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B62E6BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  unsigned int v5 = a5 >> 6;
  if (v5 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (v5 <= 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B62E6BFC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1B62E6FCC(v2, (uint64_t)v18);
  sub_1B62E6FCC(v2, (uint64_t)v19);
  if (v20 >> 6 <= 1u)
  {
    uint64_t v4 = v19[0];
    swift_unknownObjectRetain();
    return v4;
  }
  v20 &= 0x3Fu;
  uint64_t v6 = LOBYTE(v19[0]);
  uint64_t v8 = v19[1];
  uint64_t v7 = v19[2];
  sub_1B69A1D74(a1 + 40, (uint64_t)&v15);
  if (v16)
  {
    sub_1B62C15C4(&v15, (uint64_t)v17);
    if (v7)
    {
      uint64_t v9 = (void **)sub_1B62C14BC(v17, v17[3]);
      uint64_t v4 = (uint64_t)sub_1B6B663A8(v6, v8, v7, *v9);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v17);
      return v4;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v17);
  }
  else
  {
    sub_1B69A1E04((uint64_t)&v15);
  }
  switch(v6)
  {
    case 3:
      if (!v7) {
        goto LABEL_25;
      }
      if (v8 == 0x6E6F43746867696CLL && v7 == 0xEE0073746E617473 || (sub_1B6E334B8() & 1) != 0) {
        return sub_1B6AB26DC();
      }
      if (v8 == 0x74736E6F436C6269 && v7 == 0xEC00000073746E61 || (sub_1B6E334B8() & 1) != 0) {
        return sub_1B6AB28E0();
      }
LABEL_25:
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    case 6:
      if (!v7 || (v8 != 0x736E6F4373736170 || v7 != 0xED000073746E6174) && (sub_1B6E334B8() & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = swift_retain();
      MEMORY[0x1F4188790](v12, v13);
      uint64_t v14 = *(void *)(v11 + 176);
      swift_retain();
      uint64_t v4 = sub_1B6B3A598((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v14, (void (*)(void *__return_ptr, uint64_t))sub_1B69A1EDC);
      swift_release();
      swift_release();
      return v4;
    default:
      goto LABEL_25;
  }
}

uint64_t sub_1B62E6FCC(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for MeshBuffer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1B62E703C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1[159];
  if (!v4)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v12 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v19 = 0;
    swift_retain();
    sub_1B6B33E34(v12, &v19, 0xD000000000000042, 0x80000001B6F43920);
    swift_release();
    return swift_release();
  }
  uint64_t v8 = a1[160];
  uint64_t v9 = a1[161];
  uint64_t v10 = swift_unknownObjectRetain();
  sub_1B62E738C(v10, v8, v9, 0, 0, a4);
  sub_1B62E7380(v4, v8, v9, 0, 0, a4);
  if ((*(unsigned char *)(a3 + 24) & 4) != 0)
  {
    sub_1B62E7398(v4, v8, v9, 0, 0, a4);
    sub_1B62E73A4(v4, v8, v9, 0, 0, a4);
    uint64_t v11 = 27;
  }
  else
  {
    uint64_t v11 = 3;
  }
  sub_1B62E73B0(a1[163], 1, v11);
  uint64_t v13 = a1[150];
  if (!v13)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v18 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v19 = 0;
    swift_retain();
    sub_1B6B33E34(v18, &v19, 0xD000000000000040, 0x80000001B6F43970);
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  uint64_t v14 = a1[151];
  uint64_t v15 = a1[152];
  uint64_t v16 = swift_unknownObjectRetain();
  sub_1B62E738C(v16, v14, v15, 0, 1, a4);
  sub_1B62E7380(v13, v14, v15, 0, 1, a4);
  if ((*(unsigned char *)(a3 + 24) & 4) != 0)
  {
    sub_1B62E7398(v13, v14, v15, 0, 1, a4);
    sub_1B62E73A4(v13, v14, v15, 0, 1, a4);
  }
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

id sub_1B62E736C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  return objc_msgSend(v7, *a7, a1, a4 + a2);
}

id sub_1B62E7380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B62E736C(a1, a2, a3, a4, a5, a6, (SEL *)&selRef_setFragmentBuffer_offset_atIndex_);
}

id sub_1B62E738C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B62E736C(a1, a2, a3, a4, a5, a6, (SEL *)&selRef_setVertexBuffer_offset_atIndex_);
}

id sub_1B62E7398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B62E736C(a1, a2, a3, a4, a5, a6, (SEL *)&selRef_setObjectBuffer_offset_atIndex_);
}

id sub_1B62E73A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B62E736C(a1, a2, a3, a4, a5, a6, (SEL *)&selRef_setMeshBuffer_offset_atIndex_);
}

uint64_t sub_1B62E73B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if (sub_1B6E32C18())
    {
      uint64_t v11 = sub_1B69A1B84(a1);
      swift_bridgeObjectRelease();
      uint64_t v9 = (uint64_t)(v11 + 4);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v9 = -8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    swift_bridgeObjectRetain();
  }
  objc_msgSend(v4, sel_useResources_count_usage_stages_, v9, v8, a2, a3);

  return swift_unknownObjectRelease();
}

uint64_t sub_1B62E74B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, char a13, uint64_t a14, uint64_t a15, char a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21)
{
  id v22 = (void *)MEMORY[0x1F4188790](a1, a2);
  uint64_t v239 = v23;
  char v240 = v22;
  uint64_t v25 = v24;
  uint64_t v236 = v26;
  uint64_t v237 = v27;
  uint64_t v231 = v28;
  uint64_t v245 = v29;
  uint64_t v31 = v30;
  uint64_t v307 = *MEMORY[0x1E4F143B8];
  uint64_t v32 = *(void *)(a20 - 8);
  uint64_t v243 = a21;
  uint64_t v33 = MEMORY[0x1F4188790](v22, v30);
  uint64_t v233 = (char *)&v224 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v33, v35);
  unint64_t v38 = (char *)&v224 - v37;
  MEMORY[0x1F4188790](v36, v39);
  uint64_t v41 = (char *)&v224 - v40;
  uint64_t v43 = *(void *)(v42 + 176);
  swift_retain();
  uint64_t v44 = sub_1B62EC590((uint64_t)&type metadata for DrawCallPool, (uint64_t)&off_1F0F59788, v43);
  uint64_t v244 = v21;
  swift_release();
  uint64_t v232 = v38;
  if (!v44)
  {
    type metadata accessor for DrawCall();
    swift_allocObject();
    uint64_t v44 = sub_1B630041C();
  }
  uint64_t v242 = v25;
  sub_1B62EE21C();
  uint64_t v234 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v235 = v32 + 16;
  v234(v41, v245, a20);
  char v45 = swift_dynamicCast();
  uint64_t v238 = v31;
  uint64_t v241 = a20;
  if ((v45 & 1) == 0)
  {
    uint64_t v63 = v240;
    *(void *)(v44 + 264) = v240[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v64 = v243;
    uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t))(v243 + 24);
    LODWORD(v237) = v65(a20, v243) != 0xFFFFFFFFLL;
    unint64_t v66 = v65(a20, v64);
    goto LABEL_13;
  }
  uint64_t v46 = v244;
  int64_t v47 = v277[3];
  uint64_t v48 = v277[4];
  uint64_t v49 = sub_1B695E724(v277[0]);
  if (!v50) {
    return swift_release();
  }
  uint64_t v51 = v49;
  if (!v49)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (v47 < 0 || (uint64_t v52 = *(void *)(v49 + 40), v47 >= *(void *)(v52 + 16)))
  {
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v53 = (_OWORD *)(v52 + (v47 << 7));
  long long v54 = v53[2];
  long long v55 = v53[3];
  long long v56 = v53[5];
  v306[2] = v53[4];
  v306[3] = v56;
  v306[0] = v54;
  v306[1] = v55;
  long long v57 = v53[6];
  long long v58 = v53[7];
  long long v59 = v53[9];
  v306[6] = v53[8];
  v306[7] = v59;
  v306[4] = v57;
  v306[5] = v58;
  swift_retain();
  sub_1B696C7F0((uint64_t)v306);
  sub_1B699F09C(v51, v44, v231);
  sub_1B69A1EF8((uint64_t)v306, v44, v48);
  uint64_t v60 = *(void *)(v51 + 24);
  uint64_t v244 = v46;
  if (v60)
  {
    if (*(void *)(*v240 + 16) && (sub_1B62C1A30(*(void *)(v51 + 16)), (v61 & 1) != 0)) {
      uint64_t v62 = swift_bridgeObjectRetain();
    }
    else {
      uint64_t v62 = (uint64_t)sub_1B6303CBC(MEMORY[0x1E4FBC860]);
    }
    uint64_t v152 = v44;
    *(void *)(v44 + 264) = v62;
    swift_retain();
  }
  else
  {
    uint64_t v152 = v44;
    *(void *)(v44 + 264) = v240[1];
    swift_bridgeObjectRetain();
  }
  uint64_t v153 = v241;
  swift_bridgeObjectRelease();
  sub_1B696C828((uint64_t)v306);
  swift_release_n();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t))(v243 + 24);
  LODWORD(v237) = 1;
  uint64_t v63 = v240;
  uint64_t v44 = v152;
  unint64_t v66 = v65(v153, v243);
LABEL_13:
  uint64_t v67 = v238;
  uint64_t v68 = v244;
  LODWORD(v236) = sub_1B62EE518(v66, v238);
  uint64_t v244 = v68;
  *(void *)(v44 + 152) = v63[27];
  *(void *)(v44 + 144) = v63[26];
  *(unsigned char *)(v44 + 256) = *((unsigned char *)v63 + 224);
  *(unsigned char *)(v44 + 257) = *((unsigned char *)v63 + 226);
  long long v69 = *((_OWORD *)v63 + 7);
  v258[4] = *((_OWORD *)v63 + 6);
  v258[5] = v69;
  long long v259 = *((_OWORD *)v63 + 8);
  long long v70 = *((_OWORD *)v63 + 3);
  v258[0] = *((_OWORD *)v63 + 2);
  v258[1] = v70;
  long long v71 = *((_OWORD *)v63 + 5);
  v258[2] = *((_OWORD *)v63 + 4);
  v258[3] = v71;
  uint64_t v231 = v44 + 272;
  sub_1B62ED358((uint64_t)v258);
  uint64_t v72 = v67;
  uint64_t v73 = v65(v241, v243);
  swift_retain();
  unint64_t v74 = v73;
  uint64_t v75 = v244;
  sub_1B62EE5F4(v74, v67, v44);
  uint64_t v244 = v75;
  uint64_t v76 = v44;
  swift_release();
  uint64_t v77 = *(void **)(v242 + 8);
  sub_1B62E9D50(v77, (uint64_t)v269);
  sub_1B62EAE14((uint64_t)v269, (uint64_t)v272, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
  float v79 = 1.0;
  if ((v274 & 1) == 0)
  {
    uint64_t v78 = (const float *)v272;
    float32x2x2_t v308 = vld2_f32(v78);
    uint64_t v80 = (int8x16_t *)v273;
    int8x16_t v81 = *v80;
    int8x16_t v82 = (int8x16_t)v273[1];
    int8x16_t v83 = (int8x16_t)v273[2];
    float32x4_t v84 = (float32x4_t)vextq_s8(v82, v82, 8uLL);
    float32x4_t v85 = (float32x4_t)vextq_s8(v83, v83, 0xCuLL);
    float32x4_t v86 = (float32x4_t)vextq_s8(v82, v82, 0xCuLL);
    float32x4_t v87 = (float32x4_t)vextq_s8(v83, v83, 8uLL);
    float32x4_t v88 = (float32x4_t)vextq_s8(v83, v83, 4uLL);
    float32x4_t v89 = (float32x4_t)vextq_s8(v82, v82, 4uLL);
    int8x16_t v90 = (int8x16_t)vmlaq_f32(vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v81, v81, 8uLL), vmlaq_f32(vmulq_f32(v85, vnegq_f32(v89)), v88, v86)), vmlaq_f32(vmulq_f32(v87, vnegq_f32(v86)), v85, v84), (float32x4_t)vextq_s8(v81, v81, 4uLL)), vmlaq_f32(vmulq_f32(v88, vnegq_f32(v84)), v87, v89), (float32x4_t)vextq_s8(v81, v81, 0xCuLL));
    v81.i64[0] = vextq_s8(v90, v90, 8uLL).u64[0];
    float v79 = vaddv_f32(vsub_f32(vmul_f32(v308.val[0], (float32x2_t)vzip1_s32(*(int32x2_t *)v90.i8, *(int32x2_t *)v81.i8)), vmul_f32(v308.val[1], (float32x2_t)vzip2_s32(*(int32x2_t *)v90.i8, *(int32x2_t *)v81.i8))));
  }
  *(unsigned char *)(v76 + 176) = v79 < 0.0;
  uint64_t v91 = v239;
  if ((v237 & v236 & 1) == 0)
  {
    uint64_t v92 = *((void *)&v259 + 1);
    uint64_t v94 = v240;
    uint64_t v93 = v241;
    v240[17] = MEMORY[0x1E4FBC860];
    uint64_t v95 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v243 + 88))(v94, v91, v242, v93);
    if (!v95)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      v94[17] = v92;
      uint64_t v72 = v238;
      goto LABEL_26;
    }
    uint64_t v98 = v95;
    uint64_t v99 = v96;
    uint64_t v100 = v97;
    uint64_t v230 = v92;
    unint64_t v101 = v94[17];
    if (v101 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v223 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (!v223) {
        goto LABEL_20;
      }
    }
    else if (!*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_20:
      if ((v236 & 1) == 0)
      {
        v304[0] = v98;
        v304[1] = v99;
        v304[2] = v100;
        v304[3] = 0;
        char v305 = 0;
        swift_unknownObjectRetain();
        sub_1B62E9144((uint64_t)v304, 2, 0);
        swift_unknownObjectRelease();
        swift_unknownObjectRetain();
        sub_1B62E9144((uint64_t)v304, 2, 0);
        swift_unknownObjectRelease();
        swift_unknownObjectRetain();
        sub_1B62E9144((uint64_t)v304, 2, 0);
        swift_unknownObjectRelease();
      }
      uint64_t v91 = v239;
      if ((v237 & 1) == 0)
      {
        v302[0] = v98;
        v302[1] = v99;
        v302[2] = v100;
        v302[3] = 0;
        char v303 = 0;
        swift_unknownObjectRetain();
        sub_1B62E9144((uint64_t)v302, 2, 0);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      uint64_t v94 = v240;
      uint64_t v92 = v230;
      goto LABEL_25;
    }
    unint64_t v102 = swift_bridgeObjectRetain();
    sub_1B62E9BE4(v102);
    goto LABEL_20;
  }
LABEL_26:
  uint64_t v236 = a9;
  uint64_t v103 = v76;
  if ((BYTE2(v259) & 7) != 0)
  {
    v300[0] = xmmword_1B6E963A0;
    v300[1] = xmmword_1B6E963B0;
    char v301 = 0x80;
    sub_1B62E9144((uint64_t)v300, 6, 0);
  }
  unint64_t v104 = sub_1B62E9BCC((uint64_t)v77);
  uint64_t v106 = v242;
  uint64_t v105 = v243;
  if ((v104 & 0x100000000) == 0 || (unint64_t v104 = sub_1B62E9BCC(*(void *)(v242 + 32)), (v104 & 0x100000000) == 0)) {
    *(_DWORD *)(v103 + 24) = v104;
  }
  uint64_t v107 = sub_1B62EBAB4();
  uint64_t v108 = sub_1B62EC92C(v107);
  sub_1B62EAE14(v236, (uint64_t)v271, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v271[0])
  {
    long long v255 = v271[3];
    long long v256 = v271[4];
    long long v257 = v271[5];
    long long v252 = v271[0];
    long long v253 = v271[1];
    long long v254 = v271[2];
    sub_1B62F1D2C(v106, v108, v108, v91);
  }
  sub_1B62EE814(*(void *)(v106 + 32), (uint64_t)&v260);
  sub_1B62EAE14((uint64_t)&v260, (uint64_t)v267, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
  sub_1B62EAE14((uint64_t)v267, (uint64_t)v268, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
  if (sub_1B6388C10(v268) == 1) {
    return swift_release();
  }
  memcpy(v277, v268, sizeof(v277));
  v247[0] = v72;
  v247[1] = a10;
  uint64_t v227 = a10;
  long long v248 = xmmword_1B6E4F270;
  long long v249 = 0u;
  long long v250 = 0u;
  long long v251 = 0u;
  uint64_t v110 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(v105 + 80);
  swift_retain();
  v110(v103, v247, v91, v241, v105);
  uint64_t v111 = v268[45];
  uint64_t v229 = v103;
  if (v268[45])
  {
    v228.i64[0] = v268[46];
    uint64_t v230 = v268[47];
    int v112 = LOBYTE(v268[34]);
    uint64_t v113 = v268[56];
    if (!LOBYTE(v268[34])) {
      uint64_t v113 = 0;
    }
    uint64_t v114 = v268[35];
    uint64_t v115 = v268[36];
    uint64_t v116 = v268[38];
    uint64_t v117 = v268[36] + v268[38] * v113;
    if (v250 == 0)
    {
      uint64_t v295 = v268[35];
      uint64_t v296 = v117;
      uint64_t v297 = v268[38];
      uint64_t v298 = 0;
      char v299 = 0;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)&v295, 4, 0);
      swift_unknownObjectRelease();
      v288[0] = v111;
      v288[1] = v228.i64[0];
      v288[2] = v230;
      v288[3] = 0;
      char v289 = 0;
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)v288, 5, 0);
      swift_unknownObjectRelease();
      uint64_t v118 = v268[56];
      if (!v112) {
        uint64_t v118 = 0;
      }
      uint64_t v290 = v114;
      uint64_t v291 = v115 + v118 * v116;
      uint64_t v292 = v116;
      uint64_t v293 = 0;
      char v294 = 0;
      uint64_t v103 = v229;
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)&v290, 4, 0);
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      uint64_t v119 = v288;
    }
    else
    {
      uint64_t v295 = v268[35];
      uint64_t v296 = v117;
      uint64_t v297 = v268[38];
      uint64_t v298 = 0;
      uint64_t v120 = v229;
      char v299 = 0;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)&v295, 4, 0);
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)&v295, 4, 0);
      swift_unknownObjectRelease();
      uint64_t v103 = v120;
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)&v295, 4, 0);
      swift_unknownObjectRelease_n();
      uint64_t v290 = v111;
      uint64_t v291 = v228.i64[0];
      uint64_t v292 = v230;
      uint64_t v293 = 0;
      char v294 = 0;
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)&v290, 5, 0);
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)&v290, 5, 0);
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      uint64_t v119 = &v290;
    }
    sub_1B62E9144((uint64_t)v119, 5, 0);
    swift_unknownObjectRelease_n();
    uint64_t v105 = v243;
  }
  *(double *)v121.i64 = sub_1B62E9BFC();
  float32x4_t v228 = v121;
  long long v225 = v123;
  long long v226 = v122;
  long long v224 = v124;
  swift_retain();
  uint64_t v125 = (void *)sub_1B62F1868(0, 80);
  uint64_t v127 = v126;
  uint64_t v129 = v128;
  id v130 = objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode);
  uint64_t v230 = (uint64_t)v125;
  if (v130 != (id)2)
  {
    float32x4_t v133 = vmulq_f32(v228, v228);
    float v134 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v133, 2), vaddq_f32(v133, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v133.f32, 1))).f32[0]);
    uint64_t v135 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v136 = v125;
    uint64_t v137 = &v135[v127];
    long long v138 = v226;
    *(float32x4_t *)uint64_t v137 = v228;
    *((_OWORD *)v137 + 1) = v138;
    long long v139 = v224;
    *((_OWORD *)v137 + 2) = v225;
    *((_OWORD *)v137 + 3) = v139;
    *((float *)v137 + 16) = v134;
    *(void *)(v137 + 68) = *(void *)&v270[0];
    *((_DWORD *)v137 + 19) = DWORD2(v270[0]);
    swift_release();
    uint64_t v132 = v103;
    if (v237) {
      goto LABEL_56;
    }
LABEL_55:
    v286[0] = v125;
    v286[1] = v127;
    v286[2] = v129;
    v286[3] = 0;
    char v287 = 0;
    swift_unknownObjectRetain();
    sub_1B62E9144((uint64_t)v286, 3, 0);
    swift_unknownObjectRelease();
    goto LABEL_56;
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  *(void *)&long long v260 = 0;
  *((void *)&v260 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  int v131 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&long long v260 = 0;
  swift_retain();
  sub_1B6B33E34(v131, (uint64_t *)&v260, 0xD000000000000036, 0x80000001B6F3F110);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v132 = v229;
  uint64_t v125 = (void *)v230;
  if ((v237 & 1) == 0) {
    goto LABEL_55;
  }
LABEL_56:
  v284[0] = v125;
  v284[1] = v127;
  v284[2] = v129;
  v284[3] = 0;
  char v285 = 0;
  swift_unknownObjectRetain();
  sub_1B62E9144((uint64_t)v284, 3, 0);
  swift_unknownObjectRelease();
  uint64_t v140 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v105 + 64);
  uint64_t v141 = v245;
  uint64_t v142 = v241;
  uint64_t v237 = v105 + 64;
  v228.i64[0] = (uint64_t)v140;
  if (v140(v241, v105) || (sub_1B62FFC70() & 1) != 0)
  {
    uint64_t v143 = v268[22];
    unsigned __int8 v144 = ((uint64_t (*)(uint64_t, uint64_t))v228.i64[0])(v142, v105);
    if (!*(void *)(v143 + 16) || (unint64_t v145 = sub_1B62FFC08(v144), (v146 & 1) == 0))
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v151 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v260 = 0;
      swift_retain();
      sub_1B6B33E34(v151, (uint64_t *)&v260, 0xD00000000000001BLL, 0x80000001B6F3EFE0);
      swift_unknownObjectRelease();
      swift_release();
      goto LABEL_155;
    }
    __int16 v147 = (uint64_t *)(*(void *)(v143 + 56) + 24 * v145);
    uint64_t v148 = *v147;
    uint64_t v149 = v147[1];
    uint64_t v150 = v147[2];
    v234(v232, v245, v142);
    swift_unknownObjectRetain();
    if (swift_dynamicCast())
    {
      *(void *)(v132 + 32) = v148;
      *(void *)(v132 + 40) = v149;
      *(void *)(v132 + 48) = v150;
      swift_unknownObjectRelease();
      *(void *)(v132 + 56) = 1;
      *(void *)(v132 + 64) = v227;
    }
    else
    {
      v282[0] = v148;
      v282[1] = v149;
      v282[2] = v150;
      v282[3] = 0;
      char v283 = 0;
      if (v250 != 0)
      {
        swift_unknownObjectRetain();
        sub_1B62E9144((uint64_t)v282, 9, 0);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)v282, 9, 0);
      swift_unknownObjectRelease_n();
    }
    uint64_t v141 = v245;
  }
  v234(v233, v141, v142);
  if ((swift_dynamicCast() & 1) != 0 && v266 <= 1 && !*((void *)&v265 + 1))
  {
    if (!v268[24])
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v160 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v260 = 0;
      swift_retain();
      sub_1B6B33E34(v160, (uint64_t *)&v260, 0xD000000000000017, 0x80000001B6F3F0F0);
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_155;
    }
    int v154 = v264;
    int v155 = DWORD1(v264);
    int v156 = DWORD2(v264);
    int v157 = HIDWORD(v264);
    LODWORD(v235) = v265;
    uint64_t v278 = v268[24];
    long long v279 = *(_OWORD *)&v268[25];
    uint64_t v280 = 0;
    char v281 = 0;
    swift_unknownObjectRetain();
    sub_1B62E9144((uint64_t)&v278, 13, 0);
    swift_unknownObjectRelease();
    *(void *)(v132 + 136) = 0x100000001;
    if (v154)
    {
      BOOL v158 = 0;
      BOOL v159 = 0;
    }
    else
    {
      BOOL v159 = v155 != -1 || v156 != 0;
      BOOL v158 = v157 != -1 || v235 != 0;
    }
    *(void *)&long long v248 = v159 + v158 + v248;
  }
  *(void *)(v132 + 392) = 0;
  *(void *)(v132 + 400) = 0;
  *(void *)(v132 + 384) = 0;
  swift_unknownObjectRelease();
  int v164 = v250;
  int v165 = DWORD2(v250);
  if (v250 == 0)
  {
    if (v268[34])
    {
      if (*(void *)(v132 + 32))
      {
        unint64_t v166 = *(void *)(v132 + 64);
        if ((v166 & 0x8000000000000000) == 0 && !HIDWORD(v166))
        {
          unint64_t v167 = *(void *)(v132 + 120);
          if ((v167 & 0x8000000000000000) == 0 && !HIDWORD(v167))
          {
            unint64_t v168 = *(void *)(v132 + 72);
            if ((v168 & 0x8000000000000000) == 0 && !HIDWORD(v168))
            {
              unint64_t v169 = *(void *)(v132 + 128);
              if ((v169 & 0x8000000000000000) == 0 && !HIDWORD(v169))
              {
                uint64_t v234 = *(void (**)(char *, uint64_t, uint64_t))(v132 + 112);
                swift_retain();
                uint64_t v170 = sub_1B62F1868(0, 20);
                uint64_t v235 = v171;
                uint64_t v173 = v172;
                id v174 = objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode);
                uint64_t v233 = v173;
                if (v174 == (id)2)
                {
                  uint64_t v175 = (void (*)(char *, uint64_t, uint64_t))v170;
                  if (qword_1EB9852D0 != -1) {
                    swift_once();
                  }
                  *(void *)&v270[0] = 0;
                  *((void *)&v270[0] + 1) = 0xE000000000000000;
                  swift_retain();
                  sub_1B6E328C8();
                  swift_bridgeObjectRelease();
                  int v176 = sub_1B6E32148();
                  if (qword_1EB9854F8 != -1) {
                    swift_once();
                  }
                  *(void *)&v270[0] = 0;
                  swift_retain();
                  sub_1B6B33E34(v176, (uint64_t *)v270, 0xD00000000000004FLL, 0x80000001B6F3F0A0);
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v234 = v175;
                  *(void *)&long long v260 = v175;
                  LODWORD(v232) = 1;
LABEL_136:
                  uint64_t v132 = v229;
                  goto LABEL_137;
                }
                uint64_t v193 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
                __int16 v194 = (void *)v170;
                uint64_t v195 = v193;
                __int16 v196 = v194;
                int v197 = (int)v234;
                uint64_t v198 = &v195[v235];
                *(_DWORD *)uint64_t v198 = v166;
                *((_DWORD *)v198 + 1) = v167;
                *((_DWORD *)v198 + 2) = v168;
                *((_DWORD *)v198 + 3) = v197;
                *((_DWORD *)v198 + 4) = v169;
                swift_release();
                uint64_t v234 = v196;
                *(void *)&long long v260 = v196;
                LODWORD(v232) = 1;
LABEL_137:
                uint64_t v204 = v235;
                unint64_t v205 = v233;
                *((void *)&v260 + 1) = v235;
                *(void *)&long long v261 = v233;
                unint64_t v206 = (void *)sub_1B6802298(0x657475706D6F43, 0xE700000000000000, 0);
                uint64_t v207 = (void *)sub_1B6E31768();
                objc_msgSend(v206, sel_pushDebugGroup_, v207);

                sub_1B696B6D8((uint64_t)v206, (uint64_t)v247, (uint64_t)v277, v132, (uint64_t)&v260, (char)v232);
                objc_msgSend(v206, sel_popDebugGroup);
                swift_unknownObjectRelease();
                *(void *)(v132 + 384) = v234;
                *(void *)(v132 + 392) = v204;
                *(void *)(v132 + 400) = v205;
                swift_unknownObjectRelease();
                goto LABEL_138;
              }
            }
          }
        }
      }
      else
      {
        unint64_t v183 = *(void *)(v132 + 104);
        if ((v183 & 0x8000000000000000) == 0 && !HIDWORD(v183))
        {
          unint64_t v184 = *(void *)(v132 + 120);
          if ((v184 & 0x8000000000000000) == 0 && !HIDWORD(v184))
          {
            unint64_t v185 = *(void *)(v132 + 112);
            if ((v185 & 0x8000000000000000) == 0 && !HIDWORD(v185))
            {
              unint64_t v186 = *(void *)(v132 + 128);
              if ((v186 & 0x8000000000000000) == 0 && !HIDWORD(v186))
              {
                swift_retain();
                uint64_t v187 = sub_1B62F1868(0, 16);
                uint64_t v235 = v188;
                uint64_t v190 = v189;
                id v191 = objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode);
                uint64_t v233 = v190;
                if (v191 == (id)2)
                {
                  uint64_t v234 = (void (*)(char *, uint64_t, uint64_t))v187;
                  if (qword_1EB9852D0 != -1) {
                    swift_once();
                  }
                  *(void *)&v270[0] = 0;
                  *((void *)&v270[0] + 1) = 0xE000000000000000;
                  swift_retain();
                  sub_1B6E328C8();
                  swift_bridgeObjectRelease();
                  int v192 = sub_1B6E32148();
                  if (qword_1EB9854F8 != -1) {
                    swift_once();
                  }
                  *(void *)&v270[0] = 0;
                  swift_retain();
                  sub_1B6B33E34(v192, (uint64_t *)v270, 0xD000000000000048, 0x80000001B6F3F050);
                  swift_release();
                  swift_release();
                  swift_release();
                  LODWORD(v232) = 0;
                  *(void *)&long long v260 = v234;
                }
                else
                {
                  uint64_t v199 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
                  uint64_t v200 = (void *)v187;
                  uint64_t v201 = v199;
                  uint64_t v202 = v200;
                  uint64_t v203 = &v201[v235];
                  *(_DWORD *)uint64_t v203 = v183;
                  *((_DWORD *)v203 + 1) = v184;
                  *((_DWORD *)v203 + 2) = v185;
                  *((_DWORD *)v203 + 3) = v186;
                  swift_release();
                  LODWORD(v232) = 0;
                  uint64_t v234 = v202;
                  *(void *)&long long v260 = v202;
                }
                goto LABEL_136;
              }
            }
          }
        }
      }
      sub_1B6E32BD8();
      __break(1u);
      goto LABEL_162;
    }
  }
  else
  {
    LODWORD(v177) = v251 + DWORD2(v251) * v227;
    DWORD1(v177) = 1;
    *((void *)&v177 + 1) = 1;
    *(_OWORD *)(v132 + 224) = v177;
    *(_OWORD *)(v132 + 240) = xmmword_1B6E963C0;
    if (LOBYTE(v268[34]) == 1)
    {
      LODWORD(v232) = *(void *)(v132 + 32) != 0;
      swift_retain();
      uint64_t v178 = sub_1B62F1868(0, 12);
      uint64_t v235 = v179;
      uint64_t v233 = v180;
      swift_unknownObjectRetain();
      swift_release();
      uint64_t v234 = (void (*)(char *, uint64_t, uint64_t))v178;
      *(void *)&long long v260 = v178;
      goto LABEL_137;
    }
  }
  uint64_t v181 = v227;
  *(void *)(v132 + 104) = v249 + *((void *)&v249 + 1) * v227;
  LODWORD(v182) = v164 + v165 * v181;
  DWORD1(v182) = 1;
  *(void *)(v132 + 120) = v248 + *((void *)&v248 + 1) * v181;
  *((void *)&v182 + 1) = 1;
  *(_OWORD *)(v132 + 208) = v182;
LABEL_138:
  if (!a13)
  {
    uint64_t v235 = a12;
    BOOL v208 = a12 == 0;
LABEL_142:
    LODWORD(v234) = v208;
    if (qword_1EB97DBA0 != -1) {
      swift_once();
    }
    *(void *)&long long v260 = qword_1EB997A00;
    MEMORY[0x1F4188790](qword_1EB997A00, v163);
    uint64_t v210 = v238;
    uint64_t v209 = v239;
    long long v211 = *(void **)(v238 + 176);
    swift_retain();
    swift_retain();
    sub_1B636E6CC((uint64_t)&_s21DrawCallEntityClassesVN, (uint64_t)&off_1F0F5EEB0, v211, (void (*)(uint64_t))sub_1B636EA8C);
    swift_release();
    uint64_t v212 = v260;
    if ((a16 & 1) == 0)
    {
      uint64_t v244 = v260;
      if ((a17 & 1) != 0 && ((uint64_t (*)(uint64_t, uint64_t))v228.i64[0])(v241, v243))
      {
        uint64_t v213 = sub_1B68030CC(a18);
        if (v213)
        {
          v275[0] = v213;
          v275[1] = v214;
          v275[2] = v215;
          v275[3] = 0;
          char v276 = 0;
          swift_unknownObjectRetain();
          sub_1B62E9144((uint64_t)v275, 9, 0);
          swift_unknownObjectRelease();
        }
        sub_1B62EAE14(v236, (uint64_t)v270, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        if (*(void *)&v270[0])
        {
          long long v262 = v270[2];
          long long v263 = v270[3];
          long long v264 = v270[4];
          long long v265 = v270[5];
          long long v260 = v270[0];
          long long v261 = v270[1];
          swift_retain();
          uint64_t v216 = v238;
          swift_retain();
          uint64_t v245 = a15;
          uint64_t v217 = v244;
          swift_retain();
          uint64_t v218 = v239;
          swift_retain();
          uint64_t v219 = v242;
          sub_1B62F6B80(v242);
          char v246 = (char)v234;
          sub_1B6846164((unsigned __int16 **)&v260, v216, v217, v235 | ((unint64_t)v234 << 32), a14, v245, v132, v218, v219, (uint64_t)v240, a19 & 1);
          sub_1B62F648C(v219);
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          sub_1B62EDED8(v267);
          swift_release();
LABEL_157:
          swift_release();
          return swift_release();
        }
        swift_release();
        swift_unknownObjectRelease();
LABEL_156:
        sub_1B62EDED8(v267);
        goto LABEL_157;
      }
      uint64_t v220 = a15 - a14;
      if (a15 - a14 == a18) {
        uint64_t v220 = v227;
      }
      *(void *)(v132 + 120) = v220;
      *(void *)(v132 + 128) = a14;
      uint64_t v210 = v238;
      uint64_t v209 = v239;
      uint64_t v212 = v244;
    }
    uint64_t v221 = *(void *)(*(void *)(v210 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                     + 8 * *(void *)thread_worker_index()
                     + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v222 = v242;
    sub_1B62F6B80(v242);
    LOBYTE(v260) = (_BYTE)v234;
    sub_1B62EF824(0, v212, 1, v235 | ((unint64_t)v234 << 32), 1, v221, v210, v222, v132, v209, v240, a19 & 1);
    swift_release();
    swift_release();
    sub_1B62F648C(v222);
    swift_release();
    swift_unknownObjectRelease();
LABEL_155:
    swift_release();
    goto LABEL_156;
  }
  if (a13 == 2)
  {
    uint64_t v235 = 0;
    BOOL v208 = 1;
    goto LABEL_142;
  }
LABEL_162:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62E9144(uint64_t a1, uint64_t a2, char a3)
{
  sub_1B62E6FCC(a1, (uint64_t)v34);
  uint64_t v7 = v34[0];
  uint64_t v8 = v34[1];
  uint64_t v10 = v34[2];
  uint64_t v9 = v34[3];
  char v11 = v35;
  uint64_t v32 = v3;
  int v12 = (void *)*v3;
  uint64_t v13 = sub_1B62E9528(a2, *v3);
  if (v14)
  {
    sub_1B62E94C8(a1);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B62E95AC(0, v12[2] + 1, 1, v12);
      int v12 = (void *)result;
    }
    unint64_t v30 = v12[2];
    unint64_t v29 = v12[3];
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B62E95AC(v29 > 1, v30 + 1, 1, v12);
      int v12 = (void *)result;
    }
    _OWORD v12[2] = v30 + 1;
    uint64_t v31 = &v12[6 * v30];
    v31[4] = v7;
    v31[5] = v8;
    v31[6] = v10;
    v31[7] = v9;
    *((unsigned char *)v31 + 64) = v11;
    v31[9] = a2;
    *long long v3 = (uint64_t)v12;
  }
  else
  {
    uint64_t v15 = v13;
    uint64_t v16 = &v12[6 * v13];
    if (v16[9] == a2)
    {
      if (a3)
      {
        uint64_t v17 = v13;
        int v18 = v16 + 4;
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        *(void *)&long long v36 = 0;
        *((void *)&v36 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        long long v33 = v36;
        sub_1B6E31948();
        char v19 = *((unsigned char *)v18 + 32);
        long long v20 = *((_OWORD *)v18 + 1);
        long long v36 = *(_OWORD *)v18;
        long long v37 = v20;
        char v38 = v19;
        sub_1B6E32B18();
        sub_1B6E31948();
        sub_1B62E6FCC(a1, (uint64_t)&v36);
        sub_1B6E32B18();
        sub_1B6E31948();
        *(void *)&long long v36 = a2;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        int v21 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        *(void *)&long long v36 = 0;
        swift_retain();
        sub_1B6B33E34(v21, (uint64_t *)&v36, v33, *((uint64_t *)&v33 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v15 = v17;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v12 = sub_1B6C168C8(v12);
      }
      id v22 = &v12[6 * v15];
      uint64_t v23 = v22[4];
      uint64_t v24 = v22[5];
      v22 += 4;
      uint64_t v25 = v22[2];
      uint64_t v26 = v22[3];
      unsigned __int8 v27 = *((unsigned char *)v22 + 32);
      sub_1B62E94C8(a1);
      sub_1B62E6BD4(v23, v24, v25, v26, v27);
      uint64_t result = sub_1B62E6FCC(a1, (uint64_t)v22);
      v22[5] = a2;
      uint64_t *v32 = (uint64_t)v12;
    }
    else
    {
      *(void *)&long long v36 = v7;
      *((void *)&v36 + 1) = v8;
      *(void *)&long long v37 = v10;
      *((void *)&v37 + 1) = v9;
      char v38 = v11;
      uint64_t v39 = a2;
      sub_1B62E94C8(a1);
      return (uint64_t)sub_1B62E99E0(v15, v15, &v36);
    }
  }
  return result;
}

uint64_t sub_1B62E94C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62E9500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  unsigned int v5 = a5 >> 6;
  if (v5 == 2) {
    return swift_bridgeObjectRetain();
  }
  if (v5 <= 1) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1B62E9528(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t result = 0;
    uint64_t v5 = v2 - 1;
    do
    {
      while (1)
      {
        uint64_t v6 = result + (v5 - result) / 2;
        uint64_t v7 = *(void *)(a2 + 32 + 48 * v6 + 40);
        if (v7 >= a1) {
          break;
        }
        uint64_t result = v6 + 1;
        if (v5 < v6 + 1) {
          goto LABEL_7;
        }
      }
      if (v7 <= a1)
      {
        result += (v5 - result) / 2;
        return result;
      }
      uint64_t v5 = v6 - 1;
    }
    while (v6 - 1 >= result);
LABEL_7:
    if (result < v2) {
      return result;
    }
  }
  return 0;
}

void *sub_1B62E95AC(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    char v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B62E9738(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62E96B8();
  char v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  _OWORD v11[2] = v9;
  v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
    memmove(v13, a4 + 4, 48 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1B62E96B8()
{
  if (!qword_1EB980B50)
  {
    sub_1B62E98B4(255, &qword_1EB97E820);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980B50);
    }
  }
}

uint64_t sub_1B62E9730()
{
  return *(void *)(v0 + 28);
}

uint64_t sub_1B62E9738(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 48 * (a2 - a1), a4 + 32 + 48 * a1 < v4) ? (v5 = a4 + 32 + 48 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62E98B4(0, &qword_1EB97E820);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

void sub_1B62E9854(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1B62E98B4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_1B62E9908(uint64_t a1, uint64_t (*a2)(void))
{
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    uint64_t v3 = 0;
    LOBYTE(v4) = 1;
    return v3 | ((unint64_t)v4 << 32);
  }
  uint64_t v3 = 0;
  LOBYTE(v4) = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      unint64_t v7 = a2(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32));
      uint64_t v4 = HIDWORD(v7) & 1;
      uint64_t v3 = v7;
      return v3 | ((unint64_t)v4 << 32);
    }
    goto LABEL_2;
  }
  return v3 | ((unint64_t)v4 << 32);
}

void *sub_1B62E99E0(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v7 = a2 - a1;
  uint64_t v8 = 1 - (a2 - a1);
  uint64_t v9 = *(void **)v3;
  uint64_t v10 = *(void *)(*(void *)v3 + 16);
  uint64_t v11 = v10 + v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11) {
      uint64_t v13 = v10 + v8;
    }
    else {
      uint64_t v13 = v10;
    }
    uint64_t v9 = sub_1B62E95AC(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  char v14 = v9 + 4;
  uint64_t v15 = &v9[6 * a1 + 4];
  sub_1B62E9854(0, &qword_1EB97E820);
  uint64_t result = (void *)swift_arrayDestroy();
  if (v7 == 1) {
    goto LABEL_13;
  }
  uint64_t v17 = v9[2];
  if (v17 - a2 >= 0)
  {
    uint64_t result = v15 + 3;
    int v18 = &v14[6 * a2];
    if (v15 + 3 != v18 || result >= &v14[6 * v17]) {
      uint64_t result = memmove(result, v18, 48 * (v17 - a2));
    }
    v9[2] += v8;
LABEL_13:
    long long v19 = a3[1];
    *uint64_t v15 = *a3;
    v15[1] = v19;
    _OWORD v15[2] = a3[2];
    *(void *)uint64_t v3 = v9;
    return result;
  }
  uint64_t result = (void *)sub_1B6E32C88();
  __break(1u);
  return result;
}

unint64_t sub_1B62E9B54(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for RenderingOrder)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

unint64_t sub_1B62E9BCC(uint64_t a1)
{
  return sub_1B62E9908(a1, (uint64_t (*)(void))sub_1B62E9B54);
}

uint64_t sub_1B62E9BE4(unint64_t a1)
{
  return sub_1B62F24A4(a1, (void (*)(uint64_t, void, unint64_t))sub_1B62F2658);
}

double sub_1B62E9BFC()
{
  if (sub_1B62E9F00((uint64_t (*)(void, void, uint64_t))sub_1B62EA0CC))
  {
    uint64_t v1 = (void *)v0[4];
    swift_retain();
    sub_1B62E9D50(v1, (uint64_t)&v5);
    swift_release();
    sub_1B62E9D68((uint64_t)&v5, (uint64_t)&v6, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
    if ((v7 & 1) == 0) {
      return *(double *)&v6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(*v0 + 176);
  swift_retain();
  swift_retain();
  sub_1B6346CF0(v3, (uint64_t)&v5);
  double v4 = v5;
  swift_release();
  swift_release();
  sub_1B633C598((uint64_t)&v5, (uint64_t)&v6);
  if (v7)
  {
LABEL_5:
    *(void *)&double result = 1065353216;
    return result;
  }
  return v4;
}

void *sub_1B62E9D50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B633C400(a1, (void *(*)(_OWORD *__return_ptr, void, __n128))sub_1B633C4F4, a2);
}

uint64_t sub_1B62E9D68(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62E9E68(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62E9DE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62F8038(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B62E9E68(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62E9EB4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62E9F00(uint64_t (*a1)(void, void, uint64_t))
{
  uint64_t v3 = *v1;
  int v4 = *((_DWORD *)v1 + 9);
  uint64_t v5 = *((int *)v1 + 8);
  swift_retain();
  BOOL v6 = v5 == -1 && v4 == 0;
  if (v6
    || (v5 & 0x80000000) != 0
    || *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v5
    || ((uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 != -1)
      ? (BOOL v8 = *(_DWORD *)(v7 + 12 * (int)v5 + 8) == v4)
      : (BOOL v8 = 1),
        !v8
     || (char v9 = a1(*(void *)(*(void *)(v3 + 136) + 8 * *(int *)(v7 + 12 * (int)v5) + 32), *(unsigned __int16 *)(v7 + 12 * (int)v5 + 4), 88), v9 == 2)))
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    char v10 = v9;
    swift_release();
    return v10 & 1;
  }
  return result;
}

uint64_t sub_1B62EA0CC(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 2;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterDescription; i += 5)
  {
    if (!--v4) {
      return 2;
    }
  }
  return *(unsigned __int8 *)(*(void *)(a1 + 128) + *i + a2 * a3 + 56);
}

uint64_t sub_1B62EA120()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1B62EA128(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v50 = (uint64_t *)*v1;
  uint64_t v4 = v50[10];
  uint64_t v5 = sub_1B6E324B8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
  uint64_t v52 = (char *)&v44 - v9;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(*a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  swift_retain();
  if (v15)
  {
    uint64_t v45 = v6;
    uint64_t v46 = v5;
    uint64_t v48 = v13;
    uint64_t v49 = v10;
    uint64_t v51 = a1;
    uint64_t v47 = v4;
    sub_1B62EAE14(v15 + 624, (uint64_t)v53, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
    sub_1B62EAE14((uint64_t)v53, (uint64_t)v54, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
    if (sub_1B6388C10(v54) == 1)
    {
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    uint64_t v16 = v54[1];
    uint64_t ObjectType = swift_getObjectType();
    int v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 144);
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v19 = v18(ObjectType, v16);
    swift_unknownObjectRelease();
    long long v20 = v51;
    uint64_t v21 = (uint64_t)v52;
    if (BYTE4(v19) != 2 || v19)
    {
      sub_1B62EA708((uint64_t)(v51 + 5), (uint64_t)v55);
      sub_1B62EA708((uint64_t)v55, (uint64_t)&v56);
      if (BYTE4(v19))
      {
        if (BYTE4(v19) == 1 || (v57 & 1) == 0) {
          goto LABEL_19;
        }
      }
      else if ((v57 & 1) != 0 || v56 != v19)
      {
        goto LABEL_19;
      }
    }
    unint64_t v22 = v20[1];
    BOOL v23 = sub_1B62EC0CC((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAABA0, v22);
    uint64_t v24 = v47;
    if (!v23) {
      goto LABEL_21;
    }
    uint64_t v25 = swift_retain();
    uint64_t v26 = sub_1B63422CC(v25);
    char v28 = v27;
    swift_release();
    if (v28)
    {
      uint64_t v21 = (uint64_t)v52;
      goto LABEL_21;
    }
    char v29 = sub_1B69DF420(v51[4], v26);
    uint64_t v21 = (uint64_t)v52;
    if (v29)
    {
LABEL_21:
      uint64_t v52 = 0;
      uint64_t v31 = *(void *)(*(void *)(v14 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                      + 8 * *(void *)thread_worker_index()
                      + 8);
      uint64_t v32 = v50[11];
      sub_1B62EB448(v22, v24, v21);
      uint64_t v33 = v49;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v21, 1, v24) == 1)
      {
        swift_release();
        swift_release();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v21, v46);
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v48, v21, v24);
      int v34 = sub_1B62EA764(v22);
      uint64_t v35 = sub_1B62EB864(v22);
      if (v34 == *((_DWORD *)v2 + 4))
      {
        uint64_t v37 = (uint64_t)v51;
        char v38 = v48;
        uint64_t v39 = v31;
        if ((v35 & 1) == 0) {
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v35 = sub_1B62E3530(v14, v22);
        char v38 = v48;
        uint64_t v39 = v31;
      }
      uint64_t v50 = &v44;
      MEMORY[0x1F4188790](v35, v36);
      *(&v44 - 8) = v24;
      *(&v44 - 7) = v32;
      *(&v44 - 6) = (uint64_t)v38;
      *(&v44 - 5) = v40;
      *(&v44 - 4) = v15;
      *(&v44 - 3) = v14;
      uint64_t v43 = v39;
      sub_1B635A534(v22, (void (*)(uint64_t))sub_1B6303B50);
      int v41 = sub_1B62EA764(v22);
      char v38 = v48;
      uint64_t v37 = (uint64_t)v51;
      *((_DWORD *)v2 + 4) = v41;
LABEL_28:
      uint64_t v42 = v37;
      sub_1B62EA7E0(v37, v15, v14, v39, 0, v24, v32);
      if (*(unsigned char *)(v15 + 537) == 1 && (unint64_t)qword_1E9DD6490 <= 0x2540BE409) {
        sub_1B62EA7E0(v42, v15, v14, v39, 1, v24, v32);
      }
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v38, v24);
    }
LABEL_19:
    swift_release();
    return swift_release();
  }

  return swift_release();
}

uint64_t sub_1B62EA708(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B62EA764(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 4294967294;
  }
  uint64_t result = 4294967294;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return *(__int16 *)(v5 + 12 * (int)a1 + 6);
    }
  }
  return result;
}

uint64_t *sub_1B62EA7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v13 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  uint64_t v14 = *(unsigned int *)(a1 + 36);
  uint64_t v15 = *(int *)(a1 + 32);
  swift_retain();
  swift_retain();
  BOOL v16 = v15 == -1 && v14 == 0;
  if (!v16 && (v15 & 0x80000000) == 0 && *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v15)
  {
    uint64_t v17 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    BOOL v18 = v14 == -1 || *(_DWORD *)(v17 + 12 * (int)v15 + 8) == v14;
    if (v18 && *(unsigned char *)(*(void *)(*(void *)(a3 + 136) + 8 * *(int *)(v17 + 12 * (int)v15) + 32) + 120) != 1)
    {
      swift_release();
      return (uint64_t *)swift_release();
    }
  }
  uint64_t v45 = v13;
  uint64_t v46 = a4;
  uint64_t v47 = v7;
  int v48 = a5;
  long long v19 = *(_OWORD *)(a1 + 64);
  v58[0] = *(_OWORD *)(a1 + 48);
  v58[1] = v19;
  uint64_t v59 = *(void *)(a1 + 80);
  uint64_t v51 = a2;
  sub_1B62EAE14(a2 + 624, (uint64_t)v53, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  sub_1B62EAE14((uint64_t)v53, (uint64_t)v54, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  if (sub_1B6388C10(v54) == 1)
  {
    uint64_t result = (uint64_t *)sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  uint64_t v20 = v54[1];
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 144);
  sub_1B62CA090((uint64_t)v58);
  swift_unknownObjectRetain();
  uint64_t v23 = v22(ObjectType, v20);
  swift_unknownObjectRelease();
  uint64_t v24 = sub_1B62EAF40(DWORD2(v58[0]) | ((unint64_t)BYTE12(v58[0]) << 32), v23 & 0xFFFFFFFFFFLL);
  if ((~v24 & 0xFF00000000) == 0)
  {
    sub_1B62CA064((uint64_t)v58);
    swift_release();
    return (uint64_t *)swift_release();
  }
  uint64_t v25 = v15;
  sub_1B62C9DA8(a3, (uint64_t)v58, v24 & 0xFFFFFFFFFFLL, v55);
  uint64_t v44 = v55[8];
  uint64_t v26 = v55[11];
  sub_1B62EAE14((uint64_t)v55, (uint64_t)v57, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v57[0]) {
    uint64_t v27 = v57[10];
  }
  else {
    uint64_t v27 = 0;
  }
  sub_1B62F6B80(a1);
  uint64_t v28 = sub_1B62EB01C(v25 | (v14 << 32), a3, a1, v27);
  char v30 = v29;
  sub_1B62F648C(a1);
  if ((v30 & 1) != 0 || v28 < 1)
  {
    sub_1B632F170(v55);
    goto LABEL_24;
  }
  uint64_t v43 = (_DWORD *)v26;
  unint64_t v31 = *(void *)(a1 + 8);
  uint64_t v32 = sub_1B62F69F0(v31);
  int v34 = v33;
  if (v33)
  {
    unint64_t v35 = v31;
    uint64_t v44 = 0;
    goto LABEL_29;
  }
  uint64_t v42 = v32;
  sub_1B62EAE14((uint64_t)v55, (uint64_t)v56, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v56[0])
  {
LABEL_24:
    swift_release();
    sub_1B62CA064((uint64_t)v58);
    return (uint64_t *)swift_release();
  }
  uint64_t v41[3] = v34;
  v56[8] = v56[2];
  v56[9] = v56[3];
  v56[10] = v56[4];
  v56[11] = v56[5];
  v56[6] = v56[0];
  v56[7] = v56[1];
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v44 = sub_1B696B4B4(v42);
  char v38 = v37;
  sub_1B632F170(v55);
  if ((v38 & 1) == 0)
  {
    unint64_t v35 = v31;
LABEL_29:
    uint64_t v43 = v41;
    uint64_t v39 = MEMORY[0x1F4188790](v35, v33);
    if (sub_1B62EE328(v39, (void (*)(uint64_t))sub_1B62EE448))
    {
      sub_1B632F170(v55);
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v40 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v52 = 0;
      swift_retain();
      sub_1B6B33E34(v40, &v52, 0xD000000000000018, 0x80000001B6F3EFC0);
      swift_release();
      sub_1B632F170(v55);
      swift_release();
    }
    goto LABEL_24;
  }
  swift_release();
  sub_1B62CA064((uint64_t)v58);
  swift_release();
  return sub_1B632F170(v55);
}

uint64_t sub_1B62EAD94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62EAE94(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B62EAE14(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62EAEE0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B62EAE94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62EAEE0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1B62EAF30()
{
  return *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int8 *)(v0 + 76) << 32);
}

uint64_t sub_1B62EAF40(uint64_t a1, uint64_t a2)
{
  if (!a1 && BYTE4(a1) == 2)
  {
    if (a2) {
      BOOL v2 = 0;
    }
    else {
      BOOL v2 = BYTE4(a2) == 2;
    }
    uint64_t v3 = a2 & 0xFFFFFFFFFFLL;
    uint64_t v4 = 0x200000000;
    goto LABEL_7;
  }
  if (BYTE4(a2))
  {
    if (BYTE4(a2) == 2) {
      return a1 & 0xFFFFFFFFFFLL;
    }
  }
  else
  {
    uint64_t v3 = 0xFF00000000;
    if (!BYTE4(a1))
    {
      uint64_t v4 = a1;
      BOOL v2 = a1 == a2;
LABEL_7:
      if (v2) {
        return v4;
      }
      return v3;
    }
    if (BYTE4(a1) != 1) {
      return v3;
    }
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62EB01C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v5 == -1 || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == v5) {
      return sub_1B62EB0F0(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 656, a3, a4);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B62EB0F0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v10 = *(void *)(a1 + 128) + *i + a2 * a3;
  if (*(unsigned char *)(v10 + 272) == 1)
  {
    if (*(void *)(v10 + 360)) {
      return *(void *)(v10 + 464);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t result = sub_1B62EB1B4();
    if (v11) {
      return a5;
    }
  }
  return result;
}

uint64_t sub_1B62EB1B4()
{
  uint64_t v1 = *v0;
  int v2 = *((_DWORD *)v0 + 9);
  uint64_t v3 = *((int *)v0 + 8);
  swift_retain();
  BOOL v4 = v3 == -1 && v2 == 0;
  if (v4
    || (v3 & 0x80000000) != 0
    || *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v3
    || ((uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v2 != -1)
      ? (BOOL v6 = *(_DWORD *)(v5 + 12 * (int)v3 + 8) == v2)
      : (BOOL v6 = 1),
        !v6
     || (uint64_t v7 = sub_1B62EB384(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)v3) + 32), *(_WORD *)(v5 + 12 * (int)v3 + 4), 656), (v8 & 0x100) != 0)))
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    uint64_t v9 = v7;
    swift_release();
    return v9;
  }
  return result;
}

uint64_t sub_1B62EB384(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  return *(void *)(*(void *)(a1 + 128) + *i + a2 * a3 + 232);
}

uint64_t getEnumTagSinglePayload for ParticleQuadRenderer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 139)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 44);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1B62EB448@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v8 = HIDWORD(a1);
  sub_1B62CD84C(a2);
  if ((a1 != -1 || v8)
    && (uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v8 == -1 || *(_DWORD *)(v9 + 12 * (int)a1 + 8) == v8) {
      return sub_1B62EB594(*(void *)(*(void *)(v4 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), a2, a3);
    }
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);

  return v10(a3, 1, 1, a2);
}

uint64_t sub_1B62EB594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 56;
    while (*(void *)(v7 - 24) != a2)
    {
      v7 += 40;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    sub_1B6E325B8();
    uint64_t v8 = 0;
  }
  else
  {
LABEL_5:
    uint64_t v8 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v8, 1, a2);
}

uint64_t storeEnumTagSinglePayload for ParticleQuadRenderer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 138) = 0;
    *(_WORD *)(result + 136) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 139) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 139) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 44) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1B62EB6CC(uint64_t a1, uint64_t (*a2)(void, uint64_t))
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a2(*(__int16 *)(v3 + 12 * (int)a1 + 4), 2) & 1;
  }
  else
  {
    return 0;
  }
}

BOOL sub_1B62EB778(uint64_t a1, char a2)
{
  int v5 = *(unsigned __int8 *)(v2[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
  uint64_t v6 = swift_retain();
  if (v5 == 4)
  {
    char v7 = *(unsigned char *)(v6 + 225);
    uint64_t v8 = *(void *)(v6 + 216);
    swift_release();
    BOOL v9 = v8 > 1;
    if ((v7 & 1) == 0) {
      BOOL v9 = v8 > 0;
    }
    uint64_t v10 = v2[24];
    if (v10) {
      goto LABEL_5;
    }
    return 0;
  }
  swift_release();
  BOOL v9 = 1;
  uint64_t v10 = v2[24];
  if (!v10) {
    return 0;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v10 + 8 * (a1 >> 6)) & (1 << a1);
  BOOL result = v11 != 0;
  if (a2 != 2) {
    BOOL v9 = a2 == 1;
  }
  if (v11) {
    BOOL v13 = !v9;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    *(void *)(v2[26] + 8 * (a1 >> 6)) |= 1 << a1;
    return 1;
  }
  return result;
}

uint64_t sub_1B62EB864(uint64_t a1)
{
  return sub_1B62EB6CC(a1, (uint64_t (*)(void, uint64_t))sub_1B62EB860);
}

uint64_t sub_1B62EB87C(uint64_t (*a1)(void, void, uint64_t))
{
  uint64_t v3 = *v1;
  int v4 = *((_DWORD *)v1 + 9);
  uint64_t v5 = *((int *)v1 + 8);
  swift_retain();
  BOOL v6 = v5 == -1 && v4 == 0;
  if (v6
    || (v5 & 0x80000000) != 0
    || *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v5
    || ((uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 != -1)
      ? (BOOL v8 = *(_DWORD *)(v7 + 12 * (int)v5 + 8) == v4)
      : (BOOL v8 = 1),
        !v8
     || (uint64_t v9 = a1(*(void *)(*(void *)(v3 + 136) + 8 * *(int *)(v7 + 12 * (int)v5) + 32), *(unsigned __int16 *)(v7 + 12 * (int)v5 + 4), 656)) == 0))
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    uint64_t v10 = v9;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_1B62EBA4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for EmitterRuntime; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_retain();
}

uint64_t sub_1B62EBAB4()
{
  return sub_1B62EB87C((uint64_t (*)(void, void, uint64_t))sub_1B62EBA4C);
}

void *sub_1B62EBACC(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  long long v7 = a1[7];
  v51[6] = a1[6];
  v51[7] = v7;
  v51[8] = a1[8];
  long long v8 = a1[3];
  v51[2] = a1[2];
  v51[3] = v8;
  long long v9 = a1[5];
  v51[4] = a1[4];
  v51[5] = v9;
  long long v10 = a1[1];
  v51[0] = *a1;
  v51[1] = v10;
  uint64_t v11 = *(void **)(a2 + 16);
  if (!v11) {
    return 0;
  }
  uint64_t v14 = v11[22];
  if (v14 <= 0)
  {
    uint64_t v14 = v11[25];
    if (v14 < 1) {
      return 0;
    }
  }
  swift_retain();
  swift_retain();
  uint64_t v15 = (void *)sub_1B62F1868(0, v14);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_unknownObjectRetain();
  swift_release();
  if (v11[21])
  {
    uint64_t v20 = (void *)v11[21];
  }
  else
  {
    uint64_t v20 = (void *)v11[24];
    if (!v20)
    {
      long long v29 = a1[7];
      long long v48 = a1[6];
      long long v49 = v29;
      long long v50 = a1[8];
      long long v30 = a1[3];
      long long v44 = a1[2];
      long long v45 = v30;
      long long v31 = a1[5];
      long long v46 = a1[4];
      long long v47 = v31;
      long long v32 = a1[1];
      long long v42 = *a1;
      long long v43 = v32;
      objc_msgSend(v15, sel_storageMode);
      uint64_t v33 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v34 = v15;
      unint64_t v35 = &v33[v17];
      long long v36 = v49;
      *((_OWORD *)v35 + 6) = v48;
      *((_OWORD *)v35 + 7) = v36;
      *((_OWORD *)v35 + 8) = v50;
      long long v37 = v45;
      *((_OWORD *)v35 + 2) = v44;
      *((_OWORD *)v35 + 3) = v37;
      long long v38 = v47;
      *((_OWORD *)v35 + 4) = v46;
      *((_OWORD *)v35 + 5) = v38;
      long long v39 = v43;
      *(_OWORD *)unint64_t v35 = v42;
      *((_OWORD *)v35 + 1) = v39;
      swift_release();
      return v15;
    }
    swift_unknownObjectRetain();
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  if (objc_msgSend(v20, sel_encodedLength) != (id)v14)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v22 = sub_1B6E32148();
    *(void *)&long long v42 = 1;
    sub_1B6B33B70(v22, 0xD00000000000002ELL, 0x80000001B6F3F1B0, (uint64_t *)&v42);
    swift_release();
  }
  sub_1B62EC494((uint64_t)v15, v17, v19, 0);
  type metadata accessor for particle_quad_material_constants(0);
  sub_1B62EC4C0((uint64_t)v51, 0, ObjectType, v23);
  swift_retain();
  uint64_t v40 = sub_1B62ED17C();
  uint64_t v25 = v24;
  swift_release();
  sub_1B62EC578(v25, 200);
  sub_1B62EC1A8(v40, 201, (unint64_t *)(a2 + 136));
  uint64_t v26 = sub_1B62EBE70(*(void *)(a7 + 120), &v42);
  sub_1B62EC1A8(v26, 230, (unint64_t *)(a2 + 136));
  swift_unknownObjectRelease();
  uint64_t v27 = sub_1B62EBE70(*(void *)(a7 + 128), &v42);
  sub_1B62EC1A8(v27, 231, (unint64_t *)(a2 + 136));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_1B62EBE70(unint64_t a1, unsigned char *a2)
{
  unint64_t v5 = HIDWORD(a1);
  if (a1 != -1 || (uint64_t v6 = 0, HIDWORD(a1)))
  {
    if (sub_1B62EC0CC((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA160, a1)) {
      return 0;
    }
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v5 == -1 || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == v5)
      {
        uint64_t v14 = sub_1B62EC2D0(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32));
        if (v14 != 1)
        {
          uint64_t v6 = v14;
          *a2 = 0;
          return v6;
        }
      }
    }
    if ((sub_1B631EA84(a1) & 1) == 0) {
      return 0;
    }
    sub_1B6BF8FE4(a1, v2);
    unsigned int v8 = sub_1B695D604(a1);
    if (HIBYTE(v8) != 2 && (v8 & 0xFF00) == 0x100) {
      sub_1B62E364C((uint64_t)&type metadata for TextureLoadRequestGPU, (uint64_t)&off_1F0F8B818, a1);
    }
    unsigned int v9 = sub_1B695D604(a1);
    if (HIBYTE(v9) == 2) {
      return 0;
    }
    *a2 = 1;
    uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
    if (!v10)
    {
      return 0;
    }
    else
    {
      switch(BYTE2(v9))
      {
        case 1:
          uint64_t v15 = *(void *)(v10 + 240);
          swift_retain();
          uint64_t v12 = sub_1B6BCB190(0xD000000000000015, 0x80000001B6F45BA0, v15, v10);
          break;
        case 3:
          uint64_t v16 = *(void *)(v10 + 240);
          swift_retain();
          uint64_t v12 = sub_1B6BCB1A8(0x47746C7561666544, 0xEE00786554796572, v16, v10);
          break;
        default:
          uint64_t v11 = *(void *)(v10 + 240);
          swift_retain();
          uint64_t v12 = sub_1B6BCB178(0x42746C7561666544, 0xEF7865546B63616CLL, v11, v10);
          break;
      }
      uint64_t v6 = (uint64_t)v12;
      swift_release();
    }
  }
  return v6;
}

BOOL sub_1B62EC0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 == 0xFFFFFFFFLL) {
    return 0;
  }
  BOOL result = 0;
  if (a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v6 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      uint64_t v7 = *(void *)(*(void *)(*(void *)(v3 + 80) + 8 * *(__int16 *)(v6 + 12 * (int)a3 + 6) + 32) + 16);
      uint64_t v8 = *(void *)(v7 + 128);
      if (*(void *)(v8 + 16))
      {
        unint64_t v9 = sub_1B62C1A30(a1);
        if (v10) {
          return *(void *)(*(void *)(v7 + 24) + 16 * *(void *)(*(void *)(v8 + 56) + 8 * v9) + 32) == a1;
        }
      }
    }
    return 0;
  }
  return result;
}

id sub_1B62EC1A8(uint64_t a1, int a2, unint64_t *a3)
{
  int v4 = v3;
  id result = objc_msgSend(v4, sel_setTexture_atIndex_, a1, a2);
  if (a1)
  {
    unint64_t v9 = *a3;
    MEMORY[0x1F4188790](result, v8);
    _OWORD v12[2] = a1;
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    char v10 = sub_1B62EC350((uint64_t (*)(uint64_t *))sub_1B6BC0EE4, (uint64_t)v12, v9);
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = swift_unknownObjectRetain();
      MEMORY[0x1BA9B3870](v11);
      if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B6E31C78();
      }
      sub_1B6E31CC8();
      sub_1B6E31C48();
    }
    return (id)swift_unknownObjectRelease_n();
  }
  return result;
}

uint64_t sub_1B62EC2D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = v1 + 56;
  uint64_t result = 1;
  while (*(ValueMetadata **)(v3 - 24) != &type metadata for TextureGPURuntime)
  {
    v3 += 40;
    if (!--v2) {
      return result;
    }
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1B62EC350(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (!(a3 >> 62))
  {
    uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    char v11 = 0;
    return v11 & 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B6E32C18();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if ((a3 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = MEMORY[0x1BA9B4580](v7, a3);
    }
    else
    {
      uint64_t v8 = *(void *)(a3 + 8 * v7 + 32);
      swift_unknownObjectRetain();
    }
    uint64_t v13 = v8;
    char v9 = a1(&v13);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return v11 & 1;
    }
    char v10 = v9;
    swift_unknownObjectRelease();
    if (v10) {
      break;
    }
    if (v6 == ++v7) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  char v11 = 1;
  return v11 & 1;
}

BOOL sub_1B62EC480(void *a1)
{
  return *a1 == *(void *)(v1 + 16);
}

id sub_1B62EC494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(v4, sel_setArgumentBuffer_offset_, a1, a4 + a2);
}

void type metadata accessor for particle_quad_material_constants(uint64_t a1)
{
}

uint64_t sub_1B62EC4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 - 8) + 72);
  _OWORD v9[2] = a3;
  uint64_t v10 = a4;
  id v11 = objc_msgSend(v4, sel_constantDataAtIndex_, a2);
  uint64_t v12 = v6;
  return sub_1B62FD7BC(a1, (uint64_t)sub_1B62FDA80, (uint64_t)v9, v10, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC278], v7);
}

id sub_1B62EC578(uint64_t a1, int a2)
{
  return objc_msgSend(v2, sel_setSamplerState_atIndex_, a1, a2);
}

uint64_t sub_1B62EC590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v8 = sub_1B636E9A8(a1);
  if (v9 == 2)
  {
    sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v26);
    if (v29 + v28 > 4096)
    {
      unint64_t v26 = 0;
      uint64_t v27 = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v30 = 4096;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    unint64_t v11 = v26;
    uint64_t v12 = *(void *)(a3 + 16) + v29;
    sub_1B636E480(v12, 1, v27);
    uint64_t v13 = 1 << v11;
    if (v11 >= 0x40) {
      uint64_t v13 = 0;
    }
    uint64_t v16 = *(void *)(a3 + 32);
    uint64_t v15 = (void *)(a3 + 32);
    uint64_t v14 = v16;
    if (v11 > 0x40) {
      uint64_t v13 = 0;
    }
    v15[11] |= v13;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 32 * v11 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v17 = (void *)v12;
  }
  else
  {
    unint64_t v11 = v10;
    uint64_t v18 = *(void *)(a3 + 16);
    uint64_t v19 = (void *)(v18 + v8);
    if (v9)
    {
      uint64_t v24 = *(void *)(a3 + 32);
      uint64_t v15 = (void *)(a3 + 32);
      uint64_t v23 = v24 + 32 * v10;
    }
    else
    {
      sub_1B636E480(v18 + v8, 1, a1);
      uint64_t v20 = 1 << v11;
      if (v11 >= 0x40) {
        uint64_t v20 = 0;
      }
      uint64_t v22 = *(void *)(a3 + 32);
      uint64_t v15 = (void *)(a3 + 32);
      uint64_t v21 = v22;
      if (v11 > 0x40) {
        uint64_t v20 = 0;
      }
      v15[11] |= v20;
      uint64_t v23 = v21 + 32 * v11;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v17 = v19;
  }
  sub_1B62EC830(v17, (uint64_t *)&v26);
  if (!v3) {
    uint64_t v4 = v26;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*v15 + 32 * v11 + 24));
  return v4;
}

uint64_t sub_1B62EC830@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (!(*a1 >> 62))
  {
    if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    type metadata accessor for DrawCall();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1B630041C();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t result = sub_1B62FA1C8();
  uint64_t v5 = result;
  if (!result)
  {
    if (*a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t result = sub_1B69F0184(v6 - 1);
    uint64_t v5 = result;
  }
LABEL_9:
  *a2 = v5;
  return result;
}

uint64_t sub_1B62EC92C(uint64_t a1)
{
  uint64_t v2 = sub_1B62ECCB0(MEMORY[0x1E4FBC860]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 32);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (ValueMetadata **)(v3 + 32);
    do
    {
      unsigned __int8 v7 = sub_1B62ECA0C(*v5);
      if (v7 != 28 && (v7 - 65) >= 0x7Fu)
      {
        if ((v7 & 0x80) != 0)
        {
          if (v7 > 0xC0u)
          {
            unint64_t v6 = 1uLL >> -v7;
LABEL_5:
            if ((v6 & ~v2) == 0) {
              unint64_t v6 = 0;
            }
            v2 |= v6;
          }
        }
        else if (v7 < 0x40u)
        {
          unint64_t v6 = 1 << v7;
          goto LABEL_5;
        }
      }
      v5 += 2;
      --v4;
    }
    while (v4);
  }
  swift_release();
  return v2;
}

uint64_t sub_1B62ECA0C(ValueMetadata *a1)
{
  if (a1 == &type metadata for Position) {
    return 0;
  }
  if (a1 == &type metadata for Scale1) {
    return 1;
  }
  if (a1 == &type metadata for Scale2) {
    return 2;
  }
  if (a1 == &type metadata for Scale3) {
    return 3;
  }
  if (a1 == &type metadata for Velocity) {
    return 4;
  }
  if (a1 == &type metadata for Color) {
    return 5;
  }
  if (a1 == &type metadata for Orientation) {
    return 6;
  }
  if (a1 == &type metadata for ParticleTextureFrame) {
    return 7;
  }
  if (a1 == &type metadata for ParticleAngle) {
    return 8;
  }
  if (a1 == &type metadata for ParticlePivot) {
    return 9;
  }
  if (a1 == &type metadata for ParticleTarget) {
    return 10;
  }
  if (a1 == &type metadata for ParticleRibbonLength) {
    return 11;
  }
  if (a1 == &type metadata for AngularVelocity) {
    return 12;
  }
  if (a1 == &type metadata for ParticleAngleVelocity) {
    return 13;
  }
  if (a1 == &type metadata for LinearFactor) {
    return 14;
  }
  if (a1 == &type metadata for AngularFactor) {
    return 15;
  }
  if (a1 == &type metadata for ParticleAge) {
    return 16;
  }
  if (a1 == &type metadata for ParticleLifetime) {
    return 17;
  }
  if (a1 == &type metadata for Mass) {
    return 18;
  }
  if (a1 == &type metadata for ParticleID) {
    return 26;
  }
  if (a1 == &type metadata for ParticleParentID) {
    return 27;
  }
  if (a1 == &type metadata for ParticleRoughness) {
    return 19;
  }
  if (a1 == &type metadata for ParticleMetalness) {
    return 20;
  }
  if (a1 == &type metadata for ParticleEmission) {
    return 21;
  }
  if (a1 == &type metadata for UserData1) {
    return 22;
  }
  if (a1 == &type metadata for UserData2) {
    return 23;
  }
  if (a1 == &type metadata for UserData3) {
    return 24;
  }
  if (a1 == &type metadata for UserData4) {
    return 25;
  }
  return 28;
}

uint64_t sub_1B62ECCB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  uint64_t v6 = v1 - 1;
  do
  {
    for (uint64_t i = v4; ; ++i)
    {
      if (*(char *)(v5 + i) <= -65) {
        goto LABEL_6;
      }
      unsigned int v8 = *(unsigned __int8 *)(v5 + i);
      if ((char)v8 >= 65) {
        goto LABEL_6;
      }
      if ((v8 & 0x80) == 0) {
        break;
      }
      if (v8 > 0xC0)
      {
        unint64_t v9 = 1uLL >> -(char)v8;
        goto LABEL_14;
      }
LABEL_6:
      if (v6 == i) {
        return result;
      }
    }
    if (v8 >= 0x40) {
      goto LABEL_6;
    }
    unint64_t v9 = 1 << v8;
LABEL_14:
    result |= v9;
    uint64_t v4 = i + 1;
  }
  while (v6 != i);
  return result;
}

uint64_t sub_1B62ECD44(uint64_t result, uint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(v2 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 96);
  *(void *)(result + 16) = 4;
  *(void *)(a2 + 32) = 2 * v4 + 4;
  if (v3 <= 0xFF)
  {
    *(_DWORD *)(result + 136) = v3;
    *(_DWORD *)(result + 140) = v3;
  }
  return result;
}

void *sub_1B62ECD70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B62ECDC4(a1, a2, a3);
}

void *sub_1B62ECDC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *a3;
  unint64_t v9 = (void *)a3[1];
  swift_retain_n();
  sub_1B62E9D50(v9, (uint64_t)v68);
  swift_release();
  sub_1B62CA3FC((uint64_t)v68, (uint64_t)v69, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
  if (v70)
  {
    long long v10 = xmmword_1B6E4F370;
    long long v11 = xmmword_1B6E4F2E0;
    long long v12 = xmmword_1B6E4F320;
    long long v13 = xmmword_1B6E4F300;
  }
  else
  {
    long long v13 = v69[0];
    long long v12 = v69[1];
    long long v11 = v69[2];
    long long v10 = v69[3];
  }
  unsigned int v14 = *(_DWORD *)(v4 + 64);
  long long v64 = v11;
  long long v65 = v10;
  float32x4_t v62 = (float32x4_t)v12;
  float32x4_t v63 = (float32x4_t)v13;
  if (v14 - 11 > 0xF4)
  {
    float v17 = *(float *)(v4 + 8);
    float v15 = -1.0;
    if (v17 >= 0.0)
    {
      if (v17 > -1.0) {
        float v15 = *(float *)(v4 + 8);
      }
      else {
        float v15 = -1.0;
      }
    }
  }
  else
  {
    float v15 = 1.0 / (float)v14;
    float v16 = *(float *)(v4 + 8);
    if (v16 >= 0.0 && v16 > v15) {
      float v15 = *(float *)(v4 + 8);
    }
  }
  float v18 = *(float *)(v4 + 100);
  if (*(unsigned char *)(v4 + 76) == 2)
  {
    float32x4_t v19 = *(float32x4_t *)(v4 + 80);
    int8x16_t v20 = (int8x16_t)vabsq_f32(v19);
    if (*(float *)v20.i32 > 0.00000011921
      || (v20.i32[0] = vextq_s8(v20, v20, 8uLL).u32[0],
          *(int32x2_t *)v20.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v20.i8),
          (v20.i8[4] & 1) == 0)
      || (__int8 v21 = v20.i8[0], v22 = 0uLL, (v21 & 1) == 0))
    {
      int32x4_t v23 = (int32x4_t)vmulq_f32(v19, v19);
      v23.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v23, 2), vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v23.i8, 1))).u32[0];
      float32x2_t v24 = vrsqrte_f32((float32x2_t)v23.u32[0]);
      float32x2_t v25 = vmul_f32(v24, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v24, v24)));
      float32x4_t v22 = vmulq_n_f32(v19, vmul_f32(v25, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v25, v25))).f32[0]);
    }
  }
  else
  {
    float32x4_t v22 = (float32x4_t)xmmword_1B6E4F320;
  }
  float32x4_t v61 = v22;
  if (v18 == 0.0) {
    char v26 = *(unsigned char *)(v4 + 104);
  }
  else {
    char v26 = 1;
  }
  int v27 = *(_DWORD *)(v4 + 72);
  uint64_t v60 = *(void *)(v4 + 48);
  uint64_t v59 = *(void *)(v4 + 56);
  int v28 = *(_DWORD *)(v4 + 108);
  int v29 = *(_DWORD *)(v4 + 116);
  char v30 = *(unsigned char *)(v4 + 112);
  int32x2_t v66 = 0;
  unint64_t v31 = *(void *)(v4 + 36);
  if ((*(unsigned char *)(v4 + 136) & 1) != 0 && sub_1B62EBE70(*(void *)(v4 + 36), v71))
  {
    swift_getObjectType();
    double v67 = sub_1B6BBC0D0();
    swift_unknownObjectRelease();
    int v32 = 0;
    int32x2_t v66 = (int32x2_t)vmul_f32(*(float32x2_t *)&v67, (float32x2_t)vdup_n_s32(0x3C23D70Au));
  }
  else
  {
    int v32 = 1;
  }
  uint64_t v33 = sub_1B62EE6AC(v31);
  int v37 = v36 & 0xFF00;
  __asm { FMOV            V0.2S, #1.0 }
  if (v34 <= 1) {
    uint64_t v42 = 1;
  }
  else {
    uint64_t v42 = v34;
  }
  uint64_t v43 = 1024;
  if (v42 >= 1024) {
    uint64_t v42 = 1024;
  }
  if (v33 <= 1) {
    uint64_t v44 = 1;
  }
  else {
    uint64_t v44 = v33;
  }
  if (v44 < 1024) {
    uint64_t v43 = v44;
  }
  uint64_t v45 = v43 * v42;
  if (v36) {
    uint64_t v46 = v43 * v42;
  }
  else {
    uint64_t v46 = v35;
  }
  if (v45 >= v46) {
    LOWORD(v45) = v46;
  }
  v47.i64[0] = v43;
  v47.i64[1] = v42;
  double v48 = COERCE_DOUBLE(vdiv_f32(_D0, vcvt_f32_f64(vcvtq_f64_s64(v47))));
  _ZF = v37 == 768;
  if (v37 == 768) {
    __int16 v50 = 1;
  }
  else {
    __int16 v50 = v45;
  }
  if (!_ZF) {
    *(double *)&_D0 = v48;
  }
  int8x16_t v51 = (int8x16_t)vdupq_lane_s32(v66, 0);
  int8x16_t v52 = (int8x16_t)vdupq_lane_s32(v66, 1);
  if (v32) {
    unsigned int v53 = -1;
  }
  else {
    unsigned int v53 = 0;
  }
  int8x16_t v54 = (int8x16_t)vdupq_n_s32(v53);
  LODWORD(v55) = v60;
  *((float *)&v55 + 1) = -*((float *)&v60 + 1);
  DWORD2(v55) = v59;
  *((float *)&v55 + 3) = *((float *)&v59 + 1) + 1.0;
  __asm { FMOV            V4.4S, #1.0 }
  v71[0] = vmulq_f32(v63, (float32x4_t)vbslq_s8(v54, _Q4, v51));
  v71[1] = vmulq_f32(v62, (float32x4_t)vbslq_s8(v54, _Q4, v52));
  long long v71[2] = v64;
  v71[3] = v65;
  float v72 = v15;
  int v73 = v27;
  float v74 = v18;
  int v75 = v28;
  long long v76 = v55;
  float32x4_t v77 = v61;
  int v78 = 0;
  float32x2_t v79 = _D0;
  __int16 v80 = v50;
  int v81 = v29;
  char v82 = v30;
  char v83 = v26;
  swift_retain();
  char v57 = sub_1B62EBACC(v71, a1, a2, (uint64_t)a3, v4, v8, v4);
  swift_release_n();
  return v57;
}

uint64_t sub_1B62ED17C()
{
  v11[3] = &type metadata for ParticleQuadRenderer;
  v11[4] = &off_1F0F81B90;
  uint64_t v1 = (_OWORD *)swift_allocObject();
  v11[0] = v1;
  long long v2 = v0[7];
  v1[7] = v0[6];
  v1[8] = v2;
  *(_OWORD *)((char *)v1 + 139) = *(_OWORD *)((char *)v0 + 123);
  long long v3 = v0[3];
  v1[3] = v0[2];
  v1[4] = v3;
  long long v4 = v0[5];
  v1[5] = v0[4];
  v1[6] = v4;
  long long v5 = v0[1];
  v1[1] = *v0;
  v1[2] = v5;
  unint64_t v6 = *(void *)((char *)sub_1B62C14BC(v11, (uint64_t)&type metadata for ParticleQuadRenderer) + 36);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v11);
  unsigned __int8 v7 = (void *)sub_1B62EBE70(v6, v11);
  uint64_t v8 = v7;
  if (!v7) {
    return (uint64_t)v8;
  }
  unint64_t v9 = (unint64_t)objc_msgSend(v7, sel_textureType);
  if (v9 <= 7 && (((1 << v9) & 0x2D) != 0 || v9 == 7))
  {
    swift_unknownObjectRetain();
    return (uint64_t)v8;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62ED358(uint64_t a1)
{
  sub_1B62EDB18(*(void *)a1);
  sub_1B62ED408(*(void *)(a1 + 8));
  sub_1B62ED790(*(void *)(a1 + 16));
  int v3 = *(unsigned __int16 *)(a1 + 96);
  int v4 = *(unsigned __int16 *)(v1 + 96);
  if ((v3 & ~v4) != 0) {
    *(_WORD *)(v1 + 96) = v4 | v3;
  }
  sub_1B62EDB18(*(void *)(a1 + 24));
  sub_1B62ED408(*(void *)(a1 + 32));
  sub_1B62ED790(*(void *)(a1 + 40));
  int v5 = *(unsigned __int16 *)(a1 + 98);
  int v6 = *(unsigned __int16 *)(v1 + 98);
  if ((v5 & ~v6) != 0) {
    *(_WORD *)(v1 + 98) = v6 | v5;
  }
  unint64_t v7 = swift_bridgeObjectRetain();
  return sub_1B62E9BE4(v7);
}

uint64_t sub_1B62ED408(uint64_t result)
{
  long long v2 = (void *)result;
  int v3 = *(void **)v1;
  if (!*(void *)(*(void *)v1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v36 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v37 = v4;
    while (2)
    {
      uint64_t v9 = v36 + 40 * v5;
      uint64_t v11 = *(void *)v9;
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t v12 = *(void *)(v9 + 16);
      char v13 = *(unsigned char *)(v9 + 24);
      uint64_t v14 = *(void *)(v9 + 32);
      unint64_t v15 = v3[2];
      if (!v15) {
        goto LABEL_17;
      }
      uint64_t v16 = 0;
      float v17 = v3 + 4;
      uint64_t v18 = v15 - 1;
      do
      {
        while (1)
        {
          uint64_t v19 = v16 + (v18 - v16) / 2;
          uint64_t v20 = v17[5 * v19 + 4];
          if (v20 >= v14) {
            break;
          }
          uint64_t v16 = v19 + 1;
          if (v18 < v19 + 1) {
            goto LABEL_15;
          }
        }
        if (v14 >= v20)
        {
          v16 += (v18 - v16) / 2;
LABEL_23:
          char v35 = v13;
          if (v20 == v14)
          {
            sub_1B6916440(v11, v10, v12, v13);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int v3 = sub_1B6C168A0(v3);
            }
            int v6 = &v3[5 * v16];
            uint64_t v7 = v6[4];
            uint64_t v33 = v6[6];
            uint64_t v34 = v6[5];
            char v32 = *((unsigned char *)v6 + 56);
            sub_1B6916440(v11, v10, v12, v35);
            sub_1B6916620(v7, v34, v33, v32);
            v6[4] = v11;
            v6[5] = v10;
            v6[6] = v12;
            *((unsigned char *)v6 + 56) = v35;
            v6[8] = v14;
            sub_1B6916620(v11, v10, v12, v35);
          }
          else
          {
            sub_1B6916440(v11, v10, v12, v13);
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (!isUniquelyReferenced_nonNull_native || v15 >= v3[3] >> 1) {
              int v3 = sub_1B68C4CC4(isUniquelyReferenced_nonNull_native, v15 + 1, 1, v3);
            }
            uint64_t v28 = (uint64_t)&v3[5 * v16 + 4];
            sub_1B62E9854(0, &qword_1E9DCFD50);
            swift_arrayDestroy();
            uint64_t v29 = v3[2] - v16;
            if (v29 < 0)
            {
              uint64_t result = sub_1B6E32C88();
              __break(1u);
              return result;
            }
            memmove((void *)(v28 + 40), &v3[5 * v16 + 4], 40 * v29);
            ++v3[2];
            *(void *)uint64_t v28 = v11;
            *(void *)(v28 + 8) = v10;
            *(void *)(v28 + 16) = v12;
            *(unsigned char *)(v28 + 24) = v35;
            v3[5 * v16 + 8] = v14;
          }
          uint64_t v8 = v37;
          goto LABEL_8;
        }
        uint64_t v18 = v19 - 1;
      }
      while (v19 - 1 >= v16);
LABEL_15:
      if (v16 < (uint64_t)v15)
      {
        uint64_t v20 = v17[5 * v16 + 4];
        goto LABEL_23;
      }
LABEL_17:
      char v21 = v13;
      sub_1B6916440(v11, v10, v12, v13);
      char v22 = v21;
      sub_1B6916440(v11, v10, v12, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_1B68C4CC4(0, v15 + 1, 1, v3);
      }
      unint64_t v24 = v3[2];
      unint64_t v23 = v3[3];
      if (v24 >= v23 >> 1)
      {
        char v30 = sub_1B68C4CC4(v23 > 1, v24 + 1, 1, v3);
        char v25 = v22;
        int v3 = v30;
      }
      else
      {
        char v25 = v22;
      }
      uint64_t v8 = v37;
      v3[2] = v24 + 1;
      char v26 = &v3[5 * v24];
      v26[4] = v11;
      void v26[5] = v10;
      v26[6] = v12;
      *((unsigned char *)v26 + 56) = v25;
      v26[8] = v14;
      sub_1B6916620(v11, v10, v12, v25);
LABEL_8:
      if (++v5 != v8) {
        continue;
      }
      break;
    }
    uint64_t result = swift_bridgeObjectRelease();
    long long v2 = v3;
    uint64_t v1 = v31;
LABEL_32:
    *(void *)uint64_t v1 = v2;
  }
  return result;
}

uint64_t sub_1B62ED790(uint64_t result)
{
  long long v2 = (void *)result;
  int v3 = *(void **)v1;
  if (!*(void *)(*(void *)v1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v36 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v37 = v4;
    while (2)
    {
      uint64_t v9 = v36 + 40 * v5;
      uint64_t v11 = *(void *)v9;
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t v12 = *(void *)(v9 + 16);
      char v13 = *(unsigned char *)(v9 + 24);
      uint64_t v14 = *(void *)(v9 + 32);
      unint64_t v15 = v3[2];
      if (!v15) {
        goto LABEL_17;
      }
      uint64_t v16 = 0;
      float v17 = v3 + 4;
      uint64_t v18 = v15 - 1;
      do
      {
        while (1)
        {
          uint64_t v19 = v16 + (v18 - v16) / 2;
          uint64_t v20 = v17[5 * v19 + 4];
          if (v20 >= v14) {
            break;
          }
          uint64_t v16 = v19 + 1;
          if (v18 < v19 + 1) {
            goto LABEL_15;
          }
        }
        if (v14 >= v20)
        {
          v16 += (v18 - v16) / 2;
LABEL_23:
          char v35 = v13;
          if (v20 == v14)
          {
            sub_1B6AEBBA4(v11, v10, v12, v13);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int v3 = sub_1B6C168B4(v3);
            }
            int v6 = &v3[5 * v16];
            uint64_t v7 = v6[4];
            uint64_t v33 = v6[6];
            uint64_t v34 = v6[5];
            char v32 = *((unsigned char *)v6 + 56);
            sub_1B6AEBBA4(v11, v10, v12, v35);
            sub_1B69A1E8C(v7, v34, v33, v32);
            v6[4] = v11;
            v6[5] = v10;
            v6[6] = v12;
            *((unsigned char *)v6 + 56) = v35;
            v6[8] = v14;
            sub_1B69A1E8C(v11, v10, v12, v35);
          }
          else
          {
            sub_1B6AEBBA4(v11, v10, v12, v13);
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (!isUniquelyReferenced_nonNull_native || v15 >= v3[3] >> 1) {
              int v3 = sub_1B68C4CEC(isUniquelyReferenced_nonNull_native, v15 + 1, 1, v3);
            }
            uint64_t v28 = (uint64_t)&v3[5 * v16 + 4];
            sub_1B62E9854(0, (unint64_t *)&unk_1E9DCFD40);
            swift_arrayDestroy();
            uint64_t v29 = v3[2] - v16;
            if (v29 < 0)
            {
              uint64_t result = sub_1B6E32C88();
              __break(1u);
              return result;
            }
            memmove((void *)(v28 + 40), &v3[5 * v16 + 4], 40 * v29);
            ++v3[2];
            *(void *)uint64_t v28 = v11;
            *(void *)(v28 + 8) = v10;
            *(void *)(v28 + 16) = v12;
            *(unsigned char *)(v28 + 24) = v35;
            v3[5 * v16 + 8] = v14;
          }
          uint64_t v8 = v37;
          goto LABEL_8;
        }
        uint64_t v18 = v19 - 1;
      }
      while (v19 - 1 >= v16);
LABEL_15:
      if (v16 < (uint64_t)v15)
      {
        uint64_t v20 = v17[5 * v16 + 4];
        goto LABEL_23;
      }
LABEL_17:
      char v21 = v13;
      sub_1B6AEBBA4(v11, v10, v12, v13);
      char v22 = v21;
      sub_1B6AEBBA4(v11, v10, v12, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_1B68C4CEC(0, v15 + 1, 1, v3);
      }
      unint64_t v24 = v3[2];
      unint64_t v23 = v3[3];
      if (v24 >= v23 >> 1)
      {
        char v30 = sub_1B68C4CEC(v23 > 1, v24 + 1, 1, v3);
        char v25 = v22;
        int v3 = v30;
      }
      else
      {
        char v25 = v22;
      }
      uint64_t v8 = v37;
      v3[2] = v24 + 1;
      char v26 = &v3[5 * v24];
      v26[4] = v11;
      void v26[5] = v10;
      v26[6] = v12;
      *((unsigned char *)v26 + 56) = v25;
      v26[8] = v14;
      sub_1B69A1E8C(v11, v10, v12, v25);
LABEL_8:
      if (++v5 != v8) {
        continue;
      }
      break;
    }
    uint64_t result = swift_bridgeObjectRelease();
    long long v2 = v3;
    uint64_t v1 = v31;
LABEL_32:
    *(void *)uint64_t v1 = v2;
  }
  return result;
}

uint64_t sub_1B62EDB18(uint64_t result)
{
  long long v2 = (void *)result;
  int v3 = *(void **)v1;
  if (*(void *)(*(void *)v1 + 16))
  {
    if (*(void *)(result + 16))
    {
      uint64_t v46 = result + 32;
      uint64_t v4 = *(void *)(result + 16);
      swift_bridgeObjectRetain();
      uint64_t v5 = v4;
      uint64_t v6 = 0;
      uint64_t v47 = v5;
      while (1)
      {
        uint64_t v13 = v46 + 48 * v6;
        uint64_t v15 = *(void *)v13;
        uint64_t v14 = *(void *)(v13 + 8);
        uint64_t v17 = *(void *)(v13 + 16);
        uint64_t v16 = *(void *)(v13 + 24);
        unsigned __int8 v18 = *(unsigned char *)(v13 + 32);
        uint64_t v19 = *(void *)(v13 + 40);
        unint64_t v20 = v3[2];
        if (!v20) {
          break;
        }
        uint64_t v21 = 0;
        char v22 = v3 + 4;
        uint64_t v23 = v20 - 1;
        do
        {
          while (1)
          {
            uint64_t v24 = v21 + (v23 - v21) / 2;
            uint64_t v25 = v22[6 * v24 + 5];
            if (v25 >= v19) {
              break;
            }
            uint64_t v21 = v24 + 1;
            if (v23 < v24 + 1) {
              goto LABEL_14;
            }
          }
          if (v19 >= v25)
          {
            v21 += (v23 - v21) / 2;
            goto LABEL_21;
          }
          uint64_t v23 = v24 - 1;
        }
        while (v24 - 1 >= v21);
LABEL_14:
        if (v21 >= (uint64_t)v20) {
          break;
        }
        uint64_t v25 = v22[6 * v21 + 5];
LABEL_21:
        if (v25 == v19)
        {
          uint64_t v32 = v16;
          uint64_t v33 = v16;
          unsigned __int8 v34 = v18;
          sub_1B62E9500(v15, v14, v17, v33, v18);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v3 = sub_1B6C168C8(v3);
          }
          char v35 = &v3[6 * v21];
          uint64_t v43 = v35[5];
          uint64_t v44 = v35[4];
          uint64_t v41 = v35[7];
          uint64_t v42 = v35[6];
          unsigned __int8 v40 = *((unsigned char *)v35 + 64);
          sub_1B62E9500(v15, v14, v17, v32, v34);
          sub_1B62E6BD4(v44, v43, v42, v41, v40);
          v35[4] = v15;
          v35[5] = v14;
          v35[6] = v17;
          v35[7] = v32;
          *((unsigned char *)v35 + 64) = v34;
          v35[9] = v19;
          uint64_t v10 = v15;
          uint64_t v11 = v14;
          uint64_t v12 = v17;
          uint64_t v9 = v32;
          unsigned __int8 v7 = v34;
LABEL_6:
          sub_1B62E6BD4(v10, v11, v12, v9, v7);
          goto LABEL_7;
        }
        unsigned __int8 v45 = v18;
        sub_1B62E9500(v15, v14, v17, v16, v18);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || v20 >= v3[3] >> 1) {
          int v3 = sub_1B62E95AC(isUniquelyReferenced_nonNull_native, v20 + 1, 1, v3);
        }
        uint64_t v37 = (uint64_t)&v3[6 * v21 + 4];
        sub_1B62E9854(0, &qword_1EB97E820);
        swift_arrayDestroy();
        uint64_t v38 = v3[2] - v21;
        if (v38 < 0)
        {
          uint64_t result = sub_1B6E32C88();
          __break(1u);
          return result;
        }
        memmove((void *)(v37 + 48), &v3[6 * v21 + 4], 48 * v38);
        ++v3[2];
        *(void *)uint64_t v37 = v15;
        *(void *)(v37 + 8) = v14;
        *(void *)(v37 + 16) = v17;
        *(void *)(v37 + 24) = v16;
        *(unsigned char *)(v37 + 32) = v45;
        v3[6 * v21 + 9] = v19;
LABEL_7:
        if (++v6 == v47)
        {
          uint64_t result = swift_bridgeObjectRelease();
          long long v2 = v3;
          uint64_t v1 = v39;
          goto LABEL_32;
        }
      }
      unsigned __int8 v26 = v18;
      sub_1B62E9500(v15, v14, v17, v16, v18);
      uint64_t v48 = v16;
      uint64_t v27 = v16;
      unsigned __int8 v28 = v26;
      sub_1B62E9500(v15, v14, v17, v27, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_1B62E95AC(0, v20 + 1, 1, v3);
      }
      unint64_t v30 = v3[2];
      unint64_t v29 = v3[3];
      if (v30 < v29 >> 1)
      {
        unsigned __int8 v7 = v28;
      }
      else
      {
        uint64_t v31 = sub_1B62E95AC(v29 > 1, v30 + 1, 1, v3);
        unsigned __int8 v7 = v28;
        int v3 = v31;
      }
      v3[2] = v30 + 1;
      uint64_t v8 = &v3[6 * v30];
      v8[4] = v15;
      v8[5] = v14;
      uint64_t v9 = v48;
      v8[6] = v17;
      _OWORD v8[7] = v48;
      *((unsigned char *)v8 + 64) = v7;
      v8[9] = v19;
      uint64_t v10 = v15;
      uint64_t v11 = v14;
      uint64_t v12 = v17;
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_32:
    *(void *)uint64_t v1 = v2;
  }
  return result;
}

uint64_t *sub_1B62EDED8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B62EE004(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B62EE21C()
{
  uint64_t v1 = *(unsigned char **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    if (((v1[537] & 1) != 0 || (v1[539] & 1) != 0 || v1[540] == 1) && v1[538] == 1)
    {
      swift_retain();
      sub_1B696BA40(6, 0xD000000000000018, 0x80000001B6F30A80, 1, 14, 0);
      return swift_release();
    }
  }
  else
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62EE328(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B62EE3D0(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 248, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B62EE3D0(uint64_t a1, __int16 a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  for (uint64_t i = (void *)(v4 + 56); (ValueMetadata *)*(i - 3) != &type metadata for MaterialRuntime; i += 5)
  {
    if (!--v5) {
      return 0;
    }
  }
  a4(*(void *)(a1 + 128) + *i + a2 * a3);
  return 1;
}

uint64_t sub_1B62EE448(uint64_t a1)
{
  unint64_t v3 = *(unsigned int *)(v1 + 112) | ((unint64_t)*(unsigned __int8 *)(v1 + 116) << 32);
  return sub_1B62E74B4(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), v3, SBYTE4(v3), *(void *)(v1 + 120), *(void *)(v1 + 128), *(unsigned char *)(v1 + 136), *(unsigned char *)(v1 + 137), *(void *)(v1 + 144), *(unsigned char *)(v1 + 152),
           *(void *)(v1 + 16),
           *(void *)(v1 + 24));
}

uint64_t sub_1B62EE4C4(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 2;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterDescription; i += 5)
  {
    if (!--v4) {
      return 2;
    }
  }
  return *(unsigned __int8 *)(*(void *)(a1 + 128) + *i + a2 * a3 + 41);
}

uint64_t sub_1B62EE518(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 2;
  }
  uint64_t result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a1);
      uint64_t v7 = *(void *)(*(void *)(a2 + 136) + 8 * *v6 + 32);
      uint64_t v8 = *(void *)(v7 + 48);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        int v10 = *((__int16 *)v6 + 2);
        for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Material; i += 5)
        {
          if (!--v9) {
            return 2;
          }
        }
        return (*(unsigned __int8 *)(*(void *)(*(void *)(v7 + 128) + *i + 104 * v10 + 8) + 80) >> 5) & 1;
      }
    }
  }
  return result;
}

uint64_t sub_1B62EE5F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 1;
  }
  uint64_t result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v5 == -1 || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == v5)
    {
      uint64_t result = sub_1B6C087EC(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 248, a3);
      if (!v3) {
        return result & 1;
      }
    }
  }
  return result;
}

uint64_t sub_1B62EE6AC(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B62EE798(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 32, v1);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B62EE798(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56);
        (ValueMetadata *)*(i - 3) != &type metadata for TextureRequireAnimationRepresentation;
        i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B62EE814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v6 = (unsigned int *)(v4 + 12 * (int)a1);
    return sub_1B62EE900(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v6 + 32), *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v6+ 2) << 32), 656, v2, a2);
  }
  else
  {
    sub_1B6965F70(v7);
    return sub_1B62EF28C((uint64_t)v7, a2, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
  }
}

uint64_t sub_1B62EE900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for EmitterRuntime)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    int v10 = (const void *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                       + *v8
                       + (a2 << 16 >> 48) * a3);
    memcpy(v11, v10, sizeof(v11));
    memmove(__dst, v10, 0x290uLL);
    nullsub_1(__dst);
    sub_1B62EF28C((uint64_t)__dst, a5, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
    return sub_1B62EEA00((uint64_t)v11);
  }
  else
  {
LABEL_5:
    sub_1B6965F70(__dst);
    return sub_1B62EF28C((uint64_t)__dst, a5, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
  }
}

uint64_t sub_1B62EEA00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62EEBF4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  uint64_t v3 = a1[1];
  swift_retain();
  sub_1B62EF0E0(v3, (uint64_t)v33);
  swift_release();
  sub_1B62AA520((uint64_t)v33, (uint64_t)v67, (unint64_t *)&unk_1EB97DE90, (uint64_t)&type metadata for EmitterShape);
  sub_1B62AA520((uint64_t)v67, (uint64_t)v68, (unint64_t *)&unk_1EB97DE90, (uint64_t)&type metadata for EmitterShape);
  uint64_t v4 = sub_1B62EF358((uint64_t)v68);
  if (v4 == 1)
  {
    int v5 = 0;
    char v6 = 0;
    char v7 = 0;
    char v8 = 1;
    long long v9 = xmmword_1B6E99DF0;
    uint64_t v10 = 0x40C90FDA00000000;
    long long v11 = xmmword_1B6E4F320;
    uint64_t v12 = 0xFFFFFFFFLL;
    uint64_t v13 = 0;
    long long v14 = 0uLL;
    long long v15 = 0uLL;
    __asm { FMOV            V7.4S, #1.0 }
    char v21 = -1;
    char v22 = 2;
    __int16 v23 = -26214;
    int v24 = 1050253722;
    char v25 = 1;
    char v26 = 2;
    char v27 = 2;
    char v28 = 2;
    long long v29 = 0uLL;
    long long v30 = 0uLL;
  }
  else
  {
    sub_1B62AA520((uint64_t)v67, (uint64_t)&v34, (unint64_t *)&unk_1EB97DE90, (uint64_t)&type metadata for EmitterShape);
    int v5 = v34;
    char v8 = v35;
    __int16 v65 = v36;
    char v66 = v37;
    uint64_t v10 = v38;
    long long v14 = v39;
    char v22 = v40;
    char v6 = v41;
    char v25 = v42;
    v64[0] = *(void *)v43;
    *(void *)((char *)v64 + 5) = *(void *)&v43[5];
    long long v29 = v44;
    char v26 = v45;
    *(void *)((char *)v63 + 7) = *(void *)&v46[7];
    v63[0] = *(void *)v46;
    long long v30 = v47;
    char v21 = v48;
    char v27 = v49;
    __int16 v23 = v50;
    long long v9 = v51;
    int v24 = v52;
    uint64_t v4 = v53;
    long long v11 = v54;
    uint64_t v13 = v55;
    uint64_t v12 = v56;
    char v28 = v57;
    *(void *)((char *)v62 + 7) = *(void *)&v58[7];
    v62[0] = *(void *)v58;
    _Q7 = v59;
    long long v15 = v60;
    char v7 = v61;
  }
  int v34 = v5;
  char v35 = v8;
  __int16 v36 = v65;
  char v37 = v66;
  uint64_t v38 = v10;
  long long v39 = v14;
  char v40 = v22;
  char v41 = v6;
  char v42 = v25;
  *(void *)uint64_t v43 = v64[0];
  *(void *)&v43[5] = *(void *)((char *)v64 + 5);
  long long v44 = v29;
  char v45 = v26;
  *(void *)&v46[7] = *(void *)((char *)v63 + 7);
  *(void *)uint64_t v46 = v63[0];
  long long v47 = v30;
  char v48 = v21;
  char v49 = v27;
  __int16 v50 = v23;
  long long v51 = v9;
  int v52 = v24;
  uint64_t v53 = v4;
  long long v54 = v11;
  uint64_t v55 = v13;
  uint64_t v56 = v12;
  char v57 = v28;
  *(void *)long long v58 = v62[0];
  *(void *)&v58[7] = *(void *)((char *)v62 + 7);
  long long v59 = _Q7;
  long long v60 = v15;
  char v61 = v7;
  uint64_t v31 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B62EEE94(v31, v2, v2, (uint64_t)a1);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

uint64_t sub_1B62EEE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B62EF068(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(_WORD *)(v6 + 12 * (int)a1 + 4), 656, a3, a4), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62EF068(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  sub_1B62EF374(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5);
  return 1;
}

uint64_t sub_1B62EF0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v6 = (unsigned int *)(v4 + 12 * (int)a1);
    return sub_1B62EF1CC(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v6 + 32), *v6 | ((unint64_t)*((unsigned __int16 *)v6 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v6+ 2) << 32), 224, v2, a2);
  }
  else
  {
    sub_1B6965F78((uint64_t)v7);
    return sub_1B62EF28C((uint64_t)v7, a2, (unint64_t *)&unk_1EB97DE90, (uint64_t)&type metadata for EmitterShape);
  }
}

uint64_t sub_1B62EF1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    char v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for EmitterShape)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    memmove(v10, (const void *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)+ *v8+ (a2 << 16 >> 48) * a3), 0xD1uLL);
    nullsub_1(v10);
  }
  else
  {
LABEL_5:
    sub_1B6965F78((uint64_t)v10);
  }
  return sub_1B62EF28C((uint64_t)v10, a5, (unint64_t *)&unk_1EB97DE90, (uint64_t)&type metadata for EmitterShape);
}

uint64_t sub_1B62EF28C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62EF30C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B62EF30C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62EF358(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 34);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t *sub_1B62EF374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(_OWORD *)(a3 + 104);
  v76[0] = *(_OWORD *)(a3 + 88);
  v76[1] = v3;
  uint64_t v77 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v76, 0x200000000, v70);
  uint64_t result = (uint64_t *)sub_1B62AA520((uint64_t)v70, (uint64_t)v71, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  long long v69 = (unsigned __int16 *)v71[0];
  if (v71[0])
  {
    uint64_t v56 = v75;
    if (v75 >= 1)
    {
      uint64_t v55 = v72;
      if (v72)
      {
        uint64_t v5 = 0;
        uint64_t v54 = v71[5];
        uint64_t v6 = v74;
        uint64_t v7 = v74[4];
        uint64_t v53 = v73;
        int v8 = *(unsigned __int8 *)(v73 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        long long v51 = v74 + 8;
        uint64_t v68 = v71[0] + 41;
        int v52 = v8;
        uint64_t v50 = v7;
        char v83 = v74;
        do
        {
          long long v9 = (unsigned int *)(v54 + 48 * v5);
          uint64_t v10 = *v9;
          uint64_t v11 = v9[1];
          uint64_t v12 = v9[2];
          uint64_t v13 = *((void *)v9 + 2);
          uint64_t v14 = *((void *)v9 + 5);
          uint64_t v63 = *((void *)v9 + 4);
          uint64_t v64 = *((void *)v9 + 3);
          if (v8)
          {
            long long v15 = *(os_unfair_lock_s **)(v14 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v7);
          uint64_t v60 = v6[7];
          uint64_t v61 = v6[6];
          uint64_t v59 = v6[8];
          uint64_t v66 = v6[10];
          uint64_t v67 = v6[9];
          uint64_t v16 = v6[4];
          uint64_t v17 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          unsigned __int8 v18 = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
          v83[6] = v18;
          unsigned char v83[7] = v17;
          uint64_t v6 = v83;
          v51[1] = 0;
          v51[2] = 0;
          void *v51 = 0;
          swift_release();
          v78[0] = v53;
          v78[1] = v14;
          uint64_t v62 = v14;
          v78[2] = (uint64_t)v6;
          v78[3] = v12;
          v78[4] = (v11 - v10 + v12);
          v78[5] = v56;
          v78[6] = v10;
          v78[7] = v11;
          v78[8] = 0;
          v78[9] = 0;
          char v79 = 1;
          uint64_t v80 = v13;
          uint64_t v81 = v64;
          uint64_t v82 = v63;
          sub_1B69A86FC(v78, a3, a1);
          unint64_t v19 = v6[6];
          uint64_t v20 = v6[8];
          if (!v20)
          {
            uint64_t v47 = v6[7];
            char v48 = (void *)v6[4];
            goto LABEL_47;
          }
          uint64_t v65 = v5;
          for (uint64_t i = 0; i != v20; ++i)
          {
            unint64_t v23 = v19;
            int v24 = (uint64_t *)(v19 + 48 * i);
            uint64_t v25 = *v24;
            char v26 = (void (*)(uint64_t))v24[4];
            uint64_t v27 = v6[9];
            if (v27) {
              BOOL v28 = v25 == v27;
            }
            else {
              BOOL v28 = 0;
            }
            if (v28 || !v69[11]) {
              goto LABEL_11;
            }
            unint64_t v29 = v69[9];
            long long v30 = (void *)(v68 + v69[8]);
            uint64_t v31 = v24[2];
            uint64_t v32 = v30;
            unint64_t v33 = v29 >> 4;
            uint64_t v34 = v68;
            if (v29 >= 0x10)
            {
              while (*v32 != v25)
              {
                ++v34;
                v32 += 2;
                if (!--v33) {
                  goto LABEL_26;
                }
              }
              unsigned int v35 = *(unsigned __int8 *)(v34 + v69[10]);
              BOOL v36 = v35 > 5;
              int v37 = (1 << v35) & 0x23;
              if (v36 || v37 == 0)
              {
LABEL_11:
                uint64_t v22 = swift_retain();
                v26(v22);
                swift_release();
                goto LABEL_12;
              }
            }
LABEL_26:
            if (swift_conformsToProtocol2()) {
              uint64_t v39 = v31;
            }
            else {
              uint64_t v39 = 0;
            }
            if (v39)
            {
              if (v29 < 0x10) {
                goto LABEL_11;
              }
              char v40 = v30;
              unint64_t v41 = v29 >> 4;
              uint64_t v42 = v68;
              while (*v40 != v39)
              {
                ++v42;
                v40 += 2;
                if (!--v41) {
                  goto LABEL_39;
                }
              }
              unsigned int v43 = *(unsigned __int8 *)(v42 + v69[10]);
              BOOL v36 = v43 > 5;
              int v44 = (1 << v43) & 0x23;
              if (v36 || v44 == 0) {
                goto LABEL_11;
              }
LABEL_39:
              uint64_t v46 = 16 * (v29 >> 4);
              while (*v30 != v39)
              {
                v30 += 2;
                v46 -= 16;
                if (!v46) {
                  goto LABEL_11;
                }
              }
            }
LABEL_12:
            uint64_t v6 = v83;
            unint64_t v19 = v23;
          }
          uint64_t v47 = v83[7];
          unint64_t v19 = v83[6];
          char v48 = (void *)v83[4];
          if ((uint64_t)v83[8] >= 1)
          {
            unint64_t v49 = v83[6];
            swift_arrayDestroy();
            unint64_t v19 = v49;
          }
          uint64_t v5 = v65;
LABEL_47:
          uint64_t v7 = v50;
          ecs_stack_allocator_deallocate(v48, v19, 48 * v47);
          v6[6] = v61;
          v6[7] = v60;
          v6[8] = v59;
          v6[9] = v67;
          v6[10] = v66;
          sub_1B634507C((char *)v62);
          ecs_stack_allocator_pop_snapshot(v50);
          int v8 = v52;
          if (v52)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 376));
          }
          swift_release();
          ++v5;
        }
        while (v5 != v55);
      }
    }
    return sub_1B632F170(v70);
  }
  return result;
}

uint64_t sub_1B62EF824(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, unsigned __int8 a12)
{
  uint64_t v148 = a8;
  uint64_t v156 = a7;
  if (a5 >= 1)
  {
    Swift::Int v14 = a5;
    uint64_t v147 = a4;
    LODWORD(v149) = a3;
    LODWORD(v151) = result;
    uint64_t v197 = v12;
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, v14);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v17 = swift_getKeyPath();
    sub_1B62F06B8(v17, v14);
    swift_release();
    swift_release();
    uint64_t v18 = *(void *)(a6 + 32);
    ecs_stack_allocator_push_snapshot(v18);
    uint64_t v158 = *(int *)(a2 + 204);
    uint64_t v150 = 4 * v14;
    unint64_t v19 = ecs_stack_allocator_allocate(v18, 4 * v14, 4);
    uint64_t v20 = v19;
    uint64_t v152 = a2;
    char v21 = *(unsigned char *)(a2 + 208);
    uint64_t v157 = a6;
    if ((v21 & 1) == 0)
    {
      uint64_t v33 = 0;
      uint64_t v153 = (uint64_t *)v14;
      int v154 = v19;
      do
      {
        uint64_t v37 = *(void *)(a6 + 16);
        uint64_t v36 = v37 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
        uint64_t v38 = *(os_unfair_lock_s **)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
        swift_retain();
        os_unfair_lock_lock(v38);
        ++*(void *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
        uint64_t v39 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
        LODWORD(v40) = *(_DWORD *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
        if (v40 == -1)
        {
          uint64_t v155 = v36;
          unint64_t v41 = (char **)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v42 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
          unsigned int v43 = *(char **)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v40 = *(void *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
          uint64_t v44 = 2 * *(void *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
          *(void *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v44;
          char v45 = (char *)swift_slowAlloc();
          *unint64_t v41 = v45;
          v41[1] = (char *)v44;
          if (v40 < 0) {
            goto LABEL_90;
          }
          if (v45 != v43 || v45 >= &v43[12 * v40]) {
            memmove(v45, v43, 12 * v40);
          }
          if (v43) {
            MEMORY[0x1BA9B84C0](v43, -1, -1);
          }
          uint64_t v47 = *(void *)(v37 + v42);
          char v48 = *v41;
          if (v47 - 1 != v40)
          {
            uint64_t v49 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
            int v50 = v40 + 1;
            do
            {
              int v51 = *(_DWORD *)(v37 + v49);
              int v52 = &v48[12 * v50 - 12];
              *(_DWORD *)int v52 = v50;
              *((_DWORD *)v52 + 1) = -1;
              *((_DWORD *)v52 + 2) = v51;
              ++v50;
            }
            while (v47 != v50);
          }
          int v34 = *(_DWORD *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
          unsigned int v35 = &v48[12 * v47];
          *(void *)(v35 - 12) = -1;
          *((_DWORD *)v35 - 1) = v34;
          *(_DWORD *)(v37 + v39) = v40;
          Swift::Int v14 = (Swift::Int)v153;
          uint64_t v20 = v154;
          uint64_t v36 = v155;
        }
        *(_DWORD *)(v37 + v39) = *(_DWORD *)(*(void *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)v40);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 24));
        swift_release();
        *((_DWORD *)v20 + v33++) = v40;
        a6 = v157;
      }
      while (v33 != v14);
    }
    uint64_t v155 = a10;
    uint64_t v161 = 0;
    uint64_t v22 = v152;
    uint64_t v23 = v14 / *(void *)(v152 + 64)
        + 2 * *(void *)(*(void *)(*(void *)(*(void *)(a6 + 16) + 96) + 40 * (int)v158 + 32) + 16)
        + 1;
    int v24 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 24 * v23, 8);
    v159[0] = v24;
    v159[1] = v23;
    uint64_t v160 = 0;
    uint64_t v25 = *(void *)(a6 + 16);
    swift_retain();
    uint64_t v178 = 0;
    uint64_t v179 = (4 * v14) >> 2;
    uint64_t v180 = v20;
    uint64_t v181 = v179;
    if (v150 < 1)
    {
      swift_release();
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v153 = &v135;
      unint64_t v26 = v147;
      uint64_t v27 = v147;
      swift_retain();
      unint64_t v28 = v27 | ((HIDWORD(v26) & 1) << 32);
      uint64_t v29 = (uint64_t)v20;
      char v30 = v149 & 1;
      uint64_t v31 = v157;
      do
      {
        swift_retain();
        sub_1B62F0B08(v158, v28, v30, v25, &v178, v22, v29, (4 * v14) >> 2, &v161, v31, v158, v159);
        swift_release();
      }
      while (v179 - v178 > 0);
      swift_release();
      swift_release();
      uint64_t v32 = v160;
      int v24 = (void *)v159[0];
    }
    uint64_t v158 = a9;
    uint64_t v53 = ecs_stack_allocator_allocate(*(void *)(v157 + 32), 48 * v32, 8);
    uint64_t v54 = (uint64_t)v53;
    if (v32)
    {
      unint64_t v55 = 0;
      uint64_t v56 = v24 + 2;
      uint64_t v57 = v32;
      long long v58 = v53;
      while (1)
      {
        uint64_t v59 = *(v56 - 1);
        uint64_t v60 = *v56;
        uint64_t v61 = swift_retain();
        if ((v55 & 0x8000000000000000) != 0)
        {
          swift_release();
          sub_1B62F648C(v148);
          swift_release();
          swift_release();
          int v137 = 0;
          uint64_t v136 = 3451;
          LOBYTE(v135) = 2;
          goto LABEL_89;
        }
        if (HIDWORD(v55)) {
          break;
        }
        *((_DWORD *)v58 + 1) = v60;
        *((_DWORD *)v58 + 2) = v55;
        unint64_t v55 = v55 - v59 + v60;
        *(_DWORD *)long long v58 = v59;
        _OWORD v58[2] = 0;
        v58[3] = 0;
        v58[4] = 0;
        v58[5] = v61;
        v58 += 6;
        v56 += 3;
        if (!--v57) {
          goto LABEL_30;
        }
      }
      swift_release();
      sub_1B62F648C(v148);
      swift_release();
      swift_release();
      int v137 = 0;
      uint64_t v136 = 3455;
      LOBYTE(v135) = 2;
LABEL_89:
      sub_1B6E32BD8();
      __break(1u);
LABEL_90:
      int v137 = 0;
      uint64_t v136 = 1046;
      LOBYTE(v135) = 2;
      uint64_t result = sub_1B6E32C88();
      __break(1u);
    }
    else
    {
LABEL_30:
      int v154 = a11;
      uint64_t v62 = v157;
      uint64_t v63 = *(void *)(v157 + 16);
      uint64_t v64 = qword_1EB97DC28;
      swift_retain();
      if (v64 != -1) {
        swift_once();
      }
      LODWORD(v153) = a12;
      uint64_t v191 = qword_1EB997A18;
      int v192 = 0;
      char v193 = 2;
      uint64_t v194 = 0;
      char v195 = 2;
      uint64_t v196 = 0;
      swift_retain();
      sub_1B62CB7E0(v63, v62, (uint64_t)&v191, v54, v32, v32, (uint64_t)&v162);
      swift_release();
      swift_release();
      uint64_t v152 = v169;
      if (v151)
      {
        if (v169 > 0)
        {
          uint64_t v65 = v166;
          if (v166)
          {
            uint64_t v66 = v168;
            uint64_t v147 = v167;
            int v67 = *(unsigned __int8 *)(v167 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            uint64_t v68 = v168[4];
            unint64_t v143 = *(void *)(v148 + 32);
            unsigned __int8 v144 = v168 + 6;
            long long v174 = v162;
            long long v175 = v163;
            uint64_t v142 = v168 + 8;
            uint64_t v140 = v168 + 13;
            uint64_t v141 = v186;
            uint64_t v176 = v164;
            long long v69 = (uint64_t *)(v165 + 24);
            int8x16_t v139 = (int8x16_t)xmmword_1B6E4F370;
            int8x16_t v138 = (int8x16_t)xmmword_1B6E77AF0;
            int v146 = v67;
            uint64_t v145 = v68;
            do
            {
              uint64_t v150 = *((unsigned int *)v69 - 6);
              uint64_t v151 = v65;
              uint64_t v70 = *((unsigned int *)v69 - 4);
              uint64_t v149 = *((unsigned int *)v69 - 5);
              long long v71 = (uint64_t *)*(v69 - 1);
              uint64_t v72 = *v69;
              uint64_t v74 = v69[1];
              uint64_t v73 = v69[2];
              if (v67)
              {
                uint64_t v75 = *(os_unfair_lock_s **)(v73 + 376);
                swift_retain();
                os_unfair_lock_lock(v75);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v73 + 344));
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v68);
              sub_1B62CA4FC((uint64_t)v144, (uint64_t)v177, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v76 = v66[4];
              uint64_t v77 = *(void *)(*(void *)(*(void *)(*(void *)(v73 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v66[6] = ecs_stack_allocator_allocate(v76, 48 * v77, 8);
              v66[7] = v77;
              int v78 = v142;
              v142[1] = 0;
              v78[2] = 0;
              *int v78 = 0;
              swift_release();
              uint64_t v79 = (v149 - v150 + v70);
              uint64_t v178 = v147;
              uint64_t v179 = v73;
              uint64_t v180 = v66;
              uint64_t v181 = v70;
              uint64_t v80 = v150;
              uint64_t v182 = v79;
              uint64_t v183 = v152;
              uint64_t v184 = v150;
              uint64_t v185 = v149;
              uint64_t v81 = v141;
              void *v141 = 0;
              v81[1] = 0;
              char v187 = 1;
              uint64_t v188 = v71;
              uint64_t v189 = v72;
              uint64_t v190 = v74;
              uint64_t v82 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v71, v72, v74, (uint64_t)v66);
              uint64_t v83 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, v71, v72, v74, (uint64_t)v66);
              if ((v84 & 1) == 0)
              {
                uint64_t v85 = v83;
                sub_1B62F0E60(*(void *)(v148 + 32), (uint64_t)v170);
                sub_1B62CA4FC((uint64_t)v170, (uint64_t)&v171, &qword_1EB980080, (uint64_t)&type metadata for WorldAABB);
                if (v173) {
                  unsigned int v86 = -1;
                }
                else {
                  unsigned int v86 = 0;
                }
                int8x16_t v87 = (int8x16_t)vdupq_n_s32(v86);
                int8x16_t v88 = vbslq_s8(v87, v139, v171);
                int8x16_t v89 = vbslq_s8(v87, v138, v172);
                int8x16_t v90 = (int8x16_t *)(v85 + 32 * v80);
                *int8x16_t v90 = v88;
                v90[1] = v89;
              }
              *(void *)(v82 + 8 * v80) = v158;
              swift_retain();
              swift_release();
              sub_1B62F0788(v156, v155, v143, 0, *((unsigned __int8 *)v154 + 227), v153 & 1, &v178);
              uint64_t v91 = v197;
              sub_1B6345178(v66, (unsigned __int16 **)&v174, (uint64_t)v177);
              uint64_t v197 = v91;
              uint64_t v68 = v145;
              if (*(void *)(v66[13] + 16))
              {
                uint64_t v92 = swift_bridgeObjectRetain();
                sub_1B639147C(v92, v73);
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v94 = v66[13];
                if (isUniquelyReferenced_nonNull_native)
                {
                  sub_1B6399BB8(0, *(void *)(v94 + 16));
                }
                else
                {
                  uint64_t v95 = (void *)MEMORY[0x1E4FBC860];
                  if (*(void *)(v94 + 24) >= 2uLL)
                  {
                    sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                    uint64_t v95 = (void *)swift_allocObject();
                    size_t v96 = j__malloc_size(v95);
                    v95[2] = 0;
                    v95[3] = 2 * ((uint64_t)(v96 - 32) / 72);
                  }
                  void *v140 = v95;
                  swift_bridgeObjectRelease();
                }
                if (*(unsigned __int8 *)(v66[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
                {
                  uint64_t v97 = *(char **)(v73 + 232);
                  uint64_t v98 = *(char **)(v73 + 256);
                  if (v97 == v98)
                  {
                    uint64_t v99 = *(char **)(v73 + 240);
                  }
                  else
                  {
                    sub_1B666018C(v98, v97);
                    uint64_t v98 = *(char **)(v73 + 232);
                    uint64_t v99 = *(char **)(v73 + 240);
                    if (v99 == v98)
                    {
                      uint64_t v99 = 0;
                      uint64_t v98 = 0;
                      *(void *)(v73 + 232) = 0;
                      *(void *)(v73 + 240) = 0;
                    }
                  }
                  *(void *)(v73 + 248) = v99;
                  *(void *)(v73 + 256) = v98;
                }
              }
              ecs_stack_allocator_pop_snapshot(v68);
              int v67 = v146;
              if (v146)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v73 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v73 + 376));
              }
              swift_release();
              v69 += 6;
              uint64_t v65 = v151 - 1;
            }
            while (v151 != 1);
          }
        }
      }
      else if (v169 > 0)
      {
        uint64_t v100 = v166;
        if (v166)
        {
          unint64_t v101 = v168;
          uint64_t v147 = v167;
          int v102 = *(unsigned __int8 *)(v167 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v103 = v168[4];
          unint64_t v143 = *(void *)(v148 + 32);
          unsigned __int8 v144 = v168 + 6;
          long long v174 = v162;
          long long v175 = v163;
          uint64_t v142 = v168 + 8;
          uint64_t v140 = v168 + 13;
          uint64_t v141 = v186;
          uint64_t v176 = v164;
          unint64_t v104 = (uint64_t *)(v165 + 24);
          int8x16_t v139 = (int8x16_t)xmmword_1B6E4F370;
          int8x16_t v138 = (int8x16_t)xmmword_1B6E77AF0;
          int v146 = v102;
          uint64_t v145 = v103;
          do
          {
            uint64_t v150 = *((unsigned int *)v104 - 6);
            uint64_t v151 = v100;
            uint64_t v105 = *((unsigned int *)v104 - 4);
            uint64_t v149 = *((unsigned int *)v104 - 5);
            uint64_t v106 = (uint64_t *)*(v104 - 1);
            uint64_t v107 = *v104;
            uint64_t v108 = v104[1];
            uint64_t v109 = v104[2];
            if (v102)
            {
              uint64_t v110 = *(os_unfair_lock_s **)(v109 + 376);
              swift_retain();
              os_unfair_lock_lock(v110);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v109 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v103);
            sub_1B62CA4FC((uint64_t)v144, (uint64_t)v177, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v111 = v101[4];
            uint64_t v112 = *(void *)(*(void *)(*(void *)(*(void *)(v109 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v101[6] = ecs_stack_allocator_allocate(v111, 48 * v112, 8);
            v101[7] = v112;
            uint64_t v113 = v142;
            v142[1] = 0;
            v113[2] = 0;
            void *v113 = 0;
            swift_release();
            uint64_t v114 = (v149 - v150 + v105);
            uint64_t v178 = v147;
            uint64_t v179 = v109;
            uint64_t v180 = v101;
            uint64_t v181 = v105;
            uint64_t v115 = v150;
            uint64_t v182 = v114;
            uint64_t v183 = v152;
            uint64_t v184 = v150;
            uint64_t v185 = v149;
            uint64_t v116 = v141;
            void *v141 = 0;
            v116[1] = 0;
            char v187 = 1;
            uint64_t v188 = v106;
            uint64_t v189 = v107;
            uint64_t v190 = v108;
            uint64_t v117 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v106, v107, v108, (uint64_t)v101);
            uint64_t v118 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, v106, v107, v108, (uint64_t)v101);
            if ((v119 & 1) == 0)
            {
              uint64_t v120 = v118;
              sub_1B62F0E60(*(void *)(v148 + 32), (uint64_t)v170);
              sub_1B62CA4FC((uint64_t)v170, (uint64_t)&v171, &qword_1EB980080, (uint64_t)&type metadata for WorldAABB);
              if (v173) {
                unsigned int v121 = -1;
              }
              else {
                unsigned int v121 = 0;
              }
              int8x16_t v122 = (int8x16_t)vdupq_n_s32(v121);
              int8x16_t v123 = vbslq_s8(v122, v139, v171);
              int8x16_t v124 = vbslq_s8(v122, v138, v172);
              uint64_t v125 = (int8x16_t *)(v120 + 32 * v115);
              *uint64_t v125 = v123;
              v125[1] = v124;
            }
            *(void *)(v117 + 8 * v115) = v158;
            swift_retain();
            swift_release();
            sub_1B62F0788(v156, v155, v143, 0, *((unsigned __int8 *)v154 + 227), v153 & 1, &v178);
            uint64_t v126 = v197;
            sub_1B6345178(v101, (unsigned __int16 **)&v174, (uint64_t)v177);
            uint64_t v197 = v126;
            uint64_t v103 = v145;
            if (*(void *)(v101[13] + 16))
            {
              uint64_t v127 = swift_bridgeObjectRetain();
              sub_1B639147C(v127, v109);
              swift_bridgeObjectRelease();
              char v128 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v129 = v101[13];
              if (v128)
              {
                sub_1B6399BB8(0, *(void *)(v129 + 16));
              }
              else
              {
                id v130 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v129 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  id v130 = (void *)swift_allocObject();
                  size_t v131 = j__malloc_size(v130);
                  v130[2] = 0;
                  v130[3] = 2 * ((uint64_t)(v131 - 32) / 72);
                }
                void *v140 = v130;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v101[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                uint64_t v132 = *(char **)(v109 + 232);
                float32x4_t v133 = *(char **)(v109 + 256);
                if (v132 == v133)
                {
                  float v134 = *(char **)(v109 + 240);
                }
                else
                {
                  sub_1B666018C(v133, v132);
                  float32x4_t v133 = *(char **)(v109 + 232);
                  float v134 = *(char **)(v109 + 240);
                  if (v134 == v133)
                  {
                    float v134 = 0;
                    float32x4_t v133 = 0;
                    *(void *)(v109 + 232) = 0;
                    *(void *)(v109 + 240) = 0;
                  }
                }
                *(void *)(v109 + 248) = v134;
                *(void *)(v109 + 256) = v133;
              }
            }
            ecs_stack_allocator_pop_snapshot(v103);
            int v102 = v146;
            if (v146)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v109 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v109 + 376));
            }
            swift_release();
            v104 += 6;
            uint64_t v100 = v151 - 1;
          }
          while (v151 != 1);
        }
      }
      sub_1B62F073C((uint64_t)&v162);
      return ecs_stack_allocator_pop_snapshot(*(void *)(v157 + 32));
    }
  }
  return result;
}

void sub_1B62F06B8(uint64_t a1, Swift::Int a2)
{
  if (*(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_counters))
  {
    swift_getAtKeyPath();
    vfx_counters.add(_:_:)(v4, a2);
  }
}

uint64_t sub_1B62F073C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62F0788(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, int a6, void *a7)
{
  int v50 = a6;
  uint64_t v53 = a5;
  uint64_t v54 = a1;
  uint64_t v11 = a2 + 537;
  uint64_t v12 = sub_1B6E31118();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = MEMORY[0x1F4188790](v12, v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a2;
  int v48 = *(unsigned __int8 *)(a2 + 537);
  if ((v48 & 1) != 0 || (*(unsigned char *)(v11 + 2) & 1) != 0 || *(unsigned char *)(v11 + 3) == 1)
  {
    uint64_t v52 = v11;
    uint64_t v47 = result;
    uint64_t v18 = (uint64_t *)a7[11];
    uint64_t v19 = a7[12];
    uint64_t v20 = a7[13];
    uint64_t v21 = a7[2];
    uint64_t v46 = sub_1B62C9024((uint64_t)&type metadata for VFXDrawCallHandler, (uint64_t)&off_1F0F7B508, v18, v19, v20, v21);
    uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v18, v19, v20, v21);
    if ((a4 & 1) != 0 || (uint64_t v51 = sub_1B695F7A0(a3), !v23))
    {
      char v25 = a4;
      sub_1B6E31108();
      uint64_t v51 = sub_1B6E310B8();
      uint64_t v24 = v26;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v47);
    }
    else
    {
      uint64_t v24 = v23;
      char v25 = a4;
    }
    char v27 = *(unsigned char *)(v52 + 3) ^ 1;
    if (*(unsigned char *)(v52 + 3)) {
      int v28 = 1065353216;
    }
    else {
      int v28 = 0;
    }
    LODWORD(v52) = v28;
    if ((v27 & 1) == 0 && (v25 & 1) == 0)
    {
      unint64_t v29 = sub_1B695F7B8(a3);
      char v27 = 0;
      if ((v29 & 0x100000000) != 0) {
        int v30 = 1065353216;
      }
      else {
        int v30 = v29;
      }
      LODWORD(v52) = v30;
    }
    uint64_t v31 = a7[6];
    uint64_t v32 = a7[7];
    uint64_t v33 = v32 - v31;
    if (v32 != v31)
    {
      BOOL v34 = v53 == 1;
      unsigned int v35 = (uint64_t *)(v22 + 8 * v31);
      uint64_t v36 = v46 + 56 * v31 + 24;
      uint64_t v37 = 8 * (char)v53;
      do
      {
        uint64_t v44 = *v35;
        *(_DWORD *)(v36 + 8) = v34;
        if (v50)
        {
          unint64_t v39 = 0xED00006574697257;
          uint64_t v38 = 0x6874706544584656;
        }
        else
        {
          uint64_t v38 = *(void *)&aOpaque_6[v37];
          unint64_t v39 = *(void *)((char *)&unk_1B6E99DC8 + v37);
        }
        *(void *)(v36 - 24) = v38;
        *(void *)(v36 - 16) = v39;
        swift_retain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v36 + 13) = (*(unsigned char *)(v44 + 370) & 4) != 0;
        *(unsigned char *)(v36 + 14) = *(unsigned char *)(v44 + 257);
        *(void *)(v36 + 16) = v51;
        *(void *)(v36 + 24) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v40 = swift_allocObject();
        swift_weakInit();
        uint64_t v41 = swift_allocObject();
        swift_weakInit();
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = v40;
        *(void *)(v42 + 24) = v41;
        *(_DWORD *)(v42 + 32) = v52;
        *(unsigned char *)(v42 + 36) = v27;
        *(unsigned char *)(v42 + 37) = v53;
        *(unsigned char *)(v42 + 38) = v48;
        *(void *)(v42 + 40) = v44;
        uint64_t v43 = *(void *)(v36 - 8);
        *(void *)(v36 - 8) = sub_1B69A20B0;
        *(void *)uint64_t v36 = v42;
        sub_1B62C6A50(v43);
        ++v35;
        v36 += 56;
        --v33;
      }
      while (v33);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B62F0B08(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, __int16 a11, void *a12)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a4 + 80) + 8 * a1 + 32) + 200) == 1) {
    *(unsigned char *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  }
  uint64_t v18 = *(os_unfair_lock_s **)(a4 + 128);
  swift_retain_n();
  os_unfair_lock_lock(v18);
  uint64_t v19 = *(void *)(a4 + 96);
  uint64_t v20 = *(void *)(v19 + 40 * a1 + 32);
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v22 = (int *)(v20 + 32);
    while (1)
    {
      uint64_t v23 = *v22++;
      uint64_t v24 = *(void *)(*(void *)(a4 + 136) + 32 + 8 * v23);
      if (*(void *)(v24 + 240) != *(void *)(v24 + 232)) {
        break;
      }
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    sub_1B6358028(a1);
    uint64_t v19 = *(void *)(a4 + 96);
  }
  uint64_t v25 = v19 + 40 * a1;
  char v53 = a3;
  uint64_t v26 = 36;
  if (a3) {
    uint64_t v26 = 32;
  }
  int v27 = *(_DWORD *)(v25 + v26 + 32);
  uint64_t v28 = HIDWORD(a2) & 1;
  uint64_t v49 = a6;
  if (v27 == -1)
  {
    __int16 v46 = a11;
    uint64_t v47 = a12;
    uint64_t v48 = a10;
    uint64_t v31 = a2;
  }
  else
  {
    uint64_t v29 = *(void *)(*(void *)(a4 + 136) + 8 * v27 + 32);
    swift_retain();
    uint64_t v30 = a6;
    uint64_t v31 = a2;
    sub_1B62FC608(v29, a2 | (unint64_t)(v28 << 32), a5, v30, a7, a8, a9, &v54, a10, a11, a12);
    if (v54)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
      return swift_release_n();
    }
    __int16 v46 = a11;
    uint64_t v47 = a12;
    uint64_t v48 = a10;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  uint64_t v32 = (void *)(a4 + 136);
  swift_retain();
  int v33 = sub_1B628A6F0((uint64_t *)(a4 + 136), a4, v31 | (v28 << 32), a1, v53 & 1);
  swift_release();
  BOOL v34 = *(void **)(a4 + 96);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a4 + 96) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    BOOL v34 = sub_1B6C16694(v34);
    *(void *)(a4 + 96) = v34;
  }
  uint64_t v36 = v34 + 4;
  uint64_t v37 = (char **)&v34[5 * a1 + 4];
  if (v53)
  {
    uint64_t v38 = *v37;
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v37 = v38;
    if ((v39 & 1) == 0)
    {
      uint64_t v38 = sub_1B62B7EA0(0, *((void *)v38 + 2) + 1, 1, v38);
      *uint64_t v37 = v38;
    }
    unint64_t v41 = *((void *)v38 + 2);
    unint64_t v40 = *((void *)v38 + 3);
    if (v41 >= v40 >> 1)
    {
      uint64_t v38 = sub_1B62B7EA0(v40 > 1, v41 + 1, 1, v38);
      *uint64_t v37 = v38;
    }
    *((void *)v38 + 2) = v41 + 1;
    *(_DWORD *)&v38[4 * v41 + 32] = v33;
    LODWORD(v36[5 * a1 + 4]) = v33;
  }
  else
  {
    uint64_t v42 = &v36[5 * a1];
    uint64_t v43 = v42[1];
    sub_1B68E84A8(v43, v43, v33);
    v42[1] = v43 + 1;
    *((_DWORD *)v42 + 9) = v33;
  }
  LOBYTE(v36[5 * a1 + 3]) = 1;
  uint64_t v44 = *(void *)(*v32 + 8 * v33 + 32);
  swift_retain();
  sub_1B63BA4F0(v44, v53 & 1, a5, v49, a7, a8, a9, v48, v46, v47);
  return swift_release_n();
}

uint64_t sub_1B62F0E60@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result == 0xFFFFFFFFLL)
  {
LABEL_2:
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    char v7 = 1;
    goto LABEL_3;
  }
  uint64_t v3 = 0;
  char v7 = 1;
  if (result << 32 < (uint64_t)0xFFFFFFFF00000001)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    goto LABEL_3;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  if ((int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) != -1 && *(_DWORD *)(v8 + 12 * (int)result + 8) != HIDWORD(result)) {
      goto LABEL_2;
    }
    long long v9 = (int *)(v8 + 12 * (int)result);
    uint64_t v10 = *(void *)(*(void *)(v2 + 136) + 8 * *v9 + 32);
    uint64_t v11 = *(void *)(v10 + 48);
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12) {
      goto LABEL_2;
    }
    uint64_t v13 = *((__int16 *)v9 + 2);
    uint64_t v14 = (void *)(v11 + 56);
    while ((ValueMetadata *)*(v14 - 3) != &type metadata for WorldAABB)
    {
      v14 += 5;
      if (!--v12) {
        goto LABEL_2;
      }
    }
    char v7 = 0;
    long long v15 = (uint64_t *)(*(void *)(v10 + 128) + *v14 + 32 * v13);
    uint64_t v3 = *v15;
    uint64_t v4 = v15[1];
    uint64_t v5 = v15[2];
    uint64_t v6 = v15[3];
  }
LABEL_3:
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  return result;
}

uint64_t sub_1B62F0F70(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unsigned __int16 **a6, uint64_t a7)
{
  Swift::Int v125 = 0;
  if ((*(unsigned char *)(result + 272) & 1) == 0)
  {
    char v7 = (void *)result;
    if (!*(void *)(result + 280))
    {
      uint64_t v11 = (*(void *)(*(void *)(a3 + 288) + 128) + 247) & -*(void *)(*(void *)(a3 + 288) + 128);
      swift_retain();
      uint64_t v12 = (void *)sub_1B62F1868(0, v11);
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      swift_unknownObjectRetain();
      swift_release();
      v7[35] = v12;
      v7[36] = v14;
      v7[37] = v16;
      v7[38] = v11;
      id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      if (v17 != (id)2)
      {
        uint64_t v20 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
        id v21 = v12;
        uint64_t v19 = &v20[v14];
        uint64_t v18 = (uint64_t)&v20[v14 + v16];
      }
      uint64_t v103 = (uint64_t)v19;
      uint64_t v22 = sub_1B62F202C(v19, v18, a2, a4, 0, a3);
      swift_retain();
      uint64_t v23 = (void *)sub_1B62F1868(0, v22);
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      swift_unknownObjectRetain();
      swift_release();
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v7[45] = v23;
      v7[46] = v25;
      v7[47] = v27;
      v7[48] = a4;
      v7[49] = a2;
      uint64_t v104 = 0;
      if (objc_msgSend(v23, sel_storageMode) != (id)2)
      {
        id v28 = objc_msgSend((id)swift_unknownObjectRetain(), (SEL)&selRef_endTransaction);
        id v29 = v23;
        uint64_t v104 = (uint64_t)v28 + v25;
      }
      if ((a4 & 0x8000000000000000) != 0
        || HIDWORD(a4)
        || ((*(_DWORD *)uint64_t v104 = a4,
             *(void *)(v104 + 12) = 0,
             *(void *)(v104 + 4) = 0,
             uint64_t v30 = sub_1B62EB1B4(),
             (v31 & 1) != 0)
          ? (unint64_t v32 = a4)
          : (unint64_t v32 = v30),
            (v32 & 0x8000000000000000) != 0 || HIDWORD(v32)))
      {
        uint64_t result = sub_1B6E32BD8();
        __break(1u);
      }
      else
      {
        *(_DWORD *)(v104 + 28) = v32;
        swift_retain();
        int v33 = sub_1B62F1C70(&type metadata for Color);
        swift_release();
        *(unsigned char *)(v104 + 120) = v33 != 0;
        swift_retain();
        BOOL v34 = sub_1B62F1C70(&type metadata for Scale1);
        swift_release();
        if (v34 || (swift_retain(), unsigned int v35 = sub_1B62F1C70(&type metadata for Scale2), swift_release(), v35))
        {
          BOOL v36 = 1;
        }
        else
        {
          swift_retain();
          uint64_t v95 = sub_1B62F1C70(&type metadata for Scale3);
          swift_release();
          BOOL v36 = v95 != 0;
        }
        *(unsigned char *)(v104 + 121) = v36;
        *(double *)&long long v37 = sub_1B62E9BFC();
        *(_OWORD *)(v104 + 32) = v37;
        *(_OWORD *)(v104 + 48) = v38;
        *(_OWORD *)(v104 + 64) = v39;
        *(_OWORD *)(v104 + 80) = v40;
        uint64_t v102 = (uint64_t)a6[10];
        if (v102 <= 0)
        {
          Swift::Int v93 = 0;
        }
        else
        {
          unint64_t v41 = a6[8];
          unint64_t v101 = a6[7];
          if (v101)
          {
            uint64_t v42 = 0;
            uint64_t v43 = a6[9];
            uint64_t v44 = *((void *)v43 + 4);
            int v116 = *((unsigned __int8 *)v41 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            uint64_t v97 = v43 + 32;
            uint64_t v98 = a6[5];
            size_t v96 = v43 + 52;
            uint64_t v118 = *a6;
            uint64_t v117 = (uint64_t)*a6 + 41;
            uint64_t v100 = a6[8];
            char v119 = v43;
            uint64_t v99 = v44;
            while (1)
            {
              uint64_t v45 = v41;
              __int16 v46 = &v98[24 * v42];
              uint64_t v48 = *(unsigned int *)v46;
              uint64_t v47 = *((unsigned int *)v46 + 1);
              uint64_t v49 = *((unsigned int *)v46 + 2);
              uint64_t v50 = *((void *)v46 + 2);
              uint64_t v51 = *((void *)v46 + 5);
              uint64_t v115 = v42;
              uint64_t v107 = *((void *)v46 + 4);
              uint64_t v108 = *((void *)v46 + 3);
              if (v116)
              {
                uint64_t v52 = *(os_unfair_lock_s **)(v51 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v52);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v51 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v44);
              char v53 = v119;
              uint64_t v112 = *((void *)v119 + 7);
              uint64_t v113 = *((void *)v119 + 6);
              uint64_t v110 = *((void *)v119 + 9);
              uint64_t v111 = *((void *)v119 + 8);
              uint64_t v109 = *((void *)v119 + 10);
              uint64_t v54 = *((void *)v119 + 4);
              uint64_t v55 = *(void *)(*(void *)(*(void *)(*(void *)(v51 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              *((void *)v119 + 6) = ecs_stack_allocator_allocate(v54, 48 * v55, 8);
              *((void *)v119 + 7) = v55;
              v97[1] = 0;
              v97[2] = 0;
              *uint64_t v97 = 0;
              swift_release();
              v120[0] = v45;
              v120[1] = v51;
              uint64_t v114 = v51;
              v120[2] = v119;
              v120[3] = v49;
              v120[4] = (v47 - v48 + v49);
              v120[5] = v102;
              v120[6] = v48;
              v120[7] = v47;
              v120[8] = 0;
              v120[9] = 0;
              char v121 = 1;
              uint64_t v122 = v50;
              uint64_t v123 = v108;
              uint64_t v124 = v107;
              sub_1B62F2168((uint64_t)v120, a2, a7, v103, v104, &v125);
              unint64_t v56 = *((void *)v119 + 6);
              uint64_t v57 = *((void *)v119 + 8);
              if (!v57)
              {
                uint64_t v83 = *((void *)v119 + 7);
                char v84 = (void *)*((void *)v119 + 4);
                goto LABEL_61;
              }
              for (uint64_t i = 0; i != v57; ++i)
              {
                uint64_t v60 = (uint64_t *)(v56 + 48 * i);
                uint64_t v61 = *v60;
                uint64_t v62 = (void (*)(uint64_t))v60[4];
                uint64_t v63 = *((void *)v53 + 9);
                if (v63) {
                  BOOL v64 = v61 == v63;
                }
                else {
                  BOOL v64 = 0;
                }
                if (v64 || !v118[11]) {
                  goto LABEL_26;
                }
                unint64_t v65 = v118[9];
                uint64_t v66 = (void *)(v117 + v118[8]);
                uint64_t v67 = v60[2];
                uint64_t v68 = v66;
                unint64_t v69 = v65 >> 4;
                uint64_t v70 = v117;
                if (v65 >= 0x10)
                {
                  while (*v68 != v61)
                  {
                    ++v70;
                    v68 += 2;
                    if (!--v69) {
                      goto LABEL_41;
                    }
                  }
                  unsigned int v71 = *(unsigned __int8 *)(v70 + v118[10]);
                  BOOL v72 = v71 > 5;
                  int v73 = (1 << v71) & 0x23;
                  if (v72 || v73 == 0)
                  {
LABEL_26:
                    uint64_t v59 = swift_retain();
                    v62(v59);
                    swift_release();
                    goto LABEL_27;
                  }
                }
LABEL_41:
                if (swift_conformsToProtocol2()) {
                  uint64_t v75 = v67;
                }
                else {
                  uint64_t v75 = 0;
                }
                if (v75)
                {
                  if (v65 < 0x10) {
                    goto LABEL_26;
                  }
                  uint64_t v76 = v66;
                  unint64_t v77 = v65 >> 4;
                  uint64_t v78 = v117;
                  while (*v76 != v75)
                  {
                    ++v78;
                    v76 += 2;
                    if (!--v77) {
                      goto LABEL_54;
                    }
                  }
                  unsigned int v79 = *(unsigned __int8 *)(v78 + v118[10]);
                  BOOL v72 = v79 > 5;
                  int v80 = (1 << v79) & 0x23;
                  if (v72 || v80 == 0) {
                    goto LABEL_26;
                  }
LABEL_54:
                  uint64_t v82 = 16 * (v65 >> 4);
                  while (*v66 != v75)
                  {
                    v66 += 2;
                    v82 -= 16;
                    if (!v82) {
                      goto LABEL_26;
                    }
                  }
                }
LABEL_27:
                char v53 = v119;
              }
              uint64_t v83 = *((void *)v119 + 7);
              unint64_t v56 = *((void *)v119 + 6);
              char v84 = (void *)*((void *)v119 + 4);
              if (*((uint64_t *)v119 + 8) >= 1) {
                swift_arrayDestroy();
              }
LABEL_61:
              unint64_t v41 = v100;
              ecs_stack_allocator_deallocate(v84, v56, 48 * v83);
              *((void *)v53 + 6) = v113;
              *((void *)v53 + 7) = v112;
              *((void *)v53 + 8) = v111;
              *((void *)v53 + 9) = v110;
              *((void *)v53 + 10) = v109;
              if (*(void *)(*((void *)v53 + 13) + 16))
              {
                uint64_t v85 = swift_bridgeObjectRetain();
                sub_1B639147C(v85, v114);
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v87 = *((void *)v53 + 13);
                if (isUniquelyReferenced_nonNull_native)
                {
                  sub_1B6399BB8(0, *(void *)(v87 + 16));
                }
                else
                {
                  int8x16_t v88 = (void *)MEMORY[0x1E4FBC860];
                  if (*(void *)(v87 + 24) >= 2uLL)
                  {
                    sub_1B62F6F7C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                    int8x16_t v88 = (void *)swift_allocObject();
                    size_t v89 = j__malloc_size(v88);
                    v88[2] = 0;
                    v88[3] = 2 * ((uint64_t)(v89 - 32) / 72);
                  }
                  void *v96 = v88;
                  swift_bridgeObjectRelease();
                }
                if (*(unsigned __int8 *)(*((void *)v53 + 2)
                                                      + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
                   - 1 >= 2)
                {
                  int8x16_t v90 = *(char **)(v114 + 232);
                  uint64_t v91 = *(char **)(v114 + 256);
                  if (v90 == v91)
                  {
                    uint64_t v92 = *(char **)(v114 + 240);
                  }
                  else
                  {
                    sub_1B666018C(v91, v90);
                    uint64_t v91 = *(char **)(v114 + 232);
                    uint64_t v92 = *(char **)(v114 + 240);
                    if (v92 == v91)
                    {
                      uint64_t v92 = 0;
                      uint64_t v91 = 0;
                      *(void *)(v114 + 232) = 0;
                      *(void *)(v114 + 240) = 0;
                    }
                  }
                  *(void *)(v114 + 248) = v92;
                  *(void *)(v114 + 256) = v91;
                }
              }
              uint64_t v44 = v99;
              ecs_stack_allocator_pop_snapshot(v99);
              if (v116)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v114 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v114 + 376));
              }
              swift_release();
              uint64_t v42 = v115 + 1;
              if ((unsigned __int16 *)(v115 + 1) == v101)
              {
                Swift::Int v93 = v125;
                goto LABEL_78;
              }
            }
          }
          Swift::Int v93 = 0;
        }
LABEL_78:
        uint64_t KeyPath = swift_getKeyPath();
        sub_1B62F06B8(KeyPath, v93);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B62F1868(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2;
  uint64_t v6 = *(void *)(v2 + 144) + 96 * a1;
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(v6 + 16);
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v2 + 96);
    uint64_t v20 = v3[11];
    uint64_t v21 = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6E316E8();
    sub_1B638491C();
    sub_1B6E31A38();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    if (v3[9] >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v10 = v20;
    int v11 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v20 = 0;
    swift_retain();
    sub_1B6B33E34(v11, &v20, v10, v21);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v12 = v3[16];
  if (v12 <= ((a2 + v12 - 1) & -v12)) {
    uint64_t v13 = (a2 + v12 - 1) & -v12;
  }
  else {
    uint64_t v13 = v3[16];
  }
  v3[13] += v13;
  if (v8 < v13 + v7)
  {
    uint64_t v14 = sub_1B62FF960(v13 + v7);
    uint64_t v15 = v3[18];
    id v16 = objc_msgSend((id)swift_unknownObjectRetain(), sel_length);
    uint64_t v17 = v15 + 96 * a1;
    *(void *)uint64_t v17 = v14;
    *(void *)(v17 + 8) = 0;
    *(void *)(v17 + 16) = v16;
    *(_OWORD *)(v17 + 32) = 0u;
    *(_OWORD *)(v17 + 48) = 0u;
    *(_OWORD *)(v17 + 64) = 0u;
    *(_OWORD *)(v17 + 80) = 0u;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v18 = (uint64_t *)(v3[18] + 96 * a1);
  uint64_t result = *v18;
  v18[1] += v13;
  return result;
}

ValueMetadata *sub_1B62F1C70(ValueMetadata *a1)
{
  if (a1 != &type metadata for Color
    || (uint64_t v2 = &type metadata for TransientOriginColor, !sub_1B62FACF8((uint64_t)&type metadata for TransientOriginColor)))
  {
    if (a1 != &type metadata for Scale3 && a1 != &type metadata for Scale1 && a1 != &type metadata for Scale2) {
      return 0;
    }
    uint64_t v2 = &type metadata for TransientOriginScale;
    if (!sub_1B62FACF8((uint64_t)&type metadata for TransientOriginScale)) {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_1B62F1D2C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = *(_DWORD *)(a1 + 36);
  uint64_t v6 = *(int *)(a1 + 32);
  if (v6 == -1 && v5 == 0) {
    goto LABEL_13;
  }
  if ((v6 & 0x80000000) != 0) {
    goto LABEL_13;
  }
  uint64_t v8 = v4;
  uint64_t v9 = *(void *)(v4 + 64);
  if (*(void *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v6) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v5 != -1 && *(_DWORD *)(v10 + 12 * (int)v6 + 8) != v5) {
    goto LABEL_13;
  }
  unint64_t v16 = *(void *)(v8 + 80);
  uint64_t v17 = (int *)(v10 + 12 * (int)v6);
  uint64_t v18 = *(void *)(*(void *)(v9 + 136) + 8 * *v17 + 32);
  __int16 v19 = *((_WORD *)v17 + 2);
  swift_retain();
  sub_1B62F6B80(a1);
  sub_1B62F1F58(v8);
  LOBYTE(a2) = sub_1B62F1FA4(v18, v19, 656, a2, a4, v16, a1, (unsigned __int16 **)v8, a3);
  sub_1B62F073C(v8);
  sub_1B62F648C(a1);
  uint64_t result = swift_release();
  if ((a2 & 1) == 0)
  {
LABEL_13:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62F1F58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62F1FA4(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unsigned __int16 **a8, uint64_t a9)
{
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    return 0;
  }
  for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v10) {
      return 0;
    }
  }
  sub_1B62F0F70(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7, a8, a9);
  return 1;
}

uint64_t sub_1B62F202C(_WORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(*(void *)(a6 + 288) + 128);
  uint64_t v12 = (v11 + 127) & -v11;
  bzero(a1, (v11 + 247) & -v11);
  *(_DWORD *)a1 = 0;
  a1[2] = 0;
  a1[3] = v12;
  if (a5) {
    uint64_t v12 = a5;
  }
  for (;
        a3;
        uint64_t v12 = (v12 + sub_1B62F238C((uint64_t)v17) * a4 + *(void *)(*(void *)(a6 + 288) + 128) - 1) & -*(void *)(*(void *)(a6 + 288) + 128))
  {
    unint64_t v13 = __clz(__rbit64(a3));
    if (v13 < 0x40 && ((1 << v13) & a3) != 0) {
      a3 &= ~(1 << v13);
    }
    char v15 = sub_1B62F23B8(v13);
    if (v15 == 28) {
      break;
    }
    char v16 = v15;
    uint64_t v17 = sub_1B62F23CC(v15);
    uint64_t v18 = sub_1B62F23A4(v16);
    __int16 v19 = word_1B6EB9D76[v16];
    __int16 v20 = sub_1B62F238C((uint64_t)v17);
    uint64_t v21 = &a1[4 * v18];
    *(_DWORD *)uint64_t v21 = v12;
    long long v21[2] = v19;
    v21[3] = v20;
  }
  return v12;
}

uint64_t sub_1B62F2168(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v25 = (void *)result;
  if (a2)
  {
    unint64_t v6 = a2;
    while (1)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      if (v7 < 0x40 && ((1 << v7) & v6) != 0) {
        v6 &= ~(1 << v7);
      }
      uint64_t result = sub_1B62F23B8(v7);
      if (result == 28) {
        return result;
      }
      char v9 = result;
      if ((result - 65) < 0x7Fu) {
        break;
      }
      if ((result & 0x80) != 0)
      {
        if (result <= 0xC0u) {
          break;
        }
        unint64_t v10 = 1uLL >> -(char)result;
      }
      else
      {
        if (result >= 0x40u) {
          break;
        }
        unint64_t v10 = 1 << result;
      }
      if ((v10 & ~a3) == 0) {
        break;
      }
LABEL_5:
      if (!v6) {
        return result;
      }
    }
    uint64_t v11 = sub_1B62F23CC(result);
    uint64_t v13 = v12;
    uint64_t v14 = (int *)(a4 + 8 * sub_1B62F23A4(v9));
    uint64_t v15 = v25[2];
    uint64_t v29 = *((__int16 *)v14 + 3);
    __dst = (void *)(a5 + *v14 + v25[3] * v29);
    uint64_t v16 = v25[6];
    uint64_t v17 = v25[7];
    uint64_t v18 = *(void *)(v13 + 8);
    uint64_t v19 = sub_1B62F238C((uint64_t)v11);
    uint64_t v20 = v17 - v16;
    swift_retain();
    uint64_t v21 = sub_1B62C9024((uint64_t)v11, v13, 0, 0, 0, v15);
    if (v22)
    {
      if (sub_1B62CA808((uint64_t)v11)) {
        sub_1B62FD0AC((uint64_t)__dst, 0, v20, (uint64_t)v11, v18);
      }
      else {
        sub_1B62FCFA0((uint64_t)__dst, 0, v20, (uint64_t)v11);
      }
    }
    else
    {
      uint64_t v23 = (const void *)(v21 + v19 * v16);
      if (sub_1B62CA808((uint64_t)v11)) {
        memcpy(__dst, v23, v19 * v20);
      }
      else {
        sub_1B62CD04C();
      }
    }
    uint64_t result = swift_release();
    *a6 += v20 * v29;
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1B62F238C(uint64_t a1)
{
  return *(void *)(*(void *)(a1 - 8) + 72);
}

uint64_t sub_1B62F23A4(char a1)
{
  return qword_1B6E8EDB0[a1];
}

uint64_t sub_1B62F23B8(uint64_t result)
{
  if (result >= 0x1Cu) {
    return 28;
  }
  else {
    return result;
  }
}

ValueMetadata *sub_1B62F23CC(char a1)
{
  return off_1E6146030[a1];
}

uint64_t sub_1B62F23EC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(result + 56));
    unint64_t v7 = swift_bridgeObjectRetain();
    sub_1B62F2860(v7);
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_retain();
    sub_1B62F3280(v8, a2, v6);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B62F3590(a3);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 56));
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62F24A4(unint64_t a1, void (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    unint64_t v6 = *v2;
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = v7 + v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v10 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = MEMORY[0x1BA9B4590](v10, v12, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v2 = v13;
  uint64_t v11 = v13 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  a2(v11 + 8 * *(void *)(v11 + 16) + 32, (*(void *)(v11 + 24) >> 1) - *(void *)(v11 + 16), a1);
  if (v14 >= 1) {
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) += v14;
  }
  swift_bridgeObjectRelease();

  return sub_1B6E31C48();
}

uint64_t sub_1B62F2658(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
      sub_1B6645788(0, &qword_1E9DCD9E0, (unint64_t *)&qword_1EB9804E0);
      sub_1B66457E0(&qword_1E9DCD9E8, &qword_1E9DCD9E0, (unint64_t *)&qword_1EB9804E0);
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v10; ++i)
      {
        uint64_t v12 = sub_1B68C8D68(v16, i, a3);
        uint64_t v14 = *v13;
        swift_unknownObjectRetain();
        ((void (*)(uint64_t **, void))v12)(v16, 0);
        *(void *)(a1 + 8 * i) = v14;
      }
      swift_bridgeObjectRelease();
    }
    return a3;
  }
  uint64_t v5 = a3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    return a3;
  }
  unint64_t v7 = v5 + 32;
  unint64_t v8 = v5 + 32 + 8 * v6;
  if (v7 >= a1 + 8 * v6 || v8 <= a1)
  {
    sub_1B62F3064(0, (unint64_t *)&qword_1EB9804E0);
    swift_arrayInitWithCopy();
    return a3;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62F2860(unint64_t a1)
{
  return sub_1B62F24A4(a1, (void (*)(uint64_t, void, unint64_t))sub_1B62F2878);
}

uint64_t sub_1B62F2878(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
      sub_1B6645788(0, &qword_1E9DCDA38, (unint64_t *)&qword_1EB97D860);
      sub_1B66457E0(&qword_1E9DCDA40, &qword_1E9DCDA38, (unint64_t *)&qword_1EB97D860);
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v10; ++i)
      {
        uint64_t v12 = sub_1B68C8D00(v16, i, a3);
        uint64_t v14 = *v13;
        swift_unknownObjectRetain();
        ((void (*)(uint64_t **, void))v12)(v16, 0);
        *(void *)(a1 + 8 * i) = v14;
      }
      swift_bridgeObjectRelease();
    }
    return a3;
  }
  uint64_t v5 = a3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    return a3;
  }
  unint64_t v7 = v5 + 32;
  unint64_t v8 = v5 + 32 + 8 * v6;
  if (v7 >= a1 + 8 * v6 || v8 <= a1)
  {
    sub_1B62F3064(0, (unint64_t *)&qword_1EB97D860);
    swift_arrayInitWithCopy();
    return a3;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62F2A80(id a1, uint64_t a2, id a3, _OWORD *a4, char a5, uint64_t a6)
{
  uint64_t v10 = &selRef_fragmentBindings;
  if (a2) {
    uint64_t v10 = &selRef_vertexBindings;
  }
  id v11 = [a3 *v10];
  sub_1B62F3064(0, (unint64_t *)&qword_1EB97D7E0);
  unint64_t v12 = sub_1B6E31C28();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1B6E32C18();
    if (v13) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_5:
      uint64_t v14 = 0;
      while (1)
      {
        if ((v12 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = (void *)MEMORY[0x1BA9B4580](v14, v12);
        }
        else
        {
          uint64_t v15 = *(void **)(v12 + 8 * v14 + 32);
          swift_unknownObjectRetain();
        }
        if (objc_msgSend(v15, sel_index) == a1) {
          break;
        }
        swift_unknownObjectRelease();
        if (v13 == ++v14) {
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v17 = swift_dynamicCastObjCProtocolConditional();
      if (!v17)
      {
        uint64_t v25 = qword_1EB9852D0;
        swift_unknownObjectRetain();
        if (v25 != -1) {
          swift_once();
        }
        *((void *)&v39[0] + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        *(void *)&long long v32 = v15;
        sub_1B62F3064(0, (unint64_t *)&qword_1EB97D7E0);
        sub_1B6E32B18();
        int v26 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        *(void *)&v39[0] = 0;
        swift_retain();
        sub_1B6B33E34(v26, (uint64_t *)v39, 0, 0xE000000000000000);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (qword_1EB97F888 != -1) {
          swift_once();
        }
        uint64_t v16 = qword_1EB997DD0;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      }
      uint64_t v18 = (void *)v17;
      swift_getObjectType();
      swift_unknownObjectRetain_n();
      if ((sub_1B62F30B8() & 1) == 0) {
        goto LABEL_22;
      }
      if (qword_1EB97D6E8 != -1) {
        swift_once();
      }
      if (byte_1EB99799C == 1)
      {
        long long v19 = a4[9];
        v39[8] = a4[8];
        v39[9] = v19;
        v39[10] = a4[10];
        long long v20 = a4[5];
        v39[4] = a4[4];
        v39[5] = v20;
        long long v21 = a4[7];
        v39[6] = a4[6];
        v39[7] = v21;
        long long v22 = a4[1];
        v39[0] = *a4;
        v39[1] = v22;
        long long v23 = a4[3];
        void v39[2] = a4[2];
        v39[3] = v23;
        sub_1B62F3114(a2, v29);
        sub_1B62CA210((uint64_t)v29, (uint64_t)v30, (unint64_t *)&qword_1EB97D6F0);
        if (!*((void *)&v30[0] + 1))
        {
          if (qword_1EB97F888 != -1) {
            swift_once();
          }
          uint64_t v16 = qword_1EB997DD0;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_31;
        }
        long long v32 = v30[0];
        long long v33 = v30[1];
        uint64_t v34 = v31;
        uint64_t v24 = *(void **)(a6 + 16);
        sub_1B63127F0(v29, (void (*)(void, void, void, void, void))sub_1B6312ABC);
        objc_msgSend(v24, sel_newArgumentEncoderWithBufferBinding_, v18);
        objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedLength);
        long long v35 = v32;
        sub_1B62C7BF4((uint64_t)&v35);
        sub_1B62D8AE0((uint64_t)&v33, (uint64_t)v36, (unint64_t *)&unk_1EB9804D0, (unint64_t *)&unk_1EB9804C0);
        sub_1B62D8C10((uint64_t)v36);
        sub_1B62D8AE0((uint64_t)&v33 + 8, (uint64_t)v37, (unint64_t *)&qword_1EB980450, (unint64_t *)&qword_1EB980440);
        sub_1B62D8C10((uint64_t)v37);
        uint64_t v38 = v34;
        sub_1B62D8C3C((uint64_t)&v38);
        swift_unknownObjectRelease();
        if ((a5 & 1) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
LABEL_22:
        objc_msgSend(v18, sel_bufferDataSize);
        if ((a5 & 1) == 0)
        {
LABEL_21:
          uint64_t v16 = sub_1B6B9D1FC((uint64_t)v15);
LABEL_31:
          swift_unknownObjectRelease_n();
          return v16;
        }
      }
      uint64_t v16 = MEMORY[0x1E4FBC860];
      goto LABEL_31;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  if (qword_1EB97F888 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1EB997DD0;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return v16;
}

uint64_t sub_1B62F3064(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_1B62F30B8()
{
  id v1 = objc_msgSend(v0, sel_bufferPointerType);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_elementIsArgumentBuffer);

  return v3;
}

uint64_t sub_1B62F3114@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  switch(result)
  {
    case 1:
      id v3 = v2 + 1;
      uint64_t v4 = v2 + 2;
      uint64_t v5 = v2 + 3;
      uint64_t v6 = v2 + 4;
      goto LABEL_6;
    case 2:
      id v3 = v2 + 6;
      uint64_t v4 = v2 + 7;
      uint64_t v5 = v2 + 8;
      uint64_t v6 = v2 + 9;
      v2 += 5;
      goto LABEL_6;
    case 8:
      id v3 = v2 + 11;
      uint64_t v4 = v2 + 12;
      uint64_t v5 = v2 + 13;
      uint64_t v6 = v2 + 14;
      v2 += 10;
      goto LABEL_6;
    case 16:
      id v3 = v2 + 16;
      uint64_t v4 = v2 + 17;
      uint64_t v5 = v2 + 18;
      uint64_t v6 = v2 + 19;
      v2 += 15;
LABEL_6:
      uint64_t v7 = *v6;
      uint64_t v8 = *v5;
      uint64_t v9 = *v4;
      uint64_t v10 = *v3;
      *a2 = *v2;
      a2[1] = v10;
      a2[2] = v9;
      a2[3] = v8;
      a2[4] = v7;
      break;
    default:
      sub_1B6E328C8();
      sub_1B6E31948();
      type metadata accessor for MTLRenderStages(0);
      sub_1B6E32B18();
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1B62F3280(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(result + 24) == 1)
  {
    uint64_t v5 = result;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v5 + 96);
    uint64_t v9 = *(void *)(v5 + 88);
    uint64_t v10 = v6;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6E316E8();
    sub_1B638491C();
    sub_1B6E31A38();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E328C8();
    sub_1B6E31948();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    if (*(void *)(a3 + 72) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
    int v8 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v9 = 0;
    swift_retain();
    sub_1B6B33E34(v8, &v9, v7, v10);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62F3590(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(void *)(v1 + 72);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v7 >= 4)
    {
      do
      {
LABEL_3:
        while (1)
        {
          sub_1B63947E4();
          unint64_t v5 = *(void *)(v2 + 72);
          if (v5 >> 62) {
            break;
          }
          if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 3) {
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_1B6E32C18();
        swift_bridgeObjectRelease();
      }
      while (v6 > 3);
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4)
  {
    goto LABEL_3;
  }
LABEL_9:
  unint64_t v8 = *(void *)(v2 + 72);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B6E32C18();
    if (v9) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_11:
      uint64_t v22 = MEMORY[0x1E4FBC860];
      sub_1B6E32A48();
      uint64_t v10 = 0;
      if (a1 <= 0x80000) {
        uint64_t v11 = 0x80000;
      }
      else {
        uint64_t v11 = a1;
      }
      uint64_t v21 = v11;
      unint64_t v20 = 0x80000001B6F3EE20;
      while (1)
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = (void *)MEMORY[0x1BA9B4580](v10, v8);
        }
        else
        {
          uint64_t v14 = *(void **)(v8 + 8 * v10 + 32);
          swift_unknownObjectRetain();
        }
        if ((uint64_t)objc_msgSend(v14, sel_length, v20) < a1)
        {
          unint64_t v12 = (void *)sub_1B6E31768();
          objc_msgSend(v14, sel_setLabel_, v12);

          swift_unknownObjectRetain();
          sub_1B62FF6C8(v2, v14);
          uint64_t v13 = a1;
        }
        else
        {
          id v15 = objc_msgSend(v14, sel_length);
          if ((uint64_t)v15 >= 0) {
            uint64_t v16 = (uint64_t)v15;
          }
          else {
            uint64_t v16 = (uint64_t)v15 + 1;
          }
          if (a1 >= v16 >> 1 || (uint64_t)objc_msgSend(v14, sel_length) <= 0x80000) {
            goto LABEL_17;
          }
          uint64_t v17 = (void *)sub_1B6E31768();
          objc_msgSend(v14, sel_setLabel_, v17);

          swift_unknownObjectRetain();
          sub_1B62FF6C8(v2, v14);
          uint64_t v13 = v21;
        }
        swift_unknownObjectRelease();
        sub_1B63846FC(v13);
        swift_unknownObjectRelease();
LABEL_17:
        ++v10;
        sub_1B6E32A08();
        sub_1B6E32A68();
        sub_1B6E32A78();
        sub_1B6E32A28();
        if (v9 == v10)
        {
          uint64_t v18 = v22;
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_31:
  *(void *)(v2 + 72) = v18;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62F38EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_retain();
  if (v4)
  {
    sub_1B62F5D8C(a1, v4);
    uint64_t v56 = *(void *)(*(void *)(*(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                                + 8 * *(void *)thread_worker_index(&thread_worker_index, v6)
                                + 8)
                    + 32);
    uint64_t v61 = (uint64_t *)(v1 + 192);
    uint64_t v58 = a1;
    int v74 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96);
    uint64_t v57 = a1;
    while (*(uint64_t *)(v2 + 120) > 0
         || *(void *)(*(void *)(v2 + 128) + 16)
         || *(void *)(*(void *)(v2 + 136) + 16))
    {
      sub_1B62F3DC4();
      uint64_t v16 = *(void *)(v2 + 112);
      uint64_t v17 = *(void *)(v2 + 120) - 1;
      *(void *)(v2 + 120) = v17;
      uint64_t v18 = v16 + 96 * v17;
      uint64_t v19 = *(unsigned int *)(v18 + 40);
      uint64_t v20 = *(unsigned int *)(v18 + 44);
      uint64_t v21 = *(void *)(v18 + 48);
      uint64_t v22 = *(void *)(v18 + 56);
      uint64_t v23 = *(unsigned __int8 *)(v18 + 64);
      uint64_t v25 = *(void *)(v18 + 72);
      uint64_t v24 = *(void *)(v18 + 80);
      uint64_t v27 = *(void *)(v18 + 88);
      uint64_t v26 = *(void *)(v18 + 96);
      uint64_t v28 = *(unsigned __int8 *)(v18 + 104);
      LODWORD(v16) = *(unsigned __int8 *)(v18 + 105);
      int v29 = *(unsigned __int8 *)(v18 + 106);
      uint64_t v30 = *(unsigned int *)(v18 + 108);
      uint64_t v31 = *(void *)(v18 + 120);
      uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v18 + 112);
      uint64_t v76 = *(void *)(v18 + 32);
      *(void *)(v2 + 64) = v76;
      *(void *)(v2 + 72) = v21;
      *(void *)(v2 + 80) = v22;
      *(_WORD *)(v2 + 88) = v23;
      if (v16 == 1 && (v29 ^ 1 | v74) != 0)
      {
        switch(v58)
        {
          case 1:
            if (v27 >= qword_1E9DD2FE8 && v27 < qword_1E9DD3030 && v27 != qword_1E9DD3028) {
              goto LABEL_36;
            }
            break;
          case 2:
          case 3:
            if (v27 < qword_1E9DD2FE8) {
              goto LABEL_33;
            }
            break;
          case 4:
            if (v27 >= qword_1E9DD2FE8 && v27 < qword_1E9DD3030) {
              goto LABEL_33;
            }
            break;
          case 5:
            if (v27 >= qword_1E9DD3030)
            {
LABEL_33:
              uint64_t v36 = *(void *)(v2 + 152);
              if (!*(void *)(v36 + 16)) {
                goto LABEL_36;
              }
              uint64_t v70 = v22;
              uint64_t v72 = v21;
              uint64_t v66 = v24;
              uint64_t v68 = v23;
              uint64_t v62 = v26;
              uint64_t v64 = v27;
              unint64_t v37 = sub_1B62C19C8(v76);
              uint64_t v26 = v62;
              uint64_t v27 = v64;
              uint64_t v24 = v66;
              uint64_t v23 = v68;
              uint64_t v22 = v70;
              uint64_t v21 = v72;
              if ((v38 & 1) == 0 || *(uint64_t *)(*(void *)(v36 + 56) + 8 * v37) >= 1) {
                goto LABEL_36;
              }
            }
            break;
          default:
LABEL_36:
            uint64_t v63 = v26;
            uint64_t v65 = v27;
            uint64_t v67 = v24;
            uint64_t v69 = v23;
            uint64_t v71 = v22;
            uint64_t v73 = v21;
            uint64_t v39 = 0x10000;
            if (!v29) {
              uint64_t v39 = 0;
            }
            uint64_t v59 = v39 | v28 | (v30 << 32) | 0x100;
            uint64_t v60 = v19 | (v20 << 32);
            if (*(unsigned char *)(v2 + 16))
            {
              uint64_t v40 = *v61;
              swift_unknownObjectRetain_n();
              uint64_t v41 = v31;
              swift_retain_n();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v61 = v40;
              uint64_t v43 = v75;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1B6C3D68C(0, *(void *)(v40 + 16) + 1, 1);
                uint64_t v40 = *v61;
              }
              uint64_t v45 = v71;
              uint64_t v44 = v73;
              uint64_t v47 = v67;
              uint64_t v46 = v69;
              uint64_t v49 = v63;
              uint64_t v48 = v65;
              unint64_t v51 = *(void *)(v40 + 16);
              unint64_t v50 = *(void *)(v40 + 24);
              if (v51 >= v50 >> 1)
              {
                sub_1B6C3D68C(v50 > 1, v51 + 1, 1);
                uint64_t v49 = v63;
                uint64_t v48 = v65;
                uint64_t v47 = v67;
                uint64_t v46 = v69;
                uint64_t v45 = v71;
                uint64_t v44 = v73;
                uint64_t v40 = *v61;
              }
              *(void *)(v40 + 16) = v51 + 1;
              uint64_t v52 = (void *)(v40 + 104 * v51);
              v52[4] = 0;
              v52[5] = v76;
              v52[6] = v60;
              v52[7] = v44;
              v52[8] = v45;
              v52[9] = v46;
              v52[10] = v25;
              v52[11] = v47;
              v52[12] = v48;
              v52[13] = v49;
              v52[14] = v59;
              v52[15] = v75;
              v52[16] = v31;
              *uint64_t v61 = v40;
              swift_release();
              swift_unknownObjectRelease();
              uint64_t v53 = v57;
            }
            else
            {
              swift_unknownObjectRetain();
              uint64_t v41 = v31;
              swift_retain();
              uint64_t v53 = v57;
              uint64_t v43 = v75;
            }
            ecs_stack_allocator_push_snapshot(v56);
            v43(v4, v53);
            ecs_stack_allocator_pop_snapshot(v56);
            if (*(unsigned char *)(v2 + 16) == 1)
            {
              uint64_t v55 = *v61;
              swift_unknownObjectRetain();
              swift_retain();
              char v54 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v61 = v55;
              if ((v54 & 1) == 0)
              {
                sub_1B6C3D68C(0, *(void *)(v55 + 16) + 1, 1);
                uint64_t v55 = *v61;
              }
              uint64_t v8 = v71;
              uint64_t v7 = v73;
              uint64_t v10 = v67;
              uint64_t v9 = v69;
              uint64_t v12 = v63;
              uint64_t v11 = v65;
              unint64_t v14 = *(void *)(v55 + 16);
              unint64_t v13 = *(void *)(v55 + 24);
              if (v14 >= v13 >> 1)
              {
                sub_1B6C3D68C(v13 > 1, v14 + 1, 1);
                uint64_t v12 = v63;
                uint64_t v11 = v65;
                uint64_t v10 = v67;
                uint64_t v9 = v69;
                uint64_t v8 = v71;
                uint64_t v7 = v73;
                uint64_t v55 = *v61;
              }
              *(void *)(v55 + 16) = v14 + 1;
              id v15 = (void *)(v55 + 104 * v14);
              v15[4] = 0;
              void v15[5] = v76;
              _DWORD v15[6] = v60;
              v15[7] = v7;
              v15[8] = v8;
              v15[9] = v9;
              v15[10] = v25;
              v15[11] = v10;
              v15[12] = v11;
              v15[13] = v12;
              v15[14] = v59 | 0x80000000;
              v15[15] = v43;
              v15[16] = v41;
              *uint64_t v61 = v55;
            }
            swift_release();
            swift_unknownObjectRelease();
            break;
        }
      }
      *(void *)(v2 + 64) = 0;
      *(void *)(v2 + 72) = 0;
      *(unsigned char *)(v2 + 88) = 0;
      *(void *)(v2 + 80) = 0;
      *(unsigned char *)(v2 + 89) = 1;
    }
    return swift_release();
  }
  return result;
}

void sub_1B62F3DC4()
{
  if (*(unsigned char *)(v0 + 161) == 1)
  {
    uint64_t v1 = v0;
    uint64_t v2 = *(void **)(v0 + 112);
    uint64_t v61 = (uint64_t *)(v0 + 112);
    if (*(void *)(*(void *)(v0 + 144) + 16))
    {
      uint64_t v3 = v2[2];
      if (v3
        && ((uint64_t v4 = *(void *)(v1 + 120), v4 == v3)
         || (sub_1B62F43BC(v4, v2[2]), uint64_t v2 = (void *)*v61, (v3 = *(void *)(*v61 + 16)) != 0)))
      {
        uint64_t v5 = 0;
        double v6 = *(int32x2_t **)(v1 + 144);
        int32x2_t v7 = v6[2];
        uint64_t v8 = v6 + 4;
        while (!*(void *)&v7)
        {
LABEL_7:
          if (++v5 == v3)
          {
            uint64_t v5 = v3;
            goto LABEL_15;
          }
        }
        uint64_t v9 = v8;
        int32x2_t v10 = v7;
        while (1)
        {
          int32x2_t v11 = vceq_s32(*v9, (int32x2_t)v2[12 * v5 + 5]);
          if (v11.i32[0] & v11.i32[1]) {
            break;
          }
          ++v9;
          if (!--*(void *)&v10) {
            goto LABEL_7;
          }
        }
        if (v5 + 1 != v3)
        {
          uint64_t v3 = v5 + 1;
          do
          {
            uint64_t v22 = v2 + 4;
            uint64_t v23 = (int32x2_t *)&v2[12 * v3 + 4];
            int32x2_t v24 = v23[1];
            uint64_t v25 = *(int32x2_t **)(v1 + 144);
            int32x2_t v26 = v25[2];
            if (v26)
            {
              uint64_t v27 = v25 + 4;
              while (1)
              {
                int32x2_t v28 = vceq_s32(*v27, v24);
                if (v28.i32[0] & v28.i32[1]) {
                  break;
                }
                ++v27;
                if (!--*(void *)&v26) {
                  goto LABEL_35;
                }
              }
            }
            else
            {
LABEL_35:
              if (v5 != v3)
              {
                int v29 = &v22[12 * v5];
                uint64_t v60 = *v29;
                uint64_t v30 = v29[1];
                uint64_t v59 = v29[2];
                uint64_t v58 = v29[3];
                char v57 = *((unsigned char *)v29 + 32);
                uint64_t v31 = v29[5];
                uint64_t v56 = v29[6];
                uint64_t v55 = v29[7];
                uint64_t v54 = v29[8];
                char v53 = *((unsigned char *)v29 + 72);
                char v52 = *((unsigned char *)v29 + 73);
                char v51 = *((unsigned char *)v29 + 74);
                int v50 = *((_DWORD *)v29 + 19);
                uint64_t v32 = v29[11];
                int32x2_t v48 = *v23;
                uint64_t v49 = v29[10];
                long long v33 = &v22[12 * v3];
                int32x2_t v46 = (int32x2_t)v33[3];
                int32x2_t v47 = (int32x2_t)v33[2];
                __int8 v45 = *((unsigned char *)v33 + 32);
                int32x2_t v34 = (int32x2_t)v33[5];
                int32x2_t v35 = (int32x2_t)v33[7];
                int32x2_t v43 = (int32x2_t)v33[8];
                int32x2_t v44 = (int32x2_t)v33[6];
                __int8 v36 = *((unsigned char *)v33 + 72);
                __int8 v41 = *((unsigned char *)v33 + 74);
                __int8 v42 = *((unsigned char *)v33 + 73);
                __int32 v40 = *((_DWORD *)v33 + 19);
                int32x2_t v37 = (int32x2_t)v33[11];
                int32x2_t v39 = (int32x2_t)v33[10];
                swift_unknownObjectRetain();
                swift_retain();
                swift_unknownObjectRetain();
                swift_retain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v61 = (uint64_t)v2;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v2 = sub_1B62BDEA0(v2);
                  *uint64_t v61 = (uint64_t)v2;
                }
                uint64_t v20 = (int32x2_t *)&v2[12 * v5];
                v20[4] = v48;
                v20[5] = v24;
                v20[6] = v47;
                v20[7] = v46;
                v20[8].i8[0] = v45;
                v20[9] = v34;
                v20[10] = v44;
                v20[11] = v35;
                v20[12] = v43;
                v20[13].i8[0] = v36;
                v20[13].i8[1] = v42;
                v20[13].i8[2] = v41;
                v20[13].i32[1] = v40;
                v20[14] = v39;
                v20[15] = v37;
                swift_release();
                swift_unknownObjectRelease();
                uint64_t v21 = *v61 + 96 * v3;
                *(void *)(v21 + 32) = v60;
                *(void *)(v21 + 40) = v30;
                *(void *)(v21 + 48) = v59;
                *(void *)(v21 + 56) = v58;
                *(unsigned char *)(v21 + 64) = v57;
                *(void *)(v21 + 72) = v31;
                *(void *)(v21 + 80) = v56;
                *(void *)(v21 + 88) = v55;
                *(void *)(v21 + 96) = v54;
                *(unsigned char *)(v21 + 104) = v53;
                *(unsigned char *)(v21 + 105) = v52;
                *(unsigned char *)(v21 + 106) = v51;
                *(_DWORD *)(v21 + 108) = v50;
                *(void *)(v21 + 112) = v49;
                *(void *)(v21 + 120) = v32;
                swift_release();
                swift_unknownObjectRelease();
                uint64_t v2 = (void *)*v61;
              }
              ++v5;
            }
            ++v3;
          }
          while (v3 != v2[2]);
        }
      }
      else
      {
        uint64_t v5 = 0;
      }
LABEL_15:
      sub_1B62F43BC(v5, v3);
      uint64_t v2 = *(void **)(v1 + 112);
      *(void *)(v1 + 120) = v2[2];
    }
    uint64_t v12 = v2[2];
    if (v12)
    {
      uint64_t v13 = *(void *)(v1 + 120);
      if (v13 != v12) {
        sub_1B62F43BC(v13, v12);
      }
    }
    unint64_t v14 = (uint64_t *)(v1 + 136);
    uint64_t v62 = *(void *)(v1 + 128);
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_1B62FA114(v15);
    sub_1B62FA114(*(void *)(v1 + 112));
    *(void *)(v1 + 112) = v62;
    sub_1B62BB800(v61);
    *(void *)(v1 + 120) = *(void *)(*(void *)(v1 + 112) + 16);
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void *)(v1 + 128);
    if (v16)
    {
      sub_1B62F43BC(0, *(void *)(v17 + 16));
    }
    else
    {
      *(void *)(v1 + 128) = sub_1B62FFDB0(0, *(void *)(v17 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    int v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v14;
    if (v18)
    {
      sub_1B62F43BC(0, *(void *)(v19 + 16));
    }
    else
    {
      uint64_t *v14 = (uint64_t)sub_1B62FFDB0(0, *(void *)(v19 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    *(unsigned char *)(v1 + 161) = 0;
  }
}

uint64_t sub_1B62F4260(uint64_t a1, char a2)
{
  return sub_1B62F4268(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B62F4268(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  switch(a2)
  {
    case 1:
    case 3:
    case 4:
    case 5:
      uint64_t ObjectType = swift_getObjectType();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, ObjectType, a4);
      break;
    case 2:
      uint64_t v9 = swift_getObjectType();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 + 8) + 40))(a1, v9);
      break;
    default:
      uint64_t v8 = swift_getObjectType();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, v8, a4);
      break;
  }
  return result;
}

uint64_t sub_1B62F433C(uint64_t a1, char a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t result = v2 + 40;
  switch(a2)
  {
    case 1:
    case 3:
    case 4:
    case 5:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(result, v4);
      break;
    case 2:
      return result;
    default:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(result, v4);
      break;
  }
  return result;
}

uint64_t sub_1B62F43BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  double v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    double v6 = sub_1B636A9C8(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_10;
  }
  uint64_t v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[12 * a1 + 4], &v6[12 * a2 + 4], 96 * v12);
    v6[2] -= v5;
LABEL_10:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62F44EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  int v3 = *(unsigned __int8 *)(*a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96);
  swift_retain();
  if (v3 == 1)
  {
    sub_1B62F46E8();
    float v5 = v4;
    unint64_t v6 = a1[1];
    swift_retain();
    uint64_t v7 = sub_1B62F5BC8(v6);
    Swift::Int v9 = v8;
    char v11 = v10;
    swift_release();
    if (v11)
    {
      uint64_t v7 = 10;
      Swift::Int v9 = 20;
    }
    sub_1B62F6B80((uint64_t)a1);
    swift_retain();
    sub_1B62F4A8C(v6, v2, a1, v2, v7, v9, v5);
    swift_release();
    sub_1B62F648C((uint64_t)a1);
  }

  return swift_release();
}

uint64_t sub_1B62F45F8(unint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v4 == -1 || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == v4) {
      return a2(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32));
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B62F46E8()
{
  uint64_t v1 = *v0;
  int v2 = *((_DWORD *)v0 + 9);
  uint64_t v3 = *((int *)v0 + 8);
  swift_retain();
  BOOL v4 = v3 == -1 && v2 == 0;
  if (!v4 && (v3 & 0x80000000) == 0 && *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v3)
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    BOOL v6 = v2 == -1 || *(_DWORD *)(v5 + 12 * (int)v3 + 8) == v2;
    if (v6
      && (sub_1B62F48C4(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)v3) + 32), *(_WORD *)(v5 + 12 * (int)v3 + 4), 88) & 0x100000000) == 0)
    {
      return swift_release();
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

unint64_t sub_1B62F48C4(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(v3 + 56);
    while ((ValueMetadata *)*(v5 - 3) != &type metadata for EmitterDescription)
    {
      v5 += 5;
      if (!--v4) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v7 = 0;
    uint64_t v6 = *(unsigned int *)(*(void *)(a1 + 128) + *v5 + a2 * a3 + 52);
  }
  else
  {
LABEL_5:
    uint64_t v6 = 0;
    unsigned __int8 v7 = 1;
  }
  return v6 | ((unint64_t)v7 << 32);
}

uint64_t sub_1B62F4934(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  uint64_t v3 = a1[1];
  swift_retain();
  sub_1B62F5BE0(v3, (uint64_t)v16);
  swift_release();
  uint64_t v4 = v20;
  if (v20)
  {
    char v5 = v22;
    uint64_t v6 = v21;
    int v7 = v17;
    int v8 = v18;
    char v9 = v16[0];
    int v10 = v16[1];
    uint64_t v11 = HIDWORD(v17) & 1;
    uint64_t v12 = HIDWORD(v18) & 1;
    long long v13 = v19;
  }
  else
  {
    sub_1B6D3F580((uint64_t)v23);
    char v9 = v23[0];
    int v10 = v24;
    int v7 = v25;
    LOBYTE(v11) = v26;
    int v8 = v27;
    LOBYTE(v12) = v28;
    long long v13 = v29;
    uint64_t v4 = v30;
    uint64_t v6 = v31;
    char v5 = v32;
  }
  v33[0] = v9;
  int v34 = v10;
  int v35 = v7;
  char v36 = v11;
  int v37 = v8;
  char v38 = v12;
  long long v39 = v13;
  uint64_t v40 = v4;
  uint64_t v41 = v6;
  char v42 = v5;
  uint64_t v14 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B62F4EEC(v14, v2, v2, (uint64_t)a1, (uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62F648C((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1B62F4A8C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, Swift::Int a6, float a7)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v9 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B62F4C58(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), *(_WORD *)(v9 + 12 * (int)a1 + 4), 128, a3, a4, a5, a6, a7), !v7)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C((uint64_t)a3);
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62F4C58(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, Swift::Int a7, float a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  uint64_t v17 = *(void *)(a1 + 128) + *i + a2 * a3;
  if (sub_1B62F4D64(v17, a4, a8))
  {
    uint64_t v18 = a4[4];
    swift_retain();
    sub_1B62F6B80((uint64_t)a4);
    sub_1B62F5728(v18, a5, a5, (uint64_t)a4, a6, a7, v17, a8);
    sub_1B62F648C((uint64_t)a4);
    swift_release();
  }
  return 1;
}

BOOL sub_1B62F4D64(uint64_t a1, uint64_t *a2, float a3)
{
  uint64_t v5 = *a2;
  int v6 = *((_DWORD *)a2 + 3);
  uint64_t v7 = *((int *)a2 + 2);
  swift_retain();
  BOOL v8 = v7 == -1 && v6 == 0;
  if (!v8
    && (v7 & 0x80000000) == 0
    && *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v7
    && ((uint64_t v9 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v6 == -1)
     || *(_DWORD *)(v9 + 12 * (int)v7 + 8) == v6))
  {
    uint64_t v13 = sub_1B62F4E94(*(void *)(*(void *)(v5 + 136) + 8 * *(int *)(v9 + 12 * (int)v7) + 32), *(_WORD *)(v9 + 12 * (int)v7 + 4), 8);
    char v15 = v14;
    swift_release();
    if ((v15 & 1) == 0 && *(void *)(a1 + 104) != v13)
    {
      *(void *)(a1 + 104) = v13;
      if (v13)
      {
        *(void *)(a1 + 72) = 0;
        *(_DWORD *)a1 = *(_DWORD *)(a1 + 4);
      }
    }
  }
  else
  {
    swift_release();
  }
  float v10 = *(float *)(a1 + 4);
  float v11 = *(float *)a1 + a3;
  *(float *)a1 = v11;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 80) = 0;
  return v10 <= v11 && v11 <= *(float *)(a1 + 8);
}

uint64_t sub_1B62F4E94(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  for (uint64_t i = (void *)(v3 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleRespawn; i += 5)
  {
    if (!--v4) {
      return 0;
    }
  }
  return *(void *)(*(void *)(a1 + 128) + *i + a2 * a3);
}

uint64_t sub_1B62F4EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v8 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B62F50D4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_WORD *)(v8 + 12 * (int)a1 + 4), 656, a3, a4), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    sub_1B6AE9A98(a5);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62F50D4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  sub_1B62F514C((void *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5);
  return 1;
}

uint64_t *sub_1B62F514C(void *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(_OWORD *)(a3 + 104);
  v87[0] = *(_OWORD *)(a3 + 88);
  v87[1] = v3;
  uint64_t v88 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v87, 0x200000000, v81);
  uint64_t result = (uint64_t *)sub_1B62D8168((uint64_t)v81, (uint64_t)v82, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  int v80 = (unsigned __int16 *)v82[0];
  if (v82[0])
  {
    uint64_t v69 = v86;
    if (v86 >= 1)
    {
      uint64_t v68 = v83;
      if (v83)
      {
        uint64_t v5 = 0;
        uint64_t v67 = v82[5];
        uint64_t v6 = v85[4];
        uint64_t v66 = v84;
        int v7 = *(unsigned __int8 *)(v84 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v63 = v85 + 8;
        uint64_t v62 = v85 + 13;
        uint64_t v79 = v82[0] + 41;
        int v64 = v7;
        uint64_t v94 = v85;
        uint64_t v65 = v6;
        do
        {
          uint64_t v8 = (unsigned int *)(v67 + 48 * v5);
          uint64_t v9 = *v8;
          uint64_t v10 = v8[1];
          uint64_t v11 = v8[2];
          uint64_t v12 = *((void *)v8 + 2);
          uint64_t v13 = *((void *)v8 + 3);
          uint64_t v14 = *((void *)v8 + 5);
          uint64_t v75 = v5;
          uint64_t v76 = *((void *)v8 + 4);
          if (v7)
          {
            char v15 = *(os_unfair_lock_s **)(v14 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          char v16 = v94;
          uint64_t v71 = v94[6];
          uint64_t v73 = v94[8];
          uint64_t v74 = v94[7];
          uint64_t v77 = v94[10];
          uint64_t v78 = v94[9];
          uint64_t v17 = v94[4];
          uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v16[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v16[7] = v18;
          v63[1] = 0;
          void v63[2] = 0;
          *uint64_t v63 = 0;
          swift_release();
          v89[0] = v66;
          v89[1] = v14;
          uint64_t v72 = v14;
          v89[2] = v16;
          v89[3] = v11;
          v89[4] = (v10 - v9 + v11);
          v89[5] = v69;
          v89[6] = v9;
          long long v19 = v16;
          unsigned char v89[7] = v10;
          v89[8] = 0;
          v89[9] = 0;
          char v90 = 1;
          uint64_t v91 = v12;
          uint64_t v92 = v13;
          uint64_t v93 = v76;
          sub_1B6D3F994((uint64_t)v89, a1);
          unint64_t v20 = v16[6];
          uint64_t v21 = v19[8];
          if (!v21)
          {
            uint64_t v47 = v19[7];
            int32x2_t v48 = (void *)v19[4];
            uint64_t v50 = v74;
            uint64_t v49 = v75;
            uint64_t v53 = v71;
            uint64_t v52 = v72;
            uint64_t v51 = v73;
            goto LABEL_47;
          }
          for (uint64_t i = 0; i != v21; ++i)
          {
            int v24 = (uint64_t *)(v20 + 48 * i);
            uint64_t v25 = *v24;
            char v26 = (void (*)(uint64_t))v24[4];
            uint64_t v27 = v19[9];
            if (v27) {
              BOOL v28 = v25 == v27;
            }
            else {
              BOOL v28 = 0;
            }
            if (v28 || !v80[11]) {
              goto LABEL_11;
            }
            unint64_t v29 = v80[9];
            uint64_t v30 = (void *)(v79 + v80[8]);
            uint64_t v31 = v24[2];
            char v32 = v30;
            unint64_t v33 = v29 >> 4;
            uint64_t v34 = v79;
            if (v29 >= 0x10)
            {
              while (*v32 != v25)
              {
                ++v34;
                v32 += 2;
                if (!--v33) {
                  goto LABEL_26;
                }
              }
              unsigned int v35 = *(unsigned __int8 *)(v34 + v80[10]);
              BOOL v36 = v35 > 5;
              int v37 = (1 << v35) & 0x23;
              if (v36 || v37 == 0)
              {
LABEL_11:
                uint64_t v23 = swift_retain();
                v26(v23);
                swift_release();
                goto LABEL_12;
              }
            }
LABEL_26:
            if (swift_conformsToProtocol2()) {
              uint64_t v39 = v31;
            }
            else {
              uint64_t v39 = 0;
            }
            if (v39)
            {
              if (v29 < 0x10) {
                goto LABEL_11;
              }
              uint64_t v40 = v30;
              unint64_t v41 = v29 >> 4;
              uint64_t v42 = v79;
              while (*v40 != v39)
              {
                ++v42;
                v40 += 2;
                if (!--v41) {
                  goto LABEL_39;
                }
              }
              unsigned int v43 = *(unsigned __int8 *)(v42 + v80[10]);
              BOOL v36 = v43 > 5;
              int v44 = (1 << v43) & 0x23;
              if (v36 || v44 == 0) {
                goto LABEL_11;
              }
LABEL_39:
              uint64_t v46 = 16 * (v29 >> 4);
              while (*v30 != v39)
              {
                v30 += 2;
                v46 -= 16;
                if (!v46) {
                  goto LABEL_11;
                }
              }
            }
LABEL_12:
            long long v19 = v94;
          }
          uint64_t v47 = v94[7];
          unint64_t v20 = v94[6];
          int32x2_t v48 = (void *)v94[4];
          uint64_t v50 = v74;
          uint64_t v49 = v75;
          uint64_t v51 = v73;
          if ((uint64_t)v94[8] >= 1) {
            swift_arrayDestroy();
          }
          uint64_t v53 = v71;
          uint64_t v52 = v72;
LABEL_47:
          ecs_stack_allocator_deallocate(v48, v20, 48 * v47);
          void v19[6] = v53;
          v19[7] = v50;
          v19[8] = v51;
          v19[9] = v78;
          v19[10] = v77;
          int v7 = v64;
          if (*(void *)(v19[13] + 16))
          {
            uint64_t v54 = swift_bridgeObjectRetain();
            sub_1B639147C(v54, v52);
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v56 = v19[13];
            if (isUniquelyReferenced_nonNull_native)
            {
              sub_1B6399BB8(0, *(void *)(v56 + 16));
            }
            else
            {
              char v57 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v56 + 24) >= 2uLL)
              {
                sub_1B62D2AB8(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                char v57 = (void *)swift_allocObject();
                size_t v58 = j__malloc_size(v57);
                v57[2] = 0;
                v57[3] = 2 * ((uint64_t)(v58 - 32) / 72);
              }
              *uint64_t v62 = v57;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v19[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              uint64_t v59 = *(char **)(v52 + 232);
              uint64_t v60 = *(char **)(v52 + 256);
              if (v59 == v60)
              {
                uint64_t v61 = *(char **)(v52 + 240);
              }
              else
              {
                sub_1B666018C(v60, v59);
                uint64_t v60 = *(char **)(v52 + 232);
                uint64_t v61 = *(char **)(v52 + 240);
                if (v61 == v60)
                {
                  uint64_t v61 = 0;
                  uint64_t v60 = 0;
                  *(void *)(v52 + 232) = 0;
                  *(void *)(v52 + 240) = 0;
                }
              }
              *(void *)(v52 + 248) = v61;
              *(void *)(v52 + 256) = v60;
            }
          }
          uint64_t v6 = v65;
          ecs_stack_allocator_pop_snapshot(v65);
          if (v64)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v52 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v52 + 376));
          }
          swift_release();
          uint64_t v5 = v49 + 1;
        }
        while (v5 != v68);
      }
    }
    return sub_1B632F170(v81);
  }
  return result;
}

uint64_t sub_1B62F5728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, Swift::Int a6, uint64_t a7, float a8)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v10 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B62F5904(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v10 + 12 * (int)a1) + 32), *(_WORD *)(v10 + 12 * (int)a1 + 4), 656, a3, a4, a5, a6, a7, a8), !v8)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62F5904(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, Swift::Int a7, uint64_t a8, float a9)
{
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    return 0;
  }
  for (uint64_t i = (void *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v10) {
      return 0;
    }
  }
  sub_1B62F5984(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7, a8, a9);
  return 1;
}

unint64_t sub_1B62F5984(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, uint64_t a6, float a7)
{
  uint64_t v12 = (void *)result;
  int v13 = *(_DWORD *)(a3 + 12);
  uint64_t v14 = *(int *)(a3 + 8);
  BOOL v15 = v14 == -1 && v13 == 0;
  if (v15
    || (v14 & 0x80000000) != 0
    || *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v14
    || (uint64_t v16 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v13 != -1)
    && *(_DWORD *)(v16 + 12 * (int)v14 + 8) != v13
    || (uint64_t v17 = (int *)(v16 + 12 * (int)v14),
        uint64_t v18 = *(void *)(*(void *)(a2 + 136) + 8 * *v17 + 32),
        __int16 v19 = *((_WORD *)v17 + 2),
        sub_1B62F6B80(a3),
        LOBYTE(v18) = sub_1B62F5AD8(v18, v19, 64, a4, a5, v12, (void *)a6, a3),
        uint64_t result = sub_1B62F648C(a3),
        (v18 & 1) == 0))
  {
    if (!*(void *)(a6 + 72) && *(float *)a6 <= (float)(*(float *)(a6 + 4) + a7))
    {
      uint64_t result = a5 - a4;
      if (a5 != a4)
      {
        uint64_t result = sub_1B68E0DD8(result);
        a5 = result + a4;
      }
      if (a5 >= 1) {
        return sub_1B6919F58(a5, (void *)a6, a3);
      }
    }
  }
  return result;
}

uint64_t sub_1B62F5AD8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSubSpawn.State; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  sub_1B68DE2B8((uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7, a8);
  return 1;
}

uint64_t sub_1B62F5B58(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleBurstSpawn; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B62F5BC8(unint64_t a1)
{
  return sub_1B62F45F8(a1, (uint64_t (*)(void))sub_1B62F5B58);
}

uint64_t sub_1B62F5BE0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    uint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B62F5CA8(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 80, v2, a2);
  }
  else
  {
    *(unsigned char *)(a2 + 64) = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B62F5CA8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    int v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleColorInit)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    int v9 = v8[12];
    uint64_t v10 = *((unsigned int *)v8 + 4);
    int v11 = v8[20];
    uint64_t v13 = *((void *)v8 + 4);
    uint64_t v12 = *((void *)v8 + 5);
    uint64_t v14 = *((void *)v8 + 6);
    uint64_t v15 = *((void *)v8 + 7);
    unsigned __int8 v16 = v8[64];
    uint64_t v17 = *((unsigned int *)v8 + 2);
    unint64_t v18 = *v8 | ((unint64_t)*((unsigned int *)v8 + 1) << 32);
    uint64_t v19 = 0x100000000;
    if (v9) {
      uint64_t v20 = 0x100000000;
    }
    else {
      uint64_t v20 = 0;
    }
    uint64_t v21 = v20 | v17;
    if (!v11) {
      uint64_t v19 = 0;
    }
    *(void *)a5 = v18;
    *(void *)(a5 + 8) = v21;
    *(void *)(a5 + 16) = v19 | v10;
    *(void *)(a5 + 24) = 0;
    *(void *)(a5 + 32) = v13;
    *(void *)(a5 + 40) = v12;
    *(void *)(a5 + 48) = v14;
    *(void *)(a5 + 56) = v15;
    *(unsigned char *)(a5 + 64) = v16;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(unsigned char *)(a5 + 64) = 0;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B62F5D8C(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  BOOL v4 = a1 == 3 || a1 == 0;
  if (v4 && sub_1B62FFF74(a2) || *(unsigned char *)(v2 + 160) == 1)
  {
    *(void *)(v2 + 104) = *(void *)(v2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B62BB800((uint64_t *)(v2 + 104));
    uint64_t v6 = (uint64_t *)(v2 + 128);
    uint64_t v5 = *(void *)(v3 + 128);
    *(unsigned char *)(v3 + 160) = 0;
    if (!*(void *)(v5 + 16) && !*(void *)(*(void *)(v3 + 136) + 16)) {
      *(unsigned char *)(v3 + 161) = 0;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v6;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_1B62F43BC(0, *(void *)(v8 + 16));
    }
    else
    {
      *uint64_t v6 = (uint64_t)sub_1B62FFDB0(0, *(void *)(v8 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    int v9 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *(void *)(v3 + 144);
    if (v9)
    {
      sub_1B62FFE64(0, *(void *)(v10 + 16));
    }
    else
    {
      *(void *)(v3 + 144) = sub_1B67858CC(0, *(void *)(v10 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v11 = *(void *)(v3 + 104);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 112) = v11;
  *(void *)(v3 + 120) = *(void *)(v11 + 16);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62F5ED8(uint64_t result, unsigned __int8 a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = *(void *)(result + 16);
  if (!v9) {
    return result;
  }
  unint64_t v10 = a7;
  uint64_t v11 = a6;
  uint64_t v13 = a4;
  unint64_t v65 = HIDWORD(a6);
  uint64_t v15 = (void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v16 = result + 32;
  BOOL v18 = a2 != 4 || a5 == 0;
  BOOL v74 = v18;
  uint64_t v68 = a7;
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  uint64_t v64 = a2;
  unsigned __int8 v76 = a2;
  uint64_t v67 = a2;
  unint64_t v70 = v11;
  unint64_t v71 = v10;
  uint64_t v69 = v13;
  uint64_t v62 = v15;
  uint64_t v63 = v9;
  uint64_t v61 = v16;
  while (1)
  {
    uint64_t v20 = (unsigned int *)(v16 + 8 * v19);
    unsigned int v22 = *v20;
    uint64_t v21 = v20[1];
    BOOL v23 = v22 == -1 && v21 == 0;
    if (!v23 && (v22 & 0x80000000) == 0 && v15[1] > (int)v22)
    {
      uint64_t v24 = *v15;
      if ((v21 == -1 || *(_DWORD *)(*v15 + 12 * (int)v22 + 8) == v21)
        && (*(unsigned char *)(*(void *)(*(void *)(v13 + 136) + 8 * *(int *)(v24 + 12 * (int)v22) + 32) + 120) & 1) != 0)
      {
        uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 80)
                                                + 8 * *(__int16 *)(v24 + 12 * (int)v22 + 6)
                                                + 32)
                                    + 16)
                        + 32);
        uint64_t v27 = *(void *)(v26 + 16);
        if (v27) {
          break;
        }
      }
    }
LABEL_10:
    if (++v19 == v9) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v72 = v22 | (unint64_t)(v21 << 32);
  swift_retain();
  swift_retain();
  uint64_t v28 = v26 + 40;
  BOOL v29 = v74;
  while (1)
  {
    uint64_t v32 = *(void *)(v28 - 8);
    if (!v29)
    {
      uint64_t v33 = *(void *)(*(void *)v28 + 8);
      uint64_t v34 = swift_retain();
      LOBYTE(v33) = sub_1B62F64C4(v34, v32, v33);
      swift_release();
      if ((v33 & 1) == 0) {
        goto LABEL_28;
      }
    }
    if (a3)
    {
      type metadata accessor for GraphScript(0);
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v47 = swift_conformsToProtocol2();
        if (v47) {
          uint64_t v48 = v47;
        }
        else {
          uint64_t v48 = 0;
        }
        if (!v47) {
          uint64_t v32 = 0;
        }
        if (!v32) {
          goto LABEL_28;
        }
        uint64_t v49 = swift_conformsToProtocol2();
        if (!v49) {
          goto LABEL_58;
        }
        uint64_t v50 = v49;
        uint64_t v51 = swift_retain();
        sub_1B62F67B0(v51, v72, v32, v50, v11, v68 | ((HIDWORD(v10) & 1) << 32), v76, (uint64_t)v78);
        uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v32, v48);
        uint64_t v53 = &qword_1E9DD2FC8;
        switch(v64)
        {
          case 1:
            break;
          case 2:
            uint64_t v53 = &qword_1E9DD2FD0;
            break;
          case 3:
            uint64_t v53 = &qword_1E9DD2FD8;
            break;
          case 4:
            uint64_t v53 = &qword_1E9DD2FF8;
            break;
          default:
            goto LABEL_59;
        }
        uint64_t v54 = *v53;
        uint64_t v55 = *(void *)(v52 + 8);
        uint64_t v56 = swift_allocObject();
        long long v57 = v78[5];
        *(_OWORD *)(v56 + 104) = v78[4];
        *(_OWORD *)(v56 + 120) = v57;
        long long v58 = v78[7];
        *(_OWORD *)(v56 + 136) = v78[6];
        *(_OWORD *)(v56 + 152) = v58;
        long long v59 = v78[1];
        *(_OWORD *)(v56 + 40) = v78[0];
        *(_OWORD *)(v56 + 56) = v59;
        long long v60 = v78[3];
        *(_OWORD *)(v56 + 72) = v78[2];
        *(void *)(v56 + 16) = a5;
        uint64_t v11 = v70;
        *(_DWORD *)(v56 + 24) = v70;
        *(_DWORD *)(v56 + 28) = v65;
        *(unsigned char *)(v56 + 32) = v76;
        *(_OWORD *)(v56 + 88) = v60;
        swift_retain();
        uint64_t v31 = v78;
        sub_1B62F6B80((uint64_t)v78);
        sub_1B6C5CC74(v66, v55, v54, a9, v76 != 4, v70, (uint64_t)sub_1B691FFC4, v56);
        goto LABEL_27;
      }
    }
    uint64_t v35 = swift_conformsToProtocol2();
    if (v35) {
      uint64_t v36 = v35;
    }
    else {
      uint64_t v36 = 0;
    }
    if (!v35) {
      uint64_t v32 = 0;
    }
    if (!v32) {
      goto LABEL_28;
    }
    uint64_t v37 = swift_conformsToProtocol2();
    if (!v37) {
      break;
    }
    uint64_t v38 = v37;
    uint64_t v39 = swift_retain();
    sub_1B62F67B0(v39, v72, v32, v38, v11, v68 | ((HIDWORD(v10) & 1) << 32), v76, (uint64_t)v77);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v32, v36);
    uint64_t v42 = v41;
    unsigned int v43 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v41 + 16);
    sub_1B62F6B80((uint64_t)v77);
    uint64_t v44 = v43(v77, v40, v42);
    __int8 v45 = sub_1B62F6AD0(v77, v40, v42);
    uint64_t v30 = &qword_1E9DD2FC8;
    switch(v67)
    {
      case 1:
        break;
      case 2:
        uint64_t v30 = &qword_1E9DD2FD0;
        break;
      case 3:
        uint64_t v30 = &qword_1E9DD2FD8;
        break;
      case 4:
        uint64_t v30 = &qword_1E9DD2FF8;
        break;
      default:
        goto LABEL_59;
    }
    uint64_t v11 = v70;
    sub_1B62F6538(v44, (uint64_t)v45, v46, *v30, a9, v76 != 4, v70, a8, v40, *(void *)(v42 + 8));
    swift_unknownObjectRelease();
    uint64_t v31 = v77;
LABEL_27:
    unint64_t v10 = v71;
    swift_release();
    sub_1B62F648C((uint64_t)v31);
    uint64_t v13 = v69;
    BOOL v29 = v74;
LABEL_28:
    v28 += 16;
    if (!--v27)
    {
      swift_release();
      swift_release();
      uint64_t v15 = v62;
      uint64_t v9 = v63;
      uint64_t v16 = v61;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B62F648C(uint64_t a1)
{
  return a1;
}

BOOL sub_1B62F64C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (unsigned char *)(a1 + 537);
  return (*(unsigned char *)(a1 + 540) != 1 || sub_1B6B3C610(a2, a3)) && (*v5 != 1 || sub_1B6B3C644(a2, a3));
}

uint64_t sub_1B62F6538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(a10 + 32);
  uint64_t v16 = swift_retain();
  v15(v16, a9, a10);
  swift_release();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(a10 + 24);
  if (v17(a9, a10) != qword_1E9DD3038) {
    a4 = v17(ObjectType, a10);
  }
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 16))(a9, a10);
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v23 = *(void *)(a8 + 24);
  swift_retain();
  swift_retain();
  uint64_t v24 = swift_unknownObjectRetain();
  sub_1B6369AC4(v24, a7, v18, v20, v22, a1, a10, a4, (uint64_t)v40, a5, 1, 1, a6 & 1, a2, a3, v23);
  unint64_t v25 = v40[0];
  uint64_t v26 = v40[2];
  uint64_t v27 = v40[3];
  char v28 = v41;
  long long v38 = v42;
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  char v31 = v45;
  LOBYTE(v23) = v46;
  char v36 = v47;
  int v32 = v48;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a8 + 56));
  unsigned long long v50 = __PAIR128__(v40[1], v25);
  uint64_t v51 = v26;
  uint64_t v52 = v27;
  char v53 = v28;
  long long v54 = v38;
  uint64_t v55 = v29;
  uint64_t v56 = v30;
  char v57 = v31;
  char v58 = v23;
  char v59 = v36;
  int v60 = v32;
  long long v61 = v49;
  sub_1B62F6778((uint64_t)v40);
  sub_1B6369960(0, 0, &v50);
  sub_1B62F6778((uint64_t)v40);
  sub_1B6369960(0, 0, &v50);
  *(_WORD *)(a8 + 160) = 257;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a8 + 56));
  return sub_1B62F6BB8((uint64_t)v40);
}

uint64_t sub_1B62F6778(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62F67B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unsigned __int8 a7@<W6>, uint64_t a8@<X8>)
{
  int v8 = a6;
  int v14 = a7;
  uint64_t v37 = HIDWORD(a6) & 1;
  sub_1B62F6BF0(a5, a6 | (unint64_t)(v37 << 32), (uint64_t)&v39);
  uint64_t v15 = v39;
  char v35 = v41;
  int v36 = v40;
  uint64_t v16 = v42;
  unsigned int v34 = v43;
  uint64_t v33 = v44;
  uint64_t v17 = sub_1B62F69F0(a2);
  if (v18)
  {
    swift_retain();
    swift_release();
    unint64_t v22 = v16 & 0xFFFFFFFFFFFFFFF7 | (8 * ((v14 - 1) < 2));
    uint64_t v23 = v15;
    char v29 = v35;
    int v28 = v36;
    int v24 = v36;
    char v25 = v35;
    uint64_t result = v34;
    char v26 = v34;
    uint64_t v31 = v33;
    uint64_t v27 = v33;
  }
  else
  {
    uint64_t v19 = v17;
    sub_1B62F6E08();
    uint64_t v32 = v16;
    uint64_t v20 = a3;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
    *(void *)(inited + 56) = &type metadata for ParticleClassSpawnID;
    *(void *)(inited + 64) = &off_1F0F80B40;
    *(void *)(inited + 32) = v19;
    swift_retain();
    sub_1B62F7044(inited, (uint64_t)&v45);
    swift_setDeallocating();
    a3 = v20;
    uint64_t v16 = v32;
    sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
    swift_arrayDestroy();
    sub_1B62CA064((uint64_t)&v39);
    swift_release();
    unint64_t v22 = v48 & 0xFFFFFFFFFFFFFFF7 | (8 * ((v14 - 1) < 2));
    uint64_t v23 = v45;
    int v24 = v46;
    char v25 = v47;
    char v26 = v49;
    uint64_t v27 = v50;
    char v29 = v35;
    int v28 = v36;
    uint64_t result = v34;
    uint64_t v31 = v33;
  }
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(_DWORD *)(a8 + 40) = v8;
  *(unsigned char *)(a8 + 44) = v37;
  *(unsigned char *)(a8 + 45) = v14;
  *(void *)(a8 + 48) = v15;
  *(_DWORD *)(a8 + 56) = v28;
  *(unsigned char *)(a8 + 60) = v29;
  *(void *)(a8 + 64) = v16;
  *(unsigned char *)(a8 + 72) = result;
  *(void *)(a8 + 80) = v31;
  *(void *)(a8 + 88) = v23;
  *(_DWORD *)(a8 + 96) = v24;
  *(unsigned char *)(a8 + 100) = v25;
  *(void *)(a8 + 104) = v22;
  *(unsigned char *)(a8 + 112) = v26;
  *(void *)(a8 + 120) = v27;
  return result;
}

uint64_t sub_1B62F69F0(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnID; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t (*sub_1B62F6AD0(_OWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = swift_allocObject();
  long long v8 = a1[5];
  *(_OWORD *)(v7 + 104) = a1[4];
  *(_OWORD *)(v7 + 120) = v8;
  long long v9 = a1[7];
  *(_OWORD *)(v7 + 136) = a1[6];
  *(_OWORD *)(v7 + 152) = v9;
  long long v10 = a1[1];
  *(_OWORD *)(v7 + 40) = *a1;
  *(_OWORD *)(v7 + 56) = v10;
  long long v11 = a1[3];
  *(_OWORD *)(v7 + 72) = a1[2];
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  *(void *)(v7 + 32) = v3;
  *(_OWORD *)(v7 + 88) = v11;
  swift_unknownObjectRetain();
  sub_1B62F6B80((uint64_t)a1);
  return sub_1B62F433C;
}

uint64_t sub_1B62F6B80(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62F6BB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62F6BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EB997A18;
  sub_1B62F6F7C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Particle;
  *(void *)(inited + 40) = &off_1F0FA6CF0;
  uint64_t v18 = v6;
  int v19 = 0;
  char v20 = 2;
  uint64_t v21 = 0;
  char v22 = 2;
  uint64_t v23 = 0;
  swift_retain();
  sub_1B62F776C(inited, 1, (uint64_t)v14);
  swift_setDeallocating();
  swift_release();
  sub_1B62F6E08();
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 56) = &type metadata for EmitterReference;
  *(void *)(v8 + 64) = &off_1F0F6BD40;
  *(void *)(v8 + 32) = a1;
  sub_1B62F7044(v8, (uint64_t)v15);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  uint64_t result = sub_1B62CA064((uint64_t)v14);
  if ((a2 & 0x100000000) != 0) {
    int v10 = 0;
  }
  else {
    int v10 = a2;
  }
  uint64_t v11 = v15[2];
  char v12 = v16;
  uint64_t v13 = v17;
  *(void *)a3 = v15[0];
  *(_DWORD *)(a3 + 8) = v10;
  *(unsigned char *)(a3 + 12) = (a2 & 0x100000000uLL) >> 31;
  *(void *)(a3 + 16) = v11;
  *(unsigned char *)(a3 + 24) = v12;
  *(void *)(a3 + 32) = v13;
  return result;
}

void sub_1B62F6E08()
{
  if (!qword_1EB980B60)
  {
    sub_1B62C5560(255, (unint64_t *)&qword_1EB97E840);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980B60);
    }
  }
}

void sub_1B62F6E70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62F6ED4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B62F6F28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B62F6F7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62F6FE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_1B62F7044@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v2 + 28);
  unsigned int v7 = *(unsigned __int16 *)(*(void *)v2 + 30);
  uint64_t v8 = sub_1B62F712C(a1);
  uint64_t v9 = v8;
  if (v7 >= 0x18)
  {
    uint64_t v11 = (char *)(v5 + v6 + 41);
    uint64_t v12 = *(void *)(v9 + 16);
    uint64_t v13 = sub_1B69FF104(v11, (178956971 * (unint64_t)v7) >> 32);
    uint64_t v10 = v13;
    if (v12)
    {
      *(void *)&v16[0] = v13;
      sub_1B6641928(v9);
      uint64_t v10 = *(void *)&v16[0];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v10 = v8;
  }
  sub_1B62F74F8((char *)(v10 + 32), *(void *)(v10 + 16), v3, (uint64_t)v16);
  swift_bridgeObjectRelease();
  double result = *(double *)v16;
  long long v15 = v16[1];
  *(_OWORD *)a2 = v16[0];
  *(_OWORD *)(a2 + 16) = v15;
  *(void *)(a2 + 32) = v17;
  return result;
}

uint64_t sub_1B62F712C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B62F7284(0, v1, 0);
    uint64_t v2 = v13;
    unint64_t v4 = (void *)(a1 + 32);
    do
    {
      sub_1B62C14BC(v4, v4[3]);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v7 = v4[3];
      uint64_t v6 = v4[4];
      sub_1B62C14BC(v4, v7);
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1B62F7284(0, *(void *)(v13 + 16) + 1, 1);
      }
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1) {
        sub_1B62F7284(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = (void *)(v13 + 24 * v10);
      v11[4] = DynamicType;
      void v11[5] = v6;
      v11[6] = v8;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B62F7284(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B62F72A4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B62F72A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62F7434(0, &qword_1EB980B68, (uint64_t (*)(uint64_t))sub_1B68CE3AC, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v11 + 32;
  int v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[24 * v9]) {
      memmove(v13, v14, 24 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v14 < &v13[24 * v9] && v13 < &v14[24 * v9])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v13, v14, 24 * v9);
  }
  swift_release();
  return (uint64_t)v11;
}

void sub_1B62F7434(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B62F7498()
{
  return sub_1B6E33988();
}

uint64_t sub_1B62F74F8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a3 + 8);
  char v6 = *(unsigned char *)(a3 + 12);
  uint64_t v7 = *(void *)(a3 + 32);
  uint64_t v8 = *(void *)(a3 + 16);
  char v9 = *(unsigned char *)(a3 + 24);
  uint64_t result = sub_1B62C8668((char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 16)), (unint64_t)*(unsigned __int16 *)(*(void *)a3 + 18) >> 4, (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 20)), *(unsigned __int16 *)(*(void *)a3 + 22), (char *)(*(void *)a3 + 41 + *(unsigned __int16 *)(*(void *)a3 + 24)), (unint64_t)*(unsigned __int16 *)(*(void *)a3 + 26) >> 4, a1, a2);
  *(void *)a4 = result;
  *(_DWORD *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 12) = v6;
  *(void *)(a4 + 16) = v8;
  *(unsigned char *)(a4 + 24) = v9;
  *(void *)(a4 + 32) = v7;
  return result;
}

uint64_t sub_1B62F75A8()
{
  return qword_1E9DD3038;
}

uint64_t sub_1B62F75B4(uint64_t a1)
{
  sub_1B62F648C(a1);

  return swift_allocObject();
}

uint64_t sub_1B62F75EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  char v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  unint64_t v8 = (*v2)[9];
  if (v8 > 0xF)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    uint64_t v11 = sub_1B62F79D4((char *)(v7 + v6[8]), v8 >> 4);
    uint64_t v9 = v11;
    if (v10)
    {
      uint64_t v32 = v11;
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_1B62F8084(v12);
      uint64_t v9 = v32;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = a1;
  }
  uint64_t v13 = v6[10];
  int64_t v14 = v6[11];
  uint64_t v15 = sub_1B62F79C8(3, *(void *)(a1 + 16));
  uint64_t v16 = v15;
  if (v14)
  {
    uint64_t v17 = (char *)(v7 + v13);
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v19 = sub_1B62F7C94(v17, v14);
    uint64_t v20 = v19;
    if (v18)
    {
      uint64_t v33 = v19;
      sub_1B62F81D8(v16);
      uint64_t v20 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v20 = v15;
  }
  uint64_t v21 = (char *)(v7 + v6[12]);
  unint64_t v22 = (unint64_t)v6[13] >> 4;
  uint64_t v23 = (char *)(v7 + v6[14]);
  uint64_t v24 = v6[15] / 0x18u;
  int v25 = *((_DWORD *)v3 + 2);
  char v26 = *((unsigned char *)v3 + 12);
  uint64_t v27 = v3[4];
  int v28 = v3[2];
  char v29 = *((unsigned char *)v3 + 24);
  uint64_t v30 = sub_1B62C8668((char *)(v9 + 32), *(void *)(v9 + 16), (char *)(v20 + 32), *(void *)(v20 + 16), v21, v22, v23, v24);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v30;
  *(_DWORD *)(a2 + 8) = v25;
  *(unsigned char *)(a2 + 12) = v26;
  *(void *)(a2 + 16) = v28;
  *(unsigned char *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = v27;
  return result;
}

uint64_t sub_1B62F776C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  char v6 = *(unsigned __int16 **)v3;
  if (a2)
  {
    unint64_t v8 = (char *)v6 + 41;
    unint64_t v9 = v6[9];
    if (v9 >= 0x10)
    {
      uint64_t v17 = *(void *)(a1 + 16);
      uint64_t v18 = sub_1B62F79D4(&v8[v6[8]], v9 >> 4);
      uint64_t v10 = v18;
      if (v17)
      {
        uint64_t v30 = v18;
        uint64_t v19 = swift_bridgeObjectRetain();
        sub_1B62F8084(v19);
        uint64_t v10 = v30;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = a1;
    }
    uint64_t v20 = v6[10];
    int64_t v21 = v6[11];
    uint64_t v22 = sub_1B62F79C8(0, *(void *)(a1 + 16));
    uint64_t v23 = v22;
    if (v21)
    {
      uint64_t v24 = &v8[v20];
      uint64_t v25 = *(void *)(v23 + 16);
      uint64_t v26 = sub_1B62F7C94(v24, v21);
      uint64_t v27 = v26;
      if (v25)
      {
        uint64_t v31 = v26;
        sub_1B62F81D8(v23);
        uint64_t v27 = v31;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v27 = v22;
    }
    int v28 = &v8[v6[12]];
    char v29 = &v8[v6[14]];
    int v15 = *(_DWORD *)(v4 + 8);
    char v14 = *(unsigned char *)(v4 + 12);
    uint64_t v11 = *(void *)(v4 + 32);
    uint64_t v13 = *(void *)(v4 + 16);
    char v12 = *(unsigned char *)(v4 + 24);
    char v6 = (unsigned __int16 *)sub_1B62C8668((char *)(v10 + 32), *(void *)(v10 + 16), (char *)(v27 + 32), *(void *)(v27 + 16), v28, (unint64_t)v6[13] >> 4, v29, v6[15] / 0x18u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)(v3 + 32);
    char v12 = *(unsigned char *)(v3 + 24);
    uint64_t v13 = *(void *)(v3 + 16);
    char v14 = *(unsigned char *)(v3 + 12);
    int v15 = *(_DWORD *)(v3 + 8);
    uint64_t result = swift_retain();
  }
  *(void *)a3 = v6;
  *(_DWORD *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 12) = v14;
  *(void *)(a3 + 16) = v13;
  *(unsigned char *)(a3 + 24) = v12;
  *(void *)(a3 + 32) = v11;
  return result;
}

uint64_t sub_1B62F7910(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v4 = sub_1B6E31C98();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_1B62F79C8(int a1, size_t a2)
{
  return sub_1B62F7910(a1, a2);
}

uint64_t sub_1B62F79D4(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (a2 > 0)
  {
    sub_1B62F7C38(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
    uint64_t v4 = 16 * a2;
    int v5 = (char *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 17;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 4);
    unint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 16 * a2);
      return (uint64_t)v5;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

void sub_1B62F7B24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1B62F7B88(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1B637ECDC(255, a3, a4);
    unint64_t v5 = sub_1B6E330A8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7BE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E330A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B62F7C38(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1B637ED20(255, a3, a4);
    unint64_t v5 = sub_1B6E330A8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62F7C94(char *a1, int64_t a2)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (a2 > 0)
  {
    sub_1B62F7E70(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
    unint64_t v4 = (char *)swift_allocObject();
    size_t v5 = j__malloc_size(v4);
    *((void *)v4 + 2) = a2;
    *((void *)v4 + 3) = 2 * v5 - 64;
    uint64_t v6 = v4 + 32;
    if (&v4[a2 + 32] <= a1 || v6 >= &a1[a2])
    {
      memcpy(v6, a1, a2);
      return (uint64_t)v4;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

void sub_1B62F7DD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7E24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7E70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7EBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7F08(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7F54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7FA0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F7FEC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F8038(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B62F8084(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *((void *)*v1 + 2);
  uint64_t v5 = v4 + *(void *)(a1 + 16);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v7 = *((void *)v3 + 3) >> 1, v7 < v5))
  {
    if (v4 <= v5) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = v4;
    }
    uint64_t v3 = sub_1B62F94D0(isUniquelyReferenced_nonNull_native, v8, 1, v3);
    uint64_t v7 = *((void *)v3 + 3) >> 1;
  }
  sub_1B62F8134(&v3[16 * *((void *)v3 + 2) + 32], v7 - *((void *)v3 + 2), a1);
  if (v9 >= 1) {
    *((void *)v3 + 2) += v9;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *int64_t v1 = v3;
  return result;
}

uint64_t sub_1B62F8134(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return a3;
  }
  if (a3 + 32 >= (unint64_t)a1 + 16 * v4 || a3 + 32 + 16 * v4 <= (unint64_t)a1)
  {
    memcpy(a1, (const void *)(a3 + 32), 16 * v4);
    return a3;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62F81D8(uint64_t a1)
{
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + *(void *)(a1 + 16);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v7 = *((void *)v3 + 3) >> 1, v7 < v5))
  {
    if (v4 <= v5) {
      int64_t v8 = v5;
    }
    else {
      int64_t v8 = v4;
    }
    uint64_t v3 = sub_1B68C0C58(isUniquelyReferenced_nonNull_native, v8, 1, v3);
    int64_t v7 = *((void *)v3 + 3) >> 1;
  }
  sub_1B62F8288(&v3[*((void *)v3 + 2) + 32], v7 - *((void *)v3 + 2), a1);
  if (v9 >= 1) {
    *((void *)v3 + 2) += v9;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *int64_t v1 = v3;
  return result;
}

uint64_t sub_1B62F8288(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return a3;
  }
  if (a3 + 32 >= (unint64_t)a1 + v4 || a3 + 32 + v4 <= (unint64_t)a1)
  {
    memcpy(a1, (const void *)(a3 + 32), *(void *)(a3 + 16));
    return a3;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62F8330(void *a1, uint64_t a2)
{
  return sub_1B62D3484(a1, *(void *)(a2 + 80));
}

uint64_t sub_1B62F8340(uint64_t a1)
{
  uint64_t v188 = *MEMORY[0x1E4F143B8];
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1F4188790](inited - 8, v3);
  int64_t v5 = (unsigned __int8 *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6339768(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  int64_t v7 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  char v14 = (char *)&v119 - v13;
  uint64_t v15 = *(void *)a1;
  uint64_t v17 = *(unsigned int *)(a1 + 8);
  unsigned int v16 = *(_DWORD *)(a1 + 12);
  swift_retain();
  if (__PAIR64__(v16, v17) == 0xFFFFFFFF
    || (v17 & 0x80000000) != 0
    || *(void *)(v15 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= (int)v17
    || (uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v16 != -1)
    && *(_DWORD *)(v18 + 12 * (int)v17 + 8) != v16
    || (uint64_t v19 = (unsigned int *)(v18 + 12 * (int)v17),
        uint64_t v20 = *v19,
        uint64_t v21 = *(void *)(*(void *)(v15 + 136) + 8 * (int)v20 + 32),
        unint64_t v22 = v20 | ((unint64_t)*((unsigned __int16 *)v19 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v19
                                                                                                  + 2) << 32),
        unsigned __int8 v144 = v7,
        sub_1B62CD3E0(v21, (uint64_t)v7, v22, v15, v170),
        !*(void *)&v170[0]))
  {
    return swift_release();
  }
  uint64_t v134 = 0;
  unsigned int v131 = v16;
  uint64_t v23 = *(void *)&v170[0];
  sub_1B6339678(*(uint64_t *)&v170[0], (uint64_t)v14, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
  sub_1B633A1CC((uint64_t)v14, (uint64_t)v5, type metadata accessor for ParticleInitScript);
  sub_1B6339544((uint64_t)v14, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
  int v24 = *v5;
  sub_1B633A09C((uint64_t)v5, type metadata accessor for ParticleInitScript);
  if (v24 == 1) {
    return swift_release();
  }
  uint64_t v127 = v17;
  uint64_t v137 = v15;
  uint64_t v26 = *((int *)v144 + 15);
  uint64_t v121 = v23;
  *(void *)&long long v143 = v23 + v26;
  uint64_t v27 = *(void *)(v23 + v26);
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28)
  {
    swift_bridgeObjectRetain();
    char v29 = (char *)MEMORY[0x1E4FBC860];
LABEL_24:
    long long v39 = *(_OWORD *)(a1 + 104);
    v147[0] = *(_OWORD *)(a1 + 88);
    v147[1] = v39;
    uint64_t v148 = *(void *)(a1 + 120);
    swift_retain();
    sub_1B62F75EC((uint64_t)v29, (uint64_t)v146);
    swift_bridgeObjectRelease();
    sub_1B62CA064((uint64_t)v147);
    uint64_t v40 = v121;
    sub_1B6339678(v121, (uint64_t)v11, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
    char v41 = v144;
    uint64_t v42 = *(void *)&v11[*((int *)v144 + 10)];
    uint64_t v43 = v137;
    if (!v42) {
      goto LABEL_71;
    }
    uint64_t v126 = *(void (**)(uint64_t *))(v42 + 32);
    sub_1B6339544((uint64_t)v11, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
    uint64_t v44 = *(void *)(v143 + 8);
    uint64_t v45 = v40 + *((int *)v41 + 14);
    uint64_t v46 = *(void *)v45;
    char v47 = *(unsigned char *)(v45 + 8);
    uint64_t v48 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_1B633A2F4(v27, v44, v46, v47, v48, 0, (uint64_t)v170);
    long long v167 = v172;
    long long v168 = v173;
    uint64_t v169 = v174;
    long long v164 = v170[0];
    v165[0] = v170[1];
    v165[1] = v170[2];
    long long v166 = v171;
    char v49 = (void *)thread_worker_index(&thread_worker_index, *(double *)&v171);
    if (sub_1B62C6548(*(void *)(*(void *)(v43 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v49 + 8)))
    {
      sub_1B62C9DA8(v43, (uint64_t)v146, 0x200000000, v175);
      uint64_t v50 = (unsigned __int16 *)v175[0];
      uint64_t v51 = v175[1];
      uint64_t v52 = v175[2];
      char v53 = v176;
      uint64_t v54 = v177;
      uint64_t v128 = v178;
      uint64_t v129 = v179;
      uint64_t v55 = v180;
      uint64_t v56 = v182;
      unsigned __int8 v144 = v181;
      *(void *)&long long v145 = v183;
      sub_1B62D7890((uint64_t)v175, (uint64_t)v184, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (v184[0])
      {
        if (v56 > 0 && v129)
        {
          int v57 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v136 = v144[4];
          uint64_t v149 = v50;
          int v150 = v51;
          char v151 = BYTE4(v51);
          uint64_t v152 = v52;
          char v153 = v53;
          uint64_t v154 = v54;
          char v58 = v144;
          uint64_t v123 = v144 + 6;
          uint64_t v124 = &v167;
          uint64_t v122 = v144 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v59 = 0;
          uint64_t v60 = v134;
          int v125 = v57;
          while (1)
          {
            long long v61 = (unsigned int *)(v128 + 48 * v59);
            uint64_t v62 = *v61;
            uint64_t v63 = v61[1];
            uint64_t v64 = *((void *)v61 + 5);
            uint64_t v135 = v59;
            uint64_t v132 = v63;
            uint64_t v133 = v62;
            if (v57)
            {
              unint64_t v65 = *(os_unfair_lock_s **)(v64 + 376);
              swift_retain();
              os_unfair_lock_lock(v65);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v64 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v136);
            sub_1B62D7890((uint64_t)v123, (uint64_t)v185, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v66 = v58[4];
            uint64_t v67 = *(void *)(*(void *)(*(void *)(*(void *)(v64 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v58[6] = ecs_stack_allocator_allocate(v66, 48 * v67, 8);
            v58[7] = v67;
            uint64_t v68 = v122;
            v122[1] = 0;
            v68[2] = 0;
            *uint64_t v68 = 0;
            swift_release();
            uint64_t v69 = v58[2];
            long long v145 = *((_OWORD *)v58 + 3);
            long long v143 = *((_OWORD *)v58 + 4);
            uint64_t v70 = v58[10];
            uint64_t v71 = v58[4];
            uint64_t v72 = *(void *)(*(void *)(*(void *)(*(void *)(v64 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            uint64_t v142 = v69;
            swift_retain();
            v58[6] = ecs_stack_allocator_allocate(v71, 48 * v72, 8);
            v58[7] = v72;
            v68[1] = 0;
            v68[2] = 0;
            *uint64_t v68 = 0;
            long long v167 = v145;
            long long v168 = v143;
            uint64_t v169 = v70;
            uint64_t v73 = *((void *)&v164 + 1);
            uint64_t v74 = *(void *)(*((void *)&v164 + 1) + 16);
            *(void *)&long long v143 = v64;
            if (v74) {
              break;
            }
            swift_bridgeObjectRetain();
            swift_release();
LABEL_52:
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v104 = v144;
            uint64_t v105 = v144[4];
            uint64_t v106 = v164;
            uint64_t v107 = sub_1B633A8FC(MEMORY[0x1E4FBC860]);
            uint64_t v155 = v137;
            int v156 = v127;
            unsigned int v157 = v131;
            uint64_t v158 = v105;
            uint64_t v159 = v133;
            uint64_t v160 = v132;
            char v161 = 0;
            uint64_t v162 = v106;
            long long v163 = v107;
            v126(&v155);
            swift_bridgeObjectRelease();
            uint64_t v108 = *((void *)&v166 + 1);
            sub_1B62D7890((uint64_t)v124, (uint64_t)v186, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B6345178(v104, v146, (uint64_t)v186);
            uint64_t v109 = *(void *)(v108 + 16);
            if (!v109)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
            swift_bridgeObjectRetain();
            uint64_t v110 = v108 + 40;
            do
            {
              uint64_t v111 = *(void (**)(uint64_t))(v110 - 8);
              uint64_t v112 = swift_retain();
              v111(v112);
              swift_release();
              v110 += 16;
              --v109;
            }
            while (v109);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            char v58 = v144;
            uint64_t v64 = v143;
LABEL_62:
            sub_1B6345178(v58, &v149, (uint64_t)v185);
            sub_1B634507C((char *)v64);
            ecs_stack_allocator_pop_snapshot(v136);
            int v57 = v125;
            uint64_t v118 = v135;
            if (v125)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 376));
            }
            swift_release();
            uint64_t v59 = v118 + 1;
            if (v59 == v129)
            {
              sub_1B632F170(v175);
              goto LABEL_67;
            }
          }
          uint64_t v134 = v60;
          swift_bridgeObjectRetain();
          uint64_t v75 = 0;
          uint64_t v130 = v73;
          unsigned __int8 v76 = (char *)(v73 + 40);
          uint64_t v138 = v74;
          while (1)
          {
            unint64_t v81 = *((void *)v76 - 1);
            if ((v81 >> 60) - 9 > 1) {
              goto LABEL_38;
            }
            uint64_t v82 = *(void *)&v165[0];
            char v83 = BYTE8(v165[0]);
            unint64_t v84 = *(void *)((char *)v165 + 12);
            char v85 = BYTE4(v165[1]);
            char v86 = *v76;
            sub_1B62C6AA8(*((void *)v76 - 1));
            uint64_t v87 = v143;
            swift_retain();
            sub_1B62C6AA8(v81);
            uint64_t v88 = (uint64_t (*)(void *))sub_1B62C6B10(v81, v86, v82, v83, v84, v85, (uint64_t)v144, v87);
            uint64_t v90 = v89;
            uint64_t v92 = v91;
            unsigned __int8 v94 = v93;
            LODWORD(v84) = v93;
            swift_release();
            sub_1B62C6A70(v81);
            if (v84 > 0xFB)
            {
              swift_bridgeObjectRelease();
              sub_1B62C6A70(v81);
              uint64_t v113 = *((void *)&v166 + 1);
              sub_1B62D7890((uint64_t)v124, (uint64_t)v187, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              char v58 = v144;
              uint64_t v60 = v134;
              sub_1B6345178(v144, v146, (uint64_t)v187);
              uint64_t v114 = *(void *)(v113 + 16);
              if (v114)
              {
                swift_bridgeObjectRetain();
                uint64_t v115 = v113 + 40;
                uint64_t v64 = v143;
                do
                {
                  int v116 = *(void (**)(uint64_t))(v115 - 8);
                  uint64_t v117 = swift_retain();
                  v116(v117);
                  swift_release();
                  v115 += 16;
                  --v114;
                }
                while (v114);
                swift_release();
                swift_release();
LABEL_61:
                swift_bridgeObjectRelease();
                char v58 = v144;
              }
              else
              {
                swift_release();
                uint64_t v64 = v143;
                swift_release();
              }
              goto LABEL_62;
            }
            if (v94 >> 6 && v94 >> 6 != 1)
            {
              swift_retain();
              uint64_t v79 = v88(v144);
              uint64_t v80 = v95;
              *(void *)&long long v145 = v96;
              sub_1B62CCEE8((uint64_t)v88, v90, v92, v94);
              if (v80)
              {
LABEL_46:
                uint64_t v97 = swift_allocObject();
                uint64_t v139 = v97;
                uint64_t v140 = v80;
                *(void *)(v97 + 16) = v80;
                *(void *)(v97 + 24) = v145;
                uint64_t v98 = (void *)*((void *)&v166 + 1);
                swift_retain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v141 = v79;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  uint64_t v98 = sub_1B62CACA8(0, v98[2] + 1, 1, v98);
                }
                unint64_t v101 = v98[2];
                unint64_t v100 = v98[3];
                unint64_t v102 = v101 + 1;
                if (v101 >= v100 >> 1)
                {
                  unint64_t v120 = v101 + 1;
                  uint64_t v103 = sub_1B62CACA8(v100 > 1, v101 + 1, 1, v98);
                  unint64_t v102 = v120;
                  uint64_t v98 = v103;
                }
                void v98[2] = v102;
                uint64_t v77 = &v98[2 * v101];
                uint64_t v78 = v139;
                v77[4] = sub_1B633A540;
                v77[5] = v78;
                *((void *)&v166 + 1) = v98;
                uint64_t v80 = v140;
                uint64_t v79 = v141;
              }
            }
            else
            {
              sub_1B62C6A60(v90);
              uint64_t v79 = (uint64_t)v88;
              uint64_t v80 = v90;
              *(void *)&long long v145 = v92;
              if (v90) {
                goto LABEL_46;
              }
            }
            *(void *)(v164 + 8 * v75) = v79;
            sub_1B62C6A50(v80);
            sub_1B62CCEE8((uint64_t)v88, v90, v92, v94);
            sub_1B62C6A70(v81);
            uint64_t v74 = v138;
LABEL_38:
            ++v75;
            v76 += 32;
            if (v74 == v75)
            {
              uint64_t v64 = v143;
              swift_release();
              uint64_t v60 = v134;
              goto LABEL_52;
            }
          }
        }
LABEL_67:
        sub_1B632F170(v175);
      }
      else
      {
        sub_1B62F94F4(v48, (uint64_t)v146);
      }
      sub_1B633A414((uint64_t)&v164, v121, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
    }
    sub_1B62CA064((uint64_t)v146);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  char v29 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v30 = 32;
  *(void *)&long long v145 = v27;
  while (1)
  {
    unint64_t v33 = *(void *)(v27 + v30);
    if (v33 >> 60 == 9) {
      break;
    }
LABEL_15:
    v30 += 32;
    if (!--v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
  }
  swift_retain();
  uint64_t v34 = sub_1B6E32738();
  sub_1B62C6A70(v33);
  uint64_t v35 = swift_conformsToProtocol2();
  if (v35)
  {
    uint64_t v36 = v35;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v29 = sub_1B62F94D0(0, *((void *)v29 + 2) + 1, 1, v29);
    }
    unint64_t v38 = *((void *)v29 + 2);
    unint64_t v37 = *((void *)v29 + 3);
    if (v38 >= v37 >> 1) {
      char v29 = sub_1B62F94D0(v37 > 1, v38 + 1, 1, v29);
    }
    uint64_t v31 = *(void *)(v36 + 8);
    *((void *)v29 + 2) = v38 + 1;
    uint64_t v32 = &v29[16 * v38];
    *((void *)v32 + 4) = v34;
    *((void *)v32 + 5) = v31;
    uint64_t v27 = v145;
    goto LABEL_15;
  }
  __break(1u);
LABEL_71:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

char *sub_1B62F9114(char a1, uint64_t a2, char a3, char *a4, unint64_t *a5, unint64_t *a6, unint64_t *a7)
{
  if (a3)
  {
    unint64_t v9 = *((void *)a4 + 3);
    uint64_t v10 = v9 >> 1;
    int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (v11 <= a2) {
      int64_t v11 = a2;
    }
    if (v10 < a2) {
      a2 = v11;
    }
    else {
      a2 = v10;
    }
  }
  uint64_t v12 = *((void *)a4 + 2);
  if (a2 <= v12) {
    uint64_t v13 = *((void *)a4 + 2);
  }
  else {
    uint64_t v13 = a2;
  }
  if (v13)
  {
    sub_1B62F92E0(0, a5, a6, a7);
    char v14 = (char *)swift_allocObject();
    int64_t v15 = j__malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 17;
    }
    *((void *)v14 + 2) = v12;
    *((void *)v14 + 3) = 2 * (v16 >> 4);
    uint64_t v17 = v14 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v12, v17, (uint64_t)a4);
    goto LABEL_23;
  }
  char v14 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v17 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v14 != a4 || v17 >= &a4[16 * v12 + 32]) {
    memmove(v17, a4 + 32, 16 * v12);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1B62F9218(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62F927C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62F92E0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1B637EC90(255, a3, a4);
    unint64_t v5 = sub_1B6E330A8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B62F9340(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62F93A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62F9408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B62F946C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_1B62F94D0(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B62F9114(a1, a2, a3, a4, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
}

uint64_t sub_1B62F94F4(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 48) != 1) {
    return result;
  }
  uint64_t v3 = v2;
  uint64_t v5 = sub_1B6BF949C(result, v2);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = sub_1B6E31EF8();
  uint64_t v27 = v7;
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      uint64_t v10 = *(void *)(v6 + 8 * i + 32);
      sub_1B637E330(&v29, v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v27;
  }
  else
  {
    uint64_t v11 = v7;
    swift_bridgeObjectRelease();
  }
  unsigned int v12 = *(unsigned __int16 *)(*(void *)a2 + 18);
  if (v12 >= 0x10)
  {
    uint64_t v13 = (uint64_t *)(*(void *)a2 + *(unsigned __int16 *)(*(void *)a2 + 16) + 41);
    char v14 = (uint64_t *)((char *)v13 + ((unsigned __int16)v12 & 0xFFF0));
    uint64_t v26 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    uint64_t v15 = v11 + 56;
    do
    {
      uint64_t v20 = *v13;
      if (*(void *)(v11 + 16))
      {
        uint64_t v21 = sub_1B6E33908();
        uint64_t v22 = -1 << *(unsigned char *)(v11 + 32);
        unint64_t v23 = v21 & ~v22;
        if ((*(void *)(v15 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
        {
          uint64_t v24 = *(void *)(v11 + 48);
          if (*(void *)(v24 + 8 * v23) == v20) {
            goto LABEL_17;
          }
          uint64_t v25 = ~v22;
          while (1)
          {
            unint64_t v23 = (v23 + 1) & v25;
            if (((*(void *)(v15 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
              break;
            }
            if (*(void *)(v24 + 8 * v23) == v20) {
              goto LABEL_17;
            }
          }
        }
      }
      uint64_t v16 = *(void *)(v3 + v26);
      uint64_t v27 = 0;
      unint64_t v28 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v17 = v27;
      unint64_t v18 = v28;
      uint64_t v19 = sub_1B6E32148();
      uint64_t v27 = 0;
      (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(void *)v16 + 88))(v19, &v27, v17, v18);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_17:
      v13 += 2;
    }
    while (v13 != v14);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62F97B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  uint64_t v3 = a1[1];
  swift_retain();
  sub_1B62F9FC4(v3, &v20);
  swift_release();
  char v4 = v20;
  if (v20 == 3)
  {
    char v4 = 0;
    float v5 = 1.0;
    float v6 = 0.2;
    float v7 = 0.1;
    float v8 = 0.1;
    float v9 = 0.2;
    float v10 = 0.1;
    float v11 = 0.2;
  }
  else
  {
    float v7 = *((float *)&v20 + 1);
    float v6 = v21;
    float v8 = v22;
    float v9 = v23;
    float v10 = v24;
    float v11 = v25;
    float v5 = v26;
  }
  v27[0] = v4;
  float v28 = v7;
  float v29 = v6;
  float v12 = v7 * v5;
  float v30 = v8;
  float v31 = v9;
  float v13 = v6 * v5;
  float v14 = v8 * v5;
  float v15 = v9 * v5;
  float v32 = v10;
  float v33 = v11;
  float v34 = v5;
  float v16 = v10 * v5;
  float v17 = v11 * v5;
  uint64_t v18 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B62F9900(v18, v2, v2, (uint64_t)a1, v27, v12, v13, v14, v15, v16, v17);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

uint64_t sub_1B62F9900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, float a6, float a7, float a8, float a9, float a10, float a11)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v13 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B62F9AD4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v13 + 12 * (int)a1) + 32), *(_WORD *)(v13 + 12 * (int)a1 + 4), 656, a3, a4, a5, a6, a7, a8, a9, a10, a11), !v11)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62F9AD4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, float a7, float a8, float a9, float a10, float a11, float a12)
{
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13) {
    return 0;
  }
  for (uint64_t i = (void *)(v12 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v13) {
      return 0;
    }
  }
  sub_1B62F9B4C((void *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return 1;
}

void sub_1B62F9B4C(void *a1, uint64_t a2, uint64_t a3, unsigned char *a4, float a5, float a6, float a7, float a8, float a9, float a10)
{
  uint64_t v11 = v10;
  long long v18 = *(_OWORD *)(a3 + 104);
  v66[0] = *(_OWORD *)(a3 + 88);
  v66[1] = v18;
  uint64_t v67 = *(void *)(a3 + 120);
  sub_1B62C9DA8(a2, (uint64_t)v66, 0x200000000, v51);
  sub_1B62D7910((uint64_t)v51, (uint64_t)v52, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v52[0])
  {
    long long v59 = v52[0];
    long long v60 = v52[1];
    uint64_t v61 = v53;
    uint64_t v43 = v58;
    if (v58 >= 1 && (uint64_t v19 = v55) != 0)
    {
      uint64_t v20 = v57;
      uint64_t v74 = v57[4];
      int v50 = *(unsigned __int8 *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v41 = (uint64_t)(v57 + 6);
      uint64_t v42 = v56;
      long long v39 = v57 + 13;
      uint64_t v40 = v57 + 8;
      float v21 = (uint64_t *)(v54 + 24);
      while (1)
      {
        uint64_t v22 = *((unsigned int *)v21 - 6);
        uint64_t v23 = *((unsigned int *)v21 - 5);
        uint64_t v24 = *((unsigned int *)v21 - 4);
        uint64_t v25 = *v21;
        uint64_t v26 = v21[2];
        uint64_t v48 = v19;
        char v49 = v11;
        uint64_t v46 = v21[1];
        uint64_t v47 = *(v21 - 1);
        if (v50)
        {
          uint64_t v27 = *(os_unfair_lock_s **)(v26 + 376);
          swift_retain();
          os_unfair_lock_lock(v27);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v74);
        sub_1B62D7910(v41, (uint64_t)v68, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v28 = v20[4];
        uint64_t v29 = *(void *)(*(void *)(*(void *)(*(void *)(v26 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v20[6] = ecs_stack_allocator_allocate(v28, 48 * v29, 8);
        v20[7] = v29;
        v40[1] = 0;
        _OWORD v40[2] = 0;
        *uint64_t v40 = 0;
        swift_release();
        v69[0] = v42;
        v69[1] = v26;
        v69[2] = v20;
        uint64_t v69[3] = v24;
        _OWORD v69[4] = (v23 - v22 + v24);
        v69[5] = v43;
        v69[6] = v22;
        v69[7] = v23;
        v69[8] = 0;
        v69[9] = 0;
        char v70 = 1;
        uint64_t v71 = v47;
        uint64_t v72 = v25;
        uint64_t v73 = v46;
        *(float *)&double v30 = a5;
        sub_1B6D5C858((uint64_t)v69, a4, a1, v30, a6, a7, a8, a9, a10);
        if (v49) {
          break;
        }
        v64[0] = v59;
        v64[1] = v60;
        uint64_t v65 = v61;
        sub_1B6345178(v20, (unsigned __int16 **)v64, (uint64_t)v68);
        uint64_t v11 = 0;
        if (*(void *)(v20[13] + 16))
        {
          uint64_t v31 = swift_bridgeObjectRetain();
          sub_1B639147C(v31, v26);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v33 = v20[13];
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v33 + 16));
          }
          else
          {
            float v34 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v33 + 24) >= 2uLL)
            {
              sub_1B62D2D24(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              float v34 = (void *)swift_allocObject();
              size_t v35 = j__malloc_size(v34);
              v34[2] = 0;
              v34[3] = 2 * ((uint64_t)(v35 - 32) / 72);
            }
            void *v39 = v34;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v20[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            uint64_t v36 = *(char **)(v26 + 232);
            unint64_t v37 = *(char **)(v26 + 256);
            if (v36 == v37)
            {
              unint64_t v38 = *(char **)(v26 + 240);
            }
            else
            {
              sub_1B666018C(v37, v36);
              unint64_t v37 = *(char **)(v26 + 232);
              unint64_t v38 = *(char **)(v26 + 240);
              if (v38 == v37)
              {
                unint64_t v38 = 0;
                unint64_t v37 = 0;
                *(void *)(v26 + 232) = 0;
                *(void *)(v26 + 240) = 0;
              }
            }
            *(void *)(v26 + 248) = v38;
            *(void *)(v26 + 256) = v37;
          }
        }
        ecs_stack_allocator_pop_snapshot(v74);
        if (v50)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 376));
        }
        swift_release();
        v21 += 6;
        uint64_t v19 = v48 - 1;
        if (v48 == 1) {
          goto LABEL_24;
        }
      }

      v62[0] = v59;
      v62[1] = v60;
      uint64_t v63 = v61;
      sub_1B6345178(v20, (unsigned __int16 **)v62, (uint64_t)v68);
      sub_1B634507C((char *)v26);
      ecs_stack_allocator_pop_snapshot(v74);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 376));
      __break(1u);
    }
    else
    {
LABEL_24:
      sub_1B632F170(v51);
    }
  }
}

double sub_1B62F9FC4@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    char v4 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B62FA088(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4 + 2) << 32), 32, v2, (uint64_t)a2).n128_u64[0];
  }
  else
  {
    *a2 = 3;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 0;
  }
  return result;
}

__n128 sub_1B62FA088@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    float v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSizeInit)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    float v8 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    uint64_t v9 = *((void *)v8 + 3);
    *(void *)a5 = *v8 | ((unint64_t)*((unsigned int *)v8 + 1) << 32);
    __n128 result = *(__n128 *)(v8 + 8);
    *(__n128 *)(a5 + 8) = result;
    *(void *)(a5 + 24) = v9;
  }
  else
  {
LABEL_5:
    *(void *)a5 = 3;
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 24) = 0;
  }
  return result;
}

uint64_t sub_1B62FA114(uint64_t a1)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 16);
  uint64_t v5 = v4 + *(void *)(a1 + 16);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v7 = v3[3] >> 1, v7 < v5))
  {
    if (v4 <= v5) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = v4;
    }
    uint64_t v3 = sub_1B636A9C8(isUniquelyReferenced_nonNull_native, v8, 1, v3);
    uint64_t v7 = v3[3] >> 1;
  }
  sub_1B62FA1E0((unint64_t)&v3[12 * v3[2] + 4], v7 - v3[2], a1);
  if (v9 >= 1) {
    v3[2] += v9;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v3;
  return result;
}

uint64_t sub_1B62FA1C8()
{
  return sub_1B63886DC((uint64_t (*)(uint64_t))sub_1B6C167C0);
}

uint64_t sub_1B62FA1E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return a3;
  }
  if (a3 + 32 >= a1 + 96 * v4 || a3 + 32 + 96 * v4 <= a1)
  {
    swift_arrayInitWithCopy();
    return a3;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62FA294(uint64_t a1)
{
  sub_1B62FA30C(0, &qword_1EB97FAB0, (void (*)(uint64_t))sub_1B6303984);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B62FA30C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B62FA360()
{
  return qword_1E9DD2FF8;
}

uint64_t sub_1B62FA36C(uint64_t a1, char a2, char a3)
{
  sub_1B6317658(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = *(unsigned __int8 *)(a1 + 49);
  *(_OWORD *)(v6 + 16) = xmmword_1B6E94E00;
  *(_OWORD *)(v6 + 32) = xmmword_1B6E94E10;
  *(unsigned char *)(v6 + 48) = 0;
  *(void *)(v6 + 64) = (v7 | (a2 & a3)) & 1;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(void *)(v6 + 120) = 0;
  *(unsigned char *)(v6 + 128) = 13;
  *(_OWORD *)(v6 + 144) = xmmword_1B6E94E20;
  *(unsigned char *)(v6 + 160) = 0;
  *(void *)(v6 + 176) = v7;
  *(_OWORD *)(v6 + 184) = 0u;
  *(_OWORD *)(v6 + 200) = 0u;
  *(_OWORD *)(v6 + 216) = 0u;
  *(void *)(v6 + 232) = 0;
  *(unsigned char *)(v6 + 240) = 13;
  swift_retain();
  BOOL v8 = sub_1B62FACF8((uint64_t)&type metadata for Velocity);
  swift_release();
  *(_OWORD *)(v6 + 256) = xmmword_1B6E94E30;
  *(unsigned char *)(v6 + 272) = 0;
  *(void *)(v6 + 288) = v8;
  *(_OWORD *)(v6 + 296) = 0u;
  *(_OWORD *)(v6 + 312) = 0u;
  *(_OWORD *)(v6 + 328) = 0u;
  *(void *)(v6 + 344) = 0;
  *(unsigned char *)(v6 + 352) = 13;
  swift_retain();
  BOOL v9 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAge);
  swift_release();
  *(_OWORD *)(v6 + 368) = xmmword_1B6E94E40;
  *(unsigned char *)(v6 + 384) = 0;
  *(void *)(v6 + 400) = v9;
  *(_OWORD *)(v6 + 408) = 0u;
  *(_OWORD *)(v6 + 424) = 0u;
  *(_OWORD *)(v6 + 440) = 0u;
  *(void *)(v6 + 456) = 0;
  *(unsigned char *)(v6 + 464) = 13;
  swift_retain();
  BOOL v10 = sub_1B62FACF8((uint64_t)&type metadata for ParticleLifetime);
  swift_release();
  *(_OWORD *)(v6 + 480) = xmmword_1B6E94E50;
  *(unsigned char *)(v6 + 496) = 0;
  *(void *)(v6 + 512) = v10;
  *(_OWORD *)(v6 + 520) = 0u;
  *(_OWORD *)(v6 + 536) = 0u;
  *(_OWORD *)(v6 + 552) = 0u;
  *(void *)(v6 + 568) = 0;
  *(unsigned char *)(v6 + 576) = 13;
  swift_retain();
  BOOL v11 = sub_1B62FACF8((uint64_t)&type metadata for Color);
  swift_release();
  *(_OWORD *)(v6 + 592) = xmmword_1B6E94E60;
  *(unsigned char *)(v6 + 608) = 0;
  *(void *)(v6 + 624) = v11;
  *(_OWORD *)(v6 + 632) = 0u;
  *(_OWORD *)(v6 + 648) = 0u;
  *(_OWORD *)(v6 + 664) = 0u;
  *(void *)(v6 + 680) = 0;
  *(unsigned char *)(v6 + 688) = 13;
  swift_retain();
  BOOL v12 = sub_1B62FACF8((uint64_t)&type metadata for Orientation);
  swift_release();
  BOOL v13 = 0;
  *(_OWORD *)(v6 + 704) = xmmword_1B6E94E70;
  *(unsigned char *)(v6 + 720) = 0;
  *(void *)(v6 + 736) = v12;
  *(_OWORD *)(v6 + 744) = 0u;
  *(_OWORD *)(v6 + 760) = 0u;
  *(_OWORD *)(v6 + 776) = 0u;
  *(void *)(v6 + 792) = 0;
  *(unsigned char *)(v6 + 800) = 13;
  if ((a2 & 1) == 0)
  {
    swift_retain();
    BOOL v14 = sub_1B62FACF8((uint64_t)&type metadata for AngularVelocity);
    swift_release();
    BOOL v13 = v14;
  }
  *(_OWORD *)(v6 + 816) = xmmword_1B6E94E80;
  *(unsigned char *)(v6 + 832) = 0;
  *(void *)(v6 + 848) = v13;
  *(void *)(v6 + 904) = 0;
  *(_OWORD *)(v6 + 856) = 0u;
  *(_OWORD *)(v6 + 872) = 0u;
  *(_OWORD *)(v6 + 888) = 0u;
  *(unsigned char *)(v6 + 912) = 13;
  swift_retain();
  BOOL v15 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAngle);
  swift_release();
  BOOL v16 = 0;
  *(_OWORD *)(v6 + 928) = xmmword_1B6E94E90;
  *(unsigned char *)(v6 + 944) = 0;
  *(void *)(v6 + 960) = v15;
  *(_OWORD *)(v6 + 968) = 0u;
  *(_OWORD *)(v6 + 984) = 0u;
  *(_OWORD *)(v6 + 1000) = 0u;
  *(void *)(v6 + 1016) = 0;
  *(unsigned char *)(v6 + 1024) = 13;
  if ((a2 & 1) == 0)
  {
    swift_retain();
    BOOL v17 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAngleVelocity);
    swift_release();
    BOOL v16 = v17;
  }
  *(_OWORD *)(v6 + 1040) = xmmword_1B6E94EA0;
  *(unsigned char *)(v6 + 1056) = 0;
  *(void *)(v6 + 1072) = v16;
  *(void *)(v6 + 1128) = 0;
  *(_OWORD *)(v6 + 1080) = 0u;
  *(_OWORD *)(v6 + 1096) = 0u;
  *(_OWORD *)(v6 + 1112) = 0u;
  *(unsigned char *)(v6 + 1136) = 13;
  swift_retain();
  BOOL v18 = sub_1B62FACF8((uint64_t)&type metadata for ParticlePivot);
  swift_release();
  *(_OWORD *)(v6 + 1152) = xmmword_1B6E94EB0;
  *(unsigned char *)(v6 + 1168) = 0;
  *(void *)(v6 + 1184) = v18;
  *(_OWORD *)(v6 + 1192) = 0u;
  *(_OWORD *)(v6 + 1208) = 0u;
  *(_OWORD *)(v6 + 1224) = 0u;
  *(void *)(v6 + 1240) = 0;
  *(unsigned char *)(v6 + 1248) = 13;
  swift_retain();
  BOOL v19 = sub_1B62FACF8((uint64_t)&type metadata for ParticleTarget);
  swift_release();
  BOOL v20 = 0;
  *(_OWORD *)(v6 + 1264) = xmmword_1B6E94EC0;
  *(unsigned char *)(v6 + 1280) = 0;
  *(void *)(v6 + 1296) = v19;
  *(_OWORD *)(v6 + 1304) = 0u;
  *(_OWORD *)(v6 + 1320) = 0u;
  *(_OWORD *)(v6 + 1336) = 0u;
  *(void *)(v6 + 1352) = 0;
  *(unsigned char *)(v6 + 1360) = 13;
  if ((a2 & 1) == 0)
  {
    swift_retain();
    BOOL v21 = sub_1B62FACF8((uint64_t)&type metadata for Mass);
    swift_release();
    BOOL v20 = v21;
  }
  *(_OWORD *)(v6 + 1376) = xmmword_1B6E94ED0;
  *(unsigned char *)(v6 + 1392) = 0;
  *(void *)(v6 + 1408) = v20;
  *(void *)(v6 + 1464) = 0;
  *(_OWORD *)(v6 + 1416) = 0u;
  *(_OWORD *)(v6 + 1432) = 0u;
  *(_OWORD *)(v6 + 1448) = 0u;
  *(unsigned char *)(v6 + 1472) = 13;
  swift_retain();
  BOOL v22 = sub_1B62FACF8((uint64_t)&type metadata for ParticleRibbonLength);
  swift_release();
  *(_OWORD *)(v6 + 1488) = xmmword_1B6E94EE0;
  *(unsigned char *)(v6 + 1504) = 0;
  *(void *)(v6 + 1520) = v22;
  *(_OWORD *)(v6 + 1528) = 0u;
  *(_OWORD *)(v6 + 1544) = 0u;
  *(_OWORD *)(v6 + 1560) = 0u;
  *(void *)(v6 + 1576) = 0;
  *(unsigned char *)(v6 + 1584) = 13;
  swift_retain();
  BOOL v23 = sub_1B62FACF8((uint64_t)&type metadata for ParticleTextureFrame);
  swift_release();
  *(_OWORD *)(v6 + 1600) = xmmword_1B6E94EF0;
  *(unsigned char *)(v6 + 1616) = 0;
  *(void *)(v6 + 1632) = v23;
  *(_OWORD *)(v6 + 1640) = 0u;
  *(_OWORD *)(v6 + 1656) = 0u;
  *(_OWORD *)(v6 + 1672) = 0u;
  *(void *)(v6 + 1688) = 0;
  *(unsigned char *)(v6 + 1696) = 13;
  if (a2)
  {
    BOOL v24 = 0;
    *(_OWORD *)(v6 + 1712) = xmmword_1B6E94F00;
    *(unsigned char *)(v6 + 1728) = 0;
    *(void *)(v6 + 1744) = 0;
    *(void *)(v6 + 1800) = 0;
    *(_OWORD *)(v6 + 1752) = 0u;
    *(_OWORD *)(v6 + 1768) = 0u;
    *(_OWORD *)(v6 + 1784) = 0u;
    *(unsigned char *)(v6 + 1808) = 13;
  }
  else
  {
    swift_retain();
    BOOL v25 = sub_1B62FACF8((uint64_t)&type metadata for LinearFactor);
    swift_release();
    *(_OWORD *)(v6 + 1712) = xmmword_1B6E94F00;
    *(unsigned char *)(v6 + 1728) = 0;
    *(void *)(v6 + 1744) = v25;
    *(_OWORD *)(v6 + 1752) = 0u;
    *(_OWORD *)(v6 + 1768) = 0u;
    *(_OWORD *)(v6 + 1784) = 0u;
    *(void *)(v6 + 1800) = 0;
    *(unsigned char *)(v6 + 1808) = 13;
    swift_retain();
    BOOL v26 = sub_1B62FACF8((uint64_t)&type metadata for AngularFactor);
    swift_release();
    BOOL v24 = v26;
  }
  *(_OWORD *)(v6 + 1824) = xmmword_1B6E94F10;
  *(unsigned char *)(v6 + 1840) = 0;
  *(void *)(v6 + 1856) = v24;
  *(void *)(v6 + 1912) = 0;
  *(_OWORD *)(v6 + 1864) = 0u;
  *(_OWORD *)(v6 + 1880) = 0u;
  *(_OWORD *)(v6 + 1896) = 0u;
  *(unsigned char *)(v6 + 1920) = 13;
  swift_retain();
  BOOL v27 = sub_1B62FACF8((uint64_t)&type metadata for ParticleID);
  swift_release();
  *(_OWORD *)(v6 + 1936) = xmmword_1B6E94F20;
  *(unsigned char *)(v6 + 1952) = 0;
  *(void *)(v6 + 1968) = v27;
  *(_OWORD *)(v6 + 1976) = 0u;
  *(_OWORD *)(v6 + 1992) = 0u;
  *(_OWORD *)(v6 + 2008) = 0u;
  *(void *)(v6 + 2024) = 0;
  *(unsigned char *)(v6 + 2032) = 13;
  swift_retain();
  BOOL v28 = sub_1B62FACF8((uint64_t)&type metadata for ParticleParentID);
  swift_release();
  *(_OWORD *)(v6 + 2048) = xmmword_1B6E94F30;
  *(unsigned char *)(v6 + 2064) = 0;
  *(void *)(v6 + 2080) = v28;
  *(_OWORD *)(v6 + 2088) = 0u;
  *(_OWORD *)(v6 + 2104) = 0u;
  *(_OWORD *)(v6 + 2120) = 0u;
  *(void *)(v6 + 2136) = 0;
  *(unsigned char *)(v6 + 2144) = 13;
  swift_retain();
  BOOL v29 = sub_1B62FACF8((uint64_t)&type metadata for UserData1);
  swift_release();
  *(_OWORD *)(v6 + 2160) = xmmword_1B6E94F40;
  *(unsigned char *)(v6 + 2176) = 0;
  *(void *)(v6 + 2192) = v29;
  *(_OWORD *)(v6 + 2200) = 0u;
  *(_OWORD *)(v6 + 2216) = 0u;
  *(_OWORD *)(v6 + 2232) = 0u;
  *(void *)(v6 + 2248) = 0;
  *(unsigned char *)(v6 + 2256) = 13;
  swift_retain();
  BOOL v30 = sub_1B62FACF8((uint64_t)&type metadata for UserData2);
  swift_release();
  *(_OWORD *)(v6 + 2272) = xmmword_1B6E94F50;
  *(unsigned char *)(v6 + 2288) = 0;
  *(void *)(v6 + 2304) = v30;
  *(_OWORD *)(v6 + 2312) = 0u;
  *(_OWORD *)(v6 + 2328) = 0u;
  *(_OWORD *)(v6 + 2344) = 0u;
  *(void *)(v6 + 2360) = 0;
  *(unsigned char *)(v6 + 2368) = 13;
  swift_retain();
  BOOL v31 = sub_1B62FACF8((uint64_t)&type metadata for UserData3);
  swift_release();
  *(_OWORD *)(v6 + 2384) = xmmword_1B6E94F60;
  *(unsigned char *)(v6 + 2400) = 0;
  *(void *)(v6 + 2416) = v31;
  *(_OWORD *)(v6 + 2424) = 0u;
  *(_OWORD *)(v6 + 2440) = 0u;
  *(_OWORD *)(v6 + 2456) = 0u;
  *(void *)(v6 + 2472) = 0;
  *(unsigned char *)(v6 + 2480) = 13;
  swift_retain();
  BOOL v32 = sub_1B62FACF8((uint64_t)&type metadata for UserData4);
  swift_release();
  *(_OWORD *)(v6 + 2496) = xmmword_1B6E94F70;
  *(unsigned char *)(v6 + 2512) = 0;
  *(void *)(v6 + 2528) = v32;
  *(_OWORD *)(v6 + 2536) = 0u;
  *(_OWORD *)(v6 + 2552) = 0u;
  *(_OWORD *)(v6 + 2568) = 0u;
  *(void *)(v6 + 2584) = 0;
  *(unsigned char *)(v6 + 2592) = 13;
  swift_retain();
  BOOL v33 = sub_1B62FACF8((uint64_t)&type metadata for Scale1);
  swift_release();
  *(_OWORD *)(v6 + 2608) = xmmword_1B6E94F80;
  *(unsigned char *)(v6 + 2624) = 0;
  *(void *)(v6 + 2640) = v33;
  *(_OWORD *)(v6 + 2648) = 0u;
  *(_OWORD *)(v6 + 2664) = 0u;
  *(_OWORD *)(v6 + 2680) = 0u;
  *(void *)(v6 + 2696) = 0;
  *(unsigned char *)(v6 + 2704) = 13;
  swift_retain();
  BOOL v34 = sub_1B62FACF8((uint64_t)&type metadata for Scale2);
  swift_release();
  *(_OWORD *)(v6 + 2720) = xmmword_1B6E94F90;
  *(unsigned char *)(v6 + 2736) = 0;
  *(void *)(v6 + 2752) = v34;
  *(_OWORD *)(v6 + 2760) = 0u;
  *(_OWORD *)(v6 + 2776) = 0u;
  *(_OWORD *)(v6 + 2792) = 0u;
  *(void *)(v6 + 2808) = 0;
  *(unsigned char *)(v6 + 2816) = 13;
  swift_retain();
  BOOL v35 = sub_1B62FACF8((uint64_t)&type metadata for Scale3);
  swift_release();
  *(_OWORD *)(v6 + 2832) = xmmword_1B6E94FA0;
  *(unsigned char *)(v6 + 2848) = 0;
  *(void *)(v6 + 2864) = v35;
  *(_OWORD *)(v6 + 2872) = 0u;
  *(_OWORD *)(v6 + 2888) = 0u;
  *(_OWORD *)(v6 + 2904) = 0u;
  *(void *)(v6 + 2920) = 0;
  *(unsigned char *)(v6 + 2928) = 13;
  return v6;
}

BOOL sub_1B62FACF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 128);
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_1B62C1A30(a1), (v6 & 1) != 0)) {
    return *(void *)(*(void *)(v2 + 24) + 16 * *(void *)(*(void *)(v3 + 56) + 8 * v5) + 32) == a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B62FAD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1B62FAD9C(v3, a3);
  sub_1B62F648C(a1);
  return v5;
}

uint64_t sub_1B62FAD9C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 8))();
}

uint64_t sub_1B62FADB4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  swift_retain();
  uint64_t v2 = sub_1B62FE6F8(v1);
  char v4 = v3;
  swift_release();
  float v6 = *((float *)&v2 + 1);
  float v5 = *(float *)&v2;
  if (v4)
  {
    float v5 = -3.1416;
    float v6 = 3.1416;
  }
  return sub_1B62FAE38(v5, v6);
}

uint64_t sub_1B62FAE38(float a1, float a2)
{
  return sub_1B62FAE50((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, float, float))sub_1B62FDE3C, a1, a2);
}

uint64_t sub_1B62FAE50(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, float, float), float a2, float a3)
{
  uint64_t v7 = *(void *)v3;
  int v8 = *(_DWORD *)(v3 + 36);
  uint64_t v9 = *(int *)(v3 + 32);
  swift_retain();
  BOOL v10 = v9 == -1 && v8 == 0;
  if (v10 || (v9 & 0x80000000) != 0 || *(void *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v9) {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  BOOL v12 = v8 == -1 || *(_DWORD *)(v11 + 12 * (int)v9 + 8) == v8;
  if (!v12
    || (BOOL v13 = (int *)(v11 + 12 * (int)v9),
        uint64_t v14 = *(void *)(*(void *)(v7 + 136) + 8 * *v13 + 32),
        uint64_t v15 = *((unsigned __int16 *)v13 + 2),
        sub_1B62F6B80(v3),
        LOBYTE(v14) = a1(v14, v15, 656, v3, a2, a3),
        sub_1B62F648C(v3),
        (v14 & 1) == 0))
  {
LABEL_16:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62FB064()
{
  return sub_1B6E33988();
}

uint64_t sub_1B62FB0B0(char a1)
{
  uint64_t v2 = v1;
  if ((a1 & 1) == 0)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    *uint64_t v2 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    v2[1] = v6;
    swift_bridgeObjectRelease();
    v2[2] = v6;
    swift_bridgeObjectRelease();
    v2[3] = v6;
    swift_bridgeObjectRelease();
    v2[4] = v6;
    swift_bridgeObjectRelease();
    v2[5] = v6;
    swift_bridgeObjectRelease();
    v2[6] = v6;
    swift_bridgeObjectRelease();
    v2[7] = v6;
    swift_bridgeObjectRelease();
    v2[8] = v6;
    swift_bridgeObjectRelease();
    v2[9] = v6;
    swift_bridgeObjectRelease();
    v2[10] = v6;
    swift_bridgeObjectRelease();
    v2[11] = v6;
LABEL_39:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B62FB4E4(0, *(void *)(v5 + 16));
  }
  else
  {
    *uint64_t v2 = sub_1B6785A30(0, *(void *)(v5 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v7 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = v2[1];
  if (v7)
  {
    sub_1B68EA7D8(0, *(void *)(v8 + 16));
  }
  else
  {
    v2[1] = sub_1B62FB484(0, *(void *)(v8 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v9 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = v2[2];
  if (v9)
  {
    sub_1B68EA800(0, *(void *)(v10 + 16));
  }
  else
  {
    v2[2] = sub_1B62FB4B4(0, *(void *)(v10 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v11 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = v2[3];
  if (v11)
  {
    sub_1B62FB4E4(0, *(void *)(v12 + 16));
  }
  else
  {
    v2[3] = sub_1B6785A30(0, *(void *)(v12 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v13 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = v2[4];
  if (v13)
  {
    sub_1B68EA7D8(0, *(void *)(v14 + 16));
  }
  else
  {
    v2[4] = sub_1B62FB484(0, *(void *)(v14 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v15 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = v2[5];
  if (v15)
  {
    sub_1B68EA800(0, *(void *)(v16 + 16));
  }
  else
  {
    v2[5] = sub_1B62FB4B4(0, *(void *)(v16 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v17 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = v2[6];
  if (v17)
  {
    sub_1B62FB4E4(0, *(void *)(v18 + 16));
  }
  else
  {
    v2[6] = sub_1B6785A30(0, *(void *)(v18 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = v2[7];
  if (v19)
  {
    sub_1B68EA7D8(0, *(void *)(v20 + 16));
  }
  else
  {
    v2[7] = sub_1B62FB484(0, *(void *)(v20 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v21 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v2[8];
  if (v21)
  {
    sub_1B68EA800(0, *(void *)(v22 + 16));
  }
  else
  {
    v2[8] = sub_1B62FB4B4(0, *(void *)(v22 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v23 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = v2[9];
  if (v23)
  {
    sub_1B62FB4E4(0, *(void *)(v24 + 16));
  }
  else
  {
    v2[9] = sub_1B6785A30(0, *(void *)(v24 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  int v25 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v2[10];
  if (v25)
  {
    sub_1B68EA7D8(0, *(void *)(v26 + 16));
  }
  else
  {
    v2[10] = sub_1B62FB484(0, *(void *)(v26 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = v2[11];
  if ((v27 & 1) == 0)
  {
    v2[11] = sub_1B62FB4B4(0, *(void *)(v28 + 24) >> 1);
    goto LABEL_39;
  }
  sub_1B68EA800(0, *(void *)(v28 + 16));
LABEL_40:
  uint64_t result = sub_1B62FB8F4(a1 & 1);
  *((_DWORD *)v2 + 24) = 0;
  return result;
}

void *sub_1B62FB484(uint64_t a1, uint64_t a2)
{
  return sub_1B62C5A14(a1, a2, (unint64_t *)&qword_1E9DD1E00, (uint64_t)&qword_1E9DCFD50, (uint64_t)&type metadata for TextureArgument, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B62E9854);
}

void *sub_1B62FB4B4(uint64_t a1, uint64_t a2)
{
  return sub_1B62C5A14(a1, a2, (unint64_t *)&qword_1E9DD1DF0, (uint64_t)&unk_1E9DCFD40, (uint64_t)&type metadata for SamplerArgument, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B62E9854);
}

uint64_t sub_1B62FB4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 - a1;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 16);
  uint64_t v8 = v7 - (a2 - a1);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t v6 = sub_1B62E95AC(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  sub_1B62E9854(0, &qword_1EB97E820);
  uint64_t result = swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_10;
  }
  uint64_t v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    uint64_t result = (uint64_t)memmove(&v6[6 * a1 + 4], &v6[6 * a2 + 4], 48 * v12);
    v6[2] -= v5;
LABEL_10:
    *(void *)uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B62FB620(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *v2;
  if (*v2 >> 62 && (swift_bridgeObjectRetain(), sub_1B6E32C18(), swift_bridgeObjectRelease(), unint64_t v5 = *v2, *v2 >> 62))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    unint64_t v5 = *v2;
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = a2 - a1;
  uint64_t v8 = v6 - (a2 - a1);
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_13;
    }
    uint64_t v10 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x1BA9B4590](v10, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v2 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_13:
  int v13 = (void *)(v11 + 32 + 8 * a1);
  sub_1B62FB89C();
  swift_arrayDestroy();
  if (a2 == a1) {
    goto LABEL_19;
  }
  if (!(v5 >> 62))
  {
    uint64_t v14 = *(void *)(v11 + 16) - a2;
    if (v14 >= 0) {
      goto LABEL_16;
    }
LABEL_26:
    sub_1B6E32C88();
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  uint64_t v14 = v17 - a2;
  if (v17 - a2 < 0) {
    goto LABEL_26;
  }
LABEL_16:
  memmove(v13, (const void *)(v11 + 32 + 8 * a2), 8 * v14);
  if (v5 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(v11 + 16);
LABEL_18:
  *(void *)(v11 + 16) = v15 - v7;
LABEL_19:

  return sub_1B6E31C48();
}

unint64_t sub_1B62FB89C()
{
  unint64_t result = qword_1EB9804E0;
  if (!qword_1EB9804E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9804E0);
  }
  return result;
}

uint64_t sub_1B62FB8F4(char a1)
{
  unint64_t v3 = *v1;
  if (a1)
  {
    if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
    {
      char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      unint64_t v3 = *v1;
      if (isUniquelyReferenced_nonNull_bridgeObject)
      {
        if (v3 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_1B6E32C18();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        return sub_1B62FB620(0, v5);
      }
    }
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1B6E32C18();
      sub_1B6E32C18();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
    }
    *unint64_t v1 = sub_1B63577E0(0, v7);
  }
  else
  {
    *unint64_t v1 = MEMORY[0x1E4FBC860];
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B62FBA2C(uint64_t *a1)
{
  uint64_t v1 = (uint64_t)a1;
  uint64_t v2 = *a1;
  uint64_t v3 = a1[4];
  swift_retain();
  uint64_t v4 = 0;
  uint64_t v27 = sub_1B62FE50C(v3, v2);
  long long v5 = *(_OWORD *)(v1 + 104);
  v50[0] = *(_OWORD *)(v1 + 88);
  v50[1] = v5;
  uint64_t v51 = *(void *)(v1 + 120);
  sub_1B62C9DA8(v2, (uint64_t)v50, 0x200000000, v37);
  sub_1B62CA210((uint64_t)v37, (uint64_t)v38, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v38[0]) {
    goto LABEL_24;
  }
  uint64_t v24 = v1;
  long long v45 = v38[0];
  long long v46 = v38[1];
  uint64_t v47 = v39;
  uint64_t v26 = v44;
  if (v44 < 1 || (uint64_t v32 = v41) == 0)
  {
LABEL_23:
    sub_1B632F170(v37);
    uint64_t v1 = v24;
LABEL_24:
    sub_1B62FBE14(v1);
    return swift_release();
  }
  uint64_t v6 = 0;
  uint64_t v31 = v40;
  uint64_t v7 = v43;
  uint64_t v8 = v43[4];
  int v9 = *(unsigned __int8 *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v28 = v43 + 8;
  uint64_t v29 = (uint64_t)(v43 + 6);
  uint64_t v25 = v27 - v44 + 2;
  int v30 = v9;
  while (1)
  {
    uint64_t v10 = (unsigned int *)(v31 + 48 * v6);
    uint64_t v11 = *v10;
    uint64_t v33 = v10[2];
    uint64_t v12 = (uint64_t *)*((void *)v10 + 2);
    uint64_t v13 = *((void *)v10 + 3);
    uint64_t v14 = *((void *)v10 + 5);
    uint64_t v34 = *((void *)v10 + 4);
    uint64_t v35 = v10[1];
    uint64_t v36 = v4;
    if (v9)
    {
      uint64_t v15 = *(os_unfair_lock_s **)(v14 + 376);
      swift_retain();
      os_unfair_lock_lock(v15);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    sub_1B62CA210(v29, (uint64_t)v52, &qword_1EB97DE20);
    uint64_t v16 = v7[4];
    uint64_t v17 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    void v7[6] = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
    v7[7] = v17;
    v28[1] = 0;
    _OWORD v28[2] = 0;
    *uint64_t v28 = 0;
    swift_release();
    uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8, v12, v13, v34, (uint64_t)v7);
    if (v11 == v35)
    {
      uint64_t v4 = v36;
      int v9 = v30;
      goto LABEL_14;
    }
    uint64_t v19 = v27 - v26 + v33;
    uint64_t v4 = v36;
    int v9 = v30;
    if (v19 < 0 || HIDWORD(v19)) {
      break;
    }
    *(_DWORD *)(v18 + 4 * v11) = v19;
    if (v11 + 1 != v35)
    {
      uint64_t v20 = v27 - v26 + v33 + 1;
      if (v20 < 0 || HIDWORD(v20)) {
        break;
      }
      int v21 = (_DWORD *)(v18 + 4 * v11 + 4);
      uint64_t v22 = v35 - v11 - 2;
      while (1)
      {
        *int v21 = v20;
        if (!v22) {
          break;
        }
        if (((v25 + v33) & 0x8000000000000000) == 0)
        {
          ++v21;
          ++v20;
          --v22;
          if (!HIDWORD(v20)) {
            continue;
          }
        }
        goto LABEL_25;
      }
    }
LABEL_14:
    v48[0] = v45;
    v48[1] = v46;
    uint64_t v49 = v47;
    sub_1B6345178(v7, (unsigned __int16 **)v48, (uint64_t)v52);
    sub_1B634507C((char *)v14);
    ecs_stack_allocator_pop_snapshot(v8);
    if (v9)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
    }
    swift_release();
    if (++v6 == v32) {
      goto LABEL_23;
    }
  }
LABEL_25:
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

uint64_t *sub_1B62FBE14(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 64);
  v95[0] = *(_OWORD *)(a1 + 48);
  v95[1] = v3;
  uint64_t v96 = *(void *)(a1 + 80);
  uint64_t v4 = swift_retain();
  sub_1B62C9DA8(v4, (uint64_t)v95, 0x200000000, v79);
  sub_1B62CA210((uint64_t)v79, (uint64_t)&v80, (unint64_t *)&qword_1EB97DC50);
  if (!(void)v80) {
    return (uint64_t *)swift_release();
  }
  uint64_t v58 = a1;
  uint64_t v5 = 0;
  double v6 = *(double *)&v80;
  long long v88 = v80;
  long long v89 = v81;
  uint64_t v73 = v83;
  uint64_t v90 = v82;
  uint64_t v8 = v84;
  uint64_t v7 = v85;
  unsigned __int8 v76 = v86;
  unsigned int v9 = -1;
  unsigned int v78 = -1;
  uint64_t v57 = v87;
  uint64_t v72 = v84;
  uint64_t v59 = v2;
  unsigned int v10 = 0;
  if (v87 < 1 || !v84) {
    goto LABEL_26;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v86[4];
  uint64_t v56 = v85;
  int v13 = *(unsigned __int8 *)(v85 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v93[0] = v80;
  v93[1] = v81;
  uint64_t v94 = v82;
  uint64_t v61 = v86 + 8;
  uint64_t v62 = (uint64_t)(v86 + 6);
  int v64 = v13;
  uint64_t v60 = v12;
  do
  {
    uint64_t v74 = v5;
    uint64_t v14 = (unsigned int *)(v73 + 48 * v11);
    uint64_t v15 = *v14;
    uint64_t v16 = *((void *)v14 + 5);
    uint64_t v68 = *((void *)v14 + 3);
    uint64_t v70 = v14[1];
    uint64_t v66 = *((void *)v14 + 4);
    if (v13)
    {
      uint64_t v17 = (uint64_t *)*((void *)v14 + 2);
      uint64_t v18 = *(os_unfair_lock_s **)(v16 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
      swift_release();
    }
    else
    {
      uint64_t v17 = (uint64_t *)*((void *)v14 + 2);
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v12);
    sub_1B62CA210(v62, (uint64_t)v98, &qword_1EB97DE20);
    uint64_t v19 = v76[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v76[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v76[7] = v20;
    v61[1] = 0;
    v61[2] = 0;
    *uint64_t v61 = 0;
    swift_release();
    uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8, v17, v68, v66, (uint64_t)v76);
    if (v15 == v70)
    {
      uint64_t v5 = v74;
      uint64_t v8 = v72;
      uint64_t v12 = v60;
      int v13 = v64;
      goto LABEL_22;
    }
    uint64_t v22 = v70 - v15;
    uint64_t v8 = v72;
    if ((unint64_t)(v70 - v15) >= 8)
    {
      uint64_t v23 = (v22 & 0xFFFFFFFFFFFFFFF8) + v15;
      uint32x4_t v24 = (uint32x4_t)vdupq_n_s32(v10);
      uint32x4_t v25 = (uint32x4_t)vdupq_n_s32(v9);
      uint64_t v26 = (uint32x4_t *)(v21 + 4 * v15 + 16);
      unint64_t v27 = v22 & 0xFFFFFFFFFFFFFFF8;
      uint32x4_t v28 = v24;
      uint32x4_t v29 = v25;
      uint64_t v12 = v60;
      do
      {
        uint32x4_t v30 = v26[-1];
        uint32x4_t v25 = vminq_u32(v30, v25);
        uint32x4_t v29 = vminq_u32(*v26, v29);
        uint32x4_t v24 = vmaxq_u32(v30, v24);
        uint32x4_t v28 = vmaxq_u32(*v26, v28);
        v26 += 2;
        v27 -= 8;
      }
      while (v27);
      unsigned int v9 = vminvq_u32(vminq_u32(v25, v29));
      unsigned int v10 = vmaxvq_u32(vmaxq_u32(v24, v28));
      uint64_t v5 = v74;
      int v13 = v64;
      if (v22 == (v22 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v23 = v15;
      uint64_t v5 = v74;
      uint64_t v12 = v60;
      int v13 = v64;
    }
    uint64_t v31 = v70 - v23;
    uint64_t v32 = (unsigned int *)(v21 + 4 * v23);
    do
    {
      unsigned int v34 = *v32++;
      unsigned int v33 = v34;
      if (v34 < v9) {
        unsigned int v9 = v33;
      }
      if (v33 > v10) {
        unsigned int v10 = v33;
      }
      --v31;
    }
    while (v31);
LABEL_22:
    sub_1B6345178(v76, (unsigned __int16 **)v93, (uint64_t)v98);
    sub_1B634507C((char *)v16);
    ecs_stack_allocator_pop_snapshot(v12);
    if (v13)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
    }
    swift_release();
    ++v11;
  }
  while (v11 != v8);
  unsigned int v78 = v9;
  uint64_t v7 = v56;
LABEL_26:
  thread_worker_index(&thread_worker_index, v6);
  uint64_t v37 = 12 * v36 + 12;
  swift_retain();
  uint64_t v38 = sub_1B62FC4C8(v37, 4);
  uint64_t v40 = v39;
  swift_release();
  if (v38) {
    uint64_t v41 = 12 * ((v40 - v38) / 12) / 8;
  }
  else {
    uint64_t v41 = 0;
  }
  *(void *)&long long v77 = v38;
  *((void *)&v77 + 1) = v41;
  if (v57 >= 1 && v8)
  {
    uint64_t v42 = 0;
    uint64_t v43 = v76[4];
    int v44 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    int v63 = v44;
    uint64_t v65 = v43;
    do
    {
      uint64_t v75 = v5;
      long long v45 = (unsigned int *)(v73 + 48 * v42);
      uint64_t v46 = *v45;
      uint64_t v47 = (uint64_t *)*((void *)v45 + 2);
      uint64_t v48 = *((void *)v45 + 5);
      uint64_t v69 = *((void *)v45 + 3);
      uint64_t v71 = v45[1];
      uint64_t v67 = *((void *)v45 + 4);
      if (v44)
      {
        uint64_t v49 = *(os_unfair_lock_s **)(v48 + 376);
        swift_retain();
        os_unfair_lock_lock(v49);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v48 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v43);
      sub_1B62CA210((uint64_t)(v76 + 6), (uint64_t)v97, &qword_1EB97DE20);
      uint64_t v50 = v76[4];
      uint64_t v51 = *(void *)(*(void *)(*(void *)(*(void *)(v48 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v76[6] = ecs_stack_allocator_allocate(v50, 48 * v51, 8);
      v76[7] = v51;
      v76[9] = 0;
      v76[10] = 0;
      v76[8] = 0;
      swift_release();
      uint64_t v52 = sub_1B62C9024((uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8, v47, v69, v67, (uint64_t)v76);
      if (v46 == v71)
      {
        uint64_t v53 = v72;
        int v44 = v63;
      }
      else
      {
        unint64_t v54 = ((unint64_t)*(unsigned int *)(v48 + 188) << 32) | 0x8000000000000000;
        *(void *)(v38 + 8 * (*(_DWORD *)(v52 + 4 * v46) - v9)) = v54 | v46;
        uint64_t v53 = v72;
        int v44 = v63;
        if (v46 + 1 != v71)
        {
          if (v46 == -1)
          {
LABEL_44:
            sub_1B6E32BD8();
            __break(1u);
            break;
          }
          while (1)
          {
            uint64_t v55 = v46 + 1;
            *(void *)(v38 + 8 * (*(_DWORD *)(v52 + 4 + 4 * v46) - v9)) = (v46 + 1) | v54;
            if (v71 - 2 == v46) {
              break;
            }
            ++v46;
            if (v55 == 0xFFFFFFFFLL) {
              goto LABEL_44;
            }
          }
        }
      }
      v91[0] = v88;
      v91[1] = v89;
      uint64_t v92 = v90;
      uint64_t v5 = v75;
      sub_1B6345178(v76, (unsigned __int16 **)v91, (uint64_t)v97);
      sub_1B634507C((char *)v48);
      uint64_t v43 = v65;
      ecs_stack_allocator_pop_snapshot(v65);
      if (v44)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 376));
      }
      swift_release();
      ++v42;
    }
    while (v42 != v53);
  }
  sub_1B62FE2F4(*(void *)(v58 + 32), v59, &v78, &v77);
  swift_release();
  return sub_1B632F170(v79);
}

uint64_t sub_1B62FC4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 + v2[4] - 1) & -a2;
  uint64_t v5 = v4 + a1;
  uint64_t v6 = v2[2];
  if (v6)
  {
    if (v2[3] - v6 >= v5)
    {
LABEL_3:
      v2[4] = v5;
      return v6 + v4;
    }
  }
  else if (v5 < 1)
  {
    goto LABEL_3;
  }
  long long v15 = *((_OWORD *)v2 + 1);
  uint64_t v8 = (char *)v2[5];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[5] = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_1B68C0770(0, *((void *)v8 + 2) + 1, 1, v8);
    v2[5] = v8;
  }
  unint64_t v11 = *((void *)v8 + 2);
  unint64_t v10 = *((void *)v8 + 3);
  long long v12 = v15;
  if (v11 >= v10 >> 1)
  {
    uint64_t v14 = sub_1B68C0770(v10 > 1, v11 + 1, 1, v8);
    long long v12 = v15;
    uint64_t v8 = v14;
  }
  *((void *)v8 + 2) = v11 + 1;
  *(_OWORD *)&v8[16 * v11 + 32] = v12;
  v2[5] = v8;
  if (v5) {
    uint64_t v13 = 1 << -(char)__clz(v5 - 1);
  }
  else {
    uint64_t v13 = 1;
  }
  uint64_t result = swift_slowAlloc();
  v2[2] = result;
  v2[3] = result + v13;
  v2[4] = a1;
  return result;
}

uint64_t sub_1B62FC608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X7>, char *a8@<X8>, uint64_t a9, __int16 a10, void *a11)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0)
    {
LABEL_10:
      uint64_t result = swift_release();
      char v19 = 0;
      goto LABEL_15;
    }
  }
  else if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != a2)
  {
    goto LABEL_10;
  }
  uint64_t v18 = *(os_unfair_lock_s **)(a1 + 376);
  swift_retain();
  if (os_unfair_lock_trylock(v18))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(unsigned char *)(a1 + 121) & 1) != 0 || *(void *)(a1 + 240) < *(void *)(a1 + 88))
    {
      swift_retain();
      sub_1B62FC758(a1, a3, a4, a5, a6, a7, a9, a10, a11);
      swift_release();
      char v19 = 1;
    }
    else
    {
      char v19 = 0;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  else
  {
    char v19 = 0;
  }
  uint64_t result = swift_release_n();
LABEL_15:
  *a8 = v19;
  return result;
}

uint64_t sub_1B62FC758(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, __int16 a8, void *a9)
{
  uint64_t v18 = sub_1B62FC834(*a2, a2[1], a2[2]);
  uint64_t v19 = a2[1];
  uint64_t v20 = v17 - v18;
  uint64_t v21 = v19 - *a2;
  if (v17 - v18 < 1)
  {
    if (v21 > 0 || v20 >= v21) {
      goto LABEL_9;
    }
  }
  else if (v21 < 0 || v21 >= (unint64_t)v20)
  {
LABEL_9:
    uint64_t v19 = v20 + *a2;
  }
  *a2 = v19;
  return sub_1B62FD2F0(a1, v18, v17, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1B62FC834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  uint64_t v6 = a1;
  if (*(unsigned char *)(v3 + 121))
  {
    uint64_t v7 = *(void *)(v3 + 88);
    uint64_t v8 = *(void *)(v3 + 240);
    int64_t v9 = a2 - a1;
    if (v7 - v8 < a2 - a1)
    {
      uint64_t v10 = *(void *)(v3 + 256);
      if (v9 >= v7 - v8 + v10)
      {
        uint64_t v14 = *(void *)(v3 + 128);
        if (v14) {
          size_t v64 = *(void *)(v3 + 136) - v14;
        }
        else {
          size_t v64 = 0;
        }
        char v15 = 0;
        uint64_t v61 = v3;
        do
        {
          uint64_t v16 = *(void *)(*(void *)(*(void *)(v4 + 40) + 16) + 32);
          int64_t v17 = *(void *)(v16 + 16);
          if (v17)
          {
            uint64_t v73 = MEMORY[0x1E4FBC860];
            swift_retain();
            sub_1B637ED84(0, v17, 0);
            sub_1B637ED20(0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
            sub_1B637ED20(0, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
            for (uint64_t i = 0; i != v17; ++i)
            {
              long long v67 = *(_OWORD *)(v16 + 16 * i + 32);
              swift_dynamicCast();
              long long v65 = v74;
              uint64_t v19 = v73;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B637ED84(0, *(void *)(v73 + 16) + 1, 1);
                uint64_t v19 = v73;
              }
              unint64_t v21 = *(void *)(v19 + 16);
              unint64_t v20 = *(void *)(v19 + 24);
              if (v21 >= v20 >> 1)
              {
                sub_1B637ED84(v20 > 1, v21 + 1, 1);
                uint64_t v19 = v73;
              }
              *(void *)(v19 + 16) = v21 + 1;
              *(_OWORD *)(v19 + 16 * v21 + 32) = v65;
            }
            swift_release();
            uint64_t v4 = v61;
          }
          else
          {
            uint64_t v19 = MEMORY[0x1E4FBC860];
          }
          v64 *= 2;
          sub_1B62CEB80(v19, v64, 0, (*(unsigned char *)(v4 + 184) & 1) == 0, (uint64_t)&v74);
          long long v22 = v74;
          uint64_t v23 = v75;
          long long v24 = v76;
          long long v25 = *(_OWORD *)v77;
          uint64_t v66 = *(void *)&v77[16];
          char v62 = v78;
          if (v15)
          {
            swift_release();
            swift_release();
            swift_release();
          }
          char v15 = 1;
        }
        while ((void)v25 - *(void *)(v4 + 240) < v9);
        uint64_t v56 = *(void *)(v4 + 16);
        task_t v26 = *(_DWORD *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity);
        swift_retain();
        swift_retain();
        swift_retain();
        vfx_allocate_memory_entry(v64, 0x40uLL, v26, (uint64_t)&v74);
        uint64_t v27 = v74;
        char v57 = BYTE4(v75);
        int v58 = v75;
        uint64_t v63 = *((void *)&v74 + 1);
        uint64_t v28 = v74 + *((void *)&v74 + 1);
        if (!(void)v74) {
          uint64_t v28 = 0;
        }
        uint64_t v55 = v28;
        uint64_t v29 = *(void *)(v61 + 56);
        uint64_t v30 = *(void *)(v61 + 64);
        uint64_t v31 = *(void *)(v61 + 104);
        char v32 = *(unsigned char *)(v61 + 112);
        *(void *)&long long v74 = *(void *)(v61 + 48);
        *((void *)&v74 + 1) = v29;
        uint64_t v75 = v30;
        long long v76 = *(_OWORD *)(v61 + 72);
        *(_OWORD *)long long v77 = *(_OWORD *)(v61 + 88);
        *(void *)&v77[16] = v31;
        char v78 = v32;
        uint64_t v53 = *(void *)(v61 + 256);
        uint64_t v54 = *(void *)(v61 + 128);
        uint64_t v52 = *(void *)(v61 + 240);
        long long v67 = v22;
        uint64_t v68 = v23;
        long long v69 = v24;
        long long v70 = v25;
        uint64_t v71 = v66;
        char v72 = v62;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B6D66060(v54, v53, v52, 0, v27, (uint64_t)&v67);
        swift_release();
        swift_release();
        uint64_t v4 = v61;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (*(void *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
          vfx_counters.add(_:_:)(*(_DWORD *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 64), (*(void *)(v61 + 240) - *(void *)(v61 + 256)) * *(void *)(v61 + 72));
        }
        vfx_deallocate_memory_entry(v61 + 144);
        *(void *)(v61 + 144) = v27;
        *(void *)(v61 + 152) = v63;
        *(_DWORD *)(v61 + 160) = v58;
        *(unsigned char *)(v61 + 164) = v57;
        *(void *)(v61 + 128) = v27;
        *(void *)(v61 + 136) = v55;
        *(_OWORD *)(v61 + 48) = v22;
        *(void *)(v61 + 64) = v23;
        *(_OWORD *)(v61 + 72) = v24;
        *(_OWORD *)(v61 + 88) = v25;
        *(void *)(v61 + 104) = v66;
        *(unsigned char *)(v61 + 112) = v62;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v6 = a1;
        uint64_t v5 = a3;
      }
      else
      {
        uint64_t v11 = *(void *)(v3 + 64);
        char v12 = *(unsigned char *)(v3 + 112);
        long long v74 = *(_OWORD *)(v3 + 48);
        uint64_t v75 = v11;
        long long v76 = *(_OWORD *)(v3 + 72);
        *(void *)long long v77 = v7;
        *(_OWORD *)&_OWORD v77[8] = *(_OWORD *)(v3 + 96);
        char v78 = v12;
        sub_1B6D65F50(*(void *)(v3 + 128), v10, v8, 0);
        uint64_t v13 = *(void *)(v3 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
        if (*(void *)v13) {
          vfx_counters.add(_:_:)(*(_DWORD *)(v13 + 64), (*(void *)(v3 + 240) - *(void *)(v3 + 256)) * *(void *)(v3 + 72));
        }
      }
      unint64_t v33 = *(void *)(v4 + 256);
      *(void *)(v4 + 256) = 0;
      *(void *)(v4 + 232) -= v33;
      int64x2_t v34 = vsubq_s64(*(int64x2_t *)(v4 + 240), vdupq_n_s64(v33));
      *(int64x2_t *)(v4 + 240) = v34;
      uint64_t v8 = v34.i64[0];
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + 240);
    int64_t v9 = a2 - a1;
  }
  uint64_t v35 = *(void *)(v4 + 88);
  if (v9 >= v35 - v8) {
    unint64_t v36 = v35 - v8;
  }
  else {
    unint64_t v36 = v9;
  }
  if (*(unsigned char *)(v4 + 184))
  {
    uint64_t v37 = v36 + v8;
  }
  else
  {
    uint64_t v37 = v8;
    if (v36)
    {
      uint64_t v38 = *(void *)(v4 + 168);
      uint64_t v37 = v8;
      uint64_t v39 = v6;
      if (v36 < 0xC) {
        goto LABEL_40;
      }
      uint64_t v40 = 4 * v6 + v5;
      uint64_t v37 = v8;
      uint64_t v39 = v6;
      if ((unint64_t)(v38 + 4 * v8 - v40) < 0x20) {
        goto LABEL_40;
      }
      uint64_t v37 = v8 + (v36 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + v6;
      uint64_t v41 = (_OWORD *)(4 * v8 + v38 + 16);
      uint64_t v42 = (long long *)(v40 + 16);
      unint64_t v43 = v36 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        long long v44 = *v42;
        *(v41 - 1) = *(v42 - 1);
        *uint64_t v41 = v44;
        v41 += 2;
        v42 += 2;
        v43 -= 8;
      }
      while (v43);
      if (v36 != (v36 & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_40:
        uint64_t v45 = v6 + v36 - v39;
        uint64_t v46 = (int *)(v5 + 4 * v39);
        do
        {
          int v47 = *v46++;
          *(_DWORD *)(v38 + 4 * v37++) = v47;
          --v45;
        }
        while (v45);
      }
    }
  }
  *(void *)(v4 + 240) = v37;
  uint64_t v48 = *(void *)(v4 + 64);
  char v49 = *(unsigned char *)(v4 + 112);
  long long v74 = *(_OWORD *)(v4 + 48);
  uint64_t v75 = v48;
  long long v76 = *(_OWORD *)(v4 + 72);
  *(void *)long long v77 = v35;
  *(_OWORD *)&_OWORD v77[8] = *(_OWORD *)(v4 + 96);
  char v78 = v49;
  sub_1B62FCEB0(*(void *)(v4 + 128), v8, v37);
  uint64_t v50 = *(void *)(v4 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  if (*(void *)v50) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v50 + 72), *(void *)(v4 + 72) * (v37 - v8));
  }
  ++*(_DWORD *)(v4 + 116);
  return v8;
}

uint64_t sub_1B62FCEB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(v8 + 32);
    swift_retain();
    do
    {
      sub_1B62FD0AC(v6 + v10[3], a2, a3, *v10, v10[1]);
      v10 += 5;
      --v9;
    }
    while (v9);
    uint64_t result = swift_release();
  }
  uint64_t v11 = *(void *)(v7 + 16);
  if (v11)
  {
    char v12 = (uint64_t *)(v7 + 32);
    swift_retain();
    do
    {
      sub_1B62FCFA0(v6 + v12[3], a2, a3, *v12);
      v12 += 5;
      --v11;
    }
    while (v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62FCFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)(v8 + 8) + 8))(v9);
  sub_1B6E32458();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a4);
}

uint64_t sub_1B62FD0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = v12 + *(void *)(v15 + 72) * v16;
  (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 8))(v19);
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = v6;
  uint64_t v27 = v17;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = v14;
  sub_1B62FD7BC((uint64_t)v14, (uint64_t)sub_1B62FD944, (uint64_t)v23, a4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC278], v20);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, a4);
}

void sub_1B62FD23C(_OWORD *a1@<X8>)
{
  *(double *)&long long v2 = sub_1B62FD278();
  *a1 = xmmword_1B6E4F370;
  a1[1] = v2;
}

double sub_1B62FD26C()
{
  return 0.0;
}

double sub_1B62FD278()
{
  return 0.0000305175853;
}

uint64_t sub_1B62FD284@<X0>(void *a1@<X8>)
{
  if (qword_1EB97D7B8 != -1) {
    swift_once();
  }
  *a1 = qword_1EB9979D0;

  return swift_retain();
}

uint64_t sub_1B62FD2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, __int16 a9, void *a10)
{
  char v17 = *(unsigned char *)(a4 + 208);
  swift_retain();
  if ((v17 & 1) == 0 && a2 != a3)
  {
    uint64_t v18 = *a7;
    uint64_t v19 = a2;
    do
    {
      int v20 = *(_DWORD *)(a1 + 188);
      uint64_t v21 = *(void *)(*(void *)(a8 + 16) + OBJC_IVAR____TtC3VFX13EntityManager__entries)
          + 12 * *(int *)(a5 + 4 * v18);
      *(_WORD *)(v21 + 4) = v19;
      *(_DWORD *)uint64_t v21 = v20;
      *(_WORD *)(v21 + 6) = a9;
      uint64_t v18 = *a7 + 1;
      *a7 = v18;
      ++v19;
    }
    while (a3 != v19);
  }
  if (*(unsigned char *)(a4 + 212) == 1)
  {
    uint64_t v22 = *(void *)(a1 + 192);
    if (v22) {
      sub_1B6BFB3E4(a2, a3, 3, 0, 3, v22, *(void *)(a1 + 200), *(void *)(a1 + 208));
    }
    sub_1B63658B4(*(void *)(a1 + 40), a1, a2, a3);
  }
  uint64_t v23 = a10[2];
  uint64_t v24 = (uint64_t *)(*a10 + 24 * v23);
  *uint64_t v24 = a1;
  v24[1] = a2;
  _OWORD v24[2] = a3;
  a10[2] = v23 + 1;

  return swift_release();
}

uint64_t sub_1B62FD444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v43 = a8;
  uint64_t v35 = a6;
  v48[5] = *MEMORY[0x1E4F143B8];
  uint64_t v37 = *(void (***)(uint64_t, uint64_t))(a7 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  char v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v13 * v12;
  if (v13 + v13 * v12 >= v14) {
    uint64_t v19 = v14;
  }
  else {
    uint64_t v19 = v13 + v13 * v12;
  }
  uint64_t v20 = v15[5];
  uint64_t v21 = v15[6];
  sub_1B62C14BC(v15 + 2, v20);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t))(v21 + 24))(v48, *(void *)(*(void *)(a4 + 64) + 8 * v18 + 32), v20, v21);
  uint64_t v22 = v37;
  uint64_t v42 = v17;
  sub_1B62C1550((uint64_t)v48, (uint64_t)v47);
  uint64_t v23 = sub_1B62FDBC8((uint64_t)v47);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v47);
  uint64_t v24 = v35;
  if (v18 != v19)
  {
    uint64_t v38 = a9;
    uint64_t v40 = v23 + 72;
    uint64_t v39 = &v46;
    uint64_t v37 = v22 + 1;
    uint64_t v36 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v41 = a5;
    do
    {
      if (*a5) {
        break;
      }
      uint64_t v25 = v24;
      sub_1B62C1550(v40, (uint64_t)v44);
      uint64_t v26 = sub_1B62C0DB8();
      uint64_t v27 = *(void *)(v23 + 48);
      uint64_t v28 = (uint64_t)v39;
      sub_1B62C0DFC((uint64_t)v44, (uint64_t)v39);
      v45[0] = v26;
      v45[1] = v27;
      swift_bridgeObjectRetain();
      sub_1B62C0DD4((uint64_t)v44);
      uint64_t v29 = (uint64_t)v42;
      uint64_t v30 = v43;
      uint64_t v31 = sub_1B62C11CC(v45[0], v28, v45[0], a7, &type metadata for _BinaryDecoder.SingleValueStore, a7, &off_1F0F679D0, v43);
      MEMORY[0x1F4188790](v31, v32);
      *(&v35 - 6) = a7;
      *(&v35 - 5) = v30;
      *(&v35 - 4) = v38;
      *(&v35 - 3) = v25;
      uint64_t v24 = v25;
      *(&v35 - 2) = v18;
      sub_1B62FD7BC(v29, (uint64_t)sub_1B62FD8CC, (uint64_t)(&v35 - 8), a7, MEMORY[0x1E4FBC248], v36, MEMORY[0x1E4FBC278], v33);
      (*v37)(v29, a7);
      sub_1B62FD898((uint64_t)v45);
      ++v18;
      a5 = v41;
    }
    while (v19 != v18);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v48);
  return swift_release();
}

uint64_t sub_1B62FD7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790]();
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_1B62FD898(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B62FD8CC()
{
  return sub_1B6E32448();
}

uint64_t destroy for VideoCapture()
{
  return swift_bridgeObjectRelease();
}

void sub_1B62FD944(void *a1)
{
  sub_1B62FD97C(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16));
}

void sub_1B62FD97C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a7 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = *(void *)(v9 + 72);
  if (v10 == 16)
  {
    if (v11 == 16)
    {
      uint64_t v15 = a5 - a4;
      uint64_t v16 = sub_1B62CD7F8(a7);
      memset_pattern16_nocache(a3, a1, v16 * v15);
      return;
    }
  }
  else if (v10 == 8)
  {
    if (v11 == 8)
    {
      uint64_t v17 = a5 - a4;
      uint64_t v18 = sub_1B62CD7F8(a7);
      memset_pattern8_nocache((uint64_t)a3, (uint64_t *)a1, v18 * v17);
      return;
    }
  }
  else if (v10 == 4 && v11 == 4)
  {
    uint64_t v13 = a5 - a4;
    uint64_t v14 = sub_1B62CD7F8(a7);
    memset_pattern4_nocache((uint64_t)a3, (int *)a1, v14 * v13);
    return;
  }
  sub_1B6E32458();
}

void *sub_1B62FDA80(void *__src)
{
  return memcpy(*(void **)(v1 + 32), __src, *(void *)(v1 + 40));
}

uint64_t sub_1B62FDA8C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B62FDAB0(a1, a2);
}

uint64_t sub_1B62FDAB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = v2[3];
  uint64_t v5 = v2[4] + a1;
  uint64_t v6 = v2[2];
  switch(v4 >> 62)
  {
    case 1uLL:
      if (v6 >> 32 >= v5) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 2uLL:
      if (*(void *)(v6 + 24) >= v5) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 3uLL:
      if (v5 > 0) {
        goto LABEL_7;
      }
      goto LABEL_5;
    default:
      if (BYTE6(v4) >= v5)
      {
LABEL_5:
        uint64_t v7 = type metadata accessor for _BinaryDecoder.DataStream();
        uint64_t v8 = (void *)swift_allocObject();
        _OWORD v8[2] = v6;
        v8[3] = v4;
        v8[4] = v5;
        a2[3] = v7;
        a2[4] = &off_1F0F67898;
        *a2 = v8;
        return sub_1B62FFBB0(v6, v4);
      }
      else
      {
LABEL_7:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v10 = xmmword_1B6E50D30;
        *(unsigned char *)(v10 + 16) = 6;
        return swift_willThrow();
      }
  }
}

uint64_t sub_1B62FDBC8(uint64_t a1)
{
  long long v2 = v1;
  uint64_t v4 = v1[7];
  uint64_t v21 = v4;
  uint64_t v5 = (void (*)(uint64_t *))v1[4];
  uint64_t v6 = v1[5];
  swift_bridgeObjectRetain();
  if (v5)
  {
    v5(&v21);
    uint64_t v4 = v21;
  }
  uint64_t v7 = type metadata accessor for _BinaryDecoder();
  sub_1B62C1550(a1, (uint64_t)v18);
  uint64_t v8 = v2[2];
  char v9 = *((unsigned char *)v2 + 24);
  uint64_t v10 = v19;
  uint64_t v11 = v20;
  uint64_t v12 = sub_1B62C550C((uint64_t)v18, v19);
  MEMORY[0x1F4188790](v12, v12);
  uint64_t v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v15 + 16))(v14);
  uint64_t v16 = sub_1B62FDD58((uint64_t)v14, v4, v8, v9, (uint64_t)v5, v6, v7, v10, v11);
  swift_retain();
  sub_1B62C6A60((uint64_t)v5);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);
  return v16;
}

uint64_t sub_1B62FDD58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = a8;
  uint64_t v22 = a9;
  uint64_t v16 = sub_1B62C12C4((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v16, a1, a8);
  type metadata accessor for _BinaryDecoder();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(v17 + 48) = MEMORY[0x1E4FBC860];
  *(void *)(v17 + 64) = 0;
  *(void *)(v17 + 112) = v18;
  sub_1B62C15C4(&v20, v17 + 72);
  *(void *)(v17 + 56) = a2;
  *(void *)(v17 + 16) = a3;
  *(unsigned char *)(v17 + 24) = a4;
  *(void *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = a6;
  return v17;
}

uint64_t sub_1B62FDE3C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  return sub_1B62FDE6C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1B62FDEE0) & 1;
}

uint64_t sub_1B62FDE6C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  a5(*(void *)(a1 + 128) + *i + a2 * a3, a4);
  return 1;
}

uint64_t *sub_1B62FDEE0(void *a1, uint64_t a2, double a3, float a4)
{
  uint64_t v5 = v4;
  long long v7 = *(_OWORD *)(a2 + 104);
  v63[0] = *(_OWORD *)(a2 + 88);
  v63[1] = v7;
  uint64_t v64 = *(void *)(a2 + 120);
  uint64_t v8 = swift_retain();
  sub_1B62C9DA8(v8, (uint64_t)v63, 0x200000000, v50);
  swift_release();
  uint64_t result = (uint64_t *)sub_1B62CA5FC((uint64_t)v50, (uint64_t)v51, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v51[0])
  {
    long long v58 = v51[0];
    long long v59 = v51[1];
    uint64_t v60 = v52;
    if (v57 >= 1)
    {
      uint64_t v45 = v54;
      if (v54)
      {
        uint64_t v10 = 0;
        uint64_t v44 = v53;
        uint64_t v11 = v56[4];
        int v12 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v42 = (uint64_t)(v56 + 6);
        uint64_t v66 = v56;
        uint64_t v41 = v56 + 8;
        int32x4_t v39 = vdupq_lane_s32(*(int32x2_t *)&a3, 0);
        int v43 = v12;
        do
        {
          uint64_t v13 = (unsigned int *)(v44 + 48 * v10);
          uint64_t v47 = *v13;
          uint64_t v48 = v13[1];
          uint64_t v49 = v5;
          uint64_t v14 = (uint64_t *)*((void *)v13 + 2);
          uint64_t v15 = *((void *)v13 + 3);
          uint64_t v16 = *((void *)v13 + 4);
          uint64_t v17 = *((void *)v13 + 5);
          if (v12)
          {
            uint64_t v18 = *(os_unfair_lock_s **)(v17 + 376);
            swift_retain();
            os_unfair_lock_lock(v18);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v11);
          sub_1B62CA5FC(v42, (uint64_t)v65, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v19 = v66;
          uint64_t v20 = v66[4];
          uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          void v19[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
          v19[7] = v21;
          v41[1] = 0;
          v41[2] = 0;
          *uint64_t v41 = 0;
          swift_release();
          uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for ParticleAngle, (uint64_t)&off_1F0F608D0, v14, v15, v16, (uint64_t)v19);
          if (v22)
          {
            if (*(float *)&a3 == a4)
            {
              if (v47 == v48) {
                goto LABEL_17;
              }
              uint64_t v23 = v48 - v47;
              int v12 = v43;
              if ((unint64_t)(v48 - v47) < 8)
              {
                uint64_t v24 = v47;
                uint64_t v25 = v49;
LABEL_26:
                uint64_t v37 = v48 - v24;
                uint64_t v38 = (_DWORD *)(v22 + 4 * v24);
                do
                {
                  *v38++ = LODWORD(a3);
                  --v37;
                }
                while (v37);
                goto LABEL_28;
              }
              uint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + v47;
              uint64_t v35 = (int32x4_t *)(v22 + 4 * v47 + 16);
              unint64_t v36 = v23 & 0xFFFFFFFFFFFFFFF8;
              do
              {
                v35[-1] = v39;
                *uint64_t v35 = v39;
                v35 += 2;
                v36 -= 8;
              }
              while (v36);
              uint64_t v25 = v49;
              if (v23 != (v23 & 0xFFFFFFFFFFFFFFF8)) {
                goto LABEL_26;
              }
            }
            else
            {
              if (v47 == v48)
              {
LABEL_17:
                uint64_t v25 = v49;
                int v12 = v43;
                goto LABEL_28;
              }
              uint64_t v26 = a1[3];
              uint64_t v27 = a1[4];
              uint64_t v28 = v48 - v47;
              uint64_t v29 = (float *)(v22 + 4 * v47);
              uint64_t v30 = a1[1];
              uint64_t v31 = a1[2];
              int v12 = v43;
              do
              {
                int v32 = 9 * ((((unint64_t)(5 * v31) >> 32) >> 25) | (640 * v31));
                uint64_t v33 = v30 ^ v26;
                uint64_t v34 = v31 ^ v27;
                v26 ^= v30 ^ (v31 << 17);
                v31 ^= v33;
                v30 ^= v34;
                uint64_t v27 = __ROR8__(v34, 19);
                *v29++ = (float)((float)(a4 - *(float *)&a3)
                               * (float)((float)(*(void *)&v32 & 0xFFFFFFLL) * 0.000000059605))
                       + *(float *)&a3;
                --v28;
              }
              while (v28);
              a1[1] = v30;
              a1[2] = v31;
              a1[3] = v26;
              a1[4] = v27;
              uint64_t v25 = v49;
            }
          }
          else if (*(float *)&a3 == a4)
          {
            uint64_t v25 = v49;
            int v12 = v43;
          }
          else
          {
            uint64_t v25 = v49;
            int v12 = v43;
            if (v47 != v48)
            {
              uint64_t result = (uint64_t *)sub_1B6D27950();
              __break(1u);
              return result;
            }
          }
LABEL_28:
          v61[0] = v58;
          v61[1] = v59;
          uint64_t v62 = v60;
          sub_1B6345178(v66, (unsigned __int16 **)v61, (uint64_t)v65);
          uint64_t v5 = v25;
          sub_1B634507C((char *)v17);
          ecs_stack_allocator_pop_snapshot(v11);
          if (v12)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
          }
          swift_release();
          ++v10;
        }
        while (v10 != v45);
      }
    }
    return sub_1B632F170(v50);
  }
  return result;
}

uint64_t sub_1B62FE2F4(uint64_t a1, uint64_t a2, unsigned int *a3, long long *a4)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B62FE4A4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 656, a3, a4), !v4)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B62FE4A4(uint64_t a1, __int16 a2, uint64_t a3, unsigned int *a4, long long *a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(a1 + 128) + *i + a2 * a3;
  long long v10 = *a5;
  *(void *)(v9 + 136) = *a4;
  *(_OWORD *)(v9 + 144) = v10;
  *(unsigned char *)(v9 + 160) = 0;
  return 1;
}

uint64_t sub_1B62FE50C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v3 + 12 * (int)a1 + 8) != HIDWORD(a1))
  {
LABEL_13:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  uint64_t v4 = (int *)(v3 + 12 * (int)a1);
  uint64_t v5 = *(void *)(*(void *)(a2 + 136) + 8 * *v4 + 32);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
LABEL_10:
    if (v2) {
      return 0;
    }
    goto LABEL_13;
  }
  int v8 = *((__int16 *)v4 + 2);
  uint64_t v9 = (void *)(v6 + 56);
  while ((ValueMetadata *)*(v9 - 3) != &type metadata for EmitterRuntime)
  {
    v9 += 5;
    if (!--v7) {
      goto LABEL_10;
    }
  }
  return *(void *)(*(void *)(v5 + 128) + *v9 + 656 * v8 + 104);
}

uint64_t sub_1B62FE6F8(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleAngleInit; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B62FE7D8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1B62FE7FC(uint64_t *a1)
{
  uint64_t v31 = a1;
  sub_1B62BF900(0, (unint64_t *)&qword_1EB9806A0, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_1B6E32B48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v30 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v29 - v15;
  sub_1B6E32B38();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v17(v8, 1, v9);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v16, v8, v9);
  uint64_t v19 = *v31;
  unint64_t v20 = sub_1B62FECE4((uint64_t)v16);
  sub_1B62CAAD8(*(void *)(v19 + 56) + 32 * v20, (uint64_t)v32);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  sub_1B62B57A8(v32, &v33);
  uint64_t v21 = type metadata accessor for SerializationContext();
  swift_dynamicCast();
  uint64_t v22 = sub_1B62FF32C();
  swift_release();
  sub_1B6E32B38();
  v17(v4, 1, v9);
  uint64_t v23 = (uint64_t)v30;
  v18(v30, v4, v9);
  uint64_t v34 = v21;
  *(void *)&long long v33 = v22;
  swift_retain();
  sub_1B62FF1F0((uint64_t)&v33, v23);
  uint64_t v24 = (uint64_t *)thread_serialization_context();
  uint64_t v25 = *v24;
  *uint64_t v24 = v22;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  uint64_t v27 = *(void *)(v22 + 88);
  *(void *)(v22 + 88) = sub_1B629A66C;
  *(void *)(v22 + 96) = v26;
  sub_1B62C6A50(v27);
  return swift_release();
}

_OWORD *sub_1B62FEB18(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1B6E32B48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v14 = sub_1B62FECE4(a2);
  char v16 = v15;
  uint64_t v17 = v13[3];
  uint64_t v18 = v13[2] + ((v15 & 1) == 0);
  if (v17 >= v18 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v19 = *v4;
    if (v16) {
      goto LABEL_7;
    }
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
    return sub_1B6AD78B4(v14, (uint64_t)v12, a1, v19);
  }
  if (v17 >= v18 && (a3 & 1) == 0)
  {
    sub_1B62FEEE0();
    goto LABEL_6;
  }
  sub_1B6AB9C38(v18, a3 & 1);
  unint64_t v22 = sub_1B62FECE4(a2);
  if ((v16 & 1) != (v23 & 1))
  {
    uint64_t result = (_OWORD *)sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v14 = v22;
  uint64_t v19 = *v4;
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_7:
  unint64_t v20 = (_OWORD *)(v19[7] + 32 * v14);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v20);

  return sub_1B62B57A8(a1, v20);
}

unint64_t sub_1B62FECE4(uint64_t a1)
{
  sub_1B6E32B48();
  uint64_t v2 = sub_1B6E315A8();

  return sub_1B62FED48(a1, v2);
}

unint64_t sub_1B62FED48(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v4 = sub_1B6E32B48();
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v21 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = *(void *)(v12 + 56);
    char v16 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      uint64_t v17 = v12;
      v13(v8, *(void *)(v23 + 48) + v15 * v10, v4);
      char v18 = sub_1B6E31708();
      (*v16)(v8, v4);
      if (v18) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      uint64_t v12 = v17;
    }
    while (((*(void *)(v21 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1B62FEEE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E32B48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62FF184();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_26;
  }
  unint64_t v10 = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  uint64_t v26 = v1;
  uint64_t v27 = (const void *)(v7 + 64);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11) {
    memmove(v10, v27, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  int64_t v25 = v28 - 4;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v21 = v13 + 1;
    if (v13 + 1 >= v28) {
      goto LABEL_24;
    }
    unint64_t v22 = *((void *)v27 + v21);
    if (!v22)
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v28) {
        goto LABEL_24;
      }
      unint64_t v22 = *((void *)v27 + v21);
      if (!v22)
      {
        uint64_t v21 = v13 + 3;
        if (v13 + 3 >= v28) {
          goto LABEL_24;
        }
        unint64_t v22 = *((void *)v27 + v21);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v13 = v21;
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    uint64_t v20 = 32 * v18;
    sub_1B62CAAD8(*(void *)(v7 + 56) + v20, (uint64_t)v30);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v19, v6, v2);
    sub_1B62B57A8(v30, (_OWORD *)(*(void *)(v9 + 56) + v20));
  }
  while (v25 != v13)
  {
    unint64_t v22 = *(void *)(v7 + 8 * v13++ + 96);
    if (v22)
    {
      uint64_t v21 = v13 + 3;
      goto LABEL_23;
    }
  }
LABEL_24:
  uint64_t result = swift_release();
  uint64_t v1 = v26;
LABEL_26:
  *uint64_t v1 = v9;
  return result;
}

void sub_1B62FF184()
{
  if (!qword_1EB980820)
  {
    sub_1B6E32B48();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980820);
    }
  }
}

uint64_t sub_1B62FF1F0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1B62B57A8((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B62FEB18(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1B6E32B48();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1B6CE2154(a1, (unint64_t *)&qword_1EB980F60);
    sub_1B67E3204(a2, v9);
    uint64_t v7 = sub_1B6E32B48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1B6CE2154((uint64_t)v9, (unint64_t *)&qword_1EB980F60);
  }
}

uint64_t sub_1B62FF32C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(unsigned int *)(v0 + 32);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 36);
  type metadata accessor for SerializationContext();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = swift_retain();
  sub_1B62FF47C(v6, v2, 0, v3 | ((unint64_t)v4 << 32));
  *(unsigned char *)(v5 + 80) = *(unsigned char *)(v1 + 80);
  *(unsigned char *)(v5 + 81) = *(unsigned char *)(v1 + 81);
  *(unsigned char *)(v5 + 82) = *(unsigned char *)(v1 + 82);
  *(unsigned char *)(v5 + 83) = *(unsigned char *)(v1 + 83);
  *(unsigned char *)(v5 + 84) = *(unsigned char *)(v1 + 84);
  *(unsigned char *)(v5 + 85) = *(unsigned char *)(v1 + 85);
  *(unsigned char *)(v5 + 86) = *(unsigned char *)(v1 + 86);
  *(void *)(v5 + 104) = *(void *)(v1 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 112) = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 120) = *(void *)(v1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 128) = *(void *)(v1 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 136) = *(void *)(v1 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t type metadata accessor for SerializationContext()
{
  return self;
}

uint64_t sub_1B62FF47C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 48) = 1;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = v8;
  *(_DWORD *)(v4 + 80) = 256;
  *(_WORD *)(v4 + 84) = 256;
  *(unsigned char *)(v4 + 86) = 1;
  *(void *)(v4 + 88) = 0;
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 128) = v8;
  *(void *)(v4 + 136) = v8;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 112) = sub_1B62FF544(v8);
  *(void *)(v4 + 120) = sub_1B62FF544(v8);
  uint64_t v9 = sub_1B62FF608(v8);
  swift_release();
  *(void *)(v4 + 104) = v9;
  uint64_t v10 = 2048;
  if ((a3 & 1) == 0) {
    uint64_t v10 = a2;
  }
  *(void *)(v4 + 24) = v10;
  *(_DWORD *)(v4 + 32) = a4;
  *(unsigned char *)(v4 + 36) = BYTE4(a4) & 1;
  return v4;
}

void *sub_1B62FF544(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FB298();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    unint64_t v7 = sub_1B62BE38C(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    uint64_t v8 = 8 * v7;
    *(void *)(v3[6] + v8) = v5;
    *(void *)(v3[7] + v8) = v6;
    ++v3[2];
    v4 += 2;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B62FF608(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F87C4();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (void *)(a1 + 36);
  do
  {
    unsigned int v5 = *((_DWORD *)v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v4 = (void *)((char *)v4 + 12);
    unint64_t v7 = sub_1B62C5AB0(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(_DWORD *)(v3[6] + 4 * v7) = v5;
    *(void *)(v3[7] + 8 * v7) = v6;
    ++v3[2];
    --v1;
  }
  while (v1);
  return v3;
}

uint64_t sub_1B62FF6C8(uint64_t result, void *a2)
{
  if (*(unsigned char *)(result + 24) == 1)
  {
    uint64_t v3 = result;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v3 + 96);
    uint64_t v7 = *(void *)(v3 + 88);
    uint64_t v8 = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6E316E8();
    sub_1B638491C();
    sub_1B6E31A38();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E328C8();
    sub_1B6E31948();
    objc_msgSend(a2, sel_length);
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
    int v6 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v7 = 0;
    swift_retain();
    sub_1B6B33E34(v6, &v7, v5, v8);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B62FF960(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 56));
  unint64_t v3 = *(void *)(v1 + 72);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1B63947E4();
    uint64_t v8 = sub_1B63846FC(a1);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B6E32C18();
  if (!v4) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v5 = v4 + 3;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      int v6 = (void *)MEMORY[0x1BA9B4580](v5 - 4, v3);
    }
    else
    {
      int v6 = *(void **)(v3 + 8 * v5);
      swift_unknownObjectRetain();
    }
    id v7 = objc_msgSend(v6, sel_length);
    swift_unknownObjectRelease();
    if ((uint64_t)v7 >= a1) {
      break;
    }
    if (--v5 == 3) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1B62FFAD8(v5 - 4);
LABEL_11:
  uint64_t v9 = v8;
  uint64_t v10 = swift_unknownObjectRetain();
  MEMORY[0x1BA9B3870](v10);
  if (*(void *)((*(void *)(v1 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  sub_1B6E31C48();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 56));
  return v9;
}

uint64_t sub_1B62FFAD8(uint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_1B6C167C0(v3);
    *uint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v5 + 16) - 1;
  uint64_t v7 = v6 - a1;
  if (v6 - a1 < 0)
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    uint64_t v8 = v5 + 8 * a1;
    uint64_t v9 = *(void *)(v8 + 32);
    memmove((void *)(v8 + 32), (const void *)(v8 + 40), 8 * v7);
    *(void *)(v5 + 16) = v6;
    sub_1B6E31C48();
    return v9;
  }
  return result;
}

uint64_t sub_1B62FFBB0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

unint64_t sub_1B62FFC08(unsigned __int8 a1)
{
  sub_1B6E33918();
  sub_1B6E33938();
  uint64_t v2 = sub_1B6E33988();
  return sub_1B6383F9C(a1, v2);
}

uint64_t sub_1B62FFC70()
{
  return sub_1B62E9F00((uint64_t (*)(void, void, uint64_t))sub_1B62EE4C4);
}

uint64_t type metadata accessor for RenderPipelineFactory()
{
  return self;
}

uint64_t sub_1B62FFCAC(__int16 a1)
{
  *(void *)(v1 + 16) = 3;
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 2;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = 15;
  *(_WORD *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = sub_1B6CCBF58;
  *(void *)(v1 + 96) = 0;
  if (qword_1EB97EB70 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997C30;
  uint64_t v4 = *(void *)algn_1EB997C38;
  uint64_t v5 = qword_1EB997C40;
  uint64_t v6 = qword_1EB997C48;
  long long v7 = xmmword_1EB997C50;
  unsigned __int8 v8 = byte_1EB997C60;
  *(void *)(v1 + 104) = qword_1EB997C30;
  *(void *)(v1 + 112) = v4;
  *(void *)(v1 + 120) = v5;
  *(void *)(v1 + 128) = v6;
  *(_OWORD *)(v1 + 136) = v7;
  *(unsigned char *)(v1 + 152) = v8;
  *(void *)(v1 + 160) = v3;
  *(void *)(v1 + 168) = v4;
  *(void *)(v1 + 176) = v5;
  *(void *)(v1 + 184) = v6;
  *(_OWORD *)(v1 + 192) = v7;
  *(_WORD *)(v1 + 208) = v8;
  *(_WORD *)(v1 + 80) = a1;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return v1;
}

void *sub_1B62FFDB0(uint64_t a1, uint64_t a2)
{
  return sub_1B62FFDC4(a1, a2, (unint64_t *)&unk_1EB980C80, (uint64_t)&type metadata for Scheduler.Job);
}

void *sub_1B62FFDC4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  if (a2 <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, a3, a4, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = (void *)swift_allocObject();
  size_t v7 = j__malloc_size(v6);
  _OWORD v6[2] = a1;
  v6[3] = 2 * ((uint64_t)(v7 - 32) / 96);
  return v6;
}

uint64_t sub_1B62FFE64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B633F784(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 8 * a1), (const void *)(v6 + 32 + 8 * a2), 8 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    *uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

BOOL sub_1B62FFF74(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t v3 = v1 + 96;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC870];
  uint64_t v24 = MEMORY[0x1E4FBC870];
  if (v5)
  {
    uint64_t v21 = v3;
    uint64_t v7 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v8 = (unsigned int *)(swift_bridgeObjectRetain() + 44);
    uint64_t v22 = v5;
    do
    {
      uint64_t v9 = (int)*(v8 - 1);
      uint64_t v10 = *v8;
      if (v9 != -1 || v10 != 0)
      {
        if ((v9 & 0x80000000) != 0
          || v7[1] <= v9
          || ((uint64_t v12 = (int *)(*v7 + 12 * (int)v9), v10 != -1) ? (v13 = v12[2] == v10) : (v13 = 1),
              !v13
           || (uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(*v7 + 12 * (int)v9 + 6) + 32)
                               + 16),
               uint64_t v15 = *(void *)(v14 + 128),
               *(void *)(v15 + 16))
           && (unint64_t v16 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), (v17 & 1) != 0)
           && *(ValueMetadata **)(*(void *)(v14 + 24) + 16 * *(void *)(*(void *)(v15 + 56) + 8 * v16) + 32) == &type metadata for Tombstone
           || (v10 == -1 || v12[2] == v10)
           && (*(unsigned char *)(*(void *)(*(void *)(a1 + 136) + 8 * *v12 + 32) + 120) & 1) == 0))
        {
          sub_1B67E9ED4(&v23, v9 | (unint64_t)(v10 << 32));
        }
      }
      v8 += 24;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = v24;
    uint64_t v3 = v21;
    uint64_t v5 = v22;
  }
  if (*(void *)(v6 + 16))
  {
    uint64_t v18 = sub_1B6C5DD44(v3, &v24);
    sub_1B62F43BC(v18, *(void *)(*(void *)v3 + 16));
  }
  uint64_t v19 = *(void *)(*(void *)v3 + 16);
  swift_bridgeObjectRelease();
  return v5 != v19;
}

uint64_t *sub_1B6300138(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  v32[0] = *(_OWORD *)(v1 + 16);
  v32[1] = v3;
  uint64_t v33 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v32, 0x200000000, v24);
  uint64_t result = (uint64_t *)sub_1B6309B40((uint64_t)v24, (uint64_t)v29);
  if (*(void *)&v29[0])
  {
    v29[8] = v29[2];
    v29[9] = v29[3];
    v29[10] = v29[4];
    v29[11] = v29[5];
    v29[6] = v29[0];
    v29[7] = v29[1];
    sub_1B637BED0(0);
    __n128 v19 = *(__n128 *)(sub_1B62C91B8((uint64_t)&type metadata for Position) + 16 * v5);
    long long v6 = *(_OWORD *)(v1 + 72);
    v30[0] = *(_OWORD *)(v1 + 56);
    v30[1] = v6;
    uint64_t v31 = *(void *)(v1 + 88);
    sub_1B62C9DA8(a1, (uint64_t)v30, 0x200000000, v25);
    sub_1B6309B40((uint64_t)v25, (uint64_t)v26);
    if (v26[0])
    {
      if (v28 >= 1)
      {
        uint64_t v7 = v27;
        if (v27)
        {
          uint64_t v8 = v26[5];
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v9 = 48 * v7;
          uint64_t v10 = (uint64_t *)(v8 + 40);
          do
          {
            uint64_t v15 = *v10;
            unint64_t v16 = *(os_unfair_lock_s **)(*v10 + 376);
            swift_retain();
            os_unfair_lock_lock(v16);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
            int v17 = *(_DWORD *)(v15 + 24);
            swift_retain();
            uint64_t v23 = 0;
            memset(v22, 0, sizeof(v22));
            uint64_t v21 = 0;
            memset(v20, 0, sizeof(v20));
            int v18 = sub_1B637F628(v17, (uint64_t)&type metadata for LODState, (uint64_t)&off_1F0FA4708, 0, 0, (uint64_t)v22, (uint64_t)v20);
            swift_release();
            sub_1B6386458((uint64_t)v20);
            sub_1B6386458((uint64_t)v22);
            if (sub_1B63B4340(v18))
            {
              sub_1B66603E4(v18);
            }
            else
            {
              uint64_t v11 = *(void *)(v15 + 232);
              uint64_t v12 = *(void *)(v15 + 240);
              char v13 = *(unsigned char *)(v15 + 120);
              uint64_t v14 = *(unsigned int *)(v15 + 28);
              LOBYTE(v22[0]) = *(unsigned char *)(v15 + 32);
              sub_1B628EEF4(v11, v12, v18, v13, v14 | ((unint64_t)LOBYTE(v22[0]) << 32));
            }
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
            swift_release();
            v10 += 6;
            v9 -= 48;
          }
          while (v9);
          sub_1B632F170(v25);
        }
      }
      sub_1B632F170(v25);
    }
    sub_1B6A089AC(a1, (float32x4_t)v19);
    sub_1B6A092A0(a1, v19);
    return sub_1B632F170(v24);
  }
  return result;
}

uint64_t type metadata accessor for DrawCall()
{
  return self;
}

uint64_t sub_1B630041C()
{
  *(void *)(v0 + 16) = 3;
  *(_DWORD *)(v0 + 24) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 1;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(unsigned char *)(v0 + 176) = 0;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  *(_OWORD *)(v0 + 242) = 0u;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 264) = sub_1B6303CBC(MEMORY[0x1E4FBC860]);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v1;
  *(void *)(v0 + 288) = v1;
  *(void *)(v0 + 296) = v1;
  *(void *)(v0 + 304) = v1;
  *(void *)(v0 + 312) = v1;
  *(void *)(v0 + 320) = v1;
  *(void *)(v0 + 328) = v1;
  *(void *)(v0 + 336) = v1;
  *(void *)(v0 + 344) = v1;
  *(void *)(v0 + 352) = v1;
  *(void *)(v0 + 360) = v1;
  *(_DWORD *)(v0 + 368) = 0;
  *(void *)(v0 + 376) = v1;
  *(void *)(v0 + 384) = 0;
  *(void *)(v0 + 392) = 0;
  *(void *)(v0 + 400) = 0;
  return v0;
}

uint64_t *sub_1B63004BC(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 72);
  v59[0] = *(_OWORD *)(v1 + 56);
  v59[1] = v3;
  uint64_t v60 = *(void *)(v1 + 88);
  sub_1B62C9DA8(a1, (uint64_t)v59, 0x200000000, v40);
  uint64_t result = (uint64_t *)sub_1B62CA210((uint64_t)v40, (uint64_t)v41, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v41[0])
  {
    if (v47 >= 1)
    {
      uint64_t v33 = v44;
      if (v44)
      {
        uint64_t v5 = v46[4];
        int v38 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v48[0] = v41[0];
        v48[1] = v41[1];
        uint64_t v49 = v42;
        uint64_t v31 = (uint64_t)(v46 + 6);
        uint64_t v32 = v43;
        uint64_t v28 = v1 + 96;
        int32x4_t v39 = v46;
        uint64_t v30 = v46 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v29 = v5;
        while (1)
        {
          uint64_t v36 = v7;
          uint64_t v37 = v6;
          uint64_t v8 = (unsigned int *)(v32 + 48 * v6);
          uint64_t v9 = (uint64_t *)*((void *)v8 + 2);
          uint64_t v10 = *((void *)v8 + 3);
          uint64_t v12 = *((void *)v8 + 4);
          uint64_t v11 = *((void *)v8 + 5);
          uint64_t v34 = v8[1];
          uint64_t v35 = *v8;
          if (v38)
          {
            char v13 = *(os_unfair_lock_s **)(v11 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v13);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v5);
          sub_1B62CA210(v31, (uint64_t)v50, &qword_1EB97DE20);
          uint64_t v14 = v39[4];
          uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v39[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
          v39[7] = v15;
          v30[1] = 0;
          _OWORD v30[2] = 0;
          *uint64_t v30 = 0;
          swift_release();
          uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, v9, v10, v12, (uint64_t)v39);
          sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v9, v10, v12, (uint64_t)v39);
          if (v9)
          {
            if (!v12) {
              goto LABEL_15;
            }
            uint64_t v5 = v29;
            long long v17 = *(_OWORD *)(v28 + 16);
            v51[0] = *(_OWORD *)v28;
            v51[1] = v17;
            uint64_t v52 = *(void *)(v28 + 32);
            uint64_t v7 = v36;
            uint64_t v18 = v37;
            do
            {
              long long v19 = *(_OWORD *)(v16 + 48);
              _OWORD v53[2] = *(_OWORD *)(v16 + 32);
              v53[3] = v19;
              v53[4] = *(_OWORD *)(v16 + 64);
              char v54 = *(unsigned char *)(v16 + 80);
              long long v20 = *(_OWORD *)v16;
              long long v21 = *(_OWORD *)(v16 + 16);
              v16 += 96;
              v53[0] = v20;
              v53[1] = v21;
              sub_1B67DA568((uint64_t)v51, a1, (uint64_t)v53);
              --v12;
            }
            while (v12);
          }
          else
          {
            if (v35 == v34)
            {
LABEL_15:
              uint64_t v5 = v29;
              uint64_t v7 = v36;
              uint64_t v18 = v37;
              goto LABEL_18;
            }
            uint64_t v5 = v29;
            long long v22 = *(_OWORD *)(v28 + 16);
            v55[0] = *(_OWORD *)v28;
            v55[1] = v22;
            uint64_t v56 = *(void *)(v28 + 32);
            uint64_t v23 = v34 - v35;
            uint64_t v24 = v16 + 96 * v35;
            uint64_t v7 = v36;
            uint64_t v18 = v37;
            do
            {
              long long v25 = *(_OWORD *)(v24 + 48);
              v57[2] = *(_OWORD *)(v24 + 32);
              v57[3] = v25;
              v57[4] = *(_OWORD *)(v24 + 64);
              char v58 = *(unsigned char *)(v24 + 80);
              long long v26 = *(_OWORD *)v24;
              long long v27 = *(_OWORD *)(v24 + 16);
              v24 += 96;
              v57[0] = v26;
              v57[1] = v27;
              sub_1B67DA568((uint64_t)v55, a1, (uint64_t)v57);
              --v23;
            }
            while (v23);
          }
LABEL_18:
          sub_1B6345178(v39, (unsigned __int16 **)v48, (uint64_t)v50);
          sub_1B634507C((char *)v11);
          ecs_stack_allocator_pop_snapshot(v5);
          if (v38)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
          }
          swift_release();
          uint64_t v6 = v18 + 1;
          if (v6 == v33)
          {
            sub_1B632F170(v40);
            return sub_1B632F170(v40);
          }
        }
      }
    }
    return sub_1B632F170(v40);
  }
  return result;
}

uint64_t sub_1B6300858(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  sub_1B62F46E8();
  float v4 = v3;
  unint64_t v5 = a1[1];
  swift_retain();
  uint64_t v6 = sub_1B6359BA0(v5);
  Swift::Int v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  if (v12)
  {
    uint64_t v6 = 10;
    Swift::Int v8 = 20;
    float v13 = 1.0;
  }
  else
  {
    float v13 = *(float *)&v10;
  }
  if (v12) {
    float v14 = 2.0;
  }
  else {
    float v14 = *((float *)&v10 + 1);
  }
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B635886C(v5, v2, v2, (uint64_t)a1, v6, v8, v4, v13, v14);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

uint64_t *sub_1B6300974(uint64_t a1)
{
  double v2 = *(double *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 48);
  long long v3 = *(_OWORD *)(v1 + 32);
  v122[0] = *(_OWORD *)(v1 + 16);
  v122[1] = v3;
  uint64_t v123 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v122, 0x200000000, v111);
  uint64_t result = (uint64_t *)sub_1B62D7410((uint64_t)v111, (uint64_t)v112, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v112[0])
  {
    if (v118 >= 1)
    {
      uint64_t v108 = v115;
      if (v115)
      {
        float v5 = v2;
        uint64_t v6 = v117;
        uint64_t v7 = v117[4];
        int v8 = *(unsigned __int8 *)(v116 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v119[0] = v112[0];
        v119[1] = v112[1];
        uint64_t v120 = v113;
        uint64_t v106 = (uint64_t)(v117 + 6);
        uint64_t v107 = v114;
        uint64_t v105 = v117 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v9 = 0;
        int v104 = v8;
        while (1)
        {
          uint64_t v10 = (unsigned int *)(v107 + 48 * v9);
          uint64_t v110 = *v10;
          uint64_t v109 = v10[1];
          char v12 = (uint64_t *)*((void *)v10 + 2);
          uint64_t v11 = *((void *)v10 + 3);
          uint64_t v14 = *((void *)v10 + 4);
          uint64_t v13 = *((void *)v10 + 5);
          if (v8)
          {
            uint64_t v15 = *(os_unfair_lock_s **)(v13 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v7);
          sub_1B62D7410(v106, (uint64_t)v121, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v16 = v6[4];
          uint64_t v17 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v6[6] = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
          v6[7] = v17;
          v105[1] = 0;
          v105[2] = 0;
          void *v105 = 0;
          swift_release();
          uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for AnimationTimeSource, (uint64_t)&off_1F0F7C290, v12, v11, v14, (uint64_t)v6);
          if (v12)
          {
            if (v14)
            {
              uint64_t v19 = v18 + 57;
              int v8 = v104;
              do
              {
                if (*(float *)(v19 - 9) != v5)
                {
                  *(float *)(v19 - 9) = v5;
                  float v20 = (float)((float)(v5 - *(float *)(v19 - 49)) * *(float *)(v19 - 53)) / *(float *)(v19 - 57);
                  *(float *)(v19 - 5) = v20;
                  if (v20 > 1.0 && v20 < (float)(*(float *)(v19 - 41) + 1.0))
                  {
                    float v20 = v20 - floorf(v20);
                    *(float *)(v19 - 5) = v20;
                  }
                  if (v20 > 1.0)
                  {
                    *(_WORD *)(v19 - 1) = 256;
                  }
                  else
                  {
                    *(_WORD *)(v19 - 1) = 1;
                    unint64_t v21 = *(void *)(v19 - 33);
                    int v22 = *(_DWORD *)(v19 - 25);
                    switch(*(unsigned char *)(v19 - 21))
                    {
                      case 1:
                        if ((uint64_t)(v21 << 32) <= (uint64_t)0xFFFFFFFF00000000) {
                          float v23 = 0.0;
                        }
                        else {
                          float v23 = (float)(int)v21;
                        }
                        float v24 = fminf(*((float *)&v21 + 1), 1.01);
                        float v25 = powf(v24, v23);
                        float v26 = 1.0 - v25;
                        float v27 = v20 * (float)((float)(v25 * 0.5) + (float)(v26 / v26));
                        float v28 = logf(1.0 - (float)((float)(1.0 - v24) * v27));
                        float v29 = floorf(v28 / logf(v24));
                        float v30 = (float)(1.0 - powf(v24, v29)) / v26;
                        float v31 = powf(v24, v29 + 1.0);
                        float v32 = (float)(v27 - (float)((float)(v30 + (float)((float)(1.0 - v31) / v26)) * 0.5))
                            / (float)((float)((float)(1.0 - v31) / v26)
                                    - (float)((float)(v30 + (float)((float)(1.0 - v31) / v26)) * 0.5));
                        float v20 = powf(1.0 / v24, v23 - v29) * (float)(1.0 - (float)(v32 * v32));
                        break;
                      case 2:
                        LODWORD(v33) = HIDWORD(*(void *)(v19 - 33));
                        uint64_t v34 = v21 << 32;
                        if (v34 <= (uint64_t)0xFFFFFFFF00000000) {
                          float v35 = 0.25;
                        }
                        else {
                          float v35 = (float)(v34 >> 32) + 0.25;
                        }
                        float v43 = v20;
                        if (v33 > 0.0)
                        {
                          float v44 = 1.0 - expf(v20 * v33);
                          float v43 = v44 / (float)(1.0 - expf(v33));
                        }
                        float v20 = v43 * sinf(v20 * (float)(v35 * 6.2832));
                        break;
                      case 3:
                        LODWORD(v36) = *(void *)(v19 - 33);
                        float v37 = 1.0 - expf(v20 * *(float *)&v21);
                        float v20 = v37 / (float)(1.0 - expf(v36));
                        break;
                      case 4:
                        LODWORD(v38) = *(void *)(v19 - 33);
                        float v39 = logf((float)(v20 * (float)(*(float *)&v21 + -1.0)) + 1.0);
                        float v20 = v39 / logf(v38);
                        break;
                      case 5:
                        float v20 = powf(v20, COERCE_FLOAT(*(void *)(v19 - 33)));
                        break;
                      case 6:
                        LODWORD(v40) = *(void *)(v19 - 33);
                        unint64_t v41 = HIDWORD(v21);
                        if (v22 < 1)
                        {
                          float v45 = (float)(v40 - *(float *)&v41) - *(float *)&v41;
                          float v46 = v45 + (float)(v40 * *(float *)&v41);
                          if (v20 >= *(float *)&v41) {
                            float v20 = (float)((float)((float)((float)(v40 + -2.0) * *(float *)&v41) * *(float *)&v41)
                          }
                                        + (float)((float)(v20 * (float)(v20 + -2.0)) * v45))
                                / (float)((float)(*(float *)&v41 + -1.0) * v46);
                          else {
                            float v20 = (float)((float)(v20 + v20) * (float)(v40 - v20)) / v46;
                          }
                        }
                        else
                        {
                          float v42 = *(float *)&v41 - v40;
                          if (v20 >= *(float *)&v41)
                          {
                            float v47 = 1.0 - *(float *)&v41;
                            float v48 = (float)v22;
                            float v49 = v20 - *(float *)&v41;
                            float v50 = sinf((float)((float)((float)v22 * 3.1416) * v49) / (float)(1.0 - *(float *)&v41))
                                * (float)((float)((float)(1.0 - *(float *)&v41) * (float)(v42 + *(float *)&v41))
                                        / (float)((float)((float)(v42 * *(float *)&v41) * (float)v22) * 3.1416));
                            float v20 = (float)(v50 * expf((float)(v48 / (float)(v47 * -4.0)) * v49)) + 1.0;
                          }
                          else
                          {
                            float v20 = (float)(v20 * (float)(v20 - v40)) / (float)(v42 * *(float *)&v41);
                          }
                        }
                        break;
                      case 7:
                        switch(v21)
                        {
                          case 1uLL:
                            float v20 = v20 * v20;
                            goto LABEL_72;
                          case 2uLL:
                            float v20 = -(float)(v20 * (float)(v20 + -2.0));
                            goto LABEL_72;
                          case 3uLL:
                            if (v20 >= 0.5) {
                              float v20 = (float)((float)((float)(v20 * -2.0) + 4.0) * v20) + -1.0;
                            }
                            else {
                              float v20 = (float)(v20 * v20) + (float)(v20 * v20);
                            }
                            goto LABEL_72;
                          case 4uLL:
                            float v20 = v20 * (float)(v20 * v20);
                            goto LABEL_72;
                          case 5uLL:
                            float v51 = 1.0 - v20;
                            float v52 = v51 * v51;
                            goto LABEL_58;
                          case 6uLL:
                            if (v20 < 0.5)
                            {
                              float v53 = 4.0;
                              goto LABEL_62;
                            }
                            float v57 = (float)(v20 * 2.0) + -2.0;
                            float v58 = (float)(v20 + -1.0) * v57;
                            goto LABEL_71;
                          case 7uLL:
                            float v54 = v20 * v20;
                            goto LABEL_63;
                          case 8uLL:
                            float v51 = 1.0 - v20;
                            float v55 = v51 * v51;
                            goto LABEL_57;
                          case 9uLL:
                            if (v20 < 0.5)
                            {
                              float v56 = 8.0;
                              goto LABEL_61;
                            }
                            float v59 = (float)(v20 * -2.0) + 2.0;
                            float v60 = v59 * v59;
                            goto LABEL_70;
                          case 0xAuLL:
                            float v53 = v20 * v20;
                            goto LABEL_62;
                          case 0xBuLL:
                            float v51 = 1.0 - v20;
                            float v55 = v51 * (float)(v51 * v51);
LABEL_57:
                            float v52 = v51 * v55;
LABEL_58:
                            float v20 = 1.0 - (float)(v51 * v52);
                            goto LABEL_72;
                          case 0xCuLL:
                            if (v20 >= 0.5)
                            {
                              float v59 = (float)(v20 * -2.0) + 2.0;
                              float v60 = v59 * (float)(v59 * v59);
LABEL_70:
                              float v58 = v59 * (float)(v59 * v60);
                              float v57 = -0.5;
LABEL_71:
                              float v20 = (float)(v58 * v57) + 1.0;
                            }
                            else
                            {
                              float v56 = v20 * 16.0;
LABEL_61:
                              float v53 = v20 * v56;
LABEL_62:
                              float v54 = v20 * v53;
LABEL_63:
                              float v20 = v20 * (float)(v20 * v54);
                            }
                            break;
                          case 0xDuLL:
                            float v20 = 1.0 - sqrtf(1.0 - (float)(v20 * v20));
                            goto LABEL_72;
                          case 0xEuLL:
                            float v20 = (float)((float)(v20 * v20) * (float)(3.0 - v20)) * 0.5;
                            goto LABEL_72;
                          case 0xFuLL:
                            float v20 = sinf((float)((float)(1.0 - v20) * -3.1416) * 0.5) + 1.0;
                            goto LABEL_72;
                          default:
                            goto LABEL_72;
                        }
                        break;
                      default:
                        float v20 = (float)(v20 * (float)(v20 * v20))
                            + (float)(sinf(v20 * -3.1416) * (float)(v20 * *(float *)&v21));
                        break;
                    }
LABEL_72:
                    *(float *)(v19 - 5) = v20;
                  }
                }
                v19 += 60;
                --v14;
              }
              while (v14);
              goto LABEL_75;
            }
          }
          else if (v110 != v109)
          {
            uint64_t v61 = v109 - v110;
            uint64_t v62 = v18 + 60 * v110 + 57;
            int v8 = v104;
            do
            {
              if (*(float *)(v62 - 9) != v5)
              {
                *(float *)(v62 - 9) = v5;
                float v63 = (float)((float)(v5 - *(float *)(v62 - 49)) * *(float *)(v62 - 53)) / *(float *)(v62 - 57);
                *(float *)(v62 - 5) = v63;
                if (v63 > 1.0 && v63 < (float)(*(float *)(v62 - 41) + 1.0))
                {
                  float v63 = v63 - floorf(v63);
                  *(float *)(v62 - 5) = v63;
                }
                if (v63 > 1.0)
                {
                  *(_WORD *)(v62 - 1) = 256;
                }
                else
                {
                  *(_WORD *)(v62 - 1) = 1;
                  unint64_t v64 = *(void *)(v62 - 33);
                  int v65 = *(_DWORD *)(v62 - 25);
                  switch(*(unsigned char *)(v62 - 21))
                  {
                    case 1:
                      if ((uint64_t)(v64 << 32) <= (uint64_t)0xFFFFFFFF00000000) {
                        float v66 = 0.0;
                      }
                      else {
                        float v66 = (float)(int)v64;
                      }
                      float v67 = fminf(*((float *)&v64 + 1), 1.01);
                      float v68 = powf(v67, v66);
                      float v69 = 1.0 - v68;
                      float v70 = v63 * (float)((float)(v68 * 0.5) + (float)(v69 / v69));
                      float v71 = logf(1.0 - (float)((float)(1.0 - v67) * v70));
                      float v72 = floorf(v71 / logf(v67));
                      float v73 = (float)(1.0 - powf(v67, v72)) / v69;
                      float v74 = powf(v67, v72 + 1.0);
                      float v75 = (float)(v70 - (float)((float)(v73 + (float)((float)(1.0 - v74) / v69)) * 0.5))
                          / (float)((float)((float)(1.0 - v74) / v69)
                                  - (float)((float)(v73 + (float)((float)(1.0 - v74) / v69)) * 0.5));
                      float v63 = powf(1.0 / v67, v66 - v72) * (float)(1.0 - (float)(v75 * v75));
                      break;
                    case 2:
                      LODWORD(v76) = HIDWORD(*(void *)(v62 - 33));
                      uint64_t v77 = v64 << 32;
                      if (v77 <= (uint64_t)0xFFFFFFFF00000000) {
                        float v78 = 0.25;
                      }
                      else {
                        float v78 = (float)(v77 >> 32) + 0.25;
                      }
                      float v87 = v63;
                      if (v76 > 0.0)
                      {
                        float v88 = 1.0 - expf(v63 * v76);
                        float v87 = v88 / (float)(1.0 - expf(v76));
                      }
                      float v63 = v87 * sinf(v63 * (float)(v78 * 6.2832));
                      break;
                    case 3:
                      LODWORD(v79) = *(void *)(v62 - 33);
                      float v80 = 1.0 - expf(v63 * *(float *)&v64);
                      float v63 = v80 / (float)(1.0 - expf(v79));
                      break;
                    case 4:
                      LODWORD(v81) = *(void *)(v62 - 33);
                      float v82 = logf((float)(v63 * (float)(*(float *)&v64 + -1.0)) + 1.0);
                      float v63 = v82 / logf(v81);
                      break;
                    case 5:
                      float v63 = powf(v63, COERCE_FLOAT(*(void *)(v62 - 33)));
                      break;
                    case 6:
                      LODWORD(v83) = *(void *)(v62 - 33);
                      unint64_t v84 = HIDWORD(v64);
                      if (v65 < 1)
                      {
                        float v89 = (float)(v83 - *(float *)&v84) - *(float *)&v84;
                        float v90 = v89 + (float)(v83 * *(float *)&v84);
                        if (v63 >= *(float *)&v84) {
                          float v63 = (float)((float)((float)((float)(v83 + -2.0) * *(float *)&v84) * *(float *)&v84)
                        }
                                      + (float)((float)(v63 * (float)(v63 + -2.0)) * v89))
                              / (float)((float)(*(float *)&v84 + -1.0) * v90);
                        else {
                          float v63 = (float)((float)(v63 + v63) * (float)(v83 - v63)) / v90;
                        }
                      }
                      else
                      {
                        float v86 = (float)(*(float *)&v84 - v83) * *(float *)&v84;
                        if (v63 >= *(float *)&v84)
                        {
                          float v91 = 1.0 - *(float *)&v84;
                          float v92 = (float)v65;
                          float v93 = v63 - *(float *)&v84;
                          float v85 = *(float *)&v84 - v83;
                          float v94 = sinf((float)((float)((float)v65 * 3.1416) * v93) / (float)(1.0 - *(float *)&v84))
                              * (float)((float)((float)(1.0 - *(float *)&v84) * (float)(v85 + *(float *)&v84))
                                      / (float)((float)(v86 * (float)v65) * 3.1416));
                          float v63 = (float)(v94 * expf((float)(v92 / (float)(v91 * -4.0)) * v93)) + 1.0;
                        }
                        else
                        {
                          float v63 = (float)(v63 * (float)(v63 - v83)) / v86;
                        }
                      }
                      break;
                    case 7:
                      switch(v64)
                      {
                        case 1uLL:
                          float v63 = v63 * v63;
                          goto LABEL_137;
                        case 2uLL:
                          float v63 = -(float)(v63 * (float)(v63 + -2.0));
                          goto LABEL_137;
                        case 3uLL:
                          if (v63 >= 0.5) {
                            float v63 = (float)((float)((float)(v63 * -2.0) + 4.0) * v63) + -1.0;
                          }
                          else {
                            float v63 = (float)(v63 * v63) + (float)(v63 * v63);
                          }
                          goto LABEL_137;
                        case 4uLL:
                          float v63 = v63 * (float)(v63 * v63);
                          goto LABEL_137;
                        case 5uLL:
                          float v95 = 1.0 - v63;
                          float v96 = v95 * v95;
                          goto LABEL_128;
                        case 6uLL:
                          if (v63 < 0.5)
                          {
                            float v98 = 4.0;
                            goto LABEL_130;
                          }
                          float v103 = (float)(v63 * 2.0) + -2.0;
                          float v102 = (float)(v63 + -1.0) * v103;
                          goto LABEL_136;
                        case 7uLL:
                          float v97 = v63 * v63;
                          goto LABEL_131;
                        case 8uLL:
                          float v95 = 1.0 - v63;
                          float v99 = v95 * v95;
                          goto LABEL_127;
                        case 9uLL:
                          if (v63 < 0.5)
                          {
                            float v98 = v63 * 8.0;
                            goto LABEL_130;
                          }
                          float v100 = (float)(v63 * -2.0) + 2.0;
                          float v101 = v100 * v100;
                          goto LABEL_134;
                        case 0xAuLL:
                          float v98 = v63 * v63;
                          goto LABEL_130;
                        case 0xBuLL:
                          float v95 = 1.0 - v63;
                          float v99 = v95 * (float)(v95 * v95);
LABEL_127:
                          float v96 = v95 * v99;
LABEL_128:
                          float v63 = 1.0 - (float)(v95 * v96);
                          goto LABEL_137;
                        case 0xCuLL:
                          if (v63 >= 0.5)
                          {
                            float v100 = (float)(v63 * -2.0) + 2.0;
                            float v101 = v100 * (float)(v100 * v100);
LABEL_134:
                            float v102 = v100 * (float)(v100 * v101);
                            float v103 = -0.5;
LABEL_136:
                            float v63 = (float)(v102 * v103) + 1.0;
                          }
                          else
                          {
                            float v98 = v63 * (float)(v63 * 16.0);
LABEL_130:
                            float v97 = v63 * v98;
LABEL_131:
                            float v63 = v63 * (float)(v63 * v97);
                          }
                          break;
                        case 0xDuLL:
                          float v63 = 1.0 - sqrtf(1.0 - (float)(v63 * v63));
                          goto LABEL_137;
                        case 0xEuLL:
                          float v63 = (float)((float)(v63 * v63) * (float)(3.0 - v63)) * 0.5;
                          goto LABEL_137;
                        case 0xFuLL:
                          float v63 = sinf((float)((float)(1.0 - v63) * -3.1416) * 0.5) + 1.0;
                          goto LABEL_137;
                        default:
                          goto LABEL_137;
                      }
                      break;
                    default:
                      float v63 = (float)(v63 * (float)(v63 * v63))
                          + (float)(sinf(v63 * -3.1416) * (float)(v63 * *(float *)&v64));
                      break;
                  }
LABEL_137:
                  *(float *)(v62 - 5) = v63;
                }
              }
              v62 += 60;
              --v61;
            }
            while (v61);
            goto LABEL_75;
          }
          int v8 = v104;
LABEL_75:
          sub_1B6345178(v6, (unsigned __int16 **)v119, (uint64_t)v121);
          sub_1B634507C((char *)v13);
          ecs_stack_allocator_pop_snapshot(v7);
          if (v8)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
          }
          swift_release();
          if (++v9 == v108)
          {
            sub_1B632F170(v111);
            return sub_1B632F170(v111);
          }
        }
      }
    }
    return sub_1B632F170(v111);
  }
  return result;
}

uint64_t *sub_1B63016F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  if (*(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8) == 1
    && *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 16) == 0)
  {
    uint64_t v5 = 0;
    long long v6 = *(_OWORD *)(v1 + 32);
    v181[0] = *(_OWORD *)(v1 + 16);
    v181[1] = v6;
    uint64_t v182 = *(void *)(v1 + 48);
    sub_1B62C9DA8(a1, (uint64_t)v181, 0x200000000, v155);
    sub_1B62D7790((uint64_t)v155, (uint64_t)v164, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v164[0])
    {
      uint64_t v139 = v1;
      long long v171 = v164[0];
      long long v172 = v164[1];
      uint64_t v173 = v165;
      if (v170 >= 1)
      {
        uint64_t v144 = v167;
        if (v167)
        {
          uint64_t v138 = v3;
          uint64_t v143 = v166;
          uint64_t v7 = v169[4];
          int v148 = *(unsigned __int8 *)(v168 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v149 = v169;
          uint64_t v140 = v169 + 8;
          uint64_t v141 = (uint64_t)(v169 + 6);
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v8 = 0;
          uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v142 = v7;
          while (1)
          {
            uint64_t v10 = (unsigned int *)(v143 + 48 * v8);
            uint64_t v11 = *v10;
            uint64_t v145 = v10[1];
            uint64_t v146 = v8;
            char v12 = (uint64_t *)*((void *)v10 + 2);
            uint64_t v13 = *((void *)v10 + 3);
            uint64_t v15 = *((void *)v10 + 4);
            uint64_t v14 = *((void *)v10 + 5);
            uint64_t v147 = v5;
            if (v148)
            {
              uint64_t v16 = *(os_unfair_lock_s **)(v14 + 376);
              swift_retain();
              os_unfair_lock_lock(v16);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v7);
            sub_1B62D7790(v141, (uint64_t)v180, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v17 = v149[4];
            uint64_t v150 = v14;
            uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v149[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
            v149[7] = v18;
            v140[1] = 0;
            v140[2] = 0;
            void *v140 = 0;
            swift_release();
            sub_1B62C9024((uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, v12, v13, v15, (uint64_t)v149);
            uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1F0F6E938, v12, v13, v15, (uint64_t)v149);
            if (!v12) {
              break;
            }
            uint64_t v20 = MEMORY[0x1E4FBC4C0];
            if (v15)
            {
              unint64_t v21 = (char **)(v19 + 24);
              do
              {
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                float v23 = *(v21 - 3);
                if (isUniquelyReferenced_nonNull_native)
                {
                  uint64_t v24 = *((void *)v23 + 2);
                  char v25 = swift_isUniquelyReferenced_nonNull_native();
                  *(v21 - 3) = v23;
                  if ((v25 & 1) == 0)
                  {
                    float v23 = sub_1B68C0EA8(0, v24, 1, v23);
                    *(v21 - 3) = v23;
                  }
                  if (v24)
                  {
                    uint64_t v26 = *((void *)v23 + 2) - v24;
                    if (v26 < 0) {
                      goto LABEL_187;
                    }
                    memmove(v23 + 32, &v23[16 * v24 + 32], 16 * v26);
                    *((void *)v23 + 2) = v26;
                  }
                  *(v21 - 3) = v23;
                  if (!*(v21 - 2)) {
                    goto LABEL_39;
                  }
                }
                else
                {
                  float v27 = v9;
                  if (*((void *)v23 + 3) >= 2uLL)
                  {
                    sub_1B629AB8C(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
                    float v27 = (void *)swift_allocObject();
                    int64_t v28 = j__malloc_size(v27);
                    uint64_t v29 = v28 - 32;
                    if (v28 < 32) {
                      uint64_t v29 = v28 - 17;
                    }
                    void v27[2] = 0;
                    v27[3] = 2 * (v29 >> 4);
                  }
                  *(v21 - 3) = (char *)v27;
                  swift_bridgeObjectRelease();
                  if (!*(v21 - 2)) {
                    goto LABEL_39;
                  }
                }
                int v30 = swift_isUniquelyReferenced_nonNull_native();
                float v31 = *(v21 - 2);
                if (!v30)
                {
                  float v35 = v9;
                  if (*((void *)v31 + 3) >= 2uLL)
                  {
                    sub_1B62F6E70(0, (unint64_t *)&unk_1E9DCFCF0, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, MEMORY[0x1E4FBBE00]);
                    float v35 = (void *)swift_allocObject();
                    int64_t v36 = j__malloc_size(v35);
                    uint64_t v37 = v36 - 32;
                    if (v36 < 32) {
                      uint64_t v37 = v36 - 17;
                    }
                    _OWORD v35[2] = 0;
                    v35[3] = 2 * (v37 >> 4);
                  }
                  *(v21 - 2) = (char *)v35;
                  swift_bridgeObjectRelease();
                  if (!*(v21 - 1)) {
                    goto LABEL_53;
                  }
                  goto LABEL_46;
                }
                uint64_t v32 = *((void *)v31 + 2);
                char v33 = swift_isUniquelyReferenced_nonNull_native();
                *(v21 - 2) = v31;
                if ((v33 & 1) == 0)
                {
                  float v31 = sub_1B68C384C(0, v32, 1, v31);
                  *(v21 - 2) = v31;
                }
                if (v32)
                {
                  uint64_t v34 = *((void *)v31 + 2) - v32;
                  if (v34 < 0) {
                    goto LABEL_187;
                  }
                  memmove(v31 + 32, &v31[16 * v32 + 32], 16 * v34);
                  *((void *)v31 + 2) = v34;
                }
                *(v21 - 2) = v31;
LABEL_39:
                if (!*(v21 - 1)) {
                  goto LABEL_53;
                }
LABEL_46:
                int v38 = swift_isUniquelyReferenced_nonNull_native();
                float v39 = *(v21 - 1);
                if (!v38)
                {
                  float v43 = v9;
                  if (*((void *)v39 + 3) >= 2uLL)
                  {
                    sub_1B629AB8C(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
                    float v43 = (void *)swift_allocObject();
                    int64_t v44 = j__malloc_size(v43);
                    uint64_t v45 = v44 - 32;
                    if (v44 < 32) {
                      uint64_t v45 = v44 - 17;
                    }
                    _OWORD v43[2] = 0;
                    v43[3] = 2 * (v45 >> 4);
                  }
                  *(v21 - 1) = (char *)v43;
                  swift_bridgeObjectRelease();
                  if (!*v21) {
                    goto LABEL_72;
                  }
                  goto LABEL_60;
                }
                uint64_t v40 = *((void *)v39 + 2);
                char v41 = swift_isUniquelyReferenced_nonNull_native();
                *(v21 - 1) = v39;
                if ((v41 & 1) == 0)
                {
                  float v39 = sub_1B68C0EA8(0, v40, 1, v39);
                  *(v21 - 1) = v39;
                }
                if (v40)
                {
                  uint64_t v42 = *((void *)v39 + 2) - v40;
                  if (v42 < 0) {
                    goto LABEL_187;
                  }
                  memmove(v39 + 32, &v39[16 * v40 + 32], 16 * v42);
                  *((void *)v39 + 2) = v42;
                }
                *(v21 - 1) = v39;
LABEL_53:
                if (!*v21) {
                  goto LABEL_72;
                }
LABEL_60:
                int v46 = swift_isUniquelyReferenced_nonNull_native();
                float v47 = *v21;
                if (v46)
                {
                  uint64_t v48 = *((void *)v47 + 2);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    float v47 = sub_1B629CE28(0, v48, 1, v47);
                  }
                  if (v48)
                  {
                    uint64_t v49 = *((void *)v47 + 2) - v48;
                    if (v49 < 0) {
                      goto LABEL_187;
                    }
                    memmove(v47 + 32, &v47[16 * v48 + 32], 16 * v49);
                    *((void *)v47 + 2) = v49;
                  }
                  *unint64_t v21 = v47;
                }
                else
                {
                  float v50 = v9;
                  if (*((void *)v47 + 3) >= 2uLL)
                  {
                    sub_1B629AB8C(0, (unint64_t *)&qword_1EB980DA0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
                    float v50 = (void *)swift_allocObject();
                    int64_t v51 = j__malloc_size(v50);
                    uint64_t v52 = v51 - 32;
                    if (v51 < 32) {
                      uint64_t v52 = v51 - 17;
                    }
                    _OWORD v50[2] = 0;
                    v50[3] = 2 * (v52 >> 4);
                  }
                  *unint64_t v21 = (char *)v50;
                  swift_bridgeObjectRelease();
                }
LABEL_72:
                float v53 = (uint64_t *)(v21 + 1);
                if (v21[1])
                {
                  int v54 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v55 = *v53;
                  if (v54)
                  {
                    sub_1B68E9948(0, *(void *)(v55 + 16));
                  }
                  else
                  {
                    float v56 = v9;
                    if (*(void *)(v55 + 24) >= 2uLL)
                    {
                      sub_1B629AB8C(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
                      float v56 = (void *)swift_allocObject();
                      int64_t v57 = j__malloc_size(v56);
                      uint64_t v58 = v57 - 32;
                      if (v57 < 32) {
                        uint64_t v58 = v57 - 17;
                      }
                      _OWORD v56[2] = 0;
                      v56[3] = 2 * (v58 >> 4);
                    }
                    *float v53 = (uint64_t)v56;
                    swift_bridgeObjectRelease();
                  }
                }
                int v59 = swift_isUniquelyReferenced_nonNull_native();
                float v60 = v21[2];
                if (v59)
                {
                  uint64_t v61 = *((void *)v60 + 2);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    float v60 = sub_1B68C370C(0, v61, 1, v60);
                  }
                  if (v61)
                  {
                    uint64_t v62 = *((void *)v60 + 2) - v61;
                    if (v62 < 0) {
                      goto LABEL_187;
                    }
                    memmove(v60 + 32, &v60[4 * v61 + 32], 4 * v62);
                    *((void *)v60 + 2) = v62;
                  }
                  long long v21[2] = v60;
                }
                else
                {
                  float v63 = v9;
                  if (*((void *)v60 + 3) >= 2uLL)
                  {
                    sub_1B62D8620(0, (unint64_t *)&unk_1E9DCFCE0, v20, MEMORY[0x1E4FBBE00]);
                    float v63 = (void *)swift_allocObject();
                    int64_t v64 = j__malloc_size(v63);
                    uint64_t v65 = v64 - 32;
                    if (v64 < 32) {
                      uint64_t v65 = v64 - 29;
                    }
                    _OWORD v63[2] = 0;
                    void v63[3] = 2 * (v65 >> 2);
                  }
                  long long v21[2] = (char *)v63;
                  swift_bridgeObjectRelease();
                }
                v21 += 8;
                --v15;
              }
              while (v15);
            }
LABEL_92:
            v174[0] = v171;
            v174[1] = v172;
            uint64_t v175 = v173;
            uint64_t v5 = v147;
            sub_1B6345178(v149, (unsigned __int16 **)v174, (uint64_t)v180);
            sub_1B634507C((char *)v150);
            uint64_t v7 = v142;
            ecs_stack_allocator_pop_snapshot(v142);
            if (v148)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v150 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v150 + 376));
            }
            swift_release();
            uint64_t v8 = v146 + 1;
            if (v146 + 1 == v144)
            {
              sub_1B632F170(v155);
              uint64_t v3 = v138;
              goto LABEL_165;
            }
          }
          uint64_t v66 = MEMORY[0x1E4FBC4C0];
          if (v11 == v145) {
            goto LABEL_92;
          }
          float v67 = (uint64_t *)(v19 + (v11 << 6) + 40);
          uint64_t v68 = v145 - v11;
          while (1)
          {
            int v69 = swift_isUniquelyReferenced_nonNull_native();
            float v70 = (char *)*(v67 - 5);
            if (v69)
            {
              uint64_t v71 = *((void *)v70 + 2);
              char v72 = swift_isUniquelyReferenced_nonNull_native();
              *(v67 - 5) = (uint64_t)v70;
              if ((v72 & 1) == 0)
              {
                float v70 = sub_1B68C0EA8(0, v71, 1, v70);
                *(v67 - 5) = (uint64_t)v70;
              }
              if (v71)
              {
                uint64_t v73 = *((void *)v70 + 2) - v71;
                if (v73 < 0) {
                  goto LABEL_187;
                }
                memmove(v70 + 32, &v70[16 * v71 + 32], 16 * v73);
                *((void *)v70 + 2) = v73;
              }
              *(v67 - 5) = (uint64_t)v70;
              if (!*(v67 - 4)) {
                goto LABEL_117;
              }
            }
            else
            {
              float v74 = v9;
              if (*((void *)v70 + 3) >= 2uLL)
              {
                sub_1B629AB8C(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
                float v74 = (void *)swift_allocObject();
                int64_t v75 = j__malloc_size(v74);
                uint64_t v76 = v75 - 32;
                if (v75 < 32) {
                  uint64_t v76 = v75 - 17;
                }
                v74[2] = 0;
                v74[3] = 2 * (v76 >> 4);
              }
              *(v67 - 5) = (uint64_t)v74;
              swift_bridgeObjectRelease();
              if (!*(v67 - 4)) {
                goto LABEL_117;
              }
            }
            int v77 = swift_isUniquelyReferenced_nonNull_native();
            float v78 = (char *)*(v67 - 4);
            if (v77)
            {
              uint64_t v79 = *((void *)v78 + 2);
              char v80 = swift_isUniquelyReferenced_nonNull_native();
              *(v67 - 4) = (uint64_t)v78;
              if ((v80 & 1) == 0)
              {
                float v78 = sub_1B68C384C(0, v79, 1, v78);
                *(v67 - 4) = (uint64_t)v78;
              }
              if (v79)
              {
                uint64_t v81 = *((void *)v78 + 2) - v79;
                if (v81 < 0) {
                  goto LABEL_187;
                }
                memmove(v78 + 32, &v78[16 * v79 + 32], 16 * v81);
                *((void *)v78 + 2) = v81;
              }
              *(v67 - 4) = (uint64_t)v78;
LABEL_117:
              if (!*(v67 - 3)) {
                goto LABEL_131;
              }
              goto LABEL_124;
            }
            float v82 = v9;
            if (*((void *)v78 + 3) >= 2uLL)
            {
              sub_1B62F6E70(0, (unint64_t *)&unk_1E9DCFCF0, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, MEMORY[0x1E4FBBE00]);
              float v82 = (void *)swift_allocObject();
              int64_t v83 = j__malloc_size(v82);
              uint64_t v84 = v83 - 32;
              if (v83 < 32) {
                uint64_t v84 = v83 - 17;
              }
              v82[2] = 0;
              v82[3] = 2 * (v84 >> 4);
            }
            *(v67 - 4) = (uint64_t)v82;
            swift_bridgeObjectRelease();
            if (!*(v67 - 3)) {
              goto LABEL_131;
            }
LABEL_124:
            int v85 = swift_isUniquelyReferenced_nonNull_native();
            float v86 = (char *)*(v67 - 3);
            if (v85)
            {
              uint64_t v87 = *((void *)v86 + 2);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                float v86 = sub_1B68C0EA8(0, v87, 1, v86);
              }
              if (v87)
              {
                uint64_t v88 = *((void *)v86 + 2) - v87;
                if (v88 < 0) {
                  goto LABEL_187;
                }
                memmove(v86 + 32, &v86[16 * v87 + 32], 16 * v88);
                *((void *)v86 + 2) = v88;
              }
              *(v67 - 3) = (uint64_t)v86;
LABEL_131:
              if (!*(v67 - 2)) {
                goto LABEL_150;
              }
              goto LABEL_138;
            }
            float v89 = v9;
            if (*((void *)v86 + 3) >= 2uLL)
            {
              sub_1B629AB8C(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
              float v89 = (void *)swift_allocObject();
              int64_t v90 = j__malloc_size(v89);
              uint64_t v91 = v90 - 32;
              if (v90 < 32) {
                uint64_t v91 = v90 - 17;
              }
              v89[2] = 0;
              v89[3] = 2 * (v91 >> 4);
            }
            *(v67 - 3) = (uint64_t)v89;
            swift_bridgeObjectRelease();
            if (!*(v67 - 2)) {
              goto LABEL_150;
            }
LABEL_138:
            int v92 = swift_isUniquelyReferenced_nonNull_native();
            float v93 = (char *)*(v67 - 2);
            if (v92)
            {
              uint64_t v94 = *((void *)v93 + 2);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                float v93 = sub_1B629CE28(0, v94, 1, v93);
              }
              if (v94)
              {
                uint64_t v95 = *((void *)v93 + 2) - v94;
                if (v95 < 0)
                {
LABEL_187:
                  uint64_t result = (uint64_t *)sub_1B6E32C88();
                  __break(1u);
                  return result;
                }
                memmove(v93 + 32, &v93[16 * v94 + 32], 16 * v95);
                *((void *)v93 + 2) = v95;
              }
              *(v67 - 2) = (uint64_t)v93;
            }
            else
            {
              float v96 = v9;
              if (*((void *)v93 + 3) >= 2uLL)
              {
                sub_1B629AB8C(0, (unint64_t *)&qword_1EB980DA0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
                float v96 = (void *)swift_allocObject();
                int64_t v97 = j__malloc_size(v96);
                uint64_t v98 = v97 - 32;
                if (v97 < 32) {
                  uint64_t v98 = v97 - 17;
                }
                v96[2] = 0;
                v96[3] = 2 * (v98 >> 4);
              }
              *(v67 - 2) = (uint64_t)v96;
              swift_bridgeObjectRelease();
            }
LABEL_150:
            float v99 = v67 - 1;
            if (*(v67 - 1))
            {
              int v100 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v101 = *v99;
              if (v100)
              {
                sub_1B68E9948(0, *(void *)(v101 + 16));
              }
              else
              {
                float v102 = v9;
                if (*(void *)(v101 + 24) >= 2uLL)
                {
                  sub_1B629AB8C(0, (unint64_t *)&qword_1E9DD1D10, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
                  float v102 = (void *)swift_allocObject();
                  int64_t v103 = j__malloc_size(v102);
                  uint64_t v104 = v103 - 32;
                  if (v103 < 32) {
                    uint64_t v104 = v103 - 17;
                  }
                  _OWORD v102[2] = 0;
                  v102[3] = 2 * (v104 >> 4);
                }
                uint64_t *v99 = (uint64_t)v102;
                swift_bridgeObjectRelease();
              }
            }
            int v105 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v106 = *v67;
            if (v105)
            {
              sub_1B68E96D8(0, *(void *)(v106 + 16));
            }
            else
            {
              uint64_t v107 = v9;
              if (*(void *)(v106 + 24) >= 2uLL)
              {
                sub_1B62D8620(0, (unint64_t *)&unk_1E9DCFCE0, v66, MEMORY[0x1E4FBBE00]);
                uint64_t v107 = (void *)swift_allocObject();
                int64_t v108 = j__malloc_size(v107);
                uint64_t v109 = v108 - 32;
                if (v108 < 32) {
                  uint64_t v109 = v108 - 29;
                }
                v107[2] = 0;
                v107[3] = 2 * (v109 >> 2);
              }
              *float v67 = (uint64_t)v107;
              swift_bridgeObjectRelease();
            }
            v67 += 8;
            if (!--v68) {
              goto LABEL_92;
            }
          }
        }
      }
LABEL_165:
      sub_1B632F170(v155);
      uint64_t v2 = v139;
    }
  }
  long long v110 = *(_OWORD *)(v2 + 72);
  v178[0] = *(_OWORD *)(v2 + 56);
  v178[1] = v110;
  uint64_t v179 = *(void *)(v2 + 88);
  sub_1B62C9DA8(v3, (uint64_t)v178, 0x200000000, v156);
  sub_1B62D7790((uint64_t)v156, (uint64_t)v161, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v111 = v2;
  if (v161[0])
  {
    if (v163 >= 1)
    {
      uint64_t v112 = v162;
      if (v162)
      {
        uint64_t v113 = v161[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v114 = 48 * v112;
        uint64_t v115 = (uint64_t *)(v113 + 40);
        do
        {
          uint64_t v120 = *v115;
          uint64_t v121 = *(os_unfair_lock_s **)(*v115 + 376);
          swift_retain();
          os_unfair_lock_lock(v121);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v120 + 344));
          int v122 = *(_DWORD *)(v120 + 24);
          swift_retain();
          memset(v158, 0, 40);
          memset(v157, 0, 40);
          int v123 = sub_1B637F628(v122, (uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1F0F6E938, 0, 0, (uint64_t)v158, (uint64_t)v157);
          swift_release();
          sub_1B6386458((uint64_t)v157);
          sub_1B6386458((uint64_t)v158);
          if (sub_1B63B4340(v123))
          {
            sub_1B66603E4(v123);
          }
          else
          {
            uint64_t v116 = *(void *)(v120 + 232);
            uint64_t v117 = *(void *)(v120 + 240);
            char v118 = *(unsigned char *)(v120 + 120);
            uint64_t v119 = *(unsigned int *)(v120 + 28);
            LOBYTE(v158[0]) = *(unsigned char *)(v120 + 32);
            sub_1B628EEF4(v116, v117, v123, v118, v119 | ((unint64_t)LOBYTE(v158[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v120 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v120 + 376));
          swift_release();
          v115 += 6;
          v114 -= 48;
        }
        while (v114);
        sub_1B632F170(v156);
      }
    }
    sub_1B632F170(v156);
  }
  long long v124 = *(_OWORD *)(v111 + 112);
  v176[0] = *(_OWORD *)(v111 + 96);
  v176[1] = v124;
  uint64_t v177 = *(void *)(v111 + 128);
  sub_1B62C9DA8(v3, (uint64_t)v176, 0x200000000, v157);
  uint64_t result = (uint64_t *)sub_1B62D7790((uint64_t)v157, (uint64_t)v158, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v158[0])
  {
    if (v160 >= 1)
    {
      uint64_t v126 = v159;
      if (v159)
      {
        uint64_t v127 = v158[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v128 = 48 * v126;
        uint64_t v129 = (uint64_t *)(v127 + 40);
        do
        {
          uint64_t v134 = *v129;
          uint64_t v135 = *(os_unfair_lock_s **)(*v129 + 376);
          swift_retain();
          os_unfair_lock_lock(v135);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v134 + 344));
          int v136 = *(_DWORD *)(v134 + 24);
          swift_retain();
          uint64_t v154 = 0;
          memset(v153, 0, sizeof(v153));
          uint64_t v152 = 0;
          memset(v151, 0, sizeof(v151));
          int v137 = sub_1B637F628(v136, 0, 0, (uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1F0F6E938, (uint64_t)v153, (uint64_t)v151);
          swift_release();
          sub_1B6386458((uint64_t)v151);
          sub_1B6386458((uint64_t)v153);
          if (sub_1B63B4340(v137))
          {
            sub_1B66603E4(v137);
          }
          else
          {
            uint64_t v130 = *(void *)(v134 + 232);
            uint64_t v131 = *(void *)(v134 + 240);
            char v132 = *(unsigned char *)(v134 + 120);
            uint64_t v133 = *(unsigned int *)(v134 + 28);
            LOBYTE(v153[0]) = *(unsigned char *)(v134 + 32);
            sub_1B628EEF4(v130, v131, v137, v132, v133 | ((unint64_t)LOBYTE(v153[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v134 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v134 + 376));
          swift_release();
          v129 += 6;
          v128 -= 48;
        }
        while (v128);
        sub_1B632F170(v157);
      }
    }
    return sub_1B632F170(v157);
  }
  return result;
}

uint64_t *sub_1B63028A0(uint64_t a1)
{
  sub_1B6302BA0(a1);
  long long v3 = *(_OWORD *)(v1 + 32);
  v45[0] = *(_OWORD *)(v1 + 16);
  v45[1] = v3;
  uint64_t v46 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v45, 0x200000000, v34);
  uint64_t result = (uint64_t *)sub_1B62D7910((uint64_t)v34, (uint64_t)v35, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v35[0])
  {
    if (v41 >= 1)
    {
      uint64_t v29 = v38;
      if (v38)
      {
        uint64_t v5 = v40;
        uint64_t v33 = v40[4];
        int v32 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v42[0] = v35[0];
        v42[1] = v35[1];
        uint64_t v43 = v36;
        uint64_t v27 = (uint64_t)(v40 + 6);
        uint64_t v28 = v37;
        uint64_t v26 = v40 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        do
        {
          uint64_t v8 = (unsigned int *)(v28 + 48 * v6);
          uint64_t v9 = *v8;
          uint64_t v10 = (uint64_t *)*((void *)v8 + 2);
          uint64_t v11 = *((void *)v8 + 3);
          uint64_t v13 = *((void *)v8 + 4);
          uint64_t v12 = *((void *)v8 + 5);
          uint64_t v30 = v7;
          uint64_t v31 = v8[1];
          if (v32)
          {
            uint64_t v14 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v33);
          sub_1B62D7910(v27, (uint64_t)v44, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v15 = v5[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          void v5[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v5[7] = v16;
          v26[1] = 0;
          _OWORD v26[2] = 0;
          *uint64_t v26 = 0;
          swift_release();
          uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v10, v11, v13, (uint64_t)v5);
          uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for LastFrameWorldTransform, (uint64_t)&off_1F0F8F498, v10, v11, v13, (uint64_t)v5);
          if (v9 == v31)
          {
            uint64_t v7 = v30;
          }
          else
          {
            uint64_t v19 = v31 - v9;
            uint64_t v20 = (long long *)(v17 + (v9 << 6) + 32);
            unint64_t v21 = (_OWORD *)(v18 + (v9 << 6) + 32);
            uint64_t v7 = v30;
            do
            {
              long long v22 = *(v20 - 2);
              long long v23 = *(v20 - 1);
              long long v24 = *v20;
              long long v25 = v20[1];
              v20 += 4;
              *(v21 - 2) = v22;
              *(v21 - 1) = v23;
              *unint64_t v21 = v24;
              v21[1] = v25;
              v21 += 4;
              --v19;
            }
            while (v19);
          }
          sub_1B6345178(v5, (unsigned __int16 **)v42, (uint64_t)v44);
          sub_1B634507C((char *)v12);
          ecs_stack_allocator_pop_snapshot(v33);
          if (v32)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          ++v6;
        }
        while (v6 != v29);
        sub_1B632F170(v34);
      }
    }
    return sub_1B632F170(v34);
  }
  return result;
}

uint64_t *sub_1B6302BA0(uint64_t a1)
{
  uint64_t v143 = *MEMORY[0x1E4F143B8];
  long long v2 = *(_OWORD *)(v1 + 72);
  v117[0] = *(_OWORD *)(v1 + 56);
  v117[1] = v2;
  uint64_t v118 = *(void *)(v1 + 88);
  sub_1B62C9DA8(a1, (uint64_t)v117, 0x200000000, v134);
  uint64_t result = (uint64_t *)sub_1B62D7910((uint64_t)v134, (uint64_t)v135, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v135[0])
  {
    if (v141 >= 1)
    {
      uint64_t v106 = v138;
      if (v138)
      {
        uint64_t v4 = v140[4];
        int v5 = *(unsigned __int8 *)(v139 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v115[0] = v135[0];
        v115[1] = v135[1];
        uint64_t v116 = v136;
        uint64_t v103 = (uint64_t)(v140 + 6);
        uint64_t v104 = v137;
        int64_t v108 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v111 = v140;
        uint64_t v101 = v140 + 13;
        float v102 = v140 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        int v105 = v5;
        while (1)
        {
          uint64_t v8 = (unsigned int *)(v104 + 48 * v6);
          uint64_t v10 = *v8;
          uint64_t v9 = v8[1];
          uint64_t v11 = *((void *)v8 + 3);
          uint64_t v114 = (uint64_t *)*((void *)v8 + 2);
          uint64_t v12 = *((void *)v8 + 4);
          uint64_t v13 = *((void *)v8 + 5);
          uint64_t v109 = v7;
          uint64_t v110 = v6;
          if (v5)
          {
            uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
            swift_retain();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v4);
          sub_1B62D7910(v103, (uint64_t)v142, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v15 = v111[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v111[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v111[7] = v16;
          v102[1] = 0;
          _OWORD v102[2] = 0;
          void *v102 = 0;
          swift_release();
          uint64_t v17 = v13;
          uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v114, v11, v12, (uint64_t)v111);
          uint64_t v113 = v17;
          sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v114, v11, v12, (uint64_t)v111);
          if (!v114)
          {
            if (v10 != v9)
            {
              int v5 = v105;
              unint64_t v21 = v108;
              while (2)
              {
                uint64_t v61 = (int *)(v18 + 8 * v10);
                int v62 = *v61;
                int v63 = v61[1];
                BOOL v64 = v62 == -1 && v63 == 0;
                if (v64 || v62 < 0 || v21[1] <= v62) {
                  goto LABEL_71;
                }
                if (v63 != -1 && *(_DWORD *)(*v21 + 12 * v62 + 8) != v63) {
                  goto LABEL_71;
                }
                uint64_t v66 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(*v21 + 12 * v62 + 6) + 32)
                                + 16);
                uint64_t v67 = *(void *)(v66 + 128);
                if (!*(void *)(v67 + 16)) {
                  goto LABEL_71;
                }
                unint64_t v68 = sub_1B62C1A30((uint64_t)&type metadata for LastFrameWorldTransform);
                if ((v69 & 1) == 0) {
                  goto LABEL_71;
                }
                if (*(ValueMetadata **)(*(void *)(v66 + 24) + 16 * *(void *)(*(void *)(v67 + 56) + 8 * v68) + 32) != &type metadata for LastFrameWorldTransform) {
                  goto LABEL_71;
                }
                uint64_t v70 = *(void *)(*(void *)(v113 + 40) + 16);
                uint64_t v71 = *(void *)(v70 + 128);
                if (*(void *)(v71 + 16))
                {
                  unint64_t v72 = sub_1B62C1A30((uint64_t)&type metadata for LastFrameWorldTransform);
                  if ((v73 & 1) != 0
                    && *(ValueMetadata **)(*(void *)(v70 + 24)
                                         + 16 * *(void *)(*(void *)(v71 + 56) + 8 * v72)
                                         + 32) == &type metadata for LastFrameWorldTransform)
                  {
                    goto LABEL_71;
                  }
                }
                uint64_t v131 = &type metadata for LastFrameWorldTransform;
                char v132 = &off_1F0F8F498;
                char v133 = 0;
                uint64_t v74 = *(void *)(*v101 + 16);
                if (v74)
                {
                  uint64_t v75 = *v101 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v76 = 0;
LABEL_94:
                  sub_1B63B2978(v75, (uint64_t)v130);
                  sub_1B639192C((uint64_t)v130, (uint64_t)&v124);
                  sub_1B639192C((uint64_t)&v131, (uint64_t)v127);
                  switch(BYTE8(v126))
                  {
                    case 1:
                      sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                      if (v129 != 1) {
                        goto LABEL_92;
                      }
                      goto LABEL_98;
                    case 2:
                      sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                      if (v129 == 2) {
                        goto LABEL_102;
                      }
                      goto LABEL_91;
                    case 3:
                      sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                      if (v129 == 3)
                      {
LABEL_102:
                        sub_1B62C15C4(v123, (uint64_t)v120);
                        sub_1B62C15C4((long long *)v127, (uint64_t)v119);
                        uint64_t v80 = v121;
                        uint64_t v81 = v122;
                        sub_1B62C14BC(v120, v121);
                        uint64_t v82 = v81;
                        unint64_t v21 = v108;
                        LOBYTE(v80) = sub_1B6B3D86C(v119, v80, v82);
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v119);
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v120);
                        sub_1B6391400((uint64_t)&v124);
                        sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v80)
                        {
LABEL_112:
                          swift_bridgeObjectRelease();
                          uint64_t v87 = sub_1B6B1B930();
                          uint64_t v88 = *(void *)(v86 + 48);
                          if (v88)
                          {
                            uint64_t v89 = *(void *)(v86 + 64);
                            *(void *)(v88 + 8 * v89) = v10;
                            *(void *)(v86 + 64) = v89 + 1;
                          }
                          ((void (*)(long long *, void))v87)(&v124, 0);
LABEL_70:
                          sub_1B6391400((uint64_t)&v131);
                          swift_release();
LABEL_71:
                          if (++v10 == v9) {
                            goto LABEL_14;
                          }
                          continue;
                        }
                      }
                      else
                      {
LABEL_91:
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v123);
LABEL_92:
                        sub_1B62E2EA0((uint64_t)&v124, (uint64_t (*)(void))sub_1B691F560);
                        sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                      }
LABEL_93:
                      ++v76;
                      v75 += 72;
                      if (v74 != v76) {
                        goto LABEL_94;
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v90 = v113;
                      break;
                    case 4:
                      sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                      if (v129 != 4) {
                        goto LABEL_92;
                      }
                      int v83 = LOBYTE(v123[0]);
                      int v84 = v127[0];
                      sub_1B6391400((uint64_t)&v124);
                      sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                      BOOL v79 = v83 == v84;
                      goto LABEL_106;
                    case 5:
                      if (v129 != 5) {
                        goto LABEL_92;
                      }
                      int8x16_t v85 = vorrq_s8(*(int8x16_t *)&v127[8], v128);
                      if (*(void *)&vorr_s8(*(int8x8_t *)v85.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v85, v85, 8uLL)) | *(void *)v127) {
                        goto LABEL_92;
                      }
                      sub_1B6391400((uint64_t)&v124);
                      sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                      goto LABEL_112;
                    default:
                      sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                      if (v129) {
                        goto LABEL_92;
                      }
LABEL_98:
                      uint64_t v77 = *(void *)&v123[0];
                      uint64_t v78 = *(void *)v127;
                      sub_1B6391400((uint64_t)&v124);
                      sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                      BOOL v79 = v77 == v78;
LABEL_106:
                      unint64_t v21 = v108;
                      if (!v79) {
                        goto LABEL_93;
                      }
                      goto LABEL_112;
                  }
                }
                else
                {
                  uint64_t v90 = swift_retain();
                }
                break;
              }
              uint64_t v91 = *(void *)(v90 + 240) - *(void *)(v90 + 232);
              int v92 = ecs_stack_allocator_allocate(v111[4], 8 * v91, 8);
              *int v92 = v10;
              sub_1B639192C((uint64_t)&v131, (uint64_t)&v124);
              *(void *)uint64_t v127 = v92;
              *(void *)&v127[8] = v91;
              *(void *)&v127[16] = 1;
              float v93 = (void *)v111[13];
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v111[13] = v93;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                float v93 = sub_1B68C0C6C(0, v93[2] + 1, 1, v93);
                *uint64_t v101 = v93;
              }
              unint64_t v96 = v93[2];
              unint64_t v95 = v93[3];
              if (v96 >= v95 >> 1)
              {
                float v93 = sub_1B68C0C6C(v95 > 1, v96 + 1, 1, v93);
                *uint64_t v101 = v93;
              }
              _OWORD v93[2] = v96 + 1;
              int64_t v97 = &v93[9 * v96];
              *((_OWORD *)v97 + 2) = v124;
              long long v98 = v125;
              long long v99 = v126;
              long long v100 = *(_OWORD *)v127;
              v97[12] = *(void *)&v127[16];
              *((_OWORD *)v97 + 4) = v99;
              *((_OWORD *)v97 + 5) = v100;
              *((_OWORD *)v97 + 3) = v98;
              goto LABEL_70;
            }
LABEL_13:
            int v5 = v105;
            goto LABEL_14;
          }
          if (!v12) {
            goto LABEL_13;
          }
          uint64_t v19 = 0;
          int v5 = v105;
          uint64_t v20 = v108;
LABEL_20:
          long long v22 = (int *)(v18 + 8 * v19);
          int v23 = *v22;
          int v24 = v22[1];
          BOOL v25 = v23 == -1 && v24 == 0;
          if (v25 || v23 < 0 || v20[1] <= v23) {
            goto LABEL_19;
          }
          if (v24 != -1 && *(_DWORD *)(*v20 + 12 * v23 + 8) != v24) {
            goto LABEL_19;
          }
          uint64_t v27 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(*v20 + 12 * v23 + 6) + 32) + 16);
          uint64_t v28 = *(void *)(v27 + 128);
          if (!*(void *)(v28 + 16)) {
            goto LABEL_19;
          }
          uint64_t v107 = v114[v19];
          unint64_t v29 = sub_1B62C1A30((uint64_t)&type metadata for LastFrameWorldTransform);
          if ((v30 & 1) == 0) {
            goto LABEL_19;
          }
          if (*(ValueMetadata **)(*(void *)(v27 + 24) + 16 * *(void *)(*(void *)(v28 + 56) + 8 * v29) + 32) != &type metadata for LastFrameWorldTransform) {
            goto LABEL_19;
          }
          uint64_t v31 = *(void *)(*(void *)(v113 + 40) + 16);
          uint64_t v32 = *(void *)(v31 + 128);
          if (*(void *)(v32 + 16))
          {
            unint64_t v33 = sub_1B62C1A30((uint64_t)&type metadata for LastFrameWorldTransform);
            if ((v34 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v31 + 24) + 16 * *(void *)(*(void *)(v32 + 56) + 8 * v33) + 32) == &type metadata for LastFrameWorldTransform)
            {
              goto LABEL_19;
            }
          }
          uint64_t v131 = &type metadata for LastFrameWorldTransform;
          char v132 = &off_1F0F8F498;
          char v133 = 0;
          uint64_t v35 = *(void *)(*v101 + 16);
          if (!v35)
          {
            uint64_t v50 = swift_retain();
            goto LABEL_64;
          }
          uint64_t v36 = *v101 + 32;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v37 = 0;
          while (2)
          {
            sub_1B63B2978(v36, (uint64_t)v130);
            sub_1B639192C((uint64_t)v130, (uint64_t)&v124);
            sub_1B639192C((uint64_t)&v131, (uint64_t)v127);
            switch(BYTE8(v126))
            {
              case 1:
                sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                if (v129 != 1) {
                  goto LABEL_40;
                }
                goto LABEL_46;
              case 2:
                sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                if (v129 == 2) {
                  goto LABEL_50;
                }
                goto LABEL_39;
              case 3:
                sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                if (v129 != 3)
                {
LABEL_39:
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v123);
LABEL_40:
                  sub_1B62E2EA0((uint64_t)&v124, (uint64_t (*)(void))sub_1B691F560);
                  sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                  goto LABEL_41;
                }
LABEL_50:
                sub_1B62C15C4(v123, (uint64_t)v120);
                sub_1B62C15C4((long long *)v127, (uint64_t)v119);
                uint64_t v41 = v121;
                uint64_t v42 = v122;
                sub_1B62C14BC(v120, v121);
                LOBYTE(v41) = sub_1B6B3D86C(v119, v41, v42);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v119);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v120);
                sub_1B6391400((uint64_t)&v124);
                sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                if ((v41 & 1) == 0)
                {
LABEL_41:
                  ++v37;
                  v36 += 72;
                  if (v35 == v37)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v50 = v113;
LABEL_64:
                    uint64_t v51 = *(void *)(v50 + 240) - *(void *)(v50 + 232);
                    uint64_t v52 = ecs_stack_allocator_allocate(v111[4], 8 * v51, 8);
                    *uint64_t v52 = v107;
                    sub_1B639192C((uint64_t)&v131, (uint64_t)&v124);
                    *(void *)uint64_t v127 = v52;
                    *(void *)&v127[8] = v51;
                    *(void *)&v127[16] = 1;
                    float v53 = (void *)v111[13];
                    char v54 = swift_isUniquelyReferenced_nonNull_native();
                    v111[13] = v53;
                    uint64_t v20 = v108;
                    if ((v54 & 1) == 0)
                    {
                      float v53 = sub_1B68C0C6C(0, v53[2] + 1, 1, v53);
                      *uint64_t v101 = v53;
                    }
                    unint64_t v56 = v53[2];
                    unint64_t v55 = v53[3];
                    if (v56 >= v55 >> 1)
                    {
                      float v53 = sub_1B68C0C6C(v55 > 1, v56 + 1, 1, v53);
                      *uint64_t v101 = v53;
                    }
                    _OWORD v53[2] = v56 + 1;
                    int64_t v57 = &v53[9 * v56];
                    *((_OWORD *)v57 + 2) = v124;
                    long long v58 = v125;
                    long long v59 = v126;
                    long long v60 = *(_OWORD *)v127;
                    void v57[12] = *(void *)&v127[16];
                    *((_OWORD *)v57 + 4) = v59;
                    *((_OWORD *)v57 + 5) = v60;
                    *((_OWORD *)v57 + 3) = v58;
                    goto LABEL_18;
                  }
                  continue;
                }
LABEL_60:
                swift_bridgeObjectRelease();
                float v47 = sub_1B6B1B930();
                uint64_t v48 = *(void *)(v46 + 48);
                if (v48)
                {
                  uint64_t v49 = *(void *)(v46 + 64);
                  *(void *)(v48 + 8 * v49) = v107;
                  *(void *)(v46 + 64) = v49 + 1;
                }
                ((void (*)(long long *, void))v47)(&v124, 0);
                uint64_t v20 = v108;
LABEL_18:
                sub_1B6391400((uint64_t)&v131);
                swift_release();
LABEL_19:
                if (++v19 != v12) {
                  goto LABEL_20;
                }
LABEL_14:
                uint64_t v7 = v109;
                sub_1B6345178(v111, (unsigned __int16 **)v115, (uint64_t)v142);
                sub_1B634507C((char *)v113);
                ecs_stack_allocator_pop_snapshot(v4);
                if (v5)
                {
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v113 + 344));
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v113 + 376));
                }
                swift_release();
                uint64_t v6 = v110 + 1;
                if (v110 + 1 == v106)
                {
                  sub_1B632F170(v134);
                  return sub_1B632F170(v134);
                }
                break;
              case 4:
                sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                if (v129 != 4) {
                  goto LABEL_40;
                }
                int v43 = LOBYTE(v123[0]);
                int v44 = v127[0];
                sub_1B6391400((uint64_t)&v124);
                sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                BOOL v40 = v43 == v44;
                goto LABEL_54;
              case 5:
                if (v129 != 5) {
                  goto LABEL_40;
                }
                int8x16_t v45 = vorrq_s8(*(int8x16_t *)&v127[8], v128);
                if (*(void *)&vorr_s8(*(int8x8_t *)v45.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL)) | *(void *)v127) {
                  goto LABEL_40;
                }
                sub_1B6391400((uint64_t)&v124);
                sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                goto LABEL_60;
              default:
                sub_1B639192C((uint64_t)&v124, (uint64_t)v123);
                if (v129) {
                  goto LABEL_40;
                }
LABEL_46:
                uint64_t v38 = *(void *)&v123[0];
                uint64_t v39 = *(void *)v127;
                sub_1B6391400((uint64_t)&v124);
                sub_1B62E2EA0((uint64_t)v130, (uint64_t (*)(void))sub_1B63B29DC);
                BOOL v40 = v38 == v39;
LABEL_54:
                if (!v40) {
                  goto LABEL_41;
                }
                goto LABEL_60;
            }
            break;
          }
        }
      }
    }
    return sub_1B632F170(v134);
  }
  return result;
}

uint64_t sub_1B6303904(uint64_t a1, uint64_t a2)
{
  sub_1B62FA30C(0, &qword_1EB97FAB0, (void (*)(uint64_t))sub_1B6303984);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B6303984()
{
  unint64_t result = qword_1EB97FAA0;
  if (!qword_1EB97FAA0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB97FAA0);
  }
  return result;
}

BOOL sub_1B63039DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v9 + 152);
  unsigned int v11 = v10(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  BOOL v12 = v11 <= 0xFF && ((unsigned int (*)(uint64_t, uint64_t))v10)(a1, a2) > 0xA;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  return v12;
}

const char *sub_1B6303B10()
{
  return "ParticleRendererPrepare";
}

uint64_t sub_1B6303B24()
{
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = -2;
  return result;
}

uint64_t sub_1B6303B50(uint64_t a1)
{
  return sub_1B6303B78(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B6303B78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v14 = *(_OWORD *)(a1 + 208);
  v26[12] = *(_OWORD *)(a1 + 192);
  v26[13] = v14;
  v26[14] = *(_OWORD *)(a1 + 224);
  uint64_t v27 = *(void *)(a1 + 240);
  long long v15 = *(_OWORD *)(a1 + 144);
  v26[8] = *(_OWORD *)(a1 + 128);
  v26[9] = v15;
  long long v16 = *(_OWORD *)(a1 + 176);
  v26[10] = *(_OWORD *)(a1 + 160);
  v26[11] = v16;
  long long v17 = *(_OWORD *)(a1 + 80);
  v26[4] = *(_OWORD *)(a1 + 64);
  void v26[5] = v17;
  long long v18 = *(_OWORD *)(a1 + 112);
  v26[6] = *(_OWORD *)(a1 + 96);
  void v26[7] = v18;
  long long v19 = *(_OWORD *)(a1 + 16);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v19;
  long long v20 = *(_OWORD *)(a1 + 48);
  _OWORD v26[2] = *(_OWORD *)(a1 + 32);
  void v26[3] = v20;
  sub_1B63427E4((uint64_t)v26);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  long long v22 = sub_1B6303E64(MEMORY[0x1E4FBC860]);
  int v23 = sub_1B6303CBC(v21);
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = v23;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v21;
  *(void *)(a1 + 48) = v21;
  *(void *)(a1 + 56) = v21;
  *(void *)(a1 + 64) = v21;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v21;
  *(void *)(a1 + 88) = v21;
  *(void *)(a1 + 96) = v21;
  *(void *)(a1 + 104) = v21;
  *(void *)(a1 + 112) = v21;
  *(void *)(a1 + 120) = v21;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = v21;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 208) = xmmword_1B6E77050;
  *(_DWORD *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  return sub_1B62E39E0(a1, a3, a4, a5, a6, a7, a8);
}

void *sub_1B6303CBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B63117E4();
  long long v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (long long *)(a1 + 32);
  do
  {
    long long v5 = v4[11];
    *(_OWORD *)uint64_t v31 = v4[10];
    *(_OWORD *)&v31[16] = v5;
    *(_OWORD *)&v31[32] = v4[12];
    long long v6 = v4[7];
    long long v27 = v4[6];
    long long v28 = v6;
    long long v7 = v4[9];
    long long v29 = v4[8];
    long long v30 = v7;
    long long v8 = v4[3];
    *(_OWORD *)&v26[32] = v4[2];
    *(_OWORD *)&v26[48] = v8;
    long long v9 = v4[5];
    *(_OWORD *)&v26[64] = v4[4];
    *(_OWORD *)&v26[80] = v9;
    long long v11 = *v4;
    long long v10 = v4[1];
    v4 += 13;
    *(_OWORD *)uint64_t v26 = v11;
    *(_OWORD *)&v26[16] = v10;
    *(_DWORD *)uint64_t v32 = v11;
    *(_OWORD *)&v32[8] = *(_OWORD *)&v26[8];
    *(_OWORD *)&v32[24] = *(_OWORD *)&v26[24];
    *(_OWORD *)&unsigned char v32[40] = *(_OWORD *)&v26[40];
    *(_OWORD *)&v32[56] = *(_OWORD *)&v26[56];
    *(_OWORD *)&v32[72] = *(_OWORD *)&v26[72];
    *(void *)&v32[88] = *(void *)&v26[88];
    sub_1B6311200((int64x2_t *)v32);
    *(void *)((char *)v3 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    uint64_t v13 = (_OWORD *)(v3[6] + 96 * v12);
    long long v14 = *(_OWORD *)&v32[48];
    _OWORD v13[2] = *(_OWORD *)&v32[32];
    v13[3] = v14;
    long long v15 = *(_OWORD *)&v32[80];
    void v13[4] = *(_OWORD *)&v32[64];
    v13[5] = v15;
    long long v16 = *(_OWORD *)&v32[16];
    *uint64_t v13 = *(_OWORD *)v32;
    v13[1] = v16;
    uint64_t v17 = v3[7] + 112 * v12;
    uint64_t v18 = v28;
    char v19 = BYTE8(v28);
    uint64_t v20 = *(void *)v31;
    *(void *)&long long v16 = *(void *)&v31[40];
    long long v21 = v29;
    long long v22 = v30;
    long long v23 = *(_OWORD *)&v31[8];
    long long v24 = *(_OWORD *)&v31[24];
    *(_OWORD *)uint64_t v17 = v27;
    *(void *)(v17 + 16) = v18;
    *(unsigned char *)(v17 + 24) = v19;
    *(_OWORD *)(v17 + 32) = v21;
    *(_OWORD *)(v17 + 48) = v22;
    *(void *)(v17 + 64) = v20;
    *(_OWORD *)(v17 + 72) = v23;
    *(_OWORD *)(v17 + 88) = v24;
    *(void *)(v17 + 104) = v16;
    ++v3[2];
    sub_1B67F800C((uint64_t)v26);
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B6303E64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F78A0(0, (unint64_t *)&unk_1E9DD5130, (void (*)(uint64_t))sub_1B67F813C);
  long long v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    uint64_t v8 = 8 * v7;
    *(void *)(v3[6] + v8) = v5;
    *(void *)(v3[7] + v8) = v6;
    ++v3[2];
    swift_bridgeObjectRetain();
    v4 += 2;
    --v1;
  }
  while (v1);
  return v3;
}

uint64_t sub_1B6303F60(uint64_t result)
{
  uint64_t v1 = result + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  if (*(unsigned char *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96) == 1 && (*(unsigned char *)(v1 + 99) & 1) == 0)
  {
    uint64_t v2 = result;
    long long v3 = *(void **)(result + 176);
    swift_retain();
    sub_1B6309F80((uint64_t)&type metadata for TriggerListComponent, (uint64_t)&off_1F0F844E0, v3, &v100);
    swift_release();
    uint64_t v4 = *(void **)(v2 + 176);
    swift_retain();
    uint64_t v5 = sub_1B6304AB4((uint64_t)&type metadata for IncommingTickedEventsComponent, (uint64_t)&off_1F0F9A158, v4);
    swift_release();
    uint64_t v6 = *(void **)(v2 + 176);
    swift_retain();
    uint64_t v74 = sub_1B6304AB4((uint64_t)&type metadata for TickedEventsComponent, (uint64_t)&off_1F0F8BCF8, v6);
    swift_release();
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    v122[5] = qword_1EB997A18;
    int v123 = 0;
    char v124 = 2;
    uint64_t v125 = 0;
    char v126 = 2;
    uint64_t v127 = 0;
    swift_retain();
    sub_1B6304DF8(1, 1, (uint64_t)v102);
    swift_release();
    v99[0] = (uint64_t)sub_1B6304D00(MEMORY[0x1E4FBC860]);
    v118[0] = v102[0];
    v118[1] = v102[1];
    uint64_t v119 = v103;
    sub_1B62C9DA8(v2, (uint64_t)v118, 0x200000000, v104);
    sub_1B62CA27C((uint64_t)v104, (uint64_t)v105, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v105[0])
    {
      long long v112 = v105[0];
      long long v113 = v105[1];
      uint64_t v114 = v106;
      uint64_t v77 = v1;
      uint64_t v96 = v2;
      if (v111 >= 1)
      {
        uint64_t v86 = v108;
        if (v108)
        {
          uint64_t v73 = v5;
          uint64_t v83 = v107;
          unint64_t v7 = v110;
          uint64_t v8 = v110[4];
          uint64_t v94 = v109;
          int v9 = *(unsigned __int8 *)(v109 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v10 = type metadata accessor for TriggerScript(0);
          sub_1B63396FC(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          int64_t v97 = v7;
          uint64_t v78 = v7 + 8;
          uint64_t v79 = (uint64_t)(v7 + 6);
          uint64_t v80 = v11;
          uint64_t v81 = v10;
          uint64_t v75 = v11 - 8;
          uint64_t v76 = v10 - 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v12 = 0;
          int v82 = v9;
          uint64_t v84 = v8;
          do
          {
            uint64_t v91 = v12;
            uint64_t v13 = (unsigned int *)(v83 + 48 * v12);
            uint64_t v14 = *v13;
            uint64_t v87 = v13[1];
            uint64_t v15 = v13[2];
            long long v16 = (uint64_t *)*((void *)v13 + 2);
            uint64_t v92 = *((void *)v13 + 3);
            uint64_t v17 = *((void *)v13 + 4);
            uint64_t v18 = *((void *)v13 + 5);
            if (v9)
            {
              char v19 = *(os_unfair_lock_s **)(v18 + 376);
              swift_retain();
              os_unfair_lock_lock(v19);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v8);
            sub_1B62CA27C(v79, (uint64_t)v120, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v89 = v97[4];
            uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v18 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v97[6] = ecs_stack_allocator_allocate(v89, 48 * v20, 8);
            v97[7] = v20;
            v78[1] = 0;
            v78[2] = 0;
            *uint64_t v78 = 0;
            swift_release();
            uint64_t v21 = sub_1B62C9024(v81, (uint64_t)&off_1F0F625B0, v16, v92, v17, (uint64_t)v97);
            uint64_t v22 = sub_1B62C9024(v80, (uint64_t)&off_1F0F61BF0, v16, v92, v17, (uint64_t)v97);
            uint64_t v23 = v22;
            if (v16)
            {
              if (v17)
              {
                uint64_t v24 = *(void *)(*(void *)v76 + 72);
                uint64_t v25 = *(void *)(*(void *)v75 + 72);
                do
                {
                  uint64_t v26 = *v16++;
                  v121[0] = v94;
                  v121[1] = v18;
                  v121[2] = v97;
                  v121[3] = v15;
                  v121[4] = v26;
                  sub_1B6784918((uint64_t)v121, v21, v23, v96, v99);
                  ++v15;
                  v23 += v25;
                  v21 += v24;
                  --v17;
                }
                while (v17);
              }
            }
            else if (v14 != v87)
            {
              uint64_t v27 = *(void *)(*(void *)v76 + 72);
              uint64_t v28 = *(void *)(*(void *)v75 + 72);
              uint64_t v29 = v22 + v28 * v14;
              uint64_t v30 = v21 + v27 * v14;
              do
              {
                v122[0] = v94;
                v122[1] = v18;
                _OWORD v122[2] = v97;
                v122[3] = v15;
                v122[4] = v14;
                sub_1B6784918((uint64_t)v122, v30, v29, v96, v99);
                ++v14;
                ++v15;
                v29 += v28;
                v30 += v27;
              }
              while (v87 != v14);
            }
            v115[0] = v112;
            v115[1] = v113;
            uint64_t v116 = v114;
            sub_1B6345178(v97, (unsigned __int16 **)v115, (uint64_t)v120);
            sub_1B634507C((char *)v18);
            uint64_t v8 = v84;
            ecs_stack_allocator_pop_snapshot(v84);
            int v9 = v82;
            if (v82)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
            }
            swift_release();
            uint64_t v12 = v91 + 1;
          }
          while (v91 + 1 != v86);
          sub_1B632F170(v104);
          uint64_t v2 = v96;
          uint64_t v1 = v77;
          uint64_t v5 = v73;
        }
      }
      uint64_t v31 = *(void **)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_world);
      id v32 = v31;
      if (v31)
      {
        int8x16_t v85 = v32;
        v117[0] = v74;
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1B66419DC(v5);
        uint64_t v34 = v117[0];
        v117[0] = MEMORY[0x1E4FBC860];
        uint64_t v35 = *(void **)(v2 + 176);
        MEMORY[0x1F4188790](v33, v36);
        swift_retain();
        sub_1B636E6CC((uint64_t)&type metadata for IncommingTickedEventsComponent, (uint64_t)&off_1F0F9A158, v35, (void (*)(uint64_t))sub_1B6786E64);
        swift_release();
        uint64_t v37 = *(void *)(v34 + 16);
        if (v37)
        {
          uint64_t v38 = 0;
          uint64_t v39 = v34 + 32;
          BOOL v40 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v88 = v39;
          uint64_t v90 = v37;
          while (1)
          {
            uint64_t v41 = v39 + 24 * v38;
            uint64_t v42 = *(void **)v41;
            int v43 = *(_DWORD *)(v41 + 8);
            double v44 = *(double *)(v41 + 16);
            if (v44 > *(double *)(v1 + 48))
            {
              id v45 = v42;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                BOOL v40 = sub_1B68C26CC(0, v40[2] + 1, 1, v40);
              }
              unint64_t v47 = v40[2];
              unint64_t v46 = v40[3];
              if (v47 >= v46 >> 1) {
                BOOL v40 = sub_1B68C26CC(v46 > 1, v47 + 1, 1, v40);
              }
              _OWORD v40[2] = v47 + 1;
              uint64_t v48 = &v40[3 * v47];
              v48[4] = v45;
              *((_DWORD *)v48 + 10) = v43;
              *((double *)v48 + 6) = v44;

              goto LABEL_29;
            }
            uint64_t v49 = v99[0];
            uint64_t v50 = *(void *)(v99[0] + 16);
            long long v98 = v40;
            id v93 = v42;
            uint64_t v95 = v38;
            if (!v50) {
              goto LABEL_40;
            }
            uint64_t v51 = @"VFXTriggerTypeTicked";
            uint64_t v52 = sub_1B69FAD60(v51);
            if ((v53 & 1) == 0) {
              break;
            }
            char v54 = *(void **)(*(void *)(v49 + 56) + 8 * v52);
            swift_bridgeObjectRetain();

LABEL_41:
            uint64_t v55 = 0;
            unint64_t v56 = v54 + 8;
            uint64_t v57 = 1 << *((unsigned char *)v54 + 32);
            if (v57 < 64) {
              uint64_t v58 = ~(-1 << v57);
            }
            else {
              uint64_t v58 = -1;
            }
            unint64_t v59 = v58 & v54[8];
            int64_t v60 = (unint64_t)(v57 + 63) >> 6;
            while (1)
            {
              if (v59)
              {
                unint64_t v61 = __clz(__rbit64(v59));
                v59 &= v59 - 1;
                unint64_t v62 = v61 | (v55 << 6);
                goto LABEL_61;
              }
              uint64_t v63 = v55 + 1;
              if (v55 + 1 >= v60) {
                goto LABEL_28;
              }
              unint64_t v64 = v56[v63];
              if (!v64)
              {
                uint64_t v63 = v55 + 2;
                if (v55 + 2 >= v60) {
                  goto LABEL_28;
                }
                unint64_t v64 = v56[v63];
                if (!v64)
                {
                  uint64_t v63 = v55 + 3;
                  if (v55 + 3 >= v60) {
                    goto LABEL_28;
                  }
                  unint64_t v64 = v56[v63];
                  if (!v64)
                  {
                    uint64_t v63 = v55 + 4;
                    if (v55 + 4 >= v60) {
                      goto LABEL_28;
                    }
                    unint64_t v64 = v56[v63];
                    if (!v64)
                    {
                      uint64_t v63 = v55 + 5;
                      if (v55 + 5 >= v60) {
                        goto LABEL_28;
                      }
                      unint64_t v64 = v56[v63];
                      if (!v64) {
                        break;
                      }
                    }
                  }
                }
              }
LABEL_60:
              unint64_t v59 = (v64 - 1) & v64;
              unint64_t v62 = __clz(__rbit64(v64)) + (v63 << 6);
              uint64_t v55 = v63;
LABEL_61:
              uint64_t v65 = v54[7];
              uint64_t v66 = v65 + 40 * v62;
              if ((*(unsigned char *)(v66 + 20) & 1) == 0 && *(_DWORD *)(v66 + 16) == v43)
              {
                uint64_t v67 = v65 + 40 * v62;
                unint64_t v68 = *(void (**)(void))(v67 + 24);
                id v69 = *(id *)v67;
                swift_retain();
                v68(MEMORY[0x1E4FBC868]);
                swift_release();
              }
            }
            while (v60 - 6 != v55)
            {
              unint64_t v64 = v54[v55++ + 14];
              if (v64)
              {
                uint64_t v63 = v55 + 5;
                goto LABEL_60;
              }
            }
LABEL_28:

            swift_release();
            uint64_t v1 = v77;
            BOOL v40 = v98;
            uint64_t v39 = v88;
            uint64_t v37 = v90;
            uint64_t v38 = v95;
LABEL_29:
            if (++v38 == v37)
            {
              swift_bridgeObjectRelease();
              goto LABEL_67;
            }
          }

LABEL_40:
          char v54 = sub_1B67F4FCC(MEMORY[0x1E4FBC860]);
          goto LABEL_41;
        }
        swift_bridgeObjectRelease();
        BOOL v40 = (void *)MEMORY[0x1E4FBC860];
LABEL_67:
        swift_bridgeObjectRetain();
        uint64_t v70 = swift_bridgeObjectRelease();
        v117[0] = v40;
        uint64_t v71 = *(void **)(v96 + 176);
        MEMORY[0x1F4188790](v70, v72);
        swift_retain();
        sub_1B636E6CC((uint64_t)&type metadata for TickedEventsComponent, (uint64_t)&off_1F0F8BCF8, v71, (void (*)(uint64_t))sub_1B6786E80);
        swift_bridgeObjectRelease();
        swift_release();
        if (*(void *)(v101 + 16))
        {
          sub_1B6786ECC(v101 + 32, v117);
          swift_bridgeObjectRetain();
          sub_1B6786090((uint64_t)v117, (unint64_t *)&unk_1E9DCFCC0, (uint64_t)&type metadata for TriggerOSEvent);
          uint64_t result = sub_1B6E32BE8();
          __break(1u);
          return result;
        }

        sub_1B6784DA0(&v100, v96, (uint64_t)v102);
        sub_1B62CA064((uint64_t)v102);
        sub_1B632F170(v104);
        sub_1B6317E5C((uint64_t)&v100);
      }
      else
      {
        sub_1B6784DA0(&v100, v2, (uint64_t)v102);
        sub_1B62CA064((uint64_t)v102);
        sub_1B632F170(v104);
        sub_1B6317E5C((uint64_t)&v100);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B6317E5C((uint64_t)&v100);
      sub_1B62CA064((uint64_t)v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6304AB4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6304ACC(a1, a2, a3);
}

uint64_t sub_1B6304ACC(uint64_t a1, uint64_t a2, void *a3)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v6 = sub_1B636E9A8(a1);
  if (v7 != 2)
  {
    unint64_t v10 = v8;
    uint64_t v13 = a3[2];
    uint64_t v11 = (uint64_t *)(v13 + v6);
    if (v7)
    {
LABEL_11:
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + 32 * v10 + 24));
      os_unfair_recursive_lock_unlock();
      uint64_t v15 = *v11;
      long long v16 = *(os_unfair_lock_s **)(a3[4] + 32 * v10 + 24);
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v16);
      return v15;
    }
    uint64_t v12 = v13 + v6;
    uint64_t v9 = a1;
LABEL_6:
    sub_1B636E480(v12, 1, v9);
    uint64_t v14 = 1 << v10;
    if (v10 >= 0x40) {
      uint64_t v14 = 0;
    }
    if (v10 > 0x40) {
      uint64_t v14 = 0;
    }
    a3[15] |= v14;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v18);
  if (v21 + v20 <= 4096)
  {
    unint64_t v10 = v18;
    uint64_t v9 = v19;
    uint64_t v11 = (uint64_t *)(a3[2] + v21);
    uint64_t v12 = (uint64_t)v11;
    goto LABEL_6;
  }
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v22 = 4096;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void *sub_1B6304D00(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F752C();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 40);
      do
      {
        uint64_t v5 = *v4;
        id v6 = (id)*(v4 - 1);
        swift_bridgeObjectRetain();
        unint64_t v7 = sub_1B69FAD60(v6);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        uint64_t v8 = 8 * v7;
        *(void *)(v2[6] + v8) = v6;
        *(void *)(v2[7] + v8) = v5;
        ++v2[2];
        v4 += 2;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B6304DF8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for TriggerScript(0);
  sub_1B63396FC(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F625E0;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F61C20;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t type metadata accessor for TriggerScript(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1EB981078);
}

uint64_t sub_1B63050B4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 368);
    if (v2)
    {
      swift_retain();
      swift_unknownObjectRetain();
      sub_1B6388C28();
      objc_msgSend(v2, sel_commit);
      swift_unknownObjectRelease();
      *(void *)(v1 + 368) = 0;
      swift_unknownObjectRelease();
      *(unsigned char *)(v1 + 32) = 0;
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B6305148(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 272);
    v2[4] = 0;
    v2[5] = 0;
    v2[3] = 2;
  }
  return result;
}

uint64_t *sub_1B6305174(uint64_t a1)
{
  float v2 = *(float *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64);
  long long v3 = *(_OWORD *)(v1 + 32);
  v45[0] = *(_OWORD *)(v1 + 16);
  v45[1] = v3;
  uint64_t v46 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v45, 0x200000000, v34);
  uint64_t result = (uint64_t *)sub_1B63175D8((uint64_t)v34, (uint64_t)v35, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v35[0])
  {
    if (v41 >= 1)
    {
      uint64_t v29 = v38;
      if (v38)
      {
        uint64_t v5 = v40;
        uint64_t v33 = v40[4];
        int v32 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v42[0] = v35[0];
        v42[1] = v35[1];
        uint64_t v43 = v36;
        uint64_t v27 = (uint64_t)(v40 + 6);
        uint64_t v28 = v37;
        uint64_t v26 = v40 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        while (1)
        {
          uint64_t v8 = (unsigned int *)(v28 + 48 * v6);
          uint64_t v9 = *v8;
          uint64_t v10 = (uint64_t *)*((void *)v8 + 2);
          uint64_t v11 = *((void *)v8 + 3);
          uint64_t v13 = *((void *)v8 + 4);
          uint64_t v12 = *((void *)v8 + 5);
          uint64_t v30 = v8[1];
          uint64_t v31 = v7;
          if (v32)
          {
            uint64_t v14 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v33);
          sub_1B63175D8(v27, (uint64_t)v44, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v15 = v5[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          void v5[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v5[7] = v16;
          v26[1] = 0;
          _OWORD v26[2] = 0;
          *uint64_t v26 = 0;
          swift_release();
          uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v10, v11, v13, (uint64_t)v5);
          uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v10, v11, v13, (uint64_t)v5);
          if (v10)
          {
            if (!v13) {
              goto LABEL_15;
            }
            uint64_t v19 = (float *)(v17 + 52);
            uint64_t v20 = (float *)(v18 + 96);
            uint64_t v7 = v31;
            do
            {
              float v21 = *v19;
              v19 += 22;
              *uint64_t v20 = *v20 + (float)(v2 * v21);
              v20 += 164;
              --v13;
            }
            while (v13);
          }
          else
          {
            if (v9 == v30)
            {
LABEL_15:
              uint64_t v7 = v31;
              goto LABEL_18;
            }
            uint64_t v22 = (float *)(v18 + 656 * v9 + 96);
            uint64_t v23 = v30 - v9;
            int v24 = (float *)(v17 + 88 * v9 + 52);
            uint64_t v7 = v31;
            do
            {
              float v25 = *v24;
              v24 += 22;
              *uint64_t v22 = *v22 + (float)(v2 * v25);
              v22 += 164;
              --v23;
            }
            while (v23);
          }
LABEL_18:
          sub_1B6345178(v5, (unsigned __int16 **)v42, (uint64_t)v44);
          sub_1B634507C((char *)v12);
          ecs_stack_allocator_pop_snapshot(v33);
          if (v32)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          if (++v6 == v29)
          {
            sub_1B632F170(v34);
            return sub_1B632F170(v34);
          }
        }
      }
    }
    return sub_1B632F170(v34);
  }
  return result;
}

const char *sub_1B63054C8()
{
  return "Burst Spawn";
}

uint64_t *sub_1B63054E0(uint64_t *a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  swift_retain();
  long long v3 = sub_1B63058E4();
  sub_1B6319E94((uint64_t)v3, v4, v5, v6, 32, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(v1 + 32);
  v41[0] = *(_OWORD *)(v1 + 16);
  v41[1] = v7;
  uint64_t v42 = *(void *)(v1 + 48);
  sub_1B62C9DA8(v2, (uint64_t)v41, 0x200000000, v43);
  sub_1B62CA210((uint64_t)v43, (uint64_t)v44, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v44[0]) {
    return (uint64_t *)swift_release();
  }
  if (v50 <= 0)
  {
    swift_release();
  }
  else
  {
    uint64_t v34 = v47;
    if (v47)
    {
      uint64_t v8 = v49;
      uint64_t v9 = v49[4];
      char v37 = *(unsigned char *)(v48 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v39[0] = v44[0];
      v39[1] = v44[1];
      uint64_t v40 = v45;
      uint64_t v31 = (uint64_t)(v49 + 6);
      uint64_t v32 = v46;
      uint64_t v30 = v49 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v33 = v9;
      while (1)
      {
        uint64_t v12 = (unsigned int *)(v32 + 48 * v10);
        uint64_t v13 = *v12;
        uint64_t v15 = (uint64_t *)*((void *)v12 + 2);
        uint64_t v14 = *((void *)v12 + 3);
        uint64_t v17 = *((void *)v12 + 4);
        uint64_t v16 = *((void *)v12 + 5);
        uint64_t v35 = v12[1];
        uint64_t v36 = v11;
        if (v37)
        {
          uint64_t v18 = *(os_unfair_lock_s **)(v16 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v18);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v9);
        sub_1B62CA210(v31, (uint64_t)v51, &qword_1EB97DE20);
        uint64_t v19 = v8[4];
        uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
        _OWORD v8[7] = v20;
        v30[1] = 0;
        _OWORD v30[2] = 0;
        *uint64_t v30 = 0;
        swift_release();
        float v21 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v15, v14, v17, (uint64_t)v8);
        uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v15, v14, v17, (uint64_t)v8);
        uint64_t v23 = (float *)v22;
        if (v15)
        {
          if (!v17) {
            goto LABEL_15;
          }
          uint64_t v11 = v36;
          do
          {
            float v24 = *v23++;
            *float v21 = vmulq_n_f32(*v21, fminf(fmaxf(sample_curve((uint64_t)v38, v24), 0.0), 1.0));
            ++v21;
            --v17;
          }
          while (v17);
        }
        else
        {
          if (v13 == v35)
          {
LABEL_15:
            uint64_t v11 = v36;
            goto LABEL_18;
          }
          uint64_t v25 = v35 - v13;
          uint64_t v26 = (float *)(v22 + 4 * v13);
          uint64_t v27 = &v21[v13];
          uint64_t v11 = v36;
          do
          {
            float v28 = *v26++;
            *uint64_t v27 = vmulq_n_f32(*v27, fminf(fmaxf(sample_curve((uint64_t)v38, v28), 0.0), 1.0));
            ++v27;
            --v25;
          }
          while (v25);
        }
LABEL_18:
        sub_1B6345178(v8, (unsigned __int16 **)v39, (uint64_t)v51);
        sub_1B634507C((char *)v16);
        uint64_t v9 = v33;
        ecs_stack_allocator_pop_snapshot(v33);
        if (v37)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
        }
        swift_release();
        if (++v10 == v34) {
          goto LABEL_24;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_24:
    swift_release();
    sub_1B632F170(v43);
  }
  return sub_1B632F170(v43);
}

char *sub_1B63058E4()
{
  uint64_t v1 = *(void *)v0;
  int v3 = *(_DWORD *)(v0 + 8);
  int v2 = *(_DWORD *)(v0 + 12);
  swift_retain();
  BOOL v4 = v3 == -1 && v2 == 0;
  if (!v4
    && (v3 & 0x80000000) == 0
    && *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v3
    && ((uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v2 == -1)
     || *(_DWORD *)(v5 + 12 * v3 + 8) == v2))
  {
    uint64_t v6 = sub_1B6359960(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * v3) + 32), *(_DWORD *)(v5 + 12 * v3), *(_WORD *)(v5 + 12 * v3 + 4), 32, v1);
    swift_release();
    if (v6) {
      return (char *)v6;
    }
  }
  else
  {
    swift_release();
  }
  return sub_1B6D3EC54((uint64_t)&unk_1F0F9B388);
}

uint64_t *sub_1B63059F4(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  v14[0] = *(_OWORD *)(v1 + 16);
  v14[1] = v3;
  uint64_t v15 = *(void *)(v1 + 48);
  sub_1B63061D8((uint64_t)v14, a1, (void (*)(uint64_t *, uint64_t))sub_1B6D966F8, sub_1B63061D4, (void (*)(void *, uint64_t))sub_1B636B8EC);
  long long v4 = *(_OWORD *)(v1 + 72);
  v12[0] = *(_OWORD *)(v1 + 56);
  v12[1] = v4;
  uint64_t v13 = *(void *)(v1 + 88);
  sub_1B63061D8((uint64_t)v12, a1, (void (*)(uint64_t *, uint64_t))sub_1B6D95C74, sub_1B63061D4, (void (*)(void *, uint64_t))sub_1B6666384);
  long long v5 = *(_OWORD *)(v1 + 112);
  v10[0] = *(_OWORD *)(v1 + 96);
  v10[1] = v5;
  uint64_t v11 = *(void *)(v1 + 128);
  sub_1B6305BE4((uint64_t)v10, a1, (void (*)(uint64_t *, uint64_t))sub_1B6D95130, sub_1B63061D4, (uint64_t (*)(void))sub_1B63B667C, (uint64_t (*)(void))sub_1B6666970, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  long long v6 = *(_OWORD *)(v1 + 152);
  v8[0] = *(_OWORD *)(v1 + 136);
  v8[1] = v6;
  uint64_t v9 = *(void *)(v1 + 168);
  return sub_1B6305BE4((uint64_t)v8, a1, (void (*)(uint64_t *, uint64_t))sub_1B6D946FC, sub_1B63061D4, (uint64_t (*)(void))sub_1B63B65C8, (uint64_t (*)(void))sub_1B66668BC, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
}

uint64_t *sub_1B6305BE4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(void), uint64_t (*a6)(void), unint64_t *a7, uint64_t (*a8)(uint64_t, void, unint64_t))
{
  long long v12 = *(_OWORD *)(a1 + 16);
  v103[0] = *(_OWORD *)a1;
  v103[1] = v12;
  uint64_t v104 = *(void *)(a1 + 32);
  uint64_t v121 = *(void *)&v103[0];
  int v122 = DWORD2(v103[0]);
  char v123 = BYTE12(v103[0]);
  uint64_t v124 = v12 | 4;
  char v125 = 2;
  uint64_t v126 = v104;
  swift_retain();
  sub_1B62C9DA8(a2, (uint64_t)&v121, 0x200000000, v85);
  sub_1B62D7410((uint64_t)v85, (uint64_t)&v92, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v92)
  {
    uint64_t v110 = v92;
    int v111 = v93;
    char v112 = v94;
    uint64_t v113 = v95;
    char v114 = v96;
    uint64_t v115 = v97;
    uint64_t v116 = v98;
    long long v117 = v99;
    long long v118 = v100;
    uint64_t v119 = v101;
    uint64_t v120 = v102;
    swift_retain();
    a3(&v110, a2);
    swift_release();
    sub_1B632F170(v85);
  }
  sub_1B62C9DA8(a2, (uint64_t)v103, 0x200000000, v86);
  sub_1B62D7410((uint64_t)v86, (uint64_t)v87, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v87[0]) {
    return (uint64_t *)a4(a1);
  }
  uint64_t v69 = v91;
  if (v91 <= 0)
  {
    a4(a1);
  }
  else
  {
    uint64_t v61 = a1;
    unint64_t v62 = (void (*)(uint64_t))a4;
    uint64_t v68 = v88;
    if (v88)
    {
      uint64_t v66 = v87[5];
      uint64_t v67 = a2;
      uint64_t v13 = v90;
      uint64_t v82 = v90[4];
      int v14 = *(unsigned __int8 *)(v89 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      unint64_t v64 = v90 + 8;
      uint64_t v65 = v89;
      uint64_t v83 = v87[0] + 41;
      uint64_t v84 = (unsigned __int16 *)v87[0];
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v15 = 0;
      int v63 = v14;
      while (1)
      {
        uint64_t v16 = (unsigned int *)(v66 + 48 * v15);
        uint64_t v17 = *v16;
        uint64_t v18 = v16[1];
        uint64_t v19 = v16[2];
        uint64_t v78 = v15;
        uint64_t v79 = *((void *)v16 + 2);
        uint64_t v20 = *((void *)v16 + 3);
        uint64_t v21 = *((void *)v16 + 4);
        uint64_t v22 = *((void *)v16 + 5);
        if (v14)
        {
          uint64_t v23 = *(os_unfair_lock_s **)(v22 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v23);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v82);
        uint64_t v74 = v13[7];
        uint64_t v75 = v13[6];
        uint64_t v76 = v13[9];
        uint64_t v77 = v13[8];
        uint64_t v80 = v13[10];
        uint64_t v24 = v13[4];
        uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v13[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
        v13[7] = v25;
        v64[1] = 0;
        _OWORD v64[2] = 0;
        *unint64_t v64 = 0;
        swift_release();
        v105[0] = v65;
        uint64_t v81 = v22;
        v105[1] = v22;
        _OWORD v105[2] = v13;
        v105[3] = v19;
        v105[4] = (v18 - v17 + v19);
        v105[5] = v69;
        v105[6] = v17;
        v105[7] = v18;
        v105[8] = 0;
        v105[9] = 0;
        char v106 = 1;
        uint64_t v107 = v79;
        uint64_t v108 = v20;
        uint64_t v109 = v21;
        sub_1B6666618(v105, v67, a5, a6, a7, a8);
        unint64_t v26 = v13[6];
        uint64_t v27 = v13[8];
        if (!v27)
        {
          uint64_t v53 = v13[7];
          char v54 = (void *)v13[4];
          int v14 = v63;
          uint64_t v56 = v77;
          uint64_t v55 = v78;
          uint64_t v59 = v74;
          uint64_t v58 = v75;
          uint64_t v57 = v76;
          goto LABEL_49;
        }
        for (uint64_t i = 0; i != v27; ++i)
        {
          uint64_t v30 = (uint64_t *)(v26 + 48 * i);
          uint64_t v31 = *v30;
          uint64_t v32 = (void (*)(uint64_t))v30[4];
          uint64_t v33 = v13[9];
          if (v33) {
            BOOL v34 = v31 == v33;
          }
          else {
            BOOL v34 = 0;
          }
          if (v34 || !v84[11]) {
            goto LABEL_13;
          }
          unint64_t v35 = v84[9];
          uint64_t v36 = (void *)(v83 + v84[8]);
          uint64_t v37 = v30[2];
          uint64_t v38 = v36;
          unint64_t v39 = v35 >> 4;
          uint64_t v40 = v83;
          if (v35 >= 0x10)
          {
            while (*v38 != v31)
            {
              ++v40;
              v38 += 2;
              if (!--v39) {
                goto LABEL_28;
              }
            }
            unsigned int v41 = *(unsigned __int8 *)(v40 + v84[10]);
            BOOL v42 = v41 > 5;
            int v43 = (1 << v41) & 0x23;
            if (v42 || v43 == 0)
            {
LABEL_13:
              uint64_t v29 = swift_retain();
              v32(v29);
              swift_release();
              continue;
            }
          }
LABEL_28:
          if (swift_conformsToProtocol2()) {
            uint64_t v45 = v37;
          }
          else {
            uint64_t v45 = 0;
          }
          if (v45)
          {
            if (v35 < 0x10) {
              goto LABEL_13;
            }
            uint64_t v46 = v36;
            unint64_t v47 = v35 >> 4;
            uint64_t v48 = v83;
            while (*v46 != v45)
            {
              ++v48;
              v46 += 2;
              if (!--v47) {
                goto LABEL_41;
              }
            }
            unsigned int v49 = *(unsigned __int8 *)(v48 + v84[10]);
            BOOL v42 = v49 > 5;
            int v50 = (1 << v49) & 0x23;
            if (v42 || v50 == 0) {
              goto LABEL_13;
            }
LABEL_41:
            uint64_t v52 = 16 * (v35 >> 4);
            while (*v36 != v45)
            {
              v36 += 2;
              v52 -= 16;
              if (!v52) {
                goto LABEL_13;
              }
            }
          }
        }
        uint64_t v53 = v13[7];
        unint64_t v26 = v13[6];
        char v54 = (void *)v13[4];
        int v14 = v63;
        uint64_t v56 = v77;
        uint64_t v55 = v78;
        uint64_t v57 = v76;
        if ((uint64_t)v13[8] >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v59 = v74;
        uint64_t v58 = v75;
LABEL_49:
        ecs_stack_allocator_deallocate(v54, v26, 48 * v53);
        v13[6] = v58;
        v13[7] = v59;
        v13[8] = v56;
        v13[9] = v57;
        v13[10] = v80;
        sub_1B634507C((char *)v81);
        ecs_stack_allocator_pop_snapshot(v82);
        if (v14)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 376));
        }
        swift_release();
        uint64_t v15 = v55 + 1;
        if (v15 == v68) {
          goto LABEL_54;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_54:
    v62(v61);
    sub_1B632F170(v86);
  }
  return sub_1B632F170(v86);
}

uint64_t *sub_1B63061D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t (*a4)(uint64_t), void (*a5)(void *, uint64_t))
{
  long long v9 = *(_OWORD *)(a1 + 16);
  v94[0] = *(_OWORD *)a1;
  v94[1] = v9;
  uint64_t v95 = *(void *)(a1 + 32);
  uint64_t v112 = *(void *)&v94[0];
  int v113 = DWORD2(v94[0]);
  char v114 = BYTE12(v94[0]);
  uint64_t v115 = v9 | 4;
  char v116 = 2;
  uint64_t v117 = v95;
  swift_retain();
  sub_1B62C9DA8(a2, (uint64_t)&v112, 0x200000000, v76);
  sub_1B62D7410((uint64_t)v76, (uint64_t)&v83, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v83)
  {
    uint64_t v101 = v83;
    int v102 = v84;
    char v103 = v85;
    uint64_t v104 = v86;
    char v105 = v87;
    uint64_t v106 = v88;
    uint64_t v107 = v89;
    long long v108 = v90;
    long long v109 = v91;
    uint64_t v110 = v92;
    uint64_t v111 = v93;
    swift_retain();
    a3(&v101, a2);
    swift_release();
    sub_1B632F170(v76);
  }
  sub_1B62C9DA8(a2, (uint64_t)v94, 0x200000000, v77);
  sub_1B62D7410((uint64_t)v77, (uint64_t)v78, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v78[0]) {
    return (uint64_t *)a4(a1);
  }
  uint64_t v63 = v82;
  if (v82 <= 0)
  {
    a4(a1);
  }
  else
  {
    uint64_t v55 = a1;
    uint64_t v56 = (void (*)(uint64_t))a4;
    uint64_t v62 = v79;
    if (v79)
    {
      uint64_t v60 = v78[5];
      uint64_t v61 = a2;
      uint64_t v10 = v81;
      uint64_t v72 = v81[4];
      int v11 = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v58 = v81 + 8;
      uint64_t v59 = v80;
      uint64_t v74 = v78[0] + 41;
      uint64_t v75 = (unsigned __int16 *)v78[0];
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v12 = 0;
      int v57 = v11;
      while (1)
      {
        uint64_t v13 = (unsigned int *)(v60 + 48 * v12);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        uint64_t v16 = v13[2];
        uint64_t v67 = v12;
        uint64_t v68 = *((void *)v13 + 2);
        uint64_t v17 = *((void *)v13 + 3);
        uint64_t v18 = *((void *)v13 + 4);
        uint64_t v19 = *((void *)v13 + 5);
        uint64_t v73 = v19;
        if (v11)
        {
          uint64_t v20 = *(os_unfair_lock_s **)(v19 + 376);
          swift_retain_n();
          uint64_t v21 = v20;
          uint64_t v19 = v73;
          os_unfair_lock_lock(v21);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v73 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v72);
        uint64_t v65 = v10[7];
        uint64_t v66 = v10[6];
        uint64_t v70 = v10[9];
        uint64_t v71 = v10[8];
        uint64_t v69 = v10[10];
        uint64_t v22 = v10[4];
        uint64_t v23 = *(void *)(*(void *)(*(void *)(*(void *)(v19 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v10[6] = ecs_stack_allocator_allocate(v22, 48 * v23, 8);
        v10[7] = v23;
        v58[1] = 0;
        _OWORD v58[2] = 0;
        *uint64_t v58 = 0;
        swift_release();
        v96[0] = v59;
        v96[1] = v19;
        v96[2] = v10;
        v96[3] = v16;
        v96[4] = (v15 - v14 + v16);
        v96[5] = v63;
        v96[6] = v14;
        v96[7] = v15;
        v96[8] = 0;
        v96[9] = 0;
        char v97 = 1;
        uint64_t v98 = v68;
        uint64_t v99 = v17;
        uint64_t v100 = v18;
        a5(v96, v61);
        unint64_t v24 = v10[6];
        uint64_t v25 = v10[8];
        if (!v25)
        {
          uint64_t v51 = v10[7];
          uint64_t v52 = (void *)v10[4];
          int v11 = v57;
          uint64_t v53 = v67;
          goto LABEL_48;
        }
        for (uint64_t i = 0; i != v25; ++i)
        {
          float v28 = (uint64_t *)(v24 + 48 * i);
          uint64_t v29 = *v28;
          uint64_t v30 = (void (*)(uint64_t))v28[4];
          uint64_t v31 = v10[9];
          if (v31) {
            BOOL v32 = v29 == v31;
          }
          else {
            BOOL v32 = 0;
          }
          if (v32 || !v75[11]) {
            goto LABEL_13;
          }
          unint64_t v33 = v75[9];
          BOOL v34 = (void *)(v74 + v75[8]);
          uint64_t v35 = v28[2];
          uint64_t v36 = v34;
          unint64_t v37 = v33 >> 4;
          uint64_t v38 = v74;
          if (v33 >= 0x10)
          {
            while (*v36 != v29)
            {
              ++v38;
              v36 += 2;
              if (!--v37) {
                goto LABEL_28;
              }
            }
            unsigned int v39 = *(unsigned __int8 *)(v38 + v75[10]);
            BOOL v40 = v39 > 5;
            int v41 = (1 << v39) & 0x23;
            if (v40 || v41 == 0)
            {
LABEL_13:
              uint64_t v27 = swift_retain();
              v30(v27);
              swift_release();
              continue;
            }
          }
LABEL_28:
          if (swift_conformsToProtocol2()) {
            uint64_t v43 = v35;
          }
          else {
            uint64_t v43 = 0;
          }
          if (v43)
          {
            if (v33 < 0x10) {
              goto LABEL_13;
            }
            double v44 = v34;
            unint64_t v45 = v33 >> 4;
            uint64_t v46 = v74;
            while (*v44 != v43)
            {
              ++v46;
              v44 += 2;
              if (!--v45) {
                goto LABEL_41;
              }
            }
            unsigned int v47 = *(unsigned __int8 *)(v46 + v75[10]);
            BOOL v40 = v47 > 5;
            int v48 = (1 << v47) & 0x23;
            if (v40 || v48 == 0) {
              goto LABEL_13;
            }
LABEL_41:
            uint64_t v50 = 16 * (v33 >> 4);
            while (*v34 != v43)
            {
              v34 += 2;
              v50 -= 16;
              if (!v50) {
                goto LABEL_13;
              }
            }
          }
        }
        uint64_t v51 = v10[7];
        unint64_t v24 = v10[6];
        uint64_t v52 = (void *)v10[4];
        int v11 = v57;
        uint64_t v53 = v67;
        if ((uint64_t)v10[8] >= 1) {
          swift_arrayDestroy();
        }
LABEL_48:
        ecs_stack_allocator_deallocate(v52, v24, 48 * v51);
        v10[6] = v66;
        v10[7] = v65;
        v10[8] = v71;
        v10[9] = v70;
        v10[10] = v69;
        sub_1B634507C((char *)v73);
        ecs_stack_allocator_pop_snapshot(v72);
        if (v11)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v73 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v73 + 376));
        }
        swift_release();
        uint64_t v12 = v53 + 1;
        if (v12 == v62) {
          goto LABEL_53;
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_53:
    v56(v55);
    sub_1B632F170(v77);
  }
  return sub_1B632F170(v77);
}

uint64_t *sub_1B63067D0(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  v47[0] = *(_OWORD *)(v1 + 16);
  v47[1] = v2;
  uint64_t v48 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v47, 0x200000000, v33);
  uint64_t result = (uint64_t *)sub_1B62D7790((uint64_t)v33, (uint64_t)v34, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v34[0])
  {
    long long v41 = v34[0];
    long long v42 = v34[1];
    uint64_t v43 = v35;
    if (v40 >= 1)
    {
      uint64_t v26 = v37;
      if (v37)
      {
        uint64_t v23 = v36;
        uint64_t v4 = v38;
        uint64_t v5 = v39[4];
        int v31 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        BOOL v32 = v39;
        uint64_t v21 = v39 + 8;
        uint64_t v22 = (uint64_t)(v39 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 0;
        uint64_t v24 = v5;
        uint64_t v25 = v1;
        do
        {
          long long v7 = (unsigned int *)(v23 + 48 * v6);
          uint64_t v8 = *v7;
          long long v9 = (uint64_t *)*((void *)v7 + 2);
          uint64_t v10 = *((void *)v7 + 4);
          uint64_t v11 = *((void *)v7 + 5);
          uint64_t v30 = v6;
          uint64_t v28 = v7[1];
          uint64_t v29 = *((void *)v7 + 3);
          if (v31)
          {
            uint64_t v12 = *(os_unfair_lock_s **)(v11 + 376);
            swift_retain();
            os_unfair_lock_lock(v12);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v5);
          sub_1B62D7790(v22, (uint64_t)v46, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v13 = v32[4];
          uint64_t v14 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v32[6] = ecs_stack_allocator_allocate(v13, 48 * v14, 8);
          v32[7] = v14;
          v21[1] = 0;
          long long v21[2] = 0;
          *uint64_t v21 = 0;
          swift_release();
          uint64_t v15 = (unsigned int *)sub_1B62C9024((uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, v9, v29, v10, (uint64_t)v32);
          uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1F0F6E938, v9, v29, v10, (uint64_t)v32);
          uint64_t v17 = (void *)v16;
          if (v9)
          {
            for (; v10; --v10)
            {
              uint64_t v18 = *v9++;
              sub_1B6306B9C(v4, v11, v18, v15, v17, v25, a1);
              v17 += 8;
              v15 += 6;
            }
          }
          else if (v8 != v28)
          {
            uint64_t v19 = (void *)(v16 + (v8 << 6));
            uint64_t v20 = &v15[6 * v8];
            do
            {
              sub_1B6306B9C(v4, v11, v8++, v20, v19, v25, a1);
              v19 += 8;
              v20 += 6;
            }
            while (v28 != v8);
          }
          v44[0] = v41;
          v44[1] = v42;
          uint64_t v45 = v43;
          sub_1B6345178(v32, (unsigned __int16 **)v44, (uint64_t)v46);
          sub_1B634507C((char *)v11);
          uint64_t v5 = v24;
          ecs_stack_allocator_pop_snapshot(v24);
          if (v31)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
          }
          swift_release();
          uint64_t v6 = v30 + 1;
        }
        while (v30 + 1 != v26);
        sub_1B632F170(v33);
      }
    }
    return sub_1B632F170(v33);
  }
  return result;
}

uint64_t sub_1B6306B9C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, void *a5, uint64_t a6, uint64_t a7)
{
  long long v9 = *(uint64_t (**)(void))(*(void *)a6 + 104);
  uint64_t v406 = a4;
  uint64_t result = v9(*((unsigned __int8 *)a4 + 20));
  if (result)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *a5;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_1B68E9948(0, *(void *)(v12 + 16));
    }
    else
    {
      *a5 = sub_1B6308DBC(0, *(void *)(v12 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    if (*((unsigned char *)v406 + 12) == 1)
    {
      uint64_t v13 = a5 + 3;
      if (!a5[3]) {
        *uint64_t v13 = MEMORY[0x1E4FBC860];
      }
      int v14 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = *v13;
      if (v14)
      {
        sub_1B68E96F0(0, *(void *)(v15 + 16));
      }
      else
      {
        *uint64_t v13 = (uint64_t)sub_1B6785964(0, *(void *)(v15 + 24) >> 1);
        swift_bridgeObjectRelease();
      }
    }
    if (*((unsigned char *)v406 + 15) == 1)
    {
      uint64_t v16 = a5 + 4;
      if (!a5[4]) {
        uint64_t *v16 = MEMORY[0x1E4FBC860];
      }
      int v17 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v16;
      if (v17)
      {
        sub_1B68E9948(0, *(void *)(v18 + 16));
      }
      else
      {
        uint64_t *v16 = (uint64_t)sub_1B6308DBC(0, *(void *)(v18 + 24) >> 1);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v19 = (char **)(a5 + 2);
    if (!a5[2]) {
      *uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    }
    int v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    if (v20)
    {
      sub_1B68E9948(0, *((void *)v21 + 2));
    }
    else
    {
      *uint64_t v19 = (char *)sub_1B6308DBC(0, *((void *)v21 + 3) >> 1);
      swift_bridgeObjectRelease();
    }
    if (*((unsigned char *)v406 + 20) == 3 || *((unsigned char *)v406 + 14) == 1)
    {
      uint64_t v22 = a5 + 1;
      if (!a5[1]) {
        *uint64_t v22 = MEMORY[0x1E4FBC860];
      }
      int v23 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = *v22;
      if (v23)
      {
        sub_1B68EA478(0, *(void *)(v24 + 16));
      }
      else
      {
        *uint64_t v22 = (uint64_t)sub_1B678598C(0, *(void *)(v24 + 24) >> 1);
        swift_bridgeObjectRelease();
      }
    }
    int v25 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = a5[5];
    uint64_t v343 = (uint64_t)a5;
    if (v25)
    {
      sub_1B68E96D8(0, *(void *)(v26 + 16));
    }
    else
    {
      a5[5] = sub_1B6308DE4(0, *(void *)(v26 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = *v406;
    uint64_t v28 = v406[1];
    uint64_t result = sub_1B62EC0CC((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63FA8, v27 | (v28 << 32));
    if (result)
    {
      swift_retain();
      swift_retain();
      uint64_t v29 = sub_1B62DE2C8(a3);
      swift_release();
      uint64_t v30 = sub_1B6C316A0(v29, (uint64_t)&type metadata for IsSubEntityOf);
      char v32 = v31;
      uint64_t result = swift_release();
      if ((v32 & 1) != 0 || __PAIR64__(v28, v27) != v30)
      {
        float v33 = *((float *)v406 + 2);
        switch(*((unsigned char *)v406 + 20))
        {
          case 1:
            if (*(void *)(a7 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8) == 1
              && !*(void *)(a7 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 16))
            {
              return result;
            }
            if (qword_1EB97DC28 != -1) {
              swift_once();
            }
            uint64_t v400 = qword_1EB997A18;
            int v401 = 0;
            char v402 = 2;
            uint64_t v403 = 0;
            char v404 = 2;
            uint64_t v405 = 0;
            swift_retain();
            sub_1B67CF274((uint64_t)v374);
            swift_release();
            sub_1B68E1FAC(0, (unint64_t *)&qword_1EB980B60, MEMORY[0x1E4FBBE00]);
            uint64_t v79 = swift_allocObject();
            *(_OWORD *)(v79 + 16) = xmmword_1B6E77050;
            *(void *)(v79 + 56) = &type metadata for EmitterReference;
            *(void *)(v79 + 64) = &off_1F0F6BD40;
            *(_DWORD *)(v79 + 32) = v27;
            *(_DWORD *)(v79 + 36) = v28;
            sub_1B62A1250(v79, (uint64_t)&v382);
            swift_setDeallocating();
            sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1B62CA064((uint64_t)v374);
            *(void *)&long long v385 = v382;
            DWORD2(v385) = DWORD2(v382);
            BYTE12(v385) = BYTE12(v382);
            *(void *)&long long v386 = v383 | 0x10;
            BYTE8(v386) = BYTE8(v383);
            uint64_t v387 = v384;
            sub_1B62C9DA8(a7, (uint64_t)&v385, 0x200000000, &v367);
            sub_1B62D7790((uint64_t)&v367, (uint64_t)v376, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
            char v349 = (unsigned __int16 *)v376[0];
            if (v376[0])
            {
              uint64_t v310 = v381;
              if (v381 <= 0) {
                goto LABEL_277;
              }
              uint64_t v307 = v378;
              if (v378)
              {
                uint64_t v304 = v377;
                uint64_t v80 = v380;
                uint64_t v81 = v380[4];
                char v340 = *(unsigned char *)(v379 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
                uint64_t v298 = v380 + 8;
                uint64_t v301 = v379;
                uint64_t v345 = v376[0] + 41;
                swift_retain();
                swift_retain();
                swift_retain();
                uint64_t v82 = 0;
                float v358 = v80;
                uint64_t v295 = v81;
                while (1)
                {
                  uint64_t v328 = v82;
                  uint64_t v83 = (unsigned int *)(v304 + 48 * v82);
                  uint64_t v84 = *v83;
                  uint64_t v85 = v83[1];
                  uint64_t v86 = v83[2];
                  uint64_t v88 = *((void *)v83 + 2);
                  uint64_t v87 = *((void *)v83 + 3);
                  uint64_t v90 = *((void *)v83 + 4);
                  uint64_t v89 = *((void *)v83 + 5);
                  if (v340)
                  {
                    long long v91 = *(os_unfair_lock_s **)(v89 + 376);
                    swift_retain_n();
                    os_unfair_lock_lock(v91);
                    os_unfair_lock_lock(*(os_unfair_lock_t *)(v89 + 344));
                    swift_release();
                  }
                  else
                  {
                    swift_retain();
                  }
                  ecs_stack_allocator_push_snapshot(v81);
                  uint64_t v320 = v80[7];
                  uint64_t v324 = v80[6];
                  uint64_t v313 = v80[9];
                  uint64_t v316 = v80[8];
                  uint64_t v332 = v80[10];
                  uint64_t v92 = v80[4];
                  uint64_t v93 = *(void *)(*(void *)(*(void *)(*(void *)(v89 + 40) + 16) + 32) + 16) + 1;
                  swift_retain();
                  v358[6] = ecs_stack_allocator_allocate(v92, 48 * v93, 8);
                  v358[7] = v93;
                  uint64_t v80 = v358;
                  v298[1] = 0;
                  v298[2] = 0;
                  *uint64_t v298 = 0;
                  swift_release();
                  *(void *)&long long v388 = v301;
                  uint64_t v336 = v89;
                  *((void *)&v388 + 1) = v89;
                  *(void *)&long long v389 = v358;
                  *((void *)&v389 + 1) = v86;
                  uint64_t v390 = (v85 - v84 + v86);
                  uint64_t v391 = v310;
                  uint64_t v392 = v84;
                  uint64_t v393 = v85;
                  uint64_t v394 = 0;
                  uint64_t v395 = 0;
                  LOBYTE(v396) = 1;
                  uint64_t v397 = v88;
                  uint64_t v398 = v87;
                  uint64_t v399 = v90;
                  sub_1B68E068C((uint64_t)&v388, (uint64_t)v406, v343);
                  unint64_t v94 = v358[6];
                  uint64_t v353 = v358[8];
                  if (v353) {
                    break;
                  }
                  uint64_t v120 = v358[7];
                  uint64_t v121 = (void *)v358[4];
LABEL_134:
                  uint64_t v81 = v295;
                  ecs_stack_allocator_deallocate(v121, v94, 48 * v120);
                  v80[6] = v324;
                  unsigned char v80[7] = v320;
                  v80[8] = v316;
                  v80[9] = v313;
                  v80[10] = v332;
                  sub_1B634507C((char *)v336);
                  ecs_stack_allocator_pop_snapshot(v295);
                  if (v340)
                  {
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v336 + 344));
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v336 + 376));
                  }
                  swift_release();
                  uint64_t v82 = v328 + 1;
                  if (v328 + 1 == v307) {
                    goto LABEL_284;
                  }
                }
                uint64_t v95 = 0;
                while (1)
                {
                  unint64_t v97 = v94;
                  uint64_t v98 = (uint64_t *)(v94 + 48 * v95);
                  uint64_t v99 = *v98;
                  uint64_t v100 = (void (*)(uint64_t))v98[4];
                  uint64_t v101 = v80[9];
                  if (v101) {
                    BOOL v102 = v99 == v101;
                  }
                  else {
                    BOOL v102 = 0;
                  }
                  if (!v102 && v349[11])
                  {
                    unint64_t v103 = v349[9];
                    uint64_t v104 = (void *)(v345 + v349[8]);
                    uint64_t v105 = v98[2];
                    uint64_t v106 = v104;
                    unint64_t v107 = v103 >> 4;
                    uint64_t v108 = v345;
                    if (v103 < 0x10) {
                      goto LABEL_114;
                    }
                    while (*v106 != v99)
                    {
                      ++v108;
                      v106 += 2;
                      if (!--v107) {
                        goto LABEL_114;
                      }
                    }
                    unsigned int v109 = *(unsigned __int8 *)(v108 + v349[10]);
                    BOOL v65 = v109 > 5;
                    int v110 = (1 << v109) & 0x23;
                    if (!v65 && v110 != 0)
                    {
LABEL_114:
                      if (swift_conformsToProtocol2()) {
                        uint64_t v112 = v105;
                      }
                      else {
                        uint64_t v112 = 0;
                      }
                      if (!v112) {
                        goto LABEL_100;
                      }
                      if (v103 >= 0x10)
                      {
                        int v113 = v104;
                        unint64_t v114 = v103 >> 4;
                        uint64_t v115 = v345;
                        while (*v113 != v112)
                        {
                          ++v115;
                          v113 += 2;
                          if (!--v114) {
                            goto LABEL_127;
                          }
                        }
                        unsigned int v116 = *(unsigned __int8 *)(v115 + v349[10]);
                        BOOL v65 = v116 > 5;
                        int v117 = (1 << v116) & 0x23;
                        if (!v65 && v117 != 0)
                        {
LABEL_127:
                          uint64_t v119 = 16 * (v103 >> 4);
                          while (*v104 != v112)
                          {
                            v104 += 2;
                            v119 -= 16;
                            if (!v119) {
                              goto LABEL_99;
                            }
                          }
                          goto LABEL_100;
                        }
                      }
                    }
                  }
LABEL_99:
                  uint64_t v96 = swift_retain();
                  v100(v96);
                  swift_release();
LABEL_100:
                  ++v95;
                  uint64_t v80 = v358;
                  unint64_t v94 = v97;
                  if (v95 == v353)
                  {
                    uint64_t v120 = v358[7];
                    unint64_t v94 = v358[6];
                    uint64_t v121 = (void *)v358[4];
                    if ((uint64_t)v358[8] >= 1)
                    {
                      unint64_t v122 = v358[6];
                      swift_arrayDestroy();
                      unint64_t v94 = v122;
                    }
                    goto LABEL_134;
                  }
                }
              }
LABEL_283:
              swift_retain();
              swift_retain();
              swift_retain();
LABEL_284:
              sub_1B62CA064((uint64_t)&v382);
              sub_1B632F170(&v367);
LABEL_285:
              uint64_t v293 = &v367;
              return (uint64_t)sub_1B632F170(v293);
            }
            else
            {
LABEL_276:
              uint64_t v292 = &v382;
              return sub_1B62CA064((uint64_t)v292);
            }
          case 2:
            if (qword_1EB97DC28 != -1) {
              swift_once();
            }
            uint64_t v400 = qword_1EB997A18;
            int v401 = 0;
            char v402 = 2;
            uint64_t v403 = 0;
            char v404 = 2;
            uint64_t v405 = 0;
            swift_retain();
            sub_1B67CF274((uint64_t)v374);
            swift_release();
            sub_1B68E1FAC(0, (unint64_t *)&qword_1EB980B60, MEMORY[0x1E4FBBE00]);
            uint64_t v123 = swift_allocObject();
            *(_OWORD *)(v123 + 16) = xmmword_1B6E77050;
            *(void *)(v123 + 56) = &type metadata for EmitterReference;
            *(void *)(v123 + 64) = &off_1F0F6BD40;
            *(_DWORD *)(v123 + 32) = v27;
            *(_DWORD *)(v123 + 36) = v28;
            sub_1B62A1250(v123, (uint64_t)&v382);
            swift_setDeallocating();
            sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1B62CA064((uint64_t)v374);
            long long v385 = v382;
            long long v386 = v383;
            uint64_t v387 = v384;
            sub_1B62C9DA8(a7, (uint64_t)&v385, 0x200000000, &v367);
            sub_1B62D7790((uint64_t)&v367, (uint64_t)v376, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
            uint64_t v350 = (unsigned __int16 *)v376[0];
            if (!v376[0]) {
              goto LABEL_276;
            }
            uint64_t v311 = v381;
            if (v381 <= 0) {
              goto LABEL_277;
            }
            uint64_t v308 = v378;
            if (!v378) {
              goto LABEL_277;
            }
            uint64_t v305 = v377;
            uint64_t v124 = v380;
            uint64_t v125 = v380[4];
            int v341 = *(unsigned __int8 *)(v379 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            char v299 = v380 + 8;
            uint64_t v302 = v379;
            uint64_t v346 = v376[0] + 41;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v126 = 0;
            __int16 v359 = v124;
            uint64_t v296 = v125;
            while (1)
            {
              uint64_t v127 = (unsigned int *)(v305 + 48 * v126);
              uint64_t v128 = *v127;
              uint64_t v129 = v127[1];
              uint64_t v130 = v127[2];
              uint64_t v132 = *((void *)v127 + 2);
              uint64_t v131 = *((void *)v127 + 3);
              uint64_t v134 = *((void *)v127 + 4);
              uint64_t v133 = *((void *)v127 + 5);
              uint64_t v337 = v126;
              if (v341)
              {
                uint64_t v135 = *(os_unfair_lock_s **)(v133 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v135);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v133 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v125);
              uint64_t v325 = v124[7];
              uint64_t v329 = v124[6];
              uint64_t v317 = v124[9];
              uint64_t v321 = v124[8];
              uint64_t v314 = v124[10];
              uint64_t v136 = v124[4];
              uint64_t v137 = *(void *)(*(void *)(*(void *)(*(void *)(v133 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v359[6] = ecs_stack_allocator_allocate(v136, 48 * v137, 8);
              v359[7] = v137;
              uint64_t v124 = v359;
              v299[1] = 0;
              v299[2] = 0;
              *char v299 = 0;
              swift_release();
              *(void *)&long long v388 = v302;
              uint64_t v333 = v133;
              *((void *)&v388 + 1) = v133;
              *(void *)&long long v389 = v359;
              *((void *)&v389 + 1) = v130;
              uint64_t v390 = (v129 - v128 + v130);
              uint64_t v391 = v311;
              uint64_t v392 = v128;
              uint64_t v393 = v129;
              uint64_t v394 = 0;
              uint64_t v395 = 0;
              LOBYTE(v396) = 1;
              uint64_t v397 = v132;
              uint64_t v398 = v131;
              uint64_t v399 = v134;
              sub_1B68E068C((uint64_t)&v388, (uint64_t)v406, v343);
              unint64_t v138 = v359[6];
              uint64_t v354 = v359[8];
              if (!v354)
              {
                uint64_t v164 = v359[7];
                uint64_t v165 = (void *)v359[4];
                goto LABEL_183;
              }
              for (uint64_t i = 0; i != v354; ++i)
              {
                unint64_t v141 = v138;
                uint64_t v142 = (uint64_t *)(v138 + 48 * i);
                uint64_t v143 = *v142;
                uint64_t v144 = (void (*)(uint64_t))v142[4];
                uint64_t v145 = v124[9];
                if (v145) {
                  BOOL v146 = v143 == v145;
                }
                else {
                  BOOL v146 = 0;
                }
                if (v146 || !v350[11]) {
                  goto LABEL_148;
                }
                unint64_t v147 = v350[9];
                int v148 = (void *)(v346 + v350[8]);
                uint64_t v149 = v142[2];
                uint64_t v150 = v148;
                unint64_t v151 = v147 >> 4;
                uint64_t v152 = v346;
                if (v147 >= 0x10)
                {
                  while (*v150 != v143)
                  {
                    ++v152;
                    v150 += 2;
                    if (!--v151) {
                      goto LABEL_163;
                    }
                  }
                  unsigned int v153 = *(unsigned __int8 *)(v152 + v350[10]);
                  BOOL v65 = v153 > 5;
                  int v154 = (1 << v153) & 0x23;
                  if (v65 || v154 == 0)
                  {
LABEL_148:
                    uint64_t v140 = swift_retain();
                    v144(v140);
                    swift_release();
                    goto LABEL_149;
                  }
                }
LABEL_163:
                if (swift_conformsToProtocol2()) {
                  uint64_t v156 = v149;
                }
                else {
                  uint64_t v156 = 0;
                }
                if (v156)
                {
                  if (v147 < 0x10) {
                    goto LABEL_148;
                  }
                  unsigned int v157 = v148;
                  unint64_t v158 = v147 >> 4;
                  uint64_t v159 = v346;
                  while (*v157 != v156)
                  {
                    ++v159;
                    v157 += 2;
                    if (!--v158) {
                      goto LABEL_176;
                    }
                  }
                  unsigned int v160 = *(unsigned __int8 *)(v159 + v350[10]);
                  BOOL v65 = v160 > 5;
                  int v161 = (1 << v160) & 0x23;
                  if (v65 || v161 == 0) {
                    goto LABEL_148;
                  }
LABEL_176:
                  uint64_t v163 = 16 * (v147 >> 4);
                  while (*v148 != v156)
                  {
                    v148 += 2;
                    v163 -= 16;
                    if (!v163) {
                      goto LABEL_148;
                    }
                  }
                }
LABEL_149:
                uint64_t v124 = v359;
                unint64_t v138 = v141;
              }
              uint64_t v164 = v359[7];
              unint64_t v138 = v359[6];
              uint64_t v165 = (void *)v359[4];
              if ((uint64_t)v359[8] >= 1)
              {
                unint64_t v166 = v359[6];
                swift_arrayDestroy();
                unint64_t v138 = v166;
              }
LABEL_183:
              uint64_t v125 = v296;
              ecs_stack_allocator_deallocate(v165, v138, 48 * v164);
              v124[6] = v329;
              v124[7] = v325;
              v124[8] = v321;
              v124[9] = v317;
              v124[10] = v314;
              sub_1B634507C((char *)v333);
              ecs_stack_allocator_pop_snapshot(v296);
              if (v341)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v333 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v333 + 376));
              }
              swift_release();
              uint64_t v126 = v337 + 1;
              if (v337 + 1 == v308) {
                goto LABEL_284;
              }
            }
          case 3:
            if (qword_1EB97DC28 != -1) {
              swift_once();
            }
            uint64_t v367 = qword_1EB997A18;
            int v368 = 0;
            char v369 = 2;
            uint64_t v370 = 0;
            char v371 = 2;
            uint64_t v372 = 0;
            swift_retain();
            sub_1B663D998((uint64_t)v373);
            swift_release();
            sub_1B68E1FAC(0, (unint64_t *)&qword_1EB980B60, MEMORY[0x1E4FBBE00]);
            uint64_t v167 = swift_allocObject();
            *(_OWORD *)(v167 + 16) = xmmword_1B6E77050;
            *(void *)(v167 + 56) = &type metadata for EmitterReference;
            *(void *)(v167 + 64) = &off_1F0F6BD40;
            *(_DWORD *)(v167 + 32) = v27;
            *(_DWORD *)(v167 + 36) = v28;
            sub_1B62A1250(v167, (uint64_t)v374);
            swift_setDeallocating();
            sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1B62CA064((uint64_t)v373);
            long long v385 = v374[0];
            long long v386 = v374[1];
            uint64_t v387 = v375;
            sub_1B62C9DA8(a7, (uint64_t)&v385, 0x200000000, v376);
            sub_1B62D7790((uint64_t)v376, (uint64_t)&v388, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
            if (!(void)v388)
            {
              uint64_t v292 = v374;
              return sub_1B62CA064((uint64_t)v292);
            }
            if (v396 <= 0 || (uint64_t v334 = v393) == 0)
            {
              sub_1B62CA064((uint64_t)v374);
              goto LABEL_282;
            }
            uint64_t v168 = v395[4];
            int v169 = *(unsigned __int8 *)(v394 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            long long v382 = v388;
            long long v383 = v389;
            uint64_t v384 = v390;
            uint64_t v322 = (uint64_t)(v395 + 6);
            uint64_t v326 = v391;
            uint64_t v351 = v395;
            int64x2_t v318 = v395 + 8;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v170 = 0;
            __asm { FMOV            V0.4S, #1.0 }
            int8x16_t v355 = _Q0;
            int v330 = v169;
            while (1)
            {
              uint64_t v174 = (unsigned int *)(v326 + 48 * v170);
              char v176 = (uint64_t *)*((void *)v174 + 2);
              uint64_t v175 = *((void *)v174 + 3);
              uint64_t v178 = *((void *)v174 + 4);
              uint64_t v177 = *((void *)v174 + 5);
              uint64_t v347 = v170;
              uint64_t v360 = *v174;
              uint64_t v338 = v174[1];
              if (v169)
              {
                uint64_t v179 = *(os_unfair_lock_s **)(v177 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v179);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v177 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v168);
              sub_1B62D7790(v322, (uint64_t)&v400, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v180 = v351[4];
              uint64_t v181 = *(void *)(*(void *)(*(void *)(*(void *)(v177 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v351[6] = ecs_stack_allocator_allocate(v180, 48 * v181, 8);
              v351[7] = v181;
              v318[1] = 0;
              v318[2] = 0;
              *int64x2_t v318 = 0;
              swift_release();
              uint64_t v182 = sub_1B62C9024((uint64_t)&type metadata for ParticleCollisionEvent, (uint64_t)&off_1F0F8CB60, v176, v175, v178, (uint64_t)v351);
              uint64_t v342 = v177;
              sub_1B62C9024((uint64_t)&type metadata for OldEvent, (uint64_t)&off_1F0FA6BD0, v176, v175, v178, (uint64_t)v351);
              if (!v176) {
                break;
              }
              float v183 = 1.0;
              if (v178)
              {
                uint64_t v184 = (unsigned char *)(v182 + 64);
                uint64_t v185 = (char **)v343;
                while (1)
                {
                  if (v33 > 0.0)
                  {
                    if (v33 >= v183) {
                      break;
                    }
                    double v187 = drand48();
                    float v183 = 1.0;
                    *(float *)&double v187 = v187;
                    if (v33 > *(float *)&v187) {
                      break;
                    }
                  }
LABEL_199:
                  v184 += 80;
                  if (!--v178) {
                    goto LABEL_236;
                  }
                }
                long long v361 = *((_OWORD *)v184 - 4);
                uint64_t v188 = *v185;
                char v189 = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v185 = v188;
                if ((v189 & 1) == 0)
                {
                  uint64_t v188 = sub_1B68C0EA8(0, *((void *)v188 + 2) + 1, 1, v188);
                  *uint64_t v185 = v188;
                }
                unint64_t v191 = *((void *)v188 + 2);
                unint64_t v190 = *((void *)v188 + 3);
                if (v191 >= v190 >> 1) {
                  uint64_t v188 = sub_1B68C0EA8(v190 > 1, v191 + 1, 1, v188);
                }
                *((void *)v188 + 2) = v191 + 1;
                *(_OWORD *)&v188[16 * v191 + 32] = v361;
                *uint64_t v185 = v188;
                if (*((unsigned char *)v406 + 14) != 1)
                {
LABEL_224:
                  long long v363 = *((_OWORD *)v184 - 2);
                  uint64_t v222 = *v19;
                  char v223 = swift_isUniquelyReferenced_nonNull_native();
                  *uint64_t v19 = v222;
                  if ((v223 & 1) == 0)
                  {
                    uint64_t v222 = sub_1B68C0EA8(0, *((void *)v222 + 2) + 1, 1, v222);
                    *uint64_t v19 = v222;
                  }
                  unint64_t v225 = *((void *)v222 + 2);
                  unint64_t v224 = *((void *)v222 + 3);
                  float v183 = 1.0;
                  if (v225 >= v224 >> 1)
                  {
                    uint64_t v235 = sub_1B68C0EA8(v224 > 1, v225 + 1, 1, v222);
                    float v183 = 1.0;
                    uint64_t v222 = v235;
                  }
                  *((void *)v222 + 2) = v225 + 1;
                  *(_OWORD *)&v222[16 * v225 + 32] = v363;
                  *uint64_t v19 = v222;
                  if ((*v184 & 1) == 0 && *((unsigned char *)v406 + 12) == 1)
                  {
                    long long v226 = v185;
                    uint64_t v227 = *((void *)v184 - 2);
                    uint64_t v228 = *((void *)v184 - 1);
                    uint64_t v229 = v226[3];
                    char v230 = swift_isUniquelyReferenced_nonNull_native();
                    v226[3] = v229;
                    if ((v230 & 1) == 0)
                    {
                      uint64_t v229 = sub_1B629CE28(0, *((void *)v229 + 2) + 1, 1, v229);
                      *(void *)(v343 + 24) = v229;
                    }
                    unint64_t v232 = *((void *)v229 + 2);
                    unint64_t v231 = *((void *)v229 + 3);
                    float v183 = 1.0;
                    if (v232 >= v231 >> 1)
                    {
                      uint64_t v233 = sub_1B629CE28(v231 > 1, v232 + 1, 1, v229);
                      float v183 = 1.0;
                      uint64_t v229 = v233;
                    }
                    *((void *)v229 + 2) = v232 + 1;
                    unint64_t v186 = &v229[16 * v232];
                    *((void *)v186 + 4) = v227;
                    *((void *)v186 + 5) = v228;
                    uint64_t v185 = (char **)v343;
                    *(void *)(v343 + 24) = v229;
                  }
                  goto LABEL_199;
                }
                float32x4_t v362 = *((float32x4_t *)v184 - 3);
                int v192 = v185[1];
                char v193 = swift_isUniquelyReferenced_nonNull_native();
                v185[1] = v192;
                if ((v193 & 1) == 0)
                {
                  int v192 = sub_1B68C384C(0, *((void *)v192 + 2) + 1, 1, v192);
                  v185[1] = v192;
                }
                unint64_t v196 = *((void *)v192 + 2);
                unint64_t v195 = *((void *)v192 + 3);
                v194.i32[0] = 1.0;
                if (v196 >= v195 >> 1)
                {
                  uint64_t v236 = sub_1B68C384C(v195 > 1, v196 + 1, 1, v192);
                  v194.i32[0] = 1.0;
                  int v192 = v236;
                }
                float32x4_t v197 = vmulq_f32(v362, v362);
                v197.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v197, 2), vaddq_f32(v197, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v197.f32, 1))).u64[0];
                float32x4_t v198 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v197.f32, 0);
                v198.i32[3] = 0;
                float32x4_t v199 = vrsqrteq_f32(v198);
                float32x4_t v200 = vmulq_f32(v199, vrsqrtsq_f32(v198, vmulq_f32(v199, v199)));
                float32x4_t v201 = vmulq_f32(v200, v200);
                int8x16_t v208 = (int8x16_t)vmulq_f32(v200, vrsqrtsq_f32(v198, v201));
                int32x4_t v202 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v197.f32[0] != 0.0)), 0x1FuLL));
                v202.i32[3] = 0;
                float32x4_t v203 = vmulq_f32(v362, (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v202), v208, v355));
                v201.i32[0] = v203.i32[2];
                v206.i64[0] = 0x8000000080000000;
                v206.i64[1] = 0x8000000080000000;
                float v204 = *(float *)vbslq_s8(v206, v194, (int8x16_t)v201).i32;
                *(float *)v206.i32 = v203.f32[1] / (float)(fabsf(v203.f32[2]) + *(float *)v194.i32);
                float v205 = vmuls_lane_f32(*(float *)v206.i32, *(float32x2_t *)v203.f32, 1);
                *(float *)v206.i32 = -(float)(v203.f32[0] * *(float *)v206.i32);
                float v207 = v203.f32[2] + (float)(v204 * v205);
                *(float *)v208.i32 = v204 * *(float *)v206.i32;
                float v209 = *(float *)v194.i32 - v205;
                float v210 = vmuls_lane_f32(-v204, *(float32x2_t *)v203.f32, 1);
                float v211 = v203.f32[2] + (float)(v207 + v209);
                if (v211 > 0.0)
                {
                  float32x2_t v212 = (float32x2_t)vrev64_s32(*(int32x2_t *)v203.f32);
                  *(int32x2_t *)v216.f32 = vdup_lane_s32((int32x2_t)vadd_f32(*(float32x2_t *)v203.f32, *(float32x2_t *)v203.f32), 0);
                  v216.i32[0] = vsub_f32((float32x2_t)__PAIR64__(v212.u32[1], LODWORD(v210)), v212).u32[0];
                  float32x2_t v213 = (float32x2_t)__PAIR64__(COERCE_UNSIGNED_INT(sqrtf(v211 + *(float *)v194.i32)), v208.u32[0]);
                  float32x2_t v214 = vmul_f32(v213, v213);
                  v213.i32[0] = v206.i32[0];
                  unsigned __int32 v215 = vsub_f32(*(float32x2_t *)v208.i8, v213).u32[0];
                  v206.i32[1] = v214.i32[1];
                  v216.i64[1] = v206.i64[0];
                  *(float *)v206.i32 = 0.5 / v213.f32[1];
LABEL_214:
                  float32x4_t v217 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v206.i8, 0);
LABEL_223:
                  *((void *)v192 + 2) = v196 + 1;
                  *(float32x4_t *)&v192[16 * v196 + 32] = vmulq_f32(v216, v217);
                  v185[1] = v192;
                  goto LABEL_224;
                }
                if (v207 < v209 || v207 < v203.f32[2])
                {
                  if (v209 <= v203.f32[2])
                  {
                    float v234 = sqrtf((float)((float)(v203.f32[2] + *(float *)v194.i32) - v207) - v209);
                    v203.i32[0] = vsubq_f32(v203, v203).u32[0];
                    v216.f32[1] = v203.f32[1] + v210;
                    v216.f32[2] = v234 * v234;
                    v216.f32[3] = *(float *)v208.i32 - *(float *)v206.i32;
                    *(float *)v206.i32 = 0.5 / v234;
                    goto LABEL_214;
                  }
                  float v220 = sqrtf((float)((float)(v209 + *(float *)v194.i32) - v207) - v203.f32[2]);
                  v217.f32[0] = *(float *)v206.i32 + *(float *)v208.i32;
                  float32x2_t v219 = (float32x2_t)vrev64_s32(*(int32x2_t *)v203.f32);
                  v217.f32[1] = v220 * v220;
                  int32x2_t v221 = (int32x2_t)vadd_f32(v219, (float32x2_t)__PAIR64__(v219.u32[1], LODWORD(v210)));
                }
                else
                {
                  float v220 = sqrtf((float)((float)(v207 + *(float *)v194.i32) - v209) - v203.f32[2]);
                  v217.f32[0] = v220 * v220;
                  v217.f32[1] = *(float *)v206.i32 + *(float *)v208.i32;
                  int32x2_t v221 = (int32x2_t)vsub_f32((float32x2_t)__PAIR64__(LODWORD(v210), v203.u32[0]), *(float32x2_t *)v203.f32);
                }
                *(int32x2_t *)&v217.u32[2] = v221;
                *(float *)v221.i32 = 0.5 / v220;
                float32x4_t v216 = (float32x4_t)vdupq_lane_s32(v221, 0);
                goto LABEL_223;
              }
LABEL_236:
              sub_1B6345178(v351, (unsigned __int16 **)&v382, (uint64_t)&v400);
              sub_1B634507C((char *)v342);
              ecs_stack_allocator_pop_snapshot(v168);
              int v169 = v330;
              if (v330)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v342 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v342 + 376));
              }
              swift_release();
              uint64_t v170 = v347 + 1;
              if (v347 + 1 == v334)
              {
                sub_1B62CA064((uint64_t)v374);
                sub_1B632F170(v376);
LABEL_282:
                uint64_t v293 = v376;
                return (uint64_t)sub_1B632F170(v293);
              }
            }
            float v237 = 1.0;
            if (v360 == v338) {
              goto LABEL_236;
            }
            uint64_t v238 = v338 - v360;
            uint64_t v239 = (unsigned char *)(v182 + 80 * v360 + 64);
            char v240 = (char **)v343;
            while (1)
            {
              if (v33 > 0.0)
              {
                if (v33 >= v237) {
                  break;
                }
                double v242 = drand48();
                float v237 = 1.0;
                *(float *)&double v242 = v242;
                if (v33 > *(float *)&v242) {
                  break;
                }
              }
LABEL_240:
              v239 += 80;
              if (!--v238) {
                goto LABEL_236;
              }
            }
            long long v364 = *((_OWORD *)v239 - 4);
            uint64_t v243 = *v240;
            char v244 = swift_isUniquelyReferenced_nonNull_native();
            *char v240 = v243;
            if ((v244 & 1) == 0)
            {
              uint64_t v243 = sub_1B68C0EA8(0, *((void *)v243 + 2) + 1, 1, v243);
              *char v240 = v243;
            }
            unint64_t v246 = *((void *)v243 + 2);
            unint64_t v245 = *((void *)v243 + 3);
            if (v246 >= v245 >> 1) {
              uint64_t v243 = sub_1B68C0EA8(v245 > 1, v246 + 1, 1, v243);
            }
            *((void *)v243 + 2) = v246 + 1;
            *(_OWORD *)&v243[16 * v246 + 32] = v364;
            *char v240 = v243;
            if (*((unsigned char *)v406 + 14) != 1) {
              goto LABEL_265;
            }
            float32x4_t v365 = *((float32x4_t *)v239 - 3);
            uint64_t v247 = v240[1];
            char v248 = swift_isUniquelyReferenced_nonNull_native();
            v240[1] = v247;
            if ((v248 & 1) == 0)
            {
              uint64_t v247 = sub_1B68C384C(0, *((void *)v247 + 2) + 1, 1, v247);
              v240[1] = v247;
            }
            unint64_t v251 = *((void *)v247 + 2);
            unint64_t v250 = *((void *)v247 + 3);
            v249.i32[0] = 1.0;
            if (v251 >= v250 >> 1)
            {
              uint64_t v291 = sub_1B68C384C(v250 > 1, v251 + 1, 1, v247);
              v249.i32[0] = 1.0;
              uint64_t v247 = v291;
            }
            float32x4_t v252 = vmulq_f32(v365, v365);
            v252.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v252, 2), vaddq_f32(v252, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v252.f32, 1))).u64[0];
            float32x4_t v253 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v252.f32, 0);
            v253.i32[3] = 0;
            float32x4_t v254 = vrsqrteq_f32(v253);
            float32x4_t v255 = vmulq_f32(v254, vrsqrtsq_f32(v253, vmulq_f32(v254, v254)));
            float32x4_t v256 = vmulq_f32(v255, v255);
            int8x16_t v263 = (int8x16_t)vmulq_f32(v255, vrsqrtsq_f32(v253, v256));
            int32x4_t v257 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v252.f32[0] != 0.0)), 0x1FuLL));
            v257.i32[3] = 0;
            float32x4_t v258 = vmulq_f32(v365, (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v257), v263, v355));
            v256.i32[0] = v258.i32[2];
            v261.i64[0] = 0x8000000080000000;
            v261.i64[1] = 0x8000000080000000;
            float v259 = *(float *)vbslq_s8(v261, v249, (int8x16_t)v256).i32;
            *(float *)v261.i32 = v258.f32[1] / (float)(fabsf(v258.f32[2]) + *(float *)v249.i32);
            float v260 = vmuls_lane_f32(*(float *)v261.i32, *(float32x2_t *)v258.f32, 1);
            *(float *)v261.i32 = -(float)(v258.f32[0] * *(float *)v261.i32);
            float v262 = v258.f32[2] + (float)(v259 * v260);
            *(float *)v263.i32 = v259 * *(float *)v261.i32;
            float v264 = *(float *)v249.i32 - v260;
            float v265 = vmuls_lane_f32(-v259, *(float32x2_t *)v258.f32, 1);
            float v266 = v258.f32[2] + (float)(v262 + v264);
            if (v266 > 0.0)
            {
              float32x2_t v267 = (float32x2_t)vrev64_s32(*(int32x2_t *)v258.f32);
              *(int32x2_t *)v271.f32 = vdup_lane_s32((int32x2_t)vadd_f32(*(float32x2_t *)v258.f32, *(float32x2_t *)v258.f32), 0);
              v271.i32[0] = vsub_f32((float32x2_t)__PAIR64__(v267.u32[1], LODWORD(v265)), v267).u32[0];
              float32x2_t v268 = (float32x2_t)__PAIR64__(COERCE_UNSIGNED_INT(sqrtf(v266 + *(float *)v249.i32)), v263.u32[0]);
              float32x2_t v269 = vmul_f32(v268, v268);
              v268.i32[0] = v261.i32[0];
              unsigned __int32 v270 = vsub_f32(*(float32x2_t *)v263.i8, v268).u32[0];
              v261.i32[1] = v269.i32[1];
              v271.i64[1] = v261.i64[0];
              *(float *)v261.i32 = 0.5 / v268.f32[1];
LABEL_255:
              float32x4_t v272 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v261.i8, 0);
LABEL_264:
              *((void *)v247 + 2) = v251 + 1;
              *(float32x4_t *)&v247[16 * v251 + 32] = vmulq_f32(v271, v272);
              v240[1] = v247;
LABEL_265:
              long long v366 = *((_OWORD *)v239 - 2);
              uint64_t v277 = *v19;
              char v278 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v19 = v277;
              if ((v278 & 1) == 0)
              {
                uint64_t v277 = sub_1B68C0EA8(0, *((void *)v277 + 2) + 1, 1, v277);
                *uint64_t v19 = v277;
              }
              unint64_t v280 = *((void *)v277 + 2);
              unint64_t v279 = *((void *)v277 + 3);
              float v237 = 1.0;
              if (v280 >= v279 >> 1)
              {
                uint64_t v290 = sub_1B68C0EA8(v279 > 1, v280 + 1, 1, v277);
                float v237 = 1.0;
                uint64_t v277 = v290;
              }
              *((void *)v277 + 2) = v280 + 1;
              *(_OWORD *)&v277[16 * v280 + 32] = v366;
              *uint64_t v19 = v277;
              if ((*v239 & 1) == 0 && *((unsigned char *)v406 + 12) == 1)
              {
                char v281 = v240;
                uint64_t v282 = *((void *)v239 - 2);
                uint64_t v283 = *((void *)v239 - 1);
                uint64_t v284 = v281[3];
                char v285 = swift_isUniquelyReferenced_nonNull_native();
                v281[3] = v284;
                if ((v285 & 1) == 0)
                {
                  uint64_t v284 = sub_1B629CE28(0, *((void *)v284 + 2) + 1, 1, v284);
                  *(void *)(v343 + 24) = v284;
                }
                unint64_t v287 = *((void *)v284 + 2);
                unint64_t v286 = *((void *)v284 + 3);
                float v237 = 1.0;
                if (v287 >= v286 >> 1)
                {
                  unint64_t v288 = sub_1B629CE28(v286 > 1, v287 + 1, 1, v284);
                  float v237 = 1.0;
                  uint64_t v284 = v288;
                }
                *((void *)v284 + 2) = v287 + 1;
                uint64_t v241 = &v284[16 * v287];
                *((void *)v241 + 4) = v282;
                *((void *)v241 + 5) = v283;
                char v240 = (char **)v343;
                *(void *)(v343 + 24) = v284;
              }
              goto LABEL_240;
            }
            if (v262 < v264 || v262 < v258.f32[2])
            {
              if (v264 <= v258.f32[2])
              {
                float v289 = sqrtf((float)((float)(v258.f32[2] + *(float *)v249.i32) - v262) - v264);
                v258.i32[0] = vsubq_f32(v258, v258).u32[0];
                v271.f32[1] = v258.f32[1] + v265;
                v271.f32[2] = v289 * v289;
                v271.f32[3] = *(float *)v263.i32 - *(float *)v261.i32;
                *(float *)v261.i32 = 0.5 / v289;
                goto LABEL_255;
              }
              float v275 = sqrtf((float)((float)(v264 + *(float *)v249.i32) - v262) - v258.f32[2]);
              v272.f32[0] = *(float *)v261.i32 + *(float *)v263.i32;
              float32x2_t v274 = (float32x2_t)vrev64_s32(*(int32x2_t *)v258.f32);
              v272.f32[1] = v275 * v275;
              int32x2_t v276 = (int32x2_t)vadd_f32(v274, (float32x2_t)__PAIR64__(v274.u32[1], LODWORD(v265)));
            }
            else
            {
              float v275 = sqrtf((float)((float)(v262 + *(float *)v249.i32) - v264) - v258.f32[2]);
              v272.f32[0] = v275 * v275;
              v272.f32[1] = *(float *)v261.i32 + *(float *)v263.i32;
              int32x2_t v276 = (int32x2_t)vsub_f32((float32x2_t)__PAIR64__(LODWORD(v265), v258.u32[0]), *(float32x2_t *)v258.f32);
            }
            *(int32x2_t *)&v272.u32[2] = v276;
            *(float *)v276.i32 = 0.5 / v275;
            float32x4_t v271 = (float32x4_t)vdupq_lane_s32(v276, 0);
            goto LABEL_264;
          default:
            if (qword_1EB97DC28 != -1) {
              swift_once();
            }
            uint64_t v400 = qword_1EB997A18;
            int v401 = 0;
            char v402 = 2;
            uint64_t v403 = 0;
            char v404 = 2;
            uint64_t v405 = 0;
            swift_retain();
            sub_1B67CF274((uint64_t)v374);
            swift_release();
            sub_1B68E1FAC(0, (unint64_t *)&qword_1EB980B60, MEMORY[0x1E4FBBE00]);
            uint64_t v34 = swift_allocObject();
            *(_OWORD *)(v34 + 16) = xmmword_1B6E77050;
            *(void *)(v34 + 56) = &type metadata for EmitterReference;
            *(void *)(v34 + 64) = &off_1F0F6BD40;
            *(_DWORD *)(v34 + 32) = v27;
            *(_DWORD *)(v34 + 36) = v28;
            sub_1B62A1250(v34, (uint64_t)&v382);
            swift_setDeallocating();
            sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1B62CA064((uint64_t)v374);
            *(void *)&long long v385 = v382;
            DWORD2(v385) = DWORD2(v382);
            BYTE12(v385) = BYTE12(v382);
            *(void *)&long long v386 = v383 | 8;
            BYTE8(v386) = BYTE8(v383);
            uint64_t v387 = v384;
            sub_1B62C9DA8(a7, (uint64_t)&v385, 0x200000000, &v367);
            sub_1B62D7790((uint64_t)&v367, (uint64_t)v376, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
            long long v348 = (unsigned __int16 *)v376[0];
            if (!v376[0]) {
              goto LABEL_276;
            }
            uint64_t v309 = v381;
            if (v381 <= 0)
            {
LABEL_277:
              sub_1B62CA064((uint64_t)&v382);
              goto LABEL_285;
            }
            uint64_t v306 = v378;
            if (!v378) {
              goto LABEL_283;
            }
            uint64_t v303 = v377;
            uint64_t v35 = v380;
            uint64_t v36 = v380[4];
            char v339 = *(unsigned char *)(v379 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            uint64_t v297 = v380 + 8;
            uint64_t v300 = v379;
            uint64_t v344 = v376[0] + 41;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v37 = 0;
            char v357 = v35;
            uint64_t v294 = v36;
            break;
        }
LABEL_43:
        uint64_t v38 = (unsigned int *)(v303 + 48 * v37);
        uint64_t v39 = *v38;
        uint64_t v40 = v38[1];
        uint64_t v41 = v38[2];
        uint64_t v43 = *((void *)v38 + 2);
        uint64_t v42 = *((void *)v38 + 3);
        uint64_t v45 = *((void *)v38 + 4);
        uint64_t v44 = *((void *)v38 + 5);
        uint64_t v335 = v37;
        if (v339)
        {
          uint64_t v46 = *(os_unfair_lock_s **)(v44 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v46);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v44 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v36);
        uint64_t v323 = v35[7];
        uint64_t v327 = v35[6];
        uint64_t v315 = v35[9];
        uint64_t v319 = v35[8];
        uint64_t v312 = v35[10];
        uint64_t v47 = v35[4];
        uint64_t v48 = *(void *)(*(void *)(*(void *)(*(void *)(v44 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v357[6] = ecs_stack_allocator_allocate(v47, 48 * v48, 8);
        v357[7] = v48;
        uint64_t v35 = v357;
        v297[1] = 0;
        v297[2] = 0;
        *uint64_t v297 = 0;
        swift_release();
        *(void *)&long long v388 = v300;
        uint64_t v331 = v44;
        *((void *)&v388 + 1) = v44;
        *(void *)&long long v389 = v357;
        *((void *)&v389 + 1) = v41;
        uint64_t v390 = (v40 - v39 + v41);
        uint64_t v391 = v309;
        uint64_t v392 = v39;
        uint64_t v393 = v40;
        uint64_t v394 = 0;
        uint64_t v395 = 0;
        LOBYTE(v396) = 1;
        uint64_t v397 = v43;
        uint64_t v398 = v42;
        uint64_t v399 = v45;
        sub_1B68E068C((uint64_t)&v388, (uint64_t)v406, v343);
        unint64_t v49 = v357[6];
        uint64_t v352 = v357[8];
        if (!v352)
        {
          uint64_t v76 = v357[7];
          uint64_t v77 = (void *)v357[4];
          goto LABEL_83;
        }
        uint64_t v50 = 0;
        while (1)
        {
          unint64_t v52 = v49;
          uint64_t v53 = (uint64_t *)(v49 + 48 * v50);
          uint64_t v54 = *v53;
          uint64_t v55 = (void (*)(uint64_t))v53[4];
          uint64_t v56 = v35[9];
          if (v56) {
            _ZF = v54 == v56;
          }
          else {
            _ZF = 0;
          }
          if (!_ZF && v348[11])
          {
            unint64_t v58 = v348[9];
            uint64_t v59 = (void *)(v344 + v348[8]);
            uint64_t v60 = v53[2];
            uint64_t v61 = v59;
            unint64_t v62 = v58 >> 4;
            uint64_t v63 = v344;
            if (v58 < 0x10) {
              goto LABEL_63;
            }
            while (*v61 != v54)
            {
              ++v63;
              v61 += 2;
              if (!--v62) {
                goto LABEL_63;
              }
            }
            unsigned int v64 = *(unsigned __int8 *)(v63 + v348[10]);
            BOOL v65 = v64 > 5;
            int v66 = (1 << v64) & 0x23;
            if (!v65 && v66 != 0)
            {
LABEL_63:
              if (swift_conformsToProtocol2()) {
                uint64_t v68 = v60;
              }
              else {
                uint64_t v68 = 0;
              }
              if (!v68) {
                goto LABEL_49;
              }
              if (v58 >= 0x10)
              {
                uint64_t v69 = v59;
                unint64_t v70 = v58 >> 4;
                uint64_t v71 = v344;
                while (*v69 != v68)
                {
                  ++v71;
                  v69 += 2;
                  if (!--v70) {
                    goto LABEL_76;
                  }
                }
                unsigned int v72 = *(unsigned __int8 *)(v71 + v348[10]);
                BOOL v65 = v72 > 5;
                int v73 = (1 << v72) & 0x23;
                if (v65 || v73 == 0) {
                  goto LABEL_48;
                }
LABEL_76:
                uint64_t v75 = 16 * (v58 >> 4);
                while (*v59 != v68)
                {
                  v59 += 2;
                  v75 -= 16;
                  if (!v75) {
                    goto LABEL_48;
                  }
                }
                goto LABEL_49;
              }
            }
          }
LABEL_48:
          uint64_t v51 = swift_retain();
          v55(v51);
          swift_release();
LABEL_49:
          ++v50;
          uint64_t v35 = v357;
          unint64_t v49 = v52;
          if (v50 == v352)
          {
            uint64_t v76 = v357[7];
            unint64_t v49 = v357[6];
            uint64_t v77 = (void *)v357[4];
            if ((uint64_t)v357[8] >= 1)
            {
              unint64_t v78 = v357[6];
              swift_arrayDestroy();
              unint64_t v49 = v78;
            }
LABEL_83:
            uint64_t v36 = v294;
            ecs_stack_allocator_deallocate(v77, v49, 48 * v76);
            v35[6] = v327;
            v35[7] = v323;
            v35[8] = v319;
            v35[9] = v315;
            v35[10] = v312;
            sub_1B634507C((char *)v331);
            ecs_stack_allocator_pop_snapshot(v294);
            if (v339)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v331 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v331 + 376));
            }
            swift_release();
            uint64_t v37 = v335 + 1;
            if (v335 + 1 == v306) {
              goto LABEL_284;
            }
            goto LABEL_43;
          }
        }
      }
    }
  }
  return result;
}

void *sub_1B6308D28(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (a2 <= a1) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = a2;
  }
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B6786100(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B639595C);
  long long v7 = (void *)swift_allocObject();
  int64_t v8 = j__malloc_size(v7);
  uint64_t v9 = v8 - 32;
  if (v8 < 32) {
    uint64_t v9 = v8 - 17;
  }
  uint64_t v7[2] = a1;
  v7[3] = 2 * (v9 >> 4);
  return v7;
}

void *sub_1B6308DBC(uint64_t a1, uint64_t a2)
{
  return sub_1B6308D28(a1, a2, (unint64_t *)&qword_1E9DD1D10, (uint64_t)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
}

void *sub_1B6308DE4(uint64_t a1, uint64_t a2)
{
  return sub_1B6308DF8(a1, a2, (unint64_t *)&unk_1E9DCFCE0, MEMORY[0x1E4FBC4C0]);
}

void *sub_1B6308DF8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  if (a2 <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, a3, a4, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = j__malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 29;
  }
  _OWORD v6[2] = a1;
  v6[3] = 2 * (v8 >> 2);
  return v6;
}

void *sub_1B6308E8C(uint64_t a1)
{
  uint64_t v2 = v1;
  long long v3 = *(_OWORD *)(v1 + 32);
  v168[0] = *(_OWORD *)(v1 + 16);
  v168[1] = v3;
  uint64_t v169 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v168, 0x200000000, v144);
  sub_1B6309B40((uint64_t)v144, (uint64_t)v151);
  if (v151[0])
  {
    if (v153 >= 1)
    {
      uint64_t v4 = v152;
      if (v152)
      {
        uint64_t v5 = v151[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 48 * v4;
        int64_t v7 = (uint64_t *)(v5 + 40);
        do
        {
          uint64_t v12 = *v7;
          uint64_t v13 = *(os_unfair_lock_s **)(*v7 + 376);
          swift_retain();
          os_unfair_lock_lock(v13);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          int v14 = *(_DWORD *)(v12 + 24);
          swift_retain();
          uint64_t v156 = 0;
          long long v154 = 0u;
          long long v155 = 0u;
          memset(v146, 0, 40);
          int v15 = sub_1B637F628(v14, (uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, 0, 0, (uint64_t)&v154, (uint64_t)v146);
          swift_release();
          sub_1B6386458((uint64_t)v146);
          sub_1B6386458((uint64_t)&v154);
          if (sub_1B63B4340(v15))
          {
            sub_1B66603E4(v15);
          }
          else
          {
            uint64_t v8 = *(void *)(v12 + 232);
            uint64_t v9 = *(void *)(v12 + 240);
            char v10 = *(unsigned char *)(v12 + 120);
            uint64_t v11 = *(unsigned int *)(v12 + 28);
            LOBYTE(v154) = *(unsigned char *)(v12 + 32);
            sub_1B628EEF4(v8, v9, v15, v10, v11 | ((unint64_t)v154 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          swift_release();
          v7 += 6;
          v6 -= 48;
        }
        while (v6);
        sub_1B632F1C4(v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    sub_1B632F1C4(v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v16 = *(_OWORD *)(v2 + 72);
  v166[0] = *(_OWORD *)(v2 + 56);
  v166[1] = v16;
  uint64_t v167 = *(void *)(v2 + 88);
  sub_1B62C9DA8(a1, (uint64_t)v166, 0x200000000, v145);
  uint64_t v17 = sub_1B6309B40((uint64_t)v145, (uint64_t)v146);
  uint64_t v142 = (unsigned __int16 *)v146[0];
  if (v146[0])
  {
    uint64_t v116 = v150;
    if (v150 > 0)
    {
      uint64_t v140 = v147;
      if (v147)
      {
        uint64_t v139 = v146[5];
        uint64_t v19 = v149;
        uint64_t v136 = v149[4];
        uint64_t v114 = v148;
        int v134 = *(unsigned __int8 *)(v148 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
        unint64_t v138 = v19 + 8;
        unint64_t v141 = (char *)v142 + 41;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v20 = 0;
        uint64_t v143 = v19;
        while (1)
        {
          uint64_t v21 = (unsigned int *)(v139 + 48 * v20);
          uint64_t v22 = *v21;
          uint64_t v23 = v21[1];
          uint64_t v24 = v21[2];
          uint64_t v126 = v20;
          uint64_t v128 = *((void *)v21 + 2);
          uint64_t v25 = *((void *)v21 + 3);
          uint64_t v26 = *((void *)v21 + 4);
          uint64_t v27 = *((void *)v21 + 5);
          if (v134)
          {
            uint64_t v28 = *(os_unfair_lock_s **)(v27 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v28);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v136);
          uint64_t v122 = v19[7];
          uint64_t v124 = v19[6];
          uint64_t v118 = v19[9];
          uint64_t v120 = v19[8];
          uint64_t v130 = v19[10];
          uint64_t v29 = v19[4];
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v27 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v143[6] = ecs_stack_allocator_allocate(v29, 48 * v30, 8);
          v143[7] = v30;
          uint64_t v19 = v143;
          v138[1] = 0;
          _OWORD v138[2] = 0;
          void *v138 = 0;
          swift_release();
          *(void *)&long long v154 = v114;
          uint64_t v132 = v27;
          *((void *)&v154 + 1) = v27;
          *(void *)&long long v155 = v143;
          *((void *)&v155 + 1) = v24;
          uint64_t v156 = (v23 - v22 + v24);
          uint64_t v157 = v116;
          uint64_t v158 = v22;
          uint64_t v159 = v23;
          uint64_t v160 = 0;
          uint64_t v161 = 0;
          char v162 = 1;
          uint64_t v163 = v128;
          uint64_t v164 = v25;
          uint64_t v165 = v26;
          sub_1B6309BFC(&v154);
          unint64_t v31 = v143[6];
          uint64_t v32 = v143[8];
          if (!v32)
          {
            uint64_t v58 = v143[7];
            uint64_t v59 = (void *)v143[4];
            uint64_t v60 = v126;
            goto LABEL_56;
          }
          for (uint64_t i = 0; i != v32; ++i)
          {
            uint64_t v35 = (uint64_t *)(v31 + 48 * i);
            uint64_t v36 = *v35;
            uint64_t v37 = (void (*)(uint64_t))v35[4];
            uint64_t v38 = v19[9];
            if (v38) {
              BOOL v39 = v36 == v38;
            }
            else {
              BOOL v39 = 0;
            }
            if (v39 || !v142[11]) {
              goto LABEL_21;
            }
            unint64_t v40 = v142[9];
            uint64_t v41 = &v141[v142[8]];
            uint64_t v42 = v35[2];
            uint64_t v43 = v41;
            unint64_t v44 = v40 >> 4;
            uint64_t v45 = (char *)v142 + 41;
            if (v40 >= 0x10)
            {
              while (*(void *)v43 != v36)
              {
                ++v45;
                v43 += 16;
                if (!--v44) {
                  goto LABEL_36;
                }
              }
              unsigned int v46 = v45[v142[10]];
              BOOL v47 = v46 > 5;
              int v48 = (1 << v46) & 0x23;
              if (v47 || v48 == 0)
              {
LABEL_21:
                uint64_t v34 = swift_retain();
                v37(v34);
                swift_release();
                goto LABEL_22;
              }
            }
LABEL_36:
            if (swift_conformsToProtocol2()) {
              uint64_t v50 = v42;
            }
            else {
              uint64_t v50 = 0;
            }
            if (v50)
            {
              if (v40 < 0x10) {
                goto LABEL_21;
              }
              uint64_t v51 = v41;
              unint64_t v52 = v40 >> 4;
              uint64_t v53 = (char *)v142 + 41;
              while (*(void *)v51 != v50)
              {
                ++v53;
                v51 += 16;
                if (!--v52) {
                  goto LABEL_49;
                }
              }
              unsigned int v54 = v53[v142[10]];
              BOOL v47 = v54 > 5;
              int v55 = (1 << v54) & 0x23;
              if (v47 || v55 == 0) {
                goto LABEL_21;
              }
LABEL_49:
              uint64_t v57 = 16 * (v40 >> 4);
              while (*(void *)v41 != v50)
              {
                v41 += 16;
                v57 -= 16;
                if (!v57) {
                  goto LABEL_21;
                }
              }
            }
LABEL_22:
            uint64_t v19 = v143;
          }
          uint64_t v58 = v143[7];
          unint64_t v31 = v143[6];
          uint64_t v59 = (void *)v143[4];
          uint64_t v60 = v126;
          if ((uint64_t)v143[8] >= 1) {
            swift_arrayDestroy();
          }
LABEL_56:
          ecs_stack_allocator_deallocate(v59, v31, 48 * v58);
          void v19[6] = v124;
          v19[7] = v122;
          v19[8] = v120;
          v19[9] = v118;
          v19[10] = v130;
          sub_1B634507C((char *)v132);
          ecs_stack_allocator_pop_snapshot(v136);
          if (v134)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v132 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v132 + 376));
          }
          swift_release();
          uint64_t v20 = v60 + 1;
          if (v20 == v140)
          {
            sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            float32x4_t v135 = (float32x4_t)xmmword_1B6E77AF0;
            float32x4_t v137 = (float32x4_t)xmmword_1B6E4F370;
            uint64_t v61 = v19[4];
            int v62 = *(unsigned __int8 *)(v114 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            uint64_t v119 = v19 + 13;
            sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
            sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
            uint64_t v63 = 0;
            uint64_t v117 = v61;
            int v115 = v62;
            while (1)
            {
              uint64_t v64 = *(void *)(v139 + 48 * v63 + 40);
              if (v62)
              {
                BOOL v65 = *(os_unfair_lock_s **)(v64 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v65);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v64 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v61);
              uint64_t v123 = v19[6];
              uint64_t v131 = v19[8];
              uint64_t v133 = v19[7];
              uint64_t v127 = v19[10];
              uint64_t v129 = v19[9];
              uint64_t v66 = v19[4];
              uint64_t v67 = *(void *)(*(void *)(*(void *)(*(void *)(v64 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              void v19[6] = ecs_stack_allocator_allocate(v66, 48 * v67, 8);
              v19[7] = v67;
              v138[1] = 0;
              _OWORD v138[2] = 0;
              void *v138 = 0;
              swift_release();
              float32x4_t v68 = *(float32x4_t *)(v64 + 272);
              float32x4_t v69 = *(float32x4_t *)(v64 + 288);
              uint64_t v125 = v64;
              float32x4_t v70 = vminnmq_f32(vsubq_f32(v137, v135), vsubq_f32(v68, v69));
              float32x4_t v71 = vmaxnmq_f32(vaddq_f32(v137, v135), vaddq_f32(v68, v69));
              v72.i64[0] = 0x3F0000003F000000;
              v72.i64[1] = 0x3F0000003F000000;
              float32x4_t v135 = vmulq_f32(vsubq_f32(v71, v70), v72);
              float32x4_t v137 = vmulq_f32(vaddq_f32(v70, v71), v72);
              unint64_t v73 = v19[6];
              uint64_t v74 = v19[8];
              if (!v74)
              {
                uint64_t v99 = v19[7];
                uint64_t v100 = (void *)v19[4];
                goto LABEL_102;
              }
              uint64_t v121 = v63;
              for (uint64_t j = 0; j != v74; ++j)
              {
                uint64_t v77 = (uint64_t *)(v73 + 48 * j);
                uint64_t v78 = *v77;
                uint64_t v79 = (void (*)(uint64_t))v77[4];
                uint64_t v80 = v19[9];
                if (v80) {
                  BOOL v81 = v78 == v80;
                }
                else {
                  BOOL v81 = 0;
                }
                if (v81 || !v142[11]) {
                  goto LABEL_66;
                }
                unint64_t v82 = v142[9];
                uint64_t v83 = &v141[v142[8]];
                uint64_t v84 = v77[2];
                uint64_t v85 = v83;
                unint64_t v86 = v82 >> 4;
                uint64_t v87 = (char *)v142 + 41;
                if (v82 >= 0x10)
                {
                  while (*(void *)v85 != v78)
                  {
                    ++v87;
                    v85 += 16;
                    if (!--v86) {
                      goto LABEL_81;
                    }
                  }
                  unsigned int v88 = v87[v142[10]];
                  BOOL v47 = v88 > 5;
                  int v89 = (1 << v88) & 0x23;
                  if (v47 || v89 == 0)
                  {
LABEL_66:
                    uint64_t v76 = swift_retain();
                    v79(v76);
                    swift_release();
                    goto LABEL_67;
                  }
                }
LABEL_81:
                if (swift_conformsToProtocol2()) {
                  uint64_t v91 = v84;
                }
                else {
                  uint64_t v91 = 0;
                }
                if (v91)
                {
                  if (v82 < 0x10) {
                    goto LABEL_66;
                  }
                  uint64_t v92 = v83;
                  unint64_t v93 = v82 >> 4;
                  unint64_t v94 = (char *)v142 + 41;
                  while (*(void *)v92 != v91)
                  {
                    ++v94;
                    v92 += 16;
                    if (!--v93) {
                      goto LABEL_94;
                    }
                  }
                  unsigned int v95 = v94[v142[10]];
                  BOOL v47 = v95 > 5;
                  int v96 = (1 << v95) & 0x23;
                  if (v47 || v96 == 0) {
                    goto LABEL_66;
                  }
LABEL_94:
                  uint64_t v98 = 16 * (v82 >> 4);
                  while (*(void *)v83 != v91)
                  {
                    v83 += 16;
                    v98 -= 16;
                    if (!v98) {
                      goto LABEL_66;
                    }
                  }
                }
LABEL_67:
                uint64_t v19 = v143;
              }
              uint64_t v99 = v143[7];
              unint64_t v73 = v143[6];
              uint64_t v100 = (void *)v143[4];
              if ((uint64_t)v143[8] >= 1) {
                swift_arrayDestroy();
              }
              uint64_t v61 = v117;
              int v62 = v115;
              uint64_t v63 = v121;
LABEL_102:
              ecs_stack_allocator_deallocate(v100, v73, 48 * v99);
              void v19[6] = v123;
              v19[7] = v133;
              v19[8] = v131;
              v19[9] = v129;
              v19[10] = v127;
              if (*(void *)(v19[13] + 16))
              {
                uint64_t v101 = swift_bridgeObjectRetain();
                sub_1B639147C(v101, v125);
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v103 = v19[13];
                if (isUniquelyReferenced_nonNull_native)
                {
                  sub_1B6399BB8(0, *(void *)(v103 + 16));
                }
                else
                {
                  uint64_t v104 = (void *)MEMORY[0x1E4FBC860];
                  if (*(void *)(v103 + 24) >= 2uLL)
                  {
                    sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                    uint64_t v104 = (void *)swift_allocObject();
                    size_t v105 = j__malloc_size(v104);
                    _OWORD v104[2] = 0;
                    v104[3] = 2 * ((uint64_t)(v105 - 32) / 72);
                  }
                  void *v119 = v104;
                  swift_bridgeObjectRelease();
                }
                if (*(unsigned __int8 *)(v19[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
                {
                  uint64_t v106 = *(char **)(v125 + 232);
                  unint64_t v107 = *(char **)(v125 + 256);
                  if (v106 == v107)
                  {
                    uint64_t v108 = *(char **)(v125 + 240);
                  }
                  else
                  {
                    sub_1B666018C(v107, v106);
                    unint64_t v107 = *(char **)(v125 + 232);
                    uint64_t v108 = *(char **)(v125 + 240);
                    if (v108 == v107)
                    {
                      uint64_t v108 = 0;
                      unint64_t v107 = 0;
                      *(void *)(v125 + 232) = 0;
                      *(void *)(v125 + 240) = 0;
                    }
                  }
                  *(void *)(v125 + 248) = v108;
                  *(void *)(v125 + 256) = v107;
                }
              }
              ecs_stack_allocator_pop_snapshot(v61);
              if (v62)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v125 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v125 + 376));
              }
              swift_release();
              if (++v63 == v140)
              {
                sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
                uint64_t v17 = (uint64_t)sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
                goto LABEL_117;
              }
            }
          }
        }
      }
    }
  }
LABEL_117:
  MEMORY[0x1F4188790](v17, v18);
  unsigned int v109 = *(void **)(a1 + 176);
  MEMORY[0x1F4188790](v110, v111);
  swift_retain();
  sub_1B636E6CC((uint64_t)&type metadata for SceneWorldAABB, (uint64_t)&off_1F0F65AF0, v109, (void (*)(uint64_t))sub_1B636EDC4);
  swift_release();
  return sub_1B632F1C4(v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t sub_1B6309B40(uint64_t a1, uint64_t a2)
{
  sub_1B6309BA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B6309BA4()
{
  if (!qword_1EB97DC50)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97DC50);
    }
  }
}

uint64_t sub_1B6309BFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[11];
  uint64_t v3 = a1[12];
  uint64_t v4 = a1[13];
  uint64_t v5 = (float32x4_t *)a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v2, v3, v4, v6);
  uint64_t v8 = sub_1B62C9024((uint64_t)&type metadata for LocalAABB, (uint64_t)&off_1F0FA8C78, v2, v3, v4, v6);
  uint64_t result = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, v2, v3, v4, v6);
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7] - v10;
  if (v11)
  {
    int v14 = (float32x4_t *)(v7 + (v10 << 6) + 32);
    uint64_t v15 = (32 * v10) | 0x10;
    long long v16 = (float32x4_t *)(result + v15);
    uint64_t v17 = (int32x2_t *)(v8 + v15);
    float32x4_t v12 = (float32x4_t)xmmword_1B6E4F370;
    float32x4_t v13 = (float32x4_t)xmmword_1B6E77AF0;
    v18.i64[0] = 0x3F0000003F000000;
    v18.i64[1] = 0x3F0000003F000000;
    do
    {
      float32x4_t v19 = v14[-2];
      float32x4_t v20 = v14[-1];
      float32x4_t v21 = *v14;
      float32x4_t v22 = v14[1];
      v14 += 4;
      float32x4_t v23 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v22, v21, *(float32x4_t *)v17[-2].i8, 2), v20, (float32x2_t)v17[-2], 1), v19, COERCE_FLOAT(*(_OWORD *)v17[-2].i8));
      v23.i32[3] = HIDWORD(*(_OWORD *)v17[-2].i8);
      float32x4_t v24 = *(float32x4_t *)v17->i8;
      v24.i32[1] = *(_OWORD *)v17->i8;
      v24.i32[2] = v24.i32[1];
      float32x4_t v25 = vmlaq_f32(vmlaq_f32(vmulq_f32((float32x4_t)vuzp2q_s32(vdupq_lane_s32(*v17, 1), *(int32x4_t *)v17->i8), vabsq_f32(v20)), v24, vabsq_f32(v19)), (float32x4_t)vzip2q_s32(vtrn1q_s32(*(int32x4_t *)v17->i8, *(int32x4_t *)v17->i8), *(int32x4_t *)v17->i8), vabsq_f32(v21));
      v16[-1] = v23;
      float32x4_t *v16 = v25;
      float32x4_t v26 = vminnmq_f32(vsubq_f32(v12, v13), vsubq_f32(v23, v25));
      float32x4_t v27 = vmaxnmq_f32(vaddq_f32(v13, v12), vaddq_f32(v25, v23));
      float32x4_t v12 = vmulq_f32(vaddq_f32(v26, v27), v18);
      float32x4_t v13 = vmulq_f32(vsubq_f32(v27, v26), v18);
      v16 += 2;
      v17 += 4;
      --v11;
    }
    while (v11);
  }
  else
  {
    float32x4_t v12 = (float32x4_t)xmmword_1B6E4F370;
    float32x4_t v13 = (float32x4_t)xmmword_1B6E77AF0;
  }
  v5[17] = v12;
  v5[18] = v13;
  v5[19].i32[0] = v5[7].i32[1];
  return result;
}

void *sub_1B6309D98(void *result)
{
  uint64_t v2 = *(void *)((char *)result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = (uint64_t)result;
    long long v4 = *(_OWORD *)(v1 + 32);
    v33[0] = *(_OWORD *)(v1 + 16);
    v33[1] = v4;
    uint64_t v34 = *(void *)(v1 + 48);
    swift_retain();
    sub_1B62C9DA8(v3, (uint64_t)v33, 0x200000000, v6);
    sub_1B6355BE8((uint64_t)v6, (uint64_t)v19, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v19[0])
    {
      v19[8] = v19[2];
      v19[9] = v19[3];
      v19[10] = v19[4];
      v19[11] = v19[5];
      void v19[6] = v19[0];
      v19[7] = v19[1];
      sub_1B68457BC();
      sub_1B6355CB4(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    long long v5 = *(_OWORD *)(v1 + 72);
    v31[0] = *(_OWORD *)(v1 + 56);
    v31[1] = v5;
    uint64_t v32 = *(void *)(v1 + 88);
    sub_1B62C9DA8(v3, (uint64_t)v31, 0x200000000, v7);
    sub_1B6355BE8((uint64_t)v7, (uint64_t)&v8, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v8)
    {
      uint64_t v20 = v8;
      int v21 = v9;
      char v22 = v10;
      uint64_t v23 = v11;
      char v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v14;
      long long v27 = v15;
      long long v28 = v16;
      uint64_t v29 = v17;
      uint64_t v30 = v18;
      swift_retain();
      swift_retain();
      sub_1B6DA22D0((uint64_t)&v20, v2, v3);
      swift_release_n();
      swift_release();
      return sub_1B6355CB4(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      return (void *)swift_release();
    }
  }
  return result;
}

void sub_1B6309F80(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v8 = sub_1B636E9A8(a1);
  if (v9 != 2)
  {
    unint64_t v12 = v10;
    uint64_t v15 = a3[2];
    uint64_t v13 = (void *)(v15 + v8);
    if (v9)
    {
LABEL_11:
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + 32 * v12 + 24));
      os_unfair_recursive_lock_unlock();
      sub_1B6317ED4(v13, a4);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3[4] + 32 * v12 + 24));
      return;
    }
    uint64_t v14 = v15 + v8;
    uint64_t v11 = a1;
LABEL_6:
    sub_1B636E480(v14, 1, v11);
    uint64_t v16 = 1 << v12;
    if (v12 >= 0x40) {
      uint64_t v16 = 0;
    }
    if (v12 > 0x40) {
      uint64_t v16 = 0;
    }
    a3[15] |= v16;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v17);
  if (v20 + v19 <= 4096)
  {
    unint64_t v12 = v17;
    uint64_t v11 = v18;
    uint64_t v13 = (void *)(a3[2] + v20);
    uint64_t v14 = (uint64_t)v13;
    goto LABEL_6;
  }
  unint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B630A1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9 = v8;
  *(void *)(a2 + 216) = *(void *)(a1 + 80);
  *(void *)(a2 + 208) = *(void *)(a1 + 72);
  int v12 = *(unsigned __int8 *)(a1 + 52);
  if (v12 == 3 && (*(unsigned char *)(a1 + 44) != 1 || (int v12 = *(_DWORD *)(a1 + 40)) != 0)) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = (char *)a5 + 321;
  *(unsigned char *)(a2 + 227) = v12;
  if (*(_DWORD *)(a1 + 40) == 2) {
    char v14 = *(unsigned char *)(a1 + 44);
  }
  else {
    char v14 = 0;
  }
  *(unsigned char *)(a2 + 226) = v14;
  uint64_t v16 = qword_1EB97EB70;
  uint64_t v103 = a5[29];
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EB997C48;
  char v18 = byte_1EB997C60;
  *(void *)(v9 + 104) = qword_1EB997C30;
  *(_OWORD *)(v9 + 112) = *(_OWORD *)algn_1EB997C38;
  *(void *)(v9 + 128) = v17;
  *(_OWORD *)(v9 + 136) = xmmword_1EB997C50;
  *(unsigned char *)(v9 + 152) = v18;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v19 = qword_1EB997C48;
  char v20 = byte_1EB997C60;
  *(void *)(v9 + 160) = qword_1EB997C30;
  *(_OWORD *)(v9 + 168) = *(_OWORD *)algn_1EB997C38;
  *(_OWORD *)(v9 + 192) = xmmword_1EB997C50;
  *(unsigned char *)(v9 + 208) = v20;
  *(void *)(v9 + 184) = v19;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v98 = v13;
  if (v13[216])
  {
    uint64_t v21 = 1;
  }
  else
  {
    swift_retain();
    swift_getKeyPath();
    uint64_t v22 = *(void *)(a6 + 176);
    swift_retain();
    sub_1B6315464((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v22, (void (*)(unint64_t *__return_ptr, uint64_t))sub_1B6357FD4);
    unsigned int v24 = v23;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v21 = (v24 >> 8) & 1;
  }
  uint64_t v91 = a1;
  uint64_t v25 = (void *)a5[64];
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v27 = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    long long v27 = sub_1B62D96F4(0, v25[2] + 1, 1, v25);
  }
  unint64_t v94 = v27;
  unint64_t v29 = v27[2];
  unint64_t v28 = v27[3];
  if (v29 >= v28 >> 1) {
    unint64_t v94 = sub_1B62D96F4(v28 > 1, v29 + 1, 1, v94);
  }
  _OWORD v94[2] = v29 + 1;
  uint64_t v30 = &v94[14 * v29];
  *((_OWORD *)v30 + 2) = xmmword_1B6EBF2D0;
  *((unsigned char *)v30 + 48) = 0;
  v30[8] = v21;
  *(_OWORD *)(v30 + 9) = 0u;
  *(_OWORD *)(v30 + 11) = 0u;
  *(_OWORD *)(v30 + 13) = 0u;
  v30[15] = 0;
  *((unsigned char *)v30 + 128) = 13;
  swift_bridgeObjectRelease();
  uint64_t v105 = (uint64_t)a5;
  uint64_t v31 = a5[98];
  uint64_t v32 = *(void *)(v31 + 16);
  swift_bridgeObjectRetain();
  uint64_t v89 = v32;
  if (!v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = (void *)a2;
    goto LABEL_78;
  }
  unsigned int v99 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = v31 + 32;
  uint64_t v35 = v91;
  unsigned int v93 = *(_DWORD *)(v91 + 40);
  int v90 = *(unsigned __int8 *)(v91 + 44);
  if (v93) {
    int v36 = 0;
  }
  else {
    int v36 = *(unsigned __int8 *)(v91 + 44);
  }
  uint64_t v38 = v103;
  uint64_t v37 = (void *)a2;
  BOOL v39 = v94;
  uint64_t v40 = v89;
  uint64_t v96 = v34;
  int v95 = v36;
  do
  {
    uint64_t v41 = (_OWORD *)(v34 + 96 * v33);
    long long v42 = v41[3];
    *(_OWORD *)&v107[32] = v41[2];
    *(_OWORD *)&v107[48] = v42;
    long long v43 = v41[5];
    *(_OWORD *)&v107[64] = v41[4];
    *(_OWORD *)&v107[80] = v43;
    long long v44 = v41[1];
    *(_OWORD *)unint64_t v107 = *v41;
    *(_OWORD *)&v107[16] = v44;
    int v45 = *(_DWORD *)v107;
    if ((*(_WORD *)v107 & 0x5000) != 0) {
      int v46 = v36;
    }
    else {
      int v46 = 1;
    }
    if (v46 == 1)
    {
      if ((*(_WORD *)v107 & 0x800) != 0)
      {
        uint64_t v100 = v33;
        unsigned int v48 = 0;
        LOBYTE(v49) = 1;
LABEL_39:
        char v101 = v49;
        uint64_t v50 = sub_1B630C6BC(*(int *)v107);
        uint64_t v51 = v50[2];
        if (v51)
        {
          unint64_t v52 = v50 + 8;
          while (1)
          {
            if ((*(unsigned char *)(v52 - 2) & 1) == 0)
            {
              BOOL v53 = *(v52 - 4) == 457 && *((unsigned char *)v52 + 64) == 13;
              if (v53 && (*v52 & 1) != 0) {
                break;
              }
            }
            v52 += 14;
            if (!--v51) {
              goto LABEL_52;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v55 = swift_allocObject();
          long long v56 = *(_OWORD *)&v107[8];
          long long v57 = *(_OWORD *)&v107[24];
          long long v58 = *(_OWORD *)&v107[40];
          long long v59 = *(_OWORD *)&v107[56];
          long long v60 = *(_OWORD *)&v107[72];
          char v61 = 1;
          uint64_t v62 = *(void *)&v107[88];
          if ((v45 & 0x8000) != 0)
          {
            char v63 = 0;
            char v64 = 15;
            uint64_t v65 = 1;
            uint64_t v66 = 5;
            goto LABEL_56;
          }
LABEL_54:
          char v67 = v101;
          uint64_t v65 = 0;
          uint64_t v66 = 0;
          char v64 = 0;
          char v63 = 1;
        }
        else
        {
LABEL_52:
          swift_bridgeObjectRelease();
          uint64_t v55 = swift_allocObject();
          char v63 = 0;
          long long v56 = *(_OWORD *)&v107[8];
          long long v57 = *(_OWORD *)&v107[24];
          long long v58 = *(_OWORD *)&v107[40];
          long long v59 = *(_OWORD *)&v107[56];
          long long v60 = *(_OWORD *)&v107[72];
          uint64_t v62 = *(void *)&v107[88];
          if ((v45 & 0x8000) == 0)
          {
            char v61 = 0;
            goto LABEL_54;
          }
          char v64 = 15;
          uint64_t v65 = 1;
          uint64_t v66 = 5;
          char v61 = 0;
LABEL_56:
          char v67 = v101;
        }
        int v68 = *(_DWORD *)(v35 + 48);
        char v69 = v61 | *v98;
        *(_DWORD *)(v55 + 16) = v45;
        *(_OWORD *)(v55 + 24) = v56;
        *(_OWORD *)(v55 + 40) = v57;
        *(_OWORD *)(v55 + 56) = v58;
        *(_OWORD *)(v55 + 72) = v59;
        *(_OWORD *)(v55 + 88) = v60;
        *(void *)(v55 + 104) = v62;
        *(_OWORD *)(v55 + 112) = 0u;
        *(_OWORD *)(v55 + 128) = 0u;
        *(void *)(v55 + 144) = v65;
        *(void *)(v55 + 152) = v66;
        *(void *)(v55 + 160) = v65;
        *(void *)(v55 + 168) = v66;
        *(unsigned char *)(v55 + 176) = v64;
        *(unsigned char *)(v55 + 177) = v63;
        *(_DWORD *)(v55 + 180) = v48;
        *(unsigned char *)(v55 + 184) = v67 & 1;
        *(_DWORD *)(v55 + 188) = v68;
        *(unsigned char *)(v55 + 192) = v69 & 1;
        *(unsigned char *)(v55 + 193) = 1;
        uint64_t v70 = v55;
        *(void *)(v55 + 200) = v39;
        if ((*(unsigned char *)(v9 + 80) & 0x80) != 0)
        {
          uint64_t v71 = qword_1EB97E370;
          swift_bridgeObjectRetain();
          if (v71 != -1) {
            swift_once();
          }
          float32x4_t v72 = v37;
          objc_msgSend((id)qword_1EB97E360, sel_lock);
          if (qword_1EB97E388 != -1) {
            swift_once();
          }
          uint64_t v73 = swift_bridgeObjectRetain();
          uint64_t v74 = sub_1B6CCBBDC(v73);
          swift_bridgeObjectRelease();
          objc_msgSend((id)qword_1EB97E360, sel_unlock);
          uint64_t v75 = *(void *)(v74 + 16);
          swift_bridgeObjectRelease();
          if (!v75)
          {
            uint64_t v35 = v91;
            uint64_t v37 = v72;
            BOOL v39 = v94;
            goto LABEL_72;
          }
          uint64_t v76 = v9;
          uint64_t v77 = *(void *)(a3 + 16);
          if (v77)
          {
            uint64_t v102 = v48;
            swift_bridgeObjectRetain();
            uint64_t v78 = (uint64_t *)(a3 + 40);
            uint64_t v79 = v76;
            unsigned int v80 = v99;
            do
            {
              uint64_t v81 = *(v78 - 1);
              uint64_t v82 = *v78;
              swift_retain();
              int v83 = sub_1B630AA60(v81, v82, v70, v79, a4, (int64x2_t *)v107, v102 | ((unint64_t)(v101 & 1) << 32), v103, a8 & 1, (void *)a2, v105, v91);
              swift_release();
              if ((v83 & ~v80) != 0) {
                int v84 = v83;
              }
              else {
                int v84 = 0;
              }
              v80 |= v84;
              v78 += 2;
              --v77;
            }
            while (v77);
            unsigned int v99 = v80;
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v9 = v79;
            uint64_t v35 = v91;
            uint64_t v38 = v103;
            uint64_t v37 = (void *)a2;
            uint64_t v40 = v89;
          }
          else
          {
            uint64_t v37 = v72;
            uint64_t v35 = v91;
            uint64_t v9 = v76;
            int v86 = sub_1B630AA60(0, 0, v70, v76, a4, (int64x2_t *)v107, v48 | ((unint64_t)(v101 & 1) << 32), v38, a8 & 1, v72, v105, v91);
            swift_release();
            if ((v86 & ~v99) != 0) {
              v99 |= v86;
            }
          }
          BOOL v39 = v94;
        }
        else
        {
          swift_bridgeObjectRetain();
LABEL_72:
          int v85 = sub_1B630AA60(0, 0, v70, v9, a4, (int64x2_t *)v107, v48 | ((unint64_t)(v101 & 1) << 32), v38, a8 & 1, v37, v105, v35);
          swift_release();
          if ((v85 & ~v99) != 0) {
            v99 |= v85;
          }
        }
        uint64_t v33 = v100;
        uint64_t v34 = v96;
        int v36 = v95;
        goto LABEL_24;
      }
      if ((*(_WORD *)v107 & 0x1000) != 0) {
        int v47 = v36;
      }
      else {
        int v47 = 1;
      }
      if ((*(_WORD *)v107 & 0x1000) != 0) {
        unsigned int v48 = 1;
      }
      else {
        unsigned int v48 = v93;
      }
      if (v47 == 1)
      {
        uint64_t v100 = v33;
        int v49 = v90 | ((unsigned __int16)(*(_WORD *)v107 & 0x1000) >> 12);
        goto LABEL_39;
      }
    }
LABEL_24:
    ++v33;
  }
  while (v33 != v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v99;
LABEL_78:
  char v87 = *(unsigned char *)(v9 + 80);
  swift_release();
  *((unsigned char *)v37 + 224) = (v87 & 8) != 0;
  return v32;
}

uint64_t sub_1B630AA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int64x2_t *a6, uint64_t a7, uint64_t a8, char a9, void *a10, uint64_t a11, uint64_t a12)
{
  *(void *)(a3 + 112) = a1;
  *(void *)(a3 + 120) = a2;
  swift_retain();
  swift_release();
  long long v18 = *(_OWORD *)(a3 + 160);
  v149[8] = *(_OWORD *)(a3 + 144);
  v149[9] = v18;
  long long v19 = *(_OWORD *)(a3 + 192);
  v149[10] = *(_OWORD *)(a3 + 176);
  v149[11] = v19;
  long long v20 = *(_OWORD *)(a3 + 96);
  v149[4] = *(_OWORD *)(a3 + 80);
  v149[5] = v20;
  long long v21 = *(_OWORD *)(a3 + 128);
  v149[6] = *(_OWORD *)(a3 + 112);
  v149[7] = v21;
  long long v22 = *(_OWORD *)(a3 + 32);
  v149[0] = *(_OWORD *)(a3 + 16);
  v149[1] = v22;
  long long v23 = *(_OWORD *)(a3 + 64);
  v149[2] = *(_OWORD *)(a3 + 48);
  v149[3] = v23;
  sub_1B630D0A4((uint64_t)v149);
  sub_1B630BDCC((unsigned int *)v149, (uint64_t)v106);
  sub_1B630D06C((uint64_t)v149);
  sub_1B62CA210((uint64_t)v106, (uint64_t)__src, &qword_1EB97F970);
  if (sub_1B630C698((uint64_t)__src) == 1) {
    return 2;
  }
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v24 = sub_1B638A310((uint64_t)__dst, 1);
  if (!v24)
  {
    if (a9)
    {
      sub_1B630B954(v106);
      return 1;
    }
    goto LABEL_8;
  }
  unint64_t v26 = v24;
  if (v24 == 1)
  {
LABEL_8:
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&v122[0] = 0;
    *((void *)&v122[0] + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&v122[0] = 0xD000000000000014;
    *((void *)&v122[0] + 1) = 0x80000001B6F50DB0;
    sub_1B628EC80();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v28 = v122[0];
    int v29 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&v122[0] = 0;
    swift_retain();
    sub_1B6B33E34(v29, (uint64_t *)v122, v28, *((uint64_t *)&v28 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_13;
  }
  if (v24 == 2)
  {
    sub_1B630B954(v106);
    return 4;
  }
  if (!v25)
  {
    uint64_t v32 = qword_1EB9852D0;
    swift_unknownObjectRetain();
    if (v32 != -1) {
      swift_once();
    }
    *(void *)&v122[0] = 0;
    *((void *)&v122[0] + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&v122[0] = 0xD000000000000016;
    *((void *)&v122[0] + 1) = 0x80000001B6F50D20;
    sub_1B628EC80();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v33 = v122[0];
    int v34 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&v122[0] = 0;
    swift_retain();
    sub_1B6B33E34(v34, (uint64_t *)v122, v33, *((uint64_t *)&v33 + 1));
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B630B7D8(v26, 0);
LABEL_13:
    sub_1B630B954(v106);
    return 2;
  }
  uint64_t v30 = a11;
  uint64_t v102 = v25;
  uint64_t v103 = a6;
  if (*(unsigned char *)(a4 + 209))
  {
    id v31 = v25;
    swift_unknownObjectRetain();
    goto LABEL_33;
  }
  uint64_t v35 = (void *)a10[3];
  a10[3] = v25;
  id v36 = v25;
  unint64_t v98 = v26;
  swift_unknownObjectRetain();

  id v37 = objc_msgSend(v36, sel_vertexBindings);
  sub_1B62F3064(0, (unint64_t *)&qword_1EB97D7E0);
  unint64_t v38 = sub_1B6E31C28();

  BOOL v39 = *(void **)(a11 + 16);
  uint64_t v40 = *(void **)(a11 + 280);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1B630D244(v38, v39, v40);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v41 = objc_msgSend(v36, sel_fragmentBindings);
  unint64_t v42 = sub_1B6E31C28();

  long long v43 = *(void **)(a11 + 16);
  swift_unknownObjectRetain();
  long long v44 = *(void **)(a11 + 280);
  swift_unknownObjectRetain();
  sub_1B630D244(v42, v43, v44);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  unint64_t v26 = v98;
  LODWORD(v44) = (*(unsigned __int16 *)(a4 + 80) >> 2) & 1;
  swift_retain();
  uint64_t v94 = sub_1B62F2A80((id)2, 1, v36, __dst, (char)v44, a11);
  uint64_t v46 = v45;
  id v99 = v47;
  swift_release();
  int v48 = (*(unsigned __int16 *)(a4 + 80) >> 2) & 1;
  swift_retain();
  uint64_t v92 = sub_1B62F2A80((id)2, 2, v36, __dst, v48, a11);
  uint64_t v50 = v49;
  id v96 = v51;
  swift_release();
  uint64_t v52 = v46;
  if (v46)
  {
    uint64_t v53 = v50;
    char v54 = 0;
    if (!v50 || v46 != v50) {
      goto LABEL_30;
    }
LABEL_28:
    if (v99 == v96)
    {
      uint64_t v55 = v53;
      char v54 = sub_1B6918E2C(v94, v92);
      uint64_t v53 = v55;
    }
    goto LABEL_30;
  }
  char v54 = 0;
  uint64_t v53 = v50;
  if (!v50) {
    goto LABEL_28;
  }
LABEL_30:
  *(void *)(a4 + 160) = v94;
  *(void *)(a4 + 168) = v52;
  *(void *)(a4 + 176) = v99;
  *(void *)(a4 + 184) = v92;
  *(void *)(a4 + 192) = v53;
  *(void *)(a4 + 200) = v96;
  *(unsigned char *)(a4 + 208) = v54 & 1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v123[6] = *(_OWORD *)&__dst[128];
  v123[7] = *(_OWORD *)&__dst[144];
  v123[8] = *(_OWORD *)&__dst[160];
  v123[2] = *(_OWORD *)&__dst[64];
  long long v123[3] = *(_OWORD *)&__dst[80];
  v123[4] = *(_OWORD *)&__dst[96];
  v123[5] = *(_OWORD *)&__dst[112];
  v122[0] = *(_OWORD *)__dst;
  v122[1] = *(_OWORD *)&__dst[16];
  v123[0] = *(_OWORD *)&__dst[32];
  v123[1] = *(_OWORD *)&__dst[48];
  sub_1B62CA210((uint64_t)v123 + 8, (uint64_t)v124, (unint64_t *)&qword_1EB97D6F0);
  sub_1B63127F0(v124, (void (*)(void, void, void, void, void))sub_1B6312ABC);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CA210((uint64_t)v124, (uint64_t)v150, (unint64_t *)&qword_1EB97D6F0);
  uint64_t v56 = v151;
  if (v151) {
    sub_1B63127F0(v124, (void (*)(void, void, void, void, void))sub_1B6312CF0);
  }
  *(unsigned char *)(a4 + 209) = v56 != 0;
  a6 = v103;
  uint64_t v30 = a11;
LABEL_33:
  swift_retain();
  sub_1B630BC2C(a6->i32[0], v30, v107);
  swift_release();
  sub_1B630B898((uint64_t)v107, (uint64_t)v108);
  uint64_t v57 = v108[0];
  if (v108[0])
  {
    uint64_t v58 = v108[1];
    char v59 = v109;
    uint64_t v60 = v110;
    uint64_t v61 = v111;
    uint64_t v62 = v112;
    uint64_t v63 = v113;
    uint64_t v64 = v114;
    uint64_t v65 = v115;
    uint64_t v66 = v116;
    uint64_t v67 = v117;
    uint64_t v68 = v118;
    uint64_t v69 = v119;
  }
  else if (*(unsigned char *)(a12 + 53) == 1)
  {
    uint64_t v70 = *(void *)(v30 + 248);
    char v72 = *(unsigned char *)(a12 + 64);
    uint64_t v137 = *(void *)(a12 + 56);
    uint64_t v71 = v137;
    char v138 = v72;
    uint64_t v139 = 7;
    uint64_t v140 = 0;
    uint64_t v142 = 0;
    uint64_t v141 = 0;
    uint64_t v143 = -1;
    uint64_t v144 = 7;
    uint64_t v145 = 0;
    uint64_t v147 = 0;
    uint64_t v146 = 0;
    uint64_t v148 = -1;
    uint64_t v73 = *(os_unfair_lock_s **)(v70 + 56);
    swift_retain();
    os_unfair_lock_lock(v73);
    sub_1B6D26C88(v70, &v137, v125);
    os_unfair_lock_unlock(v73);
    swift_release();
    uint64_t v64 = -1;
    uint64_t v60 = 7;
    char v59 = v72;
    uint64_t v58 = v71;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v68 = 0;
    uint64_t v57 = v125[0];
    uint64_t v69 = -1;
    uint64_t v65 = 7;
  }
  else
  {
    uint64_t v74 = *(void *)(v30 + 248);
    if ((a7 & 0x1FFFFFFFFLL) == 0x100000000)
    {
      uint64_t v57 = *(void *)(v74 + 64);
      uint64_t v101 = *(void *)(v74 + 72);
      char v100 = *(unsigned char *)(v74 + 80);
      uint64_t v62 = *(void *)(v74 + 104);
      uint64_t v95 = *(void *)(v74 + 96);
      id v97 = *(id *)(v74 + 88);
      uint64_t v63 = *(void *)(v74 + 112);
      uint64_t v93 = *(void *)(v74 + 120);
      uint64_t v65 = *(void *)(v74 + 128);
      uint64_t v66 = *(void *)(v74 + 136);
      uint64_t v67 = *(void *)(v74 + 144);
      uint64_t v68 = *(void *)(v74 + 152);
      uint64_t v75 = *(void *)(v74 + 160);
    }
    else
    {
      uint64_t v57 = *(void *)(v74 + 168);
      uint64_t v101 = *(void *)(v74 + 176);
      char v100 = *(unsigned char *)(v74 + 184);
      uint64_t v62 = *(void *)(v74 + 208);
      uint64_t v95 = *(void *)(v74 + 200);
      id v97 = *(id *)(v74 + 192);
      uint64_t v63 = *(void *)(v74 + 216);
      uint64_t v93 = *(void *)(v74 + 224);
      uint64_t v65 = *(void *)(v74 + 232);
      uint64_t v66 = *(void *)(v74 + 240);
      uint64_t v67 = *(void *)(v74 + 248);
      uint64_t v68 = *(void *)(v74 + 256);
      uint64_t v75 = *(void *)(v74 + 264);
    }
    uint64_t v91 = v75;
    swift_unknownObjectRetain();
    uint64_t v69 = v91;
    uint64_t v64 = v93;
    uint64_t v61 = v95;
    uint64_t v60 = (uint64_t)v97;
    char v59 = v100;
    uint64_t v58 = v101;
  }
  v125[0] = v26;
  v125[1] = v57;
  v125[2] = v58;
  char v126 = v59;
  uint64_t v127 = v60;
  uint64_t v128 = v61;
  uint64_t v129 = v62;
  uint64_t v130 = v63;
  uint64_t v131 = v64;
  uint64_t v132 = v65;
  uint64_t v133 = v66;
  uint64_t v134 = v67;
  uint64_t v135 = v68;
  uint64_t v136 = v69;
  if (!a2)
  {
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v104 = a10[1];
    a10[1] = 0x8000000000000000;
    sub_1B63110D8((uint64_t)v125, v103, isUniquelyReferenced_nonNull_native);
    a10[1] = v104;
    swift_bridgeObjectRelease();
    sub_1B630B954(v106);
    sub_1B630B7D8(v26, v102);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
    int v85 = 0;
LABEL_51:
    swift_unknownObjectRelease();
    sub_1B62C6A50((uint64_t)v85);
    return 4;
  }
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  char v76 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v77 = (void *)*a10;
  *a10 = 0x8000000000000000;
  unint64_t v78 = sub_1B62C1A30(a1);
  char v80 = v79;
  uint64_t v81 = v77[2] + ((v79 & 1) == 0);
  if (v77[3] >= v81)
  {
    if ((v76 & 1) == 0) {
      sub_1B6AD2CA4();
    }
    goto LABEL_48;
  }
  sub_1B6AC1A7C(v81, v76);
  unint64_t v82 = sub_1B62C1A30(a1);
  if ((v80 & 1) == (v83 & 1))
  {
    unint64_t v78 = v82;
LABEL_48:
    *a10 = v77;
    swift_bridgeObjectRelease();
    int v86 = (void *)*a10;
    swift_bridgeObjectRetain();
    if ((v80 & 1) == 0)
    {
      char v87 = sub_1B6303CBC(MEMORY[0x1E4FBC860]);
      sub_1B636A59C(v78, a1, (uint64_t)v87, v86);
    }
    uint64_t v88 = v86[7];
    swift_bridgeObjectRelease();
    uint64_t v89 = 8 * v78;
    char v90 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v105 = *(void *)(v88 + v89);
    *(void *)(v88 + v89) = 0x8000000000000000;
    sub_1B63110D8((uint64_t)v125, v103, v90);
    *(void *)(v88 + v89) = v105;
    swift_bridgeObjectRelease();
    sub_1B630B954(v106);
    sub_1B630B7D8(v26, v102);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
    int v85 = sub_1B6CCC13C;
    goto LABEL_51;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B630B7D8(unint64_t a1, void *a2)
{
  if (a1 >= 3)
  {
    swift_unknownObjectRelease();
  }
}

__n128 sub_1B630B81C(unint64_t a1, _OWORD *a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  long long v4 = (_OWORD *)(a4[6] + 96 * a1);
  long long v5 = a2[3];
  v4[2] = a2[2];
  v4[3] = v5;
  long long v6 = a2[5];
  void v4[4] = a2[4];
  v4[5] = v6;
  long long v7 = a2[1];
  *long long v4 = *a2;
  v4[1] = v7;
  uint64_t v8 = a4[7] + 112 * a1;
  long long v9 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a3;
  *(_OWORD *)(v8 + 16) = v9;
  long long v10 = *(_OWORD *)(a3 + 96);
  long long v11 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v8 + 96) = v10;
  __n128 result = *(__n128 *)(a3 + 32);
  long long v13 = *(_OWORD *)(a3 + 48);
  *(__n128 *)(v8 + 32) = result;
  *(_OWORD *)(v8 + 48) = v13;
  *(_OWORD *)(v8 + 64) = v11;
  ++a4[2];
  return result;
}

uint64_t sub_1B630B898(uint64_t a1, uint64_t a2)
{
  sub_1B630B8FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B630B8FC()
{
  if (!qword_1EB980610)
  {
    sub_1B6CCC1AC();
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980610);
    }
  }
}

uint64_t *sub_1B630B954(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B630BB08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2 != 1)
  {
    sub_1B6312CF0(result, a2);
    sub_1B6312CF0(a6, a7);
    sub_1B6312CF0(a11, a12);
    sub_1B6312CF0(a16, a17);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B630BC2C@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if ((a1 & 0x800) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 248);
    long long v18 = (uint64_t *)(v17 + 72);
    long long v19 = (unsigned __int8 *)(v17 + 80);
    long long v20 = (uint64_t *)(v17 + 88);
    long long v21 = (uint64_t *)(v17 + 96);
    long long v22 = (uint64_t *)(v17 + 104);
    long long v23 = (uint64_t *)(v17 + 112);
    uint64_t v24 = (uint64_t *)(v17 + 120);
    uint64_t v25 = (uint64_t *)(v17 + 128);
    unint64_t v26 = (uint64_t *)(v17 + 136);
    long long v27 = (uint64_t *)(v17 + 144);
    long long v28 = (uint64_t *)(v17 + 152);
    int v29 = (uint64_t *)(v17 + 160);
LABEL_8:
    uint64_t v33 = *v27;
    uint64_t v34 = *v28;
    uint64_t v32 = *v26;
    uint64_t v12 = *v25;
    uint64_t v11 = *v24;
    uint64_t v10 = *v23;
    uint64_t v9 = *v22;
    uint64_t v8 = *v21;
    uint64_t v7 = *v20;
    uint64_t v6 = *v19;
    uint64_t v5 = *v18;
    uint64_t v16 = *v29;
    uint64_t result = swift_unknownObjectRetain();
    uint64_t v13 = v32;
    uint64_t v14 = v33;
    uint64_t v15 = v34;
    goto LABEL_9;
  }
  if (a1 < 0)
  {
    uint64_t v30 = *(void *)(a2 + 248);
    long long v18 = (uint64_t *)(v30 + 384);
    long long v19 = (unsigned __int8 *)(v30 + 392);
    long long v20 = (uint64_t *)(v30 + 400);
    long long v21 = (uint64_t *)(v30 + 408);
    long long v22 = (uint64_t *)(v30 + 416);
    long long v23 = (uint64_t *)(v30 + 424);
    uint64_t v24 = (uint64_t *)(v30 + 432);
    uint64_t v25 = (uint64_t *)(v30 + 440);
    unint64_t v26 = (uint64_t *)(v30 + 448);
    long long v27 = (uint64_t *)(v30 + 456);
    long long v28 = (uint64_t *)(v30 + 464);
    int v29 = (uint64_t *)(v30 + 472);
    goto LABEL_8;
  }
  if ((a1 & 0x1000) != 0)
  {
    uint64_t v31 = *(void *)(a2 + 248);
    long long v18 = (uint64_t *)(v31 + 176);
    long long v19 = (unsigned __int8 *)(v31 + 184);
    long long v20 = (uint64_t *)(v31 + 192);
    long long v21 = (uint64_t *)(v31 + 200);
    long long v22 = (uint64_t *)(v31 + 208);
    long long v23 = (uint64_t *)(v31 + 216);
    uint64_t v24 = (uint64_t *)(v31 + 224);
    uint64_t v25 = (uint64_t *)(v31 + 232);
    unint64_t v26 = (uint64_t *)(v31 + 240);
    long long v27 = (uint64_t *)(v31 + 248);
    long long v28 = (uint64_t *)(v31 + 256);
    int v29 = (uint64_t *)(v31 + 264);
    goto LABEL_8;
  }
  uint64_t result = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
LABEL_9:
  *a3 = result;
  a3[1] = v5;
  a3[2] = v6;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v9;
  a3[6] = v10;
  a3[7] = v11;
  a3[8] = v12;
  a3[9] = v13;
  a3[10] = v14;
  a3[11] = v15;
  a3[12] = v16;
  return result;
}

uint64_t sub_1B630BDCC@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t);
  __int16 v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64x2_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  long long v49;
  long long v50;
  uint64_t v51;
  long long v52;
  long long v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  long long v59;
  long long v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  long long v74;
  uint64_t v75;
  uint64_t v76;
  long long v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  long long v84;
  long long v85;
  unsigned char v86[48];
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  long long v92;
  unsigned char __src[808];
  unsigned char __dst[808];
  uint64_t v95[101];
  unsigned char v96[176];
  void *v97;
  uint64_t v98[22];
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  long long v104;
  long long v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _OWORD v119[5];
  uint64_t v120;
  char v121[8];
  _OWORD v122[11];
  long long v123;
  uint64_t v124;
  long long v125;
  uint64_t v126;
  char v127;
  char v128;
  void v129[6];
  int v130;
  char v131;
  unsigned int v132;
  char v133;
  unsigned int v134;
  char v135;

  uint64_t v3 = v2;
  uint64_t v6 = (void *)*((void *)a1 + 23);
  uint64_t v7 = *a1;
  uint64_t v8 = sub_1B630C6BC(*a1);
  v95[0] = (uint64_t)v6;
  swift_bridgeObjectRetain();
  sub_1B630C530((uint64_t)v8);
  sub_1B630C4C0((uint64_t)(a1 + 41), (uint64_t)v121);
  sub_1B630C4C0((uint64_t)v121, (uint64_t)&v134);
  if (v135) {
    uint64_t v9 = v134;
  }
  else {
    uint64_t v9 = 3;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = v6;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_1B62D96F4(0, v6[2] + 1, 1, v6);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_1B62D96F4(v11 > 1, v12 + 1, 1, v10);
  }
  _OWORD v10[2] = v12 + 1;
  uint64_t v13 = &v10[14 * v12];
  *((_OWORD *)v13 + 2) = xmmword_1B6EBF2E0;
  *((unsigned char *)v13 + 48) = 0;
  v13[8] = v9;
  *(_OWORD *)(v13 + 9) = 0u;
  *(_OWORD *)(v13 + 11) = 0u;
  *(_OWORD *)(v13 + 13) = 0u;
  v13[15] = 0;
  *((unsigned char *)v13 + 128) = 14;
  swift_bridgeObjectRelease();
  id v97 = v10;
  uint64_t v15 = *((void *)a1 + 12);
  uint64_t v14 = *((void *)a1 + 13);
  if (v14)
  {
    uint64_t v16 = sub_1B6971984(*((_WORD **)a1 + 13));
    sub_1B630C530(v16);
  }
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_1B630C530(v17);
  long long v18 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v3 + 88);
  swift_retain();
  v18(v98, v7);
  sub_1B62CA210((uint64_t)v98, (uint64_t)v96, &qword_1EB97EB68);
  swift_release();
  sub_1B62CA210((uint64_t)v98, (uint64_t)&v99, &qword_1EB97EB68);
  if (sub_1B630C698((uint64_t)&v99) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1B6BAAB20(__dst);
    sub_1B62CA210((uint64_t)__dst, (uint64_t)v95, &qword_1EB97F970);
    return sub_1B62CA210((uint64_t)v95, a2, &qword_1EB97F970);
  }
  unint64_t v78 = v15;
  char v79 = a2;
  char v80 = v3;
  char v72 = v14;
  v20 = (v7 & 0x800) != 0 && *((float *)a1 + 43) < 0.0 && (long long v19 = *(_WORD *)(v3 + 80), (v19 & 1) == 0) && (v19 & 2) == 0;
  long long v21 = v99;
  long long v22 = v100;
  long long v23 = v101;
  uint64_t v24 = v102;
  uint64_t v62 = v106;
  uint64_t v25 = v103;
  uint64_t v60 = v104;
  unint64_t v26 = v108;
  uint64_t v81 = v109;
  unint64_t v82 = v110;
  char v83 = v107;
  uint64_t v66 = v111;
  uint64_t v67 = v112;
  uint64_t v73 = v113;
  uint64_t v68 = v114;
  uint64_t v69 = v115;
  uint64_t v70 = v118;
  uint64_t v71 = v116;
  char v59 = v105;
  if (*((unsigned char *)a1 + 161) != 1)
  {
    uint64_t v77 = *((_OWORD *)a1 + 7);
    uint64_t v74 = *(_OWORD *)(a1 + 34);
    uint64_t v75 = *((void *)a1 + 16);
    char v76 = *((void *)a1 + 19);
    uint64_t v64 = v117;
    if ((v7 & 0x800) == 0) {
      goto LABEL_25;
    }
LABEL_21:
    LOBYTE(v65) = 0;
    if (v20) {
      goto LABEL_22;
    }
LABEL_32:
    sub_1B62CA210((uint64_t)v96, (uint64_t)v95, &qword_1EB97EB68);
    sub_1B63129D0(v95);
    uint64_t v50 = v59;
    uint64_t v49 = v60;
    uint64_t v45 = v82;
    int v47 = v83;
    uint64_t v46 = v26;
    long long v44 = v81;
    long long v43 = v25;
    unint64_t v42 = v24;
    uint64_t v34 = v66;
    uint64_t v35 = v67;
    id v36 = v73;
    id v37 = v23;
    unint64_t v38 = v68;
    BOOL v39 = v69;
    id v41 = v70;
    uint64_t v40 = v71;
    int v48 = v62;
    goto LABEL_33;
  }
  long long v27 = v103;
  long long v28 = v102;
  int v29 = v101;
  uint64_t v30 = v100;
  uint64_t v31 = v99;
  uint64_t v32 = v117;
  sub_1B630C4C0((uint64_t)v121, (uint64_t)&v130);
  uint64_t v77 = 0u;
  if (v131 == 1)
  {
    uint64_t v75 = 1;
    char v76 = qword_1B6EBF550[v130];
    uint64_t v33 = vdupq_n_s64(1uLL);
    v33.i64[0] = v76;
    uint64_t v74 = (__int128)v33;
  }
  else
  {
    char v76 = 0;
    uint64_t v74 = xmmword_1B6E4F270;
    uint64_t v75 = 1;
  }
  uint64_t v51 = v32;
  long long v21 = v31;
  long long v22 = v30;
  long long v23 = v29;
  uint64_t v24 = v28;
  uint64_t v25 = v27;
  uint64_t v64 = v51;
  if ((v7 & 0x800) != 0) {
    goto LABEL_21;
  }
LABEL_25:
  if ((a1[44] & 1) == 0)
  {
    sub_1B630C4C0((uint64_t)v121, (uint64_t)&v132);
    if (v133 == 1 && v132 >= 2)
    {
      LOBYTE(v65) = 14;
      if (!v20) {
        goto LABEL_32;
      }
LABEL_22:
      swift_bridgeObjectRetain();
      sub_1B6312ABC(v21, v22);
      uint64_t v58 = v26;
      uint64_t v63 = v25;
      uint64_t v34 = v66;
      sub_1B6312ABC(v83, v26);
      uint64_t v61 = v24;
      uint64_t v35 = v67;
      id v36 = v73;
      id v37 = v23;
      unint64_t v38 = v68;
      BOOL v39 = v69;
      uint64_t v40 = v71;
      sub_1B6312ABC(v67, v73);
      id v41 = swift_unknownObjectRetain();
      unint64_t v42 = v61;
      long long v43 = v63;
      long long v44 = v81;
      uint64_t v45 = v82;
      uint64_t v46 = v58;
      int v47 = v83;
      int v48 = 0;
      uint64_t v49 = 0uLL;
      uint64_t v50 = 0uLL;
LABEL_33:
      *(void *)&int v84 = v21;
      *((void *)&v84 + 1) = v22;
      *(void *)&int v85 = v37;
      *((void *)&v85 + 1) = v42;
      *(void *)int v86 = v43;
      *(_OWORD *)&uint64_t v86[8] = v49;
      *(_OWORD *)&v86[24] = v50;
      *(void *)&unsigned char v86[40] = v48;
      *(void *)&char v87 = v47;
      *((void *)&v87 + 1) = v46;
      *(void *)&uint64_t v88 = v44;
      *((void *)&v88 + 1) = v45;
      *(void *)&uint64_t v89 = v34;
      *((void *)&v89 + 1) = v35;
      *(void *)&char v90 = v36;
      *((void *)&v90 + 1) = v38;
      *(void *)&uint64_t v91 = v39;
      *((void *)&v91 + 1) = v40;
      *(void *)&uint64_t v92 = v64;
      *((void *)&v92 + 1) = v41;
      v122[1] = v85;
      v122[0] = v84;
      v122[5] = v87;
      v122[4] = *(_OWORD *)&v86[32];
      _OWORD v122[2] = *(_OWORD *)v86;
      v122[3] = *(_OWORD *)&v86[16];
      v122[10] = v92;
      v122[9] = v91;
      v122[8] = v90;
      void v122[6] = v88;
      v122[7] = v89;
      uint64_t v52 = *(_OWORD *)(a1 + 14);
      _OWORD v119[2] = *(_OWORD *)(a1 + 10);
      v119[3] = v52;
      v119[4] = *(_OWORD *)(a1 + 18);
      uint64_t v120 = *((void *)a1 + 11);
      uint64_t v53 = *(_OWORD *)(a1 + 6);
      v119[0] = *(_OWORD *)(a1 + 2);
      v119[1] = v53;
      char v54 = (uint64_t)v97;
      uint64_t v123 = v77;
      uint64_t v124 = v75;
      uint64_t v125 = v74;
      char v126 = v76;
      uint64_t v127 = v65;
      uint64_t v128 = 0;
      uint64_t v55 = *(void *)(v80 + 16);
      v129[0] = 0;
      v129[1] = 0;
      _OWORD v129[2] = 2;
      memset(&v129[3], 0, 24);
      uint64_t v56 = *((unsigned char *)a1 + 177);
      swift_retain();
      sub_1B62D5ED4((uint64_t *)v122, v119, v78, v72, v54, (uint64_t)&v123, v55, (uint64_t)v129, (uint64_t)__src, 1, v56);
      swift_release();
      sub_1B638A224((uint64_t *)&v84);
      sub_1B630D0DC(v98);
      memcpy(__dst, __src, sizeof(__dst));
      nullsub_1(__dst);
      sub_1B62CA210((uint64_t)__dst, (uint64_t)v95, &qword_1EB97F970);
      a2 = v79;
      return sub_1B62CA210((uint64_t)v95, a2, &qword_1EB97F970);
    }
  }
  if (*(void *)(v80 + 72) < 0x100uLL)
  {
    uint64_t v65 = *(void *)(v80 + 72);
    if (v20) {
      goto LABEL_22;
    }
    goto LABEL_32;
  }
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

uint64_t sub_1B630C4C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for QueryScope(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t sub_1B630C530(uint64_t a1)
{
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + *(void *)(a1 + 16);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v7 = v3[3] >> 1, v7 < v5))
  {
    if (v4 <= v5) {
      int64_t v8 = v5;
    }
    else {
      int64_t v8 = v4;
    }
    uint64_t v3 = sub_1B62D96F4(isUniquelyReferenced_nonNull_native, v8, 1, v3);
    int64_t v7 = v3[3] >> 1;
  }
  sub_1B630C5E4((unint64_t)&v3[14 * v3[2] + 4], v7 - v3[2], a1);
  if (v9 >= 1) {
    v3[2] += v9;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v3;
  return result;
}

uint64_t sub_1B630C5E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return a3;
  }
  if (a3 + 32 >= a1 + 112 * v4 || a3 + 32 + 112 * v4 <= a1)
  {
    swift_arrayInitWithCopy();
    return a3;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B630C698(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1B630C6BC(int a1)
{
  if ((a1 & 1) == 0)
  {
    int v2 = (void *)MEMORY[0x1E4FBC860];
    if ((a1 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  int v2 = sub_1B62D96F4(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    int v2 = sub_1B62D96F4(v3 > 1, v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  int64_t v5 = &v2[14 * v4];
  *((_OWORD *)v5 + 2) = xmmword_1B6ECE6D0;
  *((unsigned char *)v5 + 48) = 0;
  v5[8] = 1;
  *(_OWORD *)(v5 + 9) = 0u;
  *(_OWORD *)(v5 + 11) = 0u;
  *(_OWORD *)(v5 + 13) = 0u;
  v5[15] = 0;
  *((unsigned char *)v5 + 128) = 13;
  if ((a1 & 4) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      int v2 = sub_1B62D96F4(v6 > 1, v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    int64_t v8 = &v2[14 * v7];
    *((_OWORD *)v8 + 2) = xmmword_1B6ECE6E0;
    *((unsigned char *)v8 + 48) = 0;
    v8[8] = 1;
    *(_OWORD *)(v8 + 9) = 0u;
    *(_OWORD *)(v8 + 11) = 0u;
    *(_OWORD *)(v8 + 13) = 0u;
    v8[15] = 0;
    *((unsigned char *)v8 + 128) = 13;
  }
LABEL_12:
  if ((a1 & 0x400) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v11 = v2[2];
    unint64_t v10 = v2[3];
    if (v11 >= v10 >> 1) {
      int v2 = sub_1B62D96F4(v10 > 1, v11 + 1, 1, v2);
    }
    v2[2] = v11 + 1;
    unint64_t v12 = &v2[14 * v11];
    *((_OWORD *)v12 + 2) = xmmword_1B6ECE6F0;
    *((unsigned char *)v12 + 48) = 0;
    v12[8] = 1;
    *(_OWORD *)(v12 + 9) = 0u;
    *(_OWORD *)(v12 + 11) = 0u;
    *(_OWORD *)(v12 + 13) = 0u;
    v12[15] = 0;
    *((unsigned char *)v12 + 128) = 13;
    if ((a1 & 0x40) == 0)
    {
LABEL_14:
      if ((a1 & 0x2000000) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
  }
  else if ((a1 & 0x40) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v14 = v2[2];
  unint64_t v13 = v2[3];
  if (v14 >= v13 >> 1) {
    int v2 = sub_1B62D96F4(v13 > 1, v14 + 1, 1, v2);
  }
  v2[2] = v14 + 1;
  uint64_t v15 = &v2[14 * v14];
  *((_OWORD *)v15 + 2) = xmmword_1B6ECE700;
  *((unsigned char *)v15 + 48) = 0;
  v15[8] = 1;
  *(_OWORD *)(v15 + 9) = 0u;
  *(_OWORD *)(v15 + 11) = 0u;
  *(_OWORD *)(v15 + 13) = 0u;
  v15[15] = 0;
  *((unsigned char *)v15 + 128) = 13;
  if ((a1 & 0x2000000) == 0)
  {
LABEL_15:
    if ((a1 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_36:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v17 = v2[2];
  unint64_t v16 = v2[3];
  if (v17 >= v16 >> 1) {
    int v2 = sub_1B62D96F4(v16 > 1, v17 + 1, 1, v2);
  }
  v2[2] = v17 + 1;
  long long v18 = &v2[14 * v17];
  *((_OWORD *)v18 + 2) = xmmword_1B6ECE710;
  *((unsigned char *)v18 + 48) = 0;
  v18[8] = 1;
  *(_OWORD *)(v18 + 9) = 0u;
  *(_OWORD *)(v18 + 11) = 0u;
  *(_OWORD *)(v18 + 13) = 0u;
  v18[15] = 0;
  *((unsigned char *)v18 + 128) = 13;
  if ((a1 & 0x10000) == 0)
  {
LABEL_16:
    uint64_t v9 = (_OWORD *)&unk_1B6ECE000;
    if ((a1 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_41:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v20 = v2[2];
  unint64_t v19 = v2[3];
  if (v20 >= v19 >> 1) {
    int v2 = sub_1B62D96F4(v19 > 1, v20 + 1, 1, v2);
  }
  v2[2] = v20 + 1;
  long long v21 = &v2[14 * v20];
  *((_OWORD *)v21 + 2) = xmmword_1B6ECE720;
  *((unsigned char *)v21 + 48) = 0;
  v21[8] = 1;
  *(_OWORD *)(v21 + 9) = 0u;
  *(_OWORD *)(v21 + 11) = 0u;
  *(_OWORD *)(v21 + 13) = 0u;
  v21[15] = 0;
  *((unsigned char *)v21 + 128) = 13;
  uint64_t v9 = &unk_1B6ECE000;
  if ((a1 & 0x20000) == 0)
  {
LABEL_17:
    if ((a1 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_46:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v23 = v2[2];
  unint64_t v22 = v2[3];
  if (v23 >= v22 >> 1) {
    int v2 = sub_1B62D96F4(v22 > 1, v23 + 1, 1, v2);
  }
  v2[2] = v23 + 1;
  uint64_t v24 = &v2[14 * v23];
  *((_OWORD *)v24 + 2) = v9[115];
  *((unsigned char *)v24 + 48) = 0;
  v24[8] = 1;
  *(_OWORD *)(v24 + 9) = 0u;
  *(_OWORD *)(v24 + 11) = 0u;
  *(_OWORD *)(v24 + 13) = 0u;
  v24[15] = 0;
  *((unsigned char *)v24 + 128) = 14;
  if ((a1 & 0x40000) == 0)
  {
LABEL_18:
    if ((a1 & 0x80000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_56;
  }
LABEL_51:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v26 = v2[2];
  unint64_t v25 = v2[3];
  if (v26 >= v25 >> 1) {
    int v2 = sub_1B62D96F4(v25 > 1, v26 + 1, 1, v2);
  }
  v2[2] = v26 + 1;
  long long v27 = &v2[14 * v26];
  *((_OWORD *)v27 + 2) = v9[115];
  *((unsigned char *)v27 + 48) = 0;
  v27[8] = 2;
  *(_OWORD *)(v27 + 9) = 0u;
  *(_OWORD *)(v27 + 11) = 0u;
  *(_OWORD *)(v27 + 13) = 0u;
  v27[15] = 0;
  *((unsigned char *)v27 + 128) = 14;
  if ((a1 & 0x80000) == 0)
  {
LABEL_19:
    if ((a1 & 0x100000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_56:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v29 = v2[2];
  unint64_t v28 = v2[3];
  if (v29 >= v28 >> 1) {
    int v2 = sub_1B62D96F4(v28 > 1, v29 + 1, 1, v2);
  }
  v2[2] = v29 + 1;
  uint64_t v30 = &v2[14 * v29];
  *((_OWORD *)v30 + 2) = v9[115];
  *((unsigned char *)v30 + 48) = 0;
  v30[8] = 3;
  *(_OWORD *)(v30 + 9) = 0u;
  *(_OWORD *)(v30 + 11) = 0u;
  *(_OWORD *)(v30 + 13) = 0u;
  v30[15] = 0;
  *((unsigned char *)v30 + 128) = 14;
  if ((a1 & 0x100000) == 0)
  {
LABEL_20:
    if ((a1 & 0x200000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_66;
  }
LABEL_61:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v32 = v2[2];
  unint64_t v31 = v2[3];
  if (v32 >= v31 >> 1) {
    int v2 = sub_1B62D96F4(v31 > 1, v32 + 1, 1, v2);
  }
  v2[2] = v32 + 1;
  uint64_t v33 = &v2[14 * v32];
  *((_OWORD *)v33 + 2) = v9[115];
  *((unsigned char *)v33 + 48) = 0;
  uint64_t v33[8] = 4;
  *(_OWORD *)(v33 + 9) = 0u;
  *(_OWORD *)(v33 + 11) = 0u;
  *(_OWORD *)(v33 + 13) = 0u;
  v33[15] = 0;
  *((unsigned char *)v33 + 128) = 14;
  if ((a1 & 0x200000) == 0)
  {
LABEL_21:
    if ((a1 & 0x400000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_71;
  }
LABEL_66:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v35 = v2[2];
  unint64_t v34 = v2[3];
  if (v35 >= v34 >> 1) {
    int v2 = sub_1B62D96F4(v34 > 1, v35 + 1, 1, v2);
  }
  v2[2] = v35 + 1;
  id v36 = &v2[14 * v35];
  *((_OWORD *)v36 + 2) = v9[115];
  *((unsigned char *)v36 + 48) = 0;
  unsigned char v36[8] = 5;
  *(_OWORD *)(v36 + 9) = 0u;
  *(_OWORD *)(v36 + 11) = 0u;
  *(_OWORD *)(v36 + 13) = 0u;
  v36[15] = 0;
  *((unsigned char *)v36 + 128) = 14;
  if ((a1 & 0x400000) == 0)
  {
LABEL_22:
    if ((a1 & 0x800000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_76;
  }
LABEL_71:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v38 = v2[2];
  unint64_t v37 = v2[3];
  if (v38 >= v37 >> 1) {
    int v2 = sub_1B62D96F4(v37 > 1, v38 + 1, 1, v2);
  }
  v2[2] = v38 + 1;
  BOOL v39 = &v2[14 * v38];
  *((_OWORD *)v39 + 2) = v9[115];
  *((unsigned char *)v39 + 48) = 0;
  v39[8] = 6;
  *(_OWORD *)(v39 + 9) = 0u;
  *(_OWORD *)(v39 + 11) = 0u;
  *(_OWORD *)(v39 + 13) = 0u;
  v39[15] = 0;
  *((unsigned char *)v39 + 128) = 14;
  if ((a1 & 0x800000) == 0)
  {
LABEL_23:
    if ((a1 & 0x1000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_81;
  }
LABEL_76:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v41 = v2[2];
  unint64_t v40 = v2[3];
  if (v41 >= v40 >> 1) {
    int v2 = sub_1B62D96F4(v40 > 1, v41 + 1, 1, v2);
  }
  v2[2] = v41 + 1;
  unint64_t v42 = &v2[14 * v41];
  *((_OWORD *)v42 + 2) = v9[115];
  *((unsigned char *)v42 + 48) = 0;
  v42[8] = 7;
  *(_OWORD *)(v42 + 9) = 0u;
  *(_OWORD *)(v42 + 11) = 0u;
  *(_OWORD *)(v42 + 13) = 0u;
  v42[15] = 0;
  *((unsigned char *)v42 + 128) = 14;
  if ((a1 & 0x1000000) == 0)
  {
LABEL_24:
    if ((a1 & 0x4000000) == 0) {
      return v2;
    }
    goto LABEL_86;
  }
LABEL_81:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v44 = v2[2];
  unint64_t v43 = v2[3];
  if (v44 >= v43 >> 1) {
    int v2 = sub_1B62D96F4(v43 > 1, v44 + 1, 1, v2);
  }
  v2[2] = v44 + 1;
  uint64_t v45 = &v2[14 * v44];
  *((_OWORD *)v45 + 2) = v9[115];
  *((unsigned char *)v45 + 48) = 0;
  unsigned char v45[8] = 8;
  *(_OWORD *)(v45 + 9) = 0u;
  *(_OWORD *)(v45 + 11) = 0u;
  *(_OWORD *)(v45 + 13) = 0u;
  v45[15] = 0;
  *((unsigned char *)v45 + 128) = 14;
  if ((a1 & 0x4000000) != 0)
  {
LABEL_86:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v2 = sub_1B62D96F4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v47 = v2[2];
    unint64_t v46 = v2[3];
    if (v47 >= v46 >> 1) {
      int v2 = sub_1B62D96F4(v46 > 1, v47 + 1, 1, v2);
    }
    v2[2] = v47 + 1;
    int v48 = &v2[14 * v47];
    *((_OWORD *)v48 + 2) = xmmword_1B6ECE740;
    *((unsigned char *)v48 + 48) = 0;
    unsigned char v48[8] = 1;
    *(_OWORD *)(v48 + 9) = 0u;
    *(_OWORD *)(v48 + 11) = 0u;
    *(_OWORD *)(v48 + 13) = 0u;
    v48[15] = 0;
    *((unsigned char *)v48 + 128) = 13;
  }
  return v2;
}

uint64_t sub_1B630D06C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B630D0A4(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1B630D0DC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B630D140(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2 != 1)
  {
    sub_1B6312CF0(result, a2);
    sub_1B6312CF0(a6, a7);
    sub_1B6312CF0(a11, a12);
    sub_1B6312CF0(a16, a17);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B630D244(unint64_t a1, id a2, void *a3)
{
  uint64_t v4 = v3;
  unsigned __int8 v8 = objc_msgSend(a2, sel_supportsFamily_, 5001);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B6E32C18();
    if (v9) {
      goto LABEL_3;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_27;
  }
LABEL_3:
  char v53 = v8;
  uint64_t v10 = 0;
  unint64_t v11 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = (void *)MEMORY[0x1BA9B4580](v10, a1);
    }
    else
    {
      unint64_t v12 = *(void **)(a1 + 8 * v10 + 32);
      swift_unknownObjectRetain();
    }
    if (!objc_msgSend(v12, sel_index)) {
      break;
    }
    swift_unknownObjectRelease();
    if (v9 == ++v10) {
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1EB97D6E8 != -1) {
    swift_once();
  }
  if (byte_1EB99799C == 1)
  {
    uint64_t v13 = swift_dynamicCastObjCProtocolConditional();
    if (!v13) {
      goto LABEL_34;
    }
    unint64_t v14 = (void *)v13;
    swift_unknownObjectRetain();
    id v15 = objc_msgSend(a2, sel_newArgumentEncoderWithBufferBinding_, v14);
    if ((uint64_t)objc_msgSend(v15, sel_encodedLength) < 1
      || (objc_msgSend(v15, sel_setArgumentBuffer_offset_, a3, 0),
          unint64_t v16 = objc_msgSend(v15, sel_constantDataAtIndex_, 0),
          uint64_t v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents),
          id v18 = a3,
          uint64_t v19 = v16 - v17,
          v19 < 0))
    {
      uint64_t v20 = 0;
    }
    else if (v19 >= (uint64_t)objc_msgSend(v18, sel_length))
    {
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = v19;
    }
    id v48 = objc_msgSend(v14, sel_bufferStructType);
    if (!v48)
    {
      sub_1B6E328C8();
      sub_1B62F3064(0, &qword_1E9DD6760);
      sub_1B6E32B18();
      sub_1B6E31948();
      sub_1B6AEE23C();
      swift_allocError();
      *uint64_t v52 = 0;
      v52[1] = 0xE000000000000000;
      swift_willThrow();
      swift_unknownObjectRelease();
      goto LABEL_43;
    }
    uint64_t v49 = v48;
    sub_1B631010C(29796, 0xE200000000000000, (id)v20, 4, v48);
    if (v3)
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      return;
    }
    sub_1B631010C(1701669236, 0xE400000000000000, (id)(v20 + 4), 4, v49);
    sub_1B630F77C(7103081, 0xE300000000000000, 10, (id)0xD0, (id)8, v49, v53);
    sub_1B630F77C(0x70616D5F727276, 0xE700000000000000, 12, 0, (id)0x18, v49, v53);
    sub_1B630FBD8(0x6E61696461727269, 0xEA00000000006563, 20, (id)0x20, v49, v53);
    sub_1B630FBD8(0x65636E6169646172, 0xE800000000000000, 21, (id)0x28, v49, v53);
    sub_1B630FBD8(0x54554C66647262, 0xE700000000000000, 22, (id)0x30, v49, v53);
    sub_1B630FBD8(0x614D776F64616873, 0xE900000000000070, 23, (id)0x38, v49, v53);
    sub_1B630F77C(0x696E556C65786F76, 0xE800000000000000, 33, (id)0x60, (id)0x40, v49, v53);
    sub_1B630FBD8(0x7865547474616373, 0xE800000000000000, 34, (id)0x48, v49, v53);
    uint64_t v4 = 0;

    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_21:
  uint64_t v21 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v22 = (void *)MEMORY[0x1BA9B4580](v21, a1);
    }
    else
    {
      unint64_t v22 = *(void **)(a1 + 8 * v21 + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v22, sel_index) == (id)1) {
      break;
    }
    swift_unknownObjectRelease();
    if (v9 == ++v21) {
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_dynamicCastObjCProtocolConditional();
  if (!v23)
  {
LABEL_34:
    sub_1B6E328C8();
    sub_1B62F3064(0, (unint64_t *)&qword_1EB97D7E0);
    sub_1B6E32B18();
    sub_1B6E31948();
    sub_1B6AEE23C();
    swift_allocError();
    *unint64_t v47 = 0;
    v47[1] = 0xE000000000000000;
    swift_willThrow();
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v24 = (void *)v23;
  swift_unknownObjectRetain();
  id v25 = objc_msgSend(v24, sel_bufferStructType);
  if (!v25)
  {
    sub_1B6E328C8();
    sub_1B62F3064(0, &qword_1E9DD6760);
    sub_1B6E32B18();
    sub_1B6E31948();
    sub_1B6AEE23C();
    swift_allocError();
    *uint64_t v50 = 0;
    v50[1] = 0xE000000000000000;
    swift_willThrow();
LABEL_43:
    swift_unknownObjectRelease_n();
    return;
  }
  unint64_t v26 = v25;
  if (objc_msgSend(v24, sel_bufferDataSize) == (id)1152)
  {
    int KeyPath = swift_getKeyPath();
    sub_1B630E520(0xD000000000000011, 0x80000001B6F46760, KeyPath, v26);
    if (!v4)
    {
      swift_release();
      int v28 = swift_getKeyPath();
      sub_1B630E520(0xD000000000000011, 0x80000001B6F46780, v28, v26);
      swift_release();
      int v29 = swift_getKeyPath();
      sub_1B630E520(0x6F72665F6A6F7270, 0xEE00776569765F6DLL, v29, v26);
      swift_release();
      int v30 = swift_getKeyPath();
      sub_1B630E520(0x6F72665F77656976, 0xEE006A6F72705F6DLL, v30, v26);
      swift_release();
      int v31 = swift_getKeyPath();
      sub_1B630EFFC(0x6D61635F73777263, 0xEF736F705F617265, v31, v26);
      swift_release();
      int v32 = swift_getKeyPath();
      sub_1B631047C(0xD00000000000001BLL, 0x80000001B6F467A0, v32, v26);
      swift_release();
      int v33 = swift_getKeyPath();
      sub_1B631047C(0xD00000000000001DLL, 0x80000001B6F467C0, v33, v26);
      swift_release();
      int v34 = swift_getKeyPath();
      sub_1B630E520(0xD000000000000012, 0x80000001B6F467E0, v34, v26);
      swift_release();
      int v35 = swift_getKeyPath();
      sub_1B630E08C(0xD000000000000016, 0x80000001B6F46800, v35, v26);
      swift_release();
      int v36 = swift_getKeyPath();
      sub_1B630E08C(0xD000000000000010, 0x80000001B6F46820, v36, v26);
      swift_release();
      int v37 = swift_getKeyPath();
      sub_1B630EC3C(0x74726F7077656976, 0xED0000746E756F43, v37, v26);
      swift_release();
      int v38 = swift_getKeyPath();
      sub_1B630EC3C(0xD000000000000016, 0x80000001B6F46840, v38, v26);
      swift_release();
      int v39 = swift_getKeyPath();
      sub_1B630E08C(0x536D6F724663646ELL, 0xED00006E65657263, v39, v26);
      swift_release();
      int v40 = swift_getKeyPath();
      sub_1B630F3BC(0x7261467261656ELL, 0xE700000000000000, v40, v26);
      swift_release();
      int v41 = swift_getKeyPath();
      sub_1B630F3BC(0xD000000000000014, 0x80000001B6F46860, v41, v26);
      swift_release();
      int v42 = swift_getKeyPath();
      sub_1B630EC3C(0x6361704F65646166, 0xEB00000000797469, v42, v26);
      swift_release();
      int v43 = swift_getKeyPath();
      sub_1B630F3BC(0xD000000000000029, 0x80000001B6F46880, v43, v26);
      swift_release();
      int v44 = swift_getKeyPath();
      sub_1B630EFFC(0xD000000000000017, 0x80000001B6F468B0, v44, v26);
      swift_release();
      int v45 = swift_getKeyPath();
      sub_1B630EFFC(0xD000000000000011, 0x80000001B6F468D0, v45, v26);
      swift_release();
      int v46 = swift_getKeyPath();
      sub_1B630E08C(0xD000000000000010, 0x80000001B6F468F0, v46, v26);
    }
    swift_unknownObjectRelease_n();

    swift_release();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_bufferDataSize);
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    void *v51 = 0xD000000000000020;
    v51[1] = 0x80000001B6F46730;
    swift_willThrow();
    swift_unknownObjectRelease_n();
  }
}

void sub_1B630E08C(uint64_t a1, uint64_t a2, int a3, id a4)
{
  id v6 = objc_msgSend(a4, sel_members);
  sub_1B630FF28();
  unint64_t v7 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  unsigned __int8 v8 = sub_1B630EABC(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = (id)sub_1B6E32748();
    if (objc_msgSend(v8, sel_offset) == v9)
    {
      if (sub_1B630E8E0() == 16)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      sub_1B630E8E0();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      objc_msgSend(v8, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    *unint64_t v11 = v12;
    v11[1] = v13;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    *uint64_t v10 = 0x20676E697373694DLL;
    v10[1] = 0xE800000000000000;
    swift_willThrow();
  }
}